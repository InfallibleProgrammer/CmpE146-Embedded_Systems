
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x00022c38 vaddr 0x00022c38 paddr 0x00022c38 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x00012c40 memsz 0x00012c40 flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x00022c40 align 2**16
         filesz 0x000002fc memsz 0x000002fc flags rw-
    LOAD off    0x0002c300 vaddr 0x2007c300 paddr 0x00022f3c align 2**16
         filesz 0x00000000 memsz 0x000004dc flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00012c36  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002fc  2007c000  00022c40  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004dc  2007c300  00022f3c  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  00022c38  00022c38  00022c38  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   0004695b  00000000  00000000  0002c2fc  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000bc59  00000000  00000000  00072c57  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001850  00000000  00000000  0007e8b0  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00013362  00000000  00000000  00080100  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000c55c  00000000  00000000  00093462  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  0009f9be  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  0009fa3d  2**0  CONTENTS, READONLY
 11 .debug_loc    00014650  00000000  00000000  0009fa6e  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002848  00000000  00000000  000b40be  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00006594  00000000  00000000  000b6908  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
00022c38 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
000105c0 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
00010654 l     F .text	00000014 sys_clock_pll0_feed()
00010668 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00010974 l     F .text	000000e8 nordic_transfer
00010a5c l     F .text	00000020 nordic_readRegister
00010a7c l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00010df0 l     F .text	00000070 nrf_driver_init
00010f08 l     F .text	00000034 nrf_irq_callback
00010e60 l     F .text	00000050 nrf_driver_app_recv
00010eb0 l     F .text	00000058 nrf_driver_send
00010f3c l     F .text	00000022 nrf_driver_receive
00010f5e l     F .text	00000028 nrf_driver_get_timer
2007c31c l     O .bss	00000004 g_ack_queue
2007c320 l     O .bss	00000004 g_nrf_activity_sem
2007c324 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 mesh.c
00011020 l     F .text	00000026 mesh_incr_soft_timers_for_arr
00011048 l     F .text	0000004c mesh_update_soft_timers
00011094 l     F .text	0000003c mesh_send_packet
000110d0 l     F .text	00000034 mesh_send_retry_packet
00011104 l     F .text	00000024 mesh_find_rte_tbl_entry
00011128 l     F .text	00000028 mesh_update_rte_scores
00011150 l     F .text	00000040 mesh_get_pnd_pkt_slot
00011190 l     F .text	00000090 mesh_pending_packets_add
00011220 l     F .text	00000058 mesh_get_rte_to_modify
00011278 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
000116a2 l     F .text	0000001a mesh_send_ack
2007c328 l     O .bss	00000014 g_driver
2007c33c l     O .bss	00000001 g_error_mask
2007c33d l     O .bss	00000001 g_locked
2007c33e l     O .bss	00000090 g_mesh_pnd_pkts
2007c3ce l     O .bss	0000000c g_mesh_stats
2007c3da l     O .bss	00000018 g_our_name
2007c3f2 l     O .bss	00000048 g_our_pnd_pkts
2007c43a l     O .bss	0000000c g_pkt_hist
2007c446 l     O .bss	00000001 g_rpt_node
2007c447 l     O .bss	00000010 g_rte_table
2007c457 l     O .bss	00000001 s_next_packet_id.5115
2007c458 l     O .bss	00000004 s_prev_time_ms.5129
2007c08c l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 ff.c
000119dc l     F .text	00000038 mem_cpy
00011a14 l     F .text	0000000e mem_set
00011a22 l     F .text	0000001e sum_sfn
00011a40 l     F .text	00000040 get_ldnumber
00011a80 l     F .text	00000046 sync_window.part.1
00011ac6 l     F .text	0000000c sync_window
00011ad4 l     F .text	00000074 sync_fs
00011b48 l     F .text	00000034 move_window
00011b7c l     F .text	0000004c check_fs
00011bc8 l     F .text	00000220 find_volume
00011de8 l     F .text	0000003a validate
00011e22 l     F .text	0000001a unlock_fs
00011ef8 l     F .text	00000080 dir_sdi
0001204a l     F .text	000000a0 create_chain
000120ea l     F .text	000000ec dir_next
000121d8 l     F .text	00000120 dir_find.part.9
000122f8 l     F .text	000002c0 follow_path
000125b8 l     F .text	00000042 dir_alloc
000125fc l     F .text	00000208 dir_register
00012804 l     F .text	00000058 remove_chain
2007c45c l     O .bss	00000001 CurrVol
2007c460 l     O .bss	00000008 FatFs
2007c468 l     O .bss	00000002 Fsid
0001f610 l     O .text	00000080 ExCvt
0001f690 l     O .text	0000000d LfnOfs
0001f69e l     O .text	00000016 cst.6423
0001f6f8 l     O .text	00000016 vst.6422
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
0001f70e l     O .text	00000100 Tbl
0001f80e l     O .text	000001e0 tbl_lower.5776
0001f9ee l     O .text	000001e0 tbl_upper.5777
00000000 l    df *ABS*	00000000 sd.c
00013598 l     F .text	00000012 sys_get_uptime_ms
000135ac l     F .text	00000030 ssp1_set_max_clock
000135dc l     F .text	00000014 ssp1_exchange_byte
2007c46a l     O .bss	00000001 g_card_type
2007c095 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
00013d88 l     F .text	00000020 flash_get_mem_size_bytes()
00013da8 l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00013e1c l     F .text	000000ac ssp1_exchange_data
00013ec8 l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
00013ef0 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00013f34 l     F .text	00000040 flash_wait_for_ready()
00014188 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c46c l     O .bss	00000004 g_sector_count
2007c470 l     O .bss	00000001 g_flash_capacity
2007c472 l     O .bss	00000002 g_flash_pagesize
0001fbd8 l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 gpio.cpp
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c474 l     O .bss	00000080 g_ir_timings
2007c4f4 l     O .bss	00000002 g_signal_count
2007c4f8 l     O .bss	00000004 g_last_decoded_signal
0001fbfc l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 c_tlm_comp.c
00014680 l     F .text	00000010 tlm_component_find_by_name
2007c4fc l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 file_logger.c
000147c4 l     F .text	000000b4 logger_write_to_file
00014878 l     F .text	000000d0 logger_task
2007c500 l     O .bss	00000002 g_buffer_watermark
2007c504 l     O .bss	00000004 g_empty_buffer_queue
2007c508 l     O .bss	00000002 g_highest_file_write_time
2007c50c l     O .bss	00000004 g_write_buffer_queue
2007c510 l     O .bss	00000004 gp_file_buffer
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
00014a6e l     F .text	00000024 for_each_recur_alarm_callback
00014a92 l     F .text	0000005a for_each_alarm_callback
2007c514 l     O .bss	00000010 g_list_recur_alarms
2007c524 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 memory.cpp
2007c528 l     O .bss	00000004 g_sbrk_calls
2007c52c l     O .bss	00000004 g_last_sbrk_ptr
2007c530 l     O .bss	00000004 g_next_heap_ptr
2007c534 l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00014d92 l     F .text	00000056 remap_fatfs_errors
00014de8 l     F .text	0000004c findslot
00014e34 l     F .text	00000028 remap_handle
2007c53c l     O .bss	00000004 g_input_dev_fptr
2007c540 l     O .bss	00000004 g_output_dev_fptr
2007c544 l     O .bss	00000001 initialized.8353
2007c548 l     O .bss	00000060 openfiles
2007c5a8 l     O .bss	00000004 slot.8319
2007c098 l     O .data	00000004 lastfh.8320
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c5ac l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 eint.c
00015888 l     F .text	0000002c handle_eint_list
000158b4 l     F .text	00000038 eint3_enable.isra.0
2007c5b0 l     O .bss	00000004 gp_port0_falling_list
2007c5b4 l     O .bss	00000004 gp_port0_rising_list
2007c5b8 l     O .bss	00000004 gp_port2_falling_list
2007c5bc l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 adc.c
0001599c l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c5d4 l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_timers.c
00015d58 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 can.c
00015e84 l     F .text	00000032 CAN_tx_now
00015eb8 l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 port.c
00015f84 l     F .text	00000012 prvTaskExitError
00015fe0 l       .text	00000000 pxCurrentTCBConst2
00016060 l       .text	00000000 pxCurrentTCBConst
2007c5dc l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c5e0 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000161ba l     F .text	00000066 prvCopyDataToQueue
00016220 l     F .text	0000004a prvNotifyQueueSetContainer
0001626a l     F .text	00000028 prvCopyDataFromQueue
00016292 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00016774 l     F .text	00000024 prvResetNextTaskUnblockTime
00016798 l     F .text	0000008c prvAddCurrentTaskToDelayedList
2007c5ec l     O .bss	00000004 pxDelayedTaskList
2007c5f0 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c5f4 l     O .bss	000000c8 pxReadyTasksLists
2007c6bc l     O .bss	00000004 ulTaskSwitchedInTime
2007c6c0 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c6c4 l     O .bss	00000004 uxPendedTicks
2007c6c8 l     O .bss	00000004 uxSchedulerSuspended
2007c6cc l     O .bss	00000004 uxTaskNumber
2007c6d0 l     O .bss	00000004 uxTopReadyPriority
2007c6d4 l     O .bss	00000014 xDelayedTaskList1
2007c6e8 l     O .bss	00000014 xDelayedTaskList2
2007c6fc l     O .bss	00000004 xNextTaskUnblockTime
2007c700 l     O .bss	00000004 xNumOfOverflows
2007c704 l     O .bss	00000014 xPendingReadyList
2007c718 l     O .bss	00000004 xSchedulerRunning
2007c71c l     O .bss	00000014 xSuspendedTaskList
2007c730 l     O .bss	00000004 xTickCount
2007c734 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 handlers.cpp
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
00016fc8 l     F .text	0000000c hl_print_line()
00016fd4 l     F .text	0000002c ssp_set_max_clock
00017000 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 main.cpp
00017664 l     F .text	00000014 ssp0_exchange_byte
000178ac l     F .text	00000074 _GLOBAL__sub_I_CS
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00018e38 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00019204 l     F .text	000001c0 validate_structure
00020680 l     O .text	00000030 DAYS_IN_MONTH
000206b0 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
0001a6e4 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strtod.c
0001abf4 l     F .text	00000042 sulp
00020778 l     O .text	00000014 fpi.6129
0002078c l     O .text	00000014 fpinan.6165
000207a0 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
0001b848 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c7b0 l     O .bss	0000000b __tzname_dst
2007c7bb l     O .bss	0000000b __tzname_std
2007c7c8 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
0001c0a0 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0001cd84 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0001d256 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2b8 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00020a08 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
0001e2f8 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
0001eba2 l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c7d4 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00015b18 g     F .text	0000001c Uart3::Uart3()
0001ee48 g     F .text	00000012 _malloc_usable_size_r
000198a4 g     F .text	000000b8 __cvt
00010434 g     F .text	00000054 lpc_sys_setup_system_timer
0001e86c g     F .text	000000c6 _scanf_chars
00017b34 g     F .text	00000004 std::type_info::__is_function_p() const
0001f390 g     F .text	0000002c .hidden __aeabi_dcmpun
000157b8 g     F .text	000000d0 rtc_init
0001dc6e g     F .text	00000042 __any_on
0001d47c g     F .text	00000020 _isatty_r
0001f354 g     F .text	00000012 .hidden __aeabi_dcmple
0001ab86 g     F .text	00000010 strcpy
0001800c g     F .text	00000018 .hidden __ashldi3
00014e94 g     F .text	00000004 _getpid
0001a558 g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
0001f290 g     F .text	0000007a .hidden __cmpdf2
0001d4bc g     F .text	00000024 _lseek_r
00011e52 g     F .text	000000a6 get_fat
000156ec g     F .text	0000001c RIT_IRQHandler
00011414 g     F .text	000000f8 mesh_form_pkt
0001f290 g     F .text	0000007a .hidden __eqdf2
00014178 g     F .text	00000010 flash_supports_metadata
0001fd3c g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
0001d450 g     F .text	00000024 _gettimeofday_r
00017678 g     F .text	00000060 writeSCI(unsigned char, unsigned short)
00016004 g     F .text	00000014 vPortExitCritical
00018338 g     F .text	0000005a .hidden __floatdidf
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c758  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001aa24 g     F .text	00000024 _kill_r
0001a528 g     F .text	00000030 printf
00010488 g     F .text	0000002c sys_get_uptime_us
0001ab46 g     F .text	00000024 __sseek
00018eac g     F .text	00000060 __sinit
00015af0  w    F .text	00000014 Uart3::~Uart3()
0001be98 g     F .text	000000a4 __swbuf_r
2007c7cc g     O .bss	00000004 _daylight
2007c74c  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
00017a2c g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00020548 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
0001fde0  w    O .text	0000001c vtable for Uart3
00018e80 g     F .text	0000002c __sfmoreglue
00014d14 g     F .text	00000004 __malloc_unlock
0001462a g     F .text	00000030 I2C_Temp::getCelsius()
00017ebc g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001b828 g     F .text	00000020 _strtod_r
000187f8 g     F .text	00000136 .hidden __divsf3
00013948 g     F .text	00000098 sd_read
0001fd94  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0001cdee g     F .text	0000002a __hexdig_fun
0001555c g     F .text	0000006c UartDev::getChar(char*, unsigned int)
0001fdb0  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00015d78 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
000191c0 g     F .text	00000034 memmove
00010b08 g     F .text	00000008 nordic_clear_packet_sent_flag
2007c5d8  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
00019048 g     F .text	0000001c __locale_ctype_ptr
000164d8 g     F .text	00000080 xQueueGenericSendFromISR
0001d4e0 g     F .text	00000068 _Balloc
2007c778 g     O .bss	00000008 datareq
00022c40 g       .ARM.exidx	00000000 __exidx_end
00015708 g     F .text	00000048 rtc_gettime
000100d8 g       .text	00000000 __data_section_table_end
0001596c g     F .text	00000030 eint3_enable_port0
00010148  w    F .text	00000010 I2C1_IRQHandler
00014bb4 g     F .text	0000000e is_freertos_running
00014306 g     F .text	00000014 GPIO::read() const
0001476c g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
0001f280 g     F .text	0000008a .hidden __gtdf2
00018c98 g     F .text	0000000c __errno
0001fd30 g     O .text	0000000c typeinfo for UartDev
000106e0 g     F .text	000000b4 sys_clock_configure()
00019784 g     F .text	00000064 _mallinfo_r
00016f10 g     F .text	00000010 vRunTimeStatIsrExit
0001d49c g     F .text	00000004 __localeconv_l
00014326 g     F .text	0000000c GPIO::setLow()
000170ac  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c5e8 g     O .bss	00000004 pxCurrentTCB
000135f0 g     F .text	0000002e wait_ready
000158ec g     F .text	00000080 EINT3_IRQHandler
00014450 g     F .text	00000064 IR_Sensor::decodeIrCode()
00010abc g     F .text	00000016 nordic_standby1_to_tx_mode1
00011408 g     F .text	0000000c mesh_get_node_address
000144b4 g     F .text	00000034 IR_Sensor::init()
0001cd60 g     F .text	00000024 _fstat_r
2007c7d8 g     O .bss	00000004 errno
0001e934 g     F .text	000001ec _scanf_i
0001ab0a g     F .text	00000004 __seofread
00022c40 g       .ARM.exidx	00000000 _etext
00010ba0 g     F .text	0000003e nordic_set_intr_signals
0001f31c g     F .text	00000010 .hidden __aeabi_cdcmple
2007c5cc  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00010aa8 g     F .text	00000008 nordic_clear_all_intr_flags
00014294 g     F .text	00000050 GPIO::GPIO(LPC1758_GPIO_Type)
000151fa g     F .text	00000016 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
00018480 g     F .text	00000160 .hidden __aeabi_fadd
0001847c g     F .text	00000164 .hidden __subsf3
00013574 g     F .text	00000024 ff_wtoupper
0001e81c g     F .text	00000050 _vfiscanf_r
0001092c g     F .text	00000048 lpc_pclk
00010148  w    F .text	00000010 TIMER3_IRQHandler
00015e4c g     F .text	00000014 I2C2::I2C2()
00010d1a g     F .text	0000000c nordic_set_rx_pipe0_addr
00014354 g     F .text	0000002c GPIO::enableOpenDrainMode(bool)
00015c04 g     F .text	00000024 UART0_IRQHandler
000191aa g     F .text	00000016 memcpy
00016cb0 g     F .text	00000020 vTaskPlaceOnEventList
0001d2a0 g     F .text	00000120 __hexnan
00015c44 g     F .text	000000c0 ssp1_dma_transfer_block
0001f30c g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
0001a860 g     F .text	0000015c setvbuf
00016f20  w    F .text	0000004c Storage::getFlashDrive()
0001fdfc  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
00018e2c g     F .text	0000000c _cleanup_r
00017954 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001ddb4 g     F .text	000001e8 _svfprintf_r
000182c8 g     F .text	00000022 .hidden __floatsidf
00010b94 g     F .text	0000000c nordic_flush_rx_fifo
0001f288 g     F .text	00000082 .hidden __ltdf2
00016064 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
00013cb0 g     F .text	00000026 disk_initialize
00017960 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00018970 g     F .text	00000000 .hidden __aeabi_uldivmod
0001530c g     F .text	00000176 I2C_Base::i2cStateMachine()
0001a610 g     F .text	00000010 puts
000205b4 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
0001611e g     F .text	0000001a vPortFree
0001e81c g     F .text	00000050 _vfscanf_r
0001dbea g     F .text	00000050 __ratio
0001a830 g     F .text	00000030 iscanf
0001458a g     F .text	00000004 LED::init()
000134f0 g     F .text	00000004 ff_del_syncobj
0001fe88  w    O .text	00000007 typeinfo name for Uart0
0001912c g     F .text	00000010 malloc
000156b0  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
000144e8 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001a9c4 g     F .text	00000050 _raise_r
000150c4 g     F .text	00000010 _fstat
00015d04 g     F .text	00000030 spi1_lock
000185e8 g     F .text	0000001c .hidden __aeabi_i2f
00020940 g     O .text	000000c8 __mprec_tens
0001be7c g     F .text	0000001c vsnprintf
00016020 g     F .text	00000044 xPortPendSVHandler
00018394 g     F .text	00000040 .hidden __fixunsdfsi
00016154 g     F .text	00000018 vListInsertEnd
000137cc g     F .text	0000016c sd_initialize
00010cf8 g     F .text	00000016 nordic_set_addr_width
000150f8 g     F .text	000000d8 I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)
0001e016 g     F .text	0000003a __ssrefill_r
00010d28 g     F .text	000000c8 nordic_init
0001aa48 g     F .text	00000004 _getpid_r
00022c36 g       .text	00000000 __symbol_table_end
00013cd6 g     F .text	00000010 disk_status
00010f88 g     F .text	0000004c wireless_init
0001ecc0 g     F .text	0000002c strtoul
2007c538 g     O .bss	00000004 .hidden __dso_handle
000182a8 g     F .text	0000001e .hidden __aeabi_ui2d
00015de4 g     F .text	00000068 I2C2::init(unsigned int)
0001d4a0 g     F .text	0000001c _localeconv_r
00017b64 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001d704 g     F .text	00000012 __i2b
000179a0 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000189a0 g     F .text	000002dc .hidden __udivmoddi4
00010c44 g     F .text	00000024 nordic_set_channel
00018024 g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001a810 g     F .text	00000020 _sbrk_r
00011664 g     F .text	0000003e mesh_send
0001fe18  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
00014380 g     F .text	0000001a GPIO::~GPIO()
0001eb20 g     F .text	00000024 _read_r
0001614e g     F .text	00000006 vListInitialiseItem
00013d56 g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
0001f340 g     F .text	00000012 .hidden __aeabi_dcmplt
00015f5c g     F .text	00000028 CAN_IRQHandler
00018e08 g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
00010148  w    F .text	00000010 PLL1_IRQHandler
0001fd6c g     O .text	00000009 typeinfo name for CharDev
00014518 g     F .text	00000038 LED_Display::init()
000182ec g     F .text	0000003a .hidden __extendsfdf2
0001e050 g     F .text	000002a8 __ssvfscanf_r
2007c768 g     O .bss	00000008 RST
0001f0b0 g     F .text	000001d0 .hidden __aeabi_ddiv
00010148  w    F .text	00000010 SSP0_IRQHandler
00010c68 g     F .text	0000002c nordic_set_air_data_rate
00018030 g     F .text	00000276 .hidden __adddf3
00010148  w    F .text	00000010 CANAct_IRQHandler
00020570 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001daa8 g     F .text	000000a4 __b2d
00022c36 g       .text	00000000 __exidx_start
0001ee5c g     F .text	00000254 .hidden __aeabi_dmul
00010200 g     F .text	0000000c sys_get_boot_type
000150d4 g     F .text	00000024 _isatty
00017988 g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010d0e g     F .text	0000000c nordic_set_tx_address
00014c54 g     F .text	00000004 operator delete(void*)
00020674 g     O .text	00000004 _global_impure_ptr
00017b78 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001dcb0 g     F .text	0000004c _realloc_r
00018ff8 g     F .text	00000048 __libc_init_array
000136d0 g     F .text	0000004c xmit_datablock
000154b8 g     F .text	0000005c UartDev::putChar(char, unsigned int)
000146b4 g     F .text	0000006c tlm_component_add
00010b80 g     F .text	00000014 nordic_read_rx_fifo
00020918 g     O .text	00000028 __mprec_bigtens
0001d5ec g     F .text	0000007c __s2b
00018c80 g     F .text	0000000e abort
000182a8 g     F .text	0000001e .hidden __floatunsidf
00013f74 g     F .text	00000098 flash_initialize
00014be4 g     F .text	0000006c _sbrk
0001d96e g     F .text	00000034 __mcmp
00016100 g     F .text	0000001e pvPortMalloc
0001fe20  w    O .text	00000007 typeinfo name for Uart2
00015bd4  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
00014e98 g     F .text	00000004 _init
000104ec  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
00015e60 g     F .text	00000024 I2C2_IRQHandler
00016138 g     F .text	00000016 vListInitialise
00014e9c g     F .text	00000034 syscalls_init
00015af0  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001b96c g     F .text	0000002c strtol
00015b58  w    F .text	00000014 Uart2::~Uart2()
00018000 g     F .text	0000000a std::terminate()
000183d4 g     F .text	0000009e .hidden __aeabi_d2f
000163b0 g     F .text	00000104 xQueueGenericSend
0001847c g     F .text	00000164 .hidden __aeabi_fsub
00014aec g     F .text	000000ac RTC_IRQHandler
0001ac38 g     F .text	00000bf0 _strtod_l
0001d27a g     F .text	00000026 __match
2007c7dc g       .bss	00000000 _ebss
00017b8c g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
00014380 g     F .text	0000001a GPIO::~GPIO()
000108e6 g     F .text	00000006 __set_PSP
0001553c g     F .text	00000020 UartDev::flush()
0001be7c g     F .text	0000001c vsniprintf
000204ec g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0001bb12 g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0001d668 g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00010ce4 g     F .text	00000014 nordic_set_payload_for_pipe
0001f3bc g     F .text	0000004e .hidden __fixdfsi
00016e60 g     F .text	00000070 xTaskPriorityDisinherit
000140e0 g     F .text	00000044 flash_write_permanent_id
2007c5c4 g     O .bss	00000004 g_adc_result_queue
00018614 g     F .text	0000007c .hidden __floatdisf
0001fe48  w    O .text	0000001c vtable for Uart2
00017104 g     F .text	00000560 high_level_init()
00015688 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00017b32 g     F .text	00000002 std::type_info::~type_info()
00010794 g     F .text	000000a8 sys_get_cpu_clock
000143ea  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
0001020c g     F .text	00000228 low_level_init()
2007c2b0 g     O .data	00000008 _tzname
00016f8c  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
00016cd0 g     F .text	00000070 xTaskRemoveFromEventList
000160dc g     F .text	00000024 vApplicationMallocFailedHook
2007c2f8 g     O .data	00000004 environ
00015be8 g     F .text	0000001c Uart0::Uart0()
000105fc g     F .text	00000058 isr_hard_fault_handler
00017a02 g     F .text	00000004 operator delete(void*, unsigned int)
00018030 g     F .text	00000276 .hidden __aeabi_dadd
0001f288 g     F .text	00000082 .hidden __ledf2
2007c75c  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
000151d8 g     F .text	0000001a I2C_Base::readReg(unsigned char, unsigned char)
00014798 g     F .text	0000002a c_list_for_each_elm
00014734 g     F .text	00000038 c_list_insert_elm_end
0001d830 g     F .text	0000009c __pow5mult
00014334 g     F .text	00000020 GPIO::enablePullUp()
00018328 g     F .text	0000006a .hidden __aeabi_ul2d
00010ae4 g     F .text	00000024 nordic_standby1_to_rx
00010148  w    F .text	00000010 EINT1_IRQHandler
00010504 g     F .text	000000bc TIMER1_IRQHandler
000145f0 g     F .text	00000018 Switches::getSwitchValues()
00020614 g     O .text	00000020 __sf_fake_stderr
0001fe28  w    O .text	00000020 typeinfo for Uart2
00017ff0 g     F .text	00000010 std::get_terminate()
00010b1c g     F .text	0000004c nordic_mode1_send_single_packet
00013644 g     F .text	0000008c rcvr_datablock
00015b9c g     F .text	00000024 UART2_IRQHandler
00015514  w    F .text	00000014 UartDev::~UartDev()
00016090 g     F .text	00000014 rts_not_full_trace_get
000116bc g     F .text	0000001c mesh_get_num_routing_entries
0001dcfc g     F .text	000000b6 __ssputs_r
000113f0 g     F .text	00000018 mesh_set_node_address
00016ed0 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00015bc0  w    F .text	00000014 Uart0::~Uart0()
000179ca g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00017b64 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001f37c g     F .text	00000012 .hidden __aeabi_dcmpgt
00017920 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c738  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
0001e324 g     F .text	00000024 __sfputs_r
000145e4 g     F .text	00000006 Light_Sensor::getRawValue()
00019170 g     F .text	0000001c memchr
000199c8  w    F .text	00000470 _printf_float
00015d34 g     F .text	00000024 spi1_unlock
00016d58 g     F .text	0000004c xTaskCheckForTimeOut
000196ec g     F .text	00000098 _free_r
0001f368 g     F .text	00000012 .hidden __aeabi_dcmpge
00015b80 g     F .text	0000001c Uart2::Uart2()
00016f6c  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
0001083c g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
0001df9c g     F .text	0000007a _sungetc_r
000170ec  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00012dac g     F .text	00000024 f_close
00013938 g     F .text	00000010 sd_status
0001802c g     F .text	0000027a .hidden __aeabi_dsub
000193c4 g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
00010b78 g     F .text	00000008 nordic_clear_packet_available_flag
0001fe80  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
000169c8 g     F .text	00000010 vTaskSuspendAll
2007c5c8  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
000176d8 g     F .text	0000002c setVolume(unsigned char, unsigned char)
000205a4 g     O .text	0000000d typeinfo name for std::type_info
000169d8 g     F .text	0000000c xTaskGetTickCountFromISR
00018328 g     F .text	0000006a .hidden __floatundidf
0001416c g     F .text	0000000c flash_get_page_size
0001a670 g     F .text	00000074 rand
00014f6c g     F .text	00000060 _lseek
00017a24 g     F .text	00000006 __cxa_pure_virtual
0001d8cc g     F .text	000000a2 __lshift
000185e8 g     F .text	0000001c .hidden __floatsisf
0001619a g     F .text	00000020 uxListRemove
000143de  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
0001439a g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00012a06 g     F .text	00000170 f_read
0001aba6 g     F .text	00000024 strncmp
000159c0 g     F .text	00000048 ADC_IRQHandler
00017a8c g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001089c g     F .text	00000018 uart0_getchar
0001d716 g     F .text	00000118 __multiply
00016dd0 g     F .text	00000090 vTaskPriorityInherit
000134dc g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
000206e0 g     O .text	00000060 __month_lengths
0001abca g     F .text	0000002a strncpy
2007c780 g     O .bss	00000028 __malloc_current_mallinfo
0001db4c g     F .text	0000009e __d2b
2007c744  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
00016bf8 g     F .text	000000b8 vTaskSwitchContext
00017b32 g     F .text	00000002 std::type_info::~type_info()
00015be8 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
0001fd78 g     O .text	0000001c vtable for CharDev
000151f2 g     F .text	00000008 I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
00017b08 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000205c0 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
00010fd4 g     F .text	0000004c wireless_service
0001ec9c g     F .text	00000024 _strtoul_r
0001400c g     F .text	00000050 flash_read_sectors
00010b68 g     F .text	00000010 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
000187f8 g     F .text	00000136 .hidden __aeabi_fdiv
0001c058 g     F .text	00000020 _close_r
2007c5d0  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
000182c8 g     F .text	00000022 .hidden __aeabi_i2d
00011564 g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00015484 g     F .text	00000034 I2C_Base::handleInterrupt()
0001918c g     F .text	0000001e memcmp
00010148  w    F .text	00000010 USB_IRQHandler
00018604 g     F .text	0000008c .hidden __floatundisf
00017a2c g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001431a g     F .text	0000000c GPIO::setHigh()
0001aa94 g     F .text	00000054 sscanf
0001bf7c g     F .text	000000dc __swsetup_r
2007c5c0 g     O .bss	00000004 g_adc_mutex
000160a4 g     F .text	00000038 vApplicationStackOverflowHook
00018c7c  w    F .text	00000002 .hidden __aeabi_ldiv0
0001f0b0 g     F .text	000001d0 .hidden __divdf3
00018f0c g     F .text	00000078 __sfp
0001dc3a g     F .text	00000034 __copybits
00017b34 g     F .text	00000004 std::type_info::__is_pointer_p() const
00017090  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
000185e0 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c09c g     O .data	00000040 g_can_structs
0001be24 g     F .text	00000058 _vsnprintf_r
0001ee5c g     F .text	00000254 .hidden __muldf3
0001aae8 g     F .text	00000022 __sread
00014240 g     F .text	00000052 get_fattime
00014b98 g     F .text	0000001c delay_us
00015528  w    F .text	00000014 UartDev::~UartDev()
00010bde g     F .text	00000038 nordic_set_crc
00020a54 g     O .text	000021e2 APP_SYM_TABLE
000108cc g     F .text	0000001a uart0_puts
00015b58  w    F .text	00000014 Uart2::~Uart2()
000156b4 g     F .text	00000020 CharDev::CharDev()
00014d10 g     F .text	00000004 __malloc_lock
00020510 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
00018db4 g     F .text	00000054 _fflush_r
000196d0 g     F .text	0000001c _calloc_r
00015278 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
00020634 g     O .text	00000020 __sf_fake_stdin
0001bb10 g     F .text	00000002 __tz_lock
000191f4 g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
00017704 g     F .text	000001a8 main
0001fe64  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00014bc2 g     F .text	00000022 delay_ms
00010a9a g     F .text	0000000e nordic_is_tx_fifo_empty
000145ea g     F .text	00000004 Switches::init()
00014c58 g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00010b10 g     F .text	0000000c nordic_flush_tx_fifo
00018614 g     F .text	0000007c .hidden __aeabi_l2f
0001a620 g     F .text	00000050 srand
00015688 g     F .text	00000028 UartDev::UartDev(unsigned int*)
00015228 g     F .text	00000050 I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00012d22 g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014500 g     F .text	00000018 LED_Display::setRightDigit(char)
000116d8 g     F .text	000002d0 mesh_service
0001616c g     F .text	0000002e vListInsert
0001ab6a g     F .text	00000008 __sclose
2007c740  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001b948 g     F .text	00000024 _strtol_r
000183d4 g     F .text	0000009e .hidden __truncdfsf2
00015a08 g     F .text	00000074 adc0_init
0001d3c0 g     F .text	00000080 _findenv_r
00020a54 g       .text	00000000 __init_array_end
00015fc0 g     F .text	00000024 vPortSVCHandler
0001c1b8 g     F .text	00000ba8 _dtoa_r
000197e8 g     F .text	000000bc _malloc_r
0001bf3c g     F .text	0000001a __ascii_wctomb
0001b998 g     F .text	00000028 time
0001150c g     F .text	00000058 mesh_send_formed_pkt
00012fe8 g     F .text	000004f4 f_mkfs
00018338 g     F .text	0000005a .hidden __aeabi_l2d
00014590 g     F .text	00000050 LED::setAll(unsigned char)
0001285c g     F .text	0000007c f_mount
0001ecec g     F .text	00000072 __submore
0001ee46 g     F .text	00000002 __env_unlock
000204e0 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00014434 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
00018f84 g     F .text	00000038 _fwalk
000166f4 g     F .text	00000068 xQueueReceiveFromISR
00018604 g     F .text	0000008c .hidden __aeabi_ul2f
000139e0 g     F .text	000000b4 sd_write
0001637c g     F .text	00000032 xQueueGenericCreate
0001fdc0  w    O .text	00000020 typeinfo for Uart3
00018690 g     F .text	00000168 .hidden __mulsf3
00010108  w    F .text	00000010 isr_mem_fault
000151d0 g     F .text	00000008 I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001bb14 g     F .text	0000000c _tzset_unlocked
0001ab72 g     F .text	00000014 strcmp
0001aa94 g     F .text	00000054 siscanf
00010c16 g     F .text	00000018 nordic_power_up
00014e68 g     F .text	0000000c sys_set_inchar_func
00011f78 g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
0001f290 g     F .text	0000007a .hidden __nedf2
0001fd64 g     O .text	00000008 typeinfo for CharDev
000170d4  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001a528 g     F .text	00000030 iprintf
0001351a g     F .text	0000001e ff_rel_grant
00015b18 g     F .text	0000001c Uart3::Uart3()
00017a40 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00016af0 g     F .text	000000d8 xTaskResumeAll
0001e574 g     F .text	000002a8 __svfiscanf_r
00012dd0 g     F .text	0000014e f_lseek
0001aa4c g     F .text	00000048 sprintf
00015514  w    F .text	00000014 UartDev::~UartDev()
0001995c g     F .text	0000006a __exponent
0001fdb8  w    O .text	00000007 typeinfo name for Uart3
000142f6 g     F .text	00000010 GPIO::setAsOutput()
00014414 g     F .text	00000020 Acceleration_Sensor::init()
00017a1e g     F .text	00000006 __cxa_guard_release
000156b4 g     F .text	00000020 CharDev::CharDev()
0001bf58 g     F .text	00000024 _write_r
0001fd48 g     O .text	0000001c vtable for UartDev
00014294 g     F .text	00000050 GPIO::GPIO(LPC1758_GPIO_Type)
0001a830 g     F .text	00000030 scanf
2007c73c  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
00018474 g     F .text	0000016c .hidden __aeabi_frsub
000205e8 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00014e5c g     F .text	0000000c sys_set_outchar_func
00014214 g     F .text	0000002c flash_chip_erase
0001a9bc g     F .text	00000008 nanf
00019e38 g     F .text	000000ee _printf_common
00015a7c g     F .text	00000074 adc0_get_reading
2007c0e0 g     O .data	00000004 _impure_ptr
00014a32 g     F .text	0000003c u0_dbg_printf
00018ca4 g     F .text	00000110 __sflush_r
00018690 g     F .text	00000168 .hidden __aeabi_fmul
0001feb0  w    O .text	0000001c vtable for Uart0
00020a50 g       .text	00000000 __preinit_array_end
0001ddb4 g     F .text	000001e8 _svfiprintf_r
0001a6f8 g     F .text	00000118 __srefill_r
00013620 g     F .text	00000024 power_off
0001465c g     F .text	00000024 I2C_Temp::getFarenheit()
0001914c g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
00015e4c g     F .text	00000014 I2C2::I2C2()
000108ec g     F .text	00000006 __set_MSP
0001da60 g     F .text	00000048 __ulp
00015b04  w    F .text	00000014 Uart3::~Uart3()
00015b6c  w    F .text	00000014 Uart2::~Uart2()
00016da4 g     F .text	0000000c vTaskMissedYield
00010ab0 g     F .text	0000000c nordic_queue_tx_fifo
2007c7dc g       .bss	00000000 _pvHeapStart
000108b4 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
000196bc g     F .text	00000014 mallinfo
00014a14 g     F .text	0000001e u0_dbg_put
000155c8 g     F .text	000000c0 UartDev::handleInterrupt()
00015210 g     F .text	00000016 I2C_Base::checkDeviceResponse(unsigned char)
0001be24 g     F .text	00000058 _vsniprintf_r
0001675c g     F .text	00000012 uxQueueMessagesWaiting
000165c0 g     F .text	00000134 xQueueGenericReceive
00018394 g     F .text	00000040 .hidden __aeabi_d2uiz
00015228 g     F .text	00000050 I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c7d0 g     O .bss	00000004 _timezone
0001371c g     F .text	0000008c send_cmd
00017960 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00015bc0  w    F .text	00000014 Uart0::~Uart0()
000169e4 g     F .text	0000010c xTaskIncrementTick
0001e050 g     F .text	000002a8 __ssvfiscanf_r
00010c2e g     F .text	00000016 nordic_power_down
00015750 g     F .text	00000068 rtc_settime
2007c748  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00011e3c g     F .text	00000016 clust2sect
0001800c g     F .text	00000018 .hidden __aeabi_llsl
000104b4 g     F .text	00000038 sys_get_mem_info_str
00019064 g     F .text	00000048 __swhatbuf_r
2007c0dc g     O .data	00000004 __cxxabiv1::__terminate_handler
000108f2 g     F .text	00000006 __set_BASEPRI
0001f32c g     F .text	00000012 .hidden __aeabi_dcmpeq
00015c28 g     F .text	0000001c ssp1_dma_init
00015b80 g     F .text	0000001c Uart2::Uart2()
0002053c g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00016310 g     F .text	0000006c xQueueGenericReset
00014fcc g     F .text	000000a4 _write
2007c2fc g       .data	00000000 _edata
00017c2a g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014550 g     F .text	0000003a LED_Display::setNumber(char)
000119a8 g     F .text	00000034 mesh_get_pnd_pkt_count
0001414c g     F .text	00000020 flash_get_page_count
00012b76 g     F .text	000001ac f_write
00014608 g     F .text	00000022 I2C_Temp::init()
0001405c g     F .text	0000004c flash_write_sectors
0001bb20 g     F .text	00000304 _tzset_unlocked_r
2007c770 g     O .bss	00000008 XDCS
00016824 g     F .text	000001a4 xTaskCreate
00018930 g     F .text	0000003e .hidden __aeabi_f2uiz
000156d4 g     F .text	00000018 CharDev::~CharDev()
0001ab0e g     F .text	00000038 __swrite
00014c50 g     F .text	00000004 operator new(unsigned int)
000128d8 g     F .text	0000012e f_open
00017c00  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00013d1e g     F .text	00000038 disk_write
000140a8 g     F .text	00000036 flash_ioctl
00010cb8 g     F .text	0000002c nordic_set_auto_transmit_options
00014720 g     F .text	00000014 c_list_create
0001e348 g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00018fbc g     F .text	0000003c _fwalk_reent
00017a54 g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000185e0 g     F .text	00000024 .hidden __floatunsisf
0001d9a2 g     F .text	000000be __mdiff
000156d4 g     F .text	00000018 CharDev::~CharDev()
0001f3bc g     F .text	0000004e .hidden __aeabi_d2iz
00017fe6 g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
000134f4 g     F .text	00000026 ff_req_grant
2007c754  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
00014e74 g     F .text	00000010 _kill
00010148  w    F .text	00000010 DMA_IRQHandler
00014690 g     F .text	00000024 tlm_component_get_by_name
00016bc8 g     F .text	00000030 vTaskDelay
00020654 g     O .text	00000020 __sf_fake_stdout
0001aa4c g     F .text	00000048 siprintf
0001eb44 g     F .text	0000005e __sccl
00018c8e g     F .text	00000008 atoi
00014d18 g     F .text	0000007a _gettimeofday
00016db0 g     F .text	00000020 xTaskGetSchedulerState
00020804 g     O .text	00000101 _ctype_
00014ed0 g     F .text	0000009c _read
00020a50 g       .text	00000000 __init_array_start
00018c7c  w    F .text	00000002 .hidden __aeabi_idiv0
0001f390 g     F .text	0000002c .hidden __unorddf2
00014948 g     F .text	000000cc logger_init
00018930 g     F .text	0000003e .hidden __fixunssfsi
00014e84 g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
000145e0 g     F .text	00000004 Light_Sensor::init()
000190ac g     F .text	00000080 __smakebuf_r
0001ab96 g     F .text	00000010 strlen
00013ce6 g     F .text	00000038 disk_read
00015f98 g     F .text	00000024 pxPortInitialiseStack
00019f28 g     F .text	00000240 _printf_i
00019040 g     F .text	00000006 __locale_ctype_ptr_l
0002059c g     O .text	00000008 typeinfo for std::type_info
0001f31c g     F .text	00000010 .hidden __aeabi_cdcmpeq
0001f280 g     F .text	0000008a .hidden __gedf2
00015b34 g     F .text	00000024 UART3_IRQHandler
0001ce18 g     F .text	0000043e __gethex
2007c7ac g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
000142e4 g     F .text	00000012 GPIO::setAsInput()
0001c078 g     F .text	00000028 div
00012f1e g     F .text	000000c8 f_getfree
00016d40 g     F .text	00000018 vTaskSetTimeOutState
00013538 g     F .text	0000003c ff_convert
000182ec g     F .text	0000003a .hidden __aeabi_f2d
00015fe4 g     F .text	00000020 vPortEnterCritical
00020a54 g       .text	00000000 __symbol_table_start
000137a8 g     F .text	00000024 sd_update_card_status
00014124 g     F .text	00000028 flash_read_permanent_id
2007c7a8 g     O .bss	00000004 __malloc_free_list
2007c750  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
2007c760 g     O .bss	00000008 CS
00010ad4 g     F .text	00000010 nordic_rx_to_Stanby1
0001676e g     F .text	00000004 uxQueueMessagesWaitingFromISR
0001ee44 g     F .text	00000002 __env_lock
0001802c g     F .text	0000027a .hidden __subdf3
0001e348 g     F .text	0000022c _vfprintf_r
00020a50 g       .text	00000000 __preinit_array_start
0001d6a6 g     F .text	0000005e __lo0bits
0001e574 g     F .text	000002a8 __svfscanf_r
0001b9c0 g     F .text	00000150 __tzcalc_limits
00016ee8 g     F .text	00000028 vRunTimeStatIsrEntry
0001ed60 g     F .text	000000e4 _ungetc_r
00014d0c g     F .text	00000004 __aeabi_atexit
00017b38 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
00017a06 g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
000164b4 g     F .text	00000024 xQueueCreateMutex
00018480 g     F .text	00000160 .hidden __addsf3
2007c144 g     O .data	0000016c __global_locale
00010c94 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
00016558 g     F .text	00000068 xQueueGiveFromISR
0001d474 g     F .text	00000008 __gettzinfo
0001aa14 g     F .text	00000010 raise
00015070 g     F .text	00000054 _close
0001913c g     F .text	00000010 free
0001fe90  w    O .text	00000020 typeinfo for Uart0
0001a168  w    F .text	000003c0 _scanf_float
00013a94 g     F .text	0000021c sd_ioctl
0001d576 g     F .text	00000076 __multadd
00017974 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001d548 g     F .text	0000002e _Bfree
0001d440 g     F .text	0000000e _getenv_r
000108f8 g     F .text	00000034 lpc_pconp



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	c1 5f 01 00 39 01 01 00 00 00 00 00 21 60 01 00     ._..9.......!`..
   1003c:	59 01 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     Y...............
   1004c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1005c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1006c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1007c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1008c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   1009c:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   100ac:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................
   100bc:	c1 05 01 00 c1 05 01 00 c1 05 01 00 c1 05 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	00022c40 	.word	0x00022c40
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000002fc 	.word	0x000002fc

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	000004dc 	.word	0x000004dc

000100e0 <isr_hard_fault>:
isr_hard_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 ba86 	b.w	105fc <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 ba82 	b.w	105fc <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f004 fc89 	bl	14a14 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	0001f586 	.word	0x0001f586

00010108 <isr_mem_fault>:
isr_mem_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f004 fc82 	bl	14a14 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	0001f591 	.word	0x0001f591

00010118 <isr_bus_fault>:
isr_bus_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f004 fc7a 	bl	14a14 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	0001f59c 	.word	0x0001f59c

00010128 <isr_usage_fault>:
isr_usage_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f004 fc72 	bl	14a14 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	0001f5a7 	.word	0x0001f5a7

00010138 <isr_debug_mon>:
isr_debug_mon():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f004 fc6a 	bl	14a14 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	0001f5b4 	.word	0x0001f5b4

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f004 fc62 	bl	14a14 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	0001f5c2 	.word	0x0001f5c2

00010158 <isr_sys_tick>:
isr_sys_tick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f006 fec5 	bl	16ee8 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f005 ff81 	bl	16064 <xPortSysTickHandler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f006 bed3 	b.w	16f10 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 fba6 	bl	108e6 <__set_PSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 fba6 	bl	108ec <__set_MSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f008 ff14 	bl	18ff8 <__libc_init_array>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f81c 	bl	1020c <low_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f006 ff96 	bl	17104 <high_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f007 fa94 	bl	17704 <main>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb2c 	bl	1083c <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f004 fc15 	bl	14a14 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	0001f5d6 	.word	0x0001f5d6

00010200 <sys_get_boot_type>:
sys_get_boot_type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10200:	4b01      	ldr	r3, [pc, #4]	; (10208 <sys_get_boot_type+0x8>)
   10202:	7818      	ldrb	r0, [r3, #0]
   10204:	4770      	bx	lr
   10206:	bf00      	nop
   10208:	2007c30c 	.word	0x2007c30c

0001020c <low_level_init()>:
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   1020c:	b530      	push	{r4, r5, lr}
   1020e:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10210:	f005 fad2 	bl	157b8 <rtc_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10214:	4668      	mov	r0, sp
   10216:	f005 fa77 	bl	15708 <rtc_gettime>
   1021a:	4c77      	ldr	r4, [pc, #476]	; (103f8 <low_level_init()+0x1ec>)
   1021c:	9b00      	ldr	r3, [sp, #0]
   1021e:	6023      	str	r3, [r4, #0]
   10220:	9b01      	ldr	r3, [sp, #4]
   10222:	6063      	str	r3, [r4, #4]
   10224:	9b02      	ldr	r3, [sp, #8]
   10226:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   10228:	f000 fa5a 	bl	106e0 <sys_clock_configure()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   1022c:	f000 fab2 	bl	10794 <sys_get_cpu_clock>
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10230:	4b72      	ldr	r3, [pc, #456]	; (103fc <low_level_init()+0x1f0>)
   10232:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10236:	283c      	cmp	r0, #60	; 0x3c
   10238:	4b71      	ldr	r3, [pc, #452]	; (10400 <low_level_init()+0x1f4>)
   1023a:	f200 809a 	bhi.w	10372 <low_level_init()+0x166>
   1023e:	2829      	cmp	r0, #41	; 0x29
   10240:	f080 80a1 	bcs.w	10386 <low_level_init()+0x17a>
   10244:	2814      	cmp	r0, #20
   10246:	f200 809b 	bhi.w	10380 <low_level_init()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1024a:	223a      	movs	r2, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1024c:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   1024e:	2308      	movs	r3, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10250:	2298      	movs	r2, #152	; 0x98
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10252:	496c      	ldr	r1, [pc, #432]	; (10404 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10254:	2000      	movs	r0, #0
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   10256:	760b      	strb	r3, [r1, #24]
   10258:	764b      	strb	r3, [r1, #25]
   1025a:	768b      	strb	r3, [r1, #26]
   1025c:	f881 3020 	strb.w	r3, [r1, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10260:	4b69      	ldr	r3, [pc, #420]	; (10408 <low_level_init()+0x1fc>)
   10262:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   10266:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1026a:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   1026e:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10272:	2290      	movs	r2, #144	; 0x90
   10274:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   10278:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   1027c:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10280:	2270      	movs	r2, #112	; 0x70
   10282:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   10286:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1028a:	2258      	movs	r2, #88	; 0x58
   1028c:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   10290:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   10294:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   10298:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   1029c:	2278      	movs	r2, #120	; 0x78
   1029e:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102a2:	22a0      	movs	r2, #160	; 0xa0
   102a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102a8:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102ac:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102b0:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102b4:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102b8:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102bc:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102c0:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102c4:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102c8:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102cc:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102d0:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102d4:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102d8:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102dc:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102e0:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102e4:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102e8:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   102ec:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   102f0:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   102f4:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   102f8:	68cb      	ldr	r3, [r1, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   102fa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   102fe:	041b      	lsls	r3, r3, #16
   10300:	0c1b      	lsrs	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10302:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   10306:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1030a:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   1030c:	f000 faf1 	bl	108f2 <__set_BASEPRI>
__enable_fault_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10310:	b661      	cpsie	f
__enable_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10312:	b662      	cpsie	i
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10314:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   10318:	f000 fa90 	bl	1083c <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   1031c:	483b      	ldr	r0, [pc, #236]	; (1040c <low_level_init()+0x200>)
   1031e:	f004 fd9d 	bl	14e5c <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10322:	483b      	ldr	r0, [pc, #236]	; (10410 <low_level_init()+0x204>)
   10324:	f004 fda0 	bl	14e68 <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   10328:	2300      	movs	r3, #0
   1032a:	4c3a      	ldr	r4, [pc, #232]	; (10414 <low_level_init()+0x208>)
   1032c:	4619      	mov	r1, r3
   1032e:	6820      	ldr	r0, [r4, #0]
   10330:	2202      	movs	r2, #2
   10332:	6880      	ldr	r0, [r0, #8]
   10334:	f00a fa94 	bl	1a860 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10338:	2300      	movs	r3, #0
   1033a:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   1033c:	4c30      	ldr	r4, [pc, #192]	; (10400 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1033e:	4619      	mov	r1, r3
   10340:	2202      	movs	r2, #2
   10342:	6840      	ldr	r0, [r0, #4]
   10344:	f00a fa8c 	bl	1a860 <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   10348:	f004 fda8 	bl	14e9c <syscalls_init>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   1034c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10350:	4d31      	ldr	r5, [pc, #196]	; (10418 <low_level_init()+0x20c>)
   10352:	f013 0f01 	tst.w	r3, #1
   10356:	d01f      	beq.n	10398 <low_level_init()+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   10358:	4830      	ldr	r0, [pc, #192]	; (1041c <low_level_init()+0x210>)
   1035a:	f000 fab7 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   1035e:	2301      	movs	r3, #1
   10360:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10362:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10366:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1036a:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   1036e:	b005      	add	sp, #20
   10370:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10372:	2850      	cmp	r0, #80	; 0x50
   10374:	d90a      	bls.n	1038c <low_level_init()+0x180>
   10376:	2864      	cmp	r0, #100	; 0x64
   10378:	d90b      	bls.n	10392 <low_level_init()+0x186>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1037a:	f245 023a 	movw	r2, #20538	; 0x503a
   1037e:	e765      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10380:	f241 023a 	movw	r2, #4154	; 0x103a
   10384:	e762      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   10386:	f242 023a 	movw	r2, #8250	; 0x203a
   1038a:	e75f      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   1038c:	f243 023a 	movw	r2, #12346	; 0x303a
   10390:	e75c      	b.n	1024c <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   10392:	f244 023a 	movw	r2, #16442	; 0x403a
   10396:	e759      	b.n	1024c <low_level_init()+0x40>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   10398:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1039c:	079b      	lsls	r3, r3, #30
   1039e:	d509      	bpl.n	103b4 <low_level_init()+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103a0:	481f      	ldr	r0, [pc, #124]	; (10420 <low_level_init()+0x214>)
   103a2:	f000 fa93 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103a6:	2302      	movs	r3, #2
   103a8:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103aa:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103ae:	f043 0302 	orr.w	r3, r3, #2
   103b2:	e7da      	b.n	1036a <low_level_init()+0x15e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103b4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b8:	f013 0304 	ands.w	r3, r3, #4
   103bc:	d019      	beq.n	103f2 <low_level_init()+0x1e6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103be:	4b19      	ldr	r3, [pc, #100]	; (10424 <low_level_init()+0x218>)
   103c0:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103c2:	4b19      	ldr	r3, [pc, #100]	; (10428 <low_level_init()+0x21c>)
   103c4:	429a      	cmp	r2, r3
   103c6:	d108      	bne.n	103da <low_level_init()+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103c8:	2305      	movs	r3, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103ca:	4818      	ldr	r0, [pc, #96]	; (1042c <low_level_init()+0x220>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103cc:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103ce:	f000 fa7d 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103d2:	2200      	movs	r2, #0
   103d4:	4b13      	ldr	r3, [pc, #76]	; (10424 <low_level_init()+0x218>)
   103d6:	649a      	str	r2, [r3, #72]	; 0x48
   103d8:	e7c9      	b.n	1036e <low_level_init()+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103da:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103dc:	4814      	ldr	r0, [pc, #80]	; (10430 <low_level_init()+0x224>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103de:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103e0:	f000 fa74 	bl	108cc <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103e4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103e8:	f043 0304 	orr.w	r3, r3, #4
   103ec:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   103f0:	e7ef      	b.n	103d2 <low_level_init()+0x1c6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   103f2:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   103f4:	e7bb      	b.n	1036e <low_level_init()+0x162>
   103f6:	bf00      	nop
   103f8:	2007c300 	.word	0x2007c300
   103fc:	000f4240 	.word	0x000f4240
   10400:	400fc000 	.word	0x400fc000
   10404:	e000ed00 	.word	0xe000ed00
   10408:	e000e100 	.word	0xe000e100
   1040c:	000108b5 	.word	0x000108b5
   10410:	0001089d 	.word	0x0001089d
   10414:	2007c0e0 	.word	0x2007c0e0
   10418:	2007c30c 	.word	0x2007c30c
   1041c:	0001f40c 	.word	0x0001f40c
   10420:	0001f44f 	.word	0x0001f44f
   10424:	40024000 	.word	0x40024000
   10428:	deadbeef 	.word	0xdeadbeef
   1042c:	0001f429 	.word	0x0001f429
   10430:	0001f446 	.word	0x0001f446

00010434 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10434:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   10436:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   10438:	4b0f      	ldr	r3, [pc, #60]	; (10478 <lpc_sys_setup_system_timer+0x44>)
   1043a:	4c10      	ldr	r4, [pc, #64]	; (1047c <lpc_sys_setup_system_timer+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   1043c:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   1043e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10440:	f005 fc9a 	bl	15d78 <lpc_timer_enable>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   10444:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   10448:	6823      	ldr	r3, [r4, #0]
   1044a:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   1044c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10450:	61da      	str	r2, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   10452:	2200      	movs	r2, #0
   10454:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   10456:	4a0a      	ldr	r2, [pc, #40]	; (10480 <lpc_sys_setup_system_timer+0x4c>)
   10458:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   1045a:	f240 2209 	movw	r2, #521	; 0x209
   1045e:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   10460:	695a      	ldr	r2, [r3, #20]
   10462:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   10466:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10468:	2218      	movs	r2, #24
   1046a:	4b06      	ldr	r3, [pc, #24]	; (10484 <lpc_sys_setup_system_timer+0x50>)
   1046c:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10470:	2204      	movs	r2, #4
   10472:	601a      	str	r2, [r3, #0]
   10474:	bd10      	pop	{r4, pc}
   10476:	bf00      	nop
   10478:	40008000 	.word	0x40008000
   1047c:	2007c318 	.word	0x2007c318
   10480:	0016e360 	.word	0x0016e360
   10484:	e000e100 	.word	0xe000e100

00010488 <sys_get_uptime_us>:
sys_get_uptime_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   10488:	4b08      	ldr	r3, [pc, #32]	; (104ac <sys_get_uptime_us+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1048a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   1048c:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   1048e:	4c08      	ldr	r4, [pc, #32]	; (104b0 <sys_get_uptime_us+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   10490:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10492:	8821      	ldrh	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   10494:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10496:	b289      	uxth	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   10498:	4282      	cmp	r2, r0
   1049a:	d8f9      	bhi.n	10490 <sys_get_uptime_us+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   1049c:	460b      	mov	r3, r1
   1049e:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   104a0:	ea42 0200 	orr.w	r2, r2, r0
   104a4:	4610      	mov	r0, r2
   104a6:	4619      	mov	r1, r3
   104a8:	bd10      	pop	{r4, pc}
   104aa:	bf00      	nop
   104ac:	2007c318 	.word	0x2007c318
   104b0:	2007c314 	.word	0x2007c314

000104b4 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   104b4:	b510      	push	{r4, lr}
   104b6:	4604      	mov	r4, r0
   104b8:	b08e      	sub	sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   104ba:	a806      	add	r0, sp, #24
   104bc:	f004 fbcc 	bl	14c58 <sys_get_mem_info>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   104c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   104c2:	9a06      	ldr	r2, [sp, #24]
   104c4:	9305      	str	r3, [sp, #20]
   104c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   104c8:	4907      	ldr	r1, [pc, #28]	; (104e8 <sys_get_mem_info_str+0x34>)
   104ca:	9304      	str	r3, [sp, #16]
   104cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   104ce:	4620      	mov	r0, r4
   104d0:	9303      	str	r3, [sp, #12]
   104d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104d4:	9302      	str	r3, [sp, #8]
   104d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   104d8:	9301      	str	r3, [sp, #4]
   104da:	9b08      	ldr	r3, [sp, #32]
   104dc:	9300      	str	r3, [sp, #0]
   104de:	9b07      	ldr	r3, [sp, #28]
   104e0:	f00a fab4 	bl	1aa4c <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   104e4:	b00e      	add	sp, #56	; 0x38
   104e6:	bd10      	pop	{r4, pc}
   104e8:	0001f48a 	.word	0x0001f48a

000104ec <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   104ec:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   104ee:	4c04      	ldr	r4, [pc, #16]	; (10500 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   104f0:	6823      	ldr	r3, [r4, #0]
   104f2:	b91b      	cbnz	r3, 104fc <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   104f4:	2001      	movs	r0, #1
   104f6:	f004 fbab 	bl	14c50 <operator new(unsigned int)>
   104fa:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   104fc:	6820      	ldr	r0, [r4, #0]
   104fe:	bd10      	pop	{r4, pc}
   10500:	2007c310 	.word	0x2007c310

00010504 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10504:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   10506:	4c2b      	ldr	r4, [pc, #172]	; (105b4 <TIMER1_IRQHandler+0xb0>)
   10508:	6823      	ldr	r3, [r4, #0]
   1050a:	4625      	mov	r5, r4
   1050c:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   1050e:	f012 0f10 	tst.w	r2, #16
   10512:	d00e      	beq.n	10532 <TIMER1_IRQHandler+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10514:	2210      	movs	r2, #16
   10516:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   10518:	f7ff ffe8 	bl	104ec <SingletonTemplate<IR_Sensor>::getInstance()>
   1051c:	6823      	ldr	r3, [r4, #0]
   1051e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10520:	f003 ff88 	bl	14434 <IR_Sensor::storeIrCode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10524:	6822      	ldr	r2, [r4, #0]
   10526:	6893      	ldr	r3, [r2, #8]
   10528:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   1052c:	3310      	adds	r3, #16
   1052e:	6213      	str	r3, [r2, #32]
   10530:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   10532:	0754      	lsls	r4, r2, #29
   10534:	d507      	bpl.n	10546 <TIMER1_IRQHandler+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   10536:	2204      	movs	r2, #4
   10538:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   1053a:	f7ff ffd7 	bl	104ec <SingletonTemplate<IR_Sensor>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   1053e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   10542:	f003 bf85 	b.w	14450 <IR_Sensor::decodeIrCode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   10546:	07d0      	lsls	r0, r2, #31
   10548:	d507      	bpl.n	1055a <TIMER1_IRQHandler+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   1054a:	2201      	movs	r2, #1
   1054c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   1054e:	4a1a      	ldr	r2, [pc, #104]	; (105b8 <TIMER1_IRQHandler+0xb4>)
   10550:	8813      	ldrh	r3, [r2, #0]
   10552:	3301      	adds	r3, #1
   10554:	b29b      	uxth	r3, r3
   10556:	8013      	strh	r3, [r2, #0]
   10558:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   1055a:	0791      	lsls	r1, r2, #30
   1055c:	d515      	bpl.n	1058a <TIMER1_IRQHandler+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   1055e:	2202      	movs	r2, #2
   10560:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   10562:	f006 fc25 	bl	16db0 <xTaskGetSchedulerState>
   10566:	2802      	cmp	r0, #2
   10568:	d009      	beq.n	1057e <TIMER1_IRQHandler+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   1056a:	f000 fd33 	bl	10fd4 <wireless_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   1056e:	682a      	ldr	r2, [r5, #0]
   10570:	6893      	ldr	r3, [r2, #8]
   10572:	69d1      	ldr	r1, [r2, #28]
   10574:	440b      	add	r3, r1
   10576:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1057a:	61d3      	str	r3, [r2, #28]
   1057c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   1057e:	682a      	ldr	r2, [r5, #0]
   10580:	6953      	ldr	r3, [r2, #20]
   10582:	f023 0308 	bic.w	r3, r3, #8
   10586:	6153      	str	r3, [r2, #20]
   10588:	e7f1      	b.n	1056e <TIMER1_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1058a:	0712      	lsls	r2, r2, #28
   1058c:	d50e      	bpl.n	105ac <TIMER1_IRQHandler+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   1058e:	2208      	movs	r2, #8
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   10590:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   10592:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   10594:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   10598:	7211      	strb	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   1059a:	2155      	movs	r1, #85	; 0x55
   1059c:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   1059e:	689a      	ldr	r2, [r3, #8]
   105a0:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   105a4:	f502 7258 	add.w	r2, r2, #864	; 0x360
   105a8:	625a      	str	r2, [r3, #36]	; 0x24
   105aa:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   105ac:	4803      	ldr	r0, [pc, #12]	; (105bc <TIMER1_IRQHandler+0xb8>)
   105ae:	f00a f82f 	bl	1a610 <puts>
   105b2:	e7fe      	b.n	105b2 <TIMER1_IRQHandler+0xae>
   105b4:	2007c318 	.word	0x2007c318
   105b8:	2007c314 	.word	0x2007c314
   105bc:	0001f469 	.word	0x0001f469

000105c0 <isr_forwarder_routine>:
isr_forwarder_routine():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   105c0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   105c2:	f006 fc91 	bl	16ee8 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105c6:	4b09      	ldr	r3, [pc, #36]	; (105ec <isr_forwarder_routine+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105c8:	4a09      	ldr	r2, [pc, #36]	; (105f0 <isr_forwarder_routine+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105ca:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105cc:	4b09      	ldr	r3, [pc, #36]	; (105f4 <isr_forwarder_routine+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105ce:	3910      	subs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105d0:	b2c9      	uxtb	r1, r1
   105d2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105d6:	4293      	cmp	r3, r2
   105d8:	d103      	bne.n	105e2 <isr_forwarder_routine+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   105da:	4807      	ldr	r0, [pc, #28]	; (105f8 <isr_forwarder_routine+0x38>)
   105dc:	f004 fa29 	bl	14a32 <u0_dbg_printf>
   105e0:	e7fe      	b.n	105e0 <isr_forwarder_routine+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   105e2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   105e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   105e8:	f006 bc92 	b.w	16f10 <vRunTimeStatIsrExit>
   105ec:	e000ed04 	.word	0xe000ed04
   105f0:	00010149 	.word	0x00010149
   105f4:	2007c000 	.word	0x2007c000
   105f8:	0001f54f 	.word	0x0001f54f

000105fc <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   105fc:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   105fe:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10600:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10602:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10604:	4a11      	ldr	r2, [pc, #68]	; (1064c <isr_hard_fault_handler+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10606:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   10608:	6883      	ldr	r3, [r0, #8]
   1060a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   1060c:	68c3      	ldr	r3, [r0, #12]
   1060e:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10610:	6903      	ldr	r3, [r0, #16]
   10612:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10614:	6943      	ldr	r3, [r0, #20]
   10616:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   10618:	6983      	ldr	r3, [r0, #24]
   1061a:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   1061c:	69c3      	ldr	r3, [r0, #28]
   1061e:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10620:	4b0b      	ldr	r3, [pc, #44]	; (10650 <isr_hard_fault_handler+0x54>)
   10622:	649a      	str	r2, [r3, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10624:	9a06      	ldr	r2, [sp, #24]
   10626:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   10628:	9a05      	ldr	r2, [sp, #20]
   1062a:	3a01      	subs	r2, #1
   1062c:	651a      	str	r2, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   1062e:	9a07      	ldr	r2, [sp, #28]
   10630:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10632:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10636:	22aa      	movs	r2, #170	; 0xaa
   10638:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1063a:	2200      	movs	r2, #0
   1063c:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   1063e:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10640:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10642:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10644:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   10646:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   10648:	b008      	add	sp, #32
   1064a:	4770      	bx	lr
   1064c:	deadbeef 	.word	0xdeadbeef
   10650:	40024000 	.word	0x40024000

00010654 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   10654:	22aa      	movs	r2, #170	; 0xaa
   10656:	4b03      	ldr	r3, [pc, #12]	; (10664 <sys_clock_pll0_feed()+0x10>)
   10658:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   1065c:	2255      	movs	r2, #85	; 0x55
   1065e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10662:	4770      	bx	lr
   10664:	400fc000 	.word	0x400fc000

00010668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   10668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   1066c:	2400      	movs	r4, #0
   1066e:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10670:	6014      	str	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10672:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10674:	f240 14ff 	movw	r4, #511	; 0x1ff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   10678:	f8df a060 	ldr.w	sl, [pc, #96]	; 106dc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1067c:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10680:	2600      	movs	r6, #0
   10682:	fb04 5b05 	mla	fp, r4, r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   10686:	f106 0c01 	add.w	ip, r6, #1
   1068a:	fbbb f8fc 	udiv	r8, fp, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   1068e:	4f12      	ldr	r7, [pc, #72]	; (106d8 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   10690:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   10694:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   10698:	42bd      	cmp	r5, r7
   1069a:	d91a      	bls.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   1069c:	4666      	mov	r6, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   1069e:	2e20      	cmp	r6, #32
   106a0:	d1f1      	bne.n	10686 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106a2:	3c01      	subs	r4, #1
   106a4:	2c05      	cmp	r4, #5
   106a6:	d1e9      	bne.n	1067c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   106a8:	2000      	movs	r0, #0
   106aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   106ae:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   106b2:	464d      	mov	r5, r9
   106b4:	d0f2      	beq.n	1069c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   106b6:	f105 0901 	add.w	r9, r5, #1
   106ba:	fbb8 fef9 	udiv	lr, r8, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   106be:	45d6      	cmp	lr, sl
   106c0:	d8f5      	bhi.n	106ae <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106c2:	4586      	cmp	lr, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   106c4:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   106c6:	6016      	str	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   106c8:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106ca:	d1f0      	bne.n	106ae <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   106cc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106d2:	2503      	movs	r5, #3
   106d4:	e7ef      	b.n	106b6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   106d6:	bf00      	nop
   106d8:	00043238 	.word	0x00043238
   106dc:	000186a0 	.word	0x000186a0

000106e0 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   106e0:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   106e2:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106e4:	492a      	ldr	r1, [pc, #168]	; (10790 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   106e6:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106e8:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   106ec:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106ee:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   106f2:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   106f6:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   106f8:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   106fa:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   106fe:	f7ff ffa9 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   10702:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   10706:	f023 0301 	bic.w	r3, r3, #1
   1070a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   1070e:	f7ff ffa1 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   10712:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   10716:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   1071a:	f7ff ff9b 	bl	10654 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   1071e:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   10720:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10724:	aa02      	add	r2, sp, #8
   10726:	a901      	add	r1, sp, #4
   10728:	f64b 3080 	movw	r0, #48000	; 0xbb80
   1072c:	f7ff ff9c 	bl	10668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   10730:	b930      	cbnz	r0, 10740 <sys_clock_configure()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   10732:	462b      	mov	r3, r5
   10734:	aa02      	add	r2, sp, #8
   10736:	a901      	add	r1, sp, #4
   10738:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   1073c:	f7ff ff94 	bl	10668 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   10740:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10742:	4913      	ldr	r1, [pc, #76]	; (10790 <sys_clock_configure()+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   10744:	f363 040f 	bfi	r4, r3, #0, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   10748:	9b02      	ldr	r3, [sp, #8]
   1074a:	f363 4417 	bfi	r4, r3, #16, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   1074e:	2300      	movs	r3, #0
   10750:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   10754:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   10758:	f7ff ff7c 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   1075c:	2301      	movs	r3, #1
   1075e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10762:	f7ff ff77 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   10766:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1076a:	015b      	lsls	r3, r3, #5
   1076c:	d5fb      	bpl.n	10766 <sys_clock_configure()+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   1076e:	9b03      	ldr	r3, [sp, #12]
   10770:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10774:	2303      	movs	r3, #3
   10776:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1077a:	f7ff ff6b 	bl	10654 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   1077e:	4a04      	ldr	r2, [pc, #16]	; (10790 <sys_clock_configure()+0xb0>)
   10780:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   10784:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   10788:	d0fa      	beq.n	10780 <sys_clock_configure()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   1078a:	b005      	add	sp, #20
   1078c:	bd30      	pop	{r4, r5, pc}
   1078e:	bf00      	nop
   10790:	400fc000 	.word	0x400fc000

00010794 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10794:	4b24      	ldr	r3, [pc, #144]	; (10828 <sys_get_cpu_clock+0x94>)
   10796:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1079a:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1079e:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107a0:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   107a4:	f002 0203 	and.w	r2, r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107a8:	d12d      	bne.n	10806 <sys_get_cpu_clock+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107aa:	2a01      	cmp	r2, #1
   107ac:	d016      	beq.n	107dc <sys_get_cpu_clock+0x48>
   107ae:	2a02      	cmp	r2, #2
   107b0:	d01e      	beq.n	107f0 <sys_get_cpu_clock+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107b2:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107b6:	481d      	ldr	r0, [pc, #116]	; (1082c <sys_get_cpu_clock+0x98>)
   107b8:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107bc:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107c0:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107c4:	fb01 0000 	mla	r0, r1, r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107c8:	f3c2 4207 	ubfx	r2, r2, #16, #8
   107cc:	3201      	adds	r2, #1
   107ce:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107d2:	b2db      	uxtb	r3, r3
   107d4:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   107d6:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   107da:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107dc:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107e0:	4813      	ldr	r0, [pc, #76]	; (10830 <sys_get_cpu_clock+0x9c>)
   107e2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107e6:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107ea:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   107ee:	e7e9      	b.n	107c4 <sys_get_cpu_clock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107f0:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107f4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107f8:	f3c0 000e 	ubfx	r0, r0, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107fc:	3001      	adds	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107fe:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10802:	0400      	lsls	r0, r0, #16
   10804:	e7e0      	b.n	107c8 <sys_get_cpu_clock+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10806:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1080a:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1080c:	b2c0      	uxtb	r0, r0
   1080e:	f100 0301 	add.w	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10812:	d003      	beq.n	1081c <sys_get_cpu_clock+0x88>
   10814:	2a02      	cmp	r2, #2
   10816:	d003      	beq.n	10820 <sys_get_cpu_clock+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10818:	4806      	ldr	r0, [pc, #24]	; (10834 <sys_get_cpu_clock+0xa0>)
   1081a:	e7dc      	b.n	107d6 <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1081c:	4806      	ldr	r0, [pc, #24]	; (10838 <sys_get_cpu_clock+0xa4>)
   1081e:	e7da      	b.n	107d6 <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10820:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10824:	e7d7      	b.n	107d6 <sys_get_cpu_clock+0x42>
   10826:	bf00      	nop
   10828:	400fc000 	.word	0x400fc000
   1082c:	007a1200 	.word	0x007a1200
   10830:	016e3600 	.word	0x016e3600
   10834:	003d0900 	.word	0x003d0900
   10838:	00b71b00 	.word	0x00b71b00

0001083c <uart0_init>:
uart0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   1083c:	b510      	push	{r4, lr}
   1083e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10840:	f7ff ffa8 	bl	10794 <sys_get_cpu_clock>
   10844:	0124      	lsls	r4, r4, #4
   10846:	fbb0 f0f4 	udiv	r0, r0, r4
   1084a:	f007 fd2d 	bl	182a8 <__aeabi_ui2d>
   1084e:	2200      	movs	r2, #0
   10850:	4b10      	ldr	r3, [pc, #64]	; (10894 <uart0_init+0x58>)
   10852:	f007 fbed 	bl	18030 <__adddf3>
   10856:	f007 fd9d 	bl	18394 <__aeabi_d2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   1085a:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   1085c:	b284      	uxth	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   1085e:	2003      	movs	r0, #3
   10860:	f000 f84a 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10864:	2101      	movs	r1, #1
   10866:	2003      	movs	r0, #3
   10868:	f000 f860 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   1086c:	4b0a      	ldr	r3, [pc, #40]	; (10898 <uart0_init+0x5c>)
   1086e:	681a      	ldr	r2, [r3, #0]
   10870:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10874:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   10876:	681a      	ldr	r2, [r3, #0]
   10878:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1087c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   1087e:	2280      	movs	r2, #128	; 0x80
   10880:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   10884:	731a      	strb	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   10886:	0a22      	lsrs	r2, r4, #8
   10888:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   1088a:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   1088c:	b2e4      	uxtb	r4, r4
   1088e:	701c      	strb	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   10890:	731a      	strb	r2, [r3, #12]
   10892:	bd10      	pop	{r4, pc}
   10894:	3fe00000 	.word	0x3fe00000
   10898:	4002c000 	.word	0x4002c000

0001089c <uart0_getchar>:
uart0_getchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   1089c:	4a03      	ldr	r2, [pc, #12]	; (108ac <uart0_getchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   1089e:	6813      	ldr	r3, [r2, #0]
   108a0:	07db      	lsls	r3, r3, #31
   108a2:	d5fc      	bpl.n	1089e <uart0_getchar+0x2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   108a4:	4b02      	ldr	r3, [pc, #8]	; (108b0 <uart0_getchar+0x14>)
   108a6:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   108a8:	4770      	bx	lr
   108aa:	bf00      	nop
   108ac:	4000c014 	.word	0x4000c014
   108b0:	4000c000 	.word	0x4000c000

000108b4 <uart0_putchar>:
uart0_putchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   108b4:	4b03      	ldr	r3, [pc, #12]	; (108c4 <uart0_putchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   108b6:	4a04      	ldr	r2, [pc, #16]	; (108c8 <uart0_putchar+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   108b8:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   108ba:	6813      	ldr	r3, [r2, #0]
   108bc:	065b      	lsls	r3, r3, #25
   108be:	d5fc      	bpl.n	108ba <uart0_putchar+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   108c0:	2001      	movs	r0, #1
   108c2:	4770      	bx	lr
   108c4:	4000c000 	.word	0x4000c000
   108c8:	4000c014 	.word	0x4000c014

000108cc <uart0_puts>:
uart0_puts():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   108cc:	b508      	push	{r3, lr}
   108ce:	1e41      	subs	r1, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   108d0:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   108d4:	b920      	cbnz	r0, 108e0 <uart0_puts+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   108d6:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   108d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   108dc:	f7ff bfea 	b.w	108b4 <uart0_putchar>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   108e0:	f7ff ffe8 	bl	108b4 <uart0_putchar>
   108e4:	e7f4      	b.n	108d0 <uart0_puts+0x4>

000108e6 <__set_PSP>:
__set_PSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   108e6:	f380 8809 	msr	PSP, r0
   108ea:	4770      	bx	lr

000108ec <__set_MSP>:
__set_MSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   108ec:	f380 8808 	msr	MSP, r0
   108f0:	4770      	bx	lr

000108f2 <__set_BASEPRI>:
__set_BASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   108f2:	f380 8811 	msr	BASEPRI, r0
   108f6:	4770      	bx	lr

000108f8 <lpc_pconp>:
lpc_pconp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   108f8:	b538      	push	{r3, r4, r5, lr}
   108fa:	460d      	mov	r5, r1
   108fc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   108fe:	f005 fb71 	bl	15fe4 <vPortEnterCritical>
   10902:	4a09      	ldr	r2, [pc, #36]	; (10928 <lpc_pconp+0x30>)
   10904:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   10906:	b14d      	cbz	r5, 1091c <lpc_pconp+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   10908:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   1090c:	40a3      	lsls	r3, r4
   1090e:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10910:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10914:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   10918:	f005 bb74 	b.w	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   1091c:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10920:	40a3      	lsls	r3, r4
   10922:	ea21 0303 	bic.w	r3, r1, r3
   10926:	e7f3      	b.n	10910 <lpc_pconp+0x18>
   10928:	400fc000 	.word	0x400fc000

0001092c <lpc_pclk>:
lpc_pclk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   1092c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10930:	ea4f 0840 	mov.w	r8, r0, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10934:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   10936:	f005 fb55 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1093a:	4642      	mov	r2, r8
   1093c:	2003      	movs	r0, #3
   1093e:	2100      	movs	r1, #0
   10940:	f007 fb64 	bl	1800c <__aeabi_llsl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10944:	4f0a      	ldr	r7, [pc, #40]	; (10970 <lpc_pclk+0x44>)
   10946:	4642      	mov	r2, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   10948:	e9d7 4500 	ldrd	r4, r5, [r7]
   1094c:	ea24 0400 	bic.w	r4, r4, r0
   10950:	ea25 0501 	bic.w	r5, r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10954:	f006 0003 	and.w	r0, r6, #3
   10958:	2100      	movs	r1, #0
   1095a:	f007 fb57 	bl	1800c <__aeabi_llsl>
   1095e:	4320      	orrs	r0, r4
   10960:	4329      	orrs	r1, r5
   10962:	e9c7 0100 	strd	r0, r1, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   10966:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   1096a:	f005 bb4b 	b.w	16004 <vPortExitCritical>
   1096e:	bf00      	nop
   10970:	400fc1a8 	.word	0x400fc1a8

00010974 <nordic_transfer>:
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   10974:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   10976:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1097a:	4c36      	ldr	r4, [pc, #216]	; (10a54 <nordic_transfer+0xe0>)
   1097c:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   1097e:	4c36      	ldr	r4, [pc, #216]	; (10a58 <nordic_transfer+0xe4>)
   10980:	60a0      	str	r0, [r4, #8]
   10982:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   10984:	68c4      	ldr	r4, [r0, #12]
   10986:	06e4      	lsls	r4, r4, #27
   10988:	d4fc      	bmi.n	10984 <nordic_transfer+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1098a:	6880      	ldr	r0, [r0, #8]
   1098c:	b2c0      	uxtb	r0, r0
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   1098e:	b963      	cbnz	r3, 109aa <nordic_transfer+0x36>
   10990:	460b      	mov	r3, r1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   10992:	4c31      	ldr	r4, [pc, #196]	; (10a58 <nordic_transfer+0xe4>)
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   10994:	1a5d      	subs	r5, r3, r1
   10996:	4295      	cmp	r5, r2
   10998:	da09      	bge.n	109ae <nordic_transfer+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   1099a:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   1099e:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109a0:	68e5      	ldr	r5, [r4, #12]
   109a2:	06ed      	lsls	r5, r5, #27
   109a4:	d4fc      	bmi.n	109a0 <nordic_transfer+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109a6:	68a5      	ldr	r5, [r4, #8]
   109a8:	e7f4      	b.n	10994 <nordic_transfer+0x20>
   109aa:	4b2b      	ldr	r3, [pc, #172]	; (10a58 <nordic_transfer+0xe4>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   109ac:	b922      	cbnz	r2, 109b8 <nordic_transfer+0x44>
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   109ae:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   109b2:	4b28      	ldr	r3, [pc, #160]	; (10a54 <nordic_transfer+0xe0>)
   109b4:	619a      	str	r2, [r3, #24]
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   109b6:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   109b8:	2a07      	cmp	r2, #7
   109ba:	780c      	ldrb	r4, [r1, #0]
   109bc:	dd29      	ble.n	10a12 <nordic_transfer+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109be:	609c      	str	r4, [r3, #8]
   109c0:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   109c2:	3a08      	subs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109c4:	609c      	str	r4, [r3, #8]
   109c6:	788c      	ldrb	r4, [r1, #2]
   109c8:	609c      	str	r4, [r3, #8]
   109ca:	78cc      	ldrb	r4, [r1, #3]
   109cc:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109ce:	790c      	ldrb	r4, [r1, #4]
   109d0:	609c      	str	r4, [r3, #8]
   109d2:	794c      	ldrb	r4, [r1, #5]
   109d4:	609c      	str	r4, [r3, #8]
   109d6:	798c      	ldrb	r4, [r1, #6]
   109d8:	609c      	str	r4, [r3, #8]
   109da:	79cd      	ldrb	r5, [r1, #7]
   109dc:	f101 0408 	add.w	r4, r1, #8
   109e0:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   109e2:	699d      	ldr	r5, [r3, #24]
   109e4:	076d      	lsls	r5, r5, #29
   109e6:	d5fc      	bpl.n	109e2 <nordic_transfer+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   109e8:	689d      	ldr	r5, [r3, #8]
   109ea:	700d      	strb	r5, [r1, #0]
   109ec:	689d      	ldr	r5, [r3, #8]
   109ee:	704d      	strb	r5, [r1, #1]
   109f0:	689d      	ldr	r5, [r3, #8]
   109f2:	708d      	strb	r5, [r1, #2]
   109f4:	689d      	ldr	r5, [r3, #8]
   109f6:	70cd      	strb	r5, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   109f8:	68dd      	ldr	r5, [r3, #12]
   109fa:	06ed      	lsls	r5, r5, #27
   109fc:	d4fc      	bmi.n	109f8 <nordic_transfer+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   109fe:	689d      	ldr	r5, [r3, #8]
   10a00:	710d      	strb	r5, [r1, #4]
   10a02:	689d      	ldr	r5, [r3, #8]
   10a04:	714d      	strb	r5, [r1, #5]
   10a06:	689d      	ldr	r5, [r3, #8]
   10a08:	718d      	strb	r5, [r1, #6]
   10a0a:	689d      	ldr	r5, [r3, #8]
   10a0c:	71cd      	strb	r5, [r1, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a0e:	4621      	mov	r1, r4
   10a10:	e7cc      	b.n	109ac <nordic_transfer+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   10a12:	2a03      	cmp	r2, #3
   10a14:	dd14      	ble.n	10a40 <nordic_transfer+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a16:	609c      	str	r4, [r3, #8]
   10a18:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   10a1a:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a1c:	609c      	str	r4, [r3, #8]
   10a1e:	788c      	ldrb	r4, [r1, #2]
   10a20:	609c      	str	r4, [r3, #8]
   10a22:	78cd      	ldrb	r5, [r1, #3]
   10a24:	1d0c      	adds	r4, r1, #4
   10a26:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   10a28:	68dd      	ldr	r5, [r3, #12]
   10a2a:	06ed      	lsls	r5, r5, #27
   10a2c:	d4fc      	bmi.n	10a28 <nordic_transfer+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a2e:	689d      	ldr	r5, [r3, #8]
   10a30:	700d      	strb	r5, [r1, #0]
   10a32:	689d      	ldr	r5, [r3, #8]
   10a34:	704d      	strb	r5, [r1, #1]
   10a36:	689d      	ldr	r5, [r3, #8]
   10a38:	708d      	strb	r5, [r1, #2]
   10a3a:	689d      	ldr	r5, [r3, #8]
   10a3c:	70cd      	strb	r5, [r1, #3]
   10a3e:	e7e6      	b.n	10a0e <nordic_transfer+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   10a40:	1c4d      	adds	r5, r1, #1
   10a42:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   10a44:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   10a46:	68dc      	ldr	r4, [r3, #12]
   10a48:	06e4      	lsls	r4, r4, #27
   10a4a:	d4fc      	bmi.n	10a46 <nordic_transfer+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   10a4c:	689c      	ldr	r4, [r3, #8]
   10a4e:	700c      	strb	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   10a50:	4629      	mov	r1, r5
   10a52:	e7ab      	b.n	109ac <nordic_transfer+0x38>
   10a54:	2009c000 	.word	0x2009c000
   10a58:	40088000 	.word	0x40088000

00010a5c <nordic_readRegister>:
nordic_readRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   10a5c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   10a5e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   10a60:	a902      	add	r1, sp, #8
   10a62:	f801 3d01 	strb.w	r3, [r1, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   10a66:	2301      	movs	r3, #1
   10a68:	f000 001f 	and.w	r0, r0, #31
   10a6c:	461a      	mov	r2, r3
   10a6e:	f7ff ff81 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   10a72:	f89d 0007 	ldrb.w	r0, [sp, #7]
   10a76:	b003      	add	sp, #12
   10a78:	f85d fb04 	ldr.w	pc, [sp], #4

00010a7c <nordic_writeRegister>:
nordic_writeRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   10a7c:	b513      	push	{r0, r1, r4, lr}
   10a7e:	ac02      	add	r4, sp, #8
   10a80:	f804 1d01 	strb.w	r1, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   10a84:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   10a88:	2300      	movs	r3, #0
   10a8a:	2201      	movs	r2, #1
   10a8c:	4621      	mov	r1, r4
   10a8e:	f040 0020 	orr.w	r0, r0, #32
   10a92:	f7ff ff6f 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   10a96:	b002      	add	sp, #8
   10a98:	bd10      	pop	{r4, pc}

00010a9a <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   10a9a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   10a9c:	2017      	movs	r0, #23
   10a9e:	f7ff ffdd 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   10aa2:	f3c0 1000 	ubfx	r0, r0, #4, #1
   10aa6:	bd08      	pop	{r3, pc}

00010aa8 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   10aa8:	2170      	movs	r1, #112	; 0x70
   10aaa:	2007      	movs	r0, #7
   10aac:	f7ff bfe6 	b.w	10a7c <nordic_writeRegister>

00010ab0 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   10ab0:	460a      	mov	r2, r1
   10ab2:	2300      	movs	r3, #0
   10ab4:	4601      	mov	r1, r0
   10ab6:	20a0      	movs	r0, #160	; 0xa0
   10ab8:	f7ff bf5c 	b.w	10974 <nordic_transfer>

00010abc <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   10abc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10abe:	2000      	movs	r0, #0
   10ac0:	f7ff ffcc 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   10ac4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10ac8:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   10acc:	2000      	movs	r0, #0
   10ace:	f7ff bfd5 	b.w	10a7c <nordic_writeRegister>
   10ad2:	Address 0x0000000000010ad2 is out of bounds.


00010ad4 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10ad4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10ad8:	4b01      	ldr	r3, [pc, #4]	; (10ae0 <nordic_rx_to_Stanby1+0xc>)
   10ada:	61da      	str	r2, [r3, #28]
   10adc:	4770      	bx	lr
   10ade:	bf00      	nop
   10ae0:	2009c020 	.word	0x2009c020

00010ae4 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   10ae4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   10ae6:	2000      	movs	r0, #0
   10ae8:	f7ff ffb8 	bl	10a5c <nordic_readRegister>
   10aec:	f040 0101 	orr.w	r1, r0, #1
   10af0:	b2c9      	uxtb	r1, r1
   10af2:	2000      	movs	r0, #0
   10af4:	f7ff ffc2 	bl	10a7c <nordic_writeRegister>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   10af8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10afc:	4b01      	ldr	r3, [pc, #4]	; (10b04 <nordic_standby1_to_rx+0x20>)
   10afe:	619a      	str	r2, [r3, #24]
   10b00:	bd08      	pop	{r3, pc}
   10b02:	bf00      	nop
   10b04:	2009c020 	.word	0x2009c020

00010b08 <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   10b08:	2120      	movs	r1, #32
   10b0a:	2007      	movs	r0, #7
   10b0c:	f7ff bfb6 	b.w	10a7c <nordic_writeRegister>

00010b10 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   10b10:	2300      	movs	r3, #0
   10b12:	20e1      	movs	r0, #225	; 0xe1
   10b14:	461a      	mov	r2, r3
   10b16:	4619      	mov	r1, r3
   10b18:	f7ff bf2c 	b.w	10974 <nordic_transfer>

00010b1c <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   10b1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10b1e:	4604      	mov	r4, r0
   10b20:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   10b22:	f7ff fff5 	bl	10b10 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   10b26:	4620      	mov	r0, r4
   10b28:	4629      	mov	r1, r5
   10b2a:	f7ff ffc1 	bl	10ab0 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   10b2e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b32:	4c0c      	ldr	r4, [pc, #48]	; (10b64 <nordic_mode1_send_single_packet+0x48>)
   10b34:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   10b36:	2200      	movs	r2, #0
   10b38:	f8ad 2006 	strh.w	r2, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10b40:	3301      	adds	r3, #1
   10b42:	b29b      	uxth	r3, r3
   10b44:	f8ad 3006 	strh.w	r3, [sp, #6]
   10b48:	b933      	cbnz	r3, 10b58 <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10b4a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10b4e:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   10b50:	f7ff ffde 	bl	10b10 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   10b54:	b003      	add	sp, #12
   10b56:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b58:	f7ff ff9f 	bl	10a9a <nordic_is_tx_fifo_empty>
   10b5c:	2800      	cmp	r0, #0
   10b5e:	d0ed      	beq.n	10b3c <nordic_mode1_send_single_packet+0x20>
   10b60:	e7f3      	b.n	10b4a <nordic_mode1_send_single_packet+0x2e>
   10b62:	bf00      	nop
   10b64:	2009c020 	.word	0x2009c020

00010b68 <nordic_is_packet_available>:
nordic_is_packet_available():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   10b68:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   10b6a:	2017      	movs	r0, #23
   10b6c:	f7ff ff76 	bl	10a5c <nordic_readRegister>
   10b70:	43c0      	mvns	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   10b72:	f000 0001 	and.w	r0, r0, #1
   10b76:	bd08      	pop	{r3, pc}

00010b78 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   10b78:	2140      	movs	r1, #64	; 0x40
   10b7a:	2007      	movs	r0, #7
   10b7c:	f7ff bf7e 	b.w	10a7c <nordic_writeRegister>

00010b80 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   10b80:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   10b82:	460a      	mov	r2, r1
   10b84:	2301      	movs	r3, #1
   10b86:	4601      	mov	r1, r0
   10b88:	2061      	movs	r0, #97	; 0x61
   10b8a:	f7ff fef3 	bl	10974 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   10b8e:	f3c0 0042 	ubfx	r0, r0, #1, #3
   10b92:	bd08      	pop	{r3, pc}

00010b94 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   10b94:	2300      	movs	r3, #0
   10b96:	20e2      	movs	r0, #226	; 0xe2
   10b98:	461a      	mov	r2, r3
   10b9a:	4619      	mov	r1, r3
   10b9c:	f7ff beea 	b.w	10974 <nordic_transfer>

00010ba0 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   10ba0:	b570      	push	{r4, r5, r6, lr}
   10ba2:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10ba4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   10ba6:	460d      	mov	r5, r1
   10ba8:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10baa:	f7ff ff57 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bae:	b166      	cbz	r6, 10bca <nordic_set_intr_signals+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   10bb0:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bb4:	b16d      	cbz	r5, 10bd2 <nordic_set_intr_signals+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   10bb6:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bba:	b16c      	cbz	r4, 10bd8 <nordic_set_intr_signals+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   10bbc:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   10bc0:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   10bc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   10bc6:	f7ff bf59 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bca:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   10bce:	b2c0      	uxtb	r0, r0
   10bd0:	e7f0      	b.n	10bb4 <nordic_set_intr_signals+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bd2:	f040 0120 	orr.w	r1, r0, #32
   10bd6:	e7f0      	b.n	10bba <nordic_set_intr_signals+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bd8:	f041 0110 	orr.w	r1, r1, #16
   10bdc:	e7f0      	b.n	10bc0 <nordic_set_intr_signals+0x20>

00010bde <nordic_set_crc>:
nordic_set_crc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   10bde:	b510      	push	{r4, lr}
   10be0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   10be2:	2000      	movs	r0, #0
   10be4:	f7ff ff3a 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   10be8:	b934      	cbnz	r4, 10bf8 <nordic_set_crc+0x1a>
   10bea:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   10bee:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   10bf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   10bf4:	f7ff bf42 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   10bf8:	2c01      	cmp	r4, #1
   10bfa:	d104      	bne.n	10c06 <nordic_set_crc+0x28>
   10bfc:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   10c00:	f041 0108 	orr.w	r1, r1, #8
   10c04:	e7f3      	b.n	10bee <nordic_set_crc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c06:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   10c08:	bf14      	ite	ne
   10c0a:	f040 0108 	orrne.w	r1, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c0e:	f040 010c 	orreq.w	r1, r0, #12
   10c12:	b2c9      	uxtb	r1, r1
   10c14:	e7eb      	b.n	10bee <nordic_set_crc+0x10>

00010c16 <nordic_power_up>:
nordic_power_up():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   10c16:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c18:	2000      	movs	r0, #0
   10c1a:	f7ff ff1f 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   10c1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c22:	f040 0102 	orr.w	r1, r0, #2
   10c26:	b2c9      	uxtb	r1, r1
   10c28:	2000      	movs	r0, #0
   10c2a:	f7ff bf27 	b.w	10a7c <nordic_writeRegister>

00010c2e <nordic_power_down>:
nordic_power_down():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   10c2e:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c30:	2000      	movs	r0, #0
   10c32:	f7ff ff13 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   10c36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c3a:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   10c3e:	2000      	movs	r0, #0
   10c40:	f7ff bf1c 	b.w	10a7c <nordic_writeRegister>

00010c44 <nordic_set_channel>:
nordic_set_channel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c44:	f640 13dd 	movw	r3, #2525	; 0x9dd
   10c48:	4298      	cmp	r0, r3
   10c4a:	d80b      	bhi.n	10c64 <nordic_set_channel+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   10c4c:	f640 1362 	movw	r3, #2402	; 0x962
   10c50:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   10c54:	bf38      	it	cc
   10c56:	4618      	movcc	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   10c58:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   10c5c:	b2c9      	uxtb	r1, r1
   10c5e:	2005      	movs	r0, #5
   10c60:	f7ff bf0c 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c64:	4618      	mov	r0, r3
   10c66:	e7f7      	b.n	10c58 <nordic_set_channel+0x14>

00010c68 <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   10c68:	b510      	push	{r4, lr}
   10c6a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   10c6c:	2006      	movs	r0, #6
   10c6e:	f7ff fef5 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   10c72:	2cfa      	cmp	r4, #250	; 0xfa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   10c74:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   10c78:	d106      	bne.n	10c88 <nordic_set_air_data_rate+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   10c7a:	f041 0120 	orr.w	r1, r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   10c7e:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   10c80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   10c84:	f7ff befa 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   10c88:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   10c8c:	bf08      	it	eq
   10c8e:	f041 0108 	orreq.w	r1, r1, #8
   10c92:	e7f4      	b.n	10c7e <nordic_set_air_data_rate+0x16>

00010c94 <nordic_set_power_level>:
nordic_set_power_level():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   10c94:	b510      	push	{r4, lr}
   10c96:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10c98:	2006      	movs	r0, #6
   10c9a:	f7ff fedf 	bl	10a5c <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10c9e:	2c03      	cmp	r4, #3
   10ca0:	bf28      	it	cs
   10ca2:	2403      	movcs	r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10ca4:	f020 0106 	bic.w	r1, r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10ca8:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   10cac:	b2c9      	uxtb	r1, r1
   10cae:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   10cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   10cb4:	f7ff bee2 	b.w	10a7c <nordic_writeRegister>

00010cb8 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   10cb8:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   10cbc:	bf28      	it	cs
   10cbe:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   10cc2:	28fa      	cmp	r0, #250	; 0xfa
   10cc4:	bf38      	it	cc
   10cc6:	20fa      	movcc	r0, #250	; 0xfa
   10cc8:	23fa      	movs	r3, #250	; 0xfa
   10cca:	fbb0 f3f3 	udiv	r3, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   10cce:	290f      	cmp	r1, #15
   10cd0:	bf28      	it	cs
   10cd2:	210f      	movcs	r1, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   10cd4:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   10cd6:	b2db      	uxtb	r3, r3
   10cd8:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   10cdc:	b2c9      	uxtb	r1, r1
   10cde:	2004      	movs	r0, #4
   10ce0:	f7ff becc 	b.w	10a7c <nordic_writeRegister>

00010ce4 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   10ce4:	3011      	adds	r0, #17
   10ce6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   10ce8:	2816      	cmp	r0, #22
   10cea:	d804      	bhi.n	10cf6 <nordic_set_payload_for_pipe+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   10cec:	2920      	cmp	r1, #32
   10cee:	bf28      	it	cs
   10cf0:	2120      	movcs	r1, #32
   10cf2:	f7ff bec3 	b.w	10a7c <nordic_writeRegister>
   10cf6:	4770      	bx	lr

00010cf8 <nordic_set_addr_width>:
nordic_set_addr_width():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   10cf8:	2803      	cmp	r0, #3
   10cfa:	d006      	beq.n	10d0a <nordic_set_addr_width+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   10cfc:	2804      	cmp	r0, #4
   10cfe:	bf14      	ite	ne
   10d00:	2103      	movne	r1, #3
   10d02:	2102      	moveq	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   10d04:	2003      	movs	r0, #3
   10d06:	f7ff beb9 	b.w	10a7c <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   10d0a:	2101      	movs	r1, #1
   10d0c:	e7fa      	b.n	10d04 <nordic_set_addr_width+0xc>

00010d0e <nordic_set_tx_address>:
nordic_set_tx_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   10d0e:	460a      	mov	r2, r1
   10d10:	2300      	movs	r3, #0
   10d12:	4601      	mov	r1, r0
   10d14:	2030      	movs	r0, #48	; 0x30
   10d16:	f7ff be2d 	b.w	10974 <nordic_transfer>

00010d1a <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   10d1a:	460a      	mov	r2, r1
   10d1c:	2300      	movs	r3, #0
   10d1e:	4601      	mov	r1, r0
   10d20:	202a      	movs	r0, #42	; 0x2a
   10d22:	f7ff be27 	b.w	10974 <nordic_transfer>
   10d26:	Address 0x0000000000010d26 is out of bounds.


00010d28 <nordic_init>:
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   10d28:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10d2a:	4604      	mov	r4, r0
   10d2c:	460e      	mov	r6, r1
   10d2e:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   10d30:	f7ff ff30 	bl	10b94 <nordic_flush_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   10d34:	f7ff feec 	bl	10b10 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   10d38:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10d3c:	4b2a      	ldr	r3, [pc, #168]	; (10de8 <nordic_init+0xc0>)
   10d3e:	61da      	str	r2, [r3, #28]
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   10d40:	f7ff ff75 	bl	10c2e <nordic_power_down>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   10d44:	2200      	movs	r2, #0
   10d46:	2001      	movs	r0, #1
   10d48:	4611      	mov	r1, r2
   10d4a:	f7ff ff29 	bl	10ba0 <nordic_set_intr_signals>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   10d4e:	f7ff feab 	bl	10aa8 <nordic_clear_all_intr_flags>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   10d52:	2002      	movs	r0, #2
   10d54:	f7ff ff43 	bl	10bde <nordic_set_crc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   10d58:	4630      	mov	r0, r6
   10d5a:	f7ff ff73 	bl	10c44 <nordic_set_channel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   10d5e:	4628      	mov	r0, r5
   10d60:	f7ff ff82 	bl	10c68 <nordic_set_air_data_rate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   10d64:	2003      	movs	r0, #3
   10d66:	f7ff ff95 	bl	10c94 <nordic_set_power_level>
nordic_enable_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   10d6a:	2103      	movs	r1, #3
   10d6c:	2002      	movs	r0, #2
   10d6e:	f7ff fe85 	bl	10a7c <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   10d72:	2100      	movs	r1, #0
   10d74:	2001      	movs	r0, #1
   10d76:	f7ff fe81 	bl	10a7c <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   10d7a:	2103      	movs	r1, #3
   10d7c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   10d80:	f7ff ff9a 	bl	10cb8 <nordic_set_auto_transmit_options>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   10d84:	4621      	mov	r1, r4
   10d86:	2000      	movs	r0, #0
   10d88:	f7ff ffac 	bl	10ce4 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   10d8c:	2100      	movs	r1, #0
   10d8e:	2012      	movs	r0, #18
   10d90:	f7ff fe74 	bl	10a7c <nordic_writeRegister>
   10d94:	2100      	movs	r1, #0
   10d96:	2013      	movs	r0, #19
   10d98:	f7ff fe70 	bl	10a7c <nordic_writeRegister>
   10d9c:	2100      	movs	r1, #0
   10d9e:	2014      	movs	r0, #20
   10da0:	f7ff fe6c 	bl	10a7c <nordic_writeRegister>
   10da4:	2100      	movs	r1, #0
   10da6:	2015      	movs	r0, #21
   10da8:	f7ff fe68 	bl	10a7c <nordic_writeRegister>
   10dac:	2100      	movs	r1, #0
   10dae:	2016      	movs	r0, #22
   10db0:	f7ff fe64 	bl	10a7c <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10db4:	4b0d      	ldr	r3, [pc, #52]	; (10dec <nordic_init+0xc4>)
   10db6:	6818      	ldr	r0, [r3, #0]
   10db8:	791b      	ldrb	r3, [r3, #4]
   10dba:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10dbc:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10dbe:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10dc2:	f7ff ff99 	bl	10cf8 <nordic_set_addr_width>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   10dc6:	4668      	mov	r0, sp
   10dc8:	2105      	movs	r1, #5
   10dca:	f7ff ffa0 	bl	10d0e <nordic_set_tx_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   10dce:	2105      	movs	r1, #5
   10dd0:	4668      	mov	r0, sp
   10dd2:	f7ff ffa2 	bl	10d1a <nordic_set_rx_pipe0_addr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   10dd6:	f7ff ff1e 	bl	10c16 <nordic_power_up>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   10dda:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10dde:	f003 fedb 	bl	14b98 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   10de2:	b002      	add	sp, #8
   10de4:	bd70      	pop	{r4, r5, r6, pc}
   10de6:	bf00      	nop
   10de8:	2009c020 	.word	0x2009c020
   10dec:	0001f5ff 	.word	0x0001f5ff

00010df0 <nrf_driver_init>:
nrf_driver_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   10df0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   10df2:	4e17      	ldr	r6, [pc, #92]	; (10e50 <nrf_driver_init+0x60>)
   10df4:	6832      	ldr	r2, [r6, #0]
   10df6:	b922      	cbnz	r2, 10e02 <nrf_driver_init+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   10df8:	2120      	movs	r1, #32
   10dfa:	2003      	movs	r0, #3
   10dfc:	f005 fabe 	bl	1637c <xQueueGenericCreate>
   10e00:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   10e02:	4d14      	ldr	r5, [pc, #80]	; (10e54 <nrf_driver_init+0x64>)
   10e04:	682a      	ldr	r2, [r5, #0]
   10e06:	b922      	cbnz	r2, 10e12 <nrf_driver_init+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   10e08:	2120      	movs	r1, #32
   10e0a:	2001      	movs	r0, #1
   10e0c:	f005 fab6 	bl	1637c <xQueueGenericCreate>
   10e10:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   10e12:	4c11      	ldr	r4, [pc, #68]	; (10e58 <nrf_driver_init+0x68>)
   10e14:	6821      	ldr	r1, [r4, #0]
   10e16:	b921      	cbnz	r1, 10e22 <nrf_driver_init+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   10e18:	2203      	movs	r2, #3
   10e1a:	2001      	movs	r0, #1
   10e1c:	f005 faae 	bl	1637c <xQueueGenericCreate>
   10e20:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   10e22:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   10e26:	f640 11c3 	movw	r1, #2499	; 0x9c3
   10e2a:	2020      	movs	r0, #32
   10e2c:	f7ff ff7c 	bl	10d28 <nordic_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   10e30:	f7ff fe58 	bl	10ae4 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   10e34:	2016      	movs	r0, #22
   10e36:	4a09      	ldr	r2, [pc, #36]	; (10e5c <nrf_driver_init+0x6c>)
   10e38:	2101      	movs	r1, #1
   10e3a:	f004 fd97 	bl	1596c <eint3_enable_port0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   10e3e:	6830      	ldr	r0, [r6, #0]
   10e40:	b128      	cbz	r0, 10e4e <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   10e42:	6828      	ldr	r0, [r5, #0]
   10e44:	b118      	cbz	r0, 10e4e <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   10e46:	6820      	ldr	r0, [r4, #0]
   10e48:	3000      	adds	r0, #0
   10e4a:	bf18      	it	ne
   10e4c:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   10e4e:	bd70      	pop	{r4, r5, r6, pc}
   10e50:	2007c324 	.word	0x2007c324
   10e54:	2007c31c 	.word	0x2007c31c
   10e58:	2007c320 	.word	0x2007c320
   10e5c:	00010f09 	.word	0x00010f09

00010e60 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e60:	7903      	ldrb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e62:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e64:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10e68:	2bc0      	cmp	r3, #192	; 0xc0
   10e6a:	bf0c      	ite	eq
   10e6c:	4b0e      	ldreq	r3, [pc, #56]	; (10ea8 <nrf_driver_app_recv+0x48>)
   10e6e:	4b0f      	ldrne	r3, [pc, #60]	; (10eac <nrf_driver_app_recv+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   10e70:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e72:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e74:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e76:	b088      	sub	sp, #32
   10e78:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e7a:	461a      	mov	r2, r3
   10e7c:	4628      	mov	r0, r5
   10e7e:	f005 fa97 	bl	163b0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   10e82:	4604      	mov	r4, r0
   10e84:	b960      	cbnz	r0, 10ea0 <nrf_driver_app_recv+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   10e86:	4603      	mov	r3, r0
   10e88:	4602      	mov	r2, r0
   10e8a:	4669      	mov	r1, sp
   10e8c:	4628      	mov	r0, r5
   10e8e:	f005 fb97 	bl	165c0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   10e92:	4623      	mov	r3, r4
   10e94:	4622      	mov	r2, r4
   10e96:	4631      	mov	r1, r6
   10e98:	4628      	mov	r0, r5
   10e9a:	f005 fa89 	bl	163b0 <xQueueGenericSend>
   10e9e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   10ea0:	4620      	mov	r0, r4
   10ea2:	b008      	add	sp, #32
   10ea4:	bd70      	pop	{r4, r5, r6, pc}
   10ea6:	bf00      	nop
   10ea8:	2007c31c 	.word	0x2007c31c
   10eac:	2007c324 	.word	0x2007c324

00010eb0 <nrf_driver_send>:
nrf_driver_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   10eb0:	b538      	push	{r3, r4, r5, lr}
   10eb2:	4604      	mov	r4, r0
   10eb4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   10eb6:	f000 faa7 	bl	11408 <mesh_get_node_address>
   10eba:	7823      	ldrb	r3, [r4, #0]
   10ebc:	4283      	cmp	r3, r0
   10ebe:	d00a      	beq.n	10ed6 <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   10ec0:	78e3      	ldrb	r3, [r4, #3]
   10ec2:	b943      	cbnz	r3, 10ed6 <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   10ec4:	f009 fbd4 	bl	1a670 <rand>
   10ec8:	23bd      	movs	r3, #189	; 0xbd
   10eca:	f000 0003 	and.w	r0, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   10ece:	fb00 3003 	mla	r0, r0, r3, r3
   10ed2:	f003 fe61 	bl	14b98 <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   10ed6:	f7ff fdfd 	bl	10ad4 <nordic_rx_to_Stanby1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   10eda:	f7ff fdef 	bl	10abc <nordic_standby1_to_tx_mode1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   10ede:	b2a9      	uxth	r1, r5
   10ee0:	4620      	mov	r0, r4
   10ee2:	f7ff fe1b 	bl	10b1c <nordic_mode1_send_single_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   10ee6:	f7ff fe0f 	bl	10b08 <nordic_clear_packet_sent_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   10eea:	f7ff fdfb 	bl	10ae4 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10eee:	f005 ff5f 	bl	16db0 <xTaskGetSchedulerState>
   10ef2:	2802      	cmp	r0, #2
   10ef4:	d104      	bne.n	10f00 <nrf_driver_send+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   10ef6:	4b03      	ldr	r3, [pc, #12]	; (10f04 <nrf_driver_send+0x54>)
   10ef8:	2100      	movs	r1, #0
   10efa:	6818      	ldr	r0, [r3, #0]
   10efc:	f005 fb2c 	bl	16558 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   10f00:	2001      	movs	r0, #1
   10f02:	bd38      	pop	{r3, r4, r5, pc}
   10f04:	2007c320 	.word	0x2007c320

00010f08 <nrf_irq_callback>:
nrf_irq_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f08:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   10f0a:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f0c:	a902      	add	r1, sp, #8
   10f0e:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   10f12:	4b08      	ldr	r3, [pc, #32]	; (10f34 <nrf_irq_callback+0x2c>)
   10f14:	6818      	ldr	r0, [r3, #0]
   10f16:	f005 fb1f 	bl	16558 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   10f1a:	9b01      	ldr	r3, [sp, #4]
   10f1c:	b13b      	cbz	r3, 10f2e <nrf_irq_callback+0x26>
   10f1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10f22:	4b05      	ldr	r3, [pc, #20]	; (10f38 <nrf_irq_callback+0x30>)
   10f24:	601a      	str	r2, [r3, #0]
   10f26:	f3bf 8f4f 	dsb	sy
   10f2a:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   10f2e:	b003      	add	sp, #12
   10f30:	f85d fb04 	ldr.w	pc, [sp], #4
   10f34:	2007c320 	.word	0x2007c320
   10f38:	e000ed04 	.word	0xe000ed04

00010f3c <nrf_driver_receive>:
nrf_driver_receive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   10f3c:	b538      	push	{r3, r4, r5, lr}
   10f3e:	4604      	mov	r4, r0
   10f40:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   10f42:	f7ff fe11 	bl	10b68 <nordic_is_packet_available>
   10f46:	b148      	cbz	r0, 10f5c <nrf_driver_receive+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   10f48:	b2a9      	uxth	r1, r5
   10f4a:	4620      	mov	r0, r4
   10f4c:	f7ff fe18 	bl	10b80 <nordic_read_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f50:	f7ff fe0a 	bl	10b68 <nordic_is_packet_available>
   10f54:	b908      	cbnz	r0, 10f5a <nrf_driver_receive+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   10f56:	f7ff fe0f 	bl	10b78 <nordic_clear_packet_available_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f5a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   10f5c:	bd38      	pop	{r3, r4, r5, pc}

00010f5e <nrf_driver_get_timer>:
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10f5e:	2904      	cmp	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   10f60:	b538      	push	{r3, r4, r5, lr}
   10f62:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10f64:	d10d      	bne.n	10f82 <nrf_driver_get_timer+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   10f66:	1c04      	adds	r4, r0, #0
   10f68:	bf18      	it	ne
   10f6a:	2401      	movne	r4, #1
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   10f6c:	f7ff fa8c 	bl	10488 <sys_get_uptime_us>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   10f70:	b12c      	cbz	r4, 10f7e <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10f72:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10f76:	2300      	movs	r3, #0
   10f78:	f007 fcfa 	bl	18970 <__aeabi_uldivmod>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   10f7c:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   10f7e:	4620      	mov	r0, r4
   10f80:	bd38      	pop	{r3, r4, r5, pc}
   10f82:	2400      	movs	r4, #0
   10f84:	e7f2      	b.n	10f6c <nrf_driver_get_timer+0xe>
   10f86:	Address 0x0000000000010f86 is out of bounds.


00010f88 <wireless_init>:
wireless_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   10f88:	b500      	push	{lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   10f8a:	4b0c      	ldr	r3, [pc, #48]	; (10fbc <wireless_init+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   10f8c:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   10f8e:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   10f90:	4b0b      	ldr	r3, [pc, #44]	; (10fc0 <wireless_init+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   10f92:	4a0c      	ldr	r2, [pc, #48]	; (10fc4 <wireless_init+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   10f94:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   10f96:	4b0c      	ldr	r3, [pc, #48]	; (10fc8 <wireless_init+0x40>)
   10f98:	930a      	str	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   10f9a:	ab0c      	add	r3, sp, #48	; 0x30
   10f9c:	f843 2d10 	str.w	r2, [r3, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   10fa0:	2200      	movs	r2, #0
   10fa2:	9204      	str	r2, [sp, #16]
   10fa4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   10fa6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   10faa:	4b08      	ldr	r3, [pc, #32]	; (10fcc <wireless_init+0x44>)
   10fac:	4a08      	ldr	r2, [pc, #32]	; (10fd0 <wireless_init+0x48>)
   10fae:	2101      	movs	r1, #1
   10fb0:	206a      	movs	r0, #106	; 0x6a
   10fb2:	f000 fad7 	bl	11564 <mesh_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   10fb6:	b00d      	add	sp, #52	; 0x34
   10fb8:	f85d fb04 	ldr.w	pc, [sp], #4
   10fbc:	00010df1 	.word	0x00010df1
   10fc0:	00010f3d 	.word	0x00010f3d
   10fc4:	00010f5f 	.word	0x00010f5f
   10fc8:	00010eb1 	.word	0x00010eb1
   10fcc:	00010e61 	.word	0x00010e61
   10fd0:	0001f604 	.word	0x0001f604

00010fd4 <wireless_service>:
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   10fd4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10fd6:	f005 feeb 	bl	16db0 <xTaskGetSchedulerState>
   10fda:	4b0f      	ldr	r3, [pc, #60]	; (11018 <wireless_service+0x44>)
   10fdc:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   10fde:	695b      	ldr	r3, [r3, #20]
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   10fe0:	d112      	bne.n	11008 <wireless_service+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   10fe2:	025a      	lsls	r2, r3, #9
   10fe4:	d50c      	bpl.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   10fe6:	f000 fcdf 	bl	119a8 <mesh_get_pnd_pkt_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   10fea:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   10fec:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   10fee:	480b      	ldr	r0, [pc, #44]	; (1101c <wireless_service+0x48>)
   10ff0:	bf14      	ite	ne
   10ff2:	2201      	movne	r2, #1
   10ff4:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   10ff8:	4619      	mov	r1, r3
   10ffa:	6800      	ldr	r0, [r0, #0]
   10ffc:	f005 fae0 	bl	165c0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   11000:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   11004:	f000 bb68 	b.w	116d8 <mesh_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   11008:	025b      	lsls	r3, r3, #9
   1100a:	d5f9      	bpl.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   1100c:	f000 fccc 	bl	119a8 <mesh_get_pnd_pkt_count>
   11010:	2800      	cmp	r0, #0
   11012:	d1f5      	bne.n	11000 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   11014:	bd08      	pop	{r3, pc}
   11016:	bf00      	nop
   11018:	2009c000 	.word	0x2009c000
   1101c:	2007c320 	.word	0x2007c320

00011020 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   11020:	2324      	movs	r3, #36	; 0x24
   11022:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   11024:	f64f 74ff 	movw	r4, #65535	; 0xffff
   11028:	fb03 0101 	mla	r1, r3, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   1102c:	4288      	cmp	r0, r1
   1102e:	d100      	bne.n	11032 <mesh_incr_soft_timers_for_arr+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   11030:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   11032:	7843      	ldrb	r3, [r0, #1]
   11034:	b12b      	cbz	r3, 11042 <mesh_incr_soft_timers_for_arr+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   11036:	8c03      	ldrh	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   11038:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   1103a:	42a3      	cmp	r3, r4
   1103c:	bf28      	it	cs
   1103e:	4623      	movcs	r3, r4
   11040:	8403      	strh	r3, [r0, #32]
   11042:	3024      	adds	r0, #36	; 0x24
   11044:	e7f2      	b.n	1102c <mesh_incr_soft_timers_for_arr+0xc>
   11046:	Address 0x0000000000011046 is out of bounds.


00011048 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   11048:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   1104a:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   1104c:	a802      	add	r0, sp, #8
   1104e:	f840 3d04 	str.w	r3, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   11052:	4b0c      	ldr	r3, [pc, #48]	; (11084 <mesh_update_soft_timers+0x3c>)
   11054:	2104      	movs	r1, #4
   11056:	685b      	ldr	r3, [r3, #4]
   11058:	4798      	blx	r3
   1105a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   1105c:	4b0a      	ldr	r3, [pc, #40]	; (11088 <mesh_update_soft_timers+0x40>)
   1105e:	9a01      	ldr	r2, [sp, #4]
   11060:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11062:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   11064:	1b14      	subs	r4, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   11066:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11068:	4808      	ldr	r0, [pc, #32]	; (1108c <mesh_update_soft_timers+0x44>)
   1106a:	4622      	mov	r2, r4
   1106c:	f7ff ffd8 	bl	11020 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   11070:	4622      	mov	r2, r4
   11072:	2102      	movs	r1, #2
   11074:	4806      	ldr	r0, [pc, #24]	; (11090 <mesh_update_soft_timers+0x48>)
   11076:	f7ff ffd3 	bl	11020 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   1107a:	1c28      	adds	r0, r5, #0
   1107c:	bf18      	it	ne
   1107e:	2001      	movne	r0, #1
   11080:	b003      	add	sp, #12
   11082:	bd30      	pop	{r4, r5, pc}
   11084:	2007c328 	.word	0x2007c328
   11088:	2007c458 	.word	0x2007c458
   1108c:	2007c33e 	.word	0x2007c33e
   11090:	2007c3f2 	.word	0x2007c3f2

00011094 <mesh_send_packet>:
mesh_send_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   11094:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   11096:	4b0b      	ldr	r3, [pc, #44]	; (110c4 <mesh_send_packet+0x30>)
   11098:	7819      	ldrb	r1, [r3, #0]
   1109a:	7803      	ldrb	r3, [r0, #0]
   1109c:	428b      	cmp	r3, r1
   1109e:	4b0a      	ldr	r3, [pc, #40]	; (110c8 <mesh_send_packet+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110a0:	bf0b      	itete	eq
   110a2:	881a      	ldrheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   110a4:	889a      	ldrhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110a6:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   110a8:	3201      	addne	r2, #1
   110aa:	bf14      	ite	ne
   110ac:	809a      	strhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   110ae:	801a      	strheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   110b0:	4b06      	ldr	r3, [pc, #24]	; (110cc <mesh_send_packet+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   110b2:	7081      	strb	r1, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   110b4:	68db      	ldr	r3, [r3, #12]
   110b6:	2120      	movs	r1, #32
   110b8:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   110ba:	3000      	adds	r0, #0
   110bc:	bf18      	it	ne
   110be:	2001      	movne	r0, #1
   110c0:	bd08      	pop	{r3, pc}
   110c2:	bf00      	nop
   110c4:	2007c08c 	.word	0x2007c08c
   110c8:	2007c3ce 	.word	0x2007c3ce
   110cc:	2007c328 	.word	0x2007c328

000110d0 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   110d0:	4b0a      	ldr	r3, [pc, #40]	; (110fc <mesh_send_retry_packet+0x2c>)
   110d2:	7802      	ldrb	r2, [r0, #0]
   110d4:	781b      	ldrb	r3, [r3, #0]
   110d6:	429a      	cmp	r2, r3
   110d8:	4b09      	ldr	r3, [pc, #36]	; (11100 <mesh_send_retry_packet+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110da:	bf0b      	itete	eq
   110dc:	88da      	ldrheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   110de:	891a      	ldrhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110e0:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   110e2:	3201      	addne	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   110e4:	bf0c      	ite	eq
   110e6:	80da      	strheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   110e8:	811a      	strhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   110ea:	7903      	ldrb	r3, [r0, #4]
   110ec:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   110f0:	3207      	adds	r2, #7
   110f2:	f362 03c5 	bfi	r3, r2, #3, #3
   110f6:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   110f8:	f7ff bfcc 	b.w	11094 <mesh_send_packet>
   110fc:	2007c08c 	.word	0x2007c08c
   11100:	2007c3ce 	.word	0x2007c3ce

00011104 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   11104:	2200      	movs	r2, #0
   11106:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   11108:	4b06      	ldr	r3, [pc, #24]	; (11124 <mesh_find_rte_tbl_entry+0x20>)
   1110a:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   1110e:	0091      	lsls	r1, r2, #2
   11110:	4284      	cmp	r4, r0
   11112:	d101      	bne.n	11118 <mesh_find_rte_tbl_entry+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   11114:	1858      	adds	r0, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   11116:	bd10      	pop	{r4, pc}
   11118:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   1111a:	2a04      	cmp	r2, #4
   1111c:	d1f5      	bne.n	1110a <mesh_find_rte_tbl_entry+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   1111e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   11120:	bd10      	pop	{r4, pc}
   11122:	bf00      	nop
   11124:	2007c447 	.word	0x2007c447

00011128 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   11128:	b170      	cbz	r0, 11148 <mesh_update_rte_scores+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   1112a:	78c3      	ldrb	r3, [r0, #3]
   1112c:	3301      	adds	r3, #1
   1112e:	b2db      	uxtb	r3, r3
   11130:	2bff      	cmp	r3, #255	; 0xff
   11132:	70c3      	strb	r3, [r0, #3]
   11134:	d108      	bne.n	11148 <mesh_update_rte_scores+0x20>
   11136:	2300      	movs	r3, #0
   11138:	4804      	ldr	r0, [pc, #16]	; (1114c <mesh_update_rte_scores+0x24>)
   1113a:	18c1      	adds	r1, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   1113c:	78ca      	ldrb	r2, [r1, #3]
   1113e:	3304      	adds	r3, #4
   11140:	0852      	lsrs	r2, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   11142:	2b10      	cmp	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   11144:	70ca      	strb	r2, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   11146:	d1f8      	bne.n	1113a <mesh_update_rte_scores+0x12>
   11148:	4770      	bx	lr
   1114a:	bf00      	nop
   1114c:	2007c447 	.word	0x2007c447

00011150 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11150:	2224      	movs	r2, #36	; 0x24
   11152:	4603      	mov	r3, r0
   11154:	fb02 0101 	mla	r1, r2, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   11158:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   1115a:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   1115c:	4291      	cmp	r1, r2
   1115e:	d10f      	bne.n	11180 <mesh_get_pnd_pkt_slot+0x30>
   11160:	4604      	mov	r4, r0
   11162:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   11164:	429a      	cmp	r2, r3
   11166:	d011      	beq.n	1118c <mesh_get_pnd_pkt_slot+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   11168:	7919      	ldrb	r1, [r3, #4]
   1116a:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   1116e:	8c19      	ldrh	r1, [r3, #32]
   11170:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   11174:	42a9      	cmp	r1, r5
   11176:	bf84      	itt	hi
   11178:	461c      	movhi	r4, r3
   1117a:	460d      	movhi	r5, r1
   1117c:	3324      	adds	r3, #36	; 0x24
   1117e:	e7f1      	b.n	11164 <mesh_get_pnd_pkt_slot+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   11180:	4614      	mov	r4, r2
   11182:	3224      	adds	r2, #36	; 0x24
   11184:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11188:	2d00      	cmp	r5, #0
   1118a:	d1e7      	bne.n	1115c <mesh_get_pnd_pkt_slot+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   1118c:	4620      	mov	r0, r4
   1118e:	bd30      	pop	{r4, r5, pc}

00011190 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   11190:	b538      	push	{r3, r4, r5, lr}
   11192:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   11194:	00c9      	lsls	r1, r1, #3
   11196:	f101 0508 	add.w	r5, r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   1119a:	f7ff ff55 	bl	11048 <mesh_update_soft_timers>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   1119e:	4b1c      	ldr	r3, [pc, #112]	; (11210 <mesh_pending_packets_add+0x80>)
   111a0:	7822      	ldrb	r2, [r4, #0]
   111a2:	781b      	ldrb	r3, [r3, #0]
   111a4:	429a      	cmp	r2, r3
   111a6:	d124      	bne.n	111f2 <mesh_pending_packets_add+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   111a8:	2102      	movs	r1, #2
   111aa:	481a      	ldr	r0, [pc, #104]	; (11214 <mesh_pending_packets_add+0x84>)
   111ac:	f7ff ffd0 	bl	11150 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   111b0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   111b2:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   111b4:	f880 3020 	strb.w	r3, [r0, #32]
   111b8:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   111bc:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   111be:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   111c2:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   111c6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   111ca:	f3c5 2506 	ubfx	r5, r5, #8, #7
   111ce:	430d      	orrs	r5, r1
   111d0:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   111d4:	f104 0120 	add.w	r1, r4, #32
   111d8:	f853 4b04 	ldr.w	r4, [r3], #4
   111dc:	428b      	cmp	r3, r1
   111de:	f842 4b04 	str.w	r4, [r2], #4
   111e2:	d1f9      	bne.n	111d8 <mesh_pending_packets_add+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   111e4:	4a0c      	ldr	r2, [pc, #48]	; (11218 <mesh_pending_packets_add+0x88>)
   111e6:	7903      	ldrb	r3, [r0, #4]
   111e8:	7812      	ldrb	r2, [r2, #0]
   111ea:	f362 03c5 	bfi	r3, r2, #3, #3
   111ee:	7103      	strb	r3, [r0, #4]
   111f0:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   111f2:	2104      	movs	r1, #4
   111f4:	4809      	ldr	r0, [pc, #36]	; (1121c <mesh_pending_packets_add+0x8c>)
   111f6:	f7ff ffab 	bl	11150 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   111fa:	78e3      	ldrb	r3, [r4, #3]
   111fc:	2b00      	cmp	r3, #0
   111fe:	d1d7      	bne.n	111b0 <mesh_pending_packets_add+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   11200:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   11204:	2504      	movs	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   11206:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1120a:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   1120e:	e7cf      	b.n	111b0 <mesh_pending_packets_add+0x20>
   11210:	2007c08c 	.word	0x2007c08c
   11214:	2007c3f2 	.word	0x2007c3f2
   11218:	2007c094 	.word	0x2007c094
   1121c:	2007c33e 	.word	0x2007c33e

00011220 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   11220:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   11222:	f7ff ff6f 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   11226:	4603      	mov	r3, r0
   11228:	b9d8      	cbnz	r0, 11262 <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   1122a:	f7ff ff6b 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   1122e:	4603      	mov	r3, r0
   11230:	b9b8      	cbnz	r0, 11262 <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   11232:	4a0d      	ldr	r2, [pc, #52]	; (11268 <mesh_get_rte_to_modify+0x48>)
   11234:	78d3      	ldrb	r3, [r2, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   11236:	79d1      	ldrb	r1, [r2, #7]
   11238:	7ad0      	ldrb	r0, [r2, #11]
   1123a:	428b      	cmp	r3, r1
   1123c:	bf96      	itet	ls
   1123e:	4619      	movls	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   11240:	1d13      	addhi	r3, r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   11242:	4613      	movls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   11244:	4281      	cmp	r1, r0
   11246:	bf94      	ite	ls
   11248:	4608      	movls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   1124a:	4b08      	ldrhi	r3, [pc, #32]	; (1126c <mesh_get_rte_to_modify+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   1124c:	7bd1      	ldrb	r1, [r2, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   1124e:	4a08      	ldr	r2, [pc, #32]	; (11270 <mesh_get_rte_to_modify+0x50>)
   11250:	4281      	cmp	r1, r0
   11252:	bf38      	it	cc
   11254:	4613      	movcc	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   11256:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11258:	4906      	ldr	r1, [pc, #24]	; (11274 <mesh_get_rte_to_modify+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   1125a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   1125c:	7aca      	ldrb	r2, [r1, #11]
   1125e:	3201      	adds	r2, #1
   11260:	72ca      	strb	r2, [r1, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   11262:	4618      	mov	r0, r3
   11264:	bd08      	pop	{r3, pc}
   11266:	bf00      	nop
   11268:	2007c447 	.word	0x2007c447
   1126c:	2007c44f 	.word	0x2007c44f
   11270:	2007c453 	.word	0x2007c453
   11274:	2007c3ce 	.word	0x2007c3ce

00011278 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1127c:	f04f 0824 	mov.w	r8, #36	; 0x24
   11280:	4605      	mov	r5, r0
   11282:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   11284:	2700      	movs	r7, #0
   11286:	fb08 1802 	mla	r8, r8, r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   1128a:	f8df 915c 	ldr.w	r9, [pc, #348]	; 113e8 <mesh_handle_pnd_pkts_for_arr+0x170>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   1128e:	f8df a15c 	ldr.w	sl, [pc, #348]	; 113ec <mesh_handle_pnd_pkts_for_arr+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   11292:	45a0      	cmp	r8, r4
   11294:	d101      	bne.n	1129a <mesh_handle_pnd_pkts_for_arr+0x22>
   11296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   1129a:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   1129e:	2b00      	cmp	r3, #0
   112a0:	da29      	bge.n	112f6 <mesh_handle_pnd_pkts_for_arr+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   112a2:	b1cd      	cbz	r5, 112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   112a4:	782b      	ldrb	r3, [r5, #0]
   112a6:	7862      	ldrb	r2, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   112a8:	4293      	cmp	r3, r2
   112aa:	d109      	bne.n	112c0 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   112ac:	7868      	ldrb	r0, [r5, #1]
   112ae:	7821      	ldrb	r1, [r4, #0]
   112b0:	4288      	cmp	r0, r1
   112b2:	d105      	bne.n	112c0 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   112b4:	2224      	movs	r2, #36	; 0x24
   112b6:	2100      	movs	r1, #0
   112b8:	4620      	mov	r0, r4
   112ba:	f007 ff9b 	bl	191f4 <memset>
   112be:	e069      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   112c0:	78e9      	ldrb	r1, [r5, #3]
   112c2:	b149      	cbz	r1, 112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   112c4:	7869      	ldrb	r1, [r5, #1]
   112c6:	4291      	cmp	r1, r2
   112c8:	d106      	bne.n	112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   112ca:	7822      	ldrb	r2, [r4, #0]
   112cc:	429a      	cmp	r2, r3
   112ce:	d103      	bne.n	112d8 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   112d0:	79aa      	ldrb	r2, [r5, #6]
   112d2:	79a3      	ldrb	r3, [r4, #6]
   112d4:	429a      	cmp	r2, r3
   112d6:	d0ed      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   112d8:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   112dc:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   112e0:	8c21      	ldrh	r1, [r4, #32]
   112e2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   112e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   112ea:	4299      	cmp	r1, r3
   112ec:	db52      	blt.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   112ee:	4620      	mov	r0, r4
   112f0:	f7ff fed0 	bl	11094 <mesh_send_packet>
   112f4:	e7de      	b.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   112f6:	7863      	ldrb	r3, [r4, #1]
   112f8:	2b00      	cmp	r3, #0
   112fa:	d04b      	beq.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   112fc:	2d00      	cmp	r5, #0
   112fe:	d032      	beq.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   11300:	792a      	ldrb	r2, [r5, #4]
   11302:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   11306:	2ac0      	cmp	r2, #192	; 0xc0
   11308:	d12b      	bne.n	11362 <mesh_handle_pnd_pkts_for_arr+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   1130a:	7822      	ldrb	r2, [r4, #0]
   1130c:	7869      	ldrb	r1, [r5, #1]
   1130e:	428a      	cmp	r2, r1
   11310:	d102      	bne.n	11318 <mesh_handle_pnd_pkts_for_arr+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   11312:	7828      	ldrb	r0, [r5, #0]
   11314:	4298      	cmp	r0, r3
   11316:	d0cd      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   11318:	78e6      	ldrb	r6, [r4, #3]
   1131a:	78a8      	ldrb	r0, [r5, #2]
   1131c:	4286      	cmp	r6, r0
   1131e:	d108      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11320:	4299      	cmp	r1, r3
   11322:	d106      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11324:	7829      	ldrb	r1, [r5, #0]
   11326:	428a      	cmp	r2, r1
   11328:	d103      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1132a:	79a1      	ldrb	r1, [r4, #6]
   1132c:	79aa      	ldrb	r2, [r5, #6]
   1132e:	4291      	cmp	r1, r2
   11330:	d0c0      	beq.n	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   11332:	78a9      	ldrb	r1, [r5, #2]
   11334:	78e2      	ldrb	r2, [r4, #3]
   11336:	4291      	cmp	r1, r2
   11338:	d115      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1133a:	786a      	ldrb	r2, [r5, #1]
   1133c:	429a      	cmp	r2, r3
   1133e:	d112      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11340:	7821      	ldrb	r1, [r4, #0]
   11342:	782a      	ldrb	r2, [r5, #0]
   11344:	4291      	cmp	r1, r2
   11346:	d10e      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11348:	79a1      	ldrb	r1, [r4, #6]
   1134a:	79aa      	ldrb	r2, [r5, #6]
   1134c:	4291      	cmp	r1, r2
   1134e:	d10a      	bne.n	11366 <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11350:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   11352:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11356:	f367 03c5 	bfi	r3, r7, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   1135a:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   1135e:	7123      	strb	r3, [r4, #4]
   11360:	e018      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   11362:	2a00      	cmp	r2, #0
   11364:	d1e5      	bne.n	11332 <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   11366:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   1136a:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   1136e:	8c20      	ldrh	r0, [r4, #32]
   11370:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   11374:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   11378:	4290      	cmp	r0, r2
   1137a:	db0b      	blt.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1137c:	7922      	ldrb	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   1137e:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11382:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   11386:	b2ce      	uxtb	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11388:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1138c:	b126      	cbz	r6, 11398 <mesh_handle_pnd_pkts_for_arr+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   1138e:	4620      	mov	r0, r4
   11390:	f7ff fe9e 	bl	110d0 <mesh_send_retry_packet>
   11394:	3424      	adds	r4, #36	; 0x24
   11396:	e77c      	b.n	11292 <mesh_handle_pnd_pkts_for_arr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   11398:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   1139c:	2ac0      	cmp	r2, #192	; 0xc0
   1139e:	d020      	beq.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   113a0:	7820      	ldrb	r0, [r4, #0]
   113a2:	f899 2000 	ldrb.w	r2, [r9]
   113a6:	4290      	cmp	r0, r2
   113a8:	d11b      	bne.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   113aa:	78e2      	ldrb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   113ac:	4293      	cmp	r3, r2
   113ae:	d018      	beq.n	113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   113b0:	b1ba      	cbz	r2, 113e2 <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   113b2:	2203      	movs	r2, #3
   113b4:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   113b6:	70e1      	strb	r1, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   113b8:	f362 1307 	bfi	r3, r2, #4, #4
   113bc:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   113be:	4620      	mov	r0, r4
   113c0:	f7ff fe86 	bl	110d0 <mesh_send_retry_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   113c4:	7923      	ldrb	r3, [r4, #4]
   113c6:	f89a 2000 	ldrb.w	r2, [sl]
   113ca:	f362 03c5 	bfi	r3, r2, #3, #3
   113ce:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   113d0:	7860      	ldrb	r0, [r4, #1]
   113d2:	f7ff fe97 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   113d6:	b100      	cbz	r0, 113da <mesh_handle_pnd_pkts_for_arr+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   113d8:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   113da:	2e00      	cmp	r6, #0
   113dc:	f47f af6a 	bne.w	112b4 <mesh_handle_pnd_pkts_for_arr+0x3c>
   113e0:	e7d8      	b.n	11394 <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   113e2:	2601      	movs	r6, #1
   113e4:	e7f4      	b.n	113d0 <mesh_handle_pnd_pkts_for_arr+0x158>
   113e6:	bf00      	nop
   113e8:	2007c08c 	.word	0x2007c08c
   113ec:	2007c094 	.word	0x2007c094

000113f0 <mesh_set_node_address>:
mesh_set_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   113f0:	1e43      	subs	r3, r0, #1
   113f2:	b2db      	uxtb	r3, r3
   113f4:	2bfd      	cmp	r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   113f6:	bf9d      	ittte	ls
   113f8:	4b02      	ldrls	r3, [pc, #8]	; (11404 <mesh_set_node_address+0x14>)
   113fa:	7018      	strbls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   113fc:	2001      	movls	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   113fe:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   11400:	4770      	bx	lr
   11402:	bf00      	nop
   11404:	2007c08c 	.word	0x2007c08c

00011408 <mesh_get_node_address>:
mesh_get_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   11408:	4b01      	ldr	r3, [pc, #4]	; (11410 <mesh_get_node_address+0x8>)
   1140a:	7818      	ldrb	r0, [r3, #0]
   1140c:	4770      	bx	lr
   1140e:	bf00      	nop
   11410:	2007c08c 	.word	0x2007c08c

00011414 <mesh_form_pkt>:
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   11414:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11418:	4604      	mov	r4, r0
   1141a:	4691      	mov	r9, r2
   1141c:	461e      	mov	r6, r3
   1141e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   11422:	460f      	mov	r7, r1
   11424:	2900      	cmp	r1, #0
   11426:	d065      	beq.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   11428:	4b34      	ldr	r3, [pc, #208]	; (114fc <mesh_form_pkt+0xe8>)
   1142a:	f893 8000 	ldrb.w	r8, [r3]
   1142e:	4541      	cmp	r1, r8
   11430:	d060      	beq.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   11432:	2e0f      	cmp	r6, #15
   11434:	d85e      	bhi.n	114f4 <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   11436:	2800      	cmp	r0, #0
   11438:	d05e      	beq.n	114f8 <mesh_form_pkt+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   1143a:	2220      	movs	r2, #32
   1143c:	2100      	movs	r1, #0
   1143e:	f007 fed9 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11442:	2fff      	cmp	r7, #255	; 0xff
   11444:	bf08      	it	eq
   11446:	f04f 0900 	moveq.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   1144a:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   1144c:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   1144e:	7067      	strb	r7, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11450:	f369 1387 	bfi	r3, r9, #6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   11454:	f362 0302 	bfi	r3, r2, #0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11458:	4a29      	ldr	r2, [pc, #164]	; (11500 <mesh_form_pkt+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   1145a:	f884 8000 	strb.w	r8, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1145e:	7812      	ldrb	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   11460:	f884 8002 	strb.w	r8, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11464:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11468:	4a26      	ldr	r2, [pc, #152]	; (11504 <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1146a:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   1146c:	7813      	ldrb	r3, [r2, #0]
   1146e:	3301      	adds	r3, #1
   11470:	b2db      	uxtb	r3, r3
   11472:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   11474:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   11476:	ab0b      	add	r3, sp, #44	; 0x2c
   11478:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   1147a:	b9c5      	cbnz	r5, 114ae <mesh_form_pkt+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   1147c:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   1147e:	2301      	movs	r3, #1
   11480:	f8df 8084 	ldr.w	r8, [pc, #132]	; 11508 <mesh_form_pkt+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   11484:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   11486:	f888 3000 	strb.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   1148a:	f7ff fe3b 	bl	11104 <mesh_find_rte_tbl_entry>
   1148e:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   11490:	f7ff fe4a 	bl	11128 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   11494:	2300      	movs	r3, #0
   11496:	f888 3000 	strb.w	r3, [r8]
   1149a:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   1149c:	bb1f      	cbnz	r7, 114e6 <mesh_form_pkt+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   1149e:	f366 1307 	bfi	r3, r6, #4, #4
   114a2:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   114a4:	70e7      	strb	r7, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   114a6:	4628      	mov	r0, r5
   114a8:	b003      	add	sp, #12
   114aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   114ae:	f104 0908 	add.w	r9, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114b2:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   114b4:	79e0      	ldrb	r0, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114b6:	4613      	mov	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   114b8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   114ba:	f853 1b08 	ldr.w	r1, [r3], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   114be:	eb00 0802 	add.w	r8, r0, r2
   114c2:	fa5f f888 	uxtb.w	r8, r8
   114c6:	3d01      	subs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   114c8:	f1b8 0f18 	cmp.w	r8, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   114cc:	9301      	str	r3, [sp, #4]
   114ce:	b2ed      	uxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   114d0:	d807      	bhi.n	114e2 <mesh_form_pkt+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   114d2:	4448      	add	r0, r9
   114d4:	f007 fe69 	bl	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   114d8:	f884 8007 	strb.w	r8, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   114dc:	2d00      	cmp	r5, #0
   114de:	d1e8      	bne.n	114b2 <mesh_form_pkt+0x9e>
   114e0:	e7cc      	b.n	1147c <mesh_form_pkt+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   114e2:	2500      	movs	r5, #0
   114e4:	e7cb      	b.n	1147e <mesh_form_pkt+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   114e6:	78ba      	ldrb	r2, [r7, #2]
   114e8:	f362 1307 	bfi	r3, r2, #4, #4
   114ec:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   114ee:	787b      	ldrb	r3, [r7, #1]
   114f0:	70e3      	strb	r3, [r4, #3]
   114f2:	e7d8      	b.n	114a6 <mesh_form_pkt+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   114f4:	2500      	movs	r5, #0
   114f6:	e7d6      	b.n	114a6 <mesh_form_pkt+0x92>
   114f8:	4605      	mov	r5, r0
   114fa:	e7d4      	b.n	114a6 <mesh_form_pkt+0x92>
   114fc:	2007c08c 	.word	0x2007c08c
   11500:	2007c094 	.word	0x2007c094
   11504:	2007c457 	.word	0x2007c457
   11508:	2007c33d 	.word	0x2007c33d

0001150c <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   1150c:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   1150e:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   11510:	4e13      	ldr	r6, [pc, #76]	; (11560 <mesh_send_formed_pkt+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11512:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   11514:	7032      	strb	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11516:	b920      	cbnz	r0, 11522 <mesh_send_formed_pkt+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   11518:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   1151a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   1151c:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   1151e:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   11520:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   11522:	f7ff fdb7 	bl	11094 <mesh_send_packet>
   11526:	4605      	mov	r5, r0
   11528:	2800      	cmp	r0, #0
   1152a:	d0f5      	beq.n	11518 <mesh_send_formed_pkt+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   1152c:	7923      	ldrb	r3, [r4, #4]
   1152e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11532:	2b40      	cmp	r3, #64	; 0x40
   11534:	d010      	beq.n	11558 <mesh_send_formed_pkt+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   11536:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   1153a:	424a      	negs	r2, r1
   1153c:	414a      	adcs	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   1153e:	2bc0      	cmp	r3, #192	; 0xc0
   11540:	d10b      	bne.n	1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   11542:	78e3      	ldrb	r3, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   11544:	b14b      	cbz	r3, 1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   11546:	7861      	ldrb	r1, [r4, #1]
   11548:	4299      	cmp	r1, r3
   1154a:	d006      	beq.n	1155a <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   1154c:	7961      	ldrb	r1, [r4, #5]
   1154e:	4620      	mov	r0, r4
   11550:	0909      	lsrs	r1, r1, #4
   11552:	f7ff fe1d 	bl	11190 <mesh_pending_packets_add>
   11556:	e7e0      	b.n	1151a <mesh_send_formed_pkt+0xe>
   11558:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   1155a:	2a00      	cmp	r2, #0
   1155c:	d1f6      	bne.n	1154c <mesh_send_formed_pkt+0x40>
   1155e:	e7dc      	b.n	1151a <mesh_send_formed_pkt+0xe>
   11560:	2007c33d 	.word	0x2007c33d

00011564 <mesh_init>:
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11564:	b082      	sub	sp, #8
   11566:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1156a:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1156c:	1e42      	subs	r2, r0, #1
   1156e:	b2d2      	uxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11570:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11572:	2afd      	cmp	r2, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11574:	4605      	mov	r5, r0
   11576:	460e      	mov	r6, r1
   11578:	9315      	str	r3, [sp, #84]	; 0x54
   1157a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1157e:	d905      	bls.n	1158c <mesh_init+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   11580:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   11582:	b00d      	add	sp, #52	; 0x34
   11584:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11588:	b002      	add	sp, #8
   1158a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   1158c:	2b00      	cmp	r3, #0
   1158e:	d0f7      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   11590:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   11592:	2f00      	cmp	r7, #0
   11594:	d0f4      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   11596:	9b19      	ldr	r3, [sp, #100]	; 0x64
   11598:	2b00      	cmp	r3, #0
   1159a:	d0f1      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   1159c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   1159e:	2b00      	cmp	r3, #0
   115a0:	d0ee      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   115a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
   115a4:	2b00      	cmp	r3, #0
   115a6:	d0eb      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   115a8:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   115aa:	2248      	movs	r2, #72	; 0x48
   115ac:	2100      	movs	r1, #0
   115ae:	4823      	ldr	r0, [pc, #140]	; (1163c <mesh_init+0xd8>)
   115b0:	f007 fe20 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   115b4:	2290      	movs	r2, #144	; 0x90
   115b6:	2100      	movs	r1, #0
   115b8:	4821      	ldr	r0, [pc, #132]	; (11640 <mesh_init+0xdc>)
   115ba:	f007 fe1b 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   115be:	2210      	movs	r2, #16
   115c0:	2100      	movs	r1, #0
   115c2:	4820      	ldr	r0, [pc, #128]	; (11644 <mesh_init+0xe0>)
   115c4:	f007 fe16 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   115c8:	4b1f      	ldr	r3, [pc, #124]	; (11648 <mesh_init+0xe4>)
   115ca:	601c      	str	r4, [r3, #0]
   115cc:	605c      	str	r4, [r3, #4]
   115ce:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   115d0:	4b1e      	ldr	r3, [pc, #120]	; (1164c <mesh_init+0xe8>)
   115d2:	601c      	str	r4, [r3, #0]
   115d4:	605c      	str	r4, [r3, #4]
   115d6:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   115d8:	4b1d      	ldr	r3, [pc, #116]	; (11650 <mesh_init+0xec>)
   115da:	701d      	strb	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   115dc:	4b1d      	ldr	r3, [pc, #116]	; (11654 <mesh_init+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115de:	4d1e      	ldr	r5, [pc, #120]	; (11658 <mesh_init+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   115e0:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115e2:	ae15      	add	r6, sp, #84	; 0x54
   115e4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   115e6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   115e8:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   115ea:	2218      	movs	r2, #24
   115ec:	4621      	mov	r1, r4
   115ee:	481b      	ldr	r0, [pc, #108]	; (1165c <mesh_init+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   115f0:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   115f2:	f007 fdff 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   115f6:	4649      	mov	r1, r9
   115f8:	2217      	movs	r2, #23
   115fa:	4818      	ldr	r0, [pc, #96]	; (1165c <mesh_init+0xf8>)
   115fc:	f009 fae5 	bl	1abca <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   11600:	4621      	mov	r1, r4
   11602:	4620      	mov	r0, r4
   11604:	47b8      	blx	r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   11606:	2800      	cmp	r0, #0
   11608:	d0ba      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   1160a:	f1b8 0f00 	cmp.w	r8, #0
   1160e:	d102      	bne.n	11616 <mesh_init+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   11610:	f7ff fd1a 	bl	11048 <mesh_update_soft_timers>
   11614:	e7b5      	b.n	11582 <mesh_init+0x1e>
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11616:	2306      	movs	r3, #6
   11618:	9302      	str	r3, [sp, #8]
   1161a:	4b11      	ldr	r3, [pc, #68]	; (11660 <mesh_init+0xfc>)
   1161c:	4622      	mov	r2, r4
   1161e:	9301      	str	r3, [sp, #4]
   11620:	2301      	movs	r3, #1
   11622:	21ff      	movs	r1, #255	; 0xff
   11624:	9300      	str	r3, [sp, #0]
   11626:	a804      	add	r0, sp, #16
   11628:	f7ff fef4 	bl	11414 <mesh_form_pkt>
   1162c:	2800      	cmp	r0, #0
   1162e:	d0a7      	beq.n	11580 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11630:	a804      	add	r0, sp, #16
   11632:	f7ff ff6b 	bl	1150c <mesh_send_formed_pkt>
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   11636:	2800      	cmp	r0, #0
   11638:	d0a2      	beq.n	11580 <mesh_init+0x1c>
   1163a:	e7e9      	b.n	11610 <mesh_init+0xac>
   1163c:	2007c3f2 	.word	0x2007c3f2
   11640:	2007c33e 	.word	0x2007c33e
   11644:	2007c447 	.word	0x2007c447
   11648:	2007c43a 	.word	0x2007c43a
   1164c:	2007c3ce 	.word	0x2007c3ce
   11650:	2007c08c 	.word	0x2007c08c
   11654:	2007c446 	.word	0x2007c446
   11658:	2007c328 	.word	0x2007c328
   1165c:	2007c3da 	.word	0x2007c3da
   11660:	0001f609 	.word	0x0001f609

00011664 <mesh_send>:
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11664:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   11666:	2b18      	cmp	r3, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11668:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1166a:	d807      	bhi.n	1167c <mesh_send+0x18>
   1166c:	1c1d      	adds	r5, r3, #0
   1166e:	fab2 f482 	clz	r4, r2
   11672:	bf18      	it	ne
   11674:	2501      	movne	r5, #1
   11676:	0964      	lsrs	r4, r4, #5
   11678:	42ac      	cmp	r4, r5
   1167a:	d101      	bne.n	11680 <mesh_send+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   1167c:	2000      	movs	r0, #0
   1167e:	e00e      	b.n	1169e <mesh_send+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11680:	9302      	str	r3, [sp, #8]
   11682:	9201      	str	r2, [sp, #4]
   11684:	9500      	str	r5, [sp, #0]
   11686:	460a      	mov	r2, r1
   11688:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   1168c:	4601      	mov	r1, r0
   1168e:	a804      	add	r0, sp, #16
   11690:	f7ff fec0 	bl	11414 <mesh_form_pkt>
   11694:	2800      	cmp	r0, #0
   11696:	d0f1      	beq.n	1167c <mesh_send+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11698:	a804      	add	r0, sp, #16
   1169a:	f7ff ff37 	bl	1150c <mesh_send_formed_pkt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   1169e:	b00d      	add	sp, #52	; 0x34
   116a0:	bd30      	pop	{r4, r5, pc}

000116a2 <mesh_send_ack>:
mesh_send_ack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   116a2:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   116a4:	7953      	ldrb	r3, [r2, #5]
   116a6:	7814      	ldrb	r4, [r2, #0]
   116a8:	091b      	lsrs	r3, r3, #4
   116aa:	9300      	str	r3, [sp, #0]
   116ac:	4602      	mov	r2, r0
   116ae:	460b      	mov	r3, r1
   116b0:	4620      	mov	r0, r4
   116b2:	2103      	movs	r1, #3
   116b4:	f7ff ffd6 	bl	11664 <mesh_send>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   116b8:	b002      	add	sp, #8
   116ba:	bd10      	pop	{r4, pc}

000116bc <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

    return entry;
}

uint8_t mesh_get_num_routing_entries(void)
{
   116bc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   116be:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   116c0:	4a04      	ldr	r2, [pc, #16]	; (116d4 <mesh_get_num_routing_entries+0x18>)
   116c2:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   116c6:	b109      	cbz	r1, 116cc <mesh_get_num_routing_entries+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   116c8:	3001      	adds	r0, #1
   116ca:	b2c0      	uxtb	r0, r0
   116cc:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   116ce:	2b04      	cmp	r3, #4
   116d0:	d1f7      	bne.n	116c2 <mesh_get_num_routing_entries+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   116d2:	4770      	bx	lr
   116d4:	2007c447 	.word	0x2007c447

000116d8 <mesh_service>:
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   116d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   116dc:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   116de:	2220      	movs	r2, #32
   116e0:	2100      	movs	r1, #0
   116e2:	4668      	mov	r0, sp
   116e4:	f007 fd86 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   116e8:	4ba3      	ldr	r3, [pc, #652]	; (11978 <mesh_service+0x2a0>)
   116ea:	781b      	ldrb	r3, [r3, #0]
   116ec:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   116f0:	bb2b      	cbnz	r3, 1173e <mesh_service+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   116f2:	4fa2      	ldr	r7, [pc, #648]	; (1197c <mesh_service+0x2a4>)
   116f4:	2120      	movs	r1, #32
   116f6:	693b      	ldr	r3, [r7, #16]
   116f8:	4668      	mov	r0, sp
   116fa:	4798      	blx	r3
   116fc:	b908      	cbnz	r0, 11702 <mesh_service+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   116fe:	2400      	movs	r4, #0
   11700:	e011      	b.n	11726 <mesh_service+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   11702:	4d9f      	ldr	r5, [pc, #636]	; (11980 <mesh_service+0x2a8>)
   11704:	886b      	ldrh	r3, [r5, #2]
   11706:	3301      	adds	r3, #1
   11708:	806b      	strh	r3, [r5, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   1170a:	f7ff ffd7 	bl	116bc <mesh_get_num_routing_entries>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   1170e:	f89d 2004 	ldrb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   11712:	72a8      	strb	r0, [r5, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   11714:	f002 0307 	and.w	r3, r2, #7
   11718:	2b03      	cmp	r3, #3
   1171a:	d013      	beq.n	11744 <mesh_service+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   1171c:	4a99      	ldr	r2, [pc, #612]	; (11984 <mesh_service+0x2ac>)
   1171e:	7813      	ldrb	r3, [r2, #0]
   11720:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11724:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   11726:	f7ff fc8f 	bl	11048 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1172a:	2204      	movs	r2, #4
   1172c:	4996      	ldr	r1, [pc, #600]	; (11988 <mesh_service+0x2b0>)
   1172e:	4620      	mov	r0, r4
   11730:	f7ff fda2 	bl	11278 <mesh_handle_pnd_pkts_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   11734:	2202      	movs	r2, #2
   11736:	4995      	ldr	r1, [pc, #596]	; (1198c <mesh_service+0x2b4>)
   11738:	4620      	mov	r0, r4
   1173a:	f7ff fd9d 	bl	11278 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   1173e:	b008      	add	sp, #32
   11740:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   11744:	4b92      	ldr	r3, [pc, #584]	; (11990 <mesh_service+0x2b8>)
   11746:	f89d e002 	ldrb.w	lr, [sp, #2]
   1174a:	781e      	ldrb	r6, [r3, #0]
   1174c:	45b6      	cmp	lr, r6
   1174e:	d104      	bne.n	1175a <mesh_service+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11750:	4a8c      	ldr	r2, [pc, #560]	; (11984 <mesh_service+0x2ac>)
   11752:	7813      	ldrb	r3, [r2, #0]
   11754:	f043 0302 	orr.w	r3, r3, #2
   11758:	e7e4      	b.n	11724 <mesh_service+0x4c>
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1175a:	4d8e      	ldr	r5, [pc, #568]	; (11994 <mesh_service+0x2bc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   1175c:	4621      	mov	r1, r4
   1175e:	46a8      	mov	r8, r5
   11760:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   11764:	f89d 0000 	ldrb.w	r0, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   11768:	f89d c006 	ldrb.w	ip, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   1176c:	fa5f f982 	uxtb.w	r9, r2
   11770:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   11774:	f813 a005 	ldrb.w	sl, [r3, r5]
   11778:	4582      	cmp	sl, r0
   1177a:	d123      	bne.n	117c4 <mesh_service+0xec>
   1177c:	442b      	add	r3, r5
   1177e:	f893 a001 	ldrb.w	sl, [r3, #1]
   11782:	45e2      	cmp	sl, ip
   11784:	d11e      	bne.n	117c4 <mesh_service+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   11786:	789d      	ldrb	r5, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   11788:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1178a:	ebb5 0509 	subs.w	r5, r5, r9
   1178e:	bf18      	it	ne
   11790:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   11792:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   11796:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1179a:	f7ff fd41 	bl	11220 <mesh_get_rte_to_modify>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   1179e:	f89d 2002 	ldrb.w	r2, [sp, #2]
   117a2:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   117a4:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   117a6:	2200      	movs	r2, #0
   117a8:	7082      	strb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   117aa:	f7ff fcbd 	bl	11128 <mesh_update_rte_scores>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   117ae:	f1b9 0f00 	cmp.w	r9, #0
   117b2:	d001      	beq.n	117b8 <mesh_service+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   117b4:	2d00      	cmp	r5, #0
   117b6:	d0a2      	beq.n	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   117b8:	f89d 3000 	ldrb.w	r3, [sp]
   117bc:	42b3      	cmp	r3, r6
   117be:	d133      	bne.n	11828 <mesh_service+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   117c0:	466c      	mov	r4, sp
   117c2:	e7b0      	b.n	11726 <mesh_service+0x4e>
   117c4:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   117c6:	2904      	cmp	r1, #4
   117c8:	d1d2      	bne.n	11770 <mesh_service+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117ca:	4973      	ldr	r1, [pc, #460]	; (11998 <mesh_service+0x2c0>)
   117cc:	680b      	ldr	r3, [r1, #0]
   117ce:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117d0:	4a72      	ldr	r2, [pc, #456]	; (1199c <mesh_service+0x2c4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117d2:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117d4:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   117d6:	f883 c001 	strb.w	ip, [r3, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   117da:	d106      	bne.n	117ea <mesh_service+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   117dc:	f8c1 8000 	str.w	r8, [r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   117e0:	4586      	cmp	lr, r0
   117e2:	d105      	bne.n	117f0 <mesh_service+0x118>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   117e4:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   117e6:	46a9      	mov	r9, r5
   117e8:	e7d5      	b.n	11796 <mesh_service+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   117ea:	3303      	adds	r3, #3
   117ec:	600b      	str	r3, [r1, #0]
   117ee:	e7f7      	b.n	117e0 <mesh_service+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   117f0:	4286      	cmp	r6, r0
   117f2:	d0f7      	beq.n	117e4 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   117f4:	f7ff fd14 	bl	11220 <mesh_get_rte_to_modify>
   117f8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   117fa:	f7ff fc95 	bl	11128 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   117fe:	782b      	ldrb	r3, [r5, #0]
   11800:	b133      	cbz	r3, 11810 <mesh_service+0x138>
   11802:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11806:	78aa      	ldrb	r2, [r5, #2]
   11808:	f003 030f 	and.w	r3, r3, #15
   1180c:	4293      	cmp	r3, r2
   1180e:	dce9      	bgt.n	117e4 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   11810:	f89d 3000 	ldrb.w	r3, [sp]
   11814:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   11816:	f89d 3002 	ldrb.w	r3, [sp, #2]
   1181a:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   1181c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11820:	f3c3 0303 	ubfx	r3, r3, #0, #4
   11824:	70ab      	strb	r3, [r5, #2]
   11826:	e7dd      	b.n	117e4 <mesh_service+0x10c>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   11828:	f89d 8001 	ldrb.w	r8, [sp, #1]
   1182c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   11830:	d11b      	bne.n	1186a <mesh_service+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   11832:	683b      	ldr	r3, [r7, #0]
   11834:	2120      	movs	r1, #32
   11836:	4668      	mov	r0, sp
   11838:	4798      	blx	r3
   1183a:	b920      	cbnz	r0, 11846 <mesh_service+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   1183c:	4a51      	ldr	r2, [pc, #324]	; (11984 <mesh_service+0x2ac>)
   1183e:	7813      	ldrb	r3, [r2, #0]
   11840:	f043 0304 	orr.w	r3, r3, #4
   11844:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   11846:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1184a:	f003 020f 	and.w	r2, r3, #15
   1184e:	1c51      	adds	r1, r2, #1
   11850:	f361 0303 	bfi	r3, r1, #0, #4
   11854:	f88d 3005 	strb.w	r3, [sp, #5]
   11858:	f3c3 1303 	ubfx	r3, r3, #4, #4
   1185c:	429a      	cmp	r2, r3
   1185e:	f6bf af4e 	bge.w	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   11862:	4668      	mov	r0, sp
   11864:	f7ff fc16 	bl	11094 <mesh_send_packet>
   11868:	e749      	b.n	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1186a:	4546      	cmp	r6, r8
   1186c:	d12e      	bne.n	118cc <mesh_service+0x1f4>
mesh_handle_our_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   1186e:	f1b9 0f00 	cmp.w	r9, #0
   11872:	d10c      	bne.n	1188e <mesh_service+0x1b6>
   11874:	f89d 3007 	ldrb.w	r3, [sp, #7]
   11878:	b14b      	cbz	r3, 1188e <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1187a:	683b      	ldr	r3, [r7, #0]
   1187c:	2120      	movs	r1, #32
   1187e:	4668      	mov	r0, sp
   11880:	4798      	blx	r3
   11882:	b920      	cbnz	r0, 1188e <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   11884:	4a3f      	ldr	r2, [pc, #252]	; (11984 <mesh_service+0x2ac>)
   11886:	7813      	ldrb	r3, [r2, #0]
   11888:	f043 0304 	orr.w	r3, r3, #4
   1188c:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   1188e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11892:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11896:	2b40      	cmp	r3, #64	; 0x40
   11898:	d112      	bne.n	118c0 <mesh_service+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1189a:	f89d 3007 	ldrb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   1189e:	466a      	mov	r2, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   118a0:	b923      	cbnz	r3, 118ac <mesh_service+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   118a2:	2118      	movs	r1, #24
   118a4:	483e      	ldr	r0, [pc, #248]	; (119a0 <mesh_service+0x2c8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   118a6:	f7ff fefc 	bl	116a2 <mesh_send_ack>
   118aa:	e789      	b.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   118ac:	210c      	movs	r1, #12
   118ae:	4834      	ldr	r0, [pc, #208]	; (11980 <mesh_service+0x2a8>)
   118b0:	f7ff fef7 	bl	116a2 <mesh_send_ack>
   118b4:	2800      	cmp	r0, #0
   118b6:	d183      	bne.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   118b8:	2100      	movs	r1, #0
   118ba:	466a      	mov	r2, sp
   118bc:	4608      	mov	r0, r1
   118be:	e7f2      	b.n	118a6 <mesh_service+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   118c0:	f89d 3003 	ldrb.w	r3, [sp, #3]
   118c4:	2b00      	cmp	r3, #0
   118c6:	f47f af7b 	bne.w	117c0 <mesh_service+0xe8>
   118ca:	e7f5      	b.n	118b8 <mesh_service+0x1e0>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   118cc:	4b35      	ldr	r3, [pc, #212]	; (119a4 <mesh_service+0x2cc>)
   118ce:	781f      	ldrb	r7, [r3, #0]
   118d0:	2f00      	cmp	r7, #0
   118d2:	f43f af14 	beq.w	116fe <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   118d6:	f89d 5005 	ldrb.w	r5, [sp, #5]
   118da:	f005 090f 	and.w	r9, r5, #15
   118de:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   118e2:	45d1      	cmp	r9, sl
   118e4:	f6bf af0b 	bge.w	116fe <mesh_service+0x26>
mesh_handle_mesh_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   118e8:	4640      	mov	r0, r8
   118ea:	f7ff fc0b 	bl	11104 <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   118ee:	f89d 3003 	ldrb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   118f2:	f109 0901 	add.w	r9, r9, #1
   118f6:	f369 0503 	bfi	r5, r9, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   118fa:	429e      	cmp	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   118fc:	f88d 5005 	strb.w	r5, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   11900:	d124      	bne.n	1194c <mesh_service+0x274>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   11902:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11906:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1190a:	2b40      	cmp	r3, #64	; 0x40
   1190c:	d003      	beq.n	11916 <mesh_service+0x23e>
   1190e:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   11912:	4257      	negs	r7, r2
   11914:	4157      	adcs	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   11916:	b350      	cbz	r0, 1196e <mesh_service+0x296>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11918:	2bc0      	cmp	r3, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   1191a:	7844      	ldrb	r4, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1191c:	d120      	bne.n	11960 <mesh_service+0x288>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   1191e:	45a0      	cmp	r8, r4
   11920:	d012      	beq.n	11948 <mesh_service+0x270>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11922:	3400      	adds	r4, #0
   11924:	bf18      	it	ne
   11926:	2401      	movne	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11928:	433c      	orrs	r4, r7
   1192a:	f004 0401 	and.w	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   1192e:	b1d0      	cbz	r0, 11966 <mesh_service+0x28e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   11930:	7843      	ldrb	r3, [r0, #1]
   11932:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   11936:	7885      	ldrb	r5, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   11938:	4668      	mov	r0, sp
   1193a:	f7ff fbab 	bl	11094 <mesh_send_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   1193e:	2c00      	cmp	r4, #0
   11940:	f43f af3e 	beq.w	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11944:	4629      	mov	r1, r5
   11946:	e007      	b.n	11958 <mesh_service+0x280>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11948:	2400      	movs	r4, #0
   1194a:	e7ed      	b.n	11928 <mesh_service+0x250>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   1194c:	2b00      	cmp	r3, #0
   1194e:	f47f af37 	bne.w	117c0 <mesh_service+0xe8>
   11952:	2800      	cmp	r0, #0
   11954:	d1ec      	bne.n	11930 <mesh_service+0x258>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   11956:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11958:	4668      	mov	r0, sp
   1195a:	f7ff fc19 	bl	11190 <mesh_pending_packets_add>
   1195e:	e72f      	b.n	117c0 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11960:	463c      	mov	r4, r7
   11962:	e7e5      	b.n	11930 <mesh_service+0x258>
   11964:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   11966:	2500      	movs	r5, #0
   11968:	f88d 5003 	strb.w	r5, [sp, #3]
   1196c:	e7e4      	b.n	11938 <mesh_service+0x260>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1196e:	2bc0      	cmp	r3, #192	; 0xc0
   11970:	d1f8      	bne.n	11964 <mesh_service+0x28c>
   11972:	4604      	mov	r4, r0
   11974:	e7d8      	b.n	11928 <mesh_service+0x250>
   11976:	bf00      	nop
   11978:	2007c33d 	.word	0x2007c33d
   1197c:	2007c328 	.word	0x2007c328
   11980:	2007c3ce 	.word	0x2007c3ce
   11984:	2007c33c 	.word	0x2007c33c
   11988:	2007c33e 	.word	0x2007c33e
   1198c:	2007c3f2 	.word	0x2007c3f2
   11990:	2007c08c 	.word	0x2007c08c
   11994:	2007c43a 	.word	0x2007c43a
   11998:	2007c090 	.word	0x2007c090
   1199c:	2007c443 	.word	0x2007c443
   119a0:	2007c3da 	.word	0x2007c3da
   119a4:	2007c446 	.word	0x2007c446

000119a8 <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   119a8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   119aa:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   119ac:	4a09      	ldr	r2, [pc, #36]	; (119d4 <mesh_get_pnd_pkt_count+0x2c>)
   119ae:	18d1      	adds	r1, r2, r3
   119b0:	7849      	ldrb	r1, [r1, #1]
   119b2:	b109      	cbz	r1, 119b8 <mesh_get_pnd_pkt_count+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   119b4:	3001      	adds	r0, #1
   119b6:	b2c0      	uxtb	r0, r0
   119b8:	3324      	adds	r3, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   119ba:	2b90      	cmp	r3, #144	; 0x90
   119bc:	d1f7      	bne.n	119ae <mesh_get_pnd_pkt_count+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   119be:	4b06      	ldr	r3, [pc, #24]	; (119d8 <mesh_get_pnd_pkt_count+0x30>)
   119c0:	785a      	ldrb	r2, [r3, #1]
   119c2:	b10a      	cbz	r2, 119c8 <mesh_get_pnd_pkt_count+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   119c4:	3001      	adds	r0, #1
   119c6:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   119c8:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   119cc:	b10b      	cbz	r3, 119d2 <mesh_get_pnd_pkt_count+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   119ce:	3001      	adds	r0, #1
   119d0:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   119d2:	4770      	bx	lr
   119d4:	2007c33e 	.word	0x2007c33e
   119d8:	2007c3f2 	.word	0x2007c3f2

000119dc <mem_cpy>:
mem_cpy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   119dc:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   119de:	4604      	mov	r4, r0
   119e0:	1f0d      	subs	r5, r1, #4
   119e2:	1b13      	subs	r3, r2, r4
   119e4:	4403      	add	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   119e6:	2b03      	cmp	r3, #3
   119e8:	d80a      	bhi.n	11a00 <mem_cpy+0x24>
   119ea:	f022 0303 	bic.w	r3, r2, #3
   119ee:	4419      	add	r1, r3
   119f0:	f002 0203 	and.w	r2, r2, #3
   119f4:	3b01      	subs	r3, #1
   119f6:	4418      	add	r0, r3
   119f8:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   119fa:	4291      	cmp	r1, r2
   119fc:	d105      	bne.n	11a0a <mem_cpy+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   119fe:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   11a00:	f855 3f04 	ldr.w	r3, [r5, #4]!
   11a04:	f844 3b04 	str.w	r3, [r4], #4
   11a08:	e7eb      	b.n	119e2 <mem_cpy+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   11a0a:	f811 3b01 	ldrb.w	r3, [r1], #1
   11a0e:	f800 3f01 	strb.w	r3, [r0, #1]!
   11a12:	e7f2      	b.n	119fa <mem_cpy+0x1e>

00011a14 <mem_set>:
mem_set():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   11a14:	4402      	add	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   11a16:	4290      	cmp	r0, r2
   11a18:	d100      	bne.n	11a1c <mem_set+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   11a1a:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   11a1c:	f800 1b01 	strb.w	r1, [r0], #1
   11a20:	e7f9      	b.n	11a16 <mem_set+0x2>

00011a22 <sum_sfn>:
sum_sfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   11a22:	4602      	mov	r2, r0
   11a24:	f100 010b 	add.w	r1, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   11a28:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   11a2a:	01c3      	lsls	r3, r0, #7
   11a2c:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   11a30:	f812 0b01 	ldrb.w	r0, [r2], #1
   11a34:	4403      	add	r3, r0
   11a36:	428a      	cmp	r2, r1
   11a38:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   11a3c:	d1f5      	bne.n	11a2a <sum_sfn+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   11a3e:	4770      	bx	lr

00011a40 <get_ldnumber>:
get_ldnumber():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   11a40:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   11a42:	b510      	push	{r4, lr}
   11a44:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   11a46:	b153      	cbz	r3, 11a5e <get_ldnumber+0x1e>
   11a48:	4619      	mov	r1, r3
   11a4a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   11a4c:	f811 0b01 	ldrb.w	r0, [r1], #1
   11a50:	281f      	cmp	r0, #31
   11a52:	d910      	bls.n	11a76 <get_ldnumber+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   11a54:	283a      	cmp	r0, #58	; 0x3a
   11a56:	d1f8      	bne.n	11a4a <get_ldnumber+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   11a58:	1c59      	adds	r1, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   11a5a:	428a      	cmp	r2, r1
   11a5c:	d002      	beq.n	11a64 <get_ldnumber+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   11a5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11a62:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11a64:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   11a66:	3b30      	subs	r3, #48	; 0x30
   11a68:	b2d9      	uxtb	r1, r3
   11a6a:	2901      	cmp	r1, #1
   11a6c:	d8f7      	bhi.n	11a5e <get_ldnumber+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					vol = (int)i;
					*path = ++tt;
   11a6e:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11a70:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11a72:	6022      	str	r2, [r4, #0]
   11a74:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2120
#endif
			}
			return vol;
		}
#if _FS_RPATH && _VOLUMES >= 2
		vol = CurrVol;	/* Current drive */
   11a76:	4b01      	ldr	r3, [pc, #4]	; (11a7c <get_ldnumber+0x3c>)
   11a78:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   11a7a:	bd10      	pop	{r4, pc}
   11a7c:	2007c45c 	.word	0x2007c45c

00011a80 <sync_window.part.1>:
sync_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   11a82:	6b45      	ldr	r5, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11a84:	f100 0738 	add.w	r7, r0, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11a88:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11a8a:	2301      	movs	r3, #1
   11a8c:	462a      	mov	r2, r5
   11a8e:	4639      	mov	r1, r7
   11a90:	7840      	ldrb	r0, [r0, #1]
   11a92:	f002 f944 	bl	13d1e <disk_write>
   11a96:	b9a0      	cbnz	r0, 11ac2 <sync_window.part.1+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11a98:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   11a9a:	6a22      	ldr	r2, [r4, #32]
   11a9c:	1aeb      	subs	r3, r5, r3
   11a9e:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   11aa0:	7120      	strb	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11aa2:	d301      	bcc.n	11aa8 <sync_window.part.1+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   11aa4:	2000      	movs	r0, #0
   11aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11aa8:	78e6      	ldrb	r6, [r4, #3]
   11aaa:	2e01      	cmp	r6, #1
   11aac:	d9fa      	bls.n	11aa4 <sync_window.part.1+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11aae:	6a23      	ldr	r3, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11ab0:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11ab2:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11ab4:	462a      	mov	r2, r5
   11ab6:	2301      	movs	r3, #1
   11ab8:	7860      	ldrb	r0, [r4, #1]
   11aba:	f002 f930 	bl	13d1e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11abe:	3e01      	subs	r6, #1
   11ac0:	e7f3      	b.n	11aaa <sync_window.part.1+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   11ac2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ac6 <sync_window>:
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   11ac6:	7903      	ldrb	r3, [r0, #4]
   11ac8:	b10b      	cbz	r3, 11ace <sync_window+0x8>
   11aca:	f7ff bfd9 	b.w	11a80 <sync_window.part.1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ace:	4618      	mov	r0, r3
   11ad0:	4770      	bx	lr
   11ad2:	Address 0x0000000000011ad2 is out of bounds.


00011ad4 <sync_fs>:
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   11ad4:	b570      	push	{r4, r5, r6, lr}
   11ad6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   11ad8:	f7ff fff5 	bl	11ac6 <sync_window>
   11adc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   11ade:	bb80      	cbnz	r0, 11b42 <sync_fs+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   11ae0:	7823      	ldrb	r3, [r4, #0]
   11ae2:	2b03      	cmp	r3, #3
   11ae4:	d125      	bne.n	11b32 <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   11ae6:	7963      	ldrb	r3, [r4, #5]
   11ae8:	2b01      	cmp	r3, #1
   11aea:	d122      	bne.n	11b32 <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   11aec:	f104 0638 	add.w	r6, r4, #56	; 0x38
   11af0:	4601      	mov	r1, r0
   11af2:	f44f 7200 	mov.w	r2, #512	; 0x200
   11af6:	4630      	mov	r0, r6
   11af8:	f7ff ff8c 	bl	11a14 <mem_set>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11afc:	f64a 2255 	movw	r2, #43605	; 0xaa55
   11b00:	f8a4 2236 	strh.w	r2, [r4, #566]	; 0x236
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11b04:	4a0f      	ldr	r2, [pc, #60]	; (11b44 <sync_fs+0x70>)
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11b06:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11b08:	63a2      	str	r2, [r4, #56]	; 0x38
   11b0a:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   11b0e:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   11b12:	3220      	adds	r2, #32
   11b14:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   11b18:	6962      	ldr	r2, [r4, #20]
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   11b1a:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11b1c:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
   11b20:	6922      	ldr	r2, [r4, #16]
   11b22:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   11b26:	6a62      	ldr	r2, [r4, #36]	; 0x24
   11b28:	3201      	adds	r2, #1
   11b2a:	6362      	str	r2, [r4, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11b2c:	f002 f8f7 	bl	13d1e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   11b30:	7165      	strb	r5, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   11b32:	2200      	movs	r2, #0
   11b34:	7860      	ldrb	r0, [r4, #1]
   11b36:	4611      	mov	r1, r2
   11b38:	f002 f90d 	bl	13d56 <disk_ioctl>
   11b3c:	3000      	adds	r0, #0
   11b3e:	bf18      	it	ne
   11b40:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   11b42:	bd70      	pop	{r4, r5, r6, pc}
   11b44:	41615252 	.word	0x41615252

00011b48 <move_window>:
move_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b48:	6b43      	ldr	r3, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11b4a:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b4c:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11b4e:	4605      	mov	r5, r0
   11b50:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11b52:	d011      	beq.n	11b78 <move_window+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   11b54:	f7ff ffb7 	bl	11ac6 <sync_window>
   11b58:	4604      	mov	r4, r0
   11b5a:	b110      	cbz	r0, 11b62 <move_window+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   11b5c:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   11b5e:	4620      	mov	r0, r4
   11b60:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   11b62:	2301      	movs	r3, #1
   11b64:	4632      	mov	r2, r6
   11b66:	f105 0138 	add.w	r1, r5, #56	; 0x38
   11b6a:	7868      	ldrb	r0, [r5, #1]
   11b6c:	f002 f8bb 	bl	13ce6 <disk_read>
   11b70:	2800      	cmp	r0, #0
   11b72:	d1f3      	bne.n	11b5c <move_window+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   11b74:	636e      	str	r6, [r5, #52]	; 0x34
   11b76:	e7f2      	b.n	11b5e <move_window+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   11b78:	2400      	movs	r4, #0
   11b7a:	e7f0      	b.n	11b5e <move_window+0x16>

00011b7c <check_fs>:
check_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11b7c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11b7e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11b80:	7103      	strb	r3, [r0, #4]
   11b82:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11b86:	6343      	str	r3, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11b88:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   11b8a:	f7ff ffdd 	bl	11b48 <move_window>
   11b8e:	b9a0      	cbnz	r0, 11bba <check_fs+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   11b90:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11b94:	f8b4 2236 	ldrh.w	r2, [r4, #566]	; 0x236
   11b98:	429a      	cmp	r2, r3
   11b9a:	d110      	bne.n	11bbe <check_fs+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   11b9c:	f8d4 306e 	ldr.w	r3, [r4, #110]	; 0x6e
   11ba0:	4a08      	ldr	r2, [pc, #32]	; (11bc4 <check_fs+0x48>)
   11ba2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   11ba6:	4293      	cmp	r3, r2
   11ba8:	d00a      	beq.n	11bc0 <check_fs+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   11baa:	f8d4 008a 	ldr.w	r0, [r4, #138]	; 0x8a
   11bae:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   11bb2:	1a80      	subs	r0, r0, r2
   11bb4:	bf18      	it	ne
   11bb6:	2001      	movne	r0, #1
   11bb8:	bd10      	pop	{r4, pc}
   11bba:	2003      	movs	r0, #3
   11bbc:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   11bbe:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   11bc0:	bd10      	pop	{r4, pc}
   11bc2:	bf00      	nop
   11bc4:	00544146 	.word	0x00544146

00011bc8 <find_volume>:
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   11bc8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bca:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   11bcc:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bce:	b085      	sub	sp, #20
   11bd0:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11bd2:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11bd4:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11bd6:	f7ff ff33 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11bda:	1e06      	subs	r6, r0, #0
   11bdc:	f2c0 80f2 	blt.w	11dc4 <find_volume+0x1fc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   11be0:	4b7e      	ldr	r3, [pc, #504]	; (11ddc <find_volume+0x214>)
   11be2:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11be6:	2c00      	cmp	r4, #0
   11be8:	f000 80ee 	beq.w	11dc8 <find_volume+0x200>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11bec:	68e0      	ldr	r0, [r4, #12]
   11bee:	f001 fc81 	bl	134f4 <ff_req_grant>
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   11bf2:	2800      	cmp	r0, #0
   11bf4:	f000 80ea 	beq.w	11dcc <find_volume+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   11bf8:	603c      	str	r4, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   11bfa:	7823      	ldrb	r3, [r4, #0]
   11bfc:	b16b      	cbz	r3, 11c1a <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   11bfe:	7860      	ldrb	r0, [r4, #1]
   11c00:	f002 f869 	bl	13cd6 <disk_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   11c04:	07c1      	lsls	r1, r0, #31
   11c06:	d408      	bmi.n	11c1a <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   11c08:	2d00      	cmp	r5, #0
   11c0a:	f000 80e1 	beq.w	11dd0 <find_volume+0x208>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   11c0e:	f010 0004 	ands.w	r0, r0, #4
   11c12:	d000      	beq.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   11c14:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   11c16:	b005      	add	sp, #20
   11c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11c1a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11c1c:	b2f0      	uxtb	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11c1e:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11c20:	7060      	strb	r0, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   11c22:	f002 f845 	bl	13cb0 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   11c26:	07c2      	lsls	r2, r0, #31
   11c28:	f100 80d4 	bmi.w	11dd4 <find_volume+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   11c2c:	b10d      	cbz	r5, 11c32 <find_volume+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   11c2e:	0743      	lsls	r3, r0, #29
   11c30:	d4f0      	bmi.n	11c14 <find_volume+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   11c32:	2100      	movs	r1, #0
   11c34:	4620      	mov	r0, r4
   11c36:	f7ff ffa1 	bl	11b7c <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   11c3a:	2801      	cmp	r0, #1
   11c3c:	f040 80ad 	bne.w	11d9a <find_volume+0x1d2>
   11c40:	4621      	mov	r1, r4
   11c42:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   11c44:	f891 31fa 	ldrb.w	r3, [r1, #506]	; 0x1fa
   11c48:	b10b      	cbz	r3, 11c4e <find_volume+0x86>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11c4a:	f8d1 31fe 	ldr.w	r3, [r1, #510]	; 0x1fe
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   11c4e:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   11c52:	3201      	adds	r2, #1
   11c54:	2a04      	cmp	r2, #4
   11c56:	f101 0110 	add.w	r1, r1, #16
   11c5a:	d1f3      	bne.n	11c44 <find_volume+0x7c>
   11c5c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   11c5e:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11c62:	2d00      	cmp	r5, #0
   11c64:	f000 808d 	beq.w	11d82 <find_volume+0x1ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   11c68:	4629      	mov	r1, r5
   11c6a:	4620      	mov	r0, r4
   11c6c:	f7ff ff86 	bl	11b7c <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11c70:	2800      	cmp	r0, #0
   11c72:	f040 8087 	bne.w	11d84 <find_volume+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   11c76:	f8b4 3043 	ldrh.w	r3, [r4, #67]	; 0x43
   11c7a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   11c7e:	f040 808a 	bne.w	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   11c82:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   11c86:	b901      	cbnz	r1, 11c8a <find_volume+0xc2>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   11c88:	6de1      	ldr	r1, [r4, #92]	; 0x5c
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11c8a:	f894 2048 	ldrb.w	r2, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   11c8e:	6221      	str	r1, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11c90:	1e53      	subs	r3, r2, #1
   11c92:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11c94:	70e2      	strb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11c96:	d87e      	bhi.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   11c98:	f894 6045 	ldrb.w	r6, [r4, #69]	; 0x45
   11c9c:	70a6      	strb	r6, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   11c9e:	2e00      	cmp	r6, #0
   11ca0:	d079      	beq.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   11ca2:	1e73      	subs	r3, r6, #1
   11ca4:	4233      	tst	r3, r6
   11ca6:	d176      	bne.n	11d96 <find_volume+0x1ce>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11ca8:	f8b4 e049 	ldrh.w	lr, [r4, #73]	; 0x49
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11cac:	f01e 0f0f 	tst.w	lr, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   11cb0:	f8a4 e008 	strh.w	lr, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11cb4:	d16f      	bne.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   11cb6:	f8b4 304b 	ldrh.w	r3, [r4, #75]	; 0x4b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   11cba:	b903      	cbnz	r3, 11cbe <find_volume+0xf6>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11cbc:	6da3      	ldr	r3, [r4, #88]	; 0x58
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11cbe:	f8b4 7046 	ldrh.w	r7, [r4, #70]	; 0x46
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   11cc2:	2f00      	cmp	r7, #0
   11cc4:	d067      	beq.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   11cc6:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   11cc8:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   11ccc:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   11cce:	4283      	cmp	r3, r0
   11cd0:	d361      	bcc.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   11cd2:	1a1b      	subs	r3, r3, r0
   11cd4:	fbb3 f3f6 	udiv	r3, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   11cd8:	2b00      	cmp	r3, #0
   11cda:	d05c      	beq.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   11cdc:	f640 76f5 	movw	r6, #4085	; 0xff5
   11ce0:	42b3      	cmp	r3, r6
   11ce2:	d95c      	bls.n	11d9e <find_volume+0x1d6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   11ce4:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   11ce8:	42b3      	cmp	r3, r6
   11cea:	bf94      	ite	ls
   11cec:	2602      	movls	r6, #2
   11cee:	2603      	movhi	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11cf0:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11cf2:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11cf4:	4428      	add	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11cf6:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11cf8:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   11cfa:	6265      	str	r5, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11cfc:	62a7      	str	r7, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11cfe:	6320      	str	r0, [r4, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11d00:	d14f      	bne.n	11da2 <find_volume+0x1da>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   11d02:	f1be 0f00 	cmp.w	lr, #0
   11d06:	d146      	bne.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11d08:	6e62      	ldr	r2, [r4, #100]	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   11d0a:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11d0c:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   11d0e:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   11d12:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   11d16:	d33e      	bcc.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   11d18:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11d1c:	6163      	str	r3, [r4, #20]
   11d1e:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11d20:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11d22:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11d24:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11d26:	d122      	bne.n	11d6e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   11d28:	f8b4 3068 	ldrh.w	r3, [r4, #104]	; 0x68
   11d2c:	2b01      	cmp	r3, #1
   11d2e:	d11e      	bne.n	11d6e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   11d30:	1c69      	adds	r1, r5, #1
   11d32:	4620      	mov	r0, r4
   11d34:	f7ff ff08 	bl	11b48 <move_window>
   11d38:	b9c8      	cbnz	r0, 11d6e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11d3a:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11d3e:	f8b4 2236 	ldrh.w	r2, [r4, #566]	; 0x236
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   11d42:	7160      	strb	r0, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11d44:	429a      	cmp	r2, r3
   11d46:	d112      	bne.n	11d6e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   11d48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   11d4a:	4b25      	ldr	r3, [pc, #148]	; (11de0 <find_volume+0x218>)
   11d4c:	429a      	cmp	r2, r3
   11d4e:	d10e      	bne.n	11d6e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   11d50:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   11d54:	f8d4 221c 	ldr.w	r2, [r4, #540]	; 0x21c
   11d58:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   11d5c:	3320      	adds	r3, #32
   11d5e:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   11d60:	bf01      	itttt	eq
   11d62:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   11d66:	6163      	streq	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   11d68:	f8d4 3224 	ldreq.w	r3, [r4, #548]	; 0x224
   11d6c:	6123      	streq	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2318
	fs->cdir = 0;		/* Set current directory to root */
   11d6e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11d70:	4a1c      	ldr	r2, [pc, #112]	; (11de4 <find_volume+0x21c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   11d72:	7026      	strb	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11d74:	8813      	ldrh	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2318
	fs->cdir = 0;		/* Set current directory to root */
   11d76:	61a0      	str	r0, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11d78:	3301      	adds	r3, #1
   11d7a:	b29b      	uxth	r3, r3
   11d7c:	8013      	strh	r3, [r2, #0]
   11d7e:	80e3      	strh	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   11d80:	e749      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11d82:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11d84:	3601      	adds	r6, #1
   11d86:	2e04      	cmp	r6, #4
   11d88:	f47f af69 	bne.w	11c5e <find_volume+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11d8c:	2803      	cmp	r0, #3
   11d8e:	d023      	beq.n	11dd8 <find_volume+0x210>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   11d90:	2800      	cmp	r0, #0
   11d92:	f43f af70 	beq.w	11c76 <find_volume+0xae>
   11d96:	200d      	movs	r0, #13
   11d98:	e73d      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   11d9a:	2500      	movs	r5, #0
   11d9c:	e7f6      	b.n	11d8c <find_volume+0x1c4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   11d9e:	2601      	movs	r6, #1
   11da0:	e7a6      	b.n	11cf0 <find_volume+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   11da2:	f1be 0f00 	cmp.w	lr, #0
   11da6:	d0f6      	beq.n	11d96 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11da8:	2e02      	cmp	r6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11daa:	4417      	add	r7, r2
   11dac:	ea4f 0243 	mov.w	r2, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11db0:	bf1c      	itt	ne
   11db2:	18d2      	addne	r2, r2, r3
   11db4:	f003 0301 	andne.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11db8:	62e7      	str	r7, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11dba:	bf0c      	ite	eq
   11dbc:	4613      	moveq	r3, r2
   11dbe:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   11dc2:	e7a4      	b.n	11d0e <find_volume+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11dc4:	200b      	movs	r0, #11
   11dc6:	e726      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11dc8:	200c      	movs	r0, #12
   11dca:	e724      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   11dcc:	200f      	movs	r0, #15
   11dce:	e722      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2195
			return FR_OK;				/* The file system object is valid */
   11dd0:	4628      	mov	r0, r5
   11dd2:	e720      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   11dd4:	2003      	movs	r0, #3
   11dd6:	e71e      	b.n	11c16 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11dd8:	2001      	movs	r0, #1
   11dda:	e71c      	b.n	11c16 <find_volume+0x4e>
   11ddc:	2007c460 	.word	0x2007c460
   11de0:	41615252 	.word	0x41615252
   11de4:	2007c468 	.word	0x2007c468

00011de8 <validate>:
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   11de8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   11dea:	4604      	mov	r4, r0
   11dec:	b1a8      	cbz	r0, 11e1a <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   11dee:	6803      	ldr	r3, [r0, #0]
   11df0:	b19b      	cbz	r3, 11e1a <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   11df2:	781a      	ldrb	r2, [r3, #0]
   11df4:	b18a      	cbz	r2, 11e1a <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   11df6:	88d9      	ldrh	r1, [r3, #6]
   11df8:	8882      	ldrh	r2, [r0, #4]
   11dfa:	4291      	cmp	r1, r2
   11dfc:	d10d      	bne.n	11e1a <validate+0x32>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11dfe:	68d8      	ldr	r0, [r3, #12]
   11e00:	f001 fb78 	bl	134f4 <ff_req_grant>
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   11e04:	b158      	cbz	r0, 11e1e <validate+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   11e06:	6823      	ldr	r3, [r4, #0]
   11e08:	7858      	ldrb	r0, [r3, #1]
   11e0a:	f001 ff64 	bl	13cd6 <disk_status>
   11e0e:	f010 0f01 	tst.w	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   11e12:	bf14      	ite	ne
   11e14:	2003      	movne	r0, #3
   11e16:	2000      	moveq	r0, #0
   11e18:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   11e1a:	2009      	movs	r0, #9
   11e1c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   11e1e:	200f      	movs	r0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   11e20:	bd10      	pop	{r4, pc}

00011e22 <unlock_fs>:
unlock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   11e22:	b150      	cbz	r0, 11e3a <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   11e24:	290f      	cmp	r1, #15
   11e26:	d805      	bhi.n	11e34 <unlock_fs+0x12>
   11e28:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   11e2c:	fa23 f101 	lsr.w	r1, r3, r1
   11e30:	07cb      	lsls	r3, r1, #31
   11e32:	d402      	bmi.n	11e3a <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   11e34:	68c0      	ldr	r0, [r0, #12]
   11e36:	f001 bb70 	b.w	1351a <ff_rel_grant>
   11e3a:	4770      	bx	lr

00011e3c <clust2sect>:
clust2sect():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e3c:	69c3      	ldr	r3, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   11e3e:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e40:	3b02      	subs	r3, #2
   11e42:	4299      	cmp	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   11e44:	bf3d      	ittte	cc
   11e46:	7883      	ldrbcc	r3, [r0, #2]
   11e48:	6b00      	ldrcc	r0, [r0, #48]	; 0x30
   11e4a:	fb01 0003 	mlacc	r0, r1, r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   11e4e:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   11e50:	4770      	bx	lr

00011e52 <get_fat>:
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   11e52:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   11e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11e56:	4607      	mov	r7, r0
   11e58:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   11e5a:	d94b      	bls.n	11ef4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   11e5c:	69c3      	ldr	r3, [r0, #28]
   11e5e:	4299      	cmp	r1, r3
   11e60:	d248      	bcs.n	11ef4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   11e62:	7803      	ldrb	r3, [r0, #0]
   11e64:	2b02      	cmp	r3, #2
   11e66:	d029      	beq.n	11ebc <get_fat+0x6a>
   11e68:	2b03      	cmp	r3, #3
   11e6a:	d034      	beq.n	11ed6 <get_fat+0x84>
   11e6c:	2b01      	cmp	r3, #1
   11e6e:	d141      	bne.n	11ef4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   11e70:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e74:	6a81      	ldr	r1, [r0, #40]	; 0x28
   11e76:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   11e7a:	f7ff fe65 	bl	11b48 <move_window>
   11e7e:	b110      	cbz	r0, 11e86 <get_fat+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   11e80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11e84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e86:	6ab9      	ldr	r1, [r7, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   11e88:	f3c6 0308 	ubfx	r3, r6, #0, #9
   11e8c:	3601      	adds	r6, #1
   11e8e:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e90:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   11e94:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   11e96:	f893 5038 	ldrb.w	r5, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   11e9a:	f7ff fe55 	bl	11b48 <move_window>
   11e9e:	2800      	cmp	r0, #0
   11ea0:	d1ee      	bne.n	11e80 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   11ea2:	f3c6 0608 	ubfx	r6, r6, #0, #9
   11ea6:	443e      	add	r6, r7
   11ea8:	f896 0038 	ldrb.w	r0, [r6, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   11eac:	07e3      	lsls	r3, r4, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   11eae:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   11eb2:	bf4c      	ite	mi
   11eb4:	0900      	lsrmi	r0, r0, #4
   11eb6:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   11eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   11ebc:	6a81      	ldr	r1, [r0, #40]	; 0x28
   11ebe:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   11ec2:	f7ff fe41 	bl	11b48 <move_window>
   11ec6:	2800      	cmp	r0, #0
   11ec8:	d1da      	bne.n	11e80 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   11eca:	0066      	lsls	r6, r4, #1
   11ecc:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11ed0:	443e      	add	r6, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   11ed2:	8f30      	ldrh	r0, [r6, #56]	; 0x38
   11ed4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   11ed6:	6a81      	ldr	r1, [r0, #40]	; 0x28
   11ed8:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   11edc:	f7ff fe34 	bl	11b48 <move_window>
   11ee0:	2800      	cmp	r0, #0
   11ee2:	d1cd      	bne.n	11e80 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   11ee4:	00a4      	lsls	r4, r4, #2
   11ee6:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11eea:	443c      	add	r4, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   11eec:	6ba0      	ldr	r0, [r4, #56]	; 0x38
   11eee:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   11ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   11ef4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   11ef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ef8 <dir_sdi>:
dir_sdi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   11ef8:	b570      	push	{r4, r5, r6, lr}
   11efa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   11efc:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   11efe:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11f00:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   11f02:	80e1      	strh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11f04:	d101      	bne.n	11f0a <dir_sdi+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   11f06:	2002      	movs	r0, #2
   11f08:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   11f0a:	6803      	ldr	r3, [r0, #0]
   11f0c:	69d9      	ldr	r1, [r3, #28]
   11f0e:	428a      	cmp	r2, r1
   11f10:	d2f9      	bcs.n	11f06 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   11f12:	b9ba      	cbnz	r2, 11f44 <dir_sdi+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   11f14:	7819      	ldrb	r1, [r3, #0]
   11f16:	2903      	cmp	r1, #3
   11f18:	d101      	bne.n	11f1e <dir_sdi+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   11f1a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   11f1c:	b999      	cbnz	r1, 11f46 <dir_sdi+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   11f1e:	8919      	ldrh	r1, [r3, #8]
   11f20:	428d      	cmp	r5, r1
   11f22:	d2f0      	bcs.n	11f06 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   11f24:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   11f26:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   11f28:	2800      	cmp	r0, #0
   11f2a:	d0ec      	beq.n	11f06 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f2c:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   11f2e:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f32:	3338      	adds	r3, #56	; 0x38
   11f34:	f005 050f 	and.w	r5, r5, #15
   11f38:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   11f3c:	6120      	str	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   11f3e:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   11f40:	2000      	movs	r0, #0
   11f42:	bd70      	pop	{r4, r5, r6, pc}
   11f44:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f46:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   11f48:	789e      	ldrb	r6, [r3, #2]
   11f4a:	0136      	lsls	r6, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f4c:	42b5      	cmp	r5, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f4e:	4611      	mov	r1, r2
   11f50:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   11f52:	d202      	bcs.n	11f5a <dir_sdi+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   11f54:	f7ff ff72 	bl	11e3c <clust2sect>
   11f58:	e7e5      	b.n	11f26 <dir_sdi+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f5a:	f7ff ff7a 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f5e:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   11f60:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f62:	d007      	beq.n	11f74 <dir_sdi+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   11f64:	2801      	cmp	r0, #1
   11f66:	d9ce      	bls.n	11f06 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   11f68:	6823      	ldr	r3, [r4, #0]
   11f6a:	69db      	ldr	r3, [r3, #28]
   11f6c:	4298      	cmp	r0, r3
   11f6e:	d2ca      	bcs.n	11f06 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   11f70:	1bad      	subs	r5, r5, r6
   11f72:	e7eb      	b.n	11f4c <dir_sdi+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   11f74:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   11f76:	bd70      	pop	{r4, r5, r6, pc}

00011f78 <put_fat>:
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   11f78:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   11f7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11f7c:	4605      	mov	r5, r0
   11f7e:	460c      	mov	r4, r1
   11f80:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   11f82:	d960      	bls.n	12046 <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   11f84:	69c3      	ldr	r3, [r0, #28]
   11f86:	4299      	cmp	r1, r3
   11f88:	d25d      	bcs.n	12046 <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   11f8a:	7803      	ldrb	r3, [r0, #0]
   11f8c:	2b02      	cmp	r3, #2
   11f8e:	d03a      	beq.n	12006 <put_fat+0x8e>
   11f90:	2b03      	cmp	r3, #3
   11f92:	d045      	beq.n	12020 <put_fat+0xa8>
   11f94:	2b01      	cmp	r3, #1
   11f96:	d154      	bne.n	12042 <put_fat+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   11f98:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11f9c:	6a81      	ldr	r1, [r0, #40]	; 0x28
   11f9e:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   11fa2:	f7ff fdd1 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   11fa6:	bb18      	cbnz	r0, 11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   11fa8:	f3c7 0308 	ubfx	r3, r7, #0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   11fac:	f014 0401 	ands.w	r4, r4, #1
   11fb0:	442b      	add	r3, r5
   11fb2:	bf17      	itett	ne
   11fb4:	f893 2038 	ldrbne.w	r2, [r3, #56]	; 0x38
   11fb8:	b2f2      	uxtbeq	r2, r6
   11fba:	f002 010f 	andne.w	r1, r2, #15
   11fbe:	0132      	lslne	r2, r6, #4
   11fc0:	bf1c      	itt	ne
   11fc2:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   11fc6:	430a      	orrne	r2, r1
   11fc8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11fcc:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11fce:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   11fd0:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   11fd2:	712b      	strb	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   11fd4:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   11fd8:	4628      	mov	r0, r5
   11fda:	f7ff fdb5 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   11fde:	b938      	cbnz	r0, 11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   11fe0:	f3c7 0708 	ubfx	r7, r7, #0, #9
   11fe4:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   11fe6:	b134      	cbz	r4, 11ff6 <put_fat+0x7e>
   11fe8:	f3c6 1607 	ubfx	r6, r6, #4, #8
   11fec:	f887 6038 	strb.w	r6, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   11ff0:	2301      	movs	r3, #1
   11ff2:	712b      	strb	r3, [r5, #4]
   11ff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   11ff6:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
   11ffa:	f3c6 2603 	ubfx	r6, r6, #8, #4
   11ffe:	f023 030f 	bic.w	r3, r3, #15
   12002:	431e      	orrs	r6, r3
   12004:	e7f2      	b.n	11fec <put_fat+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   12006:	6a81      	ldr	r1, [r0, #40]	; 0x28
   12008:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   1200c:	f7ff fd9c 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   12010:	2800      	cmp	r0, #0
   12012:	d1ed      	bne.n	11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   12014:	0064      	lsls	r4, r4, #1
   12016:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1201a:	442c      	add	r4, r5
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   1201c:	8726      	strh	r6, [r4, #56]	; 0x38
   1201e:	e7e7      	b.n	11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   12020:	6a81      	ldr	r1, [r0, #40]	; 0x28
   12022:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   12026:	f7ff fd8f 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   1202a:	2800      	cmp	r0, #0
   1202c:	d1e0      	bne.n	11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   1202e:	00a4      	lsls	r4, r4, #2
   12030:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12034:	3438      	adds	r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   12036:	592b      	ldr	r3, [r5, r4]
   12038:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   1203c:	431e      	orrs	r6, r3
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1203e:	512e      	str	r6, [r5, r4]
   12040:	e7d6      	b.n	11ff0 <put_fat+0x78>
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   12042:	2002      	movs	r0, #2
   12044:	e7d4      	b.n	11ff0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   12046:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   12048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001204a <create_chain>:
create_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   1204a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1204c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   1204e:	460f      	mov	r7, r1
   12050:	b971      	cbnz	r1, 12070 <create_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   12052:	6906      	ldr	r6, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12054:	b1e6      	cbz	r6, 12090 <create_chain+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   12056:	69c3      	ldr	r3, [r0, #28]
   12058:	429e      	cmp	r6, r3
   1205a:	bf28      	it	cs
   1205c:	2601      	movcs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   1205e:	4634      	mov	r4, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12060:	69eb      	ldr	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   12062:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12064:	429c      	cmp	r4, r3
   12066:	d316      	bcc.n	12096 <create_chain+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   12068:	2e01      	cmp	r6, #1
   1206a:	d813      	bhi.n	12094 <create_chain+0x4a>
   1206c:	2400      	movs	r4, #0
   1206e:	e008      	b.n	12082 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12070:	f7ff feef 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12074:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12076:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12078:	d935      	bls.n	120e6 <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   1207a:	3001      	adds	r0, #1
   1207c:	d103      	bne.n	12086 <create_chain+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   1207e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   12082:	4620      	mov	r0, r4
   12084:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   12086:	69eb      	ldr	r3, [r5, #28]
   12088:	429c      	cmp	r4, r3
   1208a:	d3fa      	bcc.n	12082 <create_chain+0x38>
   1208c:	463e      	mov	r6, r7
   1208e:	e7e6      	b.n	1205e <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12090:	2601      	movs	r6, #1
   12092:	e7e4      	b.n	1205e <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12094:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   12096:	4621      	mov	r1, r4
   12098:	4628      	mov	r0, r5
   1209a:	f7ff feda 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   1209e:	b130      	cbz	r0, 120ae <create_chain+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   120a0:	1c41      	adds	r1, r0, #1
   120a2:	d0ec      	beq.n	1207e <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   120a4:	2801      	cmp	r0, #1
   120a6:	d01e      	beq.n	120e6 <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   120a8:	42b4      	cmp	r4, r6
   120aa:	d1d9      	bne.n	12060 <create_chain+0x16>
   120ac:	e7de      	b.n	1206c <create_chain+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   120ae:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   120b2:	4621      	mov	r1, r4
   120b4:	4628      	mov	r0, r5
   120b6:	f7ff ff5f 	bl	11f78 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   120ba:	b990      	cbnz	r0, 120e2 <create_chain+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   120bc:	b957      	cbnz	r7, 120d4 <create_chain+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   120be:	696b      	ldr	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   120c0:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   120c2:	1c5a      	adds	r2, r3, #1
   120c4:	d0dd      	beq.n	12082 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   120c6:	3b01      	subs	r3, #1
   120c8:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   120ca:	796b      	ldrb	r3, [r5, #5]
   120cc:	f043 0301 	orr.w	r3, r3, #1
   120d0:	716b      	strb	r3, [r5, #5]
   120d2:	e7d6      	b.n	12082 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   120d4:	4622      	mov	r2, r4
   120d6:	4639      	mov	r1, r7
   120d8:	4628      	mov	r0, r5
   120da:	f7ff ff4d 	bl	11f78 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   120de:	2800      	cmp	r0, #0
   120e0:	d0ed      	beq.n	120be <create_chain+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   120e2:	2801      	cmp	r0, #1
   120e4:	d0cb      	beq.n	1207e <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   120e6:	2401      	movs	r4, #1
   120e8:	e7cb      	b.n	12082 <create_chain+0x38>

000120ea <dir_next>:
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120ea:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   120ee:	88c6      	ldrh	r6, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120f0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   120f2:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   120f4:	b2b3      	uxth	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   120f6:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   120f8:	b913      	cbnz	r3, 12100 <dir_next+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   120fa:	2004      	movs	r0, #4
   120fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   12100:	6903      	ldr	r3, [r0, #16]
   12102:	2b00      	cmp	r3, #0
   12104:	d0f9      	beq.n	120fa <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   12106:	f016 080f 	ands.w	r8, r6, #15
   1210a:	d107      	bne.n	1211c <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   1210c:	68c1      	ldr	r1, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   1210e:	3301      	adds	r3, #1
   12110:	6103      	str	r3, [r0, #16]
   12112:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   12114:	b959      	cbnz	r1, 1212e <dir_next+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   12116:	8903      	ldrh	r3, [r0, #8]
   12118:	429e      	cmp	r6, r3
   1211a:	d2ee      	bcs.n	120fa <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   1211c:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   1211e:	80e6      	strh	r6, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   12120:	3338      	adds	r3, #56	; 0x38
   12122:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   12126:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   12128:	2000      	movs	r0, #0
   1212a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   1212e:	7887      	ldrb	r7, [r0, #2]
   12130:	3f01      	subs	r7, #1
   12132:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   12136:	d1f1      	bne.n	1211c <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   12138:	f7ff fe8b 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   1213c:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1213e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12140:	d802      	bhi.n	12148 <dir_next+0x5e>
   12142:	2002      	movs	r0, #2
   12144:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12148:	1c42      	adds	r2, r0, #1
   1214a:	d102      	bne.n	12152 <dir_next+0x68>
   1214c:	2001      	movs	r0, #1
   1214e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   12152:	6820      	ldr	r0, [r4, #0]
   12154:	69c3      	ldr	r3, [r0, #28]
   12156:	429d      	cmp	r5, r3
   12158:	d327      	bcc.n	121aa <dir_next+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   1215a:	f1b9 0f00 	cmp.w	r9, #0
   1215e:	d0cc      	beq.n	120fa <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   12160:	68e1      	ldr	r1, [r4, #12]
   12162:	f7ff ff72 	bl	1204a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   12166:	4605      	mov	r5, r0
   12168:	2800      	cmp	r0, #0
   1216a:	d031      	beq.n	121d0 <dir_next+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   1216c:	2801      	cmp	r0, #1
   1216e:	d0e8      	beq.n	12142 <dir_next+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12170:	1c43      	adds	r3, r0, #1
   12172:	d0eb      	beq.n	1214c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   12174:	6820      	ldr	r0, [r4, #0]
   12176:	f7ff fca6 	bl	11ac6 <sync_window>
   1217a:	4601      	mov	r1, r0
   1217c:	2800      	cmp	r0, #0
   1217e:	d1e5      	bne.n	1214c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   12180:	6820      	ldr	r0, [r4, #0]
   12182:	f44f 7200 	mov.w	r2, #512	; 0x200
   12186:	3038      	adds	r0, #56	; 0x38
   12188:	f7ff fc44 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1218c:	6822      	ldr	r2, [r4, #0]
   1218e:	4629      	mov	r1, r5
   12190:	4610      	mov	r0, r2
   12192:	f7ff fe53 	bl	11e3c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   12196:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1219a:	6350      	str	r0, [r2, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   1219c:	6820      	ldr	r0, [r4, #0]
   1219e:	7883      	ldrb	r3, [r0, #2]
   121a0:	429f      	cmp	r7, r3
   121a2:	d309      	bcc.n	121b8 <dir_next+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   121a4:	6b43      	ldr	r3, [r0, #52]	; 0x34
   121a6:	1bdf      	subs	r7, r3, r7
   121a8:	6347      	str	r7, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   121aa:	60e5      	str	r5, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   121ac:	4629      	mov	r1, r5
   121ae:	6820      	ldr	r0, [r4, #0]
   121b0:	f7ff fe44 	bl	11e3c <clust2sect>
   121b4:	6120      	str	r0, [r4, #16]
   121b6:	e7b1      	b.n	1211c <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   121b8:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   121bc:	f7ff fc60 	bl	11a80 <sync_window.part.1>
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   121c0:	2800      	cmp	r0, #0
   121c2:	d1c3      	bne.n	1214c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   121c4:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   121c6:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   121c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
   121ca:	3301      	adds	r3, #1
   121cc:	6353      	str	r3, [r2, #52]	; 0x34
   121ce:	e7e5      	b.n	1219c <dir_next+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   121d0:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   121d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   121d6:	Address 0x00000000000121d6 is out of bounds.


000121d8 <dir_find.part.9>:
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   121d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   121dc:	f04f 08ff 	mov.w	r8, #255	; 0xff
   121e0:	f64f 77ff 	movw	r7, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   121e4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   121e6:	4644      	mov	r4, r8
   121e8:	8407      	strh	r7, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   121ea:	6931      	ldr	r1, [r6, #16]
   121ec:	6830      	ldr	r0, [r6, #0]
   121ee:	f7ff fcab 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   121f2:	4682      	mov	sl, r0
   121f4:	2800      	cmp	r0, #0
   121f6:	d15e      	bne.n	122b6 <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   121f8:	6975      	ldr	r5, [r6, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   121fa:	782b      	ldrb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   121fc:	2b00      	cmp	r3, #0
   121fe:	d076      	beq.n	122ee <dir_find.part.9+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   12200:	2be5      	cmp	r3, #229	; 0xe5
   12202:	d006      	beq.n	12212 <dir_find.part.9+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   12204:	7ae9      	ldrb	r1, [r5, #11]
   12206:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   1220a:	0709      	lsls	r1, r1, #28
   1220c:	d503      	bpl.n	12216 <dir_find.part.9+0x3e>
   1220e:	2a0f      	cmp	r2, #15
   12210:	d003      	beq.n	1221a <dir_find.part.9+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   12212:	8437      	strh	r7, [r6, #32]
   12214:	e047      	b.n	122a6 <dir_find.part.9+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   12216:	2a0f      	cmp	r2, #15
   12218:	d154      	bne.n	122c4 <dir_find.part.9+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   1221a:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   1221e:	f1bb 0f00 	cmp.w	fp, #0
   12222:	d041      	beq.n	122a8 <dir_find.part.9+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   12224:	0658      	lsls	r0, r3, #25
   12226:	d53c      	bpl.n	122a2 <dir_find.part.9+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   12228:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   1222c:	88f3      	ldrh	r3, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   1222e:	f895 800d 	ldrb.w	r8, [r5, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12232:	8433      	strh	r3, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12234:	7b6b      	ldrb	r3, [r5, #13]
   12236:	4543      	cmp	r3, r8
   12238:	d135      	bne.n	122a6 <dir_find.part.9+0xce>
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1223a:	f895 a000 	ldrb.w	sl, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   1223e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12240:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   12244:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   12248:	f04f 0a0d 	mov.w	sl, #13
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   1224c:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12250:	fb0a fa03 	mul.w	sl, sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   12254:	4b27      	ldr	r3, [pc, #156]	; (122f4 <dir_find.part.9+0x11c>)
   12256:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   1225a:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   1225c:	b378      	cbz	r0, 122be <dir_find.part.9+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1225e:	4610      	mov	r0, r2
   12260:	f001 f988 	bl	13574 <ff_wtoupper>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   12264:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   12268:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   1226a:	d81c      	bhi.n	122a6 <dir_find.part.9+0xce>
   1226c:	f10a 0201 	add.w	r2, sl, #1
   12270:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   12274:	9200      	str	r2, [sp, #0]
   12276:	f001 f97d 	bl	13574 <ff_wtoupper>
   1227a:	9901      	ldr	r1, [sp, #4]
   1227c:	4281      	cmp	r1, r0
   1227e:	d112      	bne.n	122a6 <dir_find.part.9+0xce>
   12280:	9a00      	ldr	r2, [sp, #0]
   12282:	4692      	mov	sl, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   12284:	f109 0901 	add.w	r9, r9, #1
   12288:	f1b9 0f0d 	cmp.w	r9, #13
   1228c:	d1e2      	bne.n	12254 <dir_find.part.9+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   1228e:	782b      	ldrb	r3, [r5, #0]
   12290:	0659      	lsls	r1, r3, #25
   12292:	d503      	bpl.n	1229c <dir_find.part.9+0xc4>
   12294:	b110      	cbz	r0, 1229c <dir_find.part.9+0xc4>
   12296:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   1229a:	b923      	cbnz	r3, 122a6 <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   1229c:	3c01      	subs	r4, #1
   1229e:	b2e4      	uxtb	r4, r4
   122a0:	e002      	b.n	122a8 <dir_find.part.9+0xd0>
   122a2:	42a3      	cmp	r3, r4
   122a4:	d0c6      	beq.n	12234 <dir_find.part.9+0x5c>
   122a6:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   122a8:	2100      	movs	r1, #0
   122aa:	4630      	mov	r0, r6
   122ac:	f7ff ff1d 	bl	120ea <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   122b0:	4682      	mov	sl, r0
   122b2:	2800      	cmp	r0, #0
   122b4:	d099      	beq.n	121ea <dir_find.part.9+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   122b6:	4650      	mov	r0, sl
   122b8:	b003      	add	sp, #12
   122ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   122be:	42ba      	cmp	r2, r7
   122c0:	d0e0      	beq.n	12284 <dir_find.part.9+0xac>
   122c2:	e7f0      	b.n	122a6 <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   122c4:	b924      	cbnz	r4, 122d0 <dir_find.part.9+0xf8>
   122c6:	4628      	mov	r0, r5
   122c8:	f7ff fbab 	bl	11a22 <sum_sfn>
   122cc:	4540      	cmp	r0, r8
   122ce:	d0f2      	beq.n	122b6 <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   122d0:	69b3      	ldr	r3, [r6, #24]
   122d2:	7ada      	ldrb	r2, [r3, #11]
   122d4:	07d2      	lsls	r2, r2, #31
   122d6:	d49c      	bmi.n	12212 <dir_find.part.9+0x3a>
   122d8:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   122dc:	4298      	cmp	r0, r3
   122de:	d0ea      	beq.n	122b6 <dir_find.part.9+0xde>
   122e0:	f815 1b01 	ldrb.w	r1, [r5], #1
   122e4:	f813 2b01 	ldrb.w	r2, [r3], #1
   122e8:	4291      	cmp	r1, r2
   122ea:	d0f7      	beq.n	122dc <dir_find.part.9+0x104>
   122ec:	e791      	b.n	12212 <dir_find.part.9+0x3a>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   122ee:	f04f 0a04 	mov.w	sl, #4
   122f2:	e7e0      	b.n	122b6 <dir_find.part.9+0xde>
   122f4:	0001f690 	.word	0x0001f690

000122f8 <follow_path>:
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   122f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   122fc:	780b      	ldrb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   122fe:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   12300:	2b2f      	cmp	r3, #47	; 0x2f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   12302:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   12304:	d001      	beq.n	1230a <follow_path+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025 (discriminator 1)
   12306:	2b5c      	cmp	r3, #92	; 0x5c
   12308:	d111      	bne.n	1232e <follow_path+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2026
		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
   1230a:	2300      	movs	r3, #0
   1230c:	f108 0801 	add.w	r8, r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2028
		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
   12310:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   12312:	f898 3000 	ldrb.w	r3, [r8]
   12316:	2b1f      	cmp	r3, #31
   12318:	f200 80cf 	bhi.w	124ba <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   1231c:	2100      	movs	r1, #0
   1231e:	4628      	mov	r0, r5
   12320:	f7ff fdea 	bl	11ef8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   12324:	2300      	movs	r3, #0
   12326:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   12328:	b003      	add	sp, #12
   1232a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2028
		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
   1232e:	6803      	ldr	r3, [r0, #0]
   12330:	699b      	ldr	r3, [r3, #24]
   12332:	e7ed      	b.n	12310 <follow_path+0x18>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   12334:	f827 0f02 	strh.w	r0, [r7, #2]!
   12338:	4646      	mov	r6, r8
   1233a:	e0ce      	b.n	124da <follow_path+0x1e2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1233c:	2820      	cmp	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1233e:	44a0      	add	r8, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   12340:	bf34      	ite	cc
   12342:	2404      	movcc	r4, #4
   12344:	2400      	movcs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1843
	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
   12346:	2e01      	cmp	r6, #1
   12348:	d111      	bne.n	1236e <follow_path+0x76>
   1234a:	f8b9 3000 	ldrh.w	r3, [r9]
   1234e:	2b2e      	cmp	r3, #46	; 0x2e
   12350:	d014      	beq.n	1237c <follow_path+0x84>
   12352:	eb09 0346 	add.w	r3, r9, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   12356:	2e00      	cmp	r6, #0
   12358:	f000 80de 	beq.w	12518 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   1235c:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   12360:	2a20      	cmp	r2, #32
   12362:	d002      	beq.n	1236a <follow_path+0x72>
   12364:	2a2e      	cmp	r2, #46	; 0x2e
   12366:	f040 80db 	bne.w	12520 <follow_path+0x228>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   1236a:	3e01      	subs	r6, #1
   1236c:	e7f3      	b.n	12356 <follow_path+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1843
	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
   1236e:	2e02      	cmp	r6, #2
   12370:	d1ef      	bne.n	12352 <follow_path+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1844
		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
   12372:	f8b9 3002 	ldrh.w	r3, [r9, #2]
   12376:	2b2e      	cmp	r3, #46	; 0x2e
   12378:	d1eb      	bne.n	12352 <follow_path+0x5a>
   1237a:	e7e6      	b.n	1234a <follow_path+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1845
		lfn[di] = 0;
   1237c:	2300      	movs	r3, #0
   1237e:	f829 3016 	strh.w	r3, [r9, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1847
			dp->fn[i] = (i < di) ? '.' : ' ';
   12382:	429e      	cmp	r6, r3
   12384:	bf8c      	ite	hi
   12386:	212e      	movhi	r1, #46	; 0x2e
   12388:	2120      	movls	r1, #32
   1238a:	69aa      	ldr	r2, [r5, #24]
   1238c:	54d1      	strb	r1, [r2, r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1846
		for (i = 0; i < 11; i++)
   1238e:	3301      	adds	r3, #1
   12390:	2b0b      	cmp	r3, #11
   12392:	d1f6      	bne.n	12382 <follow_path+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1848
		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
   12394:	69ab      	ldr	r3, [r5, #24]
   12396:	f044 0420 	orr.w	r4, r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1239a:	72dc      	strb	r4, [r3, #11]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   1239c:	2100      	movs	r1, #0
   1239e:	4628      	mov	r0, r5
   123a0:	f7ff fdaa 	bl	11ef8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   123a4:	2800      	cmp	r0, #0
   123a6:	d071      	beq.n	1248c <follow_path+0x194>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   123a8:	69ab      	ldr	r3, [r5, #24]
   123aa:	7adb      	ldrb	r3, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   123ac:	2800      	cmp	r0, #0
   123ae:	d075      	beq.n	1249c <follow_path+0x1a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   123b0:	2804      	cmp	r0, #4
   123b2:	d1b9      	bne.n	12328 <follow_path+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2047
					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
   123b4:	f013 0f20 	tst.w	r3, #32
   123b8:	f003 0304 	and.w	r3, r3, #4
   123bc:	d06a      	beq.n	12494 <follow_path+0x19c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2048
						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
   123be:	2200      	movs	r2, #0
   123c0:	60aa      	str	r2, [r5, #8]
   123c2:	616a      	str	r2, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2049
						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
   123c4:	2b00      	cmp	r3, #0
   123c6:	d078      	beq.n	124ba <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2050
						res = FR_OK;					/* Ended at the root directroy. Function completed. */
   123c8:	2000      	movs	r0, #0
   123ca:	e7ad      	b.n	12328 <follow_path+0x30>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   123cc:	3101      	adds	r1, #1
   123ce:	f839 3011 	ldrh.w	r3, [r9, r1, lsl #1]
   123d2:	2b20      	cmp	r3, #32
   123d4:	d0fa      	beq.n	123cc <follow_path+0xd4>
   123d6:	2b2e      	cmp	r3, #46	; 0x2e
   123d8:	d0f8      	beq.n	123cc <follow_path+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   123da:	b109      	cbz	r1, 123e0 <follow_path+0xe8>
   123dc:	f044 0403 	orr.w	r4, r4, #3
   123e0:	463b      	mov	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   123e2:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
   123e6:	2a2e      	cmp	r2, #46	; 0x2e
   123e8:	d001      	beq.n	123ee <follow_path+0xf6>
   123ea:	3e01      	subs	r6, #1
   123ec:	d1f9      	bne.n	123e2 <follow_path+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   123ee:	f04f 0a00 	mov.w	sl, #0
   123f2:	2308      	movs	r3, #8
   123f4:	4657      	mov	r7, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   123f6:	f839 0011 	ldrh.w	r0, [r9, r1, lsl #1]
   123fa:	f101 0b01 	add.w	fp, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   123fe:	2800      	cmp	r0, #0
   12400:	f000 80a3 	beq.w	1254a <follow_path+0x252>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   12404:	2820      	cmp	r0, #32
   12406:	d004      	beq.n	12412 <follow_path+0x11a>
   12408:	282e      	cmp	r0, #46	; 0x2e
   1240a:	d106      	bne.n	1241a <follow_path+0x122>
   1240c:	45b3      	cmp	fp, r6
   1240e:	f000 8093 	beq.w	12538 <follow_path+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   12412:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   12416:	4659      	mov	r1, fp
   12418:	e7ed      	b.n	123f6 <follow_path+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   1241a:	459a      	cmp	sl, r3
   1241c:	f080 808f 	bcs.w	1253e <follow_path+0x246>
   12420:	45b3      	cmp	fp, r6
   12422:	d10f      	bne.n	12444 <follow_path+0x14c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12424:	2b0b      	cmp	r3, #11
   12426:	d106      	bne.n	12436 <follow_path+0x13e>
   12428:	e08c      	b.n	12544 <follow_path+0x24c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   1242a:	45b3      	cmp	fp, r6
   1242c:	d003      	beq.n	12436 <follow_path+0x13e>
   1242e:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   12432:	f200 808a 	bhi.w	1254a <follow_path+0x252>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   12436:	00bf      	lsls	r7, r7, #2
   12438:	b2ff      	uxtb	r7, r7
   1243a:	46b3      	mov	fp, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   1243c:	230b      	movs	r3, #11
   1243e:	f04f 0a08 	mov.w	sl, #8
   12442:	e7e8      	b.n	12416 <follow_path+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   12444:	287f      	cmp	r0, #127	; 0x7f
   12446:	d90d      	bls.n	12464 <follow_path+0x16c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   12448:	2100      	movs	r1, #0
   1244a:	9301      	str	r3, [sp, #4]
   1244c:	f001 f874 	bl	13538 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   12450:	9b01      	ldr	r3, [sp, #4]
   12452:	b118      	cbz	r0, 1245c <follow_path+0x164>
   12454:	4a55      	ldr	r2, [pc, #340]	; (125ac <follow_path+0x2b4>)
   12456:	4410      	add	r0, r2
   12458:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   1245c:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   1245e:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   12462:	b138      	cbz	r0, 12474 <follow_path+0x17c>
   12464:	4a52      	ldr	r2, [pc, #328]	; (125b0 <follow_path+0x2b8>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   12466:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   1246a:	2900      	cmp	r1, #0
   1246c:	f000 808f 	beq.w	1258e <follow_path+0x296>
   12470:	4281      	cmp	r1, r0
   12472:	d1f8      	bne.n	12466 <follow_path+0x16e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   12474:	205f      	movs	r0, #95	; 0x5f
   12476:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   1247a:	69a9      	ldr	r1, [r5, #24]
   1247c:	f801 000a 	strb.w	r0, [r1, sl]
   12480:	f10a 0a01 	add.w	sl, sl, #1
   12484:	e7c7      	b.n	12416 <follow_path+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   12486:	f047 0702 	orr.w	r7, r7, #2
   1248a:	e7f6      	b.n	1247a <follow_path+0x182>
dir_find():
   1248c:	4628      	mov	r0, r5
   1248e:	f7ff fea3 	bl	121d8 <dir_find.part.9>
   12492:	e789      	b.n	123a8 <follow_path+0xb0>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   12494:	2b00      	cmp	r3, #0
   12496:	bf08      	it	eq
   12498:	2005      	moveq	r0, #5
   1249a:	e745      	b.n	12328 <follow_path+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   1249c:	075a      	lsls	r2, r3, #29
   1249e:	d493      	bmi.n	123c8 <follow_path+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   124a0:	696a      	ldr	r2, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   124a2:	7ad3      	ldrb	r3, [r2, #11]
   124a4:	06db      	lsls	r3, r3, #27
   124a6:	d539      	bpl.n	1251c <follow_path+0x224>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   124a8:	6829      	ldr	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   124aa:	8b53      	ldrh	r3, [r2, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   124ac:	7809      	ldrb	r1, [r1, #0]
   124ae:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   124b0:	bf04      	itt	eq
   124b2:	8a92      	ldrheq	r2, [r2, #20]
   124b4:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   124b8:	60ab      	str	r3, [r5, #8]
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   124ba:	f898 3000 	ldrb.w	r3, [r8]
   124be:	4644      	mov	r4, r8
   124c0:	2b2f      	cmp	r3, #47	; 0x2f
   124c2:	f108 0801 	add.w	r8, r8, #1
   124c6:	d0f8      	beq.n	124ba <follow_path+0x1c2>
   124c8:	2b5c      	cmp	r3, #92	; 0x5c
   124ca:	d0f6      	beq.n	124ba <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   124cc:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   124ce:	f8d5 901c 	ldr.w	r9, [r5, #28]
   124d2:	f104 3aff 	add.w	sl, r4, #4294967295	; 0xffffffff
   124d6:	f1a9 0702 	sub.w	r7, r9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   124da:	f81a 0f01 	ldrb.w	r0, [sl, #1]!
   124de:	f106 0801 	add.w	r8, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   124e2:	281f      	cmp	r0, #31
   124e4:	f67f af2a 	bls.w	1233c <follow_path+0x44>
   124e8:	282f      	cmp	r0, #47	; 0x2f
   124ea:	f43f af27 	beq.w	1233c <follow_path+0x44>
   124ee:	285c      	cmp	r0, #92	; 0x5c
   124f0:	f43f af24 	beq.w	1233c <follow_path+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   124f4:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   124f8:	d00e      	beq.n	12518 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   124fa:	2101      	movs	r1, #1
   124fc:	f001 f81c 	bl	13538 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   12500:	b150      	cbz	r0, 12518 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   12502:	287f      	cmp	r0, #127	; 0x7f
   12504:	f63f af16 	bhi.w	12334 <follow_path+0x3c>
   12508:	4a2a      	ldr	r2, [pc, #168]	; (125b4 <follow_path+0x2bc>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   1250a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
   1250e:	2b00      	cmp	r3, #0
   12510:	f43f af10 	beq.w	12334 <follow_path+0x3c>
   12514:	4298      	cmp	r0, r3
   12516:	d1f8      	bne.n	1250a <follow_path+0x212>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   12518:	2006      	movs	r0, #6
   1251a:	e705      	b.n	12328 <follow_path+0x30>
   1251c:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   1251e:	e703      	b.n	12328 <follow_path+0x30>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12520:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12522:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12524:	f829 3016 	strh.w	r3, [r9, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12528:	220b      	movs	r2, #11
   1252a:	69a8      	ldr	r0, [r5, #24]
   1252c:	f7ff fa72 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12530:	eb09 0746 	add.w	r7, r9, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   12534:	4619      	mov	r1, r3
   12536:	e74a      	b.n	123ce <follow_path+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   12538:	459a      	cmp	sl, r3
   1253a:	f4ff af73 	bcc.w	12424 <follow_path+0x12c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   1253e:	2b0b      	cmp	r3, #11
   12540:	f47f af73 	bne.w	1242a <follow_path+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   12544:	230b      	movs	r3, #11
   12546:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   1254a:	69aa      	ldr	r2, [r5, #24]
   1254c:	7811      	ldrb	r1, [r2, #0]
   1254e:	29e5      	cmp	r1, #229	; 0xe5
   12550:	bf04      	itt	eq
   12552:	2105      	moveq	r1, #5
   12554:	7011      	strbeq	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   12556:	2b08      	cmp	r3, #8
   12558:	bf04      	itt	eq
   1255a:	00bf      	lsleq	r7, r7, #2
   1255c:	b2ff      	uxtbeq	r7, r7
   1255e:	f007 030c 	and.w	r3, r7, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   12562:	2b0c      	cmp	r3, #12
   12564:	d003      	beq.n	1256e <follow_path+0x276>
   12566:	f007 0203 	and.w	r2, r7, #3
   1256a:	2a03      	cmp	r2, #3
   1256c:	d101      	bne.n	12572 <follow_path+0x27a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   1256e:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   12572:	07a1      	lsls	r1, r4, #30
   12574:	d409      	bmi.n	1258a <follow_path+0x292>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   12576:	f007 0703 	and.w	r7, r7, #3
   1257a:	2f01      	cmp	r7, #1
   1257c:	bf08      	it	eq
   1257e:	f044 0410 	orreq.w	r4, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   12582:	2b04      	cmp	r3, #4
   12584:	bf08      	it	eq
   12586:	f044 0408 	orreq.w	r4, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1258a:	69ab      	ldr	r3, [r5, #24]
   1258c:	e705      	b.n	1239a <follow_path+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   1258e:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   12592:	2919      	cmp	r1, #25
   12594:	f67f af77 	bls.w	12486 <follow_path+0x18e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   12598:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   1259c:	2919      	cmp	r1, #25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   1259e:	bf9e      	ittt	ls
   125a0:	3820      	subls	r0, #32
   125a2:	f047 0701 	orrls.w	r7, r7, #1
   125a6:	b280      	uxthls	r0, r0
   125a8:	e767      	b.n	1247a <follow_path+0x182>
   125aa:	bf00      	nop
   125ac:	0001f610 	.word	0x0001f610
   125b0:	0001f6f0 	.word	0x0001f6f0
   125b4:	0001f6e7 	.word	0x0001f6e7

000125b8 <dir_alloc>:
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1238
{
   125b8:	b570      	push	{r4, r5, r6, lr}
   125ba:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   125bc:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1238
{
   125be:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   125c0:	f7ff fc9a 	bl	11ef8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   125c4:	b9a8      	cbnz	r0, 125f2 <dir_alloc+0x3a>
   125c6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   125c8:	6921      	ldr	r1, [r4, #16]
   125ca:	6820      	ldr	r0, [r4, #0]
   125cc:	f7ff fabc 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   125d0:	b978      	cbnz	r0, 125f2 <dir_alloc+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   125d2:	6963      	ldr	r3, [r4, #20]
   125d4:	781b      	ldrb	r3, [r3, #0]
   125d6:	2be5      	cmp	r3, #229	; 0xe5
   125d8:	d000      	beq.n	125dc <dir_alloc+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249 (discriminator 1)
   125da:	b91b      	cbnz	r3, 125e4 <dir_alloc+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   125dc:	3501      	adds	r5, #1
   125de:	42b5      	cmp	r5, r6
   125e0:	d101      	bne.n	125e6 <dir_alloc+0x2e>
   125e2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   125e4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   125e6:	2101      	movs	r1, #1
   125e8:	4620      	mov	r0, r4
   125ea:	f7ff fd7e 	bl	120ea <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   125ee:	2800      	cmp	r0, #0
   125f0:	d0ea      	beq.n	125c8 <dir_alloc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   125f2:	2804      	cmp	r0, #4
   125f4:	bf08      	it	eq
   125f6:	2007      	moveq	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1259
}
   125f8:	bd70      	pop	{r4, r5, r6, pc}
   125fa:	Address 0x00000000000125fa is out of bounds.


000125fc <dir_register>:
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   125fc:	220c      	movs	r2, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   125fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12602:	6986      	ldr	r6, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12604:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   12606:	69c7      	ldr	r7, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   12608:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   1260a:	4631      	mov	r1, r6
   1260c:	eb0d 0002 	add.w	r0, sp, r2
   12610:	f7ff f9e4 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1624
	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
   12614:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12618:	f013 0220 	ands.w	r2, r3, #32
   1261c:	d16a      	bne.n	126f4 <dir_register+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   1261e:	07db      	lsls	r3, r3, #31
   12620:	d570      	bpl.n	12704 <dir_register+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   12622:	f04f 0901 	mov.w	r9, #1
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12626:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 127fc <dir_register+0x200>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1262a:	72f2      	strb	r2, [r6, #11]
   1262c:	61e2      	str	r2, [r4, #28]
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   1262e:	220b      	movs	r2, #11
   12630:	a903      	add	r1, sp, #12
   12632:	4630      	mov	r0, r6
   12634:	f7ff f9d2 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   12638:	f1b9 0f05 	cmp.w	r9, #5
   1263c:	d84f      	bhi.n	126de <dir_register+0xe2>
   1263e:	464b      	mov	r3, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12640:	2207      	movs	r2, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   12642:	f003 000f 	and.w	r0, r3, #15
   12646:	f100 0130 	add.w	r1, r0, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   1264a:	2939      	cmp	r1, #57	; 0x39
   1264c:	bf88      	it	hi
   1264e:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   12652:	3a01      	subs	r2, #1
   12654:	a801      	add	r0, sp, #4
   12656:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12658:	091b      	lsrs	r3, r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   1265a:	7041      	strb	r1, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   1265c:	d1f1      	bne.n	12642 <dir_register+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   1265e:	207e      	movs	r0, #126	; 0x7e
   12660:	a906      	add	r1, sp, #24
   12662:	4411      	add	r1, r2
   12664:	f801 0c14 	strb.w	r0, [r1, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   12668:	429a      	cmp	r2, r3
   1266a:	d03d      	beq.n	126e8 <dir_register+0xec>
   1266c:	5cf1      	ldrb	r1, [r6, r3]
   1266e:	2920      	cmp	r1, #32
   12670:	d138      	bne.n	126e4 <dir_register+0xe8>
   12672:	4433      	add	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   12674:	2a07      	cmp	r2, #7
   12676:	bf8f      	iteee	hi
   12678:	2120      	movhi	r1, #32
   1267a:	a906      	addls	r1, sp, #24
   1267c:	1889      	addls	r1, r1, r2
   1267e:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   12682:	bf98      	it	ls
   12684:	3201      	addls	r2, #1
   12686:	f803 1b01 	strb.w	r1, [r3], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   1268a:	1b99      	subs	r1, r3, r6
   1268c:	2907      	cmp	r1, #7
   1268e:	d9f1      	bls.n	12674 <dir_register+0x78>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   12690:	2100      	movs	r1, #0
   12692:	4620      	mov	r0, r4
   12694:	f7ff fc30 	bl	11ef8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   12698:	4605      	mov	r5, r0
   1269a:	bb68      	cbnz	r0, 126f8 <dir_register+0xfc>
   1269c:	4620      	mov	r0, r4
   1269e:	f7ff fd9b 	bl	121d8 <dir_find.part.9>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   126a2:	4605      	mov	r5, r0
   126a4:	bb40      	cbnz	r0, 126f8 <dir_register+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   126a6:	f109 0901 	add.w	r9, r9, #1
   126aa:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   126ae:	d1be      	bne.n	1262e <dir_register+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   126b0:	2507      	movs	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   126b2:	4628      	mov	r0, r5
   126b4:	b007      	add	sp, #28
   126b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   126ba:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   126bc:	f002 0501 	and.w	r5, r2, #1
   126c0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   126c4:	03dd      	lsls	r5, r3, #15
   126c6:	bf48      	it	mi
   126c8:	ea83 0308 	eormi.w	r3, r3, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   126cc:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   126ce:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   126d2:	d1f3      	bne.n	126bc <dir_register+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   126d4:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   126d8:	2a00      	cmp	r2, #0
   126da:	d1ee      	bne.n	126ba <dir_register+0xbe>
   126dc:	e7b0      	b.n	12640 <dir_register+0x44>
   126de:	1eb8      	subs	r0, r7, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   126e0:	464b      	mov	r3, r9
   126e2:	e7f7      	b.n	126d4 <dir_register+0xd8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   126e4:	3301      	adds	r3, #1
   126e6:	e7bf      	b.n	12668 <dir_register+0x6c>
   126e8:	4613      	mov	r3, r2
   126ea:	e7c2      	b.n	12672 <dir_register+0x76>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   126ec:	3601      	adds	r6, #1
   126ee:	e00e      	b.n	1270e <dir_register+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   126f0:	2601      	movs	r6, #1
   126f2:	e014      	b.n	1271e <dir_register+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1625
		return FR_INVALID_NAME;
   126f4:	2506      	movs	r5, #6
   126f6:	e7dc      	b.n	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   126f8:	2d04      	cmp	r5, #4
   126fa:	d1da      	bne.n	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   126fc:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12700:	72f3      	strb	r3, [r6, #11]
   12702:	61e7      	str	r7, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   12704:	f89d 3017 	ldrb.w	r3, [sp, #23]
   12708:	079b      	lsls	r3, r3, #30
   1270a:	d5f1      	bpl.n	126f0 <dir_register+0xf4>
   1270c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   1270e:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   12712:	2b00      	cmp	r3, #0
   12714:	d1ea      	bne.n	126ec <dir_register+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   12716:	230d      	movs	r3, #13
   12718:	3619      	adds	r6, #25
   1271a:	fbb6 f6f3 	udiv	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1645
	res = dir_alloc(dp, nent);		/* Allocate entries */
   1271e:	4631      	mov	r1, r6
   12720:	4620      	mov	r0, r4
   12722:	f7ff ff49 	bl	125b8 <dir_alloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   12726:	4605      	mov	r5, r0
   12728:	2800      	cmp	r0, #0
   1272a:	d1c2      	bne.n	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647 (discriminator 1)
   1272c:	3e01      	subs	r6, #1
   1272e:	d049      	beq.n	127c4 <dir_register+0x1c8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   12730:	88e1      	ldrh	r1, [r4, #6]
   12732:	4620      	mov	r0, r4
   12734:	1b89      	subs	r1, r1, r6
   12736:	f7ff fbdf 	bl	11ef8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   1273a:	4605      	mov	r5, r0
   1273c:	2800      	cmp	r0, #0
   1273e:	d1b8      	bne.n	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   12740:	69a0      	ldr	r0, [r4, #24]
   12742:	f7ff f96e 	bl	11a22 <sum_sfn>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12746:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   1274a:	4607      	mov	r7, r0
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   1274c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 12800 <dir_register+0x204>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   12750:	6921      	ldr	r1, [r4, #16]
   12752:	6820      	ldr	r0, [r4, #0]
   12754:	f7ff f9f8 	bl	11b48 <move_window>
   12758:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   1275a:	2800      	cmp	r0, #0
   1275c:	d1a9      	bne.n	126b2 <dir_register+0xb6>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   1275e:	220f      	movs	r2, #15
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   12760:	6963      	ldr	r3, [r4, #20]
   12762:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   12766:	72da      	strb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   12768:	220d      	movs	r2, #13
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   1276a:	b2f1      	uxtb	r1, r6
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   1276c:	1e4d      	subs	r5, r1, #1
   1276e:	436a      	muls	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   12770:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   12772:	735f      	strb	r7, [r3, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   12774:	7318      	strb	r0, [r3, #12]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12776:	8358      	strh	r0, [r3, #26]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12778:	4548      	cmp	r0, r9
   1277a:	bf18      	it	ne
   1277c:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   12780:	f815 c008 	ldrb.w	ip, [r5, r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12784:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12788:	bf18      	it	ne
   1278a:	3201      	addne	r2, #1
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1278c:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   12790:	2800      	cmp	r0, #0
   12792:	bf08      	it	eq
   12794:	4648      	moveq	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12796:	2d0d      	cmp	r5, #13
   12798:	d1ee      	bne.n	12778 <dir_register+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   1279a:	4548      	cmp	r0, r9
   1279c:	d002      	beq.n	127a4 <dir_register+0x1a8>
   1279e:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   127a2:	b90a      	cbnz	r2, 127a8 <dir_register+0x1ac>
   127a4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   127a8:	2201      	movs	r2, #1
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   127aa:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   127ac:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   127ae:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   127b0:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   127b2:	4620      	mov	r0, r4
   127b4:	f7ff fc99 	bl	120ea <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   127b8:	4605      	mov	r5, r0
   127ba:	2800      	cmp	r0, #0
   127bc:	f47f af79 	bne.w	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   127c0:	3e01      	subs	r6, #1
   127c2:	d1c5      	bne.n	12750 <dir_register+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   127c4:	6921      	ldr	r1, [r4, #16]
   127c6:	6820      	ldr	r0, [r4, #0]
   127c8:	f7ff f9be 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   127cc:	4605      	mov	r5, r0
   127ce:	2800      	cmp	r0, #0
   127d0:	f47f af6f 	bne.w	126b2 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   127d4:	2220      	movs	r2, #32
   127d6:	4629      	mov	r1, r5
   127d8:	6960      	ldr	r0, [r4, #20]
   127da:	f7ff f91b 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   127de:	220b      	movs	r2, #11
   127e0:	69a1      	ldr	r1, [r4, #24]
   127e2:	6960      	ldr	r0, [r4, #20]
   127e4:	f7ff f8fa 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   127e8:	69a3      	ldr	r3, [r4, #24]
   127ea:	6962      	ldr	r2, [r4, #20]
   127ec:	7adb      	ldrb	r3, [r3, #11]
   127ee:	f003 0318 	and.w	r3, r3, #24
   127f2:	7313      	strb	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   127f4:	2201      	movs	r2, #1
   127f6:	6823      	ldr	r3, [r4, #0]
   127f8:	711a      	strb	r2, [r3, #4]
   127fa:	e75a      	b.n	126b2 <dir_register+0xb6>
   127fc:	00011021 	.word	0x00011021
   12800:	0001f690 	.word	0x0001f690

00012804 <remove_chain>:
remove_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12804:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12806:	b570      	push	{r4, r5, r6, lr}
   12808:	4604      	mov	r4, r0
   1280a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1280c:	d801      	bhi.n	12812 <remove_chain+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   1280e:	2002      	movs	r0, #2
   12810:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12812:	69c3      	ldr	r3, [r0, #28]
   12814:	4299      	cmp	r1, r3
   12816:	d2fa      	bcs.n	1280e <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   12818:	69e3      	ldr	r3, [r4, #28]
   1281a:	429d      	cmp	r5, r3
   1281c:	d205      	bcs.n	1282a <remove_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   1281e:	4629      	mov	r1, r5
   12820:	4620      	mov	r0, r4
   12822:	f7ff fb16 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   12826:	4606      	mov	r6, r0
   12828:	b908      	cbnz	r0, 1282e <remove_chain+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   1282a:	2000      	movs	r0, #0
   1282c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   1282e:	2801      	cmp	r0, #1
   12830:	d0ed      	beq.n	1280e <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12832:	1c41      	adds	r1, r0, #1
   12834:	d010      	beq.n	12858 <remove_chain+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   12836:	2200      	movs	r2, #0
   12838:	4629      	mov	r1, r5
   1283a:	4620      	mov	r0, r4
   1283c:	f7ff fb9c 	bl	11f78 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   12840:	b958      	cbnz	r0, 1285a <remove_chain+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   12842:	6963      	ldr	r3, [r4, #20]
   12844:	1c5a      	adds	r2, r3, #1
   12846:	d005      	beq.n	12854 <remove_chain+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   12848:	3301      	adds	r3, #1
   1284a:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   1284c:	7963      	ldrb	r3, [r4, #5]
   1284e:	f043 0301 	orr.w	r3, r3, #1
   12852:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12854:	4635      	mov	r5, r6
   12856:	e7df      	b.n	12818 <remove_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12858:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   1285a:	bd70      	pop	{r4, r5, r6, pc}

0001285c <f_mount>:
f_mount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   1285c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1285e:	b085      	sub	sp, #20
   12860:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   12862:	a804      	add	r0, sp, #16
   12864:	f840 1d04 	str.w	r1, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   12868:	9100      	str	r1, [sp, #0]
   1286a:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   1286c:	f7ff f8e8 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12870:	1e05      	subs	r5, r0, #0
   12872:	db2a      	blt.n	128ca <f_mount+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   12874:	4f17      	ldr	r7, [pc, #92]	; (128d4 <f_mount+0x78>)
   12876:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   1287a:	b14c      	cbz	r4, 12890 <f_mount+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   1287c:	68e0      	ldr	r0, [r4, #12]
   1287e:	f000 fe37 	bl	134f0 <ff_del_syncobj>
   12882:	b918      	cbnz	r0, 1288c <f_mount+0x30>
   12884:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   12886:	4620      	mov	r0, r4
   12888:	b005      	add	sp, #20
   1288a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   1288c:	2300      	movs	r3, #0
   1288e:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   12890:	9901      	ldr	r1, [sp, #4]
   12892:	b989      	cbnz	r1, 128b8 <f_mount+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   12894:	9c01      	ldr	r4, [sp, #4]
   12896:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   1289a:	2c00      	cmp	r4, #0
   1289c:	d0f3      	beq.n	12886 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   1289e:	2e01      	cmp	r6, #1
   128a0:	d115      	bne.n	128ce <f_mount+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   128a2:	4669      	mov	r1, sp
   128a4:	2200      	movs	r2, #0
   128a6:	a801      	add	r0, sp, #4
   128a8:	f7ff f98e 	bl	11bc8 <find_volume>
   128ac:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   128ae:	4601      	mov	r1, r0
   128b0:	9801      	ldr	r0, [sp, #4]
   128b2:	f7ff fab6 	bl	11e22 <unlock_fs>
   128b6:	e7e6      	b.n	12886 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   128b8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   128ba:	b2e8      	uxtb	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   128bc:	f801 3b0c 	strb.w	r3, [r1], #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   128c0:	f000 fe0c 	bl	134dc <ff_cre_syncobj>
   128c4:	2800      	cmp	r0, #0
   128c6:	d0dd      	beq.n	12884 <f_mount+0x28>
   128c8:	e7e4      	b.n	12894 <f_mount+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   128ca:	240b      	movs	r4, #11
   128cc:	e7db      	b.n	12886 <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   128ce:	2400      	movs	r4, #0
   128d0:	e7d9      	b.n	12886 <f_mount+0x2a>
   128d2:	bf00      	nop
   128d4:	2007c460 	.word	0x2007c460

000128d8 <f_open>:
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   128d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   128dc:	b0d1      	sub	sp, #324	; 0x144
   128de:	9101      	str	r1, [sp, #4]
   128e0:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   128e2:	4606      	mov	r6, r0
   128e4:	2800      	cmp	r0, #0
   128e6:	f000 808c 	beq.w	12a02 <f_open+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   128ea:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   128ec:	f002 021e 	and.w	r2, r2, #30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   128f0:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   128f2:	a901      	add	r1, sp, #4
   128f4:	a806      	add	r0, sp, #24
   128f6:	f7ff f967 	bl	11bc8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   128fa:	4605      	mov	r5, r0
   128fc:	2800      	cmp	r0, #0
   128fe:	d174      	bne.n	129ea <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12900:	ab03      	add	r3, sp, #12
   12902:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12904:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12906:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12908:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   1290a:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   1290c:	f7ff fcf4 	bl	122f8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   12910:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   12912:	b910      	cbnz	r0, 1291a <f_open+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   12914:	2c00      	cmp	r4, #0
   12916:	bf08      	it	eq
   12918:	2006      	moveq	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   1291a:	f018 0f1c 	tst.w	r8, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   1291e:	f008 071f 	and.w	r7, r8, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12922:	d03d      	beq.n	129a0 <f_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   12924:	b398      	cbz	r0, 1298e <f_open+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   12926:	2804      	cmp	r0, #4
   12928:	d102      	bne.n	12930 <f_open+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   1292a:	a806      	add	r0, sp, #24
   1292c:	f7ff fe66 	bl	125fc <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   12930:	f047 0708 	orr.w	r7, r7, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12934:	bb48      	cbnz	r0, 1298a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   12936:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12938:	0738      	lsls	r0, r7, #28
   1293a:	d53b      	bpl.n	129b4 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   1293c:	f001 fc80 	bl	14240 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12940:	2300      	movs	r3, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12942:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   12946:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12948:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1294a:	61e3      	str	r3, [r4, #28]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1294c:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   1294e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12952:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12954:	bf08      	it	eq
   12956:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12958:	8363      	strh	r3, [r4, #26]
   1295a:	82a3      	strh	r3, [r4, #20]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   1295c:	f04f 0301 	mov.w	r3, #1
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12960:	bf08      	it	eq
   12962:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   12966:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   12968:	f1b8 0f00 	cmp.w	r8, #0
   1296c:	d022      	beq.n	129b4 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   1296e:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   12970:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   12974:	f7ff ff46 	bl	12804 <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   12978:	b938      	cbnz	r0, 1298a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   1297a:	9806      	ldr	r0, [sp, #24]
   1297c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   12980:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   12982:	4649      	mov	r1, r9
   12984:	f7ff f8e0 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   12988:	b1a0      	cbz	r0, 129b4 <f_open+0xdc>
   1298a:	4605      	mov	r5, r0
   1298c:	e02d      	b.n	129ea <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   1298e:	7ae3      	ldrb	r3, [r4, #11]
   12990:	f013 0f11 	tst.w	r3, #17
   12994:	d133      	bne.n	129fe <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   12996:	f018 0f04 	tst.w	r8, #4
   1299a:	d0cd      	beq.n	12938 <f_open+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   1299c:	2508      	movs	r5, #8
   1299e:	e024      	b.n	129ea <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   129a0:	2800      	cmp	r0, #0
   129a2:	d1f2      	bne.n	1298a <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   129a4:	7ae3      	ldrb	r3, [r4, #11]
   129a6:	06d9      	lsls	r1, r3, #27
   129a8:	d427      	bmi.n	129fa <f_open+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   129aa:	f018 0f02 	tst.w	r8, #2
   129ae:	d001      	beq.n	129b4 <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   129b0:	07da      	lsls	r2, r3, #31
   129b2:	d424      	bmi.n	129fe <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   129b4:	073b      	lsls	r3, r7, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   129b6:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   129b8:	bf48      	it	mi
   129ba:	f047 0720 	orrmi.w	r7, r7, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   129be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   129c0:	71b7      	strb	r7, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   129c2:	61f2      	str	r2, [r6, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   129c4:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   129c6:	6234      	str	r4, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   129c8:	71f2      	strb	r2, [r6, #7]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   129ca:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   129cc:	8b62      	ldrh	r2, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   129ce:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   129d0:	bf04      	itt	eq
   129d2:	8aa1      	ldrheq	r1, [r4, #20]
   129d4:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   129d8:	6132      	str	r2, [r6, #16]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   129da:	69e2      	ldr	r2, [r4, #28]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   129dc:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   129de:	60f2      	str	r2, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   129e0:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   129e2:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   129e4:	60b2      	str	r2, [r6, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   129e6:	61b2      	str	r2, [r6, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   129e8:	80b3      	strh	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   129ea:	4629      	mov	r1, r5
   129ec:	9806      	ldr	r0, [sp, #24]
   129ee:	f7ff fa18 	bl	11e22 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   129f2:	4628      	mov	r0, r5
   129f4:	b051      	add	sp, #324	; 0x144
   129f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   129fa:	2504      	movs	r5, #4
   129fc:	e7f5      	b.n	129ea <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   129fe:	2507      	movs	r5, #7
   12a00:	e7f3      	b.n	129ea <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   12a02:	2509      	movs	r5, #9
   12a04:	e7f5      	b.n	129f2 <f_open+0x11a>

00012a06 <f_read>:
f_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   12a06:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a0a:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   12a0c:	2300      	movs	r3, #0
   12a0e:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   12a12:	4604      	mov	r4, r0
   12a14:	4689      	mov	r9, r1
   12a16:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   12a18:	f7ff f9e6 	bl	11de8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12a1c:	4605      	mov	r5, r0
   12a1e:	b110      	cbz	r0, 12a26 <f_read+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   12a20:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   12a22:	6820      	ldr	r0, [r4, #0]
   12a24:	e04a      	b.n	12abc <f_read+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   12a26:	79e1      	ldrb	r1, [r4, #7]
   12a28:	b139      	cbz	r1, 12a3a <f_read+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12a2a:	6820      	ldr	r0, [r4, #0]
   12a2c:	f7ff f9f9 	bl	11e22 <unlock_fs>
   12a30:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   12a32:	4628      	mov	r0, r5
   12a34:	b003      	add	sp, #12
   12a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   12a3a:	79a3      	ldrb	r3, [r4, #6]
   12a3c:	07d8      	lsls	r0, r3, #31
   12a3e:	d405      	bmi.n	12a4c <f_read+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   12a40:	2107      	movs	r1, #7
   12a42:	6820      	ldr	r0, [r4, #0]
   12a44:	f7ff f9ed 	bl	11e22 <unlock_fs>
   12a48:	2507      	movs	r5, #7
   12a4a:	e7f2      	b.n	12a32 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   12a4c:	68e3      	ldr	r3, [r4, #12]
   12a4e:	68a7      	ldr	r7, [r4, #8]
   12a50:	1bdf      	subs	r7, r3, r7
   12a52:	42b7      	cmp	r7, r6
   12a54:	bf28      	it	cs
   12a56:	4637      	movcs	r7, r6
   12a58:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12a5c:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   12a5e:	b90f      	cbnz	r7, 12a64 <f_read+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12a60:	4639      	mov	r1, r7
   12a62:	e7de      	b.n	12a22 <f_read+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   12a64:	68a2      	ldr	r2, [r4, #8]
   12a66:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12a6a:	2b00      	cmp	r3, #0
   12a6c:	d174      	bne.n	12b58 <f_read+0x152>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12a6e:	6820      	ldr	r0, [r4, #0]
   12a70:	7883      	ldrb	r3, [r0, #2]
   12a72:	3b01      	subs	r3, #1
   12a74:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   12a78:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12a7c:	d111      	bne.n	12aa2 <f_read+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   12a7e:	b92a      	cbnz	r2, 12a8c <f_read+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   12a80:	6920      	ldr	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   12a82:	2801      	cmp	r0, #1
   12a84:	d808      	bhi.n	12a98 <f_read+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   12a86:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12a88:	71e5      	strb	r5, [r4, #7]
   12a8a:	e7c9      	b.n	12a20 <f_read+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   12a8c:	6961      	ldr	r1, [r4, #20]
   12a8e:	9301      	str	r3, [sp, #4]
   12a90:	f7ff f9df 	bl	11e52 <get_fat>
   12a94:	9b01      	ldr	r3, [sp, #4]
   12a96:	e7f4      	b.n	12a82 <f_read+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12a98:	1c41      	adds	r1, r0, #1
   12a9a:	d101      	bne.n	12aa0 <f_read+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12a9c:	2501      	movs	r5, #1
   12a9e:	e7f3      	b.n	12a88 <f_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   12aa0:	6160      	str	r0, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12aa2:	f8d4 a000 	ldr.w	sl, [r4]
   12aa6:	6961      	ldr	r1, [r4, #20]
   12aa8:	4650      	mov	r0, sl
   12aaa:	9301      	str	r3, [sp, #4]
   12aac:	f7ff f9c6 	bl	11e3c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12ab0:	9b01      	ldr	r3, [sp, #4]
   12ab2:	b930      	cbnz	r0, 12ac2 <f_read+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   12ab4:	2502      	movs	r5, #2
   12ab6:	4650      	mov	r0, sl
   12ab8:	4629      	mov	r1, r5
   12aba:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12abc:	f7ff f9b1 	bl	11e22 <unlock_fs>
   12ac0:	e7b7      	b.n	12a32 <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12ac2:	0a7e      	lsrs	r6, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   12ac4:	eb00 0803 	add.w	r8, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12ac8:	d029      	beq.n	12b1e <f_read+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12aca:	f89a 2002 	ldrb.w	r2, [sl, #2]
   12ace:	1999      	adds	r1, r3, r6
   12ad0:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   12ad2:	bf88      	it	hi
   12ad4:	1ad6      	subhi	r6, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   12ad6:	b2f3      	uxtb	r3, r6
   12ad8:	4642      	mov	r2, r8
   12ada:	4649      	mov	r1, r9
   12adc:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12ae0:	f001 f901 	bl	13ce6 <disk_read>
   12ae4:	2800      	cmp	r0, #0
   12ae6:	d1d9      	bne.n	12a9c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   12ae8:	79a3      	ldrb	r3, [r4, #6]
   12aea:	065a      	lsls	r2, r3, #25
   12aec:	d50b      	bpl.n	12b06 <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   12aee:	69a0      	ldr	r0, [r4, #24]
   12af0:	eba0 0008 	sub.w	r0, r0, r8
   12af4:	4286      	cmp	r6, r0
   12af6:	d906      	bls.n	12b06 <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   12af8:	f44f 7200 	mov.w	r2, #512	; 0x200
   12afc:	9900      	ldr	r1, [sp, #0]
   12afe:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   12b02:	f7fe ff6b 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   12b06:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   12b08:	68a3      	ldr	r3, [r4, #8]
   12b0a:	44b1      	add	r9, r6
   12b0c:	4433      	add	r3, r6
   12b0e:	60a3      	str	r3, [r4, #8]
   12b10:	f8db 3000 	ldr.w	r3, [fp]
   12b14:	1bbf      	subs	r7, r7, r6
   12b16:	4433      	add	r3, r6
   12b18:	f8cb 3000 	str.w	r3, [fp]
   12b1c:	e79f      	b.n	12a5e <f_read+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   12b1e:	69a2      	ldr	r2, [r4, #24]
   12b20:	4590      	cmp	r8, r2
   12b22:	d017      	beq.n	12b54 <f_read+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   12b24:	79a3      	ldrb	r3, [r4, #6]
   12b26:	065b      	lsls	r3, r3, #25
   12b28:	d50b      	bpl.n	12b42 <f_read+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12b2a:	2301      	movs	r3, #1
   12b2c:	9900      	ldr	r1, [sp, #0]
   12b2e:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12b32:	f001 f8f4 	bl	13d1e <disk_write>
   12b36:	2800      	cmp	r0, #0
   12b38:	d1b0      	bne.n	12a9c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   12b3a:	79a3      	ldrb	r3, [r4, #6]
   12b3c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12b40:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   12b42:	6820      	ldr	r0, [r4, #0]
   12b44:	2301      	movs	r3, #1
   12b46:	4642      	mov	r2, r8
   12b48:	9900      	ldr	r1, [sp, #0]
   12b4a:	7840      	ldrb	r0, [r0, #1]
   12b4c:	f001 f8cb 	bl	13ce6 <disk_read>
   12b50:	2800      	cmp	r0, #0
   12b52:	d1a3      	bne.n	12a9c <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   12b54:	f8c4 8018 	str.w	r8, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12b58:	68a1      	ldr	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12b5a:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12b5c:	f3c1 0108 	ubfx	r1, r1, #0, #9
   12b60:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   12b64:	42be      	cmp	r6, r7
   12b66:	bf28      	it	cs
   12b68:	463e      	movcs	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12b6a:	3124      	adds	r1, #36	; 0x24
   12b6c:	4632      	mov	r2, r6
   12b6e:	4421      	add	r1, r4
   12b70:	f7fe ff34 	bl	119dc <mem_cpy>
   12b74:	e7c8      	b.n	12b08 <f_read+0x102>

00012b76 <f_write>:
f_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   12b76:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b7a:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   12b7c:	2300      	movs	r3, #0
   12b7e:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   12b82:	4604      	mov	r4, r0
   12b84:	4689      	mov	r9, r1
   12b86:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   12b88:	f7ff f92e 	bl	11de8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12b8c:	4605      	mov	r5, r0
   12b8e:	b110      	cbz	r0, 12b96 <f_write+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   12b90:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   12b92:	6820      	ldr	r0, [r4, #0]
   12b94:	e068      	b.n	12c68 <f_write+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   12b96:	79e1      	ldrb	r1, [r4, #7]
   12b98:	b139      	cbz	r1, 12baa <f_write+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12b9a:	6820      	ldr	r0, [r4, #0]
   12b9c:	f7ff f941 	bl	11e22 <unlock_fs>
   12ba0:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   12ba2:	4628      	mov	r0, r5
   12ba4:	b003      	add	sp, #12
   12ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   12baa:	79a3      	ldrb	r3, [r4, #6]
   12bac:	0799      	lsls	r1, r3, #30
   12bae:	d405      	bmi.n	12bbc <f_write+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   12bb0:	2107      	movs	r1, #7
   12bb2:	6820      	ldr	r0, [r4, #0]
   12bb4:	f7ff f935 	bl	11e22 <unlock_fs>
   12bb8:	2507      	movs	r5, #7
   12bba:	e7f2      	b.n	12ba2 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   12bbc:	68a3      	ldr	r3, [r4, #8]
   12bbe:	eb13 0f08 	cmn.w	r3, r8
   12bc2:	d205      	bcs.n	12bd0 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12bc4:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12bc8:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   12bca:	f1b8 0f00 	cmp.w	r8, #0
   12bce:	d10a      	bne.n	12be6 <f_write+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12bd0:	68a3      	ldr	r3, [r4, #8]
   12bd2:	68e2      	ldr	r2, [r4, #12]
   12bd4:	4293      	cmp	r3, r2
   12bd6:	f200 80a2 	bhi.w	12d1e <f_write+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12bda:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12bdc:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12bde:	f043 0320 	orr.w	r3, r3, #32
   12be2:	71a3      	strb	r3, [r4, #6]
   12be4:	e7d5      	b.n	12b92 <f_write+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   12be6:	68a2      	ldr	r2, [r4, #8]
   12be8:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12bec:	2b00      	cmp	r3, #0
   12bee:	f040 8083 	bne.w	12cf8 <f_write+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12bf2:	6820      	ldr	r0, [r4, #0]
   12bf4:	7883      	ldrb	r3, [r0, #2]
   12bf6:	3b01      	subs	r3, #1
   12bf8:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   12bfc:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12c00:	9300      	str	r3, [sp, #0]
   12c02:	d116      	bne.n	12c32 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   12c04:	b95a      	cbnz	r2, 12c1e <f_write+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   12c06:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   12c08:	b921      	cbnz	r1, 12c14 <f_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12c0a:	f7ff fa1e 	bl	1204a <create_chain>
   12c0e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   12c10:	2800      	cmp	r0, #0
   12c12:	d0dd      	beq.n	12bd0 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12c14:	2901      	cmp	r1, #1
   12c16:	d104      	bne.n	12c22 <f_write+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   12c18:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12c1a:	71e5      	strb	r5, [r4, #7]
   12c1c:	e7b8      	b.n	12b90 <f_write+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12c1e:	6961      	ldr	r1, [r4, #20]
   12c20:	e7f3      	b.n	12c0a <f_write+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12c22:	1c4a      	adds	r2, r1, #1
   12c24:	d101      	bne.n	12c2a <f_write+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12c26:	2501      	movs	r5, #1
   12c28:	e7f7      	b.n	12c1a <f_write+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12c2a:	6923      	ldr	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   12c2c:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12c2e:	b903      	cbnz	r3, 12c32 <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   12c30:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   12c32:	79a3      	ldrb	r3, [r4, #6]
   12c34:	065b      	lsls	r3, r3, #25
   12c36:	d50c      	bpl.n	12c52 <f_write+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12c38:	6820      	ldr	r0, [r4, #0]
   12c3a:	2301      	movs	r3, #1
   12c3c:	69a2      	ldr	r2, [r4, #24]
   12c3e:	9901      	ldr	r1, [sp, #4]
   12c40:	7840      	ldrb	r0, [r0, #1]
   12c42:	f001 f86c 	bl	13d1e <disk_write>
   12c46:	2800      	cmp	r0, #0
   12c48:	d1ed      	bne.n	12c26 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   12c4a:	79a3      	ldrb	r3, [r4, #6]
   12c4c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12c50:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12c52:	f8d4 a000 	ldr.w	sl, [r4]
   12c56:	6961      	ldr	r1, [r4, #20]
   12c58:	4650      	mov	r0, sl
   12c5a:	f7ff f8ef 	bl	11e3c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12c5e:	b930      	cbnz	r0, 12c6e <f_write+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   12c60:	2502      	movs	r5, #2
   12c62:	4650      	mov	r0, sl
   12c64:	4629      	mov	r1, r5
   12c66:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12c68:	f7ff f8db 	bl	11e22 <unlock_fs>
   12c6c:	e799      	b.n	12ba2 <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12c6e:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12c70:	ea5f 2658 	movs.w	r6, r8, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12c74:	eb00 0703 	add.w	r7, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12c78:	d02d      	beq.n	12cd6 <f_write+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12c7a:	9a00      	ldr	r2, [sp, #0]
   12c7c:	f89a 3002 	ldrb.w	r3, [sl, #2]
   12c80:	4432      	add	r2, r6
   12c82:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12c84:	bf88      	it	hi
   12c86:	9a00      	ldrhi	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12c88:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12c8a:	bf88      	it	hi
   12c8c:	1a9e      	subhi	r6, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12c8e:	b2f3      	uxtb	r3, r6
   12c90:	463a      	mov	r2, r7
   12c92:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12c96:	f001 f842 	bl	13d1e <disk_write>
   12c9a:	2800      	cmp	r0, #0
   12c9c:	d1c3      	bne.n	12c26 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   12c9e:	69a1      	ldr	r1, [r4, #24]
   12ca0:	1bc9      	subs	r1, r1, r7
   12ca2:	428e      	cmp	r6, r1
   12ca4:	d90a      	bls.n	12cbc <f_write+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   12ca6:	f44f 7200 	mov.w	r2, #512	; 0x200
   12caa:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   12cae:	9801      	ldr	r0, [sp, #4]
   12cb0:	f7fe fe94 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   12cb4:	79a3      	ldrb	r3, [r4, #6]
   12cb6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12cba:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   12cbc:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   12cbe:	68a3      	ldr	r3, [r4, #8]
   12cc0:	44b1      	add	r9, r6
   12cc2:	4433      	add	r3, r6
   12cc4:	60a3      	str	r3, [r4, #8]
   12cc6:	f8db 3000 	ldr.w	r3, [fp]
   12cca:	eba8 0806 	sub.w	r8, r8, r6
   12cce:	4433      	add	r3, r6
   12cd0:	f8cb 3000 	str.w	r3, [fp]
   12cd4:	e779      	b.n	12bca <f_write+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   12cd6:	69a3      	ldr	r3, [r4, #24]
   12cd8:	429f      	cmp	r7, r3
   12cda:	d00c      	beq.n	12cf6 <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   12cdc:	68a2      	ldr	r2, [r4, #8]
   12cde:	68e3      	ldr	r3, [r4, #12]
   12ce0:	429a      	cmp	r2, r3
   12ce2:	d208      	bcs.n	12cf6 <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12ce4:	2301      	movs	r3, #1
   12ce6:	463a      	mov	r2, r7
   12ce8:	9901      	ldr	r1, [sp, #4]
   12cea:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12cee:	f000 fffa 	bl	13ce6 <disk_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   12cf2:	2800      	cmp	r0, #0
   12cf4:	d197      	bne.n	12c26 <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   12cf6:	61a7      	str	r7, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12cf8:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12cfa:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   12cfc:	f3c0 0008 	ubfx	r0, r0, #0, #9
   12d00:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   12d04:	4546      	cmp	r6, r8
   12d06:	bf28      	it	cs
   12d08:	4646      	movcs	r6, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   12d0a:	3024      	adds	r0, #36	; 0x24
   12d0c:	4632      	mov	r2, r6
   12d0e:	4420      	add	r0, r4
   12d10:	f7fe fe64 	bl	119dc <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   12d14:	79a3      	ldrb	r3, [r4, #6]
   12d16:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12d1a:	71a3      	strb	r3, [r4, #6]
   12d1c:	e7cf      	b.n	12cbe <f_write+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12d1e:	60e3      	str	r3, [r4, #12]
   12d20:	e75b      	b.n	12bda <f_write+0x64>

00012d22 <f_sync>:
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   12d22:	b570      	push	{r4, r5, r6, lr}
   12d24:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   12d26:	f7ff f85f 	bl	11de8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   12d2a:	4605      	mov	r5, r0
   12d2c:	2800      	cmp	r0, #0
   12d2e:	d138      	bne.n	12da2 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   12d30:	79a3      	ldrb	r3, [r4, #6]
   12d32:	069a      	lsls	r2, r3, #26
   12d34:	d535      	bpl.n	12da2 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   12d36:	065b      	lsls	r3, r3, #25
   12d38:	d513      	bpl.n	12d62 <f_sync+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12d3a:	6820      	ldr	r0, [r4, #0]
   12d3c:	2301      	movs	r3, #1
   12d3e:	69a2      	ldr	r2, [r4, #24]
   12d40:	f104 0124 	add.w	r1, r4, #36	; 0x24
   12d44:	7840      	ldrb	r0, [r0, #1]
   12d46:	f000 ffea 	bl	13d1e <disk_write>
   12d4a:	b130      	cbz	r0, 12d5a <f_sync+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   12d4c:	2101      	movs	r1, #1
   12d4e:	6820      	ldr	r0, [r4, #0]
   12d50:	f7ff f867 	bl	11e22 <unlock_fs>
   12d54:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   12d56:	4628      	mov	r0, r5
   12d58:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   12d5a:	79a3      	ldrb	r3, [r4, #6]
   12d5c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12d60:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   12d62:	69e1      	ldr	r1, [r4, #28]
   12d64:	6820      	ldr	r0, [r4, #0]
   12d66:	f7fe feef 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   12d6a:	4605      	mov	r5, r0
   12d6c:	b9c8      	cbnz	r0, 12da2 <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   12d6e:	6a26      	ldr	r6, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   12d70:	7af3      	ldrb	r3, [r6, #11]
   12d72:	f043 0320 	orr.w	r3, r3, #32
   12d76:	72f3      	strb	r3, [r6, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   12d78:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12d7a:	61f3      	str	r3, [r6, #28]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   12d7c:	6923      	ldr	r3, [r4, #16]
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   12d7e:	8373      	strh	r3, [r6, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   12d80:	0c1b      	lsrs	r3, r3, #16
   12d82:	82b3      	strh	r3, [r6, #20]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   12d84:	f001 fa5c 	bl	14240 <get_fattime>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12d88:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12d8a:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   12d8e:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   12d90:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   12d92:	f023 0320 	bic.w	r3, r3, #32
   12d96:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   12d98:	2301      	movs	r3, #1
   12d9a:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   12d9c:	f7fe fe9a 	bl	11ad4 <sync_fs>
   12da0:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   12da2:	4629      	mov	r1, r5
   12da4:	6820      	ldr	r0, [r4, #0]
   12da6:	f7ff f83c 	bl	11e22 <unlock_fs>
   12daa:	e7d4      	b.n	12d56 <f_sync+0x34>

00012dac <f_close>:
f_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   12dac:	b538      	push	{r3, r4, r5, lr}
   12dae:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   12db0:	f7ff ffb7 	bl	12d22 <f_sync>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   12db4:	4604      	mov	r4, r0
   12db6:	b948      	cbnz	r0, 12dcc <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   12db8:	4628      	mov	r0, r5
   12dba:	f7ff f815 	bl	11de8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   12dbe:	4604      	mov	r4, r0
   12dc0:	b920      	cbnz	r0, 12dcc <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   12dc2:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   12dc4:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   12dc6:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   12dc8:	f7ff f82b 	bl	11e22 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   12dcc:	4620      	mov	r0, r4
   12dce:	bd38      	pop	{r3, r4, r5, pc}

00012dd0 <f_lseek>:
f_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   12dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12dd2:	4604      	mov	r4, r0
   12dd4:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   12dd6:	f7ff f807 	bl	11de8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12dda:	4605      	mov	r5, r0
   12ddc:	b110      	cbz	r0, 12de4 <f_lseek+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   12dde:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   12de0:	6820      	ldr	r0, [r4, #0]
   12de2:	e06a      	b.n	12eba <f_lseek+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   12de4:	79e1      	ldrb	r1, [r4, #7]
   12de6:	b129      	cbz	r1, 12df4 <f_lseek+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12de8:	6820      	ldr	r0, [r4, #0]
   12dea:	f7ff f81a 	bl	11e22 <unlock_fs>
   12dee:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   12df0:	4628      	mov	r0, r5
   12df2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   12df4:	68e3      	ldr	r3, [r4, #12]
   12df6:	42b3      	cmp	r3, r6
   12df8:	d204      	bcs.n	12e04 <f_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   12dfa:	79a2      	ldrb	r2, [r4, #6]
   12dfc:	f012 0f02 	tst.w	r2, #2
   12e00:	bf08      	it	eq
   12e02:	461e      	moveq	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12e04:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   12e06:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12e08:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   12e0a:	2e00      	cmp	r6, #0
   12e0c:	d130      	bne.n	12e70 <f_lseek+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   12e0e:	68a3      	ldr	r3, [r4, #8]
   12e10:	68e2      	ldr	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   12e12:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   12e14:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   12e16:	bf81      	itttt	hi
   12e18:	60e3      	strhi	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   12e1a:	79a3      	ldrbhi	r3, [r4, #6]
   12e1c:	f043 0320 	orrhi.w	r3, r3, #32
   12e20:	71a3      	strbhi	r3, [r4, #6]
   12e22:	e7dd      	b.n	12de0 <f_lseek+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   12e24:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   12e26:	68a3      	ldr	r3, [r4, #8]
   12e28:	f3c3 0308 	ubfx	r3, r3, #0, #9
   12e2c:	2b00      	cmp	r3, #0
   12e2e:	d0ee      	beq.n	12e0e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   12e30:	69a2      	ldr	r2, [r4, #24]
   12e32:	4296      	cmp	r6, r2
   12e34:	d0eb      	beq.n	12e0e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   12e36:	79a3      	ldrb	r3, [r4, #6]
   12e38:	f104 0724 	add.w	r7, r4, #36	; 0x24
   12e3c:	f013 0f40 	tst.w	r3, #64	; 0x40
   12e40:	d00b      	beq.n	12e5a <f_lseek+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12e42:	6820      	ldr	r0, [r4, #0]
   12e44:	2301      	movs	r3, #1
   12e46:	4639      	mov	r1, r7
   12e48:	7840      	ldrb	r0, [r0, #1]
   12e4a:	f000 ff68 	bl	13d1e <disk_write>
   12e4e:	2800      	cmp	r0, #0
   12e50:	d142      	bne.n	12ed8 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   12e52:	79a3      	ldrb	r3, [r4, #6]
   12e54:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12e58:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   12e5a:	6820      	ldr	r0, [r4, #0]
   12e5c:	2301      	movs	r3, #1
   12e5e:	4632      	mov	r2, r6
   12e60:	4639      	mov	r1, r7
   12e62:	7840      	ldrb	r0, [r0, #1]
   12e64:	f000 ff3f 	bl	13ce6 <disk_read>
   12e68:	2800      	cmp	r0, #0
   12e6a:	d135      	bne.n	12ed8 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   12e6c:	61a6      	str	r6, [r4, #24]
   12e6e:	e7ce      	b.n	12e0e <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   12e70:	6820      	ldr	r0, [r4, #0]
   12e72:	7887      	ldrb	r7, [r0, #2]
   12e74:	027f      	lsls	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   12e76:	b31b      	cbz	r3, 12ec0 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   12e78:	3b01      	subs	r3, #1
   12e7a:	1e72      	subs	r2, r6, #1
   12e7c:	fbb2 f2f7 	udiv	r2, r2, r7
   12e80:	fbb3 f1f7 	udiv	r1, r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   12e84:	428a      	cmp	r2, r1
   12e86:	d31b      	bcc.n	12ec0 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   12e88:	427a      	negs	r2, r7
   12e8a:	4013      	ands	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   12e8c:	6961      	ldr	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   12e8e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   12e90:	1af6      	subs	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   12e92:	2900      	cmp	r1, #0
   12e94:	d0c6      	beq.n	12e24 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   12e96:	42be      	cmp	r6, r7
   12e98:	d823      	bhi.n	12ee2 <f_lseek+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   12e9a:	68a3      	ldr	r3, [r4, #8]
   12e9c:	4433      	add	r3, r6
   12e9e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   12ea0:	f3c6 0308 	ubfx	r3, r6, #0, #9
   12ea4:	2b00      	cmp	r3, #0
   12ea6:	d0bd      	beq.n	12e24 <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   12ea8:	6822      	ldr	r2, [r4, #0]
   12eaa:	4610      	mov	r0, r2
   12eac:	f7fe ffc6 	bl	11e3c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   12eb0:	bb90      	cbnz	r0, 12f18 <f_lseek+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   12eb2:	2502      	movs	r5, #2
   12eb4:	4610      	mov	r0, r2
   12eb6:	4629      	mov	r1, r5
   12eb8:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   12eba:	f7fe ffb2 	bl	11e22 <unlock_fs>
   12ebe:	e797      	b.n	12df0 <f_lseek+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   12ec0:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   12ec2:	b961      	cbnz	r1, 12ede <f_lseek+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   12ec4:	f7ff f8c1 	bl	1204a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12ec8:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   12eca:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12ecc:	d102      	bne.n	12ed4 <f_lseek+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   12ece:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   12ed0:	71e5      	strb	r5, [r4, #7]
   12ed2:	e784      	b.n	12dde <f_lseek+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12ed4:	3001      	adds	r0, #1
   12ed6:	d101      	bne.n	12edc <f_lseek+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   12ed8:	2501      	movs	r5, #1
   12eda:	e7f9      	b.n	12ed0 <f_lseek+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   12edc:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   12ede:	6161      	str	r1, [r4, #20]
   12ee0:	e7d7      	b.n	12e92 <f_lseek+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   12ee2:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   12ee4:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   12ee6:	079a      	lsls	r2, r3, #30
   12ee8:	d505      	bpl.n	12ef6 <f_lseek+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   12eea:	f7ff f8ae 	bl	1204a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   12eee:	4601      	mov	r1, r0
   12ef0:	b920      	cbnz	r0, 12efc <f_lseek+0x12c>
   12ef2:	463e      	mov	r6, r7
   12ef4:	e7d1      	b.n	12e9a <f_lseek+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   12ef6:	f7fe ffac 	bl	11e52 <get_fat>
   12efa:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12efc:	1c4b      	adds	r3, r1, #1
   12efe:	d0eb      	beq.n	12ed8 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   12f00:	2901      	cmp	r1, #1
   12f02:	d9e4      	bls.n	12ece <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   12f04:	6823      	ldr	r3, [r4, #0]
   12f06:	69db      	ldr	r3, [r3, #28]
   12f08:	4299      	cmp	r1, r3
   12f0a:	d2e0      	bcs.n	12ece <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   12f0c:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   12f0e:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   12f10:	443b      	add	r3, r7
   12f12:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   12f14:	1bf6      	subs	r6, r6, r7
   12f16:	e7be      	b.n	12e96 <f_lseek+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   12f18:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   12f1c:	e783      	b.n	12e26 <f_lseek+0x56>

00012f1e <f_getfree>:
f_getfree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   12f1e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   12f22:	4614      	mov	r4, r2
   12f24:	ab02      	add	r3, sp, #8
   12f26:	f843 0d04 	str.w	r0, [r3, #-4]!
   12f2a:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   12f2c:	4620      	mov	r0, r4
   12f2e:	2200      	movs	r2, #0
   12f30:	4619      	mov	r1, r3
   12f32:	f7fe fe49 	bl	11bc8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   12f36:	6824      	ldr	r4, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   12f38:	4605      	mov	r5, r0
   12f3a:	b930      	cbnz	r0, 12f4a <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   12f3c:	69e7      	ldr	r7, [r4, #28]
   12f3e:	6963      	ldr	r3, [r4, #20]
   12f40:	1eba      	subs	r2, r7, #2
   12f42:	4293      	cmp	r3, r2
   12f44:	d809      	bhi.n	12f5a <f_getfree+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   12f46:	f8c8 3000 	str.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   12f4a:	4620      	mov	r0, r4
   12f4c:	4629      	mov	r1, r5
   12f4e:	f7fe ff68 	bl	11e22 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   12f52:	4628      	mov	r0, r5
   12f54:	b002      	add	sp, #8
   12f56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   12f5a:	f894 9000 	ldrb.w	r9, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   12f5e:	f1b9 0f01 	cmp.w	r9, #1
   12f62:	d117      	bne.n	12f94 <f_getfree+0x76>
   12f64:	2702      	movs	r7, #2
   12f66:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   12f68:	4639      	mov	r1, r7
   12f6a:	4620      	mov	r0, r4
   12f6c:	f7fe ff71 	bl	11e52 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   12f70:	1c43      	adds	r3, r0, #1
   12f72:	d032      	beq.n	12fda <f_getfree+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   12f74:	2801      	cmp	r0, #1
   12f76:	d032      	beq.n	12fde <f_getfree+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   12f78:	b900      	cbnz	r0, 12f7c <f_getfree+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   12f7a:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   12f7c:	69e3      	ldr	r3, [r4, #28]
   12f7e:	3701      	adds	r7, #1
   12f80:	429f      	cmp	r7, r3
   12f82:	d3f1      	bcc.n	12f68 <f_getfree+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   12f84:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   12f86:	6166      	str	r6, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   12f88:	f043 0301 	orr.w	r3, r3, #1
   12f8c:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   12f8e:	f8c8 6000 	str.w	r6, [r8]
   12f92:	e7da      	b.n	12f4a <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   12f94:	4603      	mov	r3, r0
   12f96:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   12f98:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   12f9a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   12f9c:	b952      	cbnz	r2, 12fb4 <f_getfree+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12f9e:	4620      	mov	r0, r4
   12fa0:	f101 0a01 	add.w	sl, r1, #1
   12fa4:	f7fe fdd0 	bl	11b48 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   12fa8:	b9d8      	cbnz	r0, 12fe2 <f_getfree+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12faa:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   12fac:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   12fb0:	f104 0338 	add.w	r3, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   12fb4:	f1b9 0f02 	cmp.w	r9, #2
   12fb8:	d107      	bne.n	12fca <f_getfree+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   12fba:	8818      	ldrh	r0, [r3, #0]
   12fbc:	b900      	cbnz	r0, 12fc0 <f_getfree+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   12fbe:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   12fc0:	3302      	adds	r3, #2
   12fc2:	3a02      	subs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   12fc4:	3f01      	subs	r7, #1
   12fc6:	d1e9      	bne.n	12f9c <f_getfree+0x7e>
   12fc8:	e7dc      	b.n	12f84 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   12fca:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   12fcc:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   12fce:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   12fd2:	bf08      	it	eq
   12fd4:	3601      	addeq	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   12fd6:	3304      	adds	r3, #4
   12fd8:	e7f4      	b.n	12fc4 <f_getfree+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   12fda:	2501      	movs	r5, #1
   12fdc:	e7d2      	b.n	12f84 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   12fde:	2502      	movs	r5, #2
   12fe0:	e7d0      	b.n	12f84 <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   12fe2:	4605      	mov	r5, r0
   12fe4:	e7ce      	b.n	12f84 <f_getfree+0x66>
   12fe6:	Address 0x0000000000012fe6 is out of bounds.


00012fe8 <f_mkfs>:
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   12fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fec:	b089      	sub	sp, #36	; 0x24
   12fee:	ab08      	add	r3, sp, #32
   12ff0:	f843 0d0c 	str.w	r0, [r3, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   12ff4:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   12ff6:	460e      	mov	r6, r1
   12ff8:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   12ffa:	f7fe fd21 	bl	11a40 <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   12ffe:	2800      	cmp	r0, #0
   13000:	f2c0 81f7 	blt.w	133f2 <f_mkfs+0x40a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13004:	2e01      	cmp	r6, #1
   13006:	f200 81f6 	bhi.w	133f6 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   1300a:	1e6b      	subs	r3, r5, #1
   1300c:	402b      	ands	r3, r5
   1300e:	9302      	str	r3, [sp, #8]
   13010:	f040 81f1 	bne.w	133f6 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   13014:	4b50      	ldr	r3, [pc, #320]	; (13158 <f_mkfs+0x170>)
   13016:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   1301a:	2c00      	cmp	r4, #0
   1301c:	f000 81ed 	beq.w	133fa <f_mkfs+0x412>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   13020:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   13024:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   13026:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   13028:	4638      	mov	r0, r7
   1302a:	f000 fe41 	bl	13cb0 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   1302e:	07c2      	lsls	r2, r0, #31
   13030:	f100 81e5 	bmi.w	133fe <f_mkfs+0x416>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13034:	0743      	lsls	r3, r0, #29
   13036:	f100 81e4 	bmi.w	13402 <f_mkfs+0x41a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   1303a:	aa07      	add	r2, sp, #28
   1303c:	2101      	movs	r1, #1
   1303e:	4638      	mov	r0, r7
   13040:	f000 fe89 	bl	13d56 <disk_ioctl>
   13044:	b118      	cbz	r0, 1304e <f_mkfs+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   13046:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   13048:	b009      	add	sp, #36	; 0x24
   1304a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   1304e:	9907      	ldr	r1, [sp, #28]
   13050:	297f      	cmp	r1, #127	; 0x7f
   13052:	d9f8      	bls.n	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   13054:	2e00      	cmp	r6, #0
   13056:	bf14      	ite	ne
   13058:	f04f 0a00 	movne.w	sl, #0
   1305c:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   13060:	eba1 010a 	sub.w	r1, r1, sl
   13064:	9107      	str	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   13066:	b95d      	cbnz	r5, 13080 <f_mkfs+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   13068:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   1306c:	fbb1 f3f3 	udiv	r3, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   13070:	483a      	ldr	r0, [pc, #232]	; (1315c <f_mkfs+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   13072:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   13076:	4293      	cmp	r3, r2
   13078:	d318      	bcc.n	130ac <f_mkfs+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1307a:	4b39      	ldr	r3, [pc, #228]	; (13160 <f_mkfs+0x178>)
   1307c:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   13080:	0a6d      	lsrs	r5, r5, #9
   13082:	d015      	beq.n	130b0 <f_mkfs+0xc8>
   13084:	2d80      	cmp	r5, #128	; 0x80
   13086:	bf28      	it	cs
   13088:	2580      	movcs	r5, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   1308a:	fbb1 f3f5 	udiv	r3, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1308e:	f640 72f5 	movw	r2, #4085	; 0xff5
   13092:	4293      	cmp	r3, r2
   13094:	f240 81f8 	bls.w	13488 <f_mkfs+0x4a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13098:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   1309c:	4293      	cmp	r3, r2
   1309e:	f200 81b2 	bhi.w	13406 <f_mkfs+0x41e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   130a2:	3302      	adds	r3, #2
   130a4:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   130a6:	f04f 0802 	mov.w	r8, #2
   130aa:	e1f4      	b.n	13496 <f_mkfs+0x4ae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   130ac:	3501      	adds	r5, #1
   130ae:	e7e0      	b.n	13072 <f_mkfs+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   130b0:	2501      	movs	r5, #1
   130b2:	e7ea      	b.n	1308a <f_mkfs+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   130b4:	aa06      	add	r2, sp, #24
   130b6:	2103      	movs	r1, #3
   130b8:	4638      	mov	r0, r7
   130ba:	f000 fe4c 	bl	13d56 <disk_ioctl>
   130be:	b920      	cbnz	r0, 130ca <f_mkfs+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   130c0:	9b06      	ldr	r3, [sp, #24]
   130c2:	3b01      	subs	r3, #1
   130c4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   130c8:	d301      	bcc.n	130ce <f_mkfs+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   130ca:	2301      	movs	r3, #1
   130cc:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   130ce:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   130d0:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   130d4:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   130d8:	444b      	add	r3, r9
   130da:	f1c2 0200 	rsb	r2, r2, #0
   130de:	ea03 0302 	and.w	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   130e2:	eba3 0309 	sub.w	r3, r3, r9
   130e6:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   130e8:	d122      	bne.n	13130 <f_mkfs+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   130ea:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   130ec:	449b      	add	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   130ee:	441a      	add	r2, r3
   130f0:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   130f2:	9a07      	ldr	r2, [sp, #28]
   130f4:	9900      	ldr	r1, [sp, #0]
   130f6:	eba2 030b 	sub.w	r3, r2, fp
   130fa:	1a5b      	subs	r3, r3, r1
   130fc:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   130fe:	f1b8 0f02 	cmp.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   13102:	eba3 0301 	sub.w	r3, r3, r1
   13106:	fbb3 f3f5 	udiv	r3, r3, r5
   1310a:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   1310c:	d114      	bne.n	13138 <f_mkfs+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   1310e:	f640 73f5 	movw	r3, #4085	; 0xff5
   13112:	9904      	ldr	r1, [sp, #16]
   13114:	4299      	cmp	r1, r3
   13116:	f240 81d5 	bls.w	134c4 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1311a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   1311e:	bf34      	ite	cc
   13120:	f04f 0904 	movcc.w	r9, #4
   13124:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   13128:	b34e      	cbz	r6, 1317e <f_mkfs+0x196>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   1312a:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   1312e:	e05d      	b.n	131ec <f_mkfs+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   13130:	9a00      	ldr	r2, [sp, #0]
   13132:	441a      	add	r2, r3
   13134:	9200      	str	r2, [sp, #0]
   13136:	e7dc      	b.n	130f2 <f_mkfs+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   13138:	f1b8 0f03 	cmp.w	r8, #3
   1313c:	d112      	bne.n	13164 <f_mkfs+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   1313e:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   13142:	9a04      	ldr	r2, [sp, #16]
   13144:	429a      	cmp	r2, r3
   13146:	f240 81bd 	bls.w	134c4 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1314a:	2e00      	cmp	r6, #0
   1314c:	f040 8167 	bne.w	1341e <f_mkfs+0x436>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   13150:	f04f 090c 	mov.w	r9, #12
   13154:	e013      	b.n	1317e <f_mkfs+0x196>
   13156:	bf00      	nop
   13158:	2007c460 	.word	0x2007c460
   1315c:	0001f6f8 	.word	0x0001f6f8
   13160:	0001f69e 	.word	0x0001f69e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   13164:	f1b8 0f01 	cmp.w	r8, #1
   13168:	d1d7      	bne.n	1311a <f_mkfs+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1316a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   1316e:	bf34      	ite	cc
   13170:	f04f 0901 	movcc.w	r9, #1
   13174:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   13178:	2e00      	cmp	r6, #0
   1317a:	f040 816b 	bne.w	13454 <f_mkfs+0x46c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   1317e:	f104 0638 	add.w	r6, r4, #56	; 0x38
   13182:	f44f 7200 	mov.w	r2, #512	; 0x200
   13186:	2100      	movs	r1, #0
   13188:	4630      	mov	r0, r6
   1318a:	f7fe fc43 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   1318e:	21fe      	movs	r1, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   13190:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   13194:	f8dd e01c 	ldr.w	lr, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   13198:	f884 11fb 	strb.w	r1, [r4, #507]	; 0x1fb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1319c:	eb0a 010e 	add.w	r1, sl, lr
   131a0:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   131a4:	0888      	lsrs	r0, r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   131a6:	9106      	str	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   131a8:	f884 11fd 	strb.w	r1, [r4, #509]	; 0x1fd
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   131ac:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   131ae:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   131b0:	2200      	movs	r2, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   131b2:	f8c4 11fe 	str.w	r1, [r4, #510]	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   131b6:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   131ba:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   131be:	f884 01fc 	strb.w	r0, [r4, #508]	; 0x1fc
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   131c2:	f8a4 1236 	strh.w	r1, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   131c6:	f884 31f7 	strb.w	r3, [r4, #503]	; 0x1f7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   131ca:	f884 31f8 	strb.w	r3, [r4, #504]	; 0x1f8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   131ce:	f884 21f9 	strb.w	r2, [r4, #505]	; 0x1f9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   131d2:	f884 91fa 	strb.w	r9, [r4, #506]	; 0x1fa
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   131d6:	f8c4 e202 	str.w	lr, [r4, #514]	; 0x202
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   131da:	4631      	mov	r1, r6
   131dc:	4638      	mov	r0, r7
   131de:	f000 fd9e 	bl	13d1e <disk_write>
   131e2:	2800      	cmp	r0, #0
   131e4:	f47f af2f 	bne.w	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   131e8:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   131ec:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   131f0:	f44f 7200 	mov.w	r2, #512	; 0x200
   131f4:	2100      	movs	r1, #0
   131f6:	4630      	mov	r0, r6
   131f8:	f7fe fc0c 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   131fc:	220b      	movs	r2, #11
   131fe:	49b2      	ldr	r1, [pc, #712]	; (134c8 <f_mkfs+0x4e0>)
   13200:	4630      	mov	r0, r6
   13202:	f7fe fbeb 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13206:	f44f 7300 	mov.w	r3, #512	; 0x200
   1320a:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1320e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13210:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13214:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13218:	9b02      	ldr	r3, [sp, #8]
   1321a:	bf18      	it	ne
   1321c:	f44f 7300 	movne.w	r3, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13220:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13224:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13228:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   1322a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   1322e:	f884 904d 	strb.w	r9, [r4, #77]	; 0x4d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   13232:	f8a4 3049 	strh.w	r3, [r4, #73]	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   13236:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13238:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   1323c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   13240:	bf34      	ite	cc
   13242:	f8a4 304b 	strhcc.w	r3, [r4, #75]	; 0x4b
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   13246:	65a3      	strcs	r3, [r4, #88]	; 0x58
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13248:	233f      	movs	r3, #63	; 0x3f
   1324a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
   1324e:	23ff      	movs	r3, #255	; 0xff
   13250:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13254:	f000 fff4 	bl	14240 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   13258:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   1325c:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   1325e:	f040 809c 	bne.w	1339a <f_mkfs+0x3b2>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13262:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13264:	2213      	movs	r2, #19
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13266:	65e3      	str	r3, [r4, #92]	; 0x5c
   13268:	2302      	movs	r3, #2
   1326a:	6663      	str	r3, [r4, #100]	; 0x64
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1326c:	2301      	movs	r3, #1
   1326e:	f8a4 3068 	strh.w	r3, [r4, #104]	; 0x68
   13272:	2306      	movs	r3, #6
   13274:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   13278:	2380      	movs	r3, #128	; 0x80
   1327a:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1327e:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13280:	4992      	ldr	r1, [pc, #584]	; (134cc <f_mkfs+0x4e4>)
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13282:	f8c4 007b 	str.w	r0, [r4, #123]	; 0x7b
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13286:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   1328a:	f104 007f 	add.w	r0, r4, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   1328e:	f7fe fba5 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13292:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   13296:	4652      	mov	r2, sl
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13298:	f8a4 3236 	strh.w	r3, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   1329c:	4631      	mov	r1, r6
   1329e:	2301      	movs	r3, #1
   132a0:	4638      	mov	r0, r7
   132a2:	f000 fd3c 	bl	13d1e <disk_write>
   132a6:	2800      	cmp	r0, #0
   132a8:	f47f aecd 	bne.w	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   132ac:	f1b8 0f03 	cmp.w	r8, #3
   132b0:	d106      	bne.n	132c0 <f_mkfs+0x2d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   132b2:	2301      	movs	r3, #1
   132b4:	f10a 0206 	add.w	r2, sl, #6
   132b8:	4631      	mov	r1, r6
   132ba:	4638      	mov	r0, r7
   132bc:	f000 fd2f 	bl	13d1e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   132c0:	f44f 7200 	mov.w	r2, #512	; 0x200
   132c4:	2100      	movs	r1, #0
   132c6:	4630      	mov	r0, r6
   132c8:	f7fe fba4 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   132cc:	f1b8 0f03 	cmp.w	r8, #3
   132d0:	d074      	beq.n	133bc <f_mkfs+0x3d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   132d2:	f1b8 0f01 	cmp.w	r8, #1
   132d6:	4b7e      	ldr	r3, [pc, #504]	; (134d0 <f_mkfs+0x4e8>)
   132d8:	bf18      	it	ne
   132da:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   132de:	ea43 0309 	orr.w	r3, r3, r9
   132e2:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   132e4:	63a3      	str	r3, [r4, #56]	; 0x38
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   132e6:	9b01      	ldr	r3, [sp, #4]
   132e8:	4631      	mov	r1, r6
   132ea:	f103 0901 	add.w	r9, r3, #1
   132ee:	9a01      	ldr	r2, [sp, #4]
   132f0:	2301      	movs	r3, #1
   132f2:	4638      	mov	r0, r7
   132f4:	f000 fd13 	bl	13d1e <disk_write>
   132f8:	4601      	mov	r1, r0
   132fa:	2800      	cmp	r0, #0
   132fc:	f47f aea3 	bne.w	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   13300:	f44f 7200 	mov.w	r2, #512	; 0x200
   13304:	4630      	mov	r0, r6
   13306:	f7fe fb85 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   1330a:	2301      	movs	r3, #1
   1330c:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   1330e:	9b06      	ldr	r3, [sp, #24]
   13310:	9a00      	ldr	r2, [sp, #0]
   13312:	429a      	cmp	r2, r3
   13314:	d85d      	bhi.n	133d2 <f_mkfs+0x3ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   13316:	9b03      	ldr	r3, [sp, #12]
   13318:	464a      	mov	r2, r9
   1331a:	f1b8 0f03 	cmp.w	r8, #3
   1331e:	bf18      	it	ne
   13320:	461d      	movne	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   13322:	444d      	add	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   13324:	2301      	movs	r3, #1
   13326:	4631      	mov	r1, r6
   13328:	4638      	mov	r0, r7
   1332a:	f102 0b01 	add.w	fp, r2, #1
   1332e:	f000 fcf6 	bl	13d1e <disk_write>
   13332:	2800      	cmp	r0, #0
   13334:	f47f ae87 	bne.w	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   13338:	45ab      	cmp	fp, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   1333a:	465a      	mov	r2, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   1333c:	d1f2      	bne.n	13324 <f_mkfs+0x33c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   1333e:	f1b8 0f03 	cmp.w	r8, #3
   13342:	d121      	bne.n	13388 <f_mkfs+0x3a0>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13344:	4b63      	ldr	r3, [pc, #396]	; (134d4 <f_mkfs+0x4ec>)
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13346:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13348:	63a3      	str	r3, [r4, #56]	; 0x38
   1334a:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   1334e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   13352:	3320      	adds	r3, #32
   13354:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13358:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   1335a:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   1335c:	3b01      	subs	r3, #1
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   1335e:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   13362:	2302      	movs	r3, #2
   13364:	f8c4 3224 	str.w	r3, [r4, #548]	; 0x224
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13368:	f64a 2355 	movw	r3, #43605	; 0xaa55
   1336c:	f8a4 3236 	strh.w	r3, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13370:	2301      	movs	r3, #1
   13372:	eb0a 0203 	add.w	r2, sl, r3
   13376:	f000 fcd2 	bl	13d1e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   1337a:	2301      	movs	r3, #1
   1337c:	f10a 0207 	add.w	r2, sl, #7
   13380:	4631      	mov	r1, r6
   13382:	4638      	mov	r0, r7
   13384:	f000 fccb 	bl	13d1e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   13388:	2200      	movs	r2, #0
   1338a:	4638      	mov	r0, r7
   1338c:	4611      	mov	r1, r2
   1338e:	f000 fce2 	bl	13d56 <disk_ioctl>
   13392:	3000      	adds	r0, #0
   13394:	bf18      	it	ne
   13396:	2001      	movne	r0, #1
   13398:	e656      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   1339a:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1339e:	f8c4 005f 	str.w	r0, [r4, #95]	; 0x5f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   133a2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   133a6:	2380      	movs	r3, #128	; 0x80
   133a8:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   133ac:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   133ae:	2213      	movs	r2, #19
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   133b0:	f884 305e 	strb.w	r3, [r4, #94]	; 0x5e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   133b4:	4948      	ldr	r1, [pc, #288]	; (134d8 <f_mkfs+0x4f0>)
   133b6:	f104 0063 	add.w	r0, r4, #99	; 0x63
   133ba:	e768      	b.n	1328e <f_mkfs+0x2a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   133bc:	f069 03ff 	orn	r3, r9, #255	; 0xff
   133c0:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   133c2:	63a3      	str	r3, [r4, #56]	; 0x38
   133c4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   133c8:	63e3      	str	r3, [r4, #60]	; 0x3c
   133ca:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   133ce:	6423      	str	r3, [r4, #64]	; 0x40
   133d0:	e789      	b.n	132e6 <f_mkfs+0x2fe>
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   133d2:	2301      	movs	r3, #1
   133d4:	464a      	mov	r2, r9
   133d6:	4631      	mov	r1, r6
   133d8:	4638      	mov	r0, r7
   133da:	f109 0b01 	add.w	fp, r9, #1
   133de:	f000 fc9e 	bl	13d1e <disk_write>
   133e2:	2800      	cmp	r0, #0
   133e4:	f47f ae2f 	bne.w	13046 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   133e8:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   133ea:	46d9      	mov	r9, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   133ec:	3301      	adds	r3, #1
   133ee:	9306      	str	r3, [sp, #24]
   133f0:	e78d      	b.n	1330e <f_mkfs+0x326>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   133f2:	200b      	movs	r0, #11
   133f4:	e628      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   133f6:	2013      	movs	r0, #19
   133f8:	e626      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   133fa:	200c      	movs	r0, #12
   133fc:	e624      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   133fe:	2003      	movs	r0, #3
   13400:	e622      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13402:	200a      	movs	r0, #10
   13404:	e620      	b.n	13048 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   13406:	009b      	lsls	r3, r3, #2
   13408:	f203 2307 	addw	r3, r3, #519	; 0x207
   1340c:	0a5b      	lsrs	r3, r3, #9
   1340e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13410:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13412:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13416:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   13418:	f04f 0b20 	mov.w	fp, #32
   1341c:	e043      	b.n	134a6 <f_mkfs+0x4be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   1341e:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13422:	f44f 7200 	mov.w	r2, #512	; 0x200
   13426:	2100      	movs	r1, #0
   13428:	4630      	mov	r0, r6
   1342a:	f7fe faf3 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   1342e:	220b      	movs	r2, #11
   13430:	4925      	ldr	r1, [pc, #148]	; (134c8 <f_mkfs+0x4e0>)
   13432:	4630      	mov	r0, r6
   13434:	f7fe fad2 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13438:	f44f 7300 	mov.w	r3, #512	; 0x200
   1343c:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13440:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13442:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13446:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1344a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   1344e:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13452:	e6ea      	b.n	1322a <f_mkfs+0x242>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13454:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13458:	f44f 7200 	mov.w	r2, #512	; 0x200
   1345c:	2100      	movs	r1, #0
   1345e:	4630      	mov	r0, r6
   13460:	f7fe fad8 	bl	11a14 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13464:	220b      	movs	r2, #11
   13466:	4918      	ldr	r1, [pc, #96]	; (134c8 <f_mkfs+0x4e0>)
   13468:	4630      	mov	r0, r6
   1346a:	f7fe fab7 	bl	119dc <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1346e:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13472:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13476:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   1347a:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1347e:	f884 8048 	strb.w	r8, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13482:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13486:	e6cf      	b.n	13228 <f_mkfs+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   13488:	f04f 0801 	mov.w	r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   1348c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   13490:	3301      	adds	r3, #1
   13492:	085b      	lsrs	r3, r3, #1
   13494:	3303      	adds	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   13496:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   1349a:	0a5b      	lsrs	r3, r3, #9
   1349c:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   1349e:	2320      	movs	r3, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   134a0:	f04f 0b01 	mov.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   134a4:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   134a6:	eb0b 030a 	add.w	r3, fp, sl
   134aa:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   134ac:	9a03      	ldr	r2, [sp, #12]
   134ae:	9b00      	ldr	r3, [sp, #0]
   134b0:	eb03 0902 	add.w	r9, r3, r2
   134b4:	9b01      	ldr	r3, [sp, #4]
   134b6:	4499      	add	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   134b8:	eba5 030a 	sub.w	r3, r5, sl
   134bc:	444b      	add	r3, r9
   134be:	4299      	cmp	r1, r3
   134c0:	f4bf adf8 	bcs.w	130b4 <f_mkfs+0xcc>
   134c4:	200e      	movs	r0, #14
   134c6:	e5bf      	b.n	13048 <f_mkfs+0x60>
   134c8:	0001f6b4 	.word	0x0001f6b4
   134cc:	0001f6c0 	.word	0x0001f6c0
   134d0:	00ffff00 	.word	0x00ffff00
   134d4:	41615252 	.word	0x41615252
   134d8:	0001f6d4 	.word	0x0001f6d4

000134dc <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   134dc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   134de:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   134e0:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   134e2:	f002 ffe7 	bl	164b4 <xQueueCreateMutex>
   134e6:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   134e8:	3000      	adds	r0, #0
   134ea:	bf18      	it	ne
   134ec:	2001      	movne	r0, #1
   134ee:	bd10      	pop	{r4, pc}

000134f0 <ff_del_syncobj>:
ff_del_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   134f0:	2001      	movs	r0, #1
   134f2:	4770      	bx	lr

000134f4 <ff_req_grant>:
ff_req_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   134f4:	b510      	push	{r4, lr}
   134f6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   134f8:	f003 fc5a 	bl	16db0 <xTaskGetSchedulerState>
   134fc:	2802      	cmp	r0, #2
   134fe:	d10a      	bne.n	13516 <ff_req_grant+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   13500:	2300      	movs	r3, #0
   13502:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13506:	4619      	mov	r1, r3
   13508:	4620      	mov	r0, r4
   1350a:	f003 f859 	bl	165c0 <xQueueGenericReceive>
   1350e:	1e43      	subs	r3, r0, #1
   13510:	4258      	negs	r0, r3
   13512:	4158      	adcs	r0, r3
   13514:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   13516:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   13518:	bd10      	pop	{r4, pc}

0001351a <ff_rel_grant>:
ff_rel_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   1351a:	b510      	push	{r4, lr}
   1351c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   1351e:	f003 fc47 	bl	16db0 <xTaskGetSchedulerState>
   13522:	2802      	cmp	r0, #2
   13524:	d107      	bne.n	13536 <ff_rel_grant+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13526:	2300      	movs	r3, #0
   13528:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   1352a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   1352e:	461a      	mov	r2, r3
   13530:	4619      	mov	r1, r3
   13532:	f002 bf3d 	b.w	163b0 <xQueueGenericSend>
   13536:	bd10      	pop	{r4, pc}

00013538 <ff_convert>:
ff_convert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   13538:	287f      	cmp	r0, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   1353a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   1353c:	d916      	bls.n	1356c <ff_convert+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   1353e:	b131      	cbz	r1, 1354e <ff_convert+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13540:	28ff      	cmp	r0, #255	; 0xff
   13542:	d812      	bhi.n	1356a <ff_convert+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   13544:	4b0a      	ldr	r3, [pc, #40]	; (13570 <ff_convert+0x38>)
   13546:	3880      	subs	r0, #128	; 0x80
   13548:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   1354c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   1354e:	4a08      	ldr	r2, [pc, #32]	; (13570 <ff_convert+0x38>)
   13550:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   13554:	b28b      	uxth	r3, r1
   13556:	4284      	cmp	r4, r0
   13558:	d003      	beq.n	13562 <ff_convert+0x2a>
   1355a:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   1355c:	2980      	cmp	r1, #128	; 0x80
   1355e:	d1f7      	bne.n	13550 <ff_convert+0x18>
   13560:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   13562:	f103 0080 	add.w	r0, r3, #128	; 0x80
   13566:	b2c0      	uxtb	r0, r0
   13568:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   1356a:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   1356c:	bd10      	pop	{r4, pc}
   1356e:	bf00      	nop
   13570:	0001f70e 	.word	0x0001f70e

00013574 <ff_wtoupper>:
ff_wtoupper():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13574:	2300      	movs	r3, #0
   13576:	4906      	ldr	r1, [pc, #24]	; (13590 <ff_wtoupper+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   13578:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   1357c:	b122      	cbz	r2, 13588 <ff_wtoupper+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   1357e:	4282      	cmp	r2, r0
   13580:	d103      	bne.n	1358a <ff_wtoupper+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   13582:	4a04      	ldr	r2, [pc, #16]	; (13594 <ff_wtoupper+0x20>)
   13584:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   13588:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   1358a:	3301      	adds	r3, #1
   1358c:	e7f4      	b.n	13578 <ff_wtoupper+0x4>
   1358e:	bf00      	nop
   13590:	0001f80e 	.word	0x0001f80e
   13594:	0001f9ee 	.word	0x0001f9ee

00013598 <sys_get_uptime_ms>:
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   13598:	b508      	push	{r3, lr}
   1359a:	f7fc ff75 	bl	10488 <sys_get_uptime_us>
   1359e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   135a2:	2300      	movs	r3, #0
   135a4:	f005 f9e4 	bl	18970 <__aeabi_uldivmod>
   135a8:	bd08      	pop	{r3, pc}
   135aa:	Address 0x00000000000135aa is out of bounds.


000135ac <ssp1_set_max_clock>:
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   135ac:	b510      	push	{r4, lr}
   135ae:	4604      	mov	r4, r0
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   135b0:	f7fd f8f0 	bl	10794 <sys_get_cpu_clock>
   135b4:	4b07      	ldr	r3, [pc, #28]	; (135d4 <ssp1_set_max_clock+0x28>)
   135b6:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   135ba:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   135bc:	fbb0 f2f3 	udiv	r2, r0, r3
   135c0:	4294      	cmp	r4, r2
   135c2:	d302      	bcc.n	135ca <ssp1_set_max_clock+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   135c4:	4a04      	ldr	r2, [pc, #16]	; (135d8 <ssp1_set_max_clock+0x2c>)
   135c6:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   135c8:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   135ca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   135ce:	d0f9      	beq.n	135c4 <ssp1_set_max_clock+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   135d0:	3302      	adds	r3, #2
   135d2:	e7f3      	b.n	135bc <ssp1_set_max_clock+0x10>
   135d4:	000f4240 	.word	0x000f4240
   135d8:	40030000 	.word	0x40030000

000135dc <ssp1_exchange_byte>:
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   135dc:	4b03      	ldr	r3, [pc, #12]	; (135ec <ssp1_exchange_byte+0x10>)
   135de:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   135e0:	68da      	ldr	r2, [r3, #12]
   135e2:	06d2      	lsls	r2, r2, #27
   135e4:	d4fc      	bmi.n	135e0 <ssp1_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   135e6:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   135e8:	b2c0      	uxtb	r0, r0
   135ea:	4770      	bx	lr
   135ec:	40030000 	.word	0x40030000

000135f0 <wait_ready>:
wait_ready():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   135f0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   135f2:	f7ff ffd1 	bl	13598 <sys_get_uptime_ms>
   135f6:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   135fa:	20ff      	movs	r0, #255	; 0xff
   135fc:	f7ff ffee 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13600:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13602:	20ff      	movs	r0, #255	; 0xff
   13604:	f7ff ffea 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13608:	28ff      	cmp	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   1360a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   1360c:	d005      	beq.n	1361a <wait_ready+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   1360e:	f7ff ffc3 	bl	13598 <sys_get_uptime_ms>
   13612:	42a9      	cmp	r1, r5
   13614:	bf08      	it	eq
   13616:	42a0      	cmpeq	r0, r4
   13618:	d3f3      	bcc.n	13602 <wait_ready+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   1361a:	4630      	mov	r0, r6
   1361c:	bd70      	pop	{r4, r5, r6, pc}
   1361e:	Address 0x000000000001361e is out of bounds.


00013620 <power_off>:
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   13620:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13622:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   13626:	4c05      	ldr	r4, [pc, #20]	; (1363c <power_off+0x1c>)
   13628:	61e5      	str	r5, [r4, #28]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   1362a:	f7ff ffe1 	bl	135f0 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   1362e:	4a04      	ldr	r2, [pc, #16]	; (13640 <power_off+0x20>)
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13630:	61a5      	str	r5, [r4, #24]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   13632:	7813      	ldrb	r3, [r2, #0]
   13634:	f043 0301 	orr.w	r3, r3, #1
   13638:	7013      	strb	r3, [r2, #0]
   1363a:	bd38      	pop	{r3, r4, r5, pc}
   1363c:	2009c020 	.word	0x2009c020
   13640:	2007c095 	.word	0x2007c095

00013644 <rcvr_datablock>:
rcvr_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   13644:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   13648:	4606      	mov	r6, r0
   1364a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   1364c:	f7ff ffa4 	bl	13598 <sys_get_uptime_ms>
   13650:	3064      	adds	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13652:	4680      	mov	r8, r0
   13654:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   13658:	20ff      	movs	r0, #255	; 0xff
   1365a:	f7ff ffbf 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   1365e:	28ff      	cmp	r0, #255	; 0xff
   13660:	d108      	bne.n	13674 <rcvr_datablock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   13662:	f7ff ff99 	bl	13598 <sys_get_uptime_ms>
   13666:	4549      	cmp	r1, r9
   13668:	bf08      	it	eq
   1366a:	4540      	cmpeq	r0, r8
   1366c:	d3f4      	bcc.n	13658 <rcvr_datablock+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   1366e:	2000      	movs	r0, #0
   13670:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   13674:	28fe      	cmp	r0, #254	; 0xfe
   13676:	d1fa      	bne.n	1366e <rcvr_datablock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13678:	2d10      	cmp	r5, #16
   1367a:	d90e      	bls.n	1369a <rcvr_datablock+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   1367c:	2200      	movs	r2, #0
   1367e:	f44f 7100 	mov.w	r1, #512	; 0x200
   13682:	4630      	mov	r0, r6
   13684:	f002 fade 	bl	15c44 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   13688:	20ff      	movs	r0, #255	; 0xff
   1368a:	f7ff ffa7 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   1368e:	20ff      	movs	r0, #255	; 0xff
   13690:	f7ff ffa4 	bl	135dc <ssp1_exchange_byte>
   13694:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   13696:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   1369a:	1d34      	adds	r4, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   1369c:	3504      	adds	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   1369e:	20ff      	movs	r0, #255	; 0xff
   136a0:	f7ff ff9c 	bl	135dc <ssp1_exchange_byte>
   136a4:	f804 0c04 	strb.w	r0, [r4, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   136a8:	20ff      	movs	r0, #255	; 0xff
   136aa:	f7ff ff97 	bl	135dc <ssp1_exchange_byte>
   136ae:	f804 0c03 	strb.w	r0, [r4, #-3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   136b2:	20ff      	movs	r0, #255	; 0xff
   136b4:	f7ff ff92 	bl	135dc <ssp1_exchange_byte>
   136b8:	f804 0c02 	strb.w	r0, [r4, #-2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   136bc:	20ff      	movs	r0, #255	; 0xff
   136be:	f7ff ff8d 	bl	135dc <ssp1_exchange_byte>
   136c2:	3404      	adds	r4, #4
   136c4:	f804 0c05 	strb.w	r0, [r4, #-5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   136c8:	1b2b      	subs	r3, r5, r4
   136ca:	42de      	cmn	r6, r3
   136cc:	d1e7      	bne.n	1369e <rcvr_datablock+0x5a>
   136ce:	e7db      	b.n	13688 <rcvr_datablock+0x44>

000136d0 <xmit_datablock>:
xmit_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   136d0:	b570      	push	{r4, r5, r6, lr}
   136d2:	4606      	mov	r6, r0
   136d4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   136d6:	f7ff ff8b 	bl	135f0 <wait_ready>
   136da:	28ff      	cmp	r0, #255	; 0xff
   136dc:	4604      	mov	r4, r0
   136de:	d119      	bne.n	13714 <xmit_datablock+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   136e0:	4628      	mov	r0, r5
   136e2:	f7ff ff7b 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   136e6:	2dfd      	cmp	r5, #253	; 0xfd
   136e8:	d016      	beq.n	13718 <xmit_datablock+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   136ea:	4622      	mov	r2, r4
   136ec:	f44f 7100 	mov.w	r1, #512	; 0x200
   136f0:	4630      	mov	r0, r6
   136f2:	f002 faa7 	bl	15c44 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   136f6:	4620      	mov	r0, r4
   136f8:	f7ff ff70 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   136fc:	4620      	mov	r0, r4
   136fe:	f7ff ff6d 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   13702:	4620      	mov	r0, r4
   13704:	f7ff ff6a 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13708:	f000 001f 	and.w	r0, r0, #31
   1370c:	1f43      	subs	r3, r0, #5
   1370e:	4258      	negs	r0, r3
   13710:	4158      	adcs	r0, r3
   13712:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   13714:	2000      	movs	r0, #0
   13716:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   13718:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   1371a:	bd70      	pop	{r4, r5, r6, pc}

0001371c <send_cmd>:
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   1371c:	0602      	lsls	r2, r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   1371e:	b538      	push	{r3, r4, r5, lr}
   13720:	4604      	mov	r4, r0
   13722:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   13724:	d507      	bpl.n	13736 <send_cmd+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   13726:	2100      	movs	r1, #0
   13728:	2077      	movs	r0, #119	; 0x77
   1372a:	f7ff fff7 	bl	1371c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   1372e:	2801      	cmp	r0, #1
   13730:	d836      	bhi.n	137a0 <send_cmd+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   13732:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13736:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1373a:	4b1a      	ldr	r3, [pc, #104]	; (137a4 <send_cmd+0x88>)
   1373c:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1373e:	61da      	str	r2, [r3, #28]
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   13740:	f7ff ff56 	bl	135f0 <wait_ready>
   13744:	28ff      	cmp	r0, #255	; 0xff
   13746:	d12a      	bne.n	1379e <send_cmd+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   13748:	4620      	mov	r0, r4
   1374a:	f7ff ff47 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   1374e:	0e28      	lsrs	r0, r5, #24
   13750:	f7ff ff44 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   13754:	f3c5 4007 	ubfx	r0, r5, #16, #8
   13758:	f7ff ff40 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   1375c:	f3c5 2007 	ubfx	r0, r5, #8, #8
   13760:	f7ff ff3c 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   13764:	b2e8      	uxtb	r0, r5
   13766:	f7ff ff39 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   1376a:	2c40      	cmp	r4, #64	; 0x40
   1376c:	d015      	beq.n	1379a <send_cmd+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   1376e:	2c48      	cmp	r4, #72	; 0x48
   13770:	bf14      	ite	ne
   13772:	2001      	movne	r0, #1
   13774:	2087      	moveq	r0, #135	; 0x87
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   13776:	f7ff ff31 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   1377a:	2c4c      	cmp	r4, #76	; 0x4c
   1377c:	d102      	bne.n	13784 <send_cmd+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   1377e:	20ff      	movs	r0, #255	; 0xff
   13780:	f7ff ff2c 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   13784:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   13786:	20ff      	movs	r0, #255	; 0xff
   13788:	f7ff ff28 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   1378c:	0603      	lsls	r3, r0, #24
   1378e:	d507      	bpl.n	137a0 <send_cmd+0x84>
   13790:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   13792:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   13796:	d1f6      	bne.n	13786 <send_cmd+0x6a>
   13798:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   1379a:	2095      	movs	r0, #149	; 0x95
   1379c:	e7eb      	b.n	13776 <send_cmd+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   1379e:	20ff      	movs	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   137a0:	bd38      	pop	{r3, r4, r5, pc}
   137a2:	bf00      	nop
   137a4:	2009c020 	.word	0x2009c020

000137a8 <sd_update_card_status>:
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   137a8:	4a06      	ldr	r2, [pc, #24]	; (137c4 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   137aa:	4907      	ldr	r1, [pc, #28]	; (137c8 <sd_update_card_status+0x20>)
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   137ac:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   137ae:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   137b0:	b2db      	uxtb	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   137b2:	0149      	lsls	r1, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   137b4:	bf54      	ite	pl
   137b6:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   137ba:	f043 0303 	orrmi.w	r3, r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   137be:	7013      	strb	r3, [r2, #0]
   137c0:	4770      	bx	lr
   137c2:	bf00      	nop
   137c4:	2007c095 	.word	0x2007c095
   137c8:	2009c020 	.word	0x2009c020

000137cc <sd_initialize>:
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   137cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   137d0:	f7ff ffea 	bl	137a8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   137d4:	4b55      	ldr	r3, [pc, #340]	; (1392c <sd_initialize+0x160>)
   137d6:	781a      	ldrb	r2, [r3, #0]
   137d8:	461e      	mov	r6, r3
   137da:	f012 0f02 	tst.w	r2, #2
   137de:	d004      	beq.n	137ea <sd_initialize+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   137e0:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   137e2:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   137e4:	b003      	add	sp, #12
   137e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   137ea:	2001      	movs	r0, #1
   137ec:	f7ff fede 	bl	135ac <ssp1_set_max_clock>
   137f0:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   137f2:	20ff      	movs	r0, #255	; 0xff
   137f4:	3c01      	subs	r4, #1
   137f6:	f7ff fef1 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   137fa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   137fe:	d1f8      	bne.n	137f2 <sd_initialize+0x26>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13800:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13804:	4f4a      	ldr	r7, [pc, #296]	; (13930 <sd_initialize+0x164>)
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   13806:	4621      	mov	r1, r4
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   13808:	61fb      	str	r3, [r7, #28]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   1380a:	2040      	movs	r0, #64	; 0x40
   1380c:	f7ff ff86 	bl	1371c <send_cmd>
   13810:	2801      	cmp	r0, #1
   13812:	4680      	mov	r8, r0
   13814:	d013      	beq.n	1383e <sd_initialize+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   13816:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   1381a:	4b46      	ldr	r3, [pc, #280]	; (13934 <sd_initialize+0x168>)
   1381c:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13820:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   13824:	61bb      	str	r3, [r7, #24]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   13826:	f1b8 0f00 	cmp.w	r8, #0
   1382a:	d07b      	beq.n	13924 <sd_initialize+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   1382c:	7833      	ldrb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   1382e:	2018      	movs	r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13830:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   13834:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13836:	f7ff feb9 	bl	135ac <ssp1_set_max_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   1383a:	7830      	ldrb	r0, [r6, #0]
   1383c:	e7d1      	b.n	137e2 <sd_initialize+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   1383e:	f7ff feab 	bl	13598 <sys_get_uptime_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13842:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13846:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   1384a:	2048      	movs	r0, #72	; 0x48
   1384c:	f7ff ff66 	bl	1371c <send_cmd>
   13850:	2801      	cmp	r0, #1
   13852:	d140      	bne.n	138d6 <sd_initialize+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   13854:	f10d 0804 	add.w	r8, sp, #4
   13858:	20ff      	movs	r0, #255	; 0xff
   1385a:	f7ff febf 	bl	135dc <ssp1_exchange_byte>
   1385e:	f808 0004 	strb.w	r0, [r8, r4]
   13862:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   13864:	2c04      	cmp	r4, #4
   13866:	d1f7      	bne.n	13858 <sd_initialize+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   13868:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1386c:	2b01      	cmp	r3, #1
   1386e:	d1d2      	bne.n	13816 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   13870:	f89d 3007 	ldrb.w	r3, [sp, #7]
   13874:	2baa      	cmp	r3, #170	; 0xaa
   13876:	d1ce      	bne.n	13816 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   13878:	462c      	mov	r4, r5
   1387a:	2500      	movs	r5, #0
   1387c:	f7ff fe8c 	bl	13598 <sys_get_uptime_ms>
   13880:	42a9      	cmp	r1, r5
   13882:	bf08      	it	eq
   13884:	42a0      	cmpeq	r0, r4
   13886:	d31e      	bcc.n	138c6 <sd_initialize+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   13888:	f7ff fe86 	bl	13598 <sys_get_uptime_ms>
   1388c:	42a9      	cmp	r1, r5
   1388e:	bf08      	it	eq
   13890:	42a0      	cmpeq	r0, r4
   13892:	d2c0      	bcs.n	13816 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   13894:	2100      	movs	r1, #0
   13896:	207a      	movs	r0, #122	; 0x7a
   13898:	f7ff ff40 	bl	1371c <send_cmd>
   1389c:	2800      	cmp	r0, #0
   1389e:	d1ba      	bne.n	13816 <sd_initialize+0x4a>
   138a0:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   138a2:	20ff      	movs	r0, #255	; 0xff
   138a4:	f7ff fe9a 	bl	135dc <ssp1_exchange_byte>
   138a8:	f808 0001 	strb.w	r0, [r8, r1]
   138ac:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   138ae:	2904      	cmp	r1, #4
   138b0:	d1f7      	bne.n	138a2 <sd_initialize+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   138b2:	f89d 3004 	ldrb.w	r3, [sp, #4]
   138b6:	f013 0f40 	tst.w	r3, #64	; 0x40
   138ba:	bf14      	ite	ne
   138bc:	f04f 080c 	movne.w	r8, #12
   138c0:	f04f 0804 	moveq.w	r8, #4
   138c4:	e7a9      	b.n	1381a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   138c6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   138ca:	20e9      	movs	r0, #233	; 0xe9
   138cc:	f7ff ff26 	bl	1371c <send_cmd>
   138d0:	2800      	cmp	r0, #0
   138d2:	d1d3      	bne.n	1387c <sd_initialize+0xb0>
   138d4:	e7d8      	b.n	13888 <sd_initialize+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   138d6:	4621      	mov	r1, r4
   138d8:	20e9      	movs	r0, #233	; 0xe9
   138da:	f7ff ff1f 	bl	1371c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   138de:	2802      	cmp	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   138e0:	462c      	mov	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   138e2:	bf36      	itet	cc
   138e4:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   138e8:	f04f 0941 	movcs.w	r9, #65	; 0x41
   138ec:	f04f 0802 	movcc.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   138f0:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   138f2:	f7ff fe51 	bl	13598 <sys_get_uptime_ms>
   138f6:	42a9      	cmp	r1, r5
   138f8:	bf08      	it	eq
   138fa:	42a0      	cmpeq	r0, r4
   138fc:	d30b      	bcc.n	13916 <sd_initialize+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   138fe:	f7ff fe4b 	bl	13598 <sys_get_uptime_ms>
   13902:	42a9      	cmp	r1, r5
   13904:	bf08      	it	eq
   13906:	42a0      	cmpeq	r0, r4
   13908:	d387      	bcc.n	1381a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   1390a:	f44f 7100 	mov.w	r1, #512	; 0x200
   1390e:	2050      	movs	r0, #80	; 0x50
   13910:	f7ff ff04 	bl	1371c <send_cmd>
   13914:	e781      	b.n	1381a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13916:	2100      	movs	r1, #0
   13918:	4648      	mov	r0, r9
   1391a:	f7ff feff 	bl	1371c <send_cmd>
   1391e:	2800      	cmp	r0, #0
   13920:	d1e7      	bne.n	138f2 <sd_initialize+0x126>
   13922:	e7ec      	b.n	138fe <sd_initialize+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   13924:	f7ff fe7c 	bl	13620 <power_off>
   13928:	e787      	b.n	1383a <sd_initialize+0x6e>
   1392a:	bf00      	nop
   1392c:	2007c095 	.word	0x2007c095
   13930:	2009c020 	.word	0x2009c020
   13934:	2007c46a 	.word	0x2007c46a

00013938 <sd_status>:
sd_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   13938:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   1393a:	f7ff ff35 	bl	137a8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   1393e:	4b01      	ldr	r3, [pc, #4]	; (13944 <sd_status+0xc>)
   13940:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   13942:	bd08      	pop	{r3, pc}
   13944:	2007c095 	.word	0x2007c095

00013948 <sd_read>:
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   13948:	b570      	push	{r4, r5, r6, lr}
   1394a:	4614      	mov	r4, r2
   1394c:	4606      	mov	r6, r0
   1394e:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   13950:	f7ff ff2a 	bl	137a8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   13954:	2c00      	cmp	r4, #0
   13956:	d038      	beq.n	139ca <sd_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   13958:	4b1e      	ldr	r3, [pc, #120]	; (139d4 <sd_read+0x8c>)
   1395a:	781b      	ldrb	r3, [r3, #0]
   1395c:	07da      	lsls	r2, r3, #31
   1395e:	d436      	bmi.n	139ce <sd_read+0x86>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13960:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13964:	4d1c      	ldr	r5, [pc, #112]	; (139d8 <sd_read+0x90>)
   13966:	61ea      	str	r2, [r5, #28]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   13968:	4a1c      	ldr	r2, [pc, #112]	; (139dc <sd_read+0x94>)
   1396a:	7812      	ldrb	r2, [r2, #0]
   1396c:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   1396e:	bf58      	it	pl
   13970:	0240      	lslpl	r0, r0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   13972:	2c01      	cmp	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13974:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   13976:	d112      	bne.n	1399e <sd_read+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13978:	2051      	movs	r0, #81	; 0x51
   1397a:	f7ff fecf 	bl	1371c <send_cmd>
   1397e:	b938      	cbnz	r0, 13990 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   13980:	f44f 7100 	mov.w	r1, #512	; 0x200
   13984:	4630      	mov	r0, r6
   13986:	f7ff fe5d 	bl	13644 <rcvr_datablock>
   1398a:	fab0 f480 	clz	r4, r0
   1398e:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13990:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   13994:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13996:	61ab      	str	r3, [r5, #24]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   13998:	bf18      	it	ne
   1399a:	2001      	movne	r0, #1
   1399c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   1399e:	2052      	movs	r0, #82	; 0x52
   139a0:	f7ff febc 	bl	1371c <send_cmd>
   139a4:	2800      	cmp	r0, #0
   139a6:	d1f3      	bne.n	13990 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   139a8:	f44f 7100 	mov.w	r1, #512	; 0x200
   139ac:	4630      	mov	r0, r6
   139ae:	f7ff fe49 	bl	13644 <rcvr_datablock>
   139b2:	b128      	cbz	r0, 139c0 <sd_read+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   139b4:	3c01      	subs	r4, #1
   139b6:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   139ba:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   139be:	d1f3      	bne.n	139a8 <sd_read+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   139c0:	2100      	movs	r1, #0
   139c2:	204c      	movs	r0, #76	; 0x4c
   139c4:	f7ff feaa 	bl	1371c <send_cmd>
   139c8:	e7e2      	b.n	13990 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   139ca:	2004      	movs	r0, #4
   139cc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   139ce:	2003      	movs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   139d0:	bd70      	pop	{r4, r5, r6, pc}
   139d2:	bf00      	nop
   139d4:	2007c095 	.word	0x2007c095
   139d8:	2009c020 	.word	0x2009c020
   139dc:	2007c46a 	.word	0x2007c46a

000139e0 <sd_write>:
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   139e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   139e2:	4614      	mov	r4, r2
   139e4:	4606      	mov	r6, r0
   139e6:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   139e8:	f7ff fede 	bl	137a8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   139ec:	2c00      	cmp	r4, #0
   139ee:	d044      	beq.n	13a7a <sd_write+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   139f0:	4b25      	ldr	r3, [pc, #148]	; (13a88 <sd_write+0xa8>)
   139f2:	781a      	ldrb	r2, [r3, #0]
   139f4:	07d1      	lsls	r1, r2, #31
   139f6:	d442      	bmi.n	13a7e <sd_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   139f8:	781b      	ldrb	r3, [r3, #0]
   139fa:	075a      	lsls	r2, r3, #29
   139fc:	d441      	bmi.n	13a82 <sd_write+0xa2>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   139fe:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13a02:	4d22      	ldr	r5, [pc, #136]	; (13a8c <sd_write+0xac>)
   13a04:	61ea      	str	r2, [r5, #28]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   13a06:	4a22      	ldr	r2, [pc, #136]	; (13a90 <sd_write+0xb0>)
   13a08:	7812      	ldrb	r2, [r2, #0]
   13a0a:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   13a0c:	bf58      	it	pl
   13a0e:	027f      	lslpl	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   13a10:	2c01      	cmp	r4, #1
   13a12:	d112      	bne.n	13a3a <sd_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   13a14:	4639      	mov	r1, r7
   13a16:	2058      	movs	r0, #88	; 0x58
   13a18:	f7ff fe80 	bl	1371c <send_cmd>
   13a1c:	bb58      	cbnz	r0, 13a76 <sd_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   13a1e:	21fe      	movs	r1, #254	; 0xfe
   13a20:	4630      	mov	r0, r6
   13a22:	f7ff fe55 	bl	136d0 <xmit_datablock>
   13a26:	fab0 f480 	clz	r4, r0
   13a2a:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13a2c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   13a30:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13a32:	61ab      	str	r3, [r5, #24]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   13a34:	bf18      	it	ne
   13a36:	2001      	movne	r0, #1
   13a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   13a3a:	f012 0f06 	tst.w	r2, #6
   13a3e:	d003      	beq.n	13a48 <sd_write+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   13a40:	4621      	mov	r1, r4
   13a42:	20d7      	movs	r0, #215	; 0xd7
   13a44:	f7ff fe6a 	bl	1371c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   13a48:	4639      	mov	r1, r7
   13a4a:	2059      	movs	r0, #89	; 0x59
   13a4c:	f7ff fe66 	bl	1371c <send_cmd>
   13a50:	2800      	cmp	r0, #0
   13a52:	d1eb      	bne.n	13a2c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   13a54:	21fc      	movs	r1, #252	; 0xfc
   13a56:	4630      	mov	r0, r6
   13a58:	f7ff fe3a 	bl	136d0 <xmit_datablock>
   13a5c:	b128      	cbz	r0, 13a6a <sd_write+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   13a5e:	3c01      	subs	r4, #1
   13a60:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   13a64:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   13a68:	d1f4      	bne.n	13a54 <sd_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   13a6a:	21fd      	movs	r1, #253	; 0xfd
   13a6c:	2000      	movs	r0, #0
   13a6e:	f7ff fe2f 	bl	136d0 <xmit_datablock>
   13a72:	2800      	cmp	r0, #0
   13a74:	d1da      	bne.n	13a2c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   13a76:	2401      	movs	r4, #1
   13a78:	e7d8      	b.n	13a2c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   13a7a:	2004      	movs	r0, #4
   13a7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   13a7e:	2003      	movs	r0, #3
   13a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   13a82:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   13a84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13a86:	bf00      	nop
   13a88:	2007c095 	.word	0x2007c095
   13a8c:	2009c020 	.word	0x2009c020
   13a90:	2007c46a 	.word	0x2007c46a

00013a94 <sd_ioctl>:
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   13a94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   13a96:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   13a98:	f7ff fe86 	bl	137a8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   13a9c:	2805      	cmp	r0, #5
   13a9e:	d11a      	bne.n	13ad6 <sd_ioctl+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   13aa0:	782b      	ldrb	r3, [r5, #0]
   13aa2:	2b01      	cmp	r3, #1
   13aa4:	d015      	beq.n	13ad2 <sd_ioctl+0x3e>
   13aa6:	d305      	bcc.n	13ab4 <sd_ioctl+0x20>
   13aa8:	2b02      	cmp	r3, #2
   13aaa:	d00b      	beq.n	13ac4 <sd_ioctl+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   13aac:	2404      	movs	r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   13aae:	4620      	mov	r0, r4
   13ab0:	b004      	add	sp, #16
   13ab2:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13ab4:	4b7b      	ldr	r3, [pc, #492]	; (13ca4 <sd_ioctl+0x210>)
   13ab6:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   13ab8:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   13abc:	d109      	bne.n	13ad2 <sd_ioctl+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   13abe:	f7ff fdaf 	bl	13620 <power_off>
   13ac2:	e7f4      	b.n	13aae <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13ac4:	4b77      	ldr	r3, [pc, #476]	; (13ca4 <sd_ioctl+0x210>)
   13ac6:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   13ac8:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   13acc:	f3c3 6380 	ubfx	r3, r3, #26, #1
   13ad0:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   13ad2:	2400      	movs	r4, #0
   13ad4:	e7eb      	b.n	13aae <sd_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   13ad6:	4b74      	ldr	r3, [pc, #464]	; (13ca8 <sd_ioctl+0x214>)
   13ad8:	781b      	ldrb	r3, [r3, #0]
   13ada:	07db      	lsls	r3, r3, #31
   13adc:	f100 80e0 	bmi.w	13ca0 <sd_ioctl+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   13ae0:	280e      	cmp	r0, #14
   13ae2:	f200 80db 	bhi.w	13c9c <sd_ioctl+0x208>
   13ae6:	e8df f000 	tbb	[pc, r0]
   13aea:	1708      	.short	0x1708
   13aec:	d9d95a55 	.word	0xd9d95a55
   13af0:	d9d9d9d9 	.word	0xd9d9d9d9
   13af4:	bdbaaba7 	.word	0xbdbaaba7
   13af8:	cd          	.byte	0xcd
   13af9:	00          	.byte	0x00
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13afa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13afe:	4b69      	ldr	r3, [pc, #420]	; (13ca4 <sd_ioctl+0x210>)
   13b00:	61da      	str	r2, [r3, #28]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   13b02:	f7ff fd75 	bl	135f0 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   13b06:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   13b0a:	bf18      	it	ne
   13b0c:	2401      	movne	r4, #1
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13b0e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13b12:	4b64      	ldr	r3, [pc, #400]	; (13ca4 <sd_ioctl+0x210>)
   13b14:	619a      	str	r2, [r3, #24]
   13b16:	e7ca      	b.n	13aae <sd_ioctl+0x1a>
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13b18:	2100      	movs	r1, #0
   13b1a:	2049      	movs	r0, #73	; 0x49
   13b1c:	f7ff fdfe 	bl	1371c <send_cmd>
   13b20:	4604      	mov	r4, r0
   13b22:	b108      	cbz	r0, 13b28 <sd_ioctl+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   13b24:	2401      	movs	r4, #1
   13b26:	e7f2      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13b28:	2110      	movs	r1, #16
   13b2a:	4668      	mov	r0, sp
   13b2c:	f7ff fd8a 	bl	13644 <rcvr_datablock>
   13b30:	2800      	cmp	r0, #0
   13b32:	d0f7      	beq.n	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   13b34:	f89d 3000 	ldrb.w	r3, [sp]
   13b38:	f89d 1008 	ldrb.w	r1, [sp, #8]
   13b3c:	099b      	lsrs	r3, r3, #6
   13b3e:	2b01      	cmp	r3, #1
   13b40:	f89d 3009 	ldrb.w	r3, [sp, #9]
   13b44:	d106      	bne.n	13b54 <sd_ioctl+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   13b46:	1c5a      	adds	r2, r3, #1
   13b48:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   13b4c:	b292      	uxth	r2, r2
   13b4e:	0292      	lsls	r2, r2, #10
   13b50:	602a      	str	r2, [r5, #0]
   13b52:	e7dc      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13b54:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b58:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13b5c:	0092      	lsls	r2, r2, #2
   13b5e:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13b62:	f89d 1006 	ldrb.w	r1, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13b66:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13b68:	0289      	lsls	r1, r1, #10
   13b6a:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13b6e:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b70:	f89d 1005 	ldrb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13b74:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b76:	f001 010f 	and.w	r1, r1, #15
   13b7a:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   13b7e:	3102      	adds	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13b80:	f003 0306 	and.w	r3, r3, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13b84:	440b      	add	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   13b86:	b2db      	uxtb	r3, r3
   13b88:	b292      	uxth	r2, r2
   13b8a:	3b09      	subs	r3, #9
   13b8c:	fa02 f303 	lsl.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13b90:	602b      	str	r3, [r5, #0]
   13b92:	e7bc      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   13b94:	f44f 7300 	mov.w	r3, #512	; 0x200
   13b98:	802b      	strh	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   13b9a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   13b9c:	e7b7      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   13b9e:	4e43      	ldr	r6, [pc, #268]	; (13cac <sd_ioctl+0x218>)
   13ba0:	7831      	ldrb	r1, [r6, #0]
   13ba2:	f011 0104 	ands.w	r1, r1, #4
   13ba6:	d01c      	beq.n	13be2 <sd_ioctl+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   13ba8:	2100      	movs	r1, #0
   13baa:	20cd      	movs	r0, #205	; 0xcd
   13bac:	f7ff fdb6 	bl	1371c <send_cmd>
   13bb0:	2800      	cmp	r0, #0
   13bb2:	d1b7      	bne.n	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   13bb4:	20ff      	movs	r0, #255	; 0xff
   13bb6:	f7ff fd11 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   13bba:	2110      	movs	r1, #16
   13bbc:	4668      	mov	r0, sp
   13bbe:	f7ff fd41 	bl	13644 <rcvr_datablock>
   13bc2:	2800      	cmp	r0, #0
   13bc4:	d0ae      	beq.n	13b24 <sd_ioctl+0x90>
   13bc6:	2430      	movs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   13bc8:	20ff      	movs	r0, #255	; 0xff
   13bca:	f7ff fd07 	bl	135dc <ssp1_exchange_byte>
   13bce:	1e60      	subs	r0, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   13bd0:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   13bd4:	d1f8      	bne.n	13bc8 <sd_ioctl+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   13bd6:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13bda:	091a      	lsrs	r2, r3, #4
   13bdc:	2310      	movs	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13bde:	4093      	lsls	r3, r2
   13be0:	e7d6      	b.n	13b90 <sd_ioctl+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13be2:	2049      	movs	r0, #73	; 0x49
   13be4:	f7ff fd9a 	bl	1371c <send_cmd>
   13be8:	4604      	mov	r4, r0
   13bea:	2800      	cmp	r0, #0
   13bec:	d19a      	bne.n	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   13bee:	2110      	movs	r1, #16
   13bf0:	4668      	mov	r0, sp
   13bf2:	f7ff fd27 	bl	13644 <rcvr_datablock>
   13bf6:	2800      	cmp	r0, #0
   13bf8:	d094      	beq.n	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   13bfa:	7830      	ldrb	r0, [r6, #0]
   13bfc:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13c00:	f010 0002 	ands.w	r0, r0, #2
   13c04:	f89d 100b 	ldrb.w	r1, [sp, #11]
   13c08:	d00a      	beq.n	13c20 <sd_ioctl+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13c0a:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13c0c:	f89d 200d 	ldrb.w	r2, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13c10:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   13c14:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13c18:	0992      	lsrs	r2, r2, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   13c1a:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13c1c:	3a01      	subs	r2, #1
   13c1e:	e7de      	b.n	13bde <sd_ioctl+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13c20:	00ca      	lsls	r2, r1, #3
   13c22:	f002 0218 	and.w	r2, r2, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13c26:	f3c3 0384 	ubfx	r3, r3, #2, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   13c2a:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13c2e:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13c30:	fb02 3303 	mla	r3, r2, r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13c34:	602b      	str	r3, [r5, #0]
   13c36:	e7b0      	b.n	13b9a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   13c38:	4b1c      	ldr	r3, [pc, #112]	; (13cac <sd_ioctl+0x218>)
   13c3a:	781b      	ldrb	r3, [r3, #0]
   13c3c:	702b      	strb	r3, [r5, #0]
   13c3e:	e7ac      	b.n	13b9a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   13c40:	2100      	movs	r1, #0
   13c42:	2049      	movs	r0, #73	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   13c44:	f7ff fd6a 	bl	1371c <send_cmd>
   13c48:	2800      	cmp	r0, #0
   13c4a:	f47f af6b 	bne.w	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   13c4e:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13c50:	4628      	mov	r0, r5
   13c52:	f7ff fcf7 	bl	13644 <rcvr_datablock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   13c56:	fab0 f480 	clz	r4, r0
   13c5a:	0964      	lsrs	r4, r4, #5
   13c5c:	e757      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   13c5e:	2100      	movs	r1, #0
   13c60:	204a      	movs	r0, #74	; 0x4a
   13c62:	e7ef      	b.n	13c44 <sd_ioctl+0x1b0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   13c64:	2100      	movs	r1, #0
   13c66:	207a      	movs	r0, #122	; 0x7a
   13c68:	f7ff fd58 	bl	1371c <send_cmd>
   13c6c:	2800      	cmp	r0, #0
   13c6e:	f47f af59 	bne.w	13b24 <sd_ioctl+0x90>
   13c72:	1d29      	adds	r1, r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   13c74:	20ff      	movs	r0, #255	; 0xff
   13c76:	f7ff fcb1 	bl	135dc <ssp1_exchange_byte>
   13c7a:	f805 0b01 	strb.w	r0, [r5], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   13c7e:	428d      	cmp	r5, r1
   13c80:	d1f8      	bne.n	13c74 <sd_ioctl+0x1e0>
   13c82:	e78a      	b.n	13b9a <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   13c84:	2100      	movs	r1, #0
   13c86:	20cd      	movs	r0, #205	; 0xcd
   13c88:	f7ff fd48 	bl	1371c <send_cmd>
   13c8c:	2800      	cmp	r0, #0
   13c8e:	f47f af49 	bne.w	13b24 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   13c92:	20ff      	movs	r0, #255	; 0xff
   13c94:	f7ff fca2 	bl	135dc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13c98:	2140      	movs	r1, #64	; 0x40
   13c9a:	e7d9      	b.n	13c50 <sd_ioctl+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   13c9c:	2404      	movs	r4, #4
   13c9e:	e736      	b.n	13b0e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   13ca0:	2403      	movs	r4, #3
   13ca2:	e704      	b.n	13aae <sd_ioctl+0x1a>
   13ca4:	2009c020 	.word	0x2009c020
   13ca8:	2007c095 	.word	0x2007c095
   13cac:	2007c46a 	.word	0x2007c46a

00013cb0 <disk_initialize>:
disk_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   13cb0:	b510      	push	{r4, lr}
   13cb2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13cb4:	f002 f826 	bl	15d04 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   13cb8:	b11c      	cbz	r4, 13cc2 <disk_initialize+0x12>
   13cba:	2c01      	cmp	r4, #1
   13cbc:	d008      	beq.n	13cd0 <disk_initialize+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   13cbe:	2404      	movs	r4, #4
   13cc0:	e002      	b.n	13cc8 <disk_initialize+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   13cc2:	f000 f957 	bl	13f74 <flash_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   13cc6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   13cc8:	f002 f834 	bl	15d34 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   13ccc:	4620      	mov	r0, r4
   13cce:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   13cd0:	f7ff fd7c 	bl	137cc <sd_initialize>
   13cd4:	e7f7      	b.n	13cc6 <disk_initialize+0x16>

00013cd6 <disk_status>:
disk_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   13cd6:	b128      	cbz	r0, 13ce4 <disk_status+0xe>
   13cd8:	2801      	cmp	r0, #1
   13cda:	d001      	beq.n	13ce0 <disk_status+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   13cdc:	2004      	movs	r0, #4
   13cde:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   13ce0:	f7ff be2a 	b.w	13938 <sd_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   13ce4:	4770      	bx	lr

00013ce6 <disk_read>:
disk_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   13ce6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13ce8:	4607      	mov	r7, r0
   13cea:	460c      	mov	r4, r1
   13cec:	4615      	mov	r5, r2
   13cee:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13cf0:	f002 f808 	bl	15d04 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   13cf4:	b11f      	cbz	r7, 13cfe <disk_read+0x18>
   13cf6:	2f01      	cmp	r7, #1
   13cf8:	d00b      	beq.n	13d12 <disk_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   13cfa:	2404      	movs	r4, #4
   13cfc:	e005      	b.n	13d0a <disk_read+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   13cfe:	4632      	mov	r2, r6
   13d00:	4629      	mov	r1, r5
   13d02:	4620      	mov	r0, r4
   13d04:	f000 f982 	bl	1400c <flash_read_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   13d08:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   13d0a:	f002 f813 	bl	15d34 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   13d0e:	4620      	mov	r0, r4
   13d10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   13d12:	4632      	mov	r2, r6
   13d14:	4629      	mov	r1, r5
   13d16:	4620      	mov	r0, r4
   13d18:	f7ff fe16 	bl	13948 <sd_read>
   13d1c:	e7f4      	b.n	13d08 <disk_read+0x22>

00013d1e <disk_write>:
disk_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   13d1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13d20:	4607      	mov	r7, r0
   13d22:	460c      	mov	r4, r1
   13d24:	4615      	mov	r5, r2
   13d26:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13d28:	f001 ffec 	bl	15d04 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   13d2c:	b11f      	cbz	r7, 13d36 <disk_write+0x18>
   13d2e:	2f01      	cmp	r7, #1
   13d30:	d00b      	beq.n	13d4a <disk_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   13d32:	2404      	movs	r4, #4
   13d34:	e005      	b.n	13d42 <disk_write+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   13d36:	4632      	mov	r2, r6
   13d38:	4629      	mov	r1, r5
   13d3a:	4620      	mov	r0, r4
   13d3c:	f000 f98e 	bl	1405c <flash_write_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   13d40:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   13d42:	f001 fff7 	bl	15d34 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   13d46:	4620      	mov	r0, r4
   13d48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   13d4a:	4632      	mov	r2, r6
   13d4c:	4629      	mov	r1, r5
   13d4e:	4620      	mov	r0, r4
   13d50:	f7ff fe46 	bl	139e0 <sd_write>
   13d54:	e7f4      	b.n	13d40 <disk_write+0x22>

00013d56 <disk_ioctl>:
disk_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   13d56:	b570      	push	{r4, r5, r6, lr}
   13d58:	4606      	mov	r6, r0
   13d5a:	460c      	mov	r4, r1
   13d5c:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   13d5e:	f001 ffd1 	bl	15d04 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   13d62:	b11e      	cbz	r6, 13d6c <disk_ioctl+0x16>
   13d64:	2e01      	cmp	r6, #1
   13d66:	d00a      	beq.n	13d7e <disk_ioctl+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   13d68:	2404      	movs	r4, #4
   13d6a:	e004      	b.n	13d76 <disk_ioctl+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   13d6c:	4629      	mov	r1, r5
   13d6e:	4620      	mov	r0, r4
   13d70:	f000 f99a 	bl	140a8 <flash_ioctl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   13d74:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   13d76:	f001 ffdd 	bl	15d34 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   13d7a:	4620      	mov	r0, r4
   13d7c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   13d7e:	4629      	mov	r1, r5
   13d80:	4620      	mov	r0, r4
   13d82:	f7ff fe87 	bl	13a94 <sd_ioctl>
   13d86:	e7f5      	b.n	13d74 <disk_ioctl+0x1e>

00013d88 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   13d88:	4b05      	ldr	r3, [pc, #20]	; (13da0 <flash_get_mem_size_bytes()+0x18>)
   13d8a:	781b      	ldrb	r3, [r3, #0]
   13d8c:	3b25      	subs	r3, #37	; 0x25
   13d8e:	b2db      	uxtb	r3, r3
   13d90:	2b03      	cmp	r3, #3
   13d92:	bf9a      	itte	ls
   13d94:	4a03      	ldrls	r2, [pc, #12]	; (13da4 <flash_get_mem_size_bytes()+0x1c>)
   13d96:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   13d9a:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   13d9c:	4770      	bx	lr
   13d9e:	bf00      	nop
   13da0:	2007c470 	.word	0x2007c470
   13da4:	0001fbd8 	.word	0x0001fbd8

00013da8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13da8:	4b1b      	ldr	r3, [pc, #108]	; (13e18 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13daa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13dae:	881d      	ldrh	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13db0:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13db2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   13db6:	460f      	mov	r7, r1
   13db8:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   13dba:	d103      	bne.n	13dc4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   13dbc:	462a      	mov	r2, r5
   13dbe:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   13dc0:	4638      	mov	r0, r7
   13dc2:	e00b      	b.n	13ddc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   13dc4:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   13dc8:	d10c      	bne.n	13de4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   13dca:	462a      	mov	r2, r5
   13dcc:	4621      	mov	r1, r4
   13dce:	4638      	mov	r0, r7
   13dd0:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   13dd2:	462a      	mov	r2, r5
   13dd4:	f504 7180 	add.w	r1, r4, #256	; 0x100
   13dd8:	f507 7080 	add.w	r0, r7, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   13ddc:	4633      	mov	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   13dde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13de2:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   13de4:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   13de8:	d104      	bne.n	13df4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   13dea:	0a51      	lsrs	r1, r2, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   13dec:	0289      	lsls	r1, r1, #10
   13dee:	f44f 7200 	mov.w	r2, #512	; 0x200
   13df2:	e7e5      	b.n	13dc0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   13df4:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   13df8:	d10b      	bne.n	13e12 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   13dfa:	0a14      	lsrs	r4, r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   13dfc:	0261      	lsls	r1, r4, #9
   13dfe:	f44f 7280 	mov.w	r2, #256	; 0x100
   13e02:	4638      	mov	r0, r7
   13e04:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13e06:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   13e0a:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13e0c:	0261      	lsls	r1, r4, #9
   13e0e:	18b8      	adds	r0, r7, r2
   13e10:	e7e4      	b.n	13ddc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   13e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13e16:	bf00      	nop
   13e18:	2007c472 	.word	0x2007c472

00013e1c <ssp1_exchange_data>:
ssp1_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   13e1c:	b510      	push	{r4, lr}
   13e1e:	4b29      	ldr	r3, [pc, #164]	; (13ec4 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   13e20:	2900      	cmp	r1, #0
   13e22:	dd4d      	ble.n	13ec0 <ssp1_exchange_data+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   13e24:	2907      	cmp	r1, #7
   13e26:	7802      	ldrb	r2, [r0, #0]
   13e28:	dd29      	ble.n	13e7e <ssp1_exchange_data+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e2a:	609a      	str	r2, [r3, #8]
   13e2c:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   13e2e:	3908      	subs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e30:	609a      	str	r2, [r3, #8]
   13e32:	7882      	ldrb	r2, [r0, #2]
   13e34:	609a      	str	r2, [r3, #8]
   13e36:	78c2      	ldrb	r2, [r0, #3]
   13e38:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e3a:	7902      	ldrb	r2, [r0, #4]
   13e3c:	609a      	str	r2, [r3, #8]
   13e3e:	7942      	ldrb	r2, [r0, #5]
   13e40:	609a      	str	r2, [r3, #8]
   13e42:	7982      	ldrb	r2, [r0, #6]
   13e44:	609a      	str	r2, [r3, #8]
   13e46:	79c4      	ldrb	r4, [r0, #7]
   13e48:	f100 0208 	add.w	r2, r0, #8
   13e4c:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   13e4e:	699c      	ldr	r4, [r3, #24]
   13e50:	0764      	lsls	r4, r4, #29
   13e52:	d5fc      	bpl.n	13e4e <ssp1_exchange_data+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13e54:	689c      	ldr	r4, [r3, #8]
   13e56:	7004      	strb	r4, [r0, #0]
   13e58:	689c      	ldr	r4, [r3, #8]
   13e5a:	7044      	strb	r4, [r0, #1]
   13e5c:	689c      	ldr	r4, [r3, #8]
   13e5e:	7084      	strb	r4, [r0, #2]
   13e60:	689c      	ldr	r4, [r3, #8]
   13e62:	70c4      	strb	r4, [r0, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   13e64:	68dc      	ldr	r4, [r3, #12]
   13e66:	06e4      	lsls	r4, r4, #27
   13e68:	d4fc      	bmi.n	13e64 <ssp1_exchange_data+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13e6a:	689c      	ldr	r4, [r3, #8]
   13e6c:	7104      	strb	r4, [r0, #4]
   13e6e:	689c      	ldr	r4, [r3, #8]
   13e70:	7144      	strb	r4, [r0, #5]
   13e72:	689c      	ldr	r4, [r3, #8]
   13e74:	7184      	strb	r4, [r0, #6]
   13e76:	689c      	ldr	r4, [r3, #8]
   13e78:	71c4      	strb	r4, [r0, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e7a:	4610      	mov	r0, r2
   13e7c:	e7d0      	b.n	13e20 <ssp1_exchange_data+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   13e7e:	2903      	cmp	r1, #3
   13e80:	dd14      	ble.n	13eac <ssp1_exchange_data+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e82:	609a      	str	r2, [r3, #8]
   13e84:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   13e86:	3904      	subs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13e88:	609a      	str	r2, [r3, #8]
   13e8a:	7882      	ldrb	r2, [r0, #2]
   13e8c:	609a      	str	r2, [r3, #8]
   13e8e:	78c4      	ldrb	r4, [r0, #3]
   13e90:	1d02      	adds	r2, r0, #4
   13e92:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   13e94:	68dc      	ldr	r4, [r3, #12]
   13e96:	06e4      	lsls	r4, r4, #27
   13e98:	d4fc      	bmi.n	13e94 <ssp1_exchange_data+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13e9a:	689c      	ldr	r4, [r3, #8]
   13e9c:	7004      	strb	r4, [r0, #0]
   13e9e:	689c      	ldr	r4, [r3, #8]
   13ea0:	7044      	strb	r4, [r0, #1]
   13ea2:	689c      	ldr	r4, [r3, #8]
   13ea4:	7084      	strb	r4, [r0, #2]
   13ea6:	689c      	ldr	r4, [r3, #8]
   13ea8:	70c4      	strb	r4, [r0, #3]
   13eaa:	e7e6      	b.n	13e7a <ssp1_exchange_data+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   13eac:	1c44      	adds	r4, r0, #1
   13eae:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   13eb0:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   13eb2:	68da      	ldr	r2, [r3, #12]
   13eb4:	06d2      	lsls	r2, r2, #27
   13eb6:	d4fc      	bmi.n	13eb2 <ssp1_exchange_data+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   13eb8:	689a      	ldr	r2, [r3, #8]
   13eba:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   13ebc:	4620      	mov	r0, r4
   13ebe:	e7af      	b.n	13e20 <ssp1_exchange_data+0x4>
   13ec0:	bd10      	pop	{r4, pc}
   13ec2:	bf00      	nop
   13ec4:	40030000 	.word	0x40030000

00013ec8 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   13ec8:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13eca:	0c0b      	lsrs	r3, r1, #16
   13ecc:	f88d 3005 	strb.w	r3, [sp, #5]
   13ed0:	f88d 1007 	strb.w	r1, [sp, #7]
   13ed4:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13ed6:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13ed8:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13edc:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13ee0:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13ee4:	f7ff ff9a 	bl	13e1c <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   13ee8:	b003      	add	sp, #12
   13eea:	f85d fb04 	ldr.w	pc, [sp], #4
   13eee:	Address 0x0000000000013eee is out of bounds.


00013ef0 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13ef0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13ef2:	2303      	movs	r3, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13ef4:	2540      	movs	r5, #64	; 0x40
   13ef6:	4c0e      	ldr	r4, [pc, #56]	; (13f30 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13ef8:	4617      	mov	r7, r2
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13efa:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13efc:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   13f00:	0c0b      	lsrs	r3, r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13f02:	f88d 3005 	strb.w	r3, [sp, #5]
   13f06:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   13f0a:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f0c:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13f0e:	4606      	mov	r6, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f10:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13f14:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f18:	f7ff ff80 	bl	13e1c <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   13f1c:	2200      	movs	r2, #0
   13f1e:	4639      	mov	r1, r7
   13f20:	4630      	mov	r0, r6
   13f22:	f001 fe8f 	bl	15c44 <ssp1_dma_transfer_block>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13f26:	61a5      	str	r5, [r4, #24]
   13f28:	61a5      	str	r5, [r4, #24]
   13f2a:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   13f2c:	b003      	add	sp, #12
   13f2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13f30:	2009c000 	.word	0x2009c000

00013f34 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13f34:	2240      	movs	r2, #64	; 0x40
   13f36:	4b0d      	ldr	r3, [pc, #52]	; (13f6c <flash_wait_for_ready()+0x38>)
   13f38:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13f3a:	22d7      	movs	r2, #215	; 0xd7
   13f3c:	4b0c      	ldr	r3, [pc, #48]	; (13f70 <flash_wait_for_ready()+0x3c>)
   13f3e:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13f40:	68da      	ldr	r2, [r3, #12]
   13f42:	06d2      	lsls	r2, r2, #27
   13f44:	d4fc      	bmi.n	13f40 <flash_wait_for_ready()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13f46:	4a0a      	ldr	r2, [pc, #40]	; (13f70 <flash_wait_for_ready()+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13f48:	689b      	ldr	r3, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13f4a:	21ff      	movs	r1, #255	; 0xff
   13f4c:	4613      	mov	r3, r2
   13f4e:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13f50:	68d8      	ldr	r0, [r3, #12]
   13f52:	06c0      	lsls	r0, r0, #27
   13f54:	d4fc      	bmi.n	13f50 <flash_wait_for_ready()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13f56:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   13f58:	f010 0f80 	tst.w	r0, #128	; 0x80
   13f5c:	d0f7      	beq.n	13f4e <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13f5e:	2240      	movs	r2, #64	; 0x40
   13f60:	4b02      	ldr	r3, [pc, #8]	; (13f6c <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   13f62:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   13f64:	619a      	str	r2, [r3, #24]
   13f66:	619a      	str	r2, [r3, #24]
   13f68:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   13f6a:	4770      	bx	lr
   13f6c:	2009c000 	.word	0x2009c000
   13f70:	40030000 	.word	0x40030000

00013f74 <flash_initialize>:
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   13f74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   13f76:	f7ff ffdd 	bl	13f34 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   13f7a:	2300      	movs	r3, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13f7c:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   13f7e:	4c1e      	ldr	r4, [pc, #120]	; (13ff8 <flash_initialize+0x84>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13f80:	4e1e      	ldr	r6, [pc, #120]	; (13ffc <flash_initialize+0x88>)
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   13f82:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   13f84:	4b1e      	ldr	r3, [pc, #120]	; (14000 <flash_initialize+0x8c>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   13f86:	61f7      	str	r7, [r6, #28]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   13f88:	881a      	ldrh	r2, [r3, #0]
   13f8a:	789b      	ldrb	r3, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   13f8c:	4605      	mov	r5, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f8e:	2103      	movs	r1, #3
   13f90:	a801      	add	r0, sp, #4
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   13f92:	f8ad 2004 	strh.w	r2, [sp, #4]
   13f96:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13f9a:	f7ff ff3f 	bl	13e1c <ssp1_exchange_data>
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   13f9e:	f89d 2005 	ldrb.w	r2, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   13fa2:	f89d 3006 	ldrb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   13fa6:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13fa8:	61b7      	str	r7, [r6, #24]
   13faa:	61b7      	str	r7, [r6, #24]
   13fac:	61b7      	str	r7, [r6, #24]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   13fae:	d115      	bne.n	13fdc <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   13fb0:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   13fb4:	2a03      	cmp	r2, #3
   13fb6:	d811      	bhi.n	13fdc <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   13fb8:	4a12      	ldr	r2, [pc, #72]	; (14004 <flash_initialize+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   13fba:	2b25      	cmp	r3, #37	; 0x25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   13fbc:	7013      	strb	r3, [r2, #0]
   13fbe:	f005 0001 	and.w	r0, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   13fc2:	d111      	bne.n	13fe8 <flash_initialize+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   13fc4:	2800      	cmp	r0, #0
   13fc6:	bf14      	ite	ne
   13fc8:	f44f 7380 	movne.w	r3, #256	; 0x100
   13fcc:	f44f 7384 	moveq.w	r3, #264	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13fd0:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   13fd2:	f7ff fed9 	bl	13d88 <flash_get_mem_size_bytes()>
   13fd6:	4b0c      	ldr	r3, [pc, #48]	; (14008 <flash_initialize+0x94>)
   13fd8:	0a40      	lsrs	r0, r0, #9
   13fda:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   13fdc:	8820      	ldrh	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   13fde:	fab0 f080 	clz	r0, r0
   13fe2:	0940      	lsrs	r0, r0, #5
   13fe4:	b003      	add	sp, #12
   13fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13fe8:	2800      	cmp	r0, #0
   13fea:	bf14      	ite	ne
   13fec:	f44f 7300 	movne.w	r3, #512	; 0x200
   13ff0:	f44f 7304 	moveq.w	r3, #528	; 0x210
   13ff4:	e7ec      	b.n	13fd0 <flash_initialize+0x5c>
   13ff6:	bf00      	nop
   13ff8:	2007c472 	.word	0x2007c472
   13ffc:	2009c000 	.word	0x2009c000
   14000:	0001fbce 	.word	0x0001fbce
   14004:	2007c470 	.word	0x2007c470
   14008:	2007c46c 	.word	0x2007c46c

0001400c <flash_read_sectors>:
flash_read_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   1400c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14010:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   14012:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14014:	4a0f      	ldr	r2, [pc, #60]	; (14054 <flash_read_sectors+0x48>)
   14016:	3b01      	subs	r3, #1
   14018:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   1401a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1401c:	4293      	cmp	r3, r2
   1401e:	d812      	bhi.n	14046 <flash_read_sectors+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   14020:	024d      	lsls	r5, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   14022:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   14024:	f7ff ff86 	bl	13f34 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   14028:	f8df 802c 	ldr.w	r8, [pc, #44]	; 14058 <flash_read_sectors+0x4c>
   1402c:	1b2d      	subs	r5, r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1402e:	42be      	cmp	r6, r7
   14030:	eb04 0205 	add.w	r2, r4, r5
   14034:	da0a      	bge.n	1404c <flash_read_sectors+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   14036:	4621      	mov	r1, r4
   14038:	4640      	mov	r0, r8
   1403a:	f7ff feb5 	bl	13da8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1403e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14042:	3601      	adds	r6, #1
   14044:	e7f3      	b.n	1402e <flash_read_sectors+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   14046:	2001      	movs	r0, #1
   14048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   1404c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   1404e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14052:	bf00      	nop
   14054:	2007c46c 	.word	0x2007c46c
   14058:	00013ef1 	.word	0x00013ef1

0001405c <flash_write_sectors>:
flash_write_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1405c:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   1405e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14062:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14064:	4a0e      	ldr	r2, [pc, #56]	; (140a0 <flash_write_sectors+0x44>)
   14066:	3b01      	subs	r3, #1
   14068:	6812      	ldr	r2, [r2, #0]
   1406a:	4293      	cmp	r3, r2
   1406c:	d811      	bhi.n	14092 <flash_write_sectors+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   1406e:	4604      	mov	r4, r0
   14070:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14072:	f8df 8030 	ldr.w	r8, [pc, #48]	; 140a4 <flash_write_sectors+0x48>
   14076:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1407a:	42be      	cmp	r6, r7
   1407c:	eb04 0205 	add.w	r2, r4, r5
   14080:	da0a      	bge.n	14098 <flash_write_sectors+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14082:	4621      	mov	r1, r4
   14084:	4640      	mov	r0, r8
   14086:	f7ff fe8f 	bl	13da8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1408a:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   1408e:	3601      	adds	r6, #1
   14090:	e7f3      	b.n	1407a <flash_write_sectors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   14092:	2001      	movs	r0, #1
   14094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   14098:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   1409a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1409e:	bf00      	nop
   140a0:	2007c46c 	.word	0x2007c46c
   140a4:	00014189 	.word	0x00014189

000140a8 <flash_ioctl>:
flash_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   140a8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   140aa:	2807      	cmp	r0, #7
   140ac:	d805      	bhi.n	140ba <flash_ioctl+0x12>
   140ae:	e8df f000 	tbb	[pc, r0]
   140b2:	0a06      	.short	0x0a06
   140b4:	0808130f 	.word	0x0808130f
   140b8:	0808      	.short	0x0808
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   140ba:	2004      	movs	r0, #4
   140bc:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   140be:	f7ff ff39 	bl	13f34 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   140c2:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   140c4:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   140c6:	f7ff fe5f 	bl	13d88 <flash_get_mem_size_bytes()>
   140ca:	0a40      	lsrs	r0, r0, #9
   140cc:	6008      	str	r0, [r1, #0]
   140ce:	e7f8      	b.n	140c2 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   140d0:	f44f 7300 	mov.w	r3, #512	; 0x200
   140d4:	800b      	strh	r3, [r1, #0]
   140d6:	e7f4      	b.n	140c2 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   140d8:	2301      	movs	r3, #1
   140da:	600b      	str	r3, [r1, #0]
   140dc:	e7f1      	b.n	140c2 <flash_ioctl+0x1a>
   140de:	Address 0x00000000000140de is out of bounds.


000140e0 <flash_write_permanent_id>:
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   140e0:	b570      	push	{r4, r5, r6, lr}
   140e2:	b090      	sub	sp, #64	; 0x40
   140e4:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   140e6:	466a      	mov	r2, sp
   140e8:	466e      	mov	r6, sp
   140ea:	f100 0540 	add.w	r5, r0, #64	; 0x40
   140ee:	4614      	mov	r4, r2
   140f0:	6818      	ldr	r0, [r3, #0]
   140f2:	6859      	ldr	r1, [r3, #4]
   140f4:	3308      	adds	r3, #8
   140f6:	c403      	stmia	r4!, {r0, r1}
   140f8:	42ab      	cmp	r3, r5
   140fa:	4622      	mov	r2, r4
   140fc:	d1f7      	bne.n	140ee <flash_write_permanent_id+0xe>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   140fe:	2440      	movs	r4, #64	; 0x40
   14100:	4d07      	ldr	r5, [pc, #28]	; (14120 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   14102:	2100      	movs	r1, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14104:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   14106:	209b      	movs	r0, #155	; 0x9b
   14108:	f7ff fede 	bl	13ec8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1410c:	4621      	mov	r1, r4
   1410e:	4630      	mov	r0, r6
   14110:	f7ff fe84 	bl	13e1c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14114:	61ac      	str	r4, [r5, #24]
   14116:	61ac      	str	r4, [r5, #24]
   14118:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   1411a:	b010      	add	sp, #64	; 0x40
   1411c:	bd70      	pop	{r4, r5, r6, pc}
   1411e:	bf00      	nop
   14120:	2009c000 	.word	0x2009c000

00014124 <flash_read_permanent_id>:
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   14124:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14126:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   14128:	4606      	mov	r6, r0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1412a:	4d07      	ldr	r5, [pc, #28]	; (14148 <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   1412c:	2100      	movs	r1, #0
   1412e:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14130:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   14132:	f7ff fec9 	bl	13ec8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14136:	4621      	mov	r1, r4
   14138:	4630      	mov	r0, r6
   1413a:	f7ff fe6f 	bl	13e1c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1413e:	61ac      	str	r4, [r5, #24]
   14140:	61ac      	str	r4, [r5, #24]
   14142:	61ac      	str	r4, [r5, #24]
   14144:	bd70      	pop	{r4, r5, r6, pc}
   14146:	bf00      	nop
   14148:	2009c000 	.word	0x2009c000

0001414c <flash_get_page_count>:
flash_get_page_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   1414c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   1414e:	4b06      	ldr	r3, [pc, #24]	; (14168 <flash_get_page_count+0x1c>)
   14150:	8819      	ldrh	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   14152:	f031 011f 	bics.w	r1, r1, #31
   14156:	d004      	beq.n	14162 <flash_get_page_count+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   14158:	f7ff fe16 	bl	13d88 <flash_get_mem_size_bytes()>
   1415c:	fbb0 f0f1 	udiv	r0, r0, r1
   14160:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   14162:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   14164:	bd08      	pop	{r3, pc}
   14166:	bf00      	nop
   14168:	2007c472 	.word	0x2007c472

0001416c <flash_get_page_size>:
flash_get_page_size():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   1416c:	4b01      	ldr	r3, [pc, #4]	; (14174 <flash_get_page_size+0x8>)
   1416e:	8818      	ldrh	r0, [r3, #0]
   14170:	4770      	bx	lr
   14172:	bf00      	nop
   14174:	2007c472 	.word	0x2007c472

00014178 <flash_supports_metadata>:
flash_supports_metadata():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   14178:	4b02      	ldr	r3, [pc, #8]	; (14184 <flash_supports_metadata+0xc>)
   1417a:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   1417c:	3000      	adds	r0, #0
   1417e:	bf18      	it	ne
   14180:	2001      	movne	r0, #1
   14182:	4770      	bx	lr
   14184:	2007c472 	.word	0x2007c472

00014188 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14188:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   1418c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14190:	460f      	mov	r7, r1
   14192:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   14194:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   14196:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   14198:	f7ff fecc 	bl	13f34 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   1419c:	f7ff ffec 	bl	14178 <flash_supports_metadata>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   141a0:	4606      	mov	r6, r0
   141a2:	b1b8      	cbz	r0, 141d4 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   141a4:	2540      	movs	r5, #64	; 0x40
   141a6:	4c19      	ldr	r4, [pc, #100]	; (1420c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   141a8:	4b19      	ldr	r3, [pc, #100]	; (14210 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   141aa:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   141ac:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   141ae:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   141b0:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   141b4:	bf0c      	ite	eq
   141b6:	f44f 7180 	moveq.w	r1, #256	; 0x100
   141ba:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   141be:	4339      	orrs	r1, r7
   141c0:	f7ff fe82 	bl	13ec8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   141c4:	2104      	movs	r1, #4
   141c6:	eb0d 0001 	add.w	r0, sp, r1
   141ca:	f7ff fe27 	bl	13e1c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   141ce:	61a5      	str	r5, [r4, #24]
   141d0:	61a5      	str	r5, [r4, #24]
   141d2:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   141d4:	2340      	movs	r3, #64	; 0x40
   141d6:	4c0d      	ldr	r4, [pc, #52]	; (1420c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   141d8:	4639      	mov	r1, r7
   141da:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   141dc:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   141de:	f7ff fe73 	bl	13ec8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   141e2:	2201      	movs	r2, #1
   141e4:	4649      	mov	r1, r9
   141e6:	4640      	mov	r0, r8
   141e8:	f001 fd2c 	bl	15c44 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   141ec:	b13e      	cbz	r6, 141fe <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   141ee:	9b01      	ldr	r3, [sp, #4]
   141f0:	a802      	add	r0, sp, #8
   141f2:	3301      	adds	r3, #1
   141f4:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   141f8:	2104      	movs	r1, #4
   141fa:	f7ff fe0f 	bl	13e1c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   141fe:	2340      	movs	r3, #64	; 0x40
   14200:	61a3      	str	r3, [r4, #24]
   14202:	61a3      	str	r3, [r4, #24]
   14204:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   14206:	b003      	add	sp, #12
   14208:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1420c:	2009c000 	.word	0x2009c000
   14210:	2007c472 	.word	0x2007c472

00014214 <flash_chip_erase>:
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
}

void flash_chip_erase(void)
{
   14214:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14216:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14218:	2104      	movs	r1, #4
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   1421a:	4b07      	ldr	r3, [pc, #28]	; (14238 <flash_chip_erase+0x24>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1421c:	4c07      	ldr	r4, [pc, #28]	; (1423c <flash_chip_erase+0x28>)
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   1421e:	6818      	ldr	r0, [r3, #0]
   14220:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14222:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14224:	eb0d 0001 	add.w	r0, sp, r1
   14228:	f7ff fdf8 	bl	13e1c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1422c:	61a5      	str	r5, [r4, #24]
   1422e:	61a5      	str	r5, [r4, #24]
   14230:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   14232:	b003      	add	sp, #12
   14234:	bd30      	pop	{r4, r5, pc}
   14236:	bf00      	nop
   14238:	0001fbd1 	.word	0x0001fbd1
   1423c:	2009c000 	.word	0x2009c000

00014240 <get_fattime>:
get_fattime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   14240:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   14242:	a801      	add	r0, sp, #4
   14244:	f001 fa60 	bl	15708 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   14248:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1424c:	f003 000f 	and.w	r0, r3, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   14250:	f89d 3008 	ldrb.w	r3, [sp, #8]
   14254:	f003 031f 	and.w	r3, r3, #31
   14258:	041b      	lsls	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   1425a:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   1425e:	f89d 0006 	ldrb.w	r0, [sp, #6]
   14262:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   14266:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   1426a:	f89d 0005 	ldrb.w	r0, [sp, #5]
   1426e:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   14272:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   14276:	f89d 0004 	ldrb.w	r0, [sp, #4]
   1427a:	f3c0 0044 	ubfx	r0, r0, #1, #5
   1427e:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   14280:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   14284:	0640      	lsls	r0, r0, #25
   14286:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   1428a:	4318      	orrs	r0, r3
   1428c:	b005      	add	sp, #20
   1428e:	f85d fb04 	ldr.w	pc, [sp], #4
   14292:	Address 0x0000000000014292 is out of bounds.


00014294 <GPIO::GPIO(LPC1758_GPIO_Type)>:
_ZN4GPIOC2E17LPC1758_GPIO_Type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:23
 
#include "gpio.hpp"



GPIO::GPIO(LPC1758_GPIO_Type gpioId) :
   14294:	b5f0      	push	{r4, r5, r6, r7, lr}
   14296:	4686      	mov	lr, r0
   14298:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    mPortNum(gpioId >> __PNSB),
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
{
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   1429a:	4f11      	ldr	r7, [pc, #68]	; (142e0 <GPIO::GPIO(LPC1758_GPIO_Type)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:24
    mPortNum(gpioId >> __PNSB),
   1429c:	114c      	asrs	r4, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:25
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
   1429e:	f001 051f 	and.w	r5, r1, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   142a2:	ae01      	add	r6, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:25
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
   142a4:	7045      	strb	r5, [r0, #1]
   142a6:	7004      	strb	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   142a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   142aa:	c60f      	stmia	r6!, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];

    // Select GPIO configuration
    volatile uint32_t *pinsel = &(LPC_PINCON->PINSEL0);
    pinsel += (2 * mPortNum);
    *pinsel &= ~(3 << (2*mPinNum));
   142ac:	2103      	movs	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:34
}
   142ae:	4670      	mov	r0, lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   142b0:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   142b2:	006d      	lsls	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   142b4:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:28
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];
   142b6:	ab06      	add	r3, sp, #24
   142b8:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   142bc:	f853 3c14 	ldr.w	r3, [r3, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   142c0:	fa01 f505 	lsl.w	r5, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:28
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];
   142c4:	f8ce 3004 	str.w	r3, [lr, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:32
    pinsel += (2 * mPortNum);
   142c8:	00e3      	lsls	r3, r4, #3
   142ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
   142ce:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   142d2:	681a      	ldr	r2, [r3, #0]
   142d4:	ea22 0505 	bic.w	r5, r2, r5
   142d8:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:34
}
   142da:	b007      	add	sp, #28
   142dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   142de:	bf00      	nop
   142e0:	0001fbe8 	.word	0x0001fbe8

000142e4 <GPIO::setAsInput()>:
_ZN4GPIO10setAsInputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:44
    enableOpenDrainMode(false);
    enablePullUp();
}

/** @{ Simple functions*/
void GPIO::setAsInput(void)   {   mpOurGpio->FIODIR &= ~(1 << mPinNum);          }
   142e4:	2201      	movs	r2, #1
   142e6:	6841      	ldr	r1, [r0, #4]
   142e8:	7840      	ldrb	r0, [r0, #1]
   142ea:	680b      	ldr	r3, [r1, #0]
   142ec:	4082      	lsls	r2, r0
   142ee:	ea23 0302 	bic.w	r3, r3, r2
   142f2:	600b      	str	r3, [r1, #0]
   142f4:	4770      	bx	lr

000142f6 <GPIO::setAsOutput()>:
_ZN4GPIO11setAsOutputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:45
void GPIO::setAsOutput(void)  {   mpOurGpio->FIODIR |= (1 << mPinNum);           }
   142f6:	2301      	movs	r3, #1
   142f8:	6842      	ldr	r2, [r0, #4]
   142fa:	7840      	ldrb	r0, [r0, #1]
   142fc:	6811      	ldr	r1, [r2, #0]
   142fe:	4083      	lsls	r3, r0
   14300:	430b      	orrs	r3, r1
   14302:	6013      	str	r3, [r2, #0]
   14304:	4770      	bx	lr

00014306 <GPIO::read() const>:
_ZNK4GPIO4readEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:46
bool GPIO::read(void) const   {   return !!(mpOurGpio->FIOPIN & (1 << mPinNum)); }
   14306:	6843      	ldr	r3, [r0, #4]
   14308:	7841      	ldrb	r1, [r0, #1]
   1430a:	695a      	ldr	r2, [r3, #20]
   1430c:	2301      	movs	r3, #1
   1430e:	408b      	lsls	r3, r1
   14310:	4213      	tst	r3, r2
   14312:	bf14      	ite	ne
   14314:	2001      	movne	r0, #1
   14316:	2000      	moveq	r0, #0
   14318:	4770      	bx	lr

0001431a <GPIO::setHigh()>:
_ZN4GPIO7setHighEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:47
void GPIO::setHigh(void)      {   mpOurGpio->FIOSET = (1 << mPinNum);            }
   1431a:	2301      	movs	r3, #1
   1431c:	7841      	ldrb	r1, [r0, #1]
   1431e:	6842      	ldr	r2, [r0, #4]
   14320:	408b      	lsls	r3, r1
   14322:	6193      	str	r3, [r2, #24]
   14324:	4770      	bx	lr

00014326 <GPIO::setLow()>:
_ZN4GPIO6setLowEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:48
void GPIO::setLow(void)       {   mpOurGpio->FIOCLR = (1 << mPinNum);            }
   14326:	2301      	movs	r3, #1
   14328:	7841      	ldrb	r1, [r0, #1]
   1432a:	6842      	ldr	r2, [r0, #4]
   1432c:	408b      	lsls	r3, r1
   1432e:	61d3      	str	r3, [r2, #28]
   14330:	4770      	bx	lr
   14332:	Address 0x0000000000014332 is out of bounds.


00014334 <GPIO::enablePullUp()>:
_ZN4GPIO12enablePullUpEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57

void GPIO::enablePullUp()
{
    volatile uint32_t *pinmode = &(LPC_PINCON->PINMODE0);
    pinmode += (2 * mPortNum);
    *pinmode &= ~(3 << (2*mPinNum));
   14334:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:54
{
   14336:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57
    *pinmode &= ~(3 << (2*mPinNum));
   14338:	0051      	lsls	r1, r2, #1
   1433a:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:56
    pinmode += (2 * mPortNum);
   1433c:	7805      	ldrb	r5, [r0, #0]
   1433e:	4c04      	ldr	r4, [pc, #16]	; (14350 <GPIO::enablePullUp()+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57
    *pinmode &= ~(3 << (2*mPinNum));
   14340:	408a      	lsls	r2, r1
   14342:	f854 3035 	ldr.w	r3, [r4, r5, lsl #3]
   14346:	ea23 0302 	bic.w	r3, r3, r2
   1434a:	f844 3035 	str.w	r3, [r4, r5, lsl #3]
   1434e:	bd30      	pop	{r4, r5, pc}
   14350:	4002c040 	.word	0x4002c040

00014354 <GPIO::enableOpenDrainMode(bool)>:
_ZN4GPIO19enableOpenDrainModeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:73
    pinmode += (2 * mPortNum);
    *pinmode &= ~(3 << (2*mPinNum));
    *pinmode |=  (2 << (2*mPinNum));
}
void GPIO::enableOpenDrainMode(bool openDrain)
{
   14354:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:75
    volatile uint32_t *pinmode_od = &(LPC_PINCON->PINMODE_OD0);
    pinmode_od += mPortNum;
   14356:	4a09      	ldr	r2, [pc, #36]	; (1437c <GPIO::enableOpenDrainMode(bool)+0x28>)
   14358:	7804      	ldrb	r4, [r0, #0]
   1435a:	2301      	movs	r3, #1
   1435c:	7840      	ldrb	r0, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:76
    if(openDrain) {
   1435e:	b131      	cbz	r1, 1436e <GPIO::enableOpenDrainMode(bool)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:77
        *pinmode_od |= (1 << mPinNum);
   14360:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
   14364:	4083      	lsls	r3, r0
   14366:	430b      	orrs	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:80
    }
    else {
        *pinmode_od &= ~(1 << mPinNum);
   14368:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
   1436c:	bd10      	pop	{r4, pc}
   1436e:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
   14372:	4083      	lsls	r3, r0
   14374:	ea21 0303 	bic.w	r3, r1, r3
   14378:	e7f6      	b.n	14368 <GPIO::enableOpenDrainMode(bool)+0x14>
   1437a:	bf00      	nop
   1437c:	4002c068 	.word	0x4002c068

00014380 <GPIO::~GPIO()>:
_ZN4GPIOD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:36
GPIO::~GPIO()
   14380:	b510      	push	{r4, lr}
   14382:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:38
    setAsInput();
   14384:	f7ff ffae 	bl	142e4 <GPIO::setAsInput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:39
    enableOpenDrainMode(false);
   14388:	2100      	movs	r1, #0
   1438a:	4620      	mov	r0, r4
   1438c:	f7ff ffe2 	bl	14354 <GPIO::enableOpenDrainMode(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:40
    enablePullUp();
   14390:	4620      	mov	r0, r4
   14392:	f7ff ffcf 	bl	14334 <GPIO::enablePullUp()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:41
}
   14396:	4620      	mov	r0, r4
   14398:	bd10      	pop	{r4, pc}

0001439a <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

    return status;
}

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   1439a:	b5f0      	push	{r4, r5, r6, r7, lr}
   1439c:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   1439e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   143a0:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   143a4:	460e      	mov	r6, r1
   143a6:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   143a8:	4601      	mov	r1, r0
   143aa:	2201      	movs	r2, #1
   143ac:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   143ae:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   143b0:	f7fe fa92 	bl	128d8 <f_open>
   143b4:	4604      	mov	r4, r0
   143b6:	b970      	cbnz	r0, 143d6 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   143b8:	b11d      	cbz	r5, 143c2 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   143ba:	4629      	mov	r1, r5
   143bc:	a801      	add	r0, sp, #4
   143be:	f7fe fd07 	bl	12dd0 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   143c2:	466b      	mov	r3, sp
   143c4:	463a      	mov	r2, r7
   143c6:	4631      	mov	r1, r6
   143c8:	a801      	add	r0, sp, #4
   143ca:	f7fe fb1c 	bl	12a06 <f_read>
   143ce:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   143d0:	a801      	add	r0, sp, #4
   143d2:	f7fe fceb 	bl	12dac <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   143d6:	4620      	mov	r0, r4
   143d8:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   143dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

000143de <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   143de:	4613      	mov	r3, r2
   143e0:	460a      	mov	r2, r1
   143e2:	7901      	ldrb	r1, [r0, #4]
   143e4:	6800      	ldr	r0, [r0, #0]
   143e6:	f000 bf08 	b.w	151fa <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

000143ea <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   143ea:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   143ec:	2200      	movs	r2, #0
   143ee:	ab04      	add	r3, sp, #16
   143f0:	f823 2d04 	strh.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   143f4:	2202      	movs	r2, #2
   143f6:	7904      	ldrb	r4, [r0, #4]
   143f8:	9200      	str	r2, [sp, #0]
   143fa:	6800      	ldr	r0, [r0, #0]
   143fc:	460a      	mov	r2, r1
   143fe:	4621      	mov	r1, r4
   14400:	f000 fee6 	bl	151d0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   14404:	f89d 000c 	ldrb.w	r0, [sp, #12]
   14408:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   1440c:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14410:	b004      	add	sp, #16
   14412:	bd10      	pop	{r4, pc}

00014414 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   14414:	b510      	push	{r4, lr}
   14416:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   14418:	2219      	movs	r2, #25
   1441a:	212a      	movs	r1, #42	; 0x2a
   1441c:	f7ff ffdf 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14420:	220d      	movs	r2, #13
   14422:	7921      	ldrb	r1, [r4, #4]
   14424:	6820      	ldr	r0, [r4, #0]
   14426:	f000 fed7 	bl	151d8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   1442a:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   1442e:	4258      	negs	r0, r3
   14430:	4158      	adcs	r0, r3
   14432:	bd10      	pop	{r4, pc}

00014434 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   14434:	4a04      	ldr	r2, [pc, #16]	; (14448 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   14436:	8813      	ldrh	r3, [r2, #0]
   14438:	2b1f      	cmp	r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   1443a:	bfdf      	itttt	le
   1443c:	1c58      	addle	r0, r3, #1
   1443e:	8010      	strhle	r0, [r2, #0]
   14440:	4a02      	ldrle	r2, [pc, #8]	; (1444c <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   14442:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   14446:	4770      	bx	lr
   14448:	2007c4f4 	.word	0x2007c4f4
   1444c:	2007c474 	.word	0x2007c474

00014450 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   14450:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   14452:	4e15      	ldr	r6, [pc, #84]	; (144a8 <IR_Sensor::decodeIrCode()+0x58>)
   14454:	8833      	ldrh	r3, [r6, #0]
   14456:	2b01      	cmp	r3, #1
   14458:	dd23      	ble.n	144a2 <IR_Sensor::decodeIrCode()+0x52>
   1445a:	4a14      	ldr	r2, [pc, #80]	; (144ac <IR_Sensor::decodeIrCode()+0x5c>)
   1445c:	2000      	movs	r0, #0
   1445e:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   14460:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   14462:	4298      	cmp	r0, r3
   14464:	da08      	bge.n	14478 <IR_Sensor::decodeIrCode()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   14466:	f852 1f04 	ldr.w	r1, [r2, #4]!
   1446a:	3001      	adds	r0, #1
   1446c:	f852 4c04 	ldr.w	r4, [r2, #-4]
   14470:	1b09      	subs	r1, r1, r4
   14472:	f842 1c04 	str.w	r1, [r2, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   14476:	e7f4      	b.n	14462 <IR_Sensor::decodeIrCode()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14478:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   1447a:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   1447e:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14480:	6868      	ldr	r0, [r5, #4]
   14482:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14486:	b28a      	uxth	r2, r1
   14488:	4293      	cmp	r3, r2
   1448a:	dd08      	ble.n	1449e <IR_Sensor::decodeIrCode()+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   1448c:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   14490:	3101      	adds	r1, #1
   14492:	42b8      	cmp	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   14494:	bf3c      	itt	cc
   14496:	fa0e f202 	lslcc.w	r2, lr, r2
   1449a:	4314      	orrcc	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   1449c:	e7f3      	b.n	14486 <IR_Sensor::decodeIrCode()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   1449e:	4b04      	ldr	r3, [pc, #16]	; (144b0 <IR_Sensor::decodeIrCode()+0x60>)
   144a0:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   144a2:	2300      	movs	r3, #0
   144a4:	8033      	strh	r3, [r6, #0]
   144a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   144a8:	2007c4f4 	.word	0x2007c4f4
   144ac:	2007c474 	.word	0x2007c474
   144b0:	2007c4f8 	.word	0x2007c4f8

000144b4 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   144b4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   144b6:	2101      	movs	r1, #1
   144b8:	2002      	movs	r0, #2
   144ba:	f7fc fa1d 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   144be:	4b08      	ldr	r3, [pc, #32]	; (144e0 <IR_Sensor::init()+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   144c0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   144c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   144c4:	f022 0207 	bic.w	r2, r2, #7
   144c8:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   144ca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   144cc:	f042 0206 	orr.w	r2, r2, #6
   144d0:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   144d2:	4a04      	ldr	r2, [pc, #16]	; (144e4 <IR_Sensor::init()+0x30>)
   144d4:	68d3      	ldr	r3, [r2, #12]
   144d6:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   144da:	60d3      	str	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   144dc:	bd08      	pop	{r3, pc}
   144de:	bf00      	nop
   144e0:	40008000 	.word	0x40008000
   144e4:	4002c000 	.word	0x4002c000

000144e8 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   144e8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   144ea:	4b04      	ldr	r3, [pc, #16]	; (144fc <LED_Display::setLeftDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   144ec:	7141      	strb	r1, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   144ee:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   144f2:	5c5a      	ldrb	r2, [r3, r1]
   144f4:	2103      	movs	r1, #3
   144f6:	f7ff ff72 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
   144fa:	bd08      	pop	{r3, pc}
   144fc:	0001fbfc 	.word	0x0001fbfc

00014500 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14500:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14502:	4b04      	ldr	r3, [pc, #16]	; (14514 <LED_Display::setRightDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   14504:	7181      	strb	r1, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14506:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1450a:	5c5a      	ldrb	r2, [r3, r1]
   1450c:	2102      	movs	r1, #2
   1450e:	f7ff ff66 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
   14512:	bd08      	pop	{r3, pc}
   14514:	0001fbfc 	.word	0x0001fbfc

00014518 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   14518:	b538      	push	{r3, r4, r5, lr}
   1451a:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   1451c:	7901      	ldrb	r1, [r0, #4]
   1451e:	6800      	ldr	r0, [r0, #0]
   14520:	f000 fe76 	bl	15210 <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   14524:	4605      	mov	r5, r0
   14526:	b188      	cbz	r0, 1454c <LED_Display::init()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   14528:	2200      	movs	r2, #0
   1452a:	2106      	movs	r1, #6
   1452c:	4620      	mov	r0, r4
   1452e:	f7ff ff56 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   14532:	2200      	movs	r2, #0
   14534:	2107      	movs	r1, #7
   14536:	4620      	mov	r0, r4
   14538:	f7ff ff51 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   1453c:	212e      	movs	r1, #46	; 0x2e
   1453e:	4620      	mov	r0, r4
   14540:	f7ff ffd2 	bl	144e8 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   14544:	212e      	movs	r1, #46	; 0x2e
   14546:	4620      	mov	r0, r4
   14548:	f7ff ffda 	bl	14500 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   1454c:	4628      	mov	r0, r5
   1454e:	bd38      	pop	{r3, r4, r5, pc}

00014550 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14550:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14552:	2464      	movs	r4, #100	; 0x64
   14554:	fbb1 f3f4 	udiv	r3, r1, r4
   14558:	fb03 1414 	mls	r4, r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   1455c:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   1455e:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14560:	fbb4 f5f1 	udiv	r5, r4, r1
   14564:	fb01 4115 	mls	r1, r1, r5, r4
   14568:	3130      	adds	r1, #48	; 0x30
   1456a:	b2c9      	uxtb	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   1456c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   1456e:	f7ff ffc7 	bl	14500 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   14572:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14574:	bf88      	it	hi
   14576:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   1457a:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   1457c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   14580:	bf94      	ite	ls
   14582:	2120      	movls	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14584:	b2c9      	uxtbhi	r1, r1
   14586:	f7ff bfaf 	b.w	144e8 <LED_Display::setLeftDigit(char)>

0001458a <LED::init()>:
_ZN3LED4initEv():
   1458a:	2001      	movs	r0, #1
   1458c:	4770      	bx	lr
   1458e:	Address 0x000000000001458e is out of bounds.


00014590 <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   14590:	b538      	push	{r3, r4, r5, lr}
   14592:	460c      	mov	r4, r1
   14594:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   14596:	f001 fd25 	bl	15fe4 <vPortEnterCritical>
   1459a:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   1459c:	f004 030f 	and.w	r3, r4, #15
   145a0:	702b      	strb	r3, [r5, #0]
   145a2:	4b0e      	ldr	r3, [pc, #56]	; (145dc <LED::setAll(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   145a4:	f014 0f01 	tst.w	r4, #1
   145a8:	bf14      	ite	ne
   145aa:	61da      	strne	r2, [r3, #28]
   145ac:	619a      	streq	r2, [r3, #24]
   145ae:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   145b0:	f014 0f02 	tst.w	r4, #2
   145b4:	bf14      	ite	ne
   145b6:	61da      	strne	r2, [r3, #28]
   145b8:	619a      	streq	r2, [r3, #24]
   145ba:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   145bc:	f014 0f04 	tst.w	r4, #4
   145c0:	bf14      	ite	ne
   145c2:	61da      	strne	r2, [r3, #28]
   145c4:	619a      	streq	r2, [r3, #24]
   145c6:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   145ca:	f014 0f08 	tst.w	r4, #8
   145ce:	bf14      	ite	ne
   145d0:	61da      	strne	r2, [r3, #28]
   145d2:	619a      	streq	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   145d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   145d8:	f001 bd14 	b.w	16004 <vPortExitCritical>
   145dc:	2009c020 	.word	0x2009c020

000145e0 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   145e0:	2001      	movs	r0, #1
   145e2:	4770      	bx	lr

000145e4 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   145e4:	2002      	movs	r0, #2
   145e6:	f001 ba49 	b.w	15a7c <adc0_get_reading>

000145ea <Switches::init()>:
_ZN8Switches4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   145ea:	2001      	movs	r0, #1
   145ec:	4770      	bx	lr
   145ee:	Address 0x00000000000145ee is out of bounds.


000145f0 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   145f0:	4b04      	ldr	r3, [pc, #16]	; (14604 <Switches::getSwitchValues()+0x14>)
   145f2:	695b      	ldr	r3, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   145f4:	0b18      	lsrs	r0, r3, #12
   145f6:	f000 000c 	and.w	r0, r0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   145fa:	f3c3 2341 	ubfx	r3, r3, #9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   145fe:	4318      	orrs	r0, r3
   14600:	4770      	bx	lr
   14602:	bf00      	nop
   14604:	2009c020 	.word	0x2009c020

00014608 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   14608:	b510      	push	{r4, lr}
   1460a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   1460c:	2281      	movs	r2, #129	; 0x81
   1460e:	2101      	movs	r1, #1
   14610:	f7ff fee5 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14614:	2201      	movs	r2, #1
   14616:	7921      	ldrb	r1, [r4, #4]
   14618:	6820      	ldr	r0, [r4, #0]
   1461a:	f000 fddd 	bl	151d8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   1461e:	f010 0f60 	tst.w	r0, #96	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   14622:	bf14      	ite	ne
   14624:	2001      	movne	r0, #1
   14626:	2000      	moveq	r0, #0
   14628:	bd10      	pop	{r4, pc}

0001462a <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   1462a:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   1462c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   1462e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14630:	f7ff fedb 	bl	143ea <i2c2_device::get16BitRegister(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14634:	2281      	movs	r2, #129	; 0x81
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   14636:	b205      	sxth	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   14638:	2101      	movs	r1, #1
   1463a:	4620      	mov	r0, r4
   1463c:	f7ff fecf 	bl	143de <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   14640:	2010      	movs	r0, #16
   14642:	fb95 f0f0 	sdiv	r0, r5, r0
   14646:	f003 ffcf 	bl	185e8 <__aeabi_i2f>
   1464a:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   1464e:	f004 f81f 	bl	18690 <__aeabi_fmul>
   14652:	68a1      	ldr	r1, [r4, #8]
   14654:	f003 ff14 	bl	18480 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   14658:	bd38      	pop	{r3, r4, r5, pc}
   1465a:	Address 0x000000000001465a is out of bounds.


0001465c <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   1465c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   1465e:	f7ff ffe4 	bl	1462a <I2C_Temp::getCelsius()>
   14662:	4905      	ldr	r1, [pc, #20]	; (14678 <I2C_Temp::getFarenheit()+0x1c>)
   14664:	f004 f814 	bl	18690 <__aeabi_fmul>
   14668:	4904      	ldr	r1, [pc, #16]	; (1467c <I2C_Temp::getFarenheit()+0x20>)
   1466a:	f004 f8c5 	bl	187f8 <__aeabi_fdiv>
   1466e:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   14672:	f003 ff05 	bl	18480 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   14676:	bd08      	pop	{r3, pc}
   14678:	41100000 	.word	0x41100000
   1467c:	40a00000 	.word	0x40a00000

00014680 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29

/** Private member of this file */
static c_list_ptr mp_tlm_component_list = NULL;

static bool tlm_component_find_by_name(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   14680:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    tlm_component *comp = elm_ptr;
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
   14682:	6800      	ldr	r0, [r0, #0]
   14684:	f006 fa75 	bl	1ab72 <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   14688:	3000      	adds	r0, #0
   1468a:	bf18      	it	ne
   1468c:	2001      	movne	r0, #1
   1468e:	bd08      	pop	{r3, pc}

00014690 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   14690:	b507      	push	{r0, r1, r2, lr}
   14692:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   14694:	b130      	cbz	r0, 146a4 <tlm_component_get_by_name+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   14696:	4602      	mov	r2, r0
   14698:	4804      	ldr	r0, [pc, #16]	; (146ac <tlm_component_get_by_name+0x1c>)
   1469a:	9300      	str	r3, [sp, #0]
   1469c:	4904      	ldr	r1, [pc, #16]	; (146b0 <tlm_component_get_by_name+0x20>)
   1469e:	6800      	ldr	r0, [r0, #0]
   146a0:	f000 f864 	bl	1476c <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   146a4:	b003      	add	sp, #12
   146a6:	f85d fb04 	ldr.w	pc, [sp], #4
   146aa:	bf00      	nop
   146ac:	2007c4fc 	.word	0x2007c4fc
   146b0:	00014681 	.word	0x00014681

000146b4 <tlm_component_add>:
tlm_component_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   146b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   146b6:	4606      	mov	r6, r0
   146b8:	b910      	cbnz	r0, 146c0 <tlm_component_add+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   146ba:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   146bc:	4620      	mov	r0, r4
   146be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   146c0:	7803      	ldrb	r3, [r0, #0]
   146c2:	2b00      	cmp	r3, #0
   146c4:	d0f9      	beq.n	146ba <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   146c6:	4d15      	ldr	r5, [pc, #84]	; (1471c <tlm_component_add+0x68>)
   146c8:	682b      	ldr	r3, [r5, #0]
   146ca:	b913      	cbnz	r3, 146d2 <tlm_component_add+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   146cc:	f000 f828 	bl	14720 <c_list_create>
   146d0:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   146d2:	4630      	mov	r0, r6
   146d4:	f7ff ffdc 	bl	14690 <tlm_component_get_by_name>
   146d8:	4607      	mov	r7, r0
   146da:	2800      	cmp	r0, #0
   146dc:	d1ed      	bne.n	146ba <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   146de:	2008      	movs	r0, #8
   146e0:	f004 fd24 	bl	1912c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   146e4:	4604      	mov	r4, r0
   146e6:	2800      	cmp	r0, #0
   146e8:	d0e7      	beq.n	146ba <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   146ea:	e880 00c0 	stmia.w	r0, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   146ee:	f000 f817 	bl	14720 <c_list_create>
   146f2:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   146f4:	b918      	cbnz	r0, 146fe <tlm_component_add+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   146f6:	4620      	mov	r0, r4
   146f8:	f004 fd20 	bl	1913c <free>
   146fc:	e7dd      	b.n	146ba <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   146fe:	6828      	ldr	r0, [r5, #0]
   14700:	4621      	mov	r1, r4
   14702:	f000 f817 	bl	14734 <c_list_insert_elm_end>
   14706:	4605      	mov	r5, r0
   14708:	2800      	cmp	r0, #0
   1470a:	d1d7      	bne.n	146bc <tlm_component_add+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   1470c:	6860      	ldr	r0, [r4, #4]
   1470e:	f004 fd15 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   14712:	4620      	mov	r0, r4
   14714:	f004 fd12 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   14718:	462c      	mov	r4, r5
   1471a:	e7cf      	b.n	146bc <tlm_component_add+0x8>
   1471c:	2007c4fc 	.word	0x2007c4fc

00014720 <c_list_create>:
c_list_create():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   14720:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   14722:	200c      	movs	r0, #12
   14724:	f004 fd02 	bl	1912c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   14728:	b118      	cbz	r0, 14732 <c_list_create+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   1472a:	2300      	movs	r3, #0
   1472c:	6003      	str	r3, [r0, #0]
   1472e:	6043      	str	r3, [r0, #4]
   14730:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   14732:	bd08      	pop	{r3, pc}

00014734 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87
    const c_list_type *list = p;
    return list ? list->node_count : 0;
}

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   14734:	b538      	push	{r3, r4, r5, lr}
   14736:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   14738:	4604      	mov	r4, r0
   1473a:	b908      	cbnz	r0, 14740 <c_list_insert_elm_end+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   1473c:	2000      	movs	r0, #0
   1473e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   14740:	2008      	movs	r0, #8
   14742:	f004 fcf3 	bl	1912c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   14746:	2800      	cmp	r0, #0
   14748:	d0f8      	beq.n	1473c <c_list_insert_elm_end+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   1474a:	2300      	movs	r3, #0
   1474c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   1474e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   14750:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   14752:	b933      	cbnz	r3, 14762 <c_list_insert_elm_end+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   14754:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   14756:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   14758:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   1475a:	3301      	adds	r3, #1
   1475c:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   1475e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   14760:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   14762:	6863      	ldr	r3, [r4, #4]
   14764:	2b00      	cmp	r3, #0
   14766:	d0f6      	beq.n	14756 <c_list_insert_elm_end+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   14768:	6058      	str	r0, [r3, #4]
   1476a:	e7f4      	b.n	14756 <c_list_insert_elm_end+0x22>

0001476c <c_list_find_elm>:
c_list_find_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178
    }
}

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   1476c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1476e:	460d      	mov	r5, r1
   14770:	4616      	mov	r6, r2
   14772:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   14774:	b908      	cbnz	r0, 1477a <c_list_find_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   14776:	2000      	movs	r0, #0
   14778:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   1477a:	2900      	cmp	r1, #0
   1477c:	d0fb      	beq.n	14776 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   1477e:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   14780:	2c00      	cmp	r4, #0
   14782:	d0f8      	beq.n	14776 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   14784:	9b06      	ldr	r3, [sp, #24]
   14786:	463a      	mov	r2, r7
   14788:	4631      	mov	r1, r6
   1478a:	6820      	ldr	r0, [r4, #0]
   1478c:	47a8      	blx	r5
   1478e:	b908      	cbnz	r0, 14794 <c_list_find_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   14790:	6820      	ldr	r0, [r4, #0]
   14792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   14794:	6864      	ldr	r4, [r4, #4]
   14796:	e7f3      	b.n	14780 <c_list_find_elm+0x14>

00014798 <c_list_for_each_elm>:
c_list_for_each_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   14798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1479a:	460d      	mov	r5, r1
   1479c:	4616      	mov	r6, r2
   1479e:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   147a0:	b908      	cbnz	r0, 147a6 <c_list_for_each_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   147a2:	2001      	movs	r0, #1
   147a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   147a6:	2900      	cmp	r1, #0
   147a8:	d0fb      	beq.n	147a2 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   147aa:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   147ac:	2c00      	cmp	r4, #0
   147ae:	d0f8      	beq.n	147a2 <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   147b0:	9b06      	ldr	r3, [sp, #24]
   147b2:	463a      	mov	r2, r7
   147b4:	4631      	mov	r1, r6
   147b6:	6820      	ldr	r0, [r4, #0]
   147b8:	47a8      	blx	r5
   147ba:	b108      	cbz	r0, 147c0 <c_list_for_each_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   147bc:	6864      	ldr	r4, [r4, #4]
   147be:	e7f5      	b.n	147ac <c_list_for_each_elm+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   147c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   147c2:	Address 0x00000000000147c2 is out of bounds.


000147c4 <logger_write_to_file>:
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
 * Writes the buffer to the file.
 * @param [in] buffer   The data pointer to write from
 * @param [in] bytes_to_write  The number of bytes to write
 */
static bool logger_write_to_file(const void * buffer, const uint32_t bytes_to_write)
{
   147c4:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    bool success = false;
    FRESULT err = 0;
    UINT bytes_written = 0;
   147c6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   147c8:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   147cc:	460d      	mov	r5, r1
   147ce:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   147d0:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   147d2:	f7fb fe59 	bl	10488 <sys_get_uptime_us>
   147d6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   147da:	2300      	movs	r3, #0
   147dc:	f004 f8c8 	bl	18970 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    const UINT bytes_to_write_uint = bytes_to_write;
    const uint32_t start_time = sys_get_uptime_ms();

    #if (!FILE_LOGGER_KEEP_FILE_OPEN)
    FIL fatfs_file = { 0 };
   147e0:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   147e4:	4606      	mov	r6, r0
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   147e6:	4621      	mov	r1, r4
   147e8:	a803      	add	r0, sp, #12
   147ea:	f004 fd03 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    #endif

    if (0 == bytes_to_write_uint) {
   147ee:	2d00      	cmp	r5, #0
   147f0:	d038      	beq.n	14864 <logger_write_to_file+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    {
        f_sync(gp_file_ptr);
    }
    #else
    /* File not opened, open it, seek it, and then write it */
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   147f2:	2212      	movs	r2, #18
   147f4:	491c      	ldr	r1, [pc, #112]	; (14868 <logger_write_to_file+0xa4>)
   147f6:	a803      	add	r0, sp, #12
   147f8:	f7fe f86e 	bl	128d8 <f_open>
   147fc:	4604      	mov	r4, r0
   147fe:	bb68      	cbnz	r0, 1485c <logger_write_to_file+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
    {
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   14800:	9906      	ldr	r1, [sp, #24]
   14802:	a803      	add	r0, sp, #12
   14804:	f7fe fae4 	bl	12dd0 <f_lseek>
   14808:	4604      	mov	r4, r0
   1480a:	b930      	cbnz	r0, 1481a <logger_write_to_file+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
        {
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   1480c:	ab02      	add	r3, sp, #8
   1480e:	462a      	mov	r2, r5
   14810:	4639      	mov	r1, r7
   14812:	a803      	add	r0, sp, #12
   14814:	f7fe f9af 	bl	12b76 <f_write>
   14818:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        }
        f_close(&fatfs_file);
   1481a:	a803      	add	r0, sp, #12
   1481c:	f7fe fac6 	bl	12dac <f_close>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14820:	f7fb fe32 	bl	10488 <sys_get_uptime_us>
   14824:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14828:	2300      	movs	r3, #0
   1482a:	f004 f8a1 	bl	18970 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
        printf("Failed file write: ");
    }

    /* Capture the time */
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
    if (diff_time > g_highest_file_write_time) {
   1482e:	4b0f      	ldr	r3, [pc, #60]	; (1486c <logger_write_to_file+0xa8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   14830:	1b80      	subs	r0, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   14832:	881a      	ldrh	r2, [r3, #0]
   14834:	4290      	cmp	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
        g_highest_file_write_time = diff_time;
    }

    /* To be successful, bytes written should be the same count as the bytes intended to be written */
    success = (bytes_to_write_uint == bytes_written);
   14836:	9a02      	ldr	r2, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   14838:	bf88      	it	hi
   1483a:	8018      	strhhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   1483c:	4295      	cmp	r5, r2
   1483e:	bf0c      	ite	eq
   14840:	2601      	moveq	r6, #1
   14842:	2600      	movne	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106

    /* We don't want to silently fail, so print a message in case an error occurs */
    if (!success) {
   14844:	d006      	beq.n	14854 <logger_write_to_file+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   14846:	9b05      	ldr	r3, [sp, #20]
   14848:	4621      	mov	r1, r4
   1484a:	9300      	str	r3, [sp, #0]
   1484c:	4808      	ldr	r0, [pc, #32]	; (14870 <logger_write_to_file+0xac>)
   1484e:	462b      	mov	r3, r5
   14850:	f005 fe6a 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
                (unsigned)err, (unsigned)bytes_written, (unsigned)bytes_to_write, (unsigned) fatfs_file.fptr);
#endif
    }

    return success;
}
   14854:	4630      	mov	r0, r6
   14856:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   1485a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   1485c:	4805      	ldr	r0, [pc, #20]	; (14874 <logger_write_to_file+0xb0>)
   1485e:	f005 fe63 	bl	1a528 <iprintf>
   14862:	e7dd      	b.n	14820 <logger_write_to_file+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   14864:	462c      	mov	r4, r5
   14866:	e7db      	b.n	14820 <logger_write_to_file+0x5c>
   14868:	0001fca8 	.word	0x0001fca8
   1486c:	2007c508 	.word	0x2007c508
   14870:	0001fcc6 	.word	0x0001fcc6
   14874:	0001fcb2 	.word	0x0001fcb2

00014878 <logger_task>:
logger_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   14878:	4b2f      	ldr	r3, [pc, #188]	; (14938 <logger_task+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   1487a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   1487e:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   14880:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 14940 <logger_task+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   14884:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   14886:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 14944 <logger_task+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   1488a:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   1488e:	2300      	movs	r3, #0
   14890:	af02      	add	r7, sp, #8
   14892:	f847 3d04 	str.w	r3, [r7, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   14896:	f64e 2260 	movw	r2, #60000	; 0xea60
   1489a:	4639      	mov	r1, r7
   1489c:	f8d9 0000 	ldr.w	r0, [r9]
   148a0:	f001 fe8e 	bl	165c0 <xQueueGenericReceive>
   148a4:	b108      	cbz	r0, 148aa <logger_task+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   148a6:	9b01      	ldr	r3, [sp, #4]
   148a8:	b92b      	cbnz	r3, 148b6 <logger_task+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   148aa:	1b71      	subs	r1, r6, r5
   148ac:	4628      	mov	r0, r5
   148ae:	f7ff ff89 	bl	147c4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   148b2:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   148b4:	e7eb      	b.n	1488e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   148b6:	f8d9 0000 	ldr.w	r0, [r9]
   148ba:	f001 ff4f 	bl	1675c <uxQueueMessagesWaiting>
   148be:	f8ba 3000 	ldrh.w	r3, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   148c2:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   148c4:	3001      	adds	r0, #1
   148c6:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   148c8:	bf88      	it	hi
   148ca:	f8aa 0000 	strhhi.w	r0, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   148ce:	4620      	mov	r0, r4
   148d0:	f006 f961 	bl	1ab96 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   148d4:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   148d6:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   148d8:	5423      	strb	r3, [r4, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   148da:	f100 0b01 	add.w	fp, r0, #1
   148de:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   148e0:	eb06 040b 	add.w	r4, r6, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   148e4:	f802 100b 	strb.w	r1, [r2, fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   148e8:	45a0      	cmp	r8, r4
   148ea:	9901      	ldr	r1, [sp, #4]
   148ec:	d81f      	bhi.n	1492e <logger_task+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   148ee:	eba8 0206 	sub.w	r2, r8, r6
   148f2:	4630      	mov	r0, r6
   148f4:	f004 fc59 	bl	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   148f8:	eba4 0408 	sub.w	r4, r4, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   148fc:	f44f 6180 	mov.w	r1, #1024	; 0x400
   14900:	4628      	mov	r0, r5
   14902:	f7ff ff5f 	bl	147c4 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   14906:	b13c      	cbz	r4, 14918 <logger_task+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   14908:	9901      	ldr	r1, [sp, #4]
   1490a:	ebab 0b04 	sub.w	fp, fp, r4
   1490e:	4622      	mov	r2, r4
   14910:	4459      	add	r1, fp
   14912:	4628      	mov	r0, r5
   14914:	f004 fc49 	bl	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   14918:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   1491a:	4808      	ldr	r0, [pc, #32]	; (1493c <logger_task+0xc4>)
   1491c:	2300      	movs	r3, #0
   1491e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   14922:	4639      	mov	r1, r7
   14924:	6800      	ldr	r0, [r0, #0]
   14926:	f001 fd43 	bl	163b0 <xQueueGenericSend>
   1492a:	4626      	mov	r6, r4
   1492c:	e7af      	b.n	1488e <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   1492e:	465a      	mov	r2, fp
   14930:	4630      	mov	r0, r6
   14932:	f004 fc3a 	bl	191aa <memcpy>
   14936:	e7f0      	b.n	1491a <logger_task+0xa2>
   14938:	2007c510 	.word	0x2007c510
   1493c:	2007c504 	.word	0x2007c504
   14940:	2007c50c 	.word	0x2007c50c
   14944:	2007c500 	.word	0x2007c500

00014948 <logger_init>:
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
    return g_buffer_watermark;
}

void logger_init(uint8_t logger_priority)
{
   14948:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1494c:	4c2b      	ldr	r4, [pc, #172]	; (149fc <logger_init+0xb4>)
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   1494e:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   14950:	6825      	ldr	r5, [r4, #0]
   14952:	2d00      	cmp	r5, #0
   14954:	d14a      	bne.n	149ec <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   14956:	f44f 6080 	mov.w	r0, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   1495a:	9503      	str	r5, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   1495c:	f004 fbe6 	bl	1912c <malloc>
   14960:	4e27      	ldr	r6, [pc, #156]	; (14a00 <logger_init+0xb8>)
   14962:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   14964:	b9a8      	cbnz	r0, 14992 <logger_init+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   14966:	6820      	ldr	r0, [r4, #0]
   14968:	2800      	cmp	r0, #0
   1496a:	d142      	bne.n	149f2 <logger_init+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   1496c:	6833      	ldr	r3, [r6, #0]
   1496e:	b163      	cbz	r3, 1498a <logger_init+0x42>
   14970:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   14972:	2300      	movs	r3, #0
   14974:	a903      	add	r1, sp, #12
   14976:	461a      	mov	r2, r3
   14978:	6830      	ldr	r0, [r6, #0]
   1497a:	f001 fe21 	bl	165c0 <xQueueGenericReceive>
   1497e:	b110      	cbz	r0, 14986 <logger_init+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   14980:	9803      	ldr	r0, [sp, #12]
   14982:	f004 fbdb 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   14986:	3c01      	subs	r4, #1
   14988:	d1f3      	bne.n	14972 <logger_init+0x2a>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   1498a:	481e      	ldr	r0, [pc, #120]	; (14a04 <logger_init+0xbc>)
   1498c:	f005 fe40 	bl	1a610 <puts>
   14990:	e02c      	b.n	149ec <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   14992:	462a      	mov	r2, r5
   14994:	2104      	movs	r1, #4
   14996:	200a      	movs	r0, #10
   14998:	f001 fcf0 	bl	1637c <xQueueGenericCreate>
   1499c:	4f1a      	ldr	r7, [pc, #104]	; (14a08 <logger_init+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   1499e:	462a      	mov	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   149a0:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   149a2:	2104      	movs	r1, #4
   149a4:	200a      	movs	r0, #10
   149a6:	f001 fce9 	bl	1637c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   149aa:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   149ac:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   149ae:	2b00      	cmp	r3, #0
   149b0:	d0d9      	beq.n	14966 <logger_init+0x1e>
   149b2:	2800      	cmp	r0, #0
   149b4:	d0d7      	beq.n	14966 <logger_init+0x1e>
   149b6:	250a      	movs	r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   149b8:	2096      	movs	r0, #150	; 0x96
   149ba:	f004 fbb7 	bl	1912c <malloc>
   149be:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   149c0:	2800      	cmp	r0, #0
   149c2:	d0d0      	beq.n	14966 <logger_init+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   149c4:	2300      	movs	r3, #0
   149c6:	a903      	add	r1, sp, #12
   149c8:	461a      	mov	r2, r3
   149ca:	6830      	ldr	r0, [r6, #0]
   149cc:	f001 fcf0 	bl	163b0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   149d0:	3d01      	subs	r5, #1
   149d2:	d1f1      	bne.n	149b8 <logger_init+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   149d4:	9501      	str	r5, [sp, #4]
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   149d6:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   149da:	462b      	mov	r3, r5
   149dc:	f44f 72c0 	mov.w	r2, #384	; 0x180
   149e0:	490a      	ldr	r1, [pc, #40]	; (14a0c <logger_init+0xc4>)
   149e2:	480b      	ldr	r0, [pc, #44]	; (14a10 <logger_init+0xc8>)
   149e4:	f001 ff1e 	bl	16824 <xTaskCreate>
   149e8:	2800      	cmp	r0, #0
   149ea:	d0bc      	beq.n	14966 <logger_init+0x1e>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   149ec:	b004      	add	sp, #16
   149ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   149f2:	f004 fba3 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   149f6:	2300      	movs	r3, #0
   149f8:	6023      	str	r3, [r4, #0]
   149fa:	e7b7      	b.n	1496c <logger_init+0x24>
   149fc:	2007c510 	.word	0x2007c510
   14a00:	2007c504 	.word	0x2007c504
   14a04:	0001fc83 	.word	0x0001fc83
   14a08:	2007c50c 	.word	0x2007c50c
   14a0c:	0001fc7c 	.word	0x0001fc7c
   14a10:	00014879 	.word	0x00014879

00014a14 <u0_dbg_put>:
u0_dbg_put():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   14a14:	b510      	push	{r4, lr}
   14a16:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   14a18:	f001 fae4 	bl	15fe4 <vPortEnterCritical>
   14a1c:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   14a1e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   14a22:	b918      	cbnz	r0, 14a2c <u0_dbg_put+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   14a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   14a28:	f001 baec 	b.w	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   14a2c:	f7fb ff42 	bl	108b4 <uart0_putchar>
   14a30:	e7f5      	b.n	14a1e <u0_dbg_put+0xa>

00014a32 <u0_dbg_printf>:
u0_dbg_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   14a32:	b40f      	push	{r0, r1, r2, r3}
   14a34:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   14a36:	f44f 7580 	mov.w	r5, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   14a3a:	b0c2      	sub	sp, #264	; 0x108
   14a3c:	ac46      	add	r4, sp, #280	; 0x118
   14a3e:	f854 6b04 	ldr.w	r6, [r4], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   14a42:	462a      	mov	r2, r5
   14a44:	2100      	movs	r1, #0
   14a46:	a802      	add	r0, sp, #8
   14a48:	f004 fbd4 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   14a4c:	4623      	mov	r3, r4
   14a4e:	4632      	mov	r2, r6
   14a50:	4629      	mov	r1, r5
   14a52:	a802      	add	r0, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   14a54:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   14a56:	f007 fa11 	bl	1be7c <vsniprintf>
   14a5a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   14a5c:	a802      	add	r0, sp, #8
   14a5e:	f7ff ffd9 	bl	14a14 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   14a62:	4620      	mov	r0, r4
   14a64:	b042      	add	sp, #264	; 0x108
   14a66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   14a6a:	b004      	add	sp, #16
   14a6c:	4770      	bx	lr

00014a6e <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   14a6e:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   14a70:	b513      	push	{r0, r1, r4, lr}
   14a72:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   14a74:	a902      	add	r1, sp, #8
   14a76:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   14a7a:	6800      	ldr	r0, [r0, #0]
   14a7c:	f001 fd6c 	bl	16558 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   14a80:	9b01      	ldr	r3, [sp, #4]
   14a82:	b11b      	cbz	r3, 14a8c <for_each_recur_alarm_callback+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   14a84:	6823      	ldr	r3, [r4, #0]
   14a86:	f043 0301 	orr.w	r3, r3, #1
   14a8a:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   14a8c:	2001      	movs	r0, #1
   14a8e:	b002      	add	sp, #8
   14a90:	bd10      	pop	{r4, pc}

00014a92 <for_each_alarm_callback>:
for_each_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   14a92:	b530      	push	{r4, r5, lr}
   14a94:	4604      	mov	r4, r0
   14a96:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   14a98:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   14a9a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   14a9c:	f000 fe34 	bl	15708 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   14aa0:	f89d 3006 	ldrb.w	r3, [sp, #6]
   14aa4:	7922      	ldrb	r2, [r4, #4]
   14aa6:	f003 031f 	and.w	r3, r3, #31
   14aaa:	429a      	cmp	r2, r3
   14aac:	d11b      	bne.n	14ae6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   14aae:	f89d 3005 	ldrb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   14ab2:	7962      	ldrb	r2, [r4, #5]
   14ab4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14ab8:	429a      	cmp	r2, r3
   14aba:	d114      	bne.n	14ae6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   14abc:	f89d 3004 	ldrb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   14ac0:	79a2      	ldrb	r2, [r4, #6]
   14ac2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14ac6:	429a      	cmp	r2, r3
   14ac8:	d10d      	bne.n	14ae6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   14aca:	2300      	movs	r3, #0
   14acc:	a904      	add	r1, sp, #16
   14ace:	f841 3d10 	str.w	r3, [r1, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   14ad2:	6823      	ldr	r3, [r4, #0]
   14ad4:	6818      	ldr	r0, [r3, #0]
   14ad6:	f001 fd3f 	bl	16558 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   14ada:	9b00      	ldr	r3, [sp, #0]
   14adc:	b11b      	cbz	r3, 14ae6 <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   14ade:	682b      	ldr	r3, [r5, #0]
   14ae0:	f043 0301 	orr.w	r3, r3, #1
   14ae4:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   14ae6:	2001      	movs	r0, #1
   14ae8:	b005      	add	sp, #20
   14aea:	bd30      	pop	{r4, r5, pc}

00014aec <RTC_IRQHandler>:
RTC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   14aec:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   14aee:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   14af0:	4a23      	ldr	r2, [pc, #140]	; (14b80 <RTC_IRQHandler+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   14af2:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   14af4:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14af6:	4c23      	ldr	r4, [pc, #140]	; (14b84 <RTC_IRQHandler+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   14af8:	f043 0301 	orr.w	r3, r3, #1
   14afc:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   14afe:	a803      	add	r0, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   14b00:	9502      	str	r5, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   14b02:	f000 fe01 	bl	15708 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14b06:	462b      	mov	r3, r5
   14b08:	9500      	str	r5, [sp, #0]
   14b0a:	aa02      	add	r2, sp, #8
   14b0c:	491e      	ldr	r1, [pc, #120]	; (14b88 <RTC_IRQHandler+0x9c>)
   14b0e:	6820      	ldr	r0, [r4, #0]
   14b10:	f7ff fe42 	bl	14798 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   14b14:	f89d 300c 	ldrb.w	r3, [sp, #12]
   14b18:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   14b1c:	d11b      	bne.n	14b56 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14b1e:	9300      	str	r3, [sp, #0]
   14b20:	aa02      	add	r2, sp, #8
   14b22:	4919      	ldr	r1, [pc, #100]	; (14b88 <RTC_IRQHandler+0x9c>)
   14b24:	6860      	ldr	r0, [r4, #4]
   14b26:	f7ff fe37 	bl	14798 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   14b2a:	f89d 300d 	ldrb.w	r3, [sp, #13]
   14b2e:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   14b32:	d110      	bne.n	14b56 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14b34:	9300      	str	r3, [sp, #0]
   14b36:	aa02      	add	r2, sp, #8
   14b38:	4913      	ldr	r1, [pc, #76]	; (14b88 <RTC_IRQHandler+0x9c>)
   14b3a:	68a0      	ldr	r0, [r4, #8]
   14b3c:	f7ff fe2c 	bl	14798 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   14b40:	f89d 300e 	ldrb.w	r3, [sp, #14]
   14b44:	f013 031f 	ands.w	r3, r3, #31
   14b48:	d105      	bne.n	14b56 <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   14b4a:	9300      	str	r3, [sp, #0]
   14b4c:	aa02      	add	r2, sp, #8
   14b4e:	490e      	ldr	r1, [pc, #56]	; (14b88 <RTC_IRQHandler+0x9c>)
   14b50:	68e0      	ldr	r0, [r4, #12]
   14b52:	f7ff fe21 	bl	14798 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   14b56:	2300      	movs	r3, #0
   14b58:	480c      	ldr	r0, [pc, #48]	; (14b8c <RTC_IRQHandler+0xa0>)
   14b5a:	9300      	str	r3, [sp, #0]
   14b5c:	aa02      	add	r2, sp, #8
   14b5e:	490c      	ldr	r1, [pc, #48]	; (14b90 <RTC_IRQHandler+0xa4>)
   14b60:	6800      	ldr	r0, [r0, #0]
   14b62:	f7ff fe19 	bl	14798 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   14b66:	9b02      	ldr	r3, [sp, #8]
   14b68:	b13b      	cbz	r3, 14b7a <RTC_IRQHandler+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   14b6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14b6e:	4b09      	ldr	r3, [pc, #36]	; (14b94 <RTC_IRQHandler+0xa8>)
   14b70:	601a      	str	r2, [r3, #0]
   14b72:	f3bf 8f4f 	dsb	sy
   14b76:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   14b7a:	b007      	add	sp, #28
   14b7c:	bd30      	pop	{r4, r5, pc}
   14b7e:	bf00      	nop
   14b80:	40024000 	.word	0x40024000
   14b84:	2007c514 	.word	0x2007c514
   14b88:	00014a6f 	.word	0x00014a6f
   14b8c:	2007c524 	.word	0x2007c524
   14b90:	00014a93 	.word	0x00014a93
   14b94:	e000ed04 	.word	0xe000ed04

00014b98 <delay_us>:
delay_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   14b98:	b570      	push	{r4, r5, r6, lr}
   14b9a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   14b9c:	f7fb fc74 	bl	10488 <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   14ba0:	1984      	adds	r4, r0, r6
   14ba2:	f141 0500 	adc.w	r5, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   14ba6:	f7fb fc6f 	bl	10488 <sys_get_uptime_us>
   14baa:	42a9      	cmp	r1, r5
   14bac:	bf08      	it	eq
   14bae:	42a0      	cmpeq	r0, r4
   14bb0:	d3f9      	bcc.n	14ba6 <delay_us+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   14bb2:	bd70      	pop	{r4, r5, r6, pc}

00014bb4 <is_freertos_running>:
is_freertos_running():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   14bb4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   14bb6:	f002 f8fb 	bl	16db0 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   14bba:	1e83      	subs	r3, r0, #2
   14bbc:	4258      	negs	r0, r3
   14bbe:	4158      	adcs	r0, r3
   14bc0:	bd08      	pop	{r3, pc}

00014bc2 <delay_ms>:
delay_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   14bc2:	b510      	push	{r4, lr}
   14bc4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   14bc6:	f7ff fff5 	bl	14bb4 <is_freertos_running>
   14bca:	b120      	cbz	r0, 14bd6 <delay_ms+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   14bcc:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   14bce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   14bd2:	f001 bff9 	b.w	16bc8 <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   14bd6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   14bda:	4360      	muls	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   14bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   14be0:	f7ff bfda 	b.w	14b98 <delay_us>

00014be4 <_sbrk>:
_sbrk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   14be4:	4b12      	ldr	r3, [pc, #72]	; (14c30 <_sbrk+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   14be6:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   14be8:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   14bea:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   14bec:	b912      	cbnz	r2, 14bf4 <_sbrk+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   14bee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14bf2:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   14bf4:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   14bf6:	4a0f      	ldr	r2, [pc, #60]	; (14c34 <_sbrk+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   14bf8:	1844      	adds	r4, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   14bfa:	4d0f      	ldr	r5, [pc, #60]	; (14c38 <_sbrk+0x54>)
   14bfc:	4422      	add	r2, r4
   14bfe:	42aa      	cmp	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   14c00:	bf97      	itett	ls
   14c02:	4a0e      	ldrls	r2, [pc, #56]	; (14c3c <_sbrk+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   14c04:	601c      	strhi	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   14c06:	1888      	addls	r0, r1, r2
   14c08:	6018      	strls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   14c0a:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   14c0c:	bf98      	it	ls
   14c0e:	4610      	movls	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   14c10:	4a0b      	ldr	r2, [pc, #44]	; (14c40 <_sbrk+0x5c>)
   14c12:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   14c14:	bf82      	ittt	hi
   14c16:	3201      	addhi	r2, #1
   14c18:	601a      	strhi	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   14c1a:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   14c1c:	b139      	cbz	r1, 14c2e <_sbrk+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   14c1e:	4a09      	ldr	r2, [pc, #36]	; (14c44 <_sbrk+0x60>)
   14c20:	6813      	ldr	r3, [r2, #0]
   14c22:	3301      	adds	r3, #1
   14c24:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   14c26:	4b08      	ldr	r3, [pc, #32]	; (14c48 <_sbrk+0x64>)
   14c28:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   14c2a:	4b08      	ldr	r3, [pc, #32]	; (14c4c <_sbrk+0x68>)
   14c2c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   14c2e:	bd30      	pop	{r4, r5, pc}
   14c30:	2007c530 	.word	0x2007c530
   14c34:	efff7fff 	.word	0xefff7fff
   14c38:	10073ffe 	.word	0x10073ffe
   14c3c:	2007c7dc 	.word	0x2007c7dc
   14c40:	20083fff 	.word	0x20083fff
   14c44:	2007c528 	.word	0x2007c528
   14c48:	2007c52c 	.word	0x2007c52c
   14c4c:	2007c534 	.word	0x2007c534

00014c50 <operator new(unsigned int)>:
_Znwj():
   14c50:	f004 ba6c 	b.w	1912c <malloc>

00014c54 <operator delete(void*)>:
_ZdlPv():
   14c54:	f004 ba72 	b.w	1913c <free>

00014c58 <sys_get_mem_info>:
sys_get_mem_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   14c58:	b530      	push	{r4, r5, lr}
   14c5a:	4604      	mov	r4, r0
   14c5c:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   14c5e:	4668      	mov	r0, sp
   14c60:	f004 fd2c 	bl	196bc <mallinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   14c64:	4b21      	ldr	r3, [pc, #132]	; (14cec <sys_get_mem_info+0x94>)
   14c66:	4d22      	ldr	r5, [pc, #136]	; (14cf0 <sys_get_mem_info+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   14c68:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   14c6a:	9b08      	ldr	r3, [sp, #32]
   14c6c:	4a21      	ldr	r2, [pc, #132]	; (14cf4 <sys_get_mem_info+0x9c>)
   14c6e:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   14c70:	9b07      	ldr	r3, [sp, #28]
   14c72:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   14c74:	b953      	cbnz	r3, 14c8c <sys_get_mem_info+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   14c76:	6813      	ldr	r3, [r2, #0]
   14c78:	491f      	ldr	r1, [pc, #124]	; (14cf8 <sys_get_mem_info+0xa0>)
   14c7a:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   14c7c:	bf8a      	itet	hi
   14c7e:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   14c82:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   14c86:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   14c8a:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   14c8c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   14c8e:	6861      	ldr	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   14c90:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   14c92:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   14c96:	bf82      	ittt	hi
   14c98:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   14c9c:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   14ca0:	6061      	strhi	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   14ca2:	6811      	ldr	r1, [r2, #0]
   14ca4:	4a14      	ldr	r2, [pc, #80]	; (14cf8 <sys_get_mem_info+0xa0>)
   14ca6:	4291      	cmp	r1, r2
   14ca8:	d813      	bhi.n	14cd2 <sys_get_mem_info+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   14caa:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   14cae:	1a52      	subs	r2, r2, r1
   14cb0:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   14cb4:	441a      	add	r2, r3
   14cb6:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   14cb8:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   14cba:	4b10      	ldr	r3, [pc, #64]	; (14cfc <sys_get_mem_info+0xa4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   14cbc:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   14cbe:	681b      	ldr	r3, [r3, #0]
   14cc0:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   14cc2:	4b0f      	ldr	r3, [pc, #60]	; (14d00 <sys_get_mem_info+0xa8>)
   14cc4:	681b      	ldr	r3, [r3, #0]
   14cc6:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   14cc8:	4b0e      	ldr	r3, [pc, #56]	; (14d04 <sys_get_mem_info+0xac>)
   14cca:	681b      	ldr	r3, [r3, #0]
   14ccc:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   14cce:	b00b      	add	sp, #44	; 0x2c
   14cd0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   14cd2:	4b0d      	ldr	r3, [pc, #52]	; (14d08 <sys_get_mem_info+0xb0>)
   14cd4:	4299      	cmp	r1, r3
   14cd6:	d8ef      	bhi.n	14cb8 <sys_get_mem_info+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   14cd8:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   14cdc:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   14ce0:	1b5b      	subs	r3, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   14ce2:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   14ce4:	bfc8      	it	gt
   14ce6:	60e3      	strgt	r3, [r4, #12]
   14ce8:	e7e6      	b.n	14cb8 <sys_get_mem_info+0x60>
   14cea:	bf00      	nop
   14cec:	000007dc 	.word	0x000007dc
   14cf0:	2007c7dc 	.word	0x2007c7dc
   14cf4:	2007c530 	.word	0x2007c530
   14cf8:	10008000 	.word	0x10008000
   14cfc:	2007c52c 	.word	0x2007c52c
   14d00:	2007c534 	.word	0x2007c534
   14d04:	2007c528 	.word	0x2007c528
   14d08:	20083fff 	.word	0x20083fff

00014d0c <__aeabi_atexit>:
__aeabi_atexit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:175
extern "C" int __aeabi_atexit(void *object,
		void (*destructor)(void *),
		void *dso_handle)
{
	return 0;
}
   14d0c:	2000      	movs	r0, #0
   14d0e:	4770      	bx	lr

00014d10 <__malloc_lock>:
__malloc_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   14d10:	f001 b968 	b.w	15fe4 <vPortEnterCritical>

00014d14 <__malloc_unlock>:
__malloc_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   14d14:	f001 b976 	b.w	16004 <vPortExitCritical>

00014d18 <_gettimeofday>:
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   14d18:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   14d1a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   14d1c:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   14d1e:	b3a8      	cbz	r0, 14d8c <_gettimeofday+0x74>
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   14d20:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   14d22:	4668      	mov	r0, sp
   14d24:	f000 fcf0 	bl	15708 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   14d28:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   14d2c:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   14d2e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14d32:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   14d34:	f89d 3001 	ldrb.w	r3, [sp, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   14d38:	950b      	str	r5, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   14d3a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   14d3e:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   14d40:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14d44:	f003 031f 	and.w	r3, r3, #31
   14d48:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   14d4a:	f89d 3004 	ldrb.w	r3, [sp, #4]
   14d4e:	f003 031f 	and.w	r3, r3, #31
   14d52:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   14d54:	f89d 3005 	ldrb.w	r3, [sp, #5]
   14d58:	f003 030f 	and.w	r3, r3, #15
   14d5c:	3b01      	subs	r3, #1
   14d5e:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   14d60:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   14d64:	f3c3 030b 	ubfx	r3, r3, #0, #12
   14d68:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   14d6c:	9308      	str	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   14d6e:	f89d 3003 	ldrb.w	r3, [sp, #3]
   14d72:	f003 0307 	and.w	r3, r3, #7
   14d76:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   14d78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   14d7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
   14d80:	3b01      	subs	r3, #1
   14d82:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   14d84:	f004 fb1e 	bl	193c4 <mktime>
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   14d88:	e884 0021 	stmia.w	r4, {r0, r5}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   14d8c:	2000      	movs	r0, #0
   14d8e:	b00d      	add	sp, #52	; 0x34
   14d90:	bd30      	pop	{r4, r5, pc}

00014d92 <remap_fatfs_errors>:
remap_fatfs_errors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   14d92:	3803      	subs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   14d94:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   14d96:	280a      	cmp	r0, #10
   14d98:	d822      	bhi.n	14de0 <remap_fatfs_errors+0x4e>
   14d9a:	e8df f000 	tbb	[pc, r0]
   14d9e:	0621      	.short	0x0621
   14da0:	15190d06 	.word	0x15190d06
   14da4:	2111191d 	.word	0x2111191d
   14da8:	21          	.byte	0x21
   14da9:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   14daa:	f003 ff75 	bl	18c98 <__errno>
   14dae:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   14db0:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   14db2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14db6:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   14db8:	f003 ff6e 	bl	18c98 <__errno>
   14dbc:	2316      	movs	r3, #22
   14dbe:	e7f7      	b.n	14db0 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   14dc0:	f003 ff6a 	bl	18c98 <__errno>
   14dc4:	2313      	movs	r3, #19
   14dc6:	e7f3      	b.n	14db0 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   14dc8:	f003 ff66 	bl	18c98 <__errno>
   14dcc:	2311      	movs	r3, #17
   14dce:	e7ef      	b.n	14db0 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   14dd0:	f003 ff62 	bl	18c98 <__errno>
   14dd4:	230d      	movs	r3, #13
   14dd6:	e7eb      	b.n	14db0 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   14dd8:	f003 ff5e 	bl	18c98 <__errno>
   14ddc:	2309      	movs	r3, #9
   14dde:	e7e7      	b.n	14db0 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   14de0:	f003 ff5a 	bl	18c98 <__errno>
   14de4:	2305      	movs	r3, #5
   14de6:	e7e3      	b.n	14db0 <remap_fatfs_errors+0x1e>

00014de8 <findslot>:
findslot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   14de8:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   14dea:	b570      	push	{r4, r5, r6, lr}
   14dec:	490e      	ldr	r1, [pc, #56]	; (14e28 <findslot+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   14dee:	d006      	beq.n	14dfe <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   14df0:	4b0e      	ldr	r3, [pc, #56]	; (14e2c <findslot+0x44>)
   14df2:	681b      	ldr	r3, [r3, #0]
   14df4:	4298      	cmp	r0, r3
   14df6:	d102      	bne.n	14dfe <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   14df8:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   14dfa:	4610      	mov	r0, r2
   14dfc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   14dfe:	2300      	movs	r3, #0
   14e00:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14e02:	4d0b      	ldr	r5, [pc, #44]	; (14e30 <findslot+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   14e04:	600b      	str	r3, [r1, #0]
   14e06:	2b06      	cmp	r3, #6
   14e08:	461a      	mov	r2, r3
   14e0a:	d006      	beq.n	14e1a <findslot+0x32>
   14e0c:	1c53      	adds	r3, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14e0e:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   14e12:	f856 6c10 	ldr.w	r6, [r6, #-16]
   14e16:	42b0      	cmp	r0, r6
   14e18:	d104      	bne.n	14e24 <findslot+0x3c>
   14e1a:	b104      	cbz	r4, 14e1e <findslot+0x36>
   14e1c:	600a      	str	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   14e1e:	4b03      	ldr	r3, [pc, #12]	; (14e2c <findslot+0x44>)
   14e20:	6018      	str	r0, [r3, #0]
   14e22:	e7ea      	b.n	14dfa <findslot+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   14e24:	2401      	movs	r4, #1
   14e26:	e7ee      	b.n	14e06 <findslot+0x1e>
   14e28:	2007c5a8 	.word	0x2007c5a8
   14e2c:	2007c098 	.word	0x2007c098
   14e30:	2007c548 	.word	0x2007c548

00014e34 <remap_handle>:
remap_handle():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   14e34:	4b08      	ldr	r3, [pc, #32]	; (14e58 <remap_handle+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   14e36:	b510      	push	{r4, lr}
   14e38:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   14e3a:	6818      	ldr	r0, [r3, #0]
   14e3c:	b118      	cbz	r0, 14e46 <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   14e3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   14e40:	b90b      	cbnz	r3, 14e46 <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   14e42:	f004 f833 	bl	18eac <__sinit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   14e46:	b124      	cbz	r4, 14e52 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   14e48:	2c01      	cmp	r4, #1
   14e4a:	d002      	beq.n	14e52 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   14e4c:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   14e4e:	bf18      	it	ne
   14e50:	3c20      	subne	r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   14e52:	4620      	mov	r0, r4
   14e54:	bd10      	pop	{r4, pc}
   14e56:	bf00      	nop
   14e58:	2007c0e0 	.word	0x2007c0e0

00014e5c <sys_set_outchar_func>:
sys_set_outchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   14e5c:	4b01      	ldr	r3, [pc, #4]	; (14e64 <sys_set_outchar_func+0x8>)
   14e5e:	6018      	str	r0, [r3, #0]
   14e60:	4770      	bx	lr
   14e62:	bf00      	nop
   14e64:	2007c540 	.word	0x2007c540

00014e68 <sys_set_inchar_func>:
sys_set_inchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   14e68:	4b01      	ldr	r3, [pc, #4]	; (14e70 <sys_set_inchar_func+0x8>)
   14e6a:	6018      	str	r0, [r3, #0]
   14e6c:	4770      	bx	lr
   14e6e:	bf00      	nop
   14e70:	2007c53c 	.word	0x2007c53c

00014e74 <_kill>:
_kill():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   14e74:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   14e76:	4802      	ldr	r0, [pc, #8]	; (14e80 <_kill+0xc>)
   14e78:	f005 fbca 	bl	1a610 <puts>
   14e7c:	e7fe      	b.n	14e7c <_kill+0x8>
   14e7e:	bf00      	nop
   14e80:	0001fd13 	.word	0x0001fd13

00014e84 <_exit>:
_exit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   14e84:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   14e86:	4802      	ldr	r0, [pc, #8]	; (14e90 <_exit+0xc>)
   14e88:	f005 fbc2 	bl	1a610 <puts>
   14e8c:	e7fe      	b.n	14e8c <_exit+0x8>
   14e8e:	bf00      	nop
   14e90:	0001fcf9 	.word	0x0001fcf9

00014e94 <_getpid>:
_getpid():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   14e94:	2000      	movs	r0, #0
   14e96:	4770      	bx	lr

00014e98 <_init>:
_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   14e98:	2001      	movs	r0, #1
   14e9a:	4770      	bx	lr

00014e9c <syscalls_init>:
syscalls_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   14e9c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   14e9e:	4b0a      	ldr	r3, [pc, #40]	; (14ec8 <syscalls_init+0x2c>)
   14ea0:	781d      	ldrb	r5, [r3, #0]
   14ea2:	b985      	cbnz	r5, 14ec6 <syscalls_init+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   14ea4:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   14ea6:	4c09      	ldr	r4, [pc, #36]	; (14ecc <syscalls_init+0x30>)
   14ea8:	2260      	movs	r2, #96	; 0x60
   14eaa:	4629      	mov	r1, r5
   14eac:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   14eae:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   14eb0:	f004 f9a0 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   14eb4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   14eb8:	6323      	str	r3, [r4, #48]	; 0x30
   14eba:	6423      	str	r3, [r4, #64]	; 0x40
   14ebc:	6523      	str	r3, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   14ebe:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   14ec0:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   14ec2:	6126      	str	r6, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   14ec4:	6223      	str	r3, [r4, #32]
   14ec6:	bd70      	pop	{r4, r5, r6, pc}
   14ec8:	2007c544 	.word	0x2007c544
   14ecc:	2007c548 	.word	0x2007c548

00014ed0 <_read>:
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   14ed0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14ed4:	4689      	mov	r9, r1
   14ed6:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14ed8:	f7ff ffac 	bl	14e34 <remap_handle>
   14edc:	4605      	mov	r5, r0
   14ede:	f7ff ff83 	bl	14de8 <findslot>
   14ee2:	2806      	cmp	r0, #6
   14ee4:	d106      	bne.n	14ef4 <_read+0x24>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14ee6:	f003 fed7 	bl	18c98 <__errno>
   14eea:	2309      	movs	r3, #9
   14eec:	6003      	str	r3, [r0, #0]
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   14eee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14ef2:	e016      	b.n	14f22 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   14ef4:	4e1b      	ldr	r6, [pc, #108]	; (14f64 <_read+0x94>)
   14ef6:	0107      	lsls	r7, r0, #4
   14ef8:	19f3      	adds	r3, r6, r7
   14efa:	689b      	ldr	r3, [r3, #8]
   14efc:	07db      	lsls	r3, r3, #31
   14efe:	d4f2      	bmi.n	14ee6 <_read+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   14f00:	2d00      	cmp	r5, #0
   14f02:	d011      	beq.n	14f28 <_read+0x58>
   14f04:	db01      	blt.n	14f0a <_read+0x3a>
   14f06:	2d05      	cmp	r5, #5
   14f08:	ddf1      	ble.n	14eee <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   14f0a:	19f3      	adds	r3, r6, r7
   14f0c:	68d8      	ldr	r0, [r3, #12]
   14f0e:	2800      	cmp	r0, #0
   14f10:	d0ed      	beq.n	14eee <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   14f12:	ab01      	add	r3, sp, #4
   14f14:	4622      	mov	r2, r4
   14f16:	4649      	mov	r1, r9
   14f18:	f7fd fd75 	bl	12a06 <f_read>
   14f1c:	b1f8      	cbz	r0, 14f5e <_read+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   14f1e:	f7ff ff38 	bl	14d92 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   14f22:	b003      	add	sp, #12
   14f24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   14f28:	4b0f      	ldr	r3, [pc, #60]	; (14f68 <_read+0x98>)
   14f2a:	681a      	ldr	r2, [r3, #0]
   14f2c:	4698      	mov	r8, r3
   14f2e:	b132      	cbz	r2, 14f3e <_read+0x6e>
   14f30:	464d      	mov	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   14f32:	eba5 0309 	sub.w	r3, r5, r9
   14f36:	429c      	cmp	r4, r3
   14f38:	dc0a      	bgt.n	14f50 <_read+0x80>
   14f3a:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   14f3e:	1b60      	subs	r0, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   14f40:	2800      	cmp	r0, #0
   14f42:	dbd4      	blt.n	14eee <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   14f44:	443e      	add	r6, r7
   14f46:	6873      	ldr	r3, [r6, #4]
   14f48:	1a20      	subs	r0, r4, r0
   14f4a:	4403      	add	r3, r0
   14f4c:	6073      	str	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   14f4e:	e7e8      	b.n	14f22 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   14f50:	f8d8 3000 	ldr.w	r3, [r8]
   14f54:	2000      	movs	r0, #0
   14f56:	4798      	blx	r3
   14f58:	f805 0b01 	strb.w	r0, [r5], #1
   14f5c:	e7e9      	b.n	14f32 <_read+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   14f5e:	9801      	ldr	r0, [sp, #4]
   14f60:	1a20      	subs	r0, r4, r0
   14f62:	e7ed      	b.n	14f40 <_read+0x70>
   14f64:	2007c548 	.word	0x2007c548
   14f68:	2007c53c 	.word	0x2007c53c

00014f6c <_lseek>:
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   14f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14f6e:	460e      	mov	r6, r1
   14f70:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14f72:	f7ff ff5f 	bl	14e34 <remap_handle>
   14f76:	f7ff ff37 	bl	14de8 <findslot>
   14f7a:	2806      	cmp	r0, #6
   14f7c:	d004      	beq.n	14f88 <_lseek+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   14f7e:	4c12      	ldr	r4, [pc, #72]	; (14fc8 <_lseek+0x5c>)
   14f80:	0105      	lsls	r5, r0, #4
   14f82:	1962      	adds	r2, r4, r5
   14f84:	68d0      	ldr	r0, [r2, #12]
   14f86:	b930      	cbnz	r0, 14f96 <_lseek+0x2a>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14f88:	f003 fe86 	bl	18c98 <__errno>
   14f8c:	2309      	movs	r3, #9
   14f8e:	6003      	str	r3, [r0, #0]
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   14f90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14f94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   14f96:	b93f      	cbnz	r7, 14fa8 <_lseek+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   14f98:	4631      	mov	r1, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   14f9a:	f7fd ff19 	bl	12dd0 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   14f9e:	b170      	cbz	r0, 14fbe <_lseek+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   14fa0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   14fa4:	f7ff bef5 	b.w	14d92 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   14fa8:	2f01      	cmp	r7, #1
   14faa:	d102      	bne.n	14fb2 <_lseek+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   14fac:	6881      	ldr	r1, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   14fae:	4431      	add	r1, r6
   14fb0:	e7f3      	b.n	14f9a <_lseek+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   14fb2:	2f02      	cmp	r7, #2
   14fb4:	d101      	bne.n	14fba <_lseek+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   14fb6:	68c1      	ldr	r1, [r0, #12]
   14fb8:	e7f9      	b.n	14fae <_lseek+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   14fba:	2009      	movs	r0, #9
   14fbc:	e7f0      	b.n	14fa0 <_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   14fbe:	1963      	adds	r3, r4, r5
   14fc0:	68da      	ldr	r2, [r3, #12]
   14fc2:	6890      	ldr	r0, [r2, #8]
   14fc4:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   14fc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14fc8:	2007c548 	.word	0x2007c548

00014fcc <_write>:
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   14fcc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   14fd0:	460f      	mov	r7, r1
   14fd2:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   14fd4:	f7ff ff2e 	bl	14e34 <remap_handle>
   14fd8:	4606      	mov	r6, r0
   14fda:	f7ff ff05 	bl	14de8 <findslot>
   14fde:	2806      	cmp	r0, #6
   14fe0:	4605      	mov	r5, r0
   14fe2:	d104      	bne.n	14fee <_write+0x22>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   14fe4:	f003 fe58 	bl	18c98 <__errno>
   14fe8:	2309      	movs	r3, #9
   14fea:	6003      	str	r3, [r0, #0]
   14fec:	e006      	b.n	14ffc <_write+0x30>
   14fee:	2e05      	cmp	r6, #5
   14ff0:	d826      	bhi.n	15040 <_write+0x74>
   14ff2:	2001      	movs	r0, #1
   14ff4:	40b0      	lsls	r0, r6
   14ff6:	f010 0f39 	tst.w	r0, #57	; 0x39
   14ffa:	d002      	beq.n	15002 <_write+0x36>
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   14ffc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   15000:	e02c      	b.n	1505c <_write+0x90>
   15002:	f010 0f06 	tst.w	r0, #6
   15006:	d01b      	beq.n	15040 <_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   15008:	4e17      	ldr	r6, [pc, #92]	; (15068 <_write+0x9c>)
   1500a:	6830      	ldr	r0, [r6, #0]
   1500c:	b130      	cbz	r0, 1501c <_write+0x50>
   1500e:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   15010:	eba8 0307 	sub.w	r3, r8, r7
   15014:	429c      	cmp	r4, r3
   15016:	dc0e      	bgt.n	15036 <_write+0x6a>
   15018:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   1501c:	1a20      	subs	r0, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   1501e:	1c43      	adds	r3, r0, #1
   15020:	d0ec      	beq.n	14ffc <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   15022:	42a0      	cmp	r0, r4
   15024:	d0ea      	beq.n	14ffc <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   15026:	4b11      	ldr	r3, [pc, #68]	; (1506c <_write+0xa0>)
   15028:	1a20      	subs	r0, r4, r0
   1502a:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   1502e:	685a      	ldr	r2, [r3, #4]
   15030:	4402      	add	r2, r0
   15032:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   15034:	e012      	b.n	1505c <_write+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   15036:	6833      	ldr	r3, [r6, #0]
   15038:	f818 0b01 	ldrb.w	r0, [r8], #1
   1503c:	4798      	blx	r3
   1503e:	e7e7      	b.n	15010 <_write+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   15040:	4b0a      	ldr	r3, [pc, #40]	; (1506c <_write+0xa0>)
   15042:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   15046:	68d8      	ldr	r0, [r3, #12]
   15048:	2800      	cmp	r0, #0
   1504a:	d0cb      	beq.n	14fe4 <_write+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   1504c:	ab01      	add	r3, sp, #4
   1504e:	4622      	mov	r2, r4
   15050:	4639      	mov	r1, r7
   15052:	f7fd fd90 	bl	12b76 <f_write>
   15056:	b120      	cbz	r0, 15062 <_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   15058:	f7ff fe9b 	bl	14d92 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   1505c:	b002      	add	sp, #8
   1505e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   15062:	9801      	ldr	r0, [sp, #4]
   15064:	e7da      	b.n	1501c <_write+0x50>
   15066:	bf00      	nop
   15068:	2007c540 	.word	0x2007c540
   1506c:	2007c548 	.word	0x2007c548

00015070 <_close>:
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
}

int _close(int fd)
{
   15070:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   15072:	f7ff fedf 	bl	14e34 <remap_handle>
   15076:	f7ff feb7 	bl	14de8 <findslot>
   1507a:	2806      	cmp	r0, #6
   1507c:	d106      	bne.n	1508c <_close+0x1c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1507e:	f003 fe0b 	bl	18c98 <__errno>
   15082:	2309      	movs	r3, #9
   15084:	6003      	str	r3, [r0, #0]
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   15086:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1508a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   1508c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15090:	4b0b      	ldr	r3, [pc, #44]	; (150c0 <_close+0x50>)
   15092:	0100      	lsls	r0, r0, #4
   15094:	181c      	adds	r4, r3, r0
   15096:	501a      	str	r2, [r3, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   15098:	68e0      	ldr	r0, [r4, #12]
   1509a:	b908      	cbnz	r0, 150a0 <_close+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   1509c:	2000      	movs	r0, #0
   1509e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   150a0:	f7fd fe84 	bl	12dac <f_close>
   150a4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   150a6:	68e0      	ldr	r0, [r4, #12]
   150a8:	f004 f848 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   150ac:	2300      	movs	r3, #0
   150ae:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   150b0:	2d00      	cmp	r5, #0
   150b2:	d0f3      	beq.n	1509c <_close+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   150b4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   150b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   150ba:	f7ff be6a 	b.w	14d92 <remap_fatfs_errors>
   150be:	bf00      	nop
   150c0:	2007c548 	.word	0x2007c548

000150c4 <_fstat>:
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   150c4:	b508      	push	{r3, lr}
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   150c6:	f003 fde7 	bl	18c98 <__errno>
   150ca:	2358      	movs	r3, #88	; 0x58
   150cc:	6003      	str	r3, [r0, #0]
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   150ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   150d2:	bd08      	pop	{r3, pc}

000150d4 <_isatty>:
_isatty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   150d4:	4b07      	ldr	r3, [pc, #28]	; (150f4 <_isatty+0x20>)
   150d6:	681b      	ldr	r3, [r3, #0]
   150d8:	689a      	ldr	r2, [r3, #8]
   150da:	4282      	cmp	r2, r0
   150dc:	d007      	beq.n	150ee <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   150de:	685a      	ldr	r2, [r3, #4]
   150e0:	4282      	cmp	r2, r0
   150e2:	d004      	beq.n	150ee <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   150e4:	68db      	ldr	r3, [r3, #12]
   150e6:	1a1b      	subs	r3, r3, r0
   150e8:	4258      	negs	r0, r3
   150ea:	4158      	adcs	r0, r3
   150ec:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   150ee:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   150f0:	4770      	bx	lr
   150f2:	bf00      	nop
   150f4:	2007c0e0 	.word	0x2007c0e0

000150f8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:73
    I2C_SET_WRITE_MODE(deviceAddress);
    return transfer(deviceAddress, firstReg, pData, bytesToWrite);
}

bool I2C_Base::transfer(uint8_t deviceAddress, uint8_t firstReg, uint8_t* pData, uint32_t transferSize)
{
   150f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
    bool status = false;
    if (mDisableOperation || !pData) {
   150fc:	7944      	ldrb	r4, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:73
{
   150fe:	4605      	mov	r5, r0
   15100:	4689      	mov	r9, r1
   15102:	4690      	mov	r8, r2
   15104:	461e      	mov	r6, r3
   15106:	9f08      	ldr	r7, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
    if (mDisableOperation || !pData) {
   15108:	b11c      	cbz	r4, 15112 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:76
        return status;
   1510a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:109

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   1510c:	4620      	mov	r0, r4
   1510e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75 (discriminator 1)
    if (mDisableOperation || !pData) {
   15112:	2b00      	cmp	r3, #0
   15114:	d0f9      	beq.n	1510a <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   15116:	f001 fe4b 	bl	16db0 <xTaskGetSchedulerState>
   1511a:	2802      	cmp	r0, #2
   1511c:	d02c      	beq.n	15178 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x80>
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.firstReg  = regStart;
    mTransaction.trxSize   = len;
    mTransaction.pMasterData   = pBytes;

    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   1511e:	2220      	movs	r2, #32
   15120:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.trxSize   = len;
   15122:	61af      	str	r7, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.pMasterData   = pBytes;
   15124:	622e      	str	r6, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:214
    mTransaction.error     = 0;
   15126:	77ac      	strb	r4, [r5, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:215
    mTransaction.slaveAddr = devAddr;
   15128:	f885 901c 	strb.w	r9, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:216
    mTransaction.firstReg  = regStart;
   1512c:	f885 801d 	strb.w	r8, [r5, #29]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   15130:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15132:	f7fb f9a9 	bl	10488 <sys_get_uptime_us>
   15136:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1513a:	2300      	movs	r3, #0
   1513c:	f003 fc18 	bl	18970 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:85
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   15140:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   15144:	f141 0700 	adc.w	r7, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
        while (!xSemaphoreTake(mTransferCompleteSignal, 0)) {
   15148:	2300      	movs	r3, #0
   1514a:	68e8      	ldr	r0, [r5, #12]
   1514c:	461a      	mov	r2, r3
   1514e:	4619      	mov	r1, r3
   15150:	f001 fa36 	bl	165c0 <xQueueGenericReceive>
   15154:	b120      	cbz	r0, 15160 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
        status = (0 == mTransaction.error);
   15156:	7fac      	ldrb	r4, [r5, #30]
   15158:	fab4 f484 	clz	r4, r4
   1515c:	0964      	lsrs	r4, r4, #5
   1515e:	e7d5      	b.n	1510c <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x14>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   15160:	f7fb f992 	bl	10488 <sys_get_uptime_us>
   15164:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15168:	2300      	movs	r3, #0
   1516a:	f003 fc01 	bl	18970 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
            if (sys_get_uptime_ms() > timeout) {
   1516e:	428f      	cmp	r7, r1
   15170:	bf08      	it	eq
   15172:	4286      	cmpeq	r6, r0
   15174:	d2e8      	bcs.n	15148 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x50>
   15176:	e7ee      	b.n	15156 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   15178:	4623      	mov	r3, r4
   1517a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1517e:	4621      	mov	r1, r4
   15180:	68a8      	ldr	r0, [r5, #8]
   15182:	f001 fa1d 	bl	165c0 <xQueueGenericReceive>
   15186:	2800      	cmp	r0, #0
   15188:	d0bf      	beq.n	1510a <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:97
        xSemaphoreTake(mTransferCompleteSignal, 0);
   1518a:	4623      	mov	r3, r4
   1518c:	4622      	mov	r2, r4
   1518e:	4621      	mov	r1, r4
   15190:	68e8      	ldr	r0, [r5, #12]
   15192:	f001 fa15 	bl	165c0 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   15196:	2220      	movs	r2, #32
   15198:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:214
    mTransaction.error     = 0;
   1519a:	77ac      	strb	r4, [r5, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:215
    mTransaction.slaveAddr = devAddr;
   1519c:	f885 901c 	strb.w	r9, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:216
    mTransaction.firstReg  = regStart;
   151a0:	f885 801d 	strb.w	r8, [r5, #29]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.trxSize   = len;
   151a4:	61af      	str	r7, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.pMasterData   = pBytes;
   151a6:	622e      	str	r6, [r5, #32]
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:101
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS))) {
   151a8:	4621      	mov	r1, r4
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   151aa:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:101
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS))) {
   151ac:	68e8      	ldr	r0, [r5, #12]
   151ae:	4623      	mov	r3, r4
   151b0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   151b4:	f001 fa04 	bl	165c0 <xQueueGenericReceive>
   151b8:	b118      	cbz	r0, 151c2 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:102
            status = (0 == mTransaction.error);
   151ba:	7fac      	ldrb	r4, [r5, #30]
   151bc:	fab4 f484 	clz	r4, r4
   151c0:	0964      	lsrs	r4, r4, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:105
        xSemaphoreGive(mI2CMutex);
   151c2:	2300      	movs	r3, #0
   151c4:	68a8      	ldr	r0, [r5, #8]
   151c6:	461a      	mov	r2, r3
   151c8:	4619      	mov	r1, r3
   151ca:	f001 f8f1 	bl	163b0 <xQueueGenericSend>
   151ce:	e79d      	b.n	1510c <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x14>

000151d0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return transfer(deviceAddress, firstReg, pData, bytesToRead);
   151d0:	f041 0101 	orr.w	r1, r1, #1
   151d4:	f7ff bf90 	b.w	150f8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

000151d8 <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
{
   151d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:50
    uint8_t byte = 0;
   151da:	2400      	movs	r4, #0
   151dc:	ab04      	add	r3, sp, #16
   151de:	f803 4d01 	strb.w	r4, [r3, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
    readRegisters(deviceAddress, registerAddress, &byte, 1);
   151e2:	2401      	movs	r4, #1
   151e4:	9400      	str	r4, [sp, #0]
   151e6:	f7ff fff3 	bl	151d0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
}
   151ea:	f89d 000f 	ldrb.w	r0, [sp, #15]
   151ee:	b004      	add	sp, #16
   151f0:	bd10      	pop	{r4, pc}

000151f2 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:69
    return transfer(deviceAddress, firstReg, pData, bytesToWrite);
   151f2:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   151f6:	f7ff bf7f 	b.w	150f8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

000151fa <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   151fa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   151fc:	ac04      	add	r4, sp, #16
   151fe:	f804 3d01 	strb.w	r3, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:63
    return writeRegisters(deviceAddress, registerAddress, &value, 1);
   15202:	2301      	movs	r3, #1
   15204:	9300      	str	r3, [sp, #0]
   15206:	4623      	mov	r3, r4
   15208:	f7ff fff3 	bl	151f2 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
}
   1520c:	b004      	add	sp, #16
   1520e:	bd10      	pop	{r4, pc}

00015210 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
{
   15210:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    uint8_t notUsed = 0;
   15212:	2200      	movs	r2, #0
   15214:	ab04      	add	r3, sp, #16
   15216:	f803 2d01 	strb.w	r2, [r3, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:119
    return readRegisters(deviceAddress, dummyReg, &notUsed, lenZeroToTestDeviceReady);
   1521a:	9200      	str	r2, [sp, #0]
   1521c:	f7ff ffd8 	bl	151d0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:120
}
   15220:	b005      	add	sp, #20
   15222:	f85d fb04 	ldr.w	pc, [sp], #4
   15226:	Address 0x0000000000015226 is out of bounds.


00015228 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:122
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr) :
   15228:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:124
    mDisableOperation(false)
   1522a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:122
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr) :
   1522c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:124
    mDisableOperation(false)
   1522e:	6001      	str	r1, [r0, #0]
   15230:	7145      	strb	r5, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
    mI2CMutex = xSemaphoreCreateMutex();
   15232:	2001      	movs	r0, #1
   15234:	f001 f93e 	bl	164b4 <xQueueCreateMutex>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   15238:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
    mI2CMutex = xSemaphoreCreateMutex();
   1523a:	60a0      	str	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   1523c:	4629      	mov	r1, r5
   1523e:	2001      	movs	r0, #1
   15240:	f001 f89c 	bl	1637c <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
    if ((unsigned int)mpI2CRegs == LPC_I2C0_BASE)
   15244:	6823      	ldr	r3, [r4, #0]
   15246:	4a09      	ldr	r2, [pc, #36]	; (1526c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   15248:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
    if ((unsigned int)mpI2CRegs == LPC_I2C0_BASE)
   1524a:	4293      	cmp	r3, r2
   1524c:	d103      	bne.n	15256 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:135
        mIRQ = I2C0_IRQn;
   1524e:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
        mIRQ = (IRQn_Type)99; // Using invalid IRQ on purpose
   15250:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:148
}
   15252:	4620      	mov	r0, r4
   15254:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:137
    else if ((unsigned int)mpI2CRegs == LPC_I2C1_BASE)
   15256:	4a06      	ldr	r2, [pc, #24]	; (15270 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>)
   15258:	4293      	cmp	r3, r2
   1525a:	d101      	bne.n	15260 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
        mIRQ = I2C1_IRQn;
   1525c:	230b      	movs	r3, #11
   1525e:	e7f7      	b.n	15250 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:141
    else if ((unsigned int)mpI2CRegs == LPC_I2C2_BASE)
   15260:	4a04      	ldr	r2, [pc, #16]	; (15274 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4c>)
   15262:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:143
        mIRQ = I2C2_IRQn;
   15264:	bf0c      	ite	eq
   15266:	230c      	moveq	r3, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
        mIRQ = (IRQn_Type)99; // Using invalid IRQ on purpose
   15268:	2363      	movne	r3, #99	; 0x63
   1526a:	e7f1      	b.n	15250 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x28>
   1526c:	4001c000 	.word	0x4001c000
   15270:	4005c000 	.word	0x4005c000
   15274:	400a0000 	.word	0x400a0000

00015278 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   15278:	f990 3004 	ldrsb.w	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:167
{
   1527c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   1527e:	2b0b      	cmp	r3, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:167
{
   15280:	4605      	mov	r5, r0
   15282:	460c      	mov	r4, r1
   15284:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   15286:	d034      	beq.n	152f2 <I2C_Base::init(unsigned long, unsigned long)+0x7a>
   15288:	2b0c      	cmp	r3, #12
   1528a:	d035      	beq.n	152f8 <I2C_Base::init(unsigned long, unsigned long)+0x80>
   1528c:	2b0a      	cmp	r3, #10
   1528e:	d136      	bne.n	152fe <I2C_Base::init(unsigned long, unsigned long)+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:170
    case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   15290:	2101      	movs	r1, #1
   15292:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:172
    case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   15294:	f7fb fb30 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:189
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   15298:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   1529c:	bf98      	it	ls
   1529e:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   152a2:	f04f 026c 	mov.w	r2, #108	; 0x6c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:189
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   152a6:	bf94      	ite	ls
   152a8:	4371      	mulls	r1, r6
   152aa:	4916      	ldrhi	r1, [pc, #88]	; (15304 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   152ac:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:190
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   152ae:	fbb4 f1f1 	udiv	r1, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   152b2:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:191
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   152b4:	2228      	movs	r2, #40	; 0x28
   152b6:	2064      	movs	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:190
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   152b8:	0849      	lsrs	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:191
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   152ba:	434a      	muls	r2, r1
   152bc:	fbb2 f2f0 	udiv	r2, r2, r0
   152c0:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:192
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   152c2:	223c      	movs	r2, #60	; 0x3c
   152c4:	4351      	muls	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    mpI2CRegs->I2ADR0 = 0;
   152c6:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:192
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   152c8:	fbb1 f1f0 	udiv	r1, r1, r0
   152cc:	6159      	str	r1, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    mpI2CRegs->I2ADR0 = 0;
   152ce:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2ADR1 = 0;
   152d0:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2ADR2 = 0;
   152d2:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:198
    mpI2CRegs->I2ADR3 = 0;
   152d4:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2CONSET = 0x40;
   152d6:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   152d8:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
   152da:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    NVIC_EnableIRQ(mIRQ);
   152dc:	f995 3004 	ldrsb.w	r3, [r5, #4]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   152e0:	4a09      	ldr	r2, [pc, #36]	; (15308 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   152e2:	0959      	lsrs	r1, r3, #5
   152e4:	f003 031f 	and.w	r3, r3, #31
   152e8:	fa00 f303 	lsl.w	r3, r0, r3
   152ec:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   152f0:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
    case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   152f2:	2101      	movs	r1, #1
   152f4:	2013      	movs	r0, #19
   152f6:	e7cd      	b.n	15294 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:172
    case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   152f8:	2101      	movs	r1, #1
   152fa:	201a      	movs	r0, #26
   152fc:	e7ca      	b.n	15294 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    default: return false;
   152fe:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
}
   15300:	bd70      	pop	{r4, r5, r6, pc}
   15302:	bf00      	nop
   15304:	000186a0 	.word	0x000186a0
   15308:	e000e100 	.word	0xe000e100

0001530c <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
                                if(I2C_READ_MODE(mTransaction.slaveAddr))   \
                                    state = readComplete;                   \
                                else                                        \
                                    state = writeComplete;

    switch (mpI2CRegs->I2STAT)
   1530c:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:239
{
   1530e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   15310:	6859      	ldr	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:239
{
   15312:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   15314:	2950      	cmp	r1, #80	; 0x50
   15316:	f000 809c 	beq.w	15452 <I2C_Base::i2cStateMachine()+0x146>
   1531a:	d81f      	bhi.n	1535c <I2C_Base::i2cStateMachine()+0x50>
   1531c:	2918      	cmp	r1, #24
   1531e:	d067      	beq.n	153f0 <I2C_Base::i2cStateMachine()+0xe4>
   15320:	d80f      	bhi.n	15342 <I2C_Base::i2cStateMachine()+0x36>
   15322:	2908      	cmp	r1, #8
   15324:	d057      	beq.n	153d6 <I2C_Base::i2cStateMachine()+0xca>
   15326:	2910      	cmp	r1, #16
   15328:	d05b      	beq.n	153e2 <I2C_Base::i2cStateMachine()+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:440
    case slaveAddressNacked:    // no break
    case dataNackedBySlave:     // no break
    case readModeNackedBySlave: // no break
    case busError:              // no break
    default:
        mTransaction.error = mpI2CRegs->I2STAT;
   1532a:	6859      	ldr	r1, [r3, #4]
   1532c:	7791      	strb	r1, [r2, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:441
        setStop();
   1532e:	2120      	movs	r1, #32
   15330:	6199      	str	r1, [r3, #24]
   15332:	2110      	movs	r1, #16
   15334:	6019      	str	r1, [r3, #0]
   15336:	2108      	movs	r1, #8
   15338:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:441 (discriminator 1)
   1533a:	6819      	ldr	r1, [r3, #0]
   1533c:	06c9      	lsls	r1, r1, #27
   1533e:	d4fc      	bmi.n	1533a <I2C_Base::i2cStateMachine()+0x2e>
   15340:	e062      	b.n	15408 <I2C_Base::i2cStateMachine()+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   15342:	2938      	cmp	r1, #56	; 0x38
   15344:	f000 8093 	beq.w	1546e <I2C_Base::i2cStateMachine()+0x162>
   15348:	2940      	cmp	r1, #64	; 0x40
   1534a:	d079      	beq.n	15440 <I2C_Base::i2cStateMachine()+0x134>
   1534c:	2928      	cmp	r1, #40	; 0x28
   1534e:	d1ec      	bne.n	1532a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:380
        if (I2C_READ_MODE(mTransaction.slaveAddr)) {
   15350:	7f00      	ldrb	r0, [r0, #28]
   15352:	f010 0001 	ands.w	r0, r0, #1
   15356:	d05e      	beq.n	15416 <I2C_Base::i2cStateMachine()+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:381
            setSTARTFlag(); // Send Repeat-start for read-mode
   15358:	2220      	movs	r2, #32
   1535a:	e02a      	b.n	153b2 <I2C_Base::i2cStateMachine()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   1535c:	29a0      	cmp	r1, #160	; 0xa0
   1535e:	d027      	beq.n	153b0 <I2C_Base::i2cStateMachine()+0xa4>
   15360:	d813      	bhi.n	1538a <I2C_Base::i2cStateMachine()+0x7e>
   15362:	2960      	cmp	r1, #96	; 0x60
   15364:	d027      	beq.n	153b6 <I2C_Base::i2cStateMachine()+0xaa>
   15366:	2980      	cmp	r1, #128	; 0x80
   15368:	d02e      	beq.n	153c8 <I2C_Base::i2cStateMachine()+0xbc>
   1536a:	2958      	cmp	r1, #88	; 0x58
   1536c:	d1dd      	bne.n	1532a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:425
        *mTransaction.pMasterData = mpI2CRegs->I2DAT;
   1536e:	6a01      	ldr	r1, [r0, #32]
   15370:	689b      	ldr	r3, [r3, #8]
   15372:	700b      	strb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:426
        setStop();
   15374:	2120      	movs	r1, #32
   15376:	6803      	ldr	r3, [r0, #0]
   15378:	6199      	str	r1, [r3, #24]
   1537a:	2110      	movs	r1, #16
   1537c:	6019      	str	r1, [r3, #0]
   1537e:	2108      	movs	r1, #8
   15380:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:426 (discriminator 1)
   15382:	6819      	ldr	r1, [r3, #0]
   15384:	06c8      	lsls	r0, r1, #27
   15386:	d4fc      	bmi.n	15382 <I2C_Base::i2cStateMachine()+0x76>
   15388:	e03e      	b.n	15408 <I2C_Base::i2cStateMachine()+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   1538a:	29b8      	cmp	r1, #184	; 0xb8
   1538c:	d003      	beq.n	15396 <I2C_Base::i2cStateMachine()+0x8a>
   1538e:	29c0      	cmp	r1, #192	; 0xc0
   15390:	d00e      	beq.n	153b0 <I2C_Base::i2cStateMachine()+0xa4>
   15392:	29a8      	cmp	r1, #168	; 0xa8
   15394:	d1c9      	bne.n	1532a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:324
        if (reg_num > buffer_size)
   15396:	7d50      	ldrb	r0, [r2, #21]
   15398:	7d11      	ldrb	r1, [r2, #20]
   1539a:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
            reg_num = 0;
   1539c:	bfc4      	itt	gt
   1539e:	2100      	movgt	r1, #0
   153a0:	7551      	strbgt	r1, [r2, #21]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:328
        mpI2CRegs->I2DAT = buffer_location[reg_num++];
   153a2:	7d51      	ldrb	r1, [r2, #21]
   153a4:	6910      	ldr	r0, [r2, #16]
   153a6:	1c4c      	adds	r4, r1, #1
   153a8:	7554      	strb	r4, [r2, #21]
   153aa:	5c42      	ldrb	r2, [r0, r1]
   153ac:	b2d2      	uxtb	r2, r2
   153ae:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:343
        setAckFlag();
   153b0:	2204      	movs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:419
            setAckFlag(); // ACK next byte --> Next state: dataAvailableAckSent(back to this state)
   153b2:	601a      	str	r2, [r3, #0]
   153b4:	e019      	b.n	153ea <I2C_Base::i2cStateMachine()+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:337
        reg_num = 0;
   153b6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:338
        is_reg_byte = true;
   153b8:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:337
        reg_num = 0;
   153ba:	7550      	strb	r0, [r2, #21]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:338
        is_reg_byte = true;
   153bc:	7591      	strb	r1, [r2, #22]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:339
        setAckFlag();
   153be:	2204      	movs	r2, #4
   153c0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:392
                clearSIFlag();
   153c2:	2208      	movs	r2, #8
   153c4:	619a      	str	r2, [r3, #24]
   153c6:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:350
        if (is_reg_byte) {
   153c8:	7d80      	ldrb	r0, [r0, #22]
   153ca:	2300      	movs	r3, #0
   153cc:	2800      	cmp	r0, #0
   153ce:	d057      	beq.n	15480 <I2C_Base::i2cStateMachine()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:351
            is_reg_byte = false;
   153d0:	7593      	strb	r3, [r2, #22]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:281
    mStateMachineStatus_t state = busy;
   153d2:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:423
        break;
   153d4:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:359
        mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   153d6:	7f02      	ldrb	r2, [r0, #28]
   153d8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
            mpI2CRegs->I2DAT = mTransaction.firstReg;
   153dc:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
            clearSIFlag();
   153de:	6199      	str	r1, [r3, #24]
   153e0:	e7f7      	b.n	153d2 <I2C_Base::i2cStateMachine()+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:363
        mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   153e2:	7f02      	ldrb	r2, [r0, #28]
   153e4:	f042 0201 	orr.w	r2, r2, #1
   153e8:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:422
        clearSIFlag();
   153ea:	2208      	movs	r2, #8
   153ec:	619a      	str	r2, [r3, #24]
   153ee:	e7f0      	b.n	153d2 <I2C_Base::i2cStateMachine()+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:368
        clearSTARTFlag();
   153f0:	2020      	movs	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:370
        if (0 == mTransaction.trxSize) {
   153f2:	6994      	ldr	r4, [r2, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:368
        clearSTARTFlag();
   153f4:	6198      	str	r0, [r3, #24]
   153f6:	2108      	movs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:370
        if (0 == mTransaction.trxSize) {
   153f8:	b95c      	cbnz	r4, 15412 <I2C_Base::i2cStateMachine()+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371
            setStop();
   153fa:	6198      	str	r0, [r3, #24]
   153fc:	2010      	movs	r0, #16
   153fe:	6018      	str	r0, [r3, #0]
   15400:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 1)
   15402:	6819      	ldr	r1, [r3, #0]
   15404:	06c9      	lsls	r1, r1, #27
   15406:	d4fc      	bmi.n	15402 <I2C_Base::i2cStateMachine()+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 2)
   15408:	7f13      	ldrb	r3, [r2, #28]
   1540a:	07dd      	lsls	r5, r3, #31
   1540c:	d50e      	bpl.n	1542c <I2C_Base::i2cStateMachine()+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371
   1540e:	2001      	movs	r0, #1
   15410:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
            mpI2CRegs->I2DAT = mTransaction.firstReg;
   15412:	7f52      	ldrb	r2, [r2, #29]
   15414:	e7e2      	b.n	153dc <I2C_Base::i2cStateMachine()+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:385
            if (0 == mTransaction.trxSize) {
   15416:	6991      	ldr	r1, [r2, #24]
   15418:	b951      	cbnz	r1, 15430 <I2C_Base::i2cStateMachine()+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:386
                setStop();
   1541a:	2220      	movs	r2, #32
   1541c:	619a      	str	r2, [r3, #24]
   1541e:	2210      	movs	r2, #16
   15420:	601a      	str	r2, [r3, #0]
   15422:	2208      	movs	r2, #8
   15424:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:386 (discriminator 1)
   15426:	681a      	ldr	r2, [r3, #0]
   15428:	06d4      	lsls	r4, r2, #27
   1542a:	d4fc      	bmi.n	15426 <I2C_Base::i2cStateMachine()+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 4)
            setStop();
   1542c:	2002      	movs	r0, #2
   1542e:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:389
                mpI2CRegs->I2DAT = *(mTransaction.pMasterData);
   15430:	6a14      	ldr	r4, [r2, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:391
                --mTransaction.trxSize;
   15432:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:389
                mpI2CRegs->I2DAT = *(mTransaction.pMasterData);
   15434:	f814 5b01 	ldrb.w	r5, [r4], #1
   15438:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:390
                ++mTransaction.pMasterData;
   1543a:	6214      	str	r4, [r2, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:391
                --mTransaction.trxSize;
   1543c:	6191      	str	r1, [r2, #24]
   1543e:	e7c0      	b.n	153c2 <I2C_Base::i2cStateMachine()+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
        clearSTARTFlag();
   15440:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
        if (mTransaction.trxSize > 1) {
   15442:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
        clearSTARTFlag();
   15444:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
        if (mTransaction.trxSize > 1) {
   15446:	2a01      	cmp	r2, #1
   15448:	f04f 0204 	mov.w	r2, #4
   1544c:	d8b1      	bhi.n	153b2 <I2C_Base::i2cStateMachine()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:416
            setNackFlag();// NACK next byte --> Next state: dataAvailableNackSent
   1544e:	619a      	str	r2, [r3, #24]
   15450:	e7cb      	b.n	153ea <I2C_Base::i2cStateMachine()+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:411
        *mTransaction.pMasterData = mpI2CRegs->I2DAT;
   15452:	689b      	ldr	r3, [r3, #8]
   15454:	6a01      	ldr	r1, [r0, #32]
   15456:	2204      	movs	r2, #4
   15458:	700b      	strb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:412
        ++mTransaction.pMasterData;
   1545a:	6a03      	ldr	r3, [r0, #32]
   1545c:	3301      	adds	r3, #1
   1545e:	6203      	str	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:413
        --mTransaction.trxSize;
   15460:	6983      	ldr	r3, [r0, #24]
   15462:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:415
        if (1 == mTransaction.trxSize) { // Only 1 more byte remaining
   15464:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:413
        --mTransaction.trxSize;
   15466:	6183      	str	r3, [r0, #24]
   15468:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:415
        if (1 == mTransaction.trxSize) { // Only 1 more byte remaining
   1546a:	d1a2      	bne.n	153b2 <I2C_Base::i2cStateMachine()+0xa6>
   1546c:	e7ef      	b.n	1544e <I2C_Base::i2cStateMachine()+0x142>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   1546e:	7f01      	ldrb	r1, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:432
        mTransaction.error = mpI2CRegs->I2STAT;
   15470:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   15472:	f011 0f01 	tst.w	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:432
        mTransaction.error = mpI2CRegs->I2STAT;
   15476:	7793      	strb	r3, [r2, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   15478:	bf14      	ite	ne
   1547a:	2001      	movne	r0, #1
   1547c:	2002      	moveq	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:433
        break;
   1547e:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:446
        break;
    }

    return state;
}
   15480:	bd30      	pop	{r4, r5, pc}
   15482:	Address 0x0000000000015482 is out of bounds.


00015484 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:39
{
   15484:	b513      	push	{r0, r1, r4, lr}
   15486:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
    if (busy != i2cStateMachine()) {
   15488:	f7ff ff40 	bl	1530c <I2C_Base::i2cStateMachine()>
   1548c:	b180      	cbz	r0, 154b0 <I2C_Base::handleInterrupt()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        long higherPriorityTaskWaiting = 0;
   1548e:	2300      	movs	r3, #0
   15490:	a902      	add	r1, sp, #8
   15492:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:43
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   15496:	68e0      	ldr	r0, [r4, #12]
   15498:	f001 f85e 	bl	16558 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   1549c:	9b01      	ldr	r3, [sp, #4]
   1549e:	b13b      	cbz	r3, 154b0 <I2C_Base::handleInterrupt()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44 (discriminator 1)
   154a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   154a4:	4b03      	ldr	r3, [pc, #12]	; (154b4 <I2C_Base::handleInterrupt()+0x30>)
   154a6:	601a      	str	r2, [r3, #0]
   154a8:	f3bf 8f4f 	dsb	sy
   154ac:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:46
}
   154b0:	b002      	add	sp, #8
   154b2:	bd10      	pop	{r4, pc}
   154b4:	e000ed04 	.word	0xe000ed04

000154b8 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   154b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
   154ba:	4604      	mov	r4, r0
   154bc:	4615      	mov	r5, r2
   154be:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   154c2:	f001 fc75 	bl	16db0 <xTaskGetSchedulerState>
   154c6:	2802      	cmp	r0, #2
   154c8:	d009      	beq.n	154de <UartDev::putChar(char, unsigned int)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   154ca:	6963      	ldr	r3, [r4, #20]
   154cc:	f89d 2007 	ldrb.w	r2, [sp, #7]
   154d0:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   154d2:	7d1a      	ldrb	r2, [r3, #20]
   154d4:	0652      	lsls	r2, r2, #25
   154d6:	d5fc      	bpl.n	154d2 <UartDev::putChar(char, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   154d8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   154da:	b003      	add	sp, #12
   154dc:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   154de:	2300      	movs	r3, #0
   154e0:	462a      	mov	r2, r5
   154e2:	f10d 0107 	add.w	r1, sp, #7
   154e6:	69e0      	ldr	r0, [r4, #28]
   154e8:	f000 ff62 	bl	163b0 <xQueueGenericSend>
   154ec:	2800      	cmp	r0, #0
   154ee:	d0f4      	beq.n	154da <UartDev::putChar(char, unsigned int)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   154f0:	6963      	ldr	r3, [r4, #20]
   154f2:	7d1b      	ldrb	r3, [r3, #20]
   154f4:	065b      	lsls	r3, r3, #25
   154f6:	d5ef      	bpl.n	154d8 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   154f8:	2300      	movs	r3, #0
   154fa:	f10d 0107 	add.w	r1, sp, #7
   154fe:	461a      	mov	r2, r3
   15500:	69e0      	ldr	r0, [r4, #28]
   15502:	f001 f85d 	bl	165c0 <xQueueGenericReceive>
   15506:	2800      	cmp	r0, #0
   15508:	d0e6      	beq.n	154d8 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   1550a:	6963      	ldr	r3, [r4, #20]
   1550c:	f89d 2007 	ldrb.w	r2, [sp, #7]
   15510:	701a      	strb	r2, [r3, #0]
   15512:	e7e1      	b.n	154d8 <UartDev::putChar(char, unsigned int)+0x20>

00015514 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   15514:	b510      	push	{r4, lr}
   15516:	4604      	mov	r4, r0
   15518:	4b02      	ldr	r3, [pc, #8]	; (15524 <UartDev::~UartDev()+0x10>)
   1551a:	6003      	str	r3, [r0, #0]
   1551c:	f000 f8da 	bl	156d4 <CharDev::~CharDev()>
   15520:	4620      	mov	r0, r4
   15522:	bd10      	pop	{r4, pc}
   15524:	0001fd50 	.word	0x0001fd50

00015528 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   15528:	b510      	push	{r4, lr}
   1552a:	4604      	mov	r4, r0
   1552c:	f7ff fff2 	bl	15514 <UartDev::~UartDev()>
   15530:	4620      	mov	r0, r4
   15532:	212c      	movs	r1, #44	; 0x2c
   15534:	f002 fa65 	bl	17a02 <operator delete(void*, unsigned int)>
   15538:	4620      	mov	r0, r4
   1553a:	bd10      	pop	{r4, pc}

0001553c <UartDev::flush()>:
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   1553c:	b510      	push	{r4, lr}
   1553e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15540:	f001 fc36 	bl	16db0 <xTaskGetSchedulerState>
   15544:	2802      	cmp	r0, #2
   15546:	d107      	bne.n	15558 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   15548:	69e0      	ldr	r0, [r4, #28]
   1554a:	f001 f907 	bl	1675c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   1554e:	b118      	cbz	r0, 15558 <UartDev::flush()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   15550:	2001      	movs	r0, #1
   15552:	f001 fb39 	bl	16bc8 <vTaskDelay>
   15556:	e7f7      	b.n	15548 <UartDev::flush()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   15558:	2001      	movs	r0, #1
   1555a:	bd10      	pop	{r4, pc}

0001555c <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   1555c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1555e:	4606      	mov	r6, r0
   15560:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   15562:	460f      	mov	r7, r1
   15564:	b909      	cbnz	r1, 1556a <UartDev::getChar(char*, unsigned int)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   15566:	2000      	movs	r0, #0
   15568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   1556a:	6983      	ldr	r3, [r0, #24]
   1556c:	2b00      	cmp	r3, #0
   1556e:	d0fa      	beq.n	15566 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15570:	f001 fc1e 	bl	16db0 <xTaskGetSchedulerState>
   15574:	2802      	cmp	r0, #2
   15576:	d109      	bne.n	1558c <UartDev::getChar(char*, unsigned int)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   15578:	2300      	movs	r3, #0
   1557a:	4622      	mov	r2, r4
   1557c:	4639      	mov	r1, r7
   1557e:	69b0      	ldr	r0, [r6, #24]
   15580:	f001 f81e 	bl	165c0 <xQueueGenericReceive>
   15584:	3000      	adds	r0, #0
   15586:	bf18      	it	ne
   15588:	2001      	movne	r0, #1
   1558a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1558c:	f7fa ff7c 	bl	10488 <sys_get_uptime_us>
   15590:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15594:	2300      	movs	r3, #0
   15596:	f003 f9eb 	bl	18970 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   1559a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   1559c:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   1559e:	2300      	movs	r3, #0
   155a0:	4639      	mov	r1, r7
   155a2:	461a      	mov	r2, r3
   155a4:	69b0      	ldr	r0, [r6, #24]
   155a6:	f001 f80b 	bl	165c0 <xQueueGenericReceive>
   155aa:	b958      	cbnz	r0, 155c4 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   155ac:	f7fa ff6c 	bl	10488 <sys_get_uptime_us>
   155b0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   155b4:	2300      	movs	r3, #0
   155b6:	f003 f9db 	bl	18970 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   155ba:	428d      	cmp	r5, r1
   155bc:	bf08      	it	eq
   155be:	4284      	cmpeq	r4, r0
   155c0:	d2ed      	bcs.n	1559e <UartDev::getChar(char*, unsigned int)+0x42>
   155c2:	e7d0      	b.n	15566 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   155c4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   155c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000155c8 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   155c8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   155ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   155cc:	6942      	ldr	r2, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   155ce:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   155d0:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   155d4:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   155d6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   155d8:	f003 030e 	and.w	r3, r3, #14
   155dc:	2b04      	cmp	r3, #4
   155de:	d021      	beq.n	15624 <UartDev::handleInterrupt()+0x5c>
   155e0:	2b0c      	cmp	r3, #12
   155e2:	d01f      	beq.n	15624 <UartDev::handleInterrupt()+0x5c>
   155e4:	2b02      	cmp	r3, #2
   155e6:	d13f      	bne.n	15668 <UartDev::handleInterrupt()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   155e8:	69c0      	ldr	r0, [r0, #28]
   155ea:	f001 f8c0 	bl	1676e <uxQueueMessagesWaitingFromISR>
   155ee:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   155f0:	4298      	cmp	r0, r3
   155f2:	d903      	bls.n	155fc <UartDev::handleInterrupt()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   155f4:	69e0      	ldr	r0, [r4, #28]
   155f6:	f001 f8ba 	bl	1676e <uxQueueMessagesWaitingFromISR>
   155fa:	84e0      	strh	r0, [r4, #38]	; 0x26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   155fc:	2610      	movs	r6, #16
   155fe:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   15600:	aa01      	add	r2, sp, #4
   15602:	f10d 0103 	add.w	r1, sp, #3
   15606:	69e0      	ldr	r0, [r4, #28]
   15608:	f001 f874 	bl	166f4 <xQueueReceiveFromISR>
   1560c:	2800      	cmp	r0, #0
   1560e:	d12e      	bne.n	1566e <UartDev::handleInterrupt()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   15610:	b35d      	cbz	r5, 1566a <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   15612:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   15616:	4b1b      	ldr	r3, [pc, #108]	; (15684 <UartDev::handleInterrupt()+0xbc>)
   15618:	601a      	str	r2, [r3, #0]
   1561a:	f3bf 8f4f 	dsb	sy
   1561e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   15622:	e022      	b.n	1566a <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   15624:	f001 f9d8 	bl	169d8 <xTaskGetTickCountFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   15628:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   1562a:	62a0      	str	r0, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   1562c:	6963      	ldr	r3, [r4, #20]
   1562e:	7d1a      	ldrb	r2, [r3, #20]
   15630:	07d2      	lsls	r2, r2, #31
   15632:	d50e      	bpl.n	15652 <UartDev::handleInterrupt()+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   15634:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   15636:	aa01      	add	r2, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   15638:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   1563c:	f10d 0103 	add.w	r1, sp, #3
   15640:	2300      	movs	r3, #0
   15642:	69a0      	ldr	r0, [r4, #24]
   15644:	f000 ff48 	bl	164d8 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   15648:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   1564a:	2b00      	cmp	r3, #0
   1564c:	bf18      	it	ne
   1564e:	2501      	movne	r5, #1
   15650:	e7ec      	b.n	1562c <UartDev::handleInterrupt()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   15652:	69a0      	ldr	r0, [r4, #24]
   15654:	f001 f88b 	bl	1676e <uxQueueMessagesWaitingFromISR>
   15658:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   1565a:	4298      	cmp	r0, r3
   1565c:	d9d8      	bls.n	15610 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   1565e:	69a0      	ldr	r0, [r4, #24]
   15660:	f001 f885 	bl	1676e <uxQueueMessagesWaitingFromISR>
   15664:	84a0      	strh	r0, [r4, #36]	; 0x24
   15666:	e7d3      	b.n	15610 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   15668:	7d13      	ldrb	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   1566a:	b002      	add	sp, #8
   1566c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   1566e:	6963      	ldr	r3, [r4, #20]
   15670:	f89d 2003 	ldrb.w	r2, [sp, #3]
   15674:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   15676:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   15678:	2b00      	cmp	r3, #0
   1567a:	bf18      	it	ne
   1567c:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   1567e:	3e01      	subs	r6, #1
   15680:	d0c6      	beq.n	15610 <UartDev::handleInterrupt()+0x48>
   15682:	e7bd      	b.n	15600 <UartDev::handleInterrupt()+0x38>
   15684:	e000ed04 	.word	0xe000ed04

00015688 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   15688:	b538      	push	{r3, r4, r5, lr}
   1568a:	4604      	mov	r4, r0
   1568c:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   1568e:	f000 f811 	bl	156b4 <CharDev::CharDev()>
   15692:	4b06      	ldr	r3, [pc, #24]	; (156ac <UartDev::UartDev(unsigned int*)+0x24>)
   15694:	6165      	str	r5, [r4, #20]
   15696:	6023      	str	r3, [r4, #0]
   15698:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   1569a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   1569c:	61a3      	str	r3, [r4, #24]
   1569e:	61e3      	str	r3, [r4, #28]
   156a0:	6223      	str	r3, [r4, #32]
   156a2:	84a3      	strh	r3, [r4, #36]	; 0x24
   156a4:	84e3      	strh	r3, [r4, #38]	; 0x26
   156a6:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   156a8:	bd38      	pop	{r3, r4, r5, pc}
   156aa:	bf00      	nop
   156ac:	0001fd50 	.word	0x0001fd50

000156b0 <CharDev::flush()>:
_ZN7CharDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   156b0:	2001      	movs	r0, #1
   156b2:	4770      	bx	lr

000156b4 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   156b4:	4b06      	ldr	r3, [pc, #24]	; (156d0 <CharDev::CharDev()+0x1c>)
   156b6:	b510      	push	{r4, lr}
   156b8:	6003      	str	r3, [r0, #0]
   156ba:	2300      	movs	r3, #0
   156bc:	4604      	mov	r4, r0
   156be:	6043      	str	r3, [r0, #4]
   156c0:	8103      	strh	r3, [r0, #8]
   156c2:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   156c4:	2001      	movs	r0, #1
   156c6:	f000 fef5 	bl	164b4 <xQueueCreateMutex>
   156ca:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   156cc:	4620      	mov	r0, r4
   156ce:	bd10      	pop	{r4, pc}
   156d0:	0001fd80 	.word	0x0001fd80

000156d4 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   156d4:	4b04      	ldr	r3, [pc, #16]	; (156e8 <CharDev::~CharDev()+0x14>)
   156d6:	b510      	push	{r4, lr}
   156d8:	4604      	mov	r4, r0
   156da:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   156dc:	6840      	ldr	r0, [r0, #4]
   156de:	b108      	cbz	r0, 156e4 <CharDev::~CharDev()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   156e0:	f003 fd2c 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   156e4:	4620      	mov	r0, r4
   156e6:	bd10      	pop	{r4, pc}
   156e8:	0001fd80 	.word	0x0001fd80

000156ec <RIT_IRQHandler>:
RIT_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   156ec:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   156ee:	4b04      	ldr	r3, [pc, #16]	; (15700 <RIT_IRQHandler+0x14>)
   156f0:	681b      	ldr	r3, [r3, #0]
   156f2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   156f4:	4a03      	ldr	r2, [pc, #12]	; (15704 <RIT_IRQHandler+0x18>)
   156f6:	7a13      	ldrb	r3, [r2, #8]
   156f8:	f043 0301 	orr.w	r3, r3, #1
   156fc:	7213      	strb	r3, [r2, #8]
   156fe:	bd08      	pop	{r3, pc}
   15700:	2007c5ac 	.word	0x2007c5ac
   15704:	400b0000 	.word	0x400b0000

00015708 <rtc_gettime>:
rtc_gettime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   15708:	b5f0      	push	{r4, r5, r6, r7, lr}
   1570a:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1570c:	466c      	mov	r4, sp
   1570e:	4d0f      	ldr	r5, [pc, #60]	; (1574c <rtc_gettime+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   15710:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15712:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   15716:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1571a:	ae03      	add	r6, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1571c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   15720:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   15724:	220c      	movs	r2, #12
   15726:	4631      	mov	r1, r6
   15728:	4620      	mov	r0, r4
   1572a:	f003 fd2f 	bl	1918c <memcmp>
   1572e:	b938      	cbnz	r0, 15740 <rtc_gettime+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   15730:	cc03      	ldmia	r4!, {r0, r1}
   15732:	6038      	str	r0, [r7, #0]
   15734:	6820      	ldr	r0, [r4, #0]
   15736:	6079      	str	r1, [r7, #4]
   15738:	60b8      	str	r0, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   1573a:	4638      	mov	r0, r7
   1573c:	b007      	add	sp, #28
   1573e:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   15740:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   15744:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   15748:	e7e8      	b.n	1571c <rtc_gettime+0x14>
   1574a:	bf00      	nop
   1574c:	40024014 	.word	0x40024014

00015750 <rtc_settime>:
rtc_settime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   15750:	2200      	movs	r2, #0
   15752:	4b18      	ldr	r3, [pc, #96]	; (157b4 <rtc_settime+0x64>)
   15754:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   15756:	7802      	ldrb	r2, [r0, #0]
   15758:	f3c2 0205 	ubfx	r2, r2, #0, #6
   1575c:	f883 2020 	strb.w	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   15760:	7842      	ldrb	r2, [r0, #1]
   15762:	f3c2 0205 	ubfx	r2, r2, #0, #6
   15766:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   1576a:	7882      	ldrb	r2, [r0, #2]
   1576c:	f3c2 0204 	ubfx	r2, r2, #0, #5
   15770:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   15774:	78c2      	ldrb	r2, [r0, #3]
   15776:	f3c2 0202 	ubfx	r2, r2, #0, #3
   1577a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   1577e:	7902      	ldrb	r2, [r0, #4]
   15780:	f3c2 0204 	ubfx	r2, r2, #0, #5
   15784:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   15788:	7942      	ldrb	r2, [r0, #5]
   1578a:	f3c2 0203 	ubfx	r2, r2, #0, #4
   1578e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   15792:	79c1      	ldrb	r1, [r0, #7]
   15794:	7982      	ldrb	r2, [r0, #6]
   15796:	f001 010f 	and.w	r1, r1, #15
   1579a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   1579e:	7a41      	ldrb	r1, [r0, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   157a0:	879a      	strh	r2, [r3, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   157a2:	7a02      	ldrb	r2, [r0, #8]
   157a4:	f001 010f 	and.w	r1, r1, #15
   157a8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   157ac:	869a      	strh	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   157ae:	2201      	movs	r2, #1
   157b0:	721a      	strb	r2, [r3, #8]
   157b2:	4770      	bx	lr
   157b4:	40024000 	.word	0x40024000

000157b8 <rtc_init>:
rtc_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   157b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   157ba:	2101      	movs	r1, #1
   157bc:	2009      	movs	r0, #9
   157be:	f7fb f89b 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   157c2:	2201      	movs	r2, #1
   157c4:	4b2f      	ldr	r3, [pc, #188]	; (15884 <rtc_init+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   157c6:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   157c8:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   157ca:	f7ff ff9d 	bl	15708 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   157ce:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   157d2:	f603 0326 	addw	r3, r3, #2086	; 0x826
   157d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
   157da:	2b0f      	cmp	r3, #15
   157dc:	d81e      	bhi.n	1581c <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   157de:	f89d 3005 	ldrb.w	r3, [sp, #5]
   157e2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   157e6:	2b3b      	cmp	r3, #59	; 0x3b
   157e8:	dc18      	bgt.n	1581c <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   157ea:	f89d 3004 	ldrb.w	r3, [sp, #4]
   157ee:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   157f2:	2b3b      	cmp	r3, #59	; 0x3b
   157f4:	dc12      	bgt.n	1581c <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   157f6:	f89d 3006 	ldrb.w	r3, [sp, #6]
   157fa:	f003 031f 	and.w	r3, r3, #31
   157fe:	2b17      	cmp	r3, #23
   15800:	dc0c      	bgt.n	1581c <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   15802:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   15806:	f3c3 030b 	ubfx	r3, r3, #0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   1580a:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   1580e:	da05      	bge.n	1581c <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   15810:	f89d 3009 	ldrb.w	r3, [sp, #9]
   15814:	f003 030f 	and.w	r3, r3, #15
   15818:	2b0c      	cmp	r3, #12
   1581a:	dd2f      	ble.n	1587c <rtc_init+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   1581c:	2201      	movs	r2, #1
   1581e:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   15822:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   15824:	f362 0304 	bfi	r3, r2, #0, #5
   15828:	f88d 3008 	strb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   1582c:	f89d 3009 	ldrb.w	r3, [sp, #9]
   15830:	f362 0303 	bfi	r3, r2, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   15834:	f240 72da 	movw	r2, #2010	; 0x7da
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   15838:	f88d 3009 	strb.w	r3, [sp, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   1583c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   15840:	f362 030b 	bfi	r3, r2, #0, #12
   15844:	f8ad 300a 	strh.w	r3, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   15848:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1584c:	f36f 0302 	bfc	r3, #0, #3
   15850:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   15854:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15858:	f36f 0304 	bfc	r3, #0, #5
   1585c:	f88d 3006 	strb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   15860:	f89d 3005 	ldrb.w	r3, [sp, #5]
   15864:	f36f 0305 	bfc	r3, #0, #6
   15868:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   1586c:	f89d 3004 	ldrb.w	r3, [sp, #4]
   15870:	f36f 0305 	bfc	r3, #0, #6
   15874:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   15878:	f7ff ff6a 	bl	15750 <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   1587c:	b005      	add	sp, #20
   1587e:	f85d fb04 	ldr.w	pc, [sp], #4
   15882:	bf00      	nop
   15884:	40024000 	.word	0x40024000

00015888 <handle_eint_list>:
handle_eint_list():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   15888:	b570      	push	{r4, r5, r6, lr}
   1588a:	4605      	mov	r5, r0
   1588c:	460e      	mov	r6, r1
   1588e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   15890:	b10c      	cbz	r4, 15896 <handle_eint_list+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   15892:	682b      	ldr	r3, [r5, #0]
   15894:	b903      	cbnz	r3, 15898 <handle_eint_list+0x10>
   15896:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   15898:	6822      	ldr	r2, [r4, #0]
   1589a:	4213      	tst	r3, r2
   1589c:	d008      	beq.n	158b0 <handle_eint_list+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   1589e:	6863      	ldr	r3, [r4, #4]
   158a0:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   158a2:	6822      	ldr	r2, [r4, #0]
   158a4:	682b      	ldr	r3, [r5, #0]
   158a6:	ea23 0302 	bic.w	r3, r3, r2
   158aa:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   158ac:	6823      	ldr	r3, [r4, #0]
   158ae:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   158b0:	68a4      	ldr	r4, [r4, #8]
   158b2:	e7ed      	b.n	15890 <handle_eint_list+0x8>

000158b4 <eint3_enable.isra.0>:
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   158b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   158b6:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   158b8:	4084      	lsls	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   158ba:	460f      	mov	r7, r1
   158bc:	4616      	mov	r6, r2
   158be:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   158c0:	d010      	beq.n	158e4 <eint3_enable.isra.0+0x30>
   158c2:	b179      	cbz	r1, 158e4 <eint3_enable.isra.0+0x30>
   158c4:	200c      	movs	r0, #12
   158c6:	f003 fc31 	bl	1912c <malloc>
   158ca:	b158      	cbz	r0, 158e4 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   158cc:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   158d0:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   158d2:	e880 0090 	stmia.w	r0, {r4, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   158d6:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   158d8:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   158da:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   158dc:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   158de:	4b02      	ldr	r3, [pc, #8]	; (158e8 <eint3_enable.isra.0+0x34>)
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   158e0:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   158e2:	601a      	str	r2, [r3, #0]
   158e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   158e6:	bf00      	nop
   158e8:	e000e100 	.word	0xe000e100

000158ec <EINT3_IRQHandler>:
EINT3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   158ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   158ee:	4c18      	ldr	r4, [pc, #96]	; (15950 <EINT3_IRQHandler+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   158f0:	4918      	ldr	r1, [pc, #96]	; (15954 <EINT3_IRQHandler+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   158f2:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   158f4:	4668      	mov	r0, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   158f6:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   158f8:	68a3      	ldr	r3, [r4, #8]
   158fa:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   158fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
   158fe:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   15900:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   15902:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   15904:	4b14      	ldr	r3, [pc, #80]	; (15958 <EINT3_IRQHandler+0x6c>)
   15906:	681a      	ldr	r2, [r3, #0]
   15908:	f7ff ffbe 	bl	15888 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   1590c:	4b13      	ldr	r3, [pc, #76]	; (1595c <EINT3_IRQHandler+0x70>)
   1590e:	4911      	ldr	r1, [pc, #68]	; (15954 <EINT3_IRQHandler+0x68>)
   15910:	681a      	ldr	r2, [r3, #0]
   15912:	a801      	add	r0, sp, #4
   15914:	f7ff ffb8 	bl	15888 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   15918:	4b11      	ldr	r3, [pc, #68]	; (15960 <EINT3_IRQHandler+0x74>)
   1591a:	4912      	ldr	r1, [pc, #72]	; (15964 <EINT3_IRQHandler+0x78>)
   1591c:	681a      	ldr	r2, [r3, #0]
   1591e:	a802      	add	r0, sp, #8
   15920:	f7ff ffb2 	bl	15888 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   15924:	4b10      	ldr	r3, [pc, #64]	; (15968 <EINT3_IRQHandler+0x7c>)
   15926:	490f      	ldr	r1, [pc, #60]	; (15964 <EINT3_IRQHandler+0x78>)
   15928:	681a      	ldr	r2, [r3, #0]
   1592a:	a803      	add	r0, sp, #12
   1592c:	f7ff ffac 	bl	15888 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   15930:	9b00      	ldr	r3, [sp, #0]
   15932:	b90b      	cbnz	r3, 15938 <EINT3_IRQHandler+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   15934:	9b01      	ldr	r3, [sp, #4]
   15936:	b113      	cbz	r3, 1593e <EINT3_IRQHandler+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   15938:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1593c:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   1593e:	9b02      	ldr	r3, [sp, #8]
   15940:	b90b      	cbnz	r3, 15946 <EINT3_IRQHandler+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   15942:	9b03      	ldr	r3, [sp, #12]
   15944:	b113      	cbz	r3, 1594c <EINT3_IRQHandler+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   15946:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1594a:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   1594c:	b004      	add	sp, #16
   1594e:	bd10      	pop	{r4, pc}
   15950:	40028080 	.word	0x40028080
   15954:	4002808c 	.word	0x4002808c
   15958:	2007c5b4 	.word	0x2007c5b4
   1595c:	2007c5b0 	.word	0x2007c5b0
   15960:	2007c5bc 	.word	0x2007c5bc
   15964:	400280ac 	.word	0x400280ac
   15968:	2007c5b8 	.word	0x2007c5b8

0001596c <eint3_enable_port0>:
eint3_enable_port0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   1596c:	b410      	push	{r4}
   1596e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   15970:	2900      	cmp	r1, #0
   15972:	4a06      	ldr	r2, [pc, #24]	; (1598c <eint3_enable_port0+0x20>)
   15974:	4906      	ldr	r1, [pc, #24]	; (15990 <eint3_enable_port0+0x24>)
   15976:	4b07      	ldr	r3, [pc, #28]	; (15994 <eint3_enable_port0+0x28>)
   15978:	bf18      	it	ne
   1597a:	4613      	movne	r3, r2
   1597c:	4a06      	ldr	r2, [pc, #24]	; (15998 <eint3_enable_port0+0x2c>)
   1597e:	bf18      	it	ne
   15980:	460a      	movne	r2, r1
   15982:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   15984:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   15986:	f7ff bf95 	b.w	158b4 <eint3_enable.isra.0>
   1598a:	bf00      	nop
   1598c:	40028094 	.word	0x40028094
   15990:	2007c5b0 	.word	0x2007c5b0
   15994:	40028090 	.word	0x40028090
   15998:	2007c5b4 	.word	0x2007c5b4

0001599c <adc0_start_conversion>:
adc0_start_conversion():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   1599c:	4a07      	ldr	r2, [pc, #28]	; (159bc <adc0_start_conversion+0x20>)
   1599e:	6813      	ldr	r3, [r2, #0]
   159a0:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   159a4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   159a8:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   159aa:	2301      	movs	r3, #1
   159ac:	6811      	ldr	r1, [r2, #0]
   159ae:	fa03 f000 	lsl.w	r0, r3, r0
   159b2:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   159b6:	4308      	orrs	r0, r1
   159b8:	6010      	str	r0, [r2, #0]
   159ba:	4770      	bx	lr
   159bc:	40034000 	.word	0x40034000

000159c0 <ADC_IRQHandler>:
ADC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   159c0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   159c2:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   159c4:	4a0d      	ldr	r2, [pc, #52]	; (159fc <ADC_IRQHandler+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   159c6:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   159c8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   159ca:	480d      	ldr	r0, [pc, #52]	; (15a00 <ADC_IRQHandler+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   159cc:	f3c2 120b 	ubfx	r2, r2, #4, #12
   159d0:	f8ad 2002 	strh.w	r2, [sp, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   159d4:	f10d 0102 	add.w	r1, sp, #2
   159d8:	aa01      	add	r2, sp, #4
   159da:	6800      	ldr	r0, [r0, #0]
   159dc:	f000 fd7c 	bl	164d8 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   159e0:	9b01      	ldr	r3, [sp, #4]
   159e2:	b13b      	cbz	r3, 159f4 <ADC_IRQHandler+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   159e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   159e8:	4b06      	ldr	r3, [pc, #24]	; (15a04 <ADC_IRQHandler+0x44>)
   159ea:	601a      	str	r2, [r3, #0]
   159ec:	f3bf 8f4f 	dsb	sy
   159f0:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   159f4:	b003      	add	sp, #12
   159f6:	f85d fb04 	ldr.w	pc, [sp], #4
   159fa:	bf00      	nop
   159fc:	40034000 	.word	0x40034000
   15a00:	2007c5c4 	.word	0x2007c5c4
   15a04:	e000ed04 	.word	0xe000ed04

00015a08 <adc0_init>:
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   15a08:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   15a0a:	f7fa fec3 	bl	10794 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   15a0e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   15a10:	08c4      	lsrs	r4, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   15a12:	200c      	movs	r0, #12
   15a14:	f7fa ff70 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   15a18:	2103      	movs	r1, #3
   15a1a:	200c      	movs	r0, #12
   15a1c:	f7fa ff86 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15a20:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   15a24:	4a10      	ldr	r2, [pc, #64]	; (15a68 <adc0_init+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   15a26:	4911      	ldr	r1, [pc, #68]	; (15a6c <adc0_init+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   15a28:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   15a2a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   15a2c:	fbb4 f0f3 	udiv	r0, r4, r3
   15a30:	4288      	cmp	r0, r1
   15a32:	d814      	bhi.n	15a5e <adc0_init+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   15a34:	6811      	ldr	r1, [r2, #0]
   15a36:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   15a3a:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   15a3c:	2001      	movs	r0, #1
   15a3e:	f000 fd39 	bl	164b4 <xQueueCreateMutex>
   15a42:	4b0b      	ldr	r3, [pc, #44]	; (15a70 <adc0_init+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   15a44:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   15a46:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   15a48:	2102      	movs	r1, #2
   15a4a:	2001      	movs	r0, #1
   15a4c:	f000 fc96 	bl	1637c <xQueueGenericCreate>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15a50:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   15a54:	4b07      	ldr	r3, [pc, #28]	; (15a74 <adc0_init+0x6c>)
   15a56:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   15a58:	4b07      	ldr	r3, [pc, #28]	; (15a78 <adc0_init+0x70>)
   15a5a:	601a      	str	r2, [r3, #0]
   15a5c:	bd10      	pop	{r4, pc}
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   15a5e:	3302      	adds	r3, #2
   15a60:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   15a64:	d1e2      	bne.n	15a2c <adc0_init+0x24>
   15a66:	e7e9      	b.n	15a3c <adc0_init+0x34>
   15a68:	40034000 	.word	0x40034000
   15a6c:	00c65d3f 	.word	0x00c65d3f
   15a70:	2007c5c0 	.word	0x2007c5c0
   15a74:	2007c5c4 	.word	0x2007c5c4
   15a78:	e000e100 	.word	0xe000e100

00015a7c <adc0_get_reading>:
adc0_get_reading():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   15a7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   15a7e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   15a80:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   15a82:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   15a84:	f8ad 4006 	strh.w	r4, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   15a88:	d81d      	bhi.n	15ac6 <adc0_get_reading+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   15a8a:	f001 f991 	bl	16db0 <xTaskGetSchedulerState>
   15a8e:	2802      	cmp	r0, #2
   15a90:	4e15      	ldr	r6, [pc, #84]	; (15ae8 <adc0_get_reading+0x6c>)
   15a92:	d11c      	bne.n	15ace <adc0_get_reading+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   15a94:	4f15      	ldr	r7, [pc, #84]	; (15aec <adc0_get_reading+0x70>)
   15a96:	4623      	mov	r3, r4
   15a98:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15a9c:	4621      	mov	r1, r4
   15a9e:	6838      	ldr	r0, [r7, #0]
   15aa0:	f000 fd8e 	bl	165c0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   15aa4:	4628      	mov	r0, r5
   15aa6:	f7ff ff79 	bl	1599c <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   15aaa:	4623      	mov	r3, r4
   15aac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15ab0:	f10d 0106 	add.w	r1, sp, #6
   15ab4:	6830      	ldr	r0, [r6, #0]
   15ab6:	f000 fd83 	bl	165c0 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   15aba:	4623      	mov	r3, r4
   15abc:	4622      	mov	r2, r4
   15abe:	4621      	mov	r1, r4
   15ac0:	6838      	ldr	r0, [r7, #0]
   15ac2:	f000 fc75 	bl	163b0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   15ac6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   15aca:	b003      	add	sp, #12
   15acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   15ace:	4628      	mov	r0, r5
   15ad0:	f7ff ff64 	bl	1599c <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   15ad4:	2300      	movs	r3, #0
   15ad6:	f10d 0106 	add.w	r1, sp, #6
   15ada:	461a      	mov	r2, r3
   15adc:	6830      	ldr	r0, [r6, #0]
   15ade:	f000 fd6f 	bl	165c0 <xQueueGenericReceive>
   15ae2:	2800      	cmp	r0, #0
   15ae4:	d0f6      	beq.n	15ad4 <adc0_get_reading+0x58>
   15ae6:	e7ee      	b.n	15ac6 <adc0_get_reading+0x4a>
   15ae8:	2007c5c4 	.word	0x2007c5c4
   15aec:	2007c5c0 	.word	0x2007c5c0

00015af0 <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   15af0:	b510      	push	{r4, lr}
   15af2:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   15af4:	4b02      	ldr	r3, [pc, #8]	; (15b00 <Uart3::~Uart3()+0x10>)
   15af6:	6003      	str	r3, [r0, #0]
   15af8:	f7ff fdec 	bl	156d4 <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   15afc:	4620      	mov	r0, r4
   15afe:	bd10      	pop	{r4, pc}
   15b00:	0001fd50 	.word	0x0001fd50

00015b04 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   15b04:	b510      	push	{r4, lr}
   15b06:	4604      	mov	r4, r0
   15b08:	f7ff fff2 	bl	15af0 <Uart3::~Uart3()>
   15b0c:	4620      	mov	r0, r4
   15b0e:	212c      	movs	r1, #44	; 0x2c
   15b10:	f001 ff77 	bl	17a02 <operator delete(void*, unsigned int)>
   15b14:	4620      	mov	r0, r4
   15b16:	bd10      	pop	{r4, pc}

00015b18 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15b18:	b510      	push	{r4, lr}
   15b1a:	4604      	mov	r4, r0
   15b1c:	4903      	ldr	r1, [pc, #12]	; (15b2c <Uart3::Uart3()+0x14>)
   15b1e:	f7ff fdb3 	bl	15688 <UartDev::UartDev(unsigned int*)>
   15b22:	4b03      	ldr	r3, [pc, #12]	; (15b30 <Uart3::Uart3()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   15b24:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   15b26:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   15b28:	bd10      	pop	{r4, pc}
   15b2a:	bf00      	nop
   15b2c:	4009c000 	.word	0x4009c000
   15b30:	0001fde8 	.word	0x0001fde8

00015b34 <UART3_IRQHandler>:
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   15b34:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15b36:	4c07      	ldr	r4, [pc, #28]	; (15b54 <UART3_IRQHandler+0x20>)
   15b38:	6823      	ldr	r3, [r4, #0]
   15b3a:	b933      	cbnz	r3, 15b4a <UART3_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15b3c:	202c      	movs	r0, #44	; 0x2c
   15b3e:	f7ff f887 	bl	14c50 <operator new(unsigned int)>
   15b42:	4605      	mov	r5, r0
   15b44:	f7ff ffe8 	bl	15b18 <Uart3::Uart3()>
   15b48:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   15b4a:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   15b4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   15b50:	f7ff bd3a 	b.w	155c8 <UartDev::handleInterrupt()>
   15b54:	2007c5c8 	.word	0x2007c5c8

00015b58 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   15b58:	b510      	push	{r4, lr}
   15b5a:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   15b5c:	4b02      	ldr	r3, [pc, #8]	; (15b68 <Uart2::~Uart2()+0x10>)
   15b5e:	6003      	str	r3, [r0, #0]
   15b60:	f7ff fdb8 	bl	156d4 <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   15b64:	4620      	mov	r0, r4
   15b66:	bd10      	pop	{r4, pc}
   15b68:	0001fd50 	.word	0x0001fd50

00015b6c <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   15b6c:	b510      	push	{r4, lr}
   15b6e:	4604      	mov	r4, r0
   15b70:	f7ff fff2 	bl	15b58 <Uart2::~Uart2()>
   15b74:	4620      	mov	r0, r4
   15b76:	212c      	movs	r1, #44	; 0x2c
   15b78:	f001 ff43 	bl	17a02 <operator delete(void*, unsigned int)>
   15b7c:	4620      	mov	r0, r4
   15b7e:	bd10      	pop	{r4, pc}

00015b80 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   15b80:	b510      	push	{r4, lr}
   15b82:	4604      	mov	r4, r0
   15b84:	4903      	ldr	r1, [pc, #12]	; (15b94 <Uart2::Uart2()+0x14>)
   15b86:	f7ff fd7f 	bl	15688 <UartDev::UartDev(unsigned int*)>
   15b8a:	4b03      	ldr	r3, [pc, #12]	; (15b98 <Uart2::Uart2()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   15b8c:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   15b8e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   15b90:	bd10      	pop	{r4, pc}
   15b92:	bf00      	nop
   15b94:	40098000 	.word	0x40098000
   15b98:	0001fe50 	.word	0x0001fe50

00015b9c <UART2_IRQHandler>:
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   15b9c:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15b9e:	4c07      	ldr	r4, [pc, #28]	; (15bbc <UART2_IRQHandler+0x20>)
   15ba0:	6823      	ldr	r3, [r4, #0]
   15ba2:	b933      	cbnz	r3, 15bb2 <UART2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15ba4:	202c      	movs	r0, #44	; 0x2c
   15ba6:	f7ff f853 	bl	14c50 <operator new(unsigned int)>
   15baa:	4605      	mov	r5, r0
   15bac:	f7ff ffe8 	bl	15b80 <Uart2::Uart2()>
   15bb0:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   15bb2:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   15bb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   15bb8:	f7ff bd06 	b.w	155c8 <UartDev::handleInterrupt()>
   15bbc:	2007c5cc 	.word	0x2007c5cc

00015bc0 <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   15bc0:	b510      	push	{r4, lr}
   15bc2:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   15bc4:	4b02      	ldr	r3, [pc, #8]	; (15bd0 <Uart0::~Uart0()+0x10>)
   15bc6:	6003      	str	r3, [r0, #0]
   15bc8:	f7ff fd84 	bl	156d4 <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   15bcc:	4620      	mov	r0, r4
   15bce:	bd10      	pop	{r4, pc}
   15bd0:	0001fd50 	.word	0x0001fd50

00015bd4 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   15bd4:	b510      	push	{r4, lr}
   15bd6:	4604      	mov	r4, r0
   15bd8:	f7ff fff2 	bl	15bc0 <Uart0::~Uart0()>
   15bdc:	4620      	mov	r0, r4
   15bde:	212c      	movs	r1, #44	; 0x2c
   15be0:	f001 ff0f 	bl	17a02 <operator delete(void*, unsigned int)>
   15be4:	4620      	mov	r0, r4
   15be6:	bd10      	pop	{r4, pc}

00015be8 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   15be8:	b510      	push	{r4, lr}
   15bea:	4604      	mov	r4, r0
   15bec:	4903      	ldr	r1, [pc, #12]	; (15bfc <Uart0::Uart0()+0x14>)
   15bee:	f7ff fd4b 	bl	15688 <UartDev::UartDev(unsigned int*)>
   15bf2:	4b03      	ldr	r3, [pc, #12]	; (15c00 <Uart0::Uart0()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   15bf4:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   15bf6:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   15bf8:	bd10      	pop	{r4, pc}
   15bfa:	bf00      	nop
   15bfc:	4000c000 	.word	0x4000c000
   15c00:	0001feb8 	.word	0x0001feb8

00015c04 <UART0_IRQHandler>:
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   15c04:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15c06:	4c07      	ldr	r4, [pc, #28]	; (15c24 <UART0_IRQHandler+0x20>)
   15c08:	6823      	ldr	r3, [r4, #0]
   15c0a:	b933      	cbnz	r3, 15c1a <UART0_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15c0c:	202c      	movs	r0, #44	; 0x2c
   15c0e:	f7ff f81f 	bl	14c50 <operator new(unsigned int)>
   15c12:	4605      	mov	r5, r0
   15c14:	f7ff ffe8 	bl	15be8 <Uart0::Uart0()>
   15c18:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   15c1a:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   15c1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   15c20:	f7ff bcd2 	b.w	155c8 <UartDev::handleInterrupt()>
   15c24:	2007c5d0 	.word	0x2007c5d0

00015c28 <ssp1_dma_init>:
ssp1_dma_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   15c28:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   15c2a:	2101      	movs	r1, #1
   15c2c:	201d      	movs	r0, #29
   15c2e:	f7fa fe63 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   15c32:	2201      	movs	r2, #1
   15c34:	4b02      	ldr	r3, [pc, #8]	; (15c40 <ssp1_dma_init+0x18>)
   15c36:	631a      	str	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   15c38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   15c3a:	07d2      	lsls	r2, r2, #31
   15c3c:	d5fc      	bpl.n	15c38 <ssp1_dma_init+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   15c3e:	bd08      	pop	{r3, pc}
   15c40:	50004000 	.word	0x50004000

00015c44 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   15c44:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   15c48:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   15c4a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   15c4e:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   15c50:	d24a      	bcs.n	15ce8 <ssp1_dma_transfer_block+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   15c52:	4b27      	ldr	r3, [pc, #156]	; (15cf0 <ssp1_dma_transfer_block+0xac>)
   15c54:	691c      	ldr	r4, [r3, #16]
   15c56:	07e5      	lsls	r5, r4, #31
   15c58:	d448      	bmi.n	15cec <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   15c5a:	4c26      	ldr	r4, [pc, #152]	; (15cf4 <ssp1_dma_transfer_block+0xb0>)
   15c5c:	6924      	ldr	r4, [r4, #16]
   15c5e:	07e4      	lsls	r4, r4, #31
   15c60:	d444      	bmi.n	15cec <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   15c62:	4c25      	ldr	r4, [pc, #148]	; (15cf8 <ssp1_dma_transfer_block+0xb4>)
   15c64:	68e5      	ldr	r5, [r4, #12]
   15c66:	076d      	lsls	r5, r5, #29
   15c68:	d435      	bmi.n	15cd6 <ssp1_dma_transfer_block+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   15c6a:	2503      	movs	r5, #3
   15c6c:	4c23      	ldr	r4, [pc, #140]	; (15cfc <ssp1_dma_transfer_block+0xb8>)
   15c6e:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   15c70:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   15c72:	4d23      	ldr	r5, [pc, #140]	; (15d00 <ssp1_dma_transfer_block+0xbc>)
   15c74:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   15c76:	2a00      	cmp	r2, #0
   15c78:	d02f      	beq.n	15cda <ssp1_dma_transfer_block+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   15c7a:	ac01      	add	r4, sp, #4
   15c7c:	605c      	str	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   15c7e:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   15c82:	60dc      	str	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   15c84:	2400      	movs	r4, #0
   15c86:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   15c88:	f241 0406 	movw	r4, #4102	; 0x1006
   15c8c:	611c      	str	r4, [r3, #16]
   15c8e:	4c19      	ldr	r4, [pc, #100]	; (15cf4 <ssp1_dma_transfer_block+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   15c90:	b33a      	cbz	r2, 15ce2 <ssp1_dma_transfer_block+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   15c92:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   15c94:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   15c98:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   15c9a:	60e1      	str	r1, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   15c9c:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   15c9e:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   15ca0:	f44f 6208 	mov.w	r2, #2176	; 0x880
   15ca4:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   15ca6:	691a      	ldr	r2, [r3, #16]
   15ca8:	f042 0201 	orr.w	r2, r2, #1
   15cac:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   15cae:	6922      	ldr	r2, [r4, #16]
   15cb0:	f042 0201 	orr.w	r2, r2, #1
   15cb4:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   15cb6:	4a10      	ldr	r2, [pc, #64]	; (15cf8 <ssp1_dma_transfer_block+0xb4>)
   15cb8:	6a51      	ldr	r1, [r2, #36]	; 0x24
   15cba:	f041 0103 	orr.w	r1, r1, #3
   15cbe:	6251      	str	r1, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   15cc0:	68d8      	ldr	r0, [r3, #12]
   15cc2:	f3c0 000b 	ubfx	r0, r0, #0, #12
   15cc6:	2800      	cmp	r0, #0
   15cc8:	d1fa      	bne.n	15cc0 <ssp1_dma_transfer_block+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   15cca:	6a53      	ldr	r3, [r2, #36]	; 0x24
   15ccc:	f023 0303 	bic.w	r3, r3, #3
   15cd0:	6253      	str	r3, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   15cd2:	b003      	add	sp, #12
   15cd4:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   15cd6:	68a5      	ldr	r5, [r4, #8]
   15cd8:	e7c4      	b.n	15c64 <ssp1_dma_transfer_block+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   15cda:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   15cdc:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   15ce0:	e7cf      	b.n	15c82 <ssp1_dma_transfer_block+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   15ce2:	aa01      	add	r2, sp, #4
   15ce4:	6022      	str	r2, [r4, #0]
   15ce6:	e7d7      	b.n	15c98 <ssp1_dma_transfer_block+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   15ce8:	2001      	movs	r0, #1
   15cea:	e7f2      	b.n	15cd2 <ssp1_dma_transfer_block+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   15cec:	2002      	movs	r0, #2
   15cee:	e7f0      	b.n	15cd2 <ssp1_dma_transfer_block+0x8e>
   15cf0:	50004120 	.word	0x50004120
   15cf4:	50004100 	.word	0x50004100
   15cf8:	40030000 	.word	0x40030000
   15cfc:	50004000 	.word	0x50004000
   15d00:	40030008 	.word	0x40030008

00015d04 <spi1_lock>:
spi1_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   15d04:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   15d06:	4c0a      	ldr	r4, [pc, #40]	; (15d30 <spi1_lock+0x2c>)
   15d08:	6823      	ldr	r3, [r4, #0]
   15d0a:	b91b      	cbnz	r3, 15d14 <spi1_lock+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   15d0c:	2001      	movs	r0, #1
   15d0e:	f000 fbd1 	bl	164b4 <xQueueCreateMutex>
   15d12:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15d14:	f001 f84c 	bl	16db0 <xTaskGetSchedulerState>
   15d18:	2802      	cmp	r0, #2
   15d1a:	d108      	bne.n	15d2e <spi1_lock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   15d1c:	2300      	movs	r3, #0
   15d1e:	6820      	ldr	r0, [r4, #0]
   15d20:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   15d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   15d28:	4619      	mov	r1, r3
   15d2a:	f000 bc49 	b.w	165c0 <xQueueGenericReceive>
   15d2e:	bd10      	pop	{r4, pc}
   15d30:	2007c5d4 	.word	0x2007c5d4

00015d34 <spi1_unlock>:
spi1_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   15d34:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   15d36:	f001 f83b 	bl	16db0 <xTaskGetSchedulerState>
   15d3a:	2802      	cmp	r0, #2
   15d3c:	d108      	bne.n	15d50 <spi1_unlock+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   15d3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   15d42:	2300      	movs	r3, #0
   15d44:	4803      	ldr	r0, [pc, #12]	; (15d54 <spi1_unlock+0x20>)
   15d46:	461a      	mov	r2, r3
   15d48:	4619      	mov	r1, r3
   15d4a:	6800      	ldr	r0, [r0, #0]
   15d4c:	f000 bb30 	b.w	163b0 <xQueueGenericSend>
   15d50:	bd10      	pop	{r4, pc}
   15d52:	bf00      	nop
   15d54:	2007c5d4 	.word	0x2007c5d4

00015d58 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   15d58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   15d5a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   15d5c:	4b05      	ldr	r3, [pc, #20]	; (15d74 <lpc_timer_get_struct+0x1c>)
   15d5e:	f10d 0e10 	add.w	lr, sp, #16
   15d62:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   15d64:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   15d68:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   15d6c:	f854 0c10 	ldr.w	r0, [r4, #-16]
   15d70:	b004      	add	sp, #16
   15d72:	bd10      	pop	{r4, pc}
   15d74:	0001fecc 	.word	0x0001fecc

00015d78 <lpc_timer_enable>:
lpc_timer_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   15d78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15d7a:	460f      	mov	r7, r1
   15d7c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   15d7e:	f7ff ffeb 	bl	15d58 <lpc_timer_get_struct>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   15d82:	2317      	movs	r3, #23
   15d84:	2401      	movs	r4, #1
   15d86:	2216      	movs	r2, #22
   15d88:	2102      	movs	r1, #2
   15d8a:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15d8e:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   15d92:	ab02      	add	r3, sp, #8
   15d94:	441e      	add	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   15d96:	f88d 2002 	strb.w	r2, [sp, #2]
   15d9a:	f88d 1001 	strb.w	r1, [sp, #1]
   15d9e:	f88d 4000 	strb.w	r4, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   15da2:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15da4:	f88d 1005 	strb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   15da8:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   15dac:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   15dae:	f88d 2006 	strb.w	r2, [sp, #6]
   15db2:	f88d 4004 	strb.w	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   15db6:	f7fa fd9f 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   15dba:	4621      	mov	r1, r4
   15dbc:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   15dc0:	f7fa fdb4 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   15dc4:	2300      	movs	r3, #0
   15dc6:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   15dc8:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   15dca:	672b      	str	r3, [r5, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   15dcc:	f7fa fce2 	bl	10794 <sys_get_cpu_clock>
   15dd0:	4b03      	ldr	r3, [pc, #12]	; (15de0 <lpc_timer_enable+0x68>)
   15dd2:	fbb0 f0f3 	udiv	r0, r0, r3
   15dd6:	4347      	muls	r7, r0
   15dd8:	60ef      	str	r7, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   15dda:	b003      	add	sp, #12
   15ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15dde:	bf00      	nop
   15de0:	000f4240 	.word	0x000f4240

00015de4 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
}



bool I2C2::init(unsigned int speedInKhz)
{
   15de4:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15de6:	4b17      	ldr	r3, [pc, #92]	; (15e44 <I2C2::init(unsigned int)+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   15de8:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15dea:	695c      	ldr	r4, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15dec:	4b16      	ldr	r3, [pc, #88]	; (15e48 <I2C2::init(unsigned int)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   15dee:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15df0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   15df2:	201a      	movs	r0, #26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   15df4:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   15df8:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   15dfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   15dfc:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   15e00:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   15e04:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   15e06:	6e99      	ldr	r1, [r3, #104]	; 0x68
   15e08:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   15e0c:	6699      	str	r1, [r3, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   15e0e:	6819      	ldr	r1, [r3, #0]
   15e10:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   15e14:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   15e16:	6819      	ldr	r1, [r3, #0]
   15e18:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   15e1c:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   15e1e:	2103      	movs	r1, #3
   15e20:	f7fa fd84 	bl	1092c <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   15e24:	f7fa fcb6 	bl	10794 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   15e28:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   15e2c:	d106      	bne.n	15e3c <I2C2::init(unsigned int)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   15e2e:	4632      	mov	r2, r6
   15e30:	08c1      	lsrs	r1, r0, #3
   15e32:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   15e34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   15e38:	f7ff ba1e 	b.w	15278 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:134
    /**
     * Disables I2C operation
     * This can be used to disable all I2C operations in case of severe I2C Bus Failure
     * @warning Once disabled, I2C cannot be enabled again
     */
    void disableOperation() { mDisableOperation = true; }
   15e3c:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   15e3e:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:134
   15e40:	716b      	strb	r3, [r5, #5]
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   15e42:	bd70      	pop	{r4, r5, r6, pc}
   15e44:	2009c000 	.word	0x2009c000
   15e48:	4002c000 	.word	0x4002c000

00015e4c <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   15e4c:	b510      	push	{r4, lr}
   15e4e:	4604      	mov	r4, r0
   15e50:	4902      	ldr	r1, [pc, #8]	; (15e5c <I2C2::I2C2()+0x10>)
   15e52:	f7ff f9e9 	bl	15228 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   15e56:	4620      	mov	r0, r4
   15e58:	bd10      	pop	{r4, pc}
   15e5a:	bf00      	nop
   15e5c:	400a0000 	.word	0x400a0000

00015e60 <I2C2_IRQHandler>:
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   15e60:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   15e62:	4c07      	ldr	r4, [pc, #28]	; (15e80 <I2C2_IRQHandler+0x20>)
   15e64:	6823      	ldr	r3, [r4, #0]
   15e66:	b933      	cbnz	r3, 15e76 <I2C2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   15e68:	2024      	movs	r0, #36	; 0x24
   15e6a:	f7fe fef1 	bl	14c50 <operator new(unsigned int)>
   15e6e:	4605      	mov	r5, r0
   15e70:	f7ff ffec 	bl	15e4c <I2C2::I2C2()>
   15e74:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   15e76:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   15e78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   15e7c:	f7ff bb02 	b.w	15484 <I2C_Base::handleInterrupt()>
   15e80:	2007c5d8 	.word	0x2007c5d8

00015e84 <CAN_tx_now>:
CAN_tx_now():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   15e84:	6802      	ldr	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   15e86:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   15e88:	69d3      	ldr	r3, [r2, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   15e8a:	f013 0304 	ands.w	r3, r3, #4
   15e8e:	d010      	beq.n	15eb2 <CAN_tx_now+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   15e90:	f102 0330 	add.w	r3, r2, #48	; 0x30
   15e94:	f101 0410 	add.w	r4, r1, #16
   15e98:	f851 5b04 	ldr.w	r5, [r1], #4
   15e9c:	42a1      	cmp	r1, r4
   15e9e:	f843 5b04 	str.w	r5, [r3], #4
   15ea2:	d1f9      	bne.n	15e98 <CAN_tx_now+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   15ea4:	8a43      	ldrh	r3, [r0, #18]
   15ea6:	3301      	adds	r3, #1
   15ea8:	8243      	strh	r3, [r0, #18]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   15eaa:	2321      	movs	r3, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   15eac:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   15eae:	6053      	str	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   15eb0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   15eb2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   15eb4:	bd30      	pop	{r4, r5, pc}
   15eb6:	Address 0x0000000000015eb6 is out of bounds.


00015eb8 <CAN_handle_isr>:
CAN_handle_isr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   15eb8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   15ebc:	4c26      	ldr	r4, [pc, #152]	; (15f58 <CAN_handle_isr+0xa0>)
   15ebe:	0145      	lsls	r5, r0, #5
   15ec0:	f854 8005 	ldr.w	r8, [r4, r5]
   15ec4:	1967      	adds	r7, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   15ec6:	f8d8 600c 	ldr.w	r6, [r8, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   15eca:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15ece:	4333      	orrs	r3, r6
   15ed0:	07d9      	lsls	r1, r3, #31
   15ed2:	d516      	bpl.n	15f02 <CAN_handle_isr+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   15ed4:	6878      	ldr	r0, [r7, #4]
   15ed6:	f000 fc4a 	bl	1676e <uxQueueMessagesWaitingFromISR>
   15eda:	89fb      	ldrh	r3, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15edc:	f108 0120 	add.w	r1, r8, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   15ee0:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15ee2:	f04f 0300 	mov.w	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   15ee6:	bf88      	it	hi
   15ee8:	81f8      	strhhi	r0, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   15eea:	1967      	adds	r7, r4, r5
   15eec:	461a      	mov	r2, r3
   15eee:	6878      	ldr	r0, [r7, #4]
   15ef0:	f000 faf2 	bl	164d8 <xQueueGenericSendFromISR>
   15ef4:	b358      	cbz	r0, 15f4e <CAN_handle_isr+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   15ef6:	8abb      	ldrh	r3, [r7, #20]
   15ef8:	3301      	adds	r3, #1
   15efa:	82bb      	strh	r3, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   15efc:	2304      	movs	r3, #4
   15efe:	f8c8 3004 	str.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   15f02:	f240 6302 	movw	r3, #1538	; 0x602
   15f06:	421e      	tst	r6, r3
   15f08:	d012      	beq.n	15f30 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   15f0a:	1967      	adds	r7, r4, r5
   15f0c:	68b8      	ldr	r0, [r7, #8]
   15f0e:	f000 fc2e 	bl	1676e <uxQueueMessagesWaitingFromISR>
   15f12:	8a3b      	ldrh	r3, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15f14:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   15f16:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   15f18:	bf88      	it	hi
   15f1a:	8238      	strhhi	r0, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   15f1c:	1967      	adds	r7, r4, r5
   15f1e:	4669      	mov	r1, sp
   15f20:	68b8      	ldr	r0, [r7, #8]
   15f22:	f000 fbe7 	bl	166f4 <xQueueReceiveFromISR>
   15f26:	b118      	cbz	r0, 15f30 <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   15f28:	4669      	mov	r1, sp
   15f2a:	4638      	mov	r0, r7
   15f2c:	f7ff ffaa 	bl	15e84 <CAN_tx_now>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   15f30:	06b2      	lsls	r2, r6, #26
   15f32:	d503      	bpl.n	15f3c <CAN_handle_isr+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   15f34:	1963      	adds	r3, r4, r5
   15f36:	699b      	ldr	r3, [r3, #24]
   15f38:	4630      	mov	r0, r6
   15f3a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   15f3c:	0733      	lsls	r3, r6, #28
   15f3e:	d503      	bpl.n	15f48 <CAN_handle_isr+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   15f40:	442c      	add	r4, r5
   15f42:	69e3      	ldr	r3, [r4, #28]
   15f44:	4630      	mov	r0, r6
   15f46:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   15f48:	b004      	add	sp, #16
   15f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   15f4e:	89bb      	ldrh	r3, [r7, #12]
   15f50:	3301      	adds	r3, #1
   15f52:	81bb      	strh	r3, [r7, #12]
   15f54:	e7d2      	b.n	15efc <CAN_handle_isr+0x44>
   15f56:	bf00      	nop
   15f58:	2007c09c 	.word	0x2007c09c

00015f5c <CAN_IRQHandler>:
CAN_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   15f5c:	4b08      	ldr	r3, [pc, #32]	; (15f80 <CAN_IRQHandler+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   15f5e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   15f60:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   15f64:	04a2      	lsls	r2, r4, #18
   15f66:	d502      	bpl.n	15f6e <CAN_IRQHandler+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   15f68:	2000      	movs	r0, #0
   15f6a:	f7ff ffa5 	bl	15eb8 <CAN_handle_isr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   15f6e:	0463      	lsls	r3, r4, #17
   15f70:	d504      	bpl.n	15f7c <CAN_IRQHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   15f72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   15f76:	2001      	movs	r0, #1
   15f78:	f7ff bf9e 	b.w	15eb8 <CAN_handle_isr>
   15f7c:	bd10      	pop	{r4, pc}
   15f7e:	bf00      	nop
   15f80:	400fc000 	.word	0x400fc000

00015f84 <prvTaskExitError>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   15f84:	f04f 0310 	mov.w	r3, #16
   15f88:	f383 8811 	msr	BASEPRI, r3
   15f8c:	f3bf 8f6f 	isb	sy
   15f90:	f3bf 8f4f 	dsb	sy
   15f94:	e7fe      	b.n	15f94 <prvTaskExitError+0x10>
prvTaskExitError():
   15f96:	Address 0x0000000000015f96 is out of bounds.


00015f98 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
{
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   15f98:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   15f9c:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	pxTopOfStack--;
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
	pxTopOfStack--;
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   15fa0:	4b05      	ldr	r3, [pc, #20]	; (15fb8 <pxPortInitialiseStack+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   15fa2:	f021 0101 	bic.w	r1, r1, #1
   15fa6:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   15faa:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   15fae:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */

	return pxTopOfStack;
}
   15fb2:	3840      	subs	r0, #64	; 0x40
   15fb4:	4770      	bx	lr
   15fb6:	bf00      	nop
   15fb8:	00015f85 	.word	0x00015f85
   15fbc:	ffffffff 	.word	0xffffffff

00015fc0 <vPortSVCHandler>:
vPortSVCHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
   15fc0:	4b07      	ldr	r3, [pc, #28]	; (15fe0 <pxCurrentTCBConst2>)
   15fc2:	6819      	ldr	r1, [r3, #0]
   15fc4:	6808      	ldr	r0, [r1, #0]
   15fc6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   15fca:	f380 8809 	msr	PSP, r0
   15fce:	f3bf 8f6f 	isb	sy
   15fd2:	f04f 0000 	mov.w	r0, #0
   15fd6:	f380 8811 	msr	BASEPRI, r0
   15fda:	f04e 0e0d 	orr.w	lr, lr, #13
   15fde:	4770      	bx	lr

00015fe0 <pxCurrentTCBConst2>:
   15fe0:	2007c5e8 	.word	0x2007c5e8

00015fe4 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   15fe4:	f04f 0310 	mov.w	r3, #16
   15fe8:	f383 8811 	msr	BASEPRI, r3
   15fec:	f3bf 8f6f 	isb	sy
   15ff0:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   15ff4:	4a02      	ldr	r2, [pc, #8]	; (16000 <vPortEnterCritical+0x1c>)
   15ff6:	6813      	ldr	r3, [r2, #0]
   15ff8:	3301      	adds	r3, #1
   15ffa:	6013      	str	r3, [r2, #0]
   15ffc:	4770      	bx	lr
   15ffe:	bf00      	nop
   16000:	2007c5dc 	.word	0x2007c5dc

00016004 <vPortExitCritical>:
vPortExitCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   16004:	4a03      	ldr	r2, [pc, #12]	; (16014 <vPortExitCritical+0x10>)
   16006:	6813      	ldr	r3, [r2, #0]
   16008:	3b01      	subs	r3, #1
   1600a:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   1600c:	b90b      	cbnz	r3, 16012 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   1600e:	f383 8811 	msr	BASEPRI, r3
   16012:	4770      	bx	lr
   16014:	2007c5dc 	.word	0x2007c5dc
vPortExitCritical():
   16018:	ffffffff 	.word	0xffffffff
   1601c:	ffffffff 	.word	0xffffffff

00016020 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   16020:	f3ef 8009 	mrs	r0, PSP
   16024:	f3bf 8f6f 	isb	sy
   16028:	4b0d      	ldr	r3, [pc, #52]	; (16060 <pxCurrentTCBConst>)
   1602a:	681a      	ldr	r2, [r3, #0]
   1602c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   16030:	6010      	str	r0, [r2, #0]
   16032:	e92d 4008 	stmdb	sp!, {r3, lr}
   16036:	f04f 0010 	mov.w	r0, #16
   1603a:	f380 8811 	msr	BASEPRI, r0
   1603e:	f000 fddb 	bl	16bf8 <vTaskSwitchContext>
   16042:	f04f 0000 	mov.w	r0, #0
   16046:	f380 8811 	msr	BASEPRI, r0
   1604a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1604e:	6819      	ldr	r1, [r3, #0]
   16050:	6808      	ldr	r0, [r1, #0]
   16052:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   16056:	f380 8809 	msr	PSP, r0
   1605a:	f3bf 8f6f 	isb	sy
   1605e:	4770      	bx	lr

00016060 <pxCurrentTCBConst>:
   16060:	2007c5e8 	.word	0x2007c5e8

00016064 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   16064:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   16066:	f04f 0310 	mov.w	r3, #16
   1606a:	f383 8811 	msr	BASEPRI, r3
   1606e:	f3bf 8f6f 	isb	sy
   16072:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   16076:	f000 fcb5 	bl	169e4 <xTaskIncrementTick>
   1607a:	b118      	cbz	r0, 16084 <xPortSysTickHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   1607c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16080:	4b02      	ldr	r3, [pc, #8]	; (1608c <xPortSysTickHandler+0x28>)
   16082:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16084:	2300      	movs	r3, #0
   16086:	f383 8811 	msr	BASEPRI, r3
   1608a:	bd08      	pop	{r3, pc}
   1608c:	e000ed04 	.word	0xe000ed04

00016090 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
}

unsigned int rts_not_full_trace_get()
{
   16090:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   16092:	f7fa f9f9 	bl	10488 <sys_get_uptime_us>
   16096:	4b02      	ldr	r3, [pc, #8]	; (160a0 <rts_not_full_trace_get+0x10>)
   16098:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   1609a:	1ac0      	subs	r0, r0, r3
   1609c:	bd08      	pop	{r3, pc}
   1609e:	bf00      	nop
   160a0:	2007c5e0 	.word	0x2007c5e0

000160a4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   160a4:	b510      	push	{r4, lr}
   160a6:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   160a8:	4809      	ldr	r0, [pc, #36]	; (160d0 <vApplicationStackOverflowHook+0x2c>)
   160aa:	f7fe fcb3 	bl	14a14 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   160ae:	4620      	mov	r0, r4
   160b0:	f7fe fcb0 	bl	14a14 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   160b4:	4807      	ldr	r0, [pc, #28]	; (160d4 <vApplicationStackOverflowHook+0x30>)
   160b6:	f7fe fcad 	bl	14a14 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   160ba:	4807      	ldr	r0, [pc, #28]	; (160d8 <vApplicationStackOverflowHook+0x34>)
   160bc:	f7fe fd6c 	bl	14b98 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   160c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   160c4:	22aa      	movs	r2, #170	; 0xaa
   160c6:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   160c8:	2200      	movs	r2, #0
   160ca:	701a      	strb	r2, [r3, #0]
   160cc:	bd10      	pop	{r4, pc}
   160ce:	bf00      	nop
   160d0:	0001ff12 	.word	0x0001ff12
   160d4:	0001ff3b 	.word	0x0001ff3b
   160d8:	002dc6c0 	.word	0x002dc6c0

000160dc <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   160dc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   160de:	4806      	ldr	r0, [pc, #24]	; (160f8 <vApplicationMallocFailedHook+0x1c>)
   160e0:	f7fe fc98 	bl	14a14 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   160e4:	4805      	ldr	r0, [pc, #20]	; (160fc <vApplicationMallocFailedHook+0x20>)
   160e6:	f7fe fd57 	bl	14b98 <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   160ea:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   160ee:	22aa      	movs	r2, #170	; 0xaa
   160f0:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   160f2:	2200      	movs	r2, #0
   160f4:	701a      	strb	r2, [r3, #0]
   160f6:	bd08      	pop	{r3, pc}
   160f8:	0001fedc 	.word	0x0001fedc
   160fc:	002dc6c0 	.word	0x002dc6c0

00016100 <pvPortMalloc>:
pvPortMalloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   16100:	b510      	push	{r4, lr}
   16102:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   16104:	f000 fc60 	bl	169c8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   16108:	4620      	mov	r0, r4
   1610a:	f003 f80f 	bl	1912c <malloc>
   1610e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   16110:	f000 fcee 	bl	16af0 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   16114:	b90c      	cbnz	r4, 1611a <pvPortMalloc+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   16116:	f7ff ffe1 	bl	160dc <vApplicationMallocFailedHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   1611a:	4620      	mov	r0, r4
   1611c:	bd10      	pop	{r4, pc}

0001611e <vPortFree>:
vPortFree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   1611e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   16120:	4604      	mov	r4, r0
   16122:	b140      	cbz	r0, 16136 <vPortFree+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   16124:	f000 fc50 	bl	169c8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   16128:	4620      	mov	r0, r4
   1612a:	f003 f807 	bl	1913c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   1612e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   16132:	f000 bcdd 	b.w	16af0 <xTaskResumeAll>
   16136:	bd10      	pop	{r4, pc}

00016138 <vListInitialise>:
vListInitialise():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16138:	f100 0308 	add.w	r3, r0, #8
   1613c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   1613e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16142:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   16144:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   16146:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   16148:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   1614a:	6003      	str	r3, [r0, #0]
   1614c:	4770      	bx	lr

0001614e <vListInitialiseItem>:
vListInitialiseItem():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   1614e:	2300      	movs	r3, #0
   16150:	6103      	str	r3, [r0, #16]
   16152:	4770      	bx	lr

00016154 <vListInsertEnd>:
vListInsertEnd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   16154:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   16156:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   16158:	604b      	str	r3, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   1615a:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   1615c:	689a      	ldr	r2, [r3, #8]
   1615e:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   16160:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   16162:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   16164:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   16166:	3301      	adds	r3, #1
   16168:	6003      	str	r3, [r0, #0]
   1616a:	4770      	bx	lr

0001616c <vListInsert>:
vListInsert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   1616c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   1616e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   16170:	1c53      	adds	r3, r2, #1
   16172:	d10a      	bne.n	1618a <vListInsert+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   16174:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   16176:	685a      	ldr	r2, [r3, #4]
   16178:	604a      	str	r2, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   1617a:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   1617c:	608b      	str	r3, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   1617e:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   16180:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   16182:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   16184:	3301      	adds	r3, #1
   16186:	6003      	str	r3, [r0, #0]
   16188:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   1618a:	f100 0308 	add.w	r3, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   1618e:	685c      	ldr	r4, [r3, #4]
   16190:	6825      	ldr	r5, [r4, #0]
   16192:	42aa      	cmp	r2, r5
   16194:	d3ef      	bcc.n	16176 <vListInsert+0xa>
   16196:	4623      	mov	r3, r4
   16198:	e7f9      	b.n	1618e <vListInsert+0x22>

0001619a <uxListRemove>:
uxListRemove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   1619a:	6841      	ldr	r1, [r0, #4]
   1619c:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   1619e:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   161a0:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   161a2:	6882      	ldr	r2, [r0, #8]
   161a4:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   161a6:	6859      	ldr	r1, [r3, #4]
   161a8:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   161aa:	bf08      	it	eq
   161ac:	605a      	streq	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   161ae:	2200      	movs	r2, #0
   161b0:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   161b2:	6818      	ldr	r0, [r3, #0]
   161b4:	3801      	subs	r0, #1
   161b6:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   161b8:	4770      	bx	lr

000161ba <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   161ba:	b570      	push	{r4, r5, r6, lr}
   161bc:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   161be:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   161c0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   161c2:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   161c4:	b942      	cbnz	r2, 161d8 <prvCopyDataToQueue+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   161c6:	6805      	ldr	r5, [r0, #0]
   161c8:	b99d      	cbnz	r5, 161f2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   161ca:	6840      	ldr	r0, [r0, #4]
   161cc:	f000 fe48 	bl	16e60 <xTaskPriorityDisinherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   161d0:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   161d2:	3601      	adds	r6, #1
   161d4:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   161d6:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   161d8:	b96d      	cbnz	r5, 161f6 <prvCopyDataToQueue+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   161da:	6880      	ldr	r0, [r0, #8]
   161dc:	f002 ffe5 	bl	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   161e0:	68a3      	ldr	r3, [r4, #8]
   161e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
   161e4:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   161e6:	6862      	ldr	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   161e8:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   161ea:	4293      	cmp	r3, r2
   161ec:	d301      	bcc.n	161f2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   161ee:	6823      	ldr	r3, [r4, #0]
   161f0:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   161f2:	2000      	movs	r0, #0
   161f4:	e7ed      	b.n	161d2 <prvCopyDataToQueue+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   161f6:	68c0      	ldr	r0, [r0, #12]
   161f8:	f002 ffd7 	bl	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   161fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
   161fe:	68e2      	ldr	r2, [r4, #12]
   16200:	425b      	negs	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16202:	6821      	ldr	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16204:	441a      	add	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   16206:	428a      	cmp	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   16208:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   1620a:	bf3e      	ittt	cc
   1620c:	6862      	ldrcc	r2, [r4, #4]
   1620e:	189b      	addcc	r3, r3, r2
   16210:	60e3      	strcc	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   16212:	2d02      	cmp	r5, #2
   16214:	d1ed      	bne.n	161f2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16216:	b10e      	cbz	r6, 1621c <prvCopyDataToQueue+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   16218:	3e01      	subs	r6, #1
   1621a:	e7ea      	b.n	161f2 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   1621c:	4630      	mov	r0, r6
   1621e:	e7d8      	b.n	161d2 <prvCopyDataToQueue+0x18>

00016220 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   16220:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   16222:	6c85      	ldr	r5, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   16224:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   16226:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   16228:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   1622a:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   1622c:	4299      	cmp	r1, r3
   1622e:	d21a      	bcs.n	16266 <prvNotifyQueueSetContainer+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16230:	a901      	add	r1, sp, #4
   16232:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   16234:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16238:	f7ff ffbf 	bl	161ba <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   1623c:	b264      	sxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   1623e:	1c63      	adds	r3, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   16240:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   16242:	d10b      	bne.n	1625c <prvNotifyQueueSetContainer+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   16244:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   16246:	b133      	cbz	r3, 16256 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   16248:	f105 0024 	add.w	r0, r5, #36	; 0x24
   1624c:	f000 fd40 	bl	16cd0 <xTaskRemoveFromEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   16250:	2800      	cmp	r0, #0
   16252:	bf18      	it	ne
   16254:	2601      	movne	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   16256:	4630      	mov	r0, r6
   16258:	b002      	add	sp, #8
   1625a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1625c:	3401      	adds	r4, #1
   1625e:	b264      	sxtb	r4, r4
   16260:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   16264:	e7f7      	b.n	16256 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   16266:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   16268:	e7f5      	b.n	16256 <prvNotifyQueueSetContainer+0x36>

0001626a <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1626a:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   1626c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   1626e:	b410      	push	{r4}
   16270:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   16272:	b162      	cbz	r2, 1628e <prvCopyDataFromQueue+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   16274:	68d9      	ldr	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   16276:	685c      	ldr	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   16278:	4411      	add	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   1627a:	42a1      	cmp	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   1627c:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   1627e:	bf28      	it	cs
   16280:	6819      	ldrcs	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   16282:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   16284:	bf28      	it	cs
   16286:	60d9      	strcs	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   16288:	68d9      	ldr	r1, [r3, #12]
   1628a:	f002 bf8e 	b.w	191aa <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   1628e:	bc10      	pop	{r4}
   16290:	4770      	bx	lr

00016292 <prvUnlockQueue>:
prvUnlockQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   16292:	b570      	push	{r4, r5, r6, lr}
   16294:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   16296:	f7ff fea5 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   1629a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1629e:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   162a2:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   162a4:	2d00      	cmp	r5, #0
   162a6:	dc14      	bgt.n	162d2 <prvUnlockQueue+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   162a8:	23ff      	movs	r3, #255	; 0xff
   162aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   162ae:	f7ff fea9 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   162b2:	f7ff fe97 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   162b6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   162ba:	f104 0610 	add.w	r6, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   162be:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   162c0:	2d00      	cmp	r5, #0
   162c2:	dc19      	bgt.n	162f8 <prvUnlockQueue+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   162c4:	23ff      	movs	r3, #255	; 0xff
   162c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   162ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   162ce:	f7ff be99 	b.w	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   162d2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   162d4:	b14b      	cbz	r3, 162ea <prvUnlockQueue+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   162d6:	2100      	movs	r1, #0
   162d8:	4620      	mov	r0, r4
   162da:	f7ff ffa1 	bl	16220 <prvNotifyQueueSetContainer>
   162de:	b108      	cbz	r0, 162e4 <prvUnlockQueue+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   162e0:	f000 fd60 	bl	16da4 <vTaskMissedYield>
   162e4:	3d01      	subs	r5, #1
   162e6:	b26d      	sxtb	r5, r5
   162e8:	e7dc      	b.n	162a4 <prvUnlockQueue+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   162ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
   162ec:	2b00      	cmp	r3, #0
   162ee:	d0db      	beq.n	162a8 <prvUnlockQueue+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   162f0:	4630      	mov	r0, r6
   162f2:	f000 fced 	bl	16cd0 <xTaskRemoveFromEventList>
   162f6:	e7f2      	b.n	162de <prvUnlockQueue+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   162f8:	6923      	ldr	r3, [r4, #16]
   162fa:	2b00      	cmp	r3, #0
   162fc:	d0e2      	beq.n	162c4 <prvUnlockQueue+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   162fe:	4630      	mov	r0, r6
   16300:	f000 fce6 	bl	16cd0 <xTaskRemoveFromEventList>
   16304:	b108      	cbz	r0, 1630a <prvUnlockQueue+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   16306:	f000 fd4d 	bl	16da4 <vTaskMissedYield>
   1630a:	3d01      	subs	r5, #1
   1630c:	b26d      	sxtb	r5, r5
   1630e:	e7d7      	b.n	162c0 <prvUnlockQueue+0x2e>

00016310 <xQueueGenericReset>:
xQueueGenericReset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   16310:	b538      	push	{r3, r4, r5, lr}
   16312:	4604      	mov	r4, r0
   16314:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   16316:	f7ff fe65 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   1631a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1631c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1631e:	6822      	ldr	r2, [r4, #0]
   16320:	4343      	muls	r3, r0
   16322:	18d1      	adds	r1, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   16324:	1a1b      	subs	r3, r3, r0
   16326:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   16328:	6061      	str	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   1632a:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   1632c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   1632e:	23ff      	movs	r3, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   16330:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   16332:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   16334:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   16338:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   1633c:	b995      	cbnz	r5, 16364 <xQueueGenericReset+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1633e:	6923      	ldr	r3, [r4, #16]
   16340:	b163      	cbz	r3, 1635c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16342:	f104 0010 	add.w	r0, r4, #16
   16346:	f000 fcc3 	bl	16cd0 <xTaskRemoveFromEventList>
   1634a:	b138      	cbz	r0, 1635c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   1634c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16350:	4b09      	ldr	r3, [pc, #36]	; (16378 <xQueueGenericReset+0x68>)
   16352:	601a      	str	r2, [r3, #0]
   16354:	f3bf 8f4f 	dsb	sy
   16358:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   1635c:	f7ff fe52 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   16360:	2001      	movs	r0, #1
   16362:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   16364:	f104 0010 	add.w	r0, r4, #16
   16368:	f7ff fee6 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   1636c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16370:	f7ff fee2 	bl	16138 <vListInitialise>
   16374:	e7f2      	b.n	1635c <xQueueGenericReset+0x4c>
   16376:	bf00      	nop
   16378:	e000ed04 	.word	0xe000ed04

0001637c <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   1637c:	b570      	push	{r4, r5, r6, lr}
   1637e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16380:	4348      	muls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   16382:	304c      	adds	r0, #76	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   16384:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   16386:	f7ff febb 	bl	16100 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   1638a:	4604      	mov	r4, r0
   1638c:	b148      	cbz	r0, 163a2 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   1638e:	b955      	cbnz	r5, 163a6 <xQueueGenericCreate+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   16390:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   16392:	63e6      	str	r6, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   16394:	6425      	str	r5, [r4, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   16396:	2101      	movs	r1, #1
   16398:	4620      	mov	r0, r4
   1639a:	f7ff ffb9 	bl	16310 <xQueueGenericReset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   1639e:	2300      	movs	r3, #0
   163a0:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   163a2:	4620      	mov	r0, r4
   163a4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   163a6:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   163aa:	6003      	str	r3, [r0, #0]
   163ac:	e7f1      	b.n	16392 <xQueueGenericCreate+0x16>
xQueueGenericCreate():
   163ae:	Address 0x00000000000163ae is out of bounds.


000163b0 <xQueueGenericSend>:
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   163b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   163b4:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   163b6:	4604      	mov	r4, r0
   163b8:	4689      	mov	r9, r1
   163ba:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   163bc:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   163be:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 164b0 <xQueueGenericSend+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   163c2:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   163c4:	f7ff fe0e 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   163c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   163ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   163cc:	429a      	cmp	r2, r3
   163ce:	d301      	bcc.n	163d4 <xQueueGenericSend+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   163d0:	2e02      	cmp	r6, #2
   163d2:	d121      	bne.n	16418 <xQueueGenericSend+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   163d4:	4632      	mov	r2, r6
   163d6:	4649      	mov	r1, r9
   163d8:	4620      	mov	r0, r4
   163da:	f7ff feee 	bl	161ba <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   163de:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   163e0:	b193      	cbz	r3, 16408 <xQueueGenericSend+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   163e2:	4631      	mov	r1, r6
   163e4:	4620      	mov	r0, r4
   163e6:	f7ff ff1b 	bl	16220 <prvNotifyQueueSetContainer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   163ea:	b138      	cbz	r0, 163fc <xQueueGenericSend+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   163ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   163f0:	4b2f      	ldr	r3, [pc, #188]	; (164b0 <xQueueGenericSend+0x100>)
   163f2:	601a      	str	r2, [r3, #0]
   163f4:	f3bf 8f4f 	dsb	sy
   163f8:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   163fc:	f7ff fe02 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   16400:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   16402:	b004      	add	sp, #16
   16404:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16408:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1640a:	2b00      	cmp	r3, #0
   1640c:	d0ed      	beq.n	163ea <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1640e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16412:	f000 fc5d 	bl	16cd0 <xTaskRemoveFromEventList>
   16416:	e7e8      	b.n	163ea <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   16418:	9d01      	ldr	r5, [sp, #4]
   1641a:	b91d      	cbnz	r5, 16424 <xQueueGenericSend+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   1641c:	f7ff fdf2 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   16420:	2000      	movs	r0, #0
   16422:	e7ee      	b.n	16402 <xQueueGenericSend+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   16424:	b917      	cbnz	r7, 1642c <xQueueGenericSend+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   16426:	a802      	add	r0, sp, #8
   16428:	f000 fc8a 	bl	16d40 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   1642c:	f7ff fdea 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   16430:	f000 faca 	bl	169c8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   16434:	f7ff fdd6 	bl	15fe4 <vPortEnterCritical>
   16438:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1643c:	2bff      	cmp	r3, #255	; 0xff
   1643e:	bf08      	it	eq
   16440:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   16444:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16448:	2bff      	cmp	r3, #255	; 0xff
   1644a:	bf08      	it	eq
   1644c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   16450:	f7ff fdd8 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   16454:	a901      	add	r1, sp, #4
   16456:	a802      	add	r0, sp, #8
   16458:	f000 fc7e 	bl	16d58 <xTaskCheckForTimeOut>
   1645c:	bb10      	cbnz	r0, 164a4 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   1645e:	f7ff fdc1 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   16462:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   16464:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   16466:	f7ff fdcd 	bl	16004 <vPortExitCritical>
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   1646a:	42af      	cmp	r7, r5
   1646c:	d114      	bne.n	16498 <xQueueGenericSend+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   1646e:	9901      	ldr	r1, [sp, #4]
   16470:	f104 0010 	add.w	r0, r4, #16
   16474:	f000 fc1c 	bl	16cb0 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   16478:	4620      	mov	r0, r4
   1647a:	f7ff ff0a 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   1647e:	f000 fb37 	bl	16af0 <xTaskResumeAll>
   16482:	b938      	cbnz	r0, 16494 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   16484:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   16488:	f8ca 3000 	str.w	r3, [sl]
   1648c:	f3bf 8f4f 	dsb	sy
   16490:	f3bf 8f6f 	isb	sy
   16494:	2701      	movs	r7, #1
   16496:	e795      	b.n	163c4 <xQueueGenericSend+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   16498:	4620      	mov	r0, r4
   1649a:	f7ff fefa 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   1649e:	f000 fb27 	bl	16af0 <xTaskResumeAll>
   164a2:	e7f7      	b.n	16494 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   164a4:	4620      	mov	r0, r4
   164a6:	f7ff fef4 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   164aa:	f000 fb21 	bl	16af0 <xTaskResumeAll>
   164ae:	e7b7      	b.n	16420 <xQueueGenericSend+0x70>
   164b0:	e000ed04 	.word	0xe000ed04

000164b4 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   164b4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   164b6:	4602      	mov	r2, r0
   164b8:	2100      	movs	r1, #0
   164ba:	2001      	movs	r0, #1
   164bc:	f7ff ff5e 	bl	1637c <xQueueGenericCreate>
prvInitialiseMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   164c0:	4604      	mov	r4, r0
   164c2:	b138      	cbz	r0, 164d4 <xQueueCreateMutex+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   164c4:	2300      	movs	r3, #0
   164c6:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   164c8:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   164ca:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   164cc:	461a      	mov	r2, r3
   164ce:	4619      	mov	r1, r3
   164d0:	f7ff ff6e 	bl	163b0 <xQueueGenericSend>
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   164d4:	4620      	mov	r0, r4
   164d6:	bd10      	pop	{r4, pc}

000164d8 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   164d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   164dc:	4604      	mov	r4, r0
   164de:	4690      	mov	r8, r2
   164e0:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   164e2:	f3ef 8611 	mrs	r6, BASEPRI
   164e6:	f04f 0310 	mov.w	r3, #16
   164ea:	f383 8811 	msr	BASEPRI, r3
   164ee:	f3bf 8f6f 	isb	sy
   164f2:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   164f6:	6b82      	ldr	r2, [r0, #56]	; 0x38
   164f8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   164fa:	429a      	cmp	r2, r3
   164fc:	d301      	bcc.n	16502 <xQueueGenericSendFromISR+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   164fe:	2f02      	cmp	r7, #2
   16500:	d128      	bne.n	16554 <xQueueGenericSendFromISR+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16502:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   16506:	463a      	mov	r2, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   16508:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   1650a:	4620      	mov	r0, r4
   1650c:	f7ff fe55 	bl	161ba <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   16510:	1c6b      	adds	r3, r5, #1
   16512:	d11a      	bne.n	1654a <xQueueGenericSendFromISR+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   16514:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   16516:	b183      	cbz	r3, 1653a <xQueueGenericSendFromISR+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   16518:	4639      	mov	r1, r7
   1651a:	4620      	mov	r0, r4
   1651c:	f7ff fe80 	bl	16220 <prvNotifyQueueSetContainer>
   16520:	b908      	cbnz	r0, 16526 <xQueueGenericSendFromISR+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   16522:	2001      	movs	r0, #1
   16524:	e005      	b.n	16532 <xQueueGenericSendFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   16526:	f1b8 0f00 	cmp.w	r8, #0
   1652a:	d0fa      	beq.n	16522 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   1652c:	2001      	movs	r0, #1
   1652e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16532:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   16536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1653a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1653c:	2b00      	cmp	r3, #0
   1653e:	d0f0      	beq.n	16522 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16540:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16544:	f000 fbc4 	bl	16cd0 <xTaskRemoveFromEventList>
   16548:	e7ea      	b.n	16520 <xQueueGenericSendFromISR+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   1654a:	3501      	adds	r5, #1
   1654c:	b26d      	sxtb	r5, r5
   1654e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   16552:	e7e6      	b.n	16522 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   16554:	2000      	movs	r0, #0
   16556:	e7ec      	b.n	16532 <xQueueGenericSendFromISR+0x5a>

00016558 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   16558:	b538      	push	{r3, r4, r5, lr}
   1655a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1655c:	f3ef 8411 	mrs	r4, BASEPRI
   16560:	f04f 0210 	mov.w	r2, #16
   16564:	f382 8811 	msr	BASEPRI, r2
   16568:	f3bf 8f6f 	isb	sy
   1656c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   16570:	6b81      	ldr	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   16572:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   16574:	4291      	cmp	r1, r2
   16576:	d221      	bcs.n	165bc <xQueueGiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   16578:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   1657c:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   1657e:	b252      	sxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   16580:	6381      	str	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   16582:	1c51      	adds	r1, r2, #1
   16584:	d115      	bne.n	165b2 <xQueueGiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   16586:	6c82      	ldr	r2, [r0, #72]	; 0x48
   16588:	b162      	cbz	r2, 165a4 <xQueueGiveFromISR+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   1658a:	2100      	movs	r1, #0
   1658c:	f7ff fe48 	bl	16220 <prvNotifyQueueSetContainer>
   16590:	b908      	cbnz	r0, 16596 <xQueueGiveFromISR+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   16592:	2001      	movs	r0, #1
   16594:	e003      	b.n	1659e <xQueueGiveFromISR+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   16596:	2d00      	cmp	r5, #0
   16598:	d0fb      	beq.n	16592 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   1659a:	2001      	movs	r0, #1
   1659c:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   1659e:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   165a2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   165a4:	6a42      	ldr	r2, [r0, #36]	; 0x24
   165a6:	2a00      	cmp	r2, #0
   165a8:	d0f3      	beq.n	16592 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   165aa:	3024      	adds	r0, #36	; 0x24
   165ac:	f000 fb90 	bl	16cd0 <xTaskRemoveFromEventList>
   165b0:	e7ee      	b.n	16590 <xQueueGiveFromISR+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   165b2:	3201      	adds	r2, #1
   165b4:	b252      	sxtb	r2, r2
   165b6:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   165ba:	e7ea      	b.n	16592 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   165bc:	2000      	movs	r0, #0
   165be:	e7ee      	b.n	1659e <xQueueGiveFromISR+0x46>

000165c0 <xQueueGenericReceive>:
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   165c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   165c4:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   165c8:	4604      	mov	r4, r0
   165ca:	460f      	mov	r7, r1
   165cc:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   165ce:	4656      	mov	r6, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   165d0:	f8df 911c 	ldr.w	r9, [pc, #284]	; 166f0 <xQueueGenericReceive+0x130>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   165d4:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   165d6:	f7ff fd05 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   165da:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   165dc:	b355      	cbz	r5, 16634 <xQueueGenericReceive+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   165de:	4639      	mov	r1, r7
   165e0:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   165e2:	68e6      	ldr	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   165e4:	f7ff fe41 	bl	1626a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   165e8:	f1b8 0f00 	cmp.w	r8, #0
   165ec:	d11b      	bne.n	16626 <xQueueGenericReceive+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   165ee:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   165f0:	3d01      	subs	r5, #1
   165f2:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   165f4:	b913      	cbnz	r3, 165fc <xQueueGenericReceive+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   165f6:	f000 fc6b 	bl	16ed0 <pvTaskIncrementMutexHeldCount>
   165fa:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   165fc:	6923      	ldr	r3, [r4, #16]
   165fe:	b163      	cbz	r3, 1661a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   16600:	f104 0010 	add.w	r0, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   16604:	f000 fb64 	bl	16cd0 <xTaskRemoveFromEventList>
   16608:	b138      	cbz	r0, 1661a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   1660a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1660e:	4b38      	ldr	r3, [pc, #224]	; (166f0 <xQueueGenericReceive+0x130>)
   16610:	601a      	str	r2, [r3, #0]
   16612:	f3bf 8f4f 	dsb	sy
   16616:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   1661a:	f7ff fcf3 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   1661e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   16620:	b004      	add	sp, #16
   16622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   16626:	6a63      	ldr	r3, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   16628:	60e6      	str	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1662a:	2b00      	cmp	r3, #0
   1662c:	d0f5      	beq.n	1661a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1662e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   16632:	e7e7      	b.n	16604 <xQueueGenericReceive+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   16634:	9d01      	ldr	r5, [sp, #4]
   16636:	b91d      	cbnz	r5, 16640 <xQueueGenericReceive+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   16638:	f7ff fce4 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   1663c:	4628      	mov	r0, r5
   1663e:	e7ef      	b.n	16620 <xQueueGenericReceive+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   16640:	f1ba 0f00 	cmp.w	sl, #0
   16644:	d102      	bne.n	1664c <xQueueGenericReceive+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   16646:	a802      	add	r0, sp, #8
   16648:	f000 fb7a 	bl	16d40 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   1664c:	f7ff fcda 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   16650:	f000 f9ba 	bl	169c8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   16654:	f7ff fcc6 	bl	15fe4 <vPortEnterCritical>
   16658:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1665c:	2bff      	cmp	r3, #255	; 0xff
   1665e:	bf08      	it	eq
   16660:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   16664:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   16668:	2bff      	cmp	r3, #255	; 0xff
   1666a:	bf08      	it	eq
   1666c:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   16670:	f7ff fcc8 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   16674:	a901      	add	r1, sp, #4
   16676:	a802      	add	r0, sp, #8
   16678:	f000 fb6e 	bl	16d58 <xTaskCheckForTimeOut>
   1667c:	bb50      	cbnz	r0, 166d4 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   1667e:	f7ff fcb1 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   16682:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   16684:	f7ff fcbe 	bl	16004 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   16688:	b9f5      	cbnz	r5, 166c8 <xQueueGenericReceive+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   1668a:	6823      	ldr	r3, [r4, #0]
   1668c:	b933      	cbnz	r3, 1669c <xQueueGenericReceive+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   1668e:	f7ff fca9 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   16692:	6860      	ldr	r0, [r4, #4]
   16694:	f000 fb9c 	bl	16dd0 <vTaskPriorityInherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   16698:	f7ff fcb4 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   1669c:	9901      	ldr	r1, [sp, #4]
   1669e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   166a2:	f000 fb05 	bl	16cb0 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   166a6:	4620      	mov	r0, r4
   166a8:	f7ff fdf3 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   166ac:	f000 fa20 	bl	16af0 <xTaskResumeAll>
   166b0:	b938      	cbnz	r0, 166c2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   166b2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   166b6:	f8c9 3000 	str.w	r3, [r9]
   166ba:	f3bf 8f4f 	dsb	sy
   166be:	f3bf 8f6f 	isb	sy
   166c2:	f04f 0a01 	mov.w	sl, #1
   166c6:	e786      	b.n	165d6 <xQueueGenericReceive+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   166c8:	4620      	mov	r0, r4
   166ca:	f7ff fde2 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   166ce:	f000 fa0f 	bl	16af0 <xTaskResumeAll>
   166d2:	e7f6      	b.n	166c2 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   166d4:	4620      	mov	r0, r4
   166d6:	f7ff fddc 	bl	16292 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   166da:	f000 fa09 	bl	16af0 <xTaskResumeAll>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   166de:	f7ff fc81 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   166e2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   166e4:	f7ff fc8e 	bl	16004 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   166e8:	2d00      	cmp	r5, #0
   166ea:	d1ea      	bne.n	166c2 <xQueueGenericReceive+0x102>
   166ec:	e7a6      	b.n	1663c <xQueueGenericReceive+0x7c>
   166ee:	bf00      	nop
   166f0:	e000ed04 	.word	0xe000ed04

000166f4 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   166f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   166f8:	4607      	mov	r7, r0
   166fa:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   166fc:	f3ef 8611 	mrs	r6, BASEPRI
   16700:	f04f 0310 	mov.w	r3, #16
   16704:	f383 8811 	msr	BASEPRI, r3
   16708:	f3bf 8f6f 	isb	sy
   1670c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   16710:	6b84      	ldr	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   16712:	b30c      	cbz	r4, 16758 <xQueueReceiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   16714:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16718:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   1671a:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   1671c:	f7ff fda5 	bl	1626a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16720:	1c6b      	adds	r3, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   16722:	63bc      	str	r4, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   16724:	d113      	bne.n	1674e <xQueueReceiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   16726:	693b      	ldr	r3, [r7, #16]
   16728:	b90b      	cbnz	r3, 1672e <xQueueReceiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   1672a:	2001      	movs	r0, #1
   1672c:	e00b      	b.n	16746 <xQueueReceiveFromISR+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1672e:	f107 0010 	add.w	r0, r7, #16
   16732:	f000 facd 	bl	16cd0 <xTaskRemoveFromEventList>
   16736:	2800      	cmp	r0, #0
   16738:	d0f7      	beq.n	1672a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   1673a:	f1b8 0f00 	cmp.w	r8, #0
   1673e:	d0f4      	beq.n	1672a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   16740:	2001      	movs	r0, #1
   16742:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   16746:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   1674a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   1674e:	3501      	adds	r5, #1
   16750:	b26d      	sxtb	r5, r5
   16752:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   16756:	e7e8      	b.n	1672a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   16758:	4620      	mov	r0, r4
   1675a:	e7f4      	b.n	16746 <xQueueReceiveFromISR+0x52>

0001675c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   1675c:	b510      	push	{r4, lr}
   1675e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   16760:	f7ff fc40 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   16764:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   16766:	f7ff fc4d 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   1676a:	4620      	mov	r0, r4
   1676c:	bd10      	pop	{r4, pc}

0001676e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   1676e:	6b80      	ldr	r0, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   16770:	4770      	bx	lr
   16772:	Address 0x0000000000016772 is out of bounds.


00016774 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16774:	4a06      	ldr	r2, [pc, #24]	; (16790 <prvResetNextTaskUnblockTime+0x1c>)
   16776:	6813      	ldr	r3, [r2, #0]
   16778:	6819      	ldr	r1, [r3, #0]
   1677a:	4b06      	ldr	r3, [pc, #24]	; (16794 <prvResetNextTaskUnblockTime+0x20>)
   1677c:	b919      	cbnz	r1, 16786 <prvResetNextTaskUnblockTime+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   1677e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   16782:	601a      	str	r2, [r3, #0]
   16784:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   16786:	6812      	ldr	r2, [r2, #0]
   16788:	68d2      	ldr	r2, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   1678a:	68d2      	ldr	r2, [r2, #12]
   1678c:	6852      	ldr	r2, [r2, #4]
   1678e:	e7f8      	b.n	16782 <prvResetNextTaskUnblockTime+0xe>
   16790:	2007c5ec 	.word	0x2007c5ec
   16794:	2007c6fc 	.word	0x2007c6fc

00016798 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   16798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   1679a:	4b1b      	ldr	r3, [pc, #108]	; (16808 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   1679c:	4e1b      	ldr	r6, [pc, #108]	; (1680c <prvAddCurrentTaskToDelayedList+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   1679e:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   167a0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   167a2:	6830      	ldr	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   167a4:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   167a6:	3004      	adds	r0, #4
   167a8:	f7ff fcf7 	bl	1619a <uxListRemove>
   167ac:	4633      	mov	r3, r6
   167ae:	b940      	cbnz	r0, 167c2 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   167b0:	2001      	movs	r0, #1
   167b2:	6831      	ldr	r1, [r6, #0]
   167b4:	4e16      	ldr	r6, [pc, #88]	; (16810 <prvAddCurrentTaskToDelayedList+0x78>)
   167b6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   167b8:	6832      	ldr	r2, [r6, #0]
   167ba:	4088      	lsls	r0, r1
   167bc:	ea22 0200 	bic.w	r2, r2, r0
   167c0:	6032      	str	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   167c2:	1c62      	adds	r2, r4, #1
   167c4:	d107      	bne.n	167d6 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   167c6:	b137      	cbz	r7, 167d6 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   167c8:	6819      	ldr	r1, [r3, #0]
   167ca:	4812      	ldr	r0, [pc, #72]	; (16814 <prvAddCurrentTaskToDelayedList+0x7c>)
   167cc:	3104      	adds	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   167ce:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   167d2:	f7ff bcbf 	b.w	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   167d6:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   167d8:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   167da:	42a5      	cmp	r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   167dc:	6054      	str	r4, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   167de:	d907      	bls.n	167f0 <prvAddCurrentTaskToDelayedList+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   167e0:	4a0d      	ldr	r2, [pc, #52]	; (16818 <prvAddCurrentTaskToDelayedList+0x80>)
   167e2:	6810      	ldr	r0, [r2, #0]
   167e4:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   167e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   167ea:	3104      	adds	r1, #4
   167ec:	f7ff bcbe 	b.w	1616c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   167f0:	4a0a      	ldr	r2, [pc, #40]	; (1681c <prvAddCurrentTaskToDelayedList+0x84>)
   167f2:	6810      	ldr	r0, [r2, #0]
   167f4:	6819      	ldr	r1, [r3, #0]
   167f6:	3104      	adds	r1, #4
   167f8:	f7ff fcb8 	bl	1616c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   167fc:	4b08      	ldr	r3, [pc, #32]	; (16820 <prvAddCurrentTaskToDelayedList+0x88>)
   167fe:	681a      	ldr	r2, [r3, #0]
   16800:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   16802:	bf38      	it	cc
   16804:	601c      	strcc	r4, [r3, #0]
   16806:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16808:	2007c730 	.word	0x2007c730
   1680c:	2007c5e8 	.word	0x2007c5e8
   16810:	2007c6d0 	.word	0x2007c6d0
   16814:	2007c71c 	.word	0x2007c71c
   16818:	2007c5f0 	.word	0x2007c5f0
   1681c:	2007c5ec 	.word	0x2007c5ec
   16820:	2007c6fc 	.word	0x2007c6fc

00016824 <xTaskCreate>:
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16824:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16828:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   1682c:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1682e:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   16830:	460d      	mov	r5, r1
   16832:	4699      	mov	r9, r3
   16834:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16836:	f7ff fc63 	bl	16100 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   1683a:	4607      	mov	r7, r0
   1683c:	2800      	cmp	r0, #0
   1683e:	f000 809b 	beq.w	16978 <xTaskCreate+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   16842:	2058      	movs	r0, #88	; 0x58
   16844:	f7ff fc5c 	bl	16100 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   16848:	4604      	mov	r4, r0
   1684a:	2800      	cmp	r0, #0
   1684c:	f000 8091 	beq.w	16972 <xTaskCreate+0x14e>
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16850:	4652      	mov	r2, sl
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   16852:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   16854:	21a5      	movs	r1, #165	; 0xa5
   16856:	4638      	mov	r0, r7
   16858:	f002 fccc 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   1685c:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1685e:	f1aa 0a04 	sub.w	sl, sl, #4
   16862:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   16864:	f02a 0a07 	bic.w	sl, sl, #7
   16868:	1e6b      	subs	r3, r5, #1
   1686a:	f104 0234 	add.w	r2, r4, #52	; 0x34
   1686e:	3507      	adds	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   16870:	7859      	ldrb	r1, [r3, #1]
   16872:	f802 1b01 	strb.w	r1, [r2], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   16876:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   1687a:	b109      	cbz	r1, 16880 <xTaskCreate+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   1687c:	42ab      	cmp	r3, r5
   1687e:	d1f7      	bne.n	16870 <xTaskCreate+0x4c>
   16880:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   16882:	f04f 0b00 	mov.w	fp, #0
   16886:	2d09      	cmp	r5, #9
   16888:	bf28      	it	cs
   1688a:	2509      	movcs	r5, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   1688c:	1d27      	adds	r7, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   1688e:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   16890:	6465      	str	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   16892:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   16894:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   16898:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   1689c:	f7ff fc57 	bl	1614e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   168a0:	f1c5 050a 	rsb	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   168a4:	f104 0018 	add.w	r0, r4, #24
   168a8:	f7ff fc51 	bl	1614e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   168ac:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   168b0:	6124      	str	r4, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   168b2:	61a5      	str	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   168b4:	6264      	str	r4, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   168b6:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   168ba:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   168be:	464a      	mov	r2, r9
   168c0:	4641      	mov	r1, r8
   168c2:	4650      	mov	r0, sl
   168c4:	f7ff fb68 	bl	15f98 <pxPortInitialiseStack>
   168c8:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   168ca:	b106      	cbz	r6, 168ce <xTaskCreate+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   168cc:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   168ce:	f7ff fb89 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   168d2:	4b30      	ldr	r3, [pc, #192]	; (16994 <xTaskCreate+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   168d4:	4e30      	ldr	r6, [pc, #192]	; (16998 <xTaskCreate+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   168d6:	681a      	ldr	r2, [r3, #0]
   168d8:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 169c0 <xTaskCreate+0x19c>
   168dc:	3201      	adds	r2, #1
   168de:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   168e0:	6835      	ldr	r5, [r6, #0]
   168e2:	2d00      	cmp	r5, #0
   168e4:	d14b      	bne.n	1697e <xTaskCreate+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   168e6:	6034      	str	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   168e8:	681b      	ldr	r3, [r3, #0]
   168ea:	2b01      	cmp	r3, #1
   168ec:	d11a      	bne.n	16924 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   168ee:	eb08 0005 	add.w	r0, r8, r5
   168f2:	3514      	adds	r5, #20
   168f4:	f7ff fc20 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   168f8:	2dc8      	cmp	r5, #200	; 0xc8
   168fa:	d1f8      	bne.n	168ee <xTaskCreate+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   168fc:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 169c4 <xTaskCreate+0x1a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16900:	4d26      	ldr	r5, [pc, #152]	; (1699c <xTaskCreate+0x178>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   16902:	4648      	mov	r0, r9
   16904:	f7ff fc18 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   16908:	4628      	mov	r0, r5
   1690a:	f7ff fc15 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   1690e:	4824      	ldr	r0, [pc, #144]	; (169a0 <xTaskCreate+0x17c>)
   16910:	f7ff fc12 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   16914:	4823      	ldr	r0, [pc, #140]	; (169a4 <xTaskCreate+0x180>)
   16916:	f7ff fc0f 	bl	16138 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   1691a:	4b23      	ldr	r3, [pc, #140]	; (169a8 <xTaskCreate+0x184>)
   1691c:	f8c3 9000 	str.w	r9, [r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   16920:	4b22      	ldr	r3, [pc, #136]	; (169ac <xTaskCreate+0x188>)
   16922:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16924:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   16926:	4a22      	ldr	r2, [pc, #136]	; (169b0 <xTaskCreate+0x18c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16928:	4922      	ldr	r1, [pc, #136]	; (169b4 <xTaskCreate+0x190>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   1692a:	6813      	ldr	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   1692c:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   1692e:	3301      	adds	r3, #1
   16930:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   16932:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16934:	fa05 f302 	lsl.w	r3, r5, r2
   16938:	4303      	orrs	r3, r0
   1693a:	2014      	movs	r0, #20
   1693c:	600b      	str	r3, [r1, #0]
   1693e:	fb00 8002 	mla	r0, r0, r2, r8
   16942:	4639      	mov	r1, r7
   16944:	f7ff fc06 	bl	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   16948:	f7ff fb5c 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   1694c:	4b1a      	ldr	r3, [pc, #104]	; (169b8 <xTaskCreate+0x194>)
   1694e:	681b      	ldr	r3, [r3, #0]
   16950:	b163      	cbz	r3, 1696c <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   16952:	6833      	ldr	r3, [r6, #0]
   16954:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   16956:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   16958:	429a      	cmp	r2, r3
   1695a:	d207      	bcs.n	1696c <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   1695c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16960:	4b16      	ldr	r3, [pc, #88]	; (169bc <xTaskCreate+0x198>)
   16962:	601a      	str	r2, [r3, #0]
   16964:	f3bf 8f4f 	dsb	sy
   16968:	f3bf 8f6f 	isb	sy
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   1696c:	4628      	mov	r0, r5
   1696e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   16972:	4638      	mov	r0, r7
   16974:	f7ff fbd3 	bl	1611e <vPortFree>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   16978:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1697c:	e7f6      	b.n	1696c <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   1697e:	4b0e      	ldr	r3, [pc, #56]	; (169b8 <xTaskCreate+0x194>)
   16980:	681b      	ldr	r3, [r3, #0]
   16982:	2b00      	cmp	r3, #0
   16984:	d1ce      	bne.n	16924 <xTaskCreate+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   16986:	6833      	ldr	r3, [r6, #0]
   16988:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   1698a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1698c:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   1698e:	bf98      	it	ls
   16990:	6034      	strls	r4, [r6, #0]
   16992:	e7c7      	b.n	16924 <xTaskCreate+0x100>
   16994:	2007c6c0 	.word	0x2007c6c0
   16998:	2007c5e8 	.word	0x2007c5e8
   1699c:	2007c6e8 	.word	0x2007c6e8
   169a0:	2007c704 	.word	0x2007c704
   169a4:	2007c71c 	.word	0x2007c71c
   169a8:	2007c5ec 	.word	0x2007c5ec
   169ac:	2007c5f0 	.word	0x2007c5f0
   169b0:	2007c6cc 	.word	0x2007c6cc
   169b4:	2007c6d0 	.word	0x2007c6d0
   169b8:	2007c718 	.word	0x2007c718
   169bc:	e000ed04 	.word	0xe000ed04
   169c0:	2007c5f4 	.word	0x2007c5f4
   169c4:	2007c6d4 	.word	0x2007c6d4

000169c8 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   169c8:	4a02      	ldr	r2, [pc, #8]	; (169d4 <vTaskSuspendAll+0xc>)
   169ca:	6813      	ldr	r3, [r2, #0]
   169cc:	3301      	adds	r3, #1
   169ce:	6013      	str	r3, [r2, #0]
   169d0:	4770      	bx	lr
   169d2:	bf00      	nop
   169d4:	2007c6c8 	.word	0x2007c6c8

000169d8 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   169d8:	4b01      	ldr	r3, [pc, #4]	; (169e0 <xTaskGetTickCountFromISR+0x8>)
   169da:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   169dc:	4770      	bx	lr
   169de:	bf00      	nop
   169e0:	2007c730 	.word	0x2007c730

000169e4 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   169e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   169e8:	4b36      	ldr	r3, [pc, #216]	; (16ac4 <xTaskIncrementTick+0xe0>)
   169ea:	681b      	ldr	r3, [r3, #0]
   169ec:	2b00      	cmp	r3, #0
   169ee:	d147      	bne.n	16a80 <xTaskIncrementTick+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   169f0:	4b35      	ldr	r3, [pc, #212]	; (16ac8 <xTaskIncrementTick+0xe4>)
   169f2:	681c      	ldr	r4, [r3, #0]
   169f4:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   169f6:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   169f8:	b95c      	cbnz	r4, 16a12 <xTaskIncrementTick+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   169fa:	4a34      	ldr	r2, [pc, #208]	; (16acc <xTaskIncrementTick+0xe8>)
   169fc:	4b34      	ldr	r3, [pc, #208]	; (16ad0 <xTaskIncrementTick+0xec>)
   169fe:	6811      	ldr	r1, [r2, #0]
   16a00:	6818      	ldr	r0, [r3, #0]
   16a02:	6010      	str	r0, [r2, #0]
   16a04:	4a33      	ldr	r2, [pc, #204]	; (16ad4 <xTaskIncrementTick+0xf0>)
   16a06:	6019      	str	r1, [r3, #0]
   16a08:	6813      	ldr	r3, [r2, #0]
   16a0a:	3301      	adds	r3, #1
   16a0c:	6013      	str	r3, [r2, #0]
   16a0e:	f7ff feb1 	bl	16774 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   16a12:	4d31      	ldr	r5, [pc, #196]	; (16ad8 <xTaskIncrementTick+0xf4>)
   16a14:	f04f 0b00 	mov.w	fp, #0
   16a18:	682b      	ldr	r3, [r5, #0]
   16a1a:	4f30      	ldr	r7, [pc, #192]	; (16adc <xTaskIncrementTick+0xf8>)
   16a1c:	429c      	cmp	r4, r3
   16a1e:	d33e      	bcc.n	16a9e <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16a20:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 16acc <xTaskIncrementTick+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   16a24:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 16aec <xTaskIncrementTick+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   16a28:	f8d8 2000 	ldr.w	r2, [r8]
   16a2c:	6812      	ldr	r2, [r2, #0]
   16a2e:	bb72      	cbnz	r2, 16a8e <xTaskIncrementTick+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16a30:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16a34:	602a      	str	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   16a36:	e032      	b.n	16a9e <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16a38:	f106 0a04 	add.w	sl, r6, #4
   16a3c:	4650      	mov	r0, sl
   16a3e:	f7ff fbac 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   16a42:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   16a44:	b119      	cbz	r1, 16a4e <xTaskIncrementTick+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   16a46:	f106 0018 	add.w	r0, r6, #24
   16a4a:	f7ff fba6 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   16a4e:	2201      	movs	r2, #1
   16a50:	f04f 0e14 	mov.w	lr, #20
   16a54:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   16a56:	f8d9 3000 	ldr.w	r3, [r9]
   16a5a:	fa02 f100 	lsl.w	r1, r2, r0
   16a5e:	4319      	orrs	r1, r3
   16a60:	4b1f      	ldr	r3, [pc, #124]	; (16ae0 <xTaskIncrementTick+0xfc>)
   16a62:	f8c9 1000 	str.w	r1, [r9]
   16a66:	fb0e 3000 	mla	r0, lr, r0, r3
   16a6a:	4651      	mov	r1, sl
   16a6c:	f7ff fb72 	bl	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   16a70:	6838      	ldr	r0, [r7, #0]
   16a72:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   16a74:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   16a76:	4291      	cmp	r1, r2
   16a78:	bf28      	it	cs
   16a7a:	f04f 0b01 	movcs.w	fp, #1
   16a7e:	e7d3      	b.n	16a28 <xTaskIncrementTick+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   16a80:	4a18      	ldr	r2, [pc, #96]	; (16ae4 <xTaskIncrementTick+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   16a82:	f04f 0b00 	mov.w	fp, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   16a86:	6813      	ldr	r3, [r2, #0]
   16a88:	3301      	adds	r3, #1
   16a8a:	6013      	str	r3, [r2, #0]
   16a8c:	e011      	b.n	16ab2 <xTaskIncrementTick+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   16a8e:	f8d8 2000 	ldr.w	r2, [r8]
   16a92:	68d2      	ldr	r2, [r2, #12]
   16a94:	68d6      	ldr	r6, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   16a96:	6871      	ldr	r1, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   16a98:	428c      	cmp	r4, r1
   16a9a:	d2cd      	bcs.n	16a38 <xTaskIncrementTick+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   16a9c:	6029      	str	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   16a9e:	683a      	ldr	r2, [r7, #0]
   16aa0:	4b0f      	ldr	r3, [pc, #60]	; (16ae0 <xTaskIncrementTick+0xfc>)
   16aa2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   16aa4:	2214      	movs	r2, #20
   16aa6:	434a      	muls	r2, r1
   16aa8:	589a      	ldr	r2, [r3, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   16aaa:	2a02      	cmp	r2, #2
   16aac:	bf28      	it	cs
   16aae:	f04f 0b01 	movcs.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   16ab2:	4a0d      	ldr	r2, [pc, #52]	; (16ae8 <xTaskIncrementTick+0x104>)
   16ab4:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   16ab6:	2a00      	cmp	r2, #0
   16ab8:	bf18      	it	ne
   16aba:	f04f 0b01 	movne.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   16abe:	4658      	mov	r0, fp
   16ac0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac4:	2007c6c8 	.word	0x2007c6c8
   16ac8:	2007c730 	.word	0x2007c730
   16acc:	2007c5ec 	.word	0x2007c5ec
   16ad0:	2007c5f0 	.word	0x2007c5f0
   16ad4:	2007c700 	.word	0x2007c700
   16ad8:	2007c6fc 	.word	0x2007c6fc
   16adc:	2007c5e8 	.word	0x2007c5e8
   16ae0:	2007c5f4 	.word	0x2007c5f4
   16ae4:	2007c6c4 	.word	0x2007c6c4
   16ae8:	2007c734 	.word	0x2007c734
   16aec:	2007c6d0 	.word	0x2007c6d0

00016af0 <xTaskResumeAll>:
xTaskResumeAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   16af0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   16af4:	f7ff fa76 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   16af8:	4b2a      	ldr	r3, [pc, #168]	; (16ba4 <xTaskResumeAll+0xb4>)
   16afa:	681a      	ldr	r2, [r3, #0]
   16afc:	3a01      	subs	r2, #1
   16afe:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16b00:	681c      	ldr	r4, [r3, #0]
   16b02:	b12c      	cbz	r4, 16b10 <xTaskResumeAll+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   16b04:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   16b06:	f7ff fa7d 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   16b0a:	4620      	mov	r0, r4
   16b0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   16b10:	4b25      	ldr	r3, [pc, #148]	; (16ba8 <xTaskResumeAll+0xb8>)
   16b12:	681b      	ldr	r3, [r3, #0]
   16b14:	2b00      	cmp	r3, #0
   16b16:	d0f5      	beq.n	16b04 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   16b18:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 16bc0 <xTaskResumeAll+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16b1c:	4f23      	ldr	r7, [pc, #140]	; (16bac <xTaskResumeAll+0xbc>)
   16b1e:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 16bc4 <xTaskResumeAll+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   16b22:	f8d9 3000 	ldr.w	r3, [r9]
   16b26:	b9e3      	cbnz	r3, 16b62 <xTaskResumeAll+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   16b28:	b10c      	cbz	r4, 16b2e <xTaskResumeAll+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   16b2a:	f7ff fe23 	bl	16774 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   16b2e:	4d20      	ldr	r5, [pc, #128]	; (16bb0 <xTaskResumeAll+0xc0>)
   16b30:	682c      	ldr	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   16b32:	b144      	cbz	r4, 16b46 <xTaskResumeAll+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   16b34:	2701      	movs	r7, #1
   16b36:	4e1f      	ldr	r6, [pc, #124]	; (16bb4 <xTaskResumeAll+0xc4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   16b38:	f7ff ff54 	bl	169e4 <xTaskIncrementTick>
   16b3c:	b100      	cbz	r0, 16b40 <xTaskResumeAll+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   16b3e:	6037      	str	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   16b40:	3c01      	subs	r4, #1
   16b42:	d1f9      	bne.n	16b38 <xTaskResumeAll+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   16b44:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   16b46:	4b1b      	ldr	r3, [pc, #108]	; (16bb4 <xTaskResumeAll+0xc4>)
   16b48:	681b      	ldr	r3, [r3, #0]
   16b4a:	2b00      	cmp	r3, #0
   16b4c:	d0da      	beq.n	16b04 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   16b4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16b52:	4b19      	ldr	r3, [pc, #100]	; (16bb8 <xTaskResumeAll+0xc8>)
   16b54:	601a      	str	r2, [r3, #0]
   16b56:	f3bf 8f4f 	dsb	sy
   16b5a:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   16b5e:	2401      	movs	r4, #1
   16b60:	e7d1      	b.n	16b06 <xTaskResumeAll+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   16b62:	f8d9 300c 	ldr.w	r3, [r9, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16b66:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   16b68:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16b6a:	1d26      	adds	r6, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   16b6c:	f104 0018 	add.w	r0, r4, #24
   16b70:	f7ff fb13 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   16b74:	4630      	mov	r0, r6
   16b76:	f7ff fb10 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   16b7a:	2014      	movs	r0, #20
   16b7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16b7e:	6839      	ldr	r1, [r7, #0]
   16b80:	fa05 f302 	lsl.w	r3, r5, r2
   16b84:	430b      	orrs	r3, r1
   16b86:	fb00 8002 	mla	r0, r0, r2, r8
   16b8a:	4631      	mov	r1, r6
   16b8c:	603b      	str	r3, [r7, #0]
   16b8e:	f7ff fae1 	bl	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   16b92:	4b0a      	ldr	r3, [pc, #40]	; (16bbc <xTaskResumeAll+0xcc>)
   16b94:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16b96:	681b      	ldr	r3, [r3, #0]
   16b98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16b9a:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   16b9c:	bf24      	itt	cs
   16b9e:	4b05      	ldrcs	r3, [pc, #20]	; (16bb4 <xTaskResumeAll+0xc4>)
   16ba0:	601d      	strcs	r5, [r3, #0]
   16ba2:	e7be      	b.n	16b22 <xTaskResumeAll+0x32>
   16ba4:	2007c6c8 	.word	0x2007c6c8
   16ba8:	2007c6c0 	.word	0x2007c6c0
   16bac:	2007c6d0 	.word	0x2007c6d0
   16bb0:	2007c6c4 	.word	0x2007c6c4
   16bb4:	2007c734 	.word	0x2007c734
   16bb8:	e000ed04 	.word	0xe000ed04
   16bbc:	2007c5e8 	.word	0x2007c5e8
   16bc0:	2007c704 	.word	0x2007c704
   16bc4:	2007c5f4 	.word	0x2007c5f4

00016bc8 <vTaskDelay>:
vTaskDelay():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   16bc8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   16bca:	b940      	cbnz	r0, 16bde <vTaskDelay+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   16bcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16bd0:	4b08      	ldr	r3, [pc, #32]	; (16bf4 <vTaskDelay+0x2c>)
   16bd2:	601a      	str	r2, [r3, #0]
   16bd4:	f3bf 8f4f 	dsb	sy
   16bd8:	f3bf 8f6f 	isb	sy
   16bdc:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   16bde:	f7ff fef3 	bl	169c8 <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   16be2:	2100      	movs	r1, #0
   16be4:	f7ff fdd8 	bl	16798 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   16be8:	f7ff ff82 	bl	16af0 <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   16bec:	2800      	cmp	r0, #0
   16bee:	d0ed      	beq.n	16bcc <vTaskDelay+0x4>
   16bf0:	bd08      	pop	{r3, pc}
   16bf2:	bf00      	nop
   16bf4:	e000ed04 	.word	0xe000ed04

00016bf8 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   16bf8:	4b26      	ldr	r3, [pc, #152]	; (16c94 <vTaskSwitchContext+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   16bfa:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   16bfc:	681a      	ldr	r2, [r3, #0]
   16bfe:	4b26      	ldr	r3, [pc, #152]	; (16c98 <vTaskSwitchContext+0xa0>)
   16c00:	b112      	cbz	r2, 16c08 <vTaskSwitchContext+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   16c02:	2201      	movs	r2, #1
   16c04:	601a      	str	r2, [r3, #0]
   16c06:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   16c08:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   16c0a:	f7ff fa41 	bl	16090 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   16c0e:	4a23      	ldr	r2, [pc, #140]	; (16c9c <vTaskSwitchContext+0xa4>)
   16c10:	4c23      	ldr	r4, [pc, #140]	; (16ca0 <vTaskSwitchContext+0xa8>)
   16c12:	6815      	ldr	r5, [r2, #0]
   16c14:	42a8      	cmp	r0, r5
   16c16:	d904      	bls.n	16c22 <vTaskSwitchContext+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   16c18:	6821      	ldr	r1, [r4, #0]
   16c1a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   16c1c:	1b5b      	subs	r3, r3, r5
   16c1e:	4403      	add	r3, r0
   16c20:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   16c22:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   16c24:	6010      	str	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   16c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   16c28:	681a      	ldr	r2, [r3, #0]
   16c2a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16c2e:	d10b      	bne.n	16c48 <vTaskSwitchContext+0x50>
   16c30:	685a      	ldr	r2, [r3, #4]
   16c32:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16c36:	d107      	bne.n	16c48 <vTaskSwitchContext+0x50>
   16c38:	689a      	ldr	r2, [r3, #8]
   16c3a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   16c3e:	d103      	bne.n	16c48 <vTaskSwitchContext+0x50>
   16c40:	68db      	ldr	r3, [r3, #12]
   16c42:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   16c46:	d004      	beq.n	16c52 <vTaskSwitchContext+0x5a>
   16c48:	6820      	ldr	r0, [r4, #0]
   16c4a:	6821      	ldr	r1, [r4, #0]
   16c4c:	3134      	adds	r1, #52	; 0x34
   16c4e:	f7ff fa29 	bl	160a4 <vApplicationStackOverflowHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   16c52:	4b14      	ldr	r3, [pc, #80]	; (16ca4 <vTaskSwitchContext+0xac>)
   16c54:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   16c56:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   16c5a:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   16c5c:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   16c5e:	f1c3 031f 	rsb	r3, r3, #31
   16c62:	fb00 f203 	mul.w	r2, r0, r3
   16c66:	4910      	ldr	r1, [pc, #64]	; (16ca8 <vTaskSwitchContext+0xb0>)
   16c68:	188d      	adds	r5, r1, r2
   16c6a:	686e      	ldr	r6, [r5, #4]
   16c6c:	3208      	adds	r2, #8
   16c6e:	6876      	ldr	r6, [r6, #4]
   16c70:	440a      	add	r2, r1
   16c72:	4296      	cmp	r6, r2
   16c74:	fb00 1303 	mla	r3, r0, r3, r1
   16c78:	bf08      	it	eq
   16c7a:	6872      	ldreq	r2, [r6, #4]
   16c7c:	606e      	str	r6, [r5, #4]
   16c7e:	bf08      	it	eq
   16c80:	606a      	streq	r2, [r5, #4]
   16c82:	685b      	ldr	r3, [r3, #4]
   16c84:	68db      	ldr	r3, [r3, #12]
   16c86:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   16c88:	6823      	ldr	r3, [r4, #0]
   16c8a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   16c8c:	4b07      	ldr	r3, [pc, #28]	; (16cac <vTaskSwitchContext+0xb4>)
   16c8e:	645a      	str	r2, [r3, #68]	; 0x44
   16c90:	bd70      	pop	{r4, r5, r6, pc}
   16c92:	bf00      	nop
   16c94:	2007c6c8 	.word	0x2007c6c8
   16c98:	2007c734 	.word	0x2007c734
   16c9c:	2007c6bc 	.word	0x2007c6bc
   16ca0:	2007c5e8 	.word	0x2007c5e8
   16ca4:	2007c6d0 	.word	0x2007c6d0
   16ca8:	2007c5f4 	.word	0x2007c5f4
   16cac:	40024000 	.word	0x40024000

00016cb0 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   16cb0:	b510      	push	{r4, lr}
   16cb2:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   16cb4:	4b05      	ldr	r3, [pc, #20]	; (16ccc <vTaskPlaceOnEventList+0x1c>)
   16cb6:	6819      	ldr	r1, [r3, #0]
   16cb8:	3118      	adds	r1, #24
   16cba:	f7ff fa57 	bl	1616c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   16cbe:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   16cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   16cc4:	2101      	movs	r1, #1
   16cc6:	f7ff bd67 	b.w	16798 <prvAddCurrentTaskToDelayedList>
   16cca:	bf00      	nop
   16ccc:	2007c5e8 	.word	0x2007c5e8

00016cd0 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   16cd0:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   16cd2:	68c3      	ldr	r3, [r0, #12]
   16cd4:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   16cd6:	f104 0518 	add.w	r5, r4, #24
   16cda:	4628      	mov	r0, r5
   16cdc:	f7ff fa5d 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16ce0:	4b11      	ldr	r3, [pc, #68]	; (16d28 <xTaskRemoveFromEventList+0x58>)
   16ce2:	681b      	ldr	r3, [r3, #0]
   16ce4:	b9e3      	cbnz	r3, 16d20 <xTaskRemoveFromEventList+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   16ce6:	1d25      	adds	r5, r4, #4
   16ce8:	4628      	mov	r0, r5
   16cea:	f7ff fa56 	bl	1619a <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   16cee:	2301      	movs	r3, #1
   16cf0:	490e      	ldr	r1, [pc, #56]	; (16d2c <xTaskRemoveFromEventList+0x5c>)
   16cf2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16cf4:	6808      	ldr	r0, [r1, #0]
   16cf6:	4093      	lsls	r3, r2
   16cf8:	4303      	orrs	r3, r0
   16cfa:	2014      	movs	r0, #20
   16cfc:	600b      	str	r3, [r1, #0]
   16cfe:	4629      	mov	r1, r5
   16d00:	4b0b      	ldr	r3, [pc, #44]	; (16d30 <xTaskRemoveFromEventList+0x60>)
   16d02:	fb00 3002 	mla	r0, r0, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   16d06:	f7ff fa25 	bl	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   16d0a:	4b0a      	ldr	r3, [pc, #40]	; (16d34 <xTaskRemoveFromEventList+0x64>)
   16d0c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   16d0e:	681b      	ldr	r3, [r3, #0]
   16d10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16d12:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   16d14:	bf85      	ittet	hi
   16d16:	2001      	movhi	r0, #1
   16d18:	4b07      	ldrhi	r3, [pc, #28]	; (16d38 <xTaskRemoveFromEventList+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   16d1a:	2000      	movls	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   16d1c:	6018      	strhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   16d1e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   16d20:	4629      	mov	r1, r5
   16d22:	4806      	ldr	r0, [pc, #24]	; (16d3c <xTaskRemoveFromEventList+0x6c>)
   16d24:	e7ef      	b.n	16d06 <xTaskRemoveFromEventList+0x36>
   16d26:	bf00      	nop
   16d28:	2007c6c8 	.word	0x2007c6c8
   16d2c:	2007c6d0 	.word	0x2007c6d0
   16d30:	2007c5f4 	.word	0x2007c5f4
   16d34:	2007c5e8 	.word	0x2007c5e8
   16d38:	2007c734 	.word	0x2007c734
   16d3c:	2007c704 	.word	0x2007c704

00016d40 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   16d40:	4b03      	ldr	r3, [pc, #12]	; (16d50 <vTaskSetTimeOutState+0x10>)
   16d42:	681b      	ldr	r3, [r3, #0]
   16d44:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   16d46:	4b03      	ldr	r3, [pc, #12]	; (16d54 <vTaskSetTimeOutState+0x14>)
   16d48:	681b      	ldr	r3, [r3, #0]
   16d4a:	6043      	str	r3, [r0, #4]
   16d4c:	4770      	bx	lr
   16d4e:	bf00      	nop
   16d50:	2007c700 	.word	0x2007c700
   16d54:	2007c730 	.word	0x2007c730

00016d58 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   16d58:	b538      	push	{r3, r4, r5, lr}
   16d5a:	460d      	mov	r5, r1
   16d5c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   16d5e:	f7ff f941 	bl	15fe4 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   16d62:	4b0e      	ldr	r3, [pc, #56]	; (16d9c <xTaskCheckForTimeOut+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   16d64:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   16d66:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   16d68:	1c53      	adds	r3, r2, #1
   16d6a:	d010      	beq.n	16d8e <xTaskCheckForTimeOut+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   16d6c:	4b0c      	ldr	r3, [pc, #48]	; (16da0 <xTaskCheckForTimeOut+0x48>)
   16d6e:	6821      	ldr	r1, [r4, #0]
   16d70:	681b      	ldr	r3, [r3, #0]
   16d72:	4299      	cmp	r1, r3
   16d74:	6863      	ldr	r3, [r4, #4]
   16d76:	d001      	beq.n	16d7c <xTaskCheckForTimeOut+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   16d78:	4298      	cmp	r0, r3
   16d7a:	d20d      	bcs.n	16d98 <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   16d7c:	1ac1      	subs	r1, r0, r3
   16d7e:	428a      	cmp	r2, r1
   16d80:	d90a      	bls.n	16d98 <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   16d82:	1a1b      	subs	r3, r3, r0
   16d84:	4413      	add	r3, r2
   16d86:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   16d88:	4620      	mov	r0, r4
   16d8a:	f7ff ffd9 	bl	16d40 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   16d8e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   16d90:	f7ff f938 	bl	16004 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   16d94:	4620      	mov	r0, r4
   16d96:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   16d98:	2401      	movs	r4, #1
   16d9a:	e7f9      	b.n	16d90 <xTaskCheckForTimeOut+0x38>
   16d9c:	2007c730 	.word	0x2007c730
   16da0:	2007c700 	.word	0x2007c700

00016da4 <vTaskMissedYield>:
vTaskMissedYield():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   16da4:	2201      	movs	r2, #1
   16da6:	4b01      	ldr	r3, [pc, #4]	; (16dac <vTaskMissedYield+0x8>)
   16da8:	601a      	str	r2, [r3, #0]
   16daa:	4770      	bx	lr
   16dac:	2007c734 	.word	0x2007c734

00016db0 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   16db0:	4b05      	ldr	r3, [pc, #20]	; (16dc8 <xTaskGetSchedulerState+0x18>)
   16db2:	681b      	ldr	r3, [r3, #0]
   16db4:	b133      	cbz	r3, 16dc4 <xTaskGetSchedulerState+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   16db6:	4b05      	ldr	r3, [pc, #20]	; (16dcc <xTaskGetSchedulerState+0x1c>)
   16db8:	681b      	ldr	r3, [r3, #0]
   16dba:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   16dbc:	bf0c      	ite	eq
   16dbe:	2002      	moveq	r0, #2
   16dc0:	2000      	movne	r0, #0
   16dc2:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   16dc4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   16dc6:	4770      	bx	lr
   16dc8:	2007c718 	.word	0x2007c718
   16dcc:	2007c6c8 	.word	0x2007c6c8

00016dd0 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   16dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   16dd4:	4604      	mov	r4, r0
   16dd6:	2800      	cmp	r0, #0
   16dd8:	d039      	beq.n	16e4e <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   16dda:	4d1e      	ldr	r5, [pc, #120]	; (16e54 <vTaskPriorityInherit+0x84>)
   16ddc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   16dde:	682a      	ldr	r2, [r5, #0]
   16de0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   16de2:	4293      	cmp	r3, r2
   16de4:	d233      	bcs.n	16e4e <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16de6:	2714      	movs	r7, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   16de8:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16dea:	4e1b      	ldr	r6, [pc, #108]	; (16e58 <vTaskPriorityInherit+0x88>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   16dec:	2a00      	cmp	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16dee:	bfa8      	it	ge
   16df0:	682a      	ldrge	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16df2:	fb07 6303 	mla	r3, r7, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16df6:	bfa2      	ittt	ge
   16df8:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   16dfa:	f1c2 020a 	rsbge	r2, r2, #10
   16dfe:	6182      	strge	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   16e00:	6942      	ldr	r2, [r0, #20]
   16e02:	429a      	cmp	r2, r3
   16e04:	d120      	bne.n	16e48 <vTaskPriorityInherit+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16e06:	f100 0804 	add.w	r8, r0, #4
   16e0a:	4640      	mov	r0, r8
   16e0c:	f7ff f9c5 	bl	1619a <uxListRemove>
   16e10:	4a12      	ldr	r2, [pc, #72]	; (16e5c <vTaskPriorityInherit+0x8c>)
   16e12:	b948      	cbnz	r0, 16e28 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   16e14:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   16e16:	4347      	muls	r7, r0
   16e18:	59f3      	ldr	r3, [r6, r7]
   16e1a:	b92b      	cbnz	r3, 16e28 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   16e1c:	2101      	movs	r1, #1
   16e1e:	6813      	ldr	r3, [r2, #0]
   16e20:	4081      	lsls	r1, r0
   16e22:	ea23 0301 	bic.w	r3, r3, r1
   16e26:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16e28:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16e2a:	6811      	ldr	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16e2c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16e2e:	2301      	movs	r3, #1
   16e30:	4083      	lsls	r3, r0
   16e32:	430b      	orrs	r3, r1
   16e34:	6013      	str	r3, [r2, #0]
   16e36:	2314      	movs	r3, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16e38:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16e3a:	4641      	mov	r1, r8
   16e3c:	fb03 6000 	mla	r0, r3, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   16e40:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   16e44:	f7ff b986 	b.w	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   16e48:	682b      	ldr	r3, [r5, #0]
   16e4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   16e4c:	62c3      	str	r3, [r0, #44]	; 0x2c
   16e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16e52:	bf00      	nop
   16e54:	2007c5e8 	.word	0x2007c5e8
   16e58:	2007c5f4 	.word	0x2007c5f4
   16e5c:	2007c6d0 	.word	0x2007c6d0

00016e60 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   16e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   16e62:	4604      	mov	r4, r0
   16e64:	b908      	cbnz	r0, 16e6a <xTaskPriorityDisinherit+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   16e66:	2000      	movs	r0, #0
   16e68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16e6a:	6c83      	ldr	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16e6c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   16e6e:	6c42      	ldr	r2, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16e70:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16e72:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   16e74:	6483      	str	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   16e76:	d0f6      	beq.n	16e66 <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   16e78:	2b00      	cmp	r3, #0
   16e7a:	d1f4      	bne.n	16e66 <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   16e7c:	1d05      	adds	r5, r0, #4
   16e7e:	4628      	mov	r0, r5
   16e80:	f7ff f98b 	bl	1619a <uxListRemove>
   16e84:	4e10      	ldr	r6, [pc, #64]	; (16ec8 <xTaskPriorityDisinherit+0x68>)
   16e86:	4a11      	ldr	r2, [pc, #68]	; (16ecc <xTaskPriorityDisinherit+0x6c>)
   16e88:	b950      	cbnz	r0, 16ea0 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   16e8a:	2114      	movs	r1, #20
   16e8c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   16e8e:	4379      	muls	r1, r7
   16e90:	5873      	ldr	r3, [r6, r1]
   16e92:	b92b      	cbnz	r3, 16ea0 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   16e94:	2001      	movs	r0, #1
   16e96:	6813      	ldr	r3, [r2, #0]
   16e98:	40b8      	lsls	r0, r7
   16e9a:	ea23 0300 	bic.w	r3, r3, r0
   16e9e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   16ea0:	6c63      	ldr	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16ea2:	f1c3 010a 	rsb	r1, r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   16ea6:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   16ea8:	61a1      	str	r1, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   16eaa:	2401      	movs	r4, #1
   16eac:	6811      	ldr	r1, [r2, #0]
   16eae:	fa04 f003 	lsl.w	r0, r4, r3
   16eb2:	4308      	orrs	r0, r1
   16eb4:	6010      	str	r0, [r2, #0]
   16eb6:	2014      	movs	r0, #20
   16eb8:	4629      	mov	r1, r5
   16eba:	fb00 6003 	mla	r0, r0, r3, r6
   16ebe:	f7ff f949 	bl	16154 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   16ec2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   16ec4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16ec6:	bf00      	nop
   16ec8:	2007c5f4 	.word	0x2007c5f4
   16ecc:	2007c6d0 	.word	0x2007c6d0

00016ed0 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   16ed0:	4b04      	ldr	r3, [pc, #16]	; (16ee4 <pvTaskIncrementMutexHeldCount+0x14>)
   16ed2:	681a      	ldr	r2, [r3, #0]
   16ed4:	b11a      	cbz	r2, 16ede <pvTaskIncrementMutexHeldCount+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   16ed6:	6819      	ldr	r1, [r3, #0]
   16ed8:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   16eda:	3201      	adds	r2, #1
   16edc:	648a      	str	r2, [r1, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   16ede:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   16ee0:	4770      	bx	lr
   16ee2:	bf00      	nop
   16ee4:	2007c5e8 	.word	0x2007c5e8

00016ee8 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99
    }
    xTaskResumeAll();
}

    void vRunTimeStatIsrEntry()
    {
   16ee8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   16eea:	f7ff f8d1 	bl	16090 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   16eee:	4b06      	ldr	r3, [pc, #24]	; (16f08 <vRunTimeStatIsrEntry+0x20>)
   16ef0:	4a06      	ldr	r2, [pc, #24]	; (16f0c <vRunTimeStatIsrEntry+0x24>)
   16ef2:	6819      	ldr	r1, [r3, #0]
   16ef4:	b129      	cbz	r1, 16f02 <vRunTimeStatIsrEntry+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   16ef6:	6819      	ldr	r1, [r3, #0]
   16ef8:	6814      	ldr	r4, [r2, #0]
   16efa:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   16efc:	1b1b      	subs	r3, r3, r4
   16efe:	4403      	add	r3, r0
   16f00:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   16f02:	6010      	str	r0, [r2, #0]
   16f04:	bd10      	pop	{r4, pc}
   16f06:	bf00      	nop
   16f08:	2007c5e8 	.word	0x2007c5e8
   16f0c:	2007c6bc 	.word	0x2007c6bc

00016f10 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   16f10:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   16f12:	f7ff f8bd 	bl	16090 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   16f16:	4b01      	ldr	r3, [pc, #4]	; (16f1c <vRunTimeStatIsrExit+0xc>)
   16f18:	6018      	str	r0, [r3, #0]
   16f1a:	bd08      	pop	{r3, pc}
   16f1c:	2007c6bc 	.word	0x2007c6bc

00016f20 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   16f20:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   16f22:	4d10      	ldr	r5, [pc, #64]	; (16f64 <Storage::getFlashDrive()+0x44>)
   16f24:	4e10      	ldr	r6, [pc, #64]	; (16f68 <Storage::getFlashDrive()+0x48>)
   16f26:	782c      	ldrb	r4, [r5, #0]
   16f28:	f3bf 8f5b 	dmb	ish
   16f2c:	f014 0401 	ands.w	r4, r4, #1
   16f30:	d115      	bne.n	16f5e <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   16f32:	4628      	mov	r0, r5
   16f34:	f000 fd67 	bl	17a06 <__cxa_guard_acquire>
   16f38:	b188      	cbz	r0, 16f5e <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16f3a:	f44f 700f 	mov.w	r0, #572	; 0x23c
   16f3e:	f7fd fe87 	bl	14c50 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   16f42:	2330      	movs	r3, #48	; 0x30
   16f44:	f880 3239 	strb.w	r3, [r0, #569]	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16f48:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   16f4a:	f880 4238 	strb.w	r4, [r0, #568]	; 0x238
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16f4e:	f880 323a 	strb.w	r3, [r0, #570]	; 0x23a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   16f52:	f880 423b 	strb.w	r4, [r0, #571]	; 0x23b
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16f56:	6030      	str	r0, [r6, #0]
   16f58:	4628      	mov	r0, r5
   16f5a:	f000 fd60 	bl	17a1e <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   16f5e:	6830      	ldr	r0, [r6, #0]
   16f60:	bd70      	pop	{r4, r5, r6, pc}
   16f62:	bf00      	nop
   16f64:	2007c748 	.word	0x2007c748
   16f68:	2007c74c 	.word	0x2007c74c

00016f6c <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16f6c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16f6e:	4c06      	ldr	r4, [pc, #24]	; (16f88 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   16f70:	6823      	ldr	r3, [r4, #0]
   16f72:	b933      	cbnz	r3, 16f82 <SingletonTemplate<I2C2>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16f74:	2024      	movs	r0, #36	; 0x24
   16f76:	f7fd fe6b 	bl	14c50 <operator new(unsigned int)>
   16f7a:	4605      	mov	r5, r0
   16f7c:	f7fe ff66 	bl	15e4c <I2C2::I2C2()>
   16f80:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16f82:	6820      	ldr	r0, [r4, #0]
   16f84:	bd38      	pop	{r3, r4, r5, pc}
   16f86:	bf00      	nop
   16f88:	2007c5d8 	.word	0x2007c5d8

00016f8c <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16f8e:	4c0c      	ldr	r4, [pc, #48]	; (16fc0 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   16f90:	6823      	ldr	r3, [r4, #0]
   16f92:	b993      	cbnz	r3, 16fba <SingletonTemplate<LED_Display>::getInstance()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16f94:	2008      	movs	r0, #8
   16f96:	f7fd fe5b 	bl	14c50 <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16f9a:	4d0a      	ldr	r5, [pc, #40]	; (16fc4 <SingletonTemplate<LED_Display>::getInstance()+0x38>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16f9c:	4606      	mov	r6, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16f9e:	682b      	ldr	r3, [r5, #0]
   16fa0:	b933      	cbnz	r3, 16fb0 <SingletonTemplate<LED_Display>::getInstance()+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16fa2:	2024      	movs	r0, #36	; 0x24
   16fa4:	f7fd fe54 	bl	14c50 <operator new(unsigned int)>
   16fa8:	4607      	mov	r7, r0
   16faa:	f7fe ff4f 	bl	15e4c <I2C2::I2C2()>
   16fae:	602f      	str	r7, [r5, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   16fb0:	682b      	ldr	r3, [r5, #0]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   16fb2:	6026      	str	r6, [r4, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   16fb4:	6033      	str	r3, [r6, #0]
   16fb6:	2340      	movs	r3, #64	; 0x40
   16fb8:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16fba:	6820      	ldr	r0, [r4, #0]
   16fbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16fbe:	bf00      	nop
   16fc0:	2007c750 	.word	0x2007c750
   16fc4:	2007c5d8 	.word	0x2007c5d8

00016fc8 <hl_print_line()>:
_ZL13hl_print_linev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   16fc8:	4801      	ldr	r0, [pc, #4]	; (16fd0 <hl_print_line()+0x8>)
   16fca:	f003 bb21 	b.w	1a610 <puts>
   16fce:	bf00      	nop
   16fd0:	00020338 	.word	0x00020338

00016fd4 <ssp_set_max_clock>:
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   16fd4:	b538      	push	{r3, r4, r5, lr}
   16fd6:	4604      	mov	r4, r0
   16fd8:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   16fda:	f7f9 fbdb 	bl	10794 <sys_get_cpu_clock>
   16fde:	4b07      	ldr	r3, [pc, #28]	; (16ffc <ssp_set_max_clock+0x28>)
   16fe0:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   16fe4:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16fe6:	fbb0 f2f3 	udiv	r2, r0, r3
   16fea:	42aa      	cmp	r2, r5
   16fec:	d904      	bls.n	16ff8 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   16fee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   16ff2:	d001      	beq.n	16ff8 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   16ff4:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16ff6:	e7f6      	b.n	16fe6 <ssp_set_max_clock+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   16ff8:	6123      	str	r3, [r4, #16]
   16ffa:	bd38      	pop	{r3, r4, r5, pc}
   16ffc:	000f4240 	.word	0x000f4240

00017000 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   17000:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   17002:	f200 2639 	addw	r6, r0, #569	; 0x239
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   17006:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   17008:	2201      	movs	r2, #1
   1700a:	4631      	mov	r1, r6
   1700c:	f7fb fc26 	bl	1285c <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   17010:	4605      	mov	r5, r0
   17012:	bb38      	cbnz	r0, 17064 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   17014:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   17016:	aa02      	add	r2, sp, #8
   17018:	a903      	add	r1, sp, #12
   1701a:	4630      	mov	r0, r6
   1701c:	f7fb ff7f 	bl	12f1e <f_getfree>
   17020:	bb40      	cbnz	r0, 17074 <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   17022:	9802      	ldr	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   17024:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   17026:	7882      	ldrb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   17028:	fb03 f102 	mul.w	r1, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1702c:	69c3      	ldr	r3, [r0, #28]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   1702e:	4812      	ldr	r0, [pc, #72]	; (17078 <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   17030:	3b02      	subs	r3, #2
   17032:	435a      	muls	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   17034:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   17036:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   1703a:	bf38      	it	cc
   1703c:	2001      	movcc	r0, #1
   1703e:	4b0f      	ldr	r3, [pc, #60]	; (1707c <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   17040:	bf24      	itt	cs
   17042:	4603      	movcs	r3, r0
   17044:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   17048:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   1704a:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   1704e:	fbb2 f2f0 	udiv	r2, r2, r0
   17052:	9100      	str	r1, [sp, #0]
   17054:	9301      	str	r3, [sp, #4]
   17056:	4621      	mov	r1, r4
   17058:	4809      	ldr	r0, [pc, #36]	; (17080 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   1705a:	f003 fa65 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   1705e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   17060:	b004      	add	sp, #16
   17062:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   17064:	4b07      	ldr	r3, [pc, #28]	; (17084 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   17066:	462a      	mov	r2, r5
   17068:	4621      	mov	r1, r4
   1706a:	4807      	ldr	r0, [pc, #28]	; (17088 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   1706c:	f003 fa5c 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   17070:	2000      	movs	r0, #0
   17072:	e7f5      	b.n	17060 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   17074:	4b05      	ldr	r3, [pc, #20]	; (1708c <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   17076:	e7f6      	b.n	17066 <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   17078:	00020376 	.word	0x00020376
   1707c:	00020373 	.word	0x00020373
   17080:	00020380 	.word	0x00020380
   17084:	0002037d 	.word	0x0002037d
   17088:	000203ae 	.word	0x000203ae
   1708c:	00020379 	.word	0x00020379

00017090 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   17090:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17092:	4c05      	ldr	r4, [pc, #20]	; (170a8 <SingletonTemplate<LED>::getInstance()+0x18>)
   17094:	6825      	ldr	r5, [r4, #0]
   17096:	b925      	cbnz	r5, 170a2 <SingletonTemplate<LED>::getInstance()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   17098:	2001      	movs	r0, #1
   1709a:	f7fd fdd9 	bl	14c50 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   1709e:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   170a0:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   170a2:	6820      	ldr	r0, [r4, #0]
   170a4:	bd38      	pop	{r3, r4, r5, pc}
   170a6:	bf00      	nop
   170a8:	2007c758 	.word	0x2007c758

000170ac <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   170ac:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   170ae:	4c08      	ldr	r4, [pc, #32]	; (170d0 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   170b0:	6823      	ldr	r3, [r4, #0]
   170b2:	b95b      	cbnz	r3, 170cc <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   170b4:	200c      	movs	r0, #12
   170b6:	f7fd fdcb 	bl	14c50 <operator new(unsigned int)>
   170ba:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   170bc:	f7ff ff56 	bl	16f6c <SingletonTemplate<I2C2>::getInstance()>
   170c0:	2390      	movs	r3, #144	; 0x90
   170c2:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   170c4:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   170c6:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   170c8:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   170ca:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   170cc:	6820      	ldr	r0, [r4, #0]
   170ce:	bd38      	pop	{r3, r4, r5, pc}
   170d0:	2007c738 	.word	0x2007c738

000170d4 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   170d4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   170d6:	4c04      	ldr	r4, [pc, #16]	; (170e8 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   170d8:	6823      	ldr	r3, [r4, #0]
   170da:	b91b      	cbnz	r3, 170e4 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   170dc:	2001      	movs	r0, #1
   170de:	f7fd fdb7 	bl	14c50 <operator new(unsigned int)>
   170e2:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   170e4:	6820      	ldr	r0, [r4, #0]
   170e6:	bd10      	pop	{r4, pc}
   170e8:	2007c73c 	.word	0x2007c73c

000170ec <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   170ec:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   170ee:	4c04      	ldr	r4, [pc, #16]	; (17100 <SingletonTemplate<Switches>::getInstance()+0x14>)
   170f0:	6823      	ldr	r3, [r4, #0]
   170f2:	b91b      	cbnz	r3, 170fc <SingletonTemplate<Switches>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   170f4:	2001      	movs	r0, #1
   170f6:	f7fd fdab 	bl	14c50 <operator new(unsigned int)>
   170fa:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   170fc:	6820      	ldr	r0, [r4, #0]
   170fe:	bd10      	pop	{r4, pc}
   17100:	2007c754 	.word	0x2007c754

00017104 <high_level_init()>:
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   17104:	2340      	movs	r3, #64	; 0x40
   17106:	49b6      	ldr	r1, [pc, #728]	; (173e0 <high_level_init()+0x2dc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   17108:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1710a:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1710c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   17110:	4ab4      	ldr	r2, [pc, #720]	; (173e4 <high_level_init()+0x2e0>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17112:	2507      	movs	r5, #7
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   17114:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   17116:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1711a:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   1711c:	4bb2      	ldr	r3, [pc, #712]	; (173e8 <high_level_init()+0x2e4>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1711e:	2402      	movs	r4, #2
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   17120:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   17122:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   17126:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   1712a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   1712c:	6818      	ldr	r0, [r3, #0]
   1712e:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   17132:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   17134:	6818      	ldr	r0, [r3, #0]
   17136:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1713a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   1713c:	6808      	ldr	r0, [r1, #0]
   1713e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   17142:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   17144:	6818      	ldr	r0, [r3, #0]
   17146:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   1714a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   1714c:	6818      	ldr	r0, [r3, #0]
   1714e:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   17152:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   17154:	6818      	ldr	r0, [r3, #0]
   17156:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   1715a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   1715c:	6818      	ldr	r0, [r3, #0]
   1715e:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   17162:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   17164:	6818      	ldr	r0, [r3, #0]
   17166:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   1716a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   1716c:	6818      	ldr	r0, [r3, #0]
   1716e:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   17172:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   17174:	6858      	ldr	r0, [r3, #4]
   17176:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   1717a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   1717c:	6858      	ldr	r0, [r3, #4]
   1717e:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   17182:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   17184:	6858      	ldr	r0, [r3, #4]
   17186:	f020 0003 	bic.w	r0, r0, #3
   1718a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   1718c:	6808      	ldr	r0, [r1, #0]
   1718e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   17192:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   17194:	6858      	ldr	r0, [r3, #4]
   17196:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1719a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   1719c:	6808      	ldr	r0, [r1, #0]
   1719e:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   171a2:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   171a4:	68d9      	ldr	r1, [r3, #12]
   171a6:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   171aa:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   171ac:	6811      	ldr	r1, [r2, #0]
   171ae:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   171b2:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   171b4:	6859      	ldr	r1, [r3, #4]
   171b6:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   171ba:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   171bc:	6859      	ldr	r1, [r3, #4]
   171be:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   171c2:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   171c4:	6898      	ldr	r0, [r3, #8]
   171c6:	4989      	ldr	r1, [pc, #548]	; (173ec <high_level_init()+0x2e8>)
   171c8:	4001      	ands	r1, r0
   171ca:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   171cc:	6811      	ldr	r1, [r2, #0]
   171ce:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   171d2:	f041 0101 	orr.w	r1, r1, #1
   171d6:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   171d8:	6899      	ldr	r1, [r3, #8]
   171da:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   171de:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   171e0:	6899      	ldr	r1, [r3, #8]
   171e2:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   171e6:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   171e8:	6811      	ldr	r1, [r2, #0]
   171ea:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   171ee:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   171f0:	68d9      	ldr	r1, [r3, #12]
   171f2:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   171f6:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   171f8:	68d9      	ldr	r1, [r3, #12]
   171fa:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   171fe:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   17200:	68d9      	ldr	r1, [r3, #12]
   17202:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   17206:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   17208:	6813      	ldr	r3, [r2, #0]
   1720a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   1720e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   17210:	6813      	ldr	r3, [r2, #0]
   17212:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   17216:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   17218:	f7fe fbf6 	bl	15a08 <adc0_init>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   1721c:	2101      	movs	r1, #1
   1721e:	200a      	movs	r0, #10
   17220:	f7f9 fb6a 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   17224:	2101      	movs	r1, #1
   17226:	200a      	movs	r0, #10
   17228:	f7f9 fb80 	bl	1092c <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1722c:	4870      	ldr	r0, [pc, #448]	; (173f0 <high_level_init()+0x2ec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1722e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17230:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17232:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17234:	f7ff fece 	bl	16fd4 <ssp_set_max_clock>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   17238:	f7fe fcf6 	bl	15c28 <ssp1_dma_init>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   1723c:	2101      	movs	r1, #1
   1723e:	2015      	movs	r0, #21
   17240:	f7f9 fb5a 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   17244:	2101      	movs	r1, #1
   17246:	2015      	movs	r0, #21
   17248:	f7f9 fb70 	bl	1092c <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1724c:	4869      	ldr	r0, [pc, #420]	; (173f4 <high_level_init()+0x2f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1724e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17250:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17252:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   17254:	f7ff febe 	bl	16fd4 <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   17258:	f7ff fe88 	bl	16f6c <SingletonTemplate<I2C2>::getInstance()>
   1725c:	2164      	movs	r1, #100	; 0x64
   1725e:	f7fe fdc1 	bl	15de4 <I2C2::init(unsigned int)>
   17262:	b910      	cbnz	r0, 1726a <high_level_init()+0x166>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   17264:	4864      	ldr	r0, [pc, #400]	; (173f8 <high_level_init()+0x2f4>)
   17266:	f003 f9d3 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   1726a:	f7f9 f8e3 	bl	10434 <lpc_sys_setup_system_timer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   1726e:	f7f9 fe8b 	bl	10f88 <wireless_init>
   17272:	b910      	cbnz	r0, 1727a <high_level_init()+0x176>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   17274:	4861      	ldr	r0, [pc, #388]	; (173fc <high_level_init()+0x2f8>)
   17276:	f003 f9cb 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   1727a:	4861      	ldr	r0, [pc, #388]	; (17400 <high_level_init()+0x2fc>)
   1727c:	f7fd fa1a 	bl	146b4 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   17280:	4860      	ldr	r0, [pc, #384]	; (17404 <high_level_init()+0x300>)
   17282:	f7fd fa17 	bl	146b4 <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   17286:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1728a:	f7fd fc9a 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   1728e:	f7ff fe9b 	bl	16fc8 <hl_print_line()>
hl_print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   17292:	f7f9 fa7f 	bl	10794 <sys_get_cpu_clock>
   17296:	f001 f9a3 	bl	185e0 <__aeabi_ui2f>
   1729a:	495b      	ldr	r1, [pc, #364]	; (17408 <high_level_init()+0x304>)
   1729c:	f001 faac 	bl	187f8 <__aeabi_fdiv>
   172a0:	f001 f824 	bl	182ec <__aeabi_f2d>
   172a4:	4602      	mov	r2, r0
   172a6:	460b      	mov	r3, r1
   172a8:	4858      	ldr	r0, [pc, #352]	; (1740c <high_level_init()+0x308>)
   172aa:	f003 f93d 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   172ae:	f7f8 ffa7 	bl	10200 <sys_get_boot_type>
   172b2:	2805      	cmp	r0, #5
   172b4:	ac04      	add	r4, sp, #16
   172b6:	d114      	bne.n	172e2 <high_level_init()+0x1de>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   172b8:	2300      	movs	r3, #0
   172ba:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   172bc:	4b54      	ldr	r3, [pc, #336]	; (17410 <high_level_init()+0x30c>)
   172be:	681b      	ldr	r3, [r3, #0]
   172c0:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   172c2:	f7ff fe81 	bl	16fc8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   172c6:	4b53      	ldr	r3, [pc, #332]	; (17414 <high_level_init()+0x310>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   172c8:	4853      	ldr	r0, [pc, #332]	; (17418 <high_level_init()+0x314>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   172ca:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   172cc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   172ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   172d0:	9400      	str	r4, [sp, #0]
   172d2:	f003 f929 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   172d6:	f7ff fe77 	bl	16fc8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   172da:	f241 3088 	movw	r0, #5000	; 0x1388
   172de:	f7fd fc70 	bl	14bc2 <delay_ms>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   172e2:	f7ff fe1d 	bl	16f20 <Storage::getFlashDrive()>
   172e6:	494d      	ldr	r1, [pc, #308]	; (1741c <high_level_init()+0x318>)
   172e8:	f7ff fe8a 	bl	17000 <hl_mount_storage(FileSystemObject&, char const*)>
   172ec:	4605      	mov	r5, r0
   172ee:	bb68      	cbnz	r0, 1734c <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   172f0:	484b      	ldr	r0, [pc, #300]	; (17420 <high_level_init()+0x31c>)
   172f2:	f003 f919 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   172f6:	f7fc ff8d 	bl	14214 <flash_chip_erase>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   172fa:	f7ff fe11 	bl	16f20 <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   172fe:	4629      	mov	r1, r5
   17300:	462a      	mov	r2, r5
   17302:	f200 2039 	addw	r0, r0, #569	; 0x239
   17306:	f7fb fe6f 	bl	12fe8 <f_mkfs>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   1730a:	4b46      	ldr	r3, [pc, #280]	; (17424 <high_level_init()+0x320>)
   1730c:	4a46      	ldr	r2, [pc, #280]	; (17428 <high_level_init()+0x324>)
   1730e:	2800      	cmp	r0, #0
   17310:	bf0c      	ite	eq
   17312:	4610      	moveq	r0, r2
   17314:	4618      	movne	r0, r3
   17316:	f003 f97b 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1731a:	f7ff fe01 	bl	16f20 <Storage::getFlashDrive()>
   1731e:	493f      	ldr	r1, [pc, #252]	; (1741c <high_level_init()+0x318>)
   17320:	f7ff fe6e 	bl	17000 <hl_mount_storage(FileSystemObject&, char const*)>
   17324:	b990      	cbnz	r0, 1734c <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   17326:	4841      	ldr	r0, [pc, #260]	; (1742c <high_level_init()+0x328>)
   17328:	f003 f972 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   1732c:	f7fc ff1e 	bl	1416c <flash_get_page_size>
   17330:	4601      	mov	r1, r0
   17332:	483f      	ldr	r0, [pc, #252]	; (17430 <high_level_init()+0x32c>)
   17334:	f003 f8f8 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   17338:	f7fc ff08 	bl	1414c <flash_get_page_count>
   1733c:	4605      	mov	r5, r0
   1733e:	f7fc ff15 	bl	1416c <flash_get_page_size>
   17342:	fb00 f105 	mul.w	r1, r0, r5
   17346:	483b      	ldr	r0, [pc, #236]	; (17434 <high_level_init()+0x330>)
   17348:	f003 f8ee 	bl	1a528 <iprintf>
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   1734c:	4e3a      	ldr	r6, [pc, #232]	; (17438 <high_level_init()+0x334>)
   1734e:	4f3b      	ldr	r7, [pc, #236]	; (1743c <high_level_init()+0x338>)
   17350:	7833      	ldrb	r3, [r6, #0]
   17352:	f3bf 8f5b 	dmb	ish
   17356:	f013 0501 	ands.w	r5, r3, #1
   1735a:	d116      	bne.n	1738a <high_level_init()+0x286>
   1735c:	4630      	mov	r0, r6
   1735e:	f000 fb52 	bl	17a06 <__cxa_guard_acquire>
   17362:	b190      	cbz	r0, 1738a <high_level_init()+0x286>
   17364:	f44f 700f 	mov.w	r0, #572	; 0x23c
   17368:	f7fd fc72 	bl	14c50 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   1736c:	2301      	movs	r3, #1
   1736e:	f880 3238 	strb.w	r3, [r0, #568]	; 0x238
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   17372:	2331      	movs	r3, #49	; 0x31
   17374:	f880 3239 	strb.w	r3, [r0, #569]	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   17378:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   1737a:	f880 523b 	strb.w	r5, [r0, #571]	; 0x23b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1737e:	f880 323a 	strb.w	r3, [r0, #570]	; 0x23a
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   17382:	6038      	str	r0, [r7, #0]
   17384:	4630      	mov	r0, r6
   17386:	f000 fb4a 	bl	17a1e <__cxa_guard_release>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   1738a:	492d      	ldr	r1, [pc, #180]	; (17440 <high_level_init()+0x33c>)
   1738c:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1738e:	4d2d      	ldr	r5, [pc, #180]	; (17444 <high_level_init()+0x340>)
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   17390:	f7ff fe36 	bl	17000 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   17394:	2118      	movs	r1, #24
   17396:	4816      	ldr	r0, [pc, #88]	; (173f0 <high_level_init()+0x2ec>)
   17398:	f7ff fe1c 	bl	16fd4 <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   1739c:	f7ff fe14 	bl	16fc8 <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   173a0:	682b      	ldr	r3, [r5, #0]
   173a2:	b94b      	cbnz	r3, 173b8 <high_level_init()+0x2b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   173a4:	2008      	movs	r0, #8
   173a6:	f7fd fc53 	bl	14c50 <operator new(unsigned int)>
   173aa:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   173ac:	f7ff fdde 	bl	16f6c <SingletonTemplate<I2C2>::getInstance()>
   173b0:	2338      	movs	r3, #56	; 0x38
   173b2:	6030      	str	r0, [r6, #0]
   173b4:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   173b6:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   173b8:	6828      	ldr	r0, [r5, #0]
   173ba:	f7fd f82b 	bl	14414 <Acceleration_Sensor::init()>
   173be:	4606      	mov	r6, r0
   173c0:	b910      	cbnz	r0, 173c8 <high_level_init()+0x2c4>
   173c2:	4821      	ldr	r0, [pc, #132]	; (17448 <high_level_init()+0x344>)
   173c4:	f003 f924 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   173c8:	f7ff fe70 	bl	170ac <SingletonTemplate<TemperatureSensor>::getInstance()>
   173cc:	f7fd f91c 	bl	14608 <I2C_Temp::init()>
   173d0:	4605      	mov	r5, r0
   173d2:	2800      	cmp	r0, #0
   173d4:	d13c      	bne.n	17450 <high_level_init()+0x34c>
   173d6:	481d      	ldr	r0, [pc, #116]	; (1744c <high_level_init()+0x348>)
   173d8:	f003 f91a 	bl	1a610 <puts>
   173dc:	462e      	mov	r6, r5
   173de:	e037      	b.n	17450 <high_level_init()+0x34c>
   173e0:	2009c000 	.word	0x2009c000
   173e4:	2009c020 	.word	0x2009c020
   173e8:	4002c000 	.word	0x4002c000
   173ec:	fffcfcf0 	.word	0xfffcfcf0
   173f0:	40030000 	.word	0x40030000
   173f4:	40088000 	.word	0x40088000
   173f8:	0001ff7f 	.word	0x0001ff7f
   173fc:	0001ffb0 	.word	0x0001ffb0
   17400:	0001ffd5 	.word	0x0001ffd5
   17404:	0001ffda 	.word	0x0001ffda
   17408:	49742400 	.word	0x49742400
   1740c:	0001ffe0 	.word	0x0001ffe0
   17410:	40024044 	.word	0x40024044
   17414:	40024000 	.word	0x40024000
   17418:	0001fff8 	.word	0x0001fff8
   1741c:	00020070 	.word	0x00020070
   17420:	00020078 	.word	0x00020078
   17424:	0001ff6c 	.word	0x0001ff6c
   17428:	0001ff67 	.word	0x0001ff67
   1742c:	000200b5 	.word	0x000200b5
   17430:	000200d4 	.word	0x000200d4
   17434:	000200e3 	.word	0x000200e3
   17438:	2007c740 	.word	0x2007c740
   1743c:	2007c744 	.word	0x2007c744
   17440:	000200fe 	.word	0x000200fe
   17444:	2007c75c 	.word	0x2007c75c
   17448:	00020106 	.word	0x00020106
   1744c:	00020121 	.word	0x00020121
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   17450:	f7ff fd9c 	bl	16f8c <SingletonTemplate<LED_Display>::getInstance()>
   17454:	f7fd f860 	bl	14518 <LED_Display::init()>
   17458:	4605      	mov	r5, r0
   1745a:	b918      	cbnz	r0, 17464 <high_level_init()+0x360>
   1745c:	486d      	ldr	r0, [pc, #436]	; (17614 <high_level_init()+0x510>)
   1745e:	f003 f8d7 	bl	1a610 <puts>
   17462:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   17464:	4d6c      	ldr	r5, [pc, #432]	; (17618 <high_level_init()+0x514>)
   17466:	682b      	ldr	r3, [r5, #0]
   17468:	b91b      	cbnz	r3, 17472 <high_level_init()+0x36e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1746a:	2001      	movs	r0, #1
   1746c:	f7fd fbf0 	bl	14c50 <operator new(unsigned int)>
   17470:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   17472:	6828      	ldr	r0, [r5, #0]
   17474:	f7fd f81e 	bl	144b4 <IR_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   17478:	f7ff fe2c 	bl	170d4 <SingletonTemplate<Light_Sensor>::getInstance()>
   1747c:	f7fd f8b0 	bl	145e0 <Light_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   17480:	f7ff fe06 	bl	17090 <SingletonTemplate<LED>::getInstance()>
   17484:	f7fd f881 	bl	1458a <LED::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   17488:	f7ff fe30 	bl	170ec <SingletonTemplate<Switches>::getInstance()>
   1748c:	f7fd f8ad 	bl	145ea <Switches::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   17490:	f7ff fdfe 	bl	17090 <SingletonTemplate<LED>::getInstance()>
   17494:	2100      	movs	r1, #0
   17496:	f7fd f87b 	bl	14590 <LED::setAll(unsigned char)>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   1749a:	2e00      	cmp	r6, #0
   1749c:	f040 8081 	bne.w	175a2 <high_level_init()+0x49e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   174a0:	f7ff fd92 	bl	16fc8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   174a4:	f7ff fd72 	bl	16f8c <SingletonTemplate<LED_Display>::getInstance()>
   174a8:	212d      	movs	r1, #45	; 0x2d
   174aa:	f7fd f81d 	bl	144e8 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   174ae:	f7ff fd6d 	bl	16f8c <SingletonTemplate<LED_Display>::getInstance()>
   174b2:	212d      	movs	r1, #45	; 0x2d
   174b4:	f7fd f824 	bl	14500 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   174b8:	f7ff fdea 	bl	17090 <SingletonTemplate<LED>::getInstance()>
   174bc:	21ff      	movs	r1, #255	; 0xff
   174be:	f7fd f867 	bl	14590 <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   174c2:	2210      	movs	r2, #16
   174c4:	2100      	movs	r1, #0
   174c6:	4620      	mov	r0, r4
   174c8:	f001 fe94 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   174cc:	2300      	movs	r3, #0
   174ce:	220f      	movs	r2, #15
   174d0:	4621      	mov	r1, r4
   174d2:	4852      	ldr	r0, [pc, #328]	; (1761c <high_level_init()+0x518>)
   174d4:	f7fc ff61 	bl	1439a <Storage::read(char const*, void*, unsigned int, unsigned int)>
   174d8:	b980      	cbnz	r0, 174fc <high_level_init()+0x3f8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   174da:	4620      	mov	r0, r4
   174dc:	f001 fbd7 	bl	18c8e <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   174e0:	b2c5      	uxtb	r5, r0
   174e2:	4628      	mov	r0, r5
   174e4:	f7f9 ff84 	bl	113f0 <mesh_set_node_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   174e8:	4a4d      	ldr	r2, [pc, #308]	; (17620 <high_level_init()+0x51c>)
   174ea:	4b4e      	ldr	r3, [pc, #312]	; (17624 <high_level_init()+0x520>)
   174ec:	4629      	mov	r1, r5
   174ee:	2800      	cmp	r0, #0
   174f0:	bf18      	it	ne
   174f2:	4613      	movne	r3, r2
   174f4:	4a49      	ldr	r2, [pc, #292]	; (1761c <high_level_init()+0x518>)
   174f6:	484c      	ldr	r0, [pc, #304]	; (17628 <high_level_init()+0x524>)
   174f8:	f003 f816 	bl	1a528 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   174fc:	f7ff fdea 	bl	170d4 <SingletonTemplate<Light_Sensor>::getInstance()>
   17500:	f7fd f870 	bl	145e4 <Light_Sensor::getRawValue()>
   17504:	4605      	mov	r5, r0
   17506:	2000      	movs	r0, #0
   17508:	f004 fa46 	bl	1b998 <time>
   1750c:	4428      	add	r0, r5
   1750e:	f003 f887 	bl	1a620 <srand>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   17512:	f44f 7200 	mov.w	r2, #512	; 0x200
   17516:	2100      	movs	r1, #0
   17518:	4620      	mov	r0, r4
   1751a:	f001 fe6b 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   1751e:	4620      	mov	r0, r4
   17520:	f7f8 ffc8 	bl	104b4 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   17524:	4621      	mov	r1, r4
   17526:	4841      	ldr	r0, [pc, #260]	; (1762c <high_level_init()+0x528>)
   17528:	f002 fffe 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   1752c:	f7ff fd4c 	bl	16fc8 <hl_print_line()>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   17530:	2280      	movs	r2, #128	; 0x80
   17532:	2100      	movs	r1, #0
   17534:	4620      	mov	r0, r4
   17536:	f001 fe5d 	bl	191f4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   1753a:	4620      	mov	r0, r4
   1753c:	f7fc fdf2 	bl	14124 <flash_read_permanent_id>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   17540:	7822      	ldrb	r2, [r4, #0]
   17542:	2aff      	cmp	r2, #255	; 0xff
   17544:	d03b      	beq.n	175be <high_level_init()+0x4ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   17546:	4621      	mov	r1, r4
   17548:	4839      	ldr	r0, [pc, #228]	; (17630 <high_level_init()+0x52c>)
   1754a:	f002 ffed 	bl	1a528 <iprintf>
chip_get_prog_max():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49

/// @returns the number of times the chip was programmed a different program than the preceding program
static inline uint32_t chip_get_prog_modify_count(void) {   return *(chip_get_magic_location() + 1);    }

/// @returns the highest program size that was programmed
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   1754e:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   17552:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52

/// @returns the lowest program size that was programmed
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   17554:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   17558:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55

/// @returns the number of milliseconds it took to program the last program.
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   1755a:	f24f 0310 	movw	r3, #61456	; 0xf010
   1755e:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   17560:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17564:	681a      	ldr	r2, [r3, #0]
   17566:	f24f 0304 	movw	r3, #61444	; 0xf004
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1756a:	0aad      	lsrs	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1756c:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1756e:	0aa4      	lsrs	r4, r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   17570:	4830      	ldr	r0, [pc, #192]	; (17634 <high_level_init()+0x530>)
   17572:	f002 ffd9 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   17576:	462a      	mov	r2, r5
   17578:	4621      	mov	r1, r4
   1757a:	482f      	ldr	r0, [pc, #188]	; (17638 <high_level_init()+0x534>)
   1757c:	f002 ffd4 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   17580:	4631      	mov	r1, r6
   17582:	482e      	ldr	r0, [pc, #184]	; (1763c <high_level_init()+0x538>)
   17584:	f002 ffd0 	bl	1a528 <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   17588:	f7ff fd1e 	bl	16fc8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   1758c:	2001      	movs	r0, #1
   1758e:	f7fd f9db 	bl	14948 <logger_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   17592:	482b      	ldr	r0, [pc, #172]	; (17640 <high_level_init()+0x53c>)
   17594:	f003 f83c 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   17598:	f7ff fd16 	bl	16fc8 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   1759c:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   175a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   175a2:	f7ff fcf3 	bl	16f8c <SingletonTemplate<LED_Display>::getInstance()>
   175a6:	4605      	mov	r5, r0
   175a8:	f7ff fd80 	bl	170ac <SingletonTemplate<TemperatureSensor>::getInstance()>
   175ac:	f7fd f856 	bl	1465c <I2C_Temp::getFarenheit()>
   175b0:	f001 f9be 	bl	18930 <__aeabi_f2uiz>
   175b4:	b2c1      	uxtb	r1, r0
   175b6:	4628      	mov	r0, r5
   175b8:	f7fc ffca 	bl	14550 <LED_Display::setNumber(char)>
   175bc:	e781      	b.n	174c2 <high_level_init()+0x3be>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   175be:	f7ff fd95 	bl	170ec <SingletonTemplate<Switches>::getInstance()>
   175c2:	f7fd f815 	bl	145f0 <Switches::getSwitchValues()>
   175c6:	2809      	cmp	r0, #9
   175c8:	d11f      	bne.n	1760a <high_level_init()+0x506>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   175ca:	481e      	ldr	r0, [pc, #120]	; (17644 <high_level_init()+0x540>)
   175cc:	f003 f820 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   175d0:	4621      	mov	r1, r4
   175d2:	481d      	ldr	r0, [pc, #116]	; (17648 <high_level_init()+0x544>)
   175d4:	f003 f92c 	bl	1a830 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   175d8:	4621      	mov	r1, r4
   175da:	481c      	ldr	r0, [pc, #112]	; (1764c <high_level_init()+0x548>)
   175dc:	f002 ffa4 	bl	1a528 <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   175e0:	481b      	ldr	r0, [pc, #108]	; (17650 <high_level_init()+0x54c>)
   175e2:	f003 f815 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   175e6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   175e8:	a903      	add	r1, sp, #12
   175ea:	481a      	ldr	r0, [pc, #104]	; (17654 <high_level_init()+0x550>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   175ec:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   175ee:	f003 f91f 	bl	1a830 <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   175f2:	f89d 300c 	ldrb.w	r3, [sp, #12]
   175f6:	2b59      	cmp	r3, #89	; 0x59
   175f8:	d103      	bne.n	17602 <high_level_init()+0x4fe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   175fa:	4620      	mov	r0, r4
   175fc:	f7fc fd70 	bl	140e0 <flash_write_permanent_id>
   17600:	e7a5      	b.n	1754e <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   17602:	4815      	ldr	r0, [pc, #84]	; (17658 <high_level_init()+0x554>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17604:	f003 f804 	bl	1a610 <puts>
   17608:	e7a1      	b.n	1754e <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   1760a:	4814      	ldr	r0, [pc, #80]	; (1765c <high_level_init()+0x558>)
   1760c:	f003 f800 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17610:	4813      	ldr	r0, [pc, #76]	; (17660 <high_level_init()+0x55c>)
   17612:	e7f7      	b.n	17604 <high_level_init()+0x500>
   17614:	0002013b 	.word	0x0002013b
   17618:	2007c310 	.word	0x2007c310
   1761c:	00020154 	.word	0x00020154
   17620:	0001ff72 	.word	0x0001ff72
   17624:	0001ff78 	.word	0x0001ff78
   17628:	0002015a 	.word	0x0002015a
   1762c:	0002018e 	.word	0x0002018e
   17630:	00020191 	.word	0x00020191
   17634:	000202ae 	.word	0x000202ae
   17638:	000202da 	.word	0x000202da
   1763c:	00020307 	.word	0x00020307
   17640:	00020324 	.word	0x00020324
   17644:	000201ad 	.word	0x000201ad
   17648:	000201cf 	.word	0x000201cf
   1764c:	000201d4 	.word	0x000201d4
   17650:	000201ef 	.word	0x000201ef
   17654:	00020232 	.word	0x00020232
   17658:	00020236 	.word	0x00020236
   1765c:	0002024e 	.word	0x0002024e
   17660:	0002027c 	.word	0x0002027c

00017664 <ssp0_exchange_byte>:
ssp0_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   17664:	4b03      	ldr	r3, [pc, #12]	; (17674 <ssp0_exchange_byte+0x10>)
   17666:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   17668:	68da      	ldr	r2, [r3, #12]
   1766a:	06d2      	lsls	r2, r2, #27
   1766c:	d4fc      	bmi.n	17668 <ssp0_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1766e:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp0_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP0, out);
}
   17670:	b2c0      	uxtb	r0, r0
   17672:	4770      	bx	lr
   17674:	40088000 	.word	0x40088000

00017678 <writeSCI(unsigned char, unsigned short)>:
_Z8writeSCIht():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:115
    XDCS.setHigh();

}

void writeSCI(uint8_t reg_addr, uint16_t value)
{
   17678:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:116
    u0_dbg_printf("WriteSCI: I made it into the function %x %x\n", reg_addr, value);
   1767a:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:115
{
   1767c:	4605      	mov	r5, r0
   1767e:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:116
    u0_dbg_printf("WriteSCI: I made it into the function %x %x\n", reg_addr, value);
   17680:	4601      	mov	r1, r0
   17682:	4811      	ldr	r0, [pc, #68]	; (176c8 <writeSCI(unsigned char, unsigned short)+0x50>)
   17684:	f7fd f9d5 	bl	14a32 <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:117
    while (!datareq.read()) {
   17688:	4e10      	ldr	r6, [pc, #64]	; (176cc <writeSCI(unsigned char, unsigned short)+0x54>)
   1768a:	4630      	mov	r0, r6
   1768c:	f7fc fe3b 	bl	14306 <GPIO::read() const>
   17690:	b918      	cbnz	r0, 1769a <writeSCI(unsigned char, unsigned short)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:118
        delay_ms(50);
   17692:	2032      	movs	r0, #50	; 0x32
   17694:	f7fd fa95 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:117
    while (!datareq.read()) {
   17698:	e7f7      	b.n	1768a <writeSCI(unsigned char, unsigned short)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:120
    }
    CS.setLow();
   1769a:	480d      	ldr	r0, [pc, #52]	; (176d0 <writeSCI(unsigned char, unsigned short)+0x58>)
   1769c:	f7fc fe43 	bl	14326 <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:121
    ssp0_exchange_byte(0x2); // write
   176a0:	2002      	movs	r0, #2
   176a2:	f7ff ffdf 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:122
    ssp0_exchange_byte(reg_addr); // mode reg
   176a6:	4628      	mov	r0, r5
   176a8:	f7ff ffdc 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:123
    ssp0_exchange_byte(value >> 8);
   176ac:	0a20      	lsrs	r0, r4, #8
   176ae:	f7ff ffd9 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:124
    ssp0_exchange_byte(value & 0xff);
   176b2:	b2e0      	uxtb	r0, r4
   176b4:	f7ff ffd6 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:125
    CS.setHigh();
   176b8:	4805      	ldr	r0, [pc, #20]	; (176d0 <writeSCI(unsigned char, unsigned short)+0x58>)
   176ba:	f7fc fe2e 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:127
    u0_dbg_printf("WriteSCI: i have made it past the hard part\n");
}
   176be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:126
    u0_dbg_printf("WriteSCI: i have made it past the hard part\n");
   176c2:	4804      	ldr	r0, [pc, #16]	; (176d4 <writeSCI(unsigned char, unsigned short)+0x5c>)
   176c4:	f7fd b9b5 	b.w	14a32 <u0_dbg_printf>
   176c8:	000203e1 	.word	0x000203e1
   176cc:	2007c778 	.word	0x2007c778
   176d0:	2007c760 	.word	0x2007c760
   176d4:	0002040e 	.word	0x0002040e

000176d8 <setVolume(unsigned char, unsigned char)>:
_Z9setVolumehh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:129
void setVolume(uint8_t left, uint8_t right)
{
   176d8:	b538      	push	{r3, r4, r5, lr}
   176da:	460c      	mov	r4, r1
   176dc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:130
    u0_dbg_printf("Turn the volume up boiii\n");
   176de:	4807      	ldr	r0, [pc, #28]	; (176fc <setVolume(unsigned char, unsigned char)+0x24>)
   176e0:	f7fd f9a7 	bl	14a32 <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:134
    uint16_t v;
    v = left;
    v <<= 8;
    v |= right;
   176e4:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:135
    u0_dbg_printf("about to use WriteSCI function");
   176e8:	4805      	ldr	r0, [pc, #20]	; (17700 <setVolume(unsigned char, unsigned char)+0x28>)
   176ea:	f7fd f9a2 	bl	14a32 <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:136
    writeSCI(0x000B, v);
   176ee:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:137
}
   176f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:136
    writeSCI(0x000B, v);
   176f4:	200b      	movs	r0, #11
   176f6:	f7ff bfbf 	b.w	17678 <writeSCI(unsigned char, unsigned short)>
   176fa:	bf00      	nop
   176fc:	0002043b 	.word	0x0002043b
   17700:	00020455 	.word	0x00020455

00017704 <main>:
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:45
{
   17704:	b538      	push	{r3, r4, r5, lr}
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
    lpc_pconp(pconp_ssp0, true);
   17706:	2101      	movs	r1, #1
   17708:	2015      	movs	r0, #21
   1770a:	f7f9 f8f5 	bl	108f8 <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   1770e:	2101      	movs	r1, #1
   17710:	2015      	movs	r0, #21
   17712:	f7f9 f90b 	bl	1092c <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   17716:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   17718:	2307      	movs	r3, #7
   1771a:	4d5b      	ldr	r5, [pc, #364]	; (17888 <main+0x184>)
   1771c:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1771e:	606c      	str	r4, [r5, #4]
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   17720:	f7f9 f838 	bl	10794 <sys_get_cpu_clock>
   17724:	4b59      	ldr	r3, [pc, #356]	; (1788c <main+0x188>)
   17726:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1772a:	fbb0 f2f4 	udiv	r2, r0, r4
   1772e:	2a01      	cmp	r2, #1
   17730:	d904      	bls.n	1773c <main+0x38>
   17732:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   17736:	d001      	beq.n	1773c <main+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   17738:	3402      	adds	r4, #2
   1773a:	e7f6      	b.n	1772a <main+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   1773c:	612c      	str	r4, [r5, #16]
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:52
    delay_ms(1000);
   1773e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   17742:	f7fd fa3e 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:53
    CS.setAsOutput();
   17746:	4852      	ldr	r0, [pc, #328]	; (17890 <main+0x18c>)
   17748:	f7fc fdd5 	bl	142f6 <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:54
    XDCS.setAsOutput();
   1774c:	4851      	ldr	r0, [pc, #324]	; (17894 <main+0x190>)
   1774e:	f7fc fdd2 	bl	142f6 <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:55
    RST.setAsOutput();
   17752:	4851      	ldr	r0, [pc, #324]	; (17898 <main+0x194>)
   17754:	f7fc fdcf 	bl	142f6 <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:56
    datareq.setAsInput();
   17758:	4850      	ldr	r0, [pc, #320]	; (1789c <main+0x198>)
   1775a:	f7fc fdc3 	bl	142e4 <GPIO::setAsInput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:57
    RST.setLow();
   1775e:	484e      	ldr	r0, [pc, #312]	; (17898 <main+0x194>)
   17760:	f7fc fde1 	bl	14326 <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:58
    delay_ms(5);
   17764:	2005      	movs	r0, #5
   17766:	f7fd fa2c 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:59
    RST.setHigh();
   1776a:	484b      	ldr	r0, [pc, #300]	; (17898 <main+0x194>)
   1776c:	f7fc fdd5 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:60
    delay_ms(5);
   17770:	2005      	movs	r0, #5
   17772:	f7fd fa26 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:61
    XDCS.setHigh();
   17776:	4847      	ldr	r0, [pc, #284]	; (17894 <main+0x190>)
   17778:	f7fc fdcf 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:63
    CS.setHigh();
   1777c:	4844      	ldr	r0, [pc, #272]	; (17890 <main+0x18c>)
   1777e:	f7fc fdcc 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:64
    delay_ms(5);
   17782:	2005      	movs	r0, #5
   17784:	f7fd fa1d 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:65
    delay_ms(5);
   17788:	2005      	movs	r0, #5
   1778a:	f7fd fa1a 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:66
    printf("second delay occured before start of program\n");
   1778e:	4844      	ldr	r0, [pc, #272]	; (178a0 <main+0x19c>)
   17790:	f002 ff3e 	bl	1a610 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:68
    u0_dbg_printf("Do first data transfer. -tests 158\n");
   17794:	4843      	ldr	r0, [pc, #268]	; (178a4 <main+0x1a0>)
   17796:	f7fd f94c 	bl	14a32 <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:69
    writeSCI(0x0, ((1 << 5) | 0x0810));
   1779a:	f44f 6103 	mov.w	r1, #2096	; 0x830
   1779e:	2000      	movs	r0, #0
   177a0:	f7ff ff6a 	bl	17678 <writeSCI(unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:71
    writeSCI(0x0003, 0x6000);
   177a4:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
   177a8:	2003      	movs	r0, #3
   177aa:	f7ff ff65 	bl	17678 <writeSCI(unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:72
    writeSCI(0x0005, 0xAC45);
   177ae:	f64a 4145 	movw	r1, #44101	; 0xac45
   177b2:	2005      	movs	r0, #5
   177b4:	f7ff ff60 	bl	17678 <writeSCI(unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:73
    setVolume(70, 70);
   177b8:	2146      	movs	r1, #70	; 0x46
   177ba:	4608      	mov	r0, r1
   177bc:	f7ff ff8c 	bl	176d8 <setVolume(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:74
    u0_dbg_printf("Do final data transfer\n");
   177c0:	4839      	ldr	r0, [pc, #228]	; (178a8 <main+0x1a4>)
   177c2:	f7fd f936 	bl	14a32 <u0_dbg_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:75
    CS.setLow();
   177c6:	4832      	ldr	r0, [pc, #200]	; (17890 <main+0x18c>)
   177c8:	f7fc fdad 	bl	14326 <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:76
    ssp0_exchange_byte(0x2);
   177cc:	2002      	movs	r0, #2
   177ce:	f7ff ff49 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:77
    ssp0_exchange_byte(0x0);
   177d2:	2000      	movs	r0, #0
   177d4:	f7ff ff46 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:78
    ssp0_exchange_byte(0x08);
   177d8:	2008      	movs	r0, #8
   177da:	f7ff ff43 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:79
    ssp0_exchange_byte(0x24);
   177de:	2024      	movs	r0, #36	; 0x24
   177e0:	f7ff ff40 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:80
    CS.setHigh();
   177e4:	482a      	ldr	r0, [pc, #168]	; (17890 <main+0x18c>)
   177e6:	f7fc fd98 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:82
    delay_ms(5);
   177ea:	2005      	movs	r0, #5
   177ec:	f7fd f9e9 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:84
    while (!datareq.read());
   177f0:	4c2a      	ldr	r4, [pc, #168]	; (1789c <main+0x198>)
   177f2:	4620      	mov	r0, r4
   177f4:	f7fc fd87 	bl	14306 <GPIO::read() const>
   177f8:	2800      	cmp	r0, #0
   177fa:	d0fa      	beq.n	177f2 <main+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:86
    delay_ms(5);
   177fc:	2005      	movs	r0, #5
   177fe:	f7fd f9e0 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:88
    XDCS.setLow();
   17802:	4824      	ldr	r0, [pc, #144]	; (17894 <main+0x190>)
   17804:	f7fc fd8f 	bl	14326 <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:89
    ssp0_exchange_byte(0x53);
   17808:	2053      	movs	r0, #83	; 0x53
   1780a:	f7ff ff2b 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:90
    ssp0_exchange_byte(0xef);
   1780e:	20ef      	movs	r0, #239	; 0xef
   17810:	f7ff ff28 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:91
    ssp0_exchange_byte(0x6e);
   17814:	206e      	movs	r0, #110	; 0x6e
   17816:	f7ff ff25 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:92
    ssp0_exchange_byte(0x30);
   1781a:	2030      	movs	r0, #48	; 0x30
   1781c:	f7ff ff22 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:93
    ssp0_exchange_byte(0x00);
   17820:	2000      	movs	r0, #0
   17822:	f7ff ff1f 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:94
    ssp0_exchange_byte(0x00);
   17826:	2000      	movs	r0, #0
   17828:	f7ff ff1c 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:95
    ssp0_exchange_byte(0x00);
   1782c:	2000      	movs	r0, #0
   1782e:	f7ff ff19 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:96
    ssp0_exchange_byte(0x00);
   17832:	2000      	movs	r0, #0
   17834:	f7ff ff16 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:97
    XDCS.setHigh();
   17838:	4816      	ldr	r0, [pc, #88]	; (17894 <main+0x190>)
   1783a:	f7fc fd6e 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:99
    delay_ms(10000);
   1783e:	f242 7010 	movw	r0, #10000	; 0x2710
   17842:	f7fd f9be 	bl	14bc2 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:101
    XDCS.setLow();
   17846:	4813      	ldr	r0, [pc, #76]	; (17894 <main+0x190>)
   17848:	f7fc fd6d 	bl	14326 <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:102
    ssp0_exchange_byte(0x45);
   1784c:	2045      	movs	r0, #69	; 0x45
   1784e:	f7ff ff09 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:103
    ssp0_exchange_byte(0x78);
   17852:	2078      	movs	r0, #120	; 0x78
   17854:	f7ff ff06 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:104
    ssp0_exchange_byte(0x69);
   17858:	2069      	movs	r0, #105	; 0x69
   1785a:	f7ff ff03 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:105
    ssp0_exchange_byte(0x74);
   1785e:	2074      	movs	r0, #116	; 0x74
   17860:	f7ff ff00 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:106
    ssp0_exchange_byte(0x00);
   17864:	2000      	movs	r0, #0
   17866:	f7ff fefd 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:107
    ssp0_exchange_byte(0x00);
   1786a:	2000      	movs	r0, #0
   1786c:	f7ff fefa 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:108
    ssp0_exchange_byte(0x00);
   17870:	2000      	movs	r0, #0
   17872:	f7ff fef7 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:109
    ssp0_exchange_byte(0x00);
   17876:	2000      	movs	r0, #0
   17878:	f7ff fef4 	bl	17664 <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:110
    XDCS.setHigh();
   1787c:	4805      	ldr	r0, [pc, #20]	; (17894 <main+0x190>)
   1787e:	f7fc fd4c 	bl	1431a <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:112
}
   17882:	2000      	movs	r0, #0
   17884:	bd38      	pop	{r3, r4, r5, pc}
   17886:	bf00      	nop
   17888:	40088000 	.word	0x40088000
   1788c:	000f4240 	.word	0x000f4240
   17890:	2007c760 	.word	0x2007c760
   17894:	2007c770 	.word	0x2007c770
   17898:	2007c768 	.word	0x2007c768
   1789c:	2007c778 	.word	0x2007c778
   178a0:	00020474 	.word	0x00020474
   178a4:	000204a1 	.word	0x000204a1
   178a8:	000204c5 	.word	0x000204c5

000178ac <_GLOBAL__sub_I_CS>:
_GLOBAL__sub_I_CS():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:160


uint16_t getDecodeTime()
{
    return readSCI(0xC028);
}
   178ac:	b570      	push	{r4, r5, r6, lr}
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:39
GPIO CS(P0_0);
   178ae:	4e16      	ldr	r6, [pc, #88]	; (17908 <_GLOBAL__sub_I_CS+0x5c>)
   178b0:	4d16      	ldr	r5, [pc, #88]	; (1790c <_GLOBAL__sub_I_CS+0x60>)
   178b2:	4c17      	ldr	r4, [pc, #92]	; (17910 <_GLOBAL__sub_I_CS+0x64>)
   178b4:	2100      	movs	r1, #0
   178b6:	4630      	mov	r0, r6
   178b8:	f7fc fcec 	bl	14294 <GPIO::GPIO(LPC1758_GPIO_Type)>
   178bc:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:40
GPIO XDCS(P0_1); // pin, port layout
   178be:	4e15      	ldr	r6, [pc, #84]	; (17914 <_GLOBAL__sub_I_CS+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:39
GPIO CS(P0_0);
   178c0:	462a      	mov	r2, r5
   178c2:	4621      	mov	r1, r4
   178c4:	f7fd fa22 	bl	14d0c <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:40
GPIO XDCS(P0_1); // pin, port layout
   178c8:	2101      	movs	r1, #1
   178ca:	4630      	mov	r0, r6
   178cc:	f7fc fce2 	bl	14294 <GPIO::GPIO(LPC1758_GPIO_Type)>
   178d0:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:41
GPIO datareq(P2_6);
   178d2:	4e11      	ldr	r6, [pc, #68]	; (17918 <_GLOBAL__sub_I_CS+0x6c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:40
GPIO XDCS(P0_1); // pin, port layout
   178d4:	462a      	mov	r2, r5
   178d6:	4621      	mov	r1, r4
   178d8:	f7fd fa18 	bl	14d0c <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:41
GPIO datareq(P2_6);
   178dc:	2146      	movs	r1, #70	; 0x46
   178de:	4630      	mov	r0, r6
   178e0:	f7fc fcd8 	bl	14294 <GPIO::GPIO(LPC1758_GPIO_Type)>
   178e4:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:42
GPIO RST(P0_30);
   178e6:	4e0d      	ldr	r6, [pc, #52]	; (1791c <_GLOBAL__sub_I_CS+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:41
GPIO datareq(P2_6);
   178e8:	462a      	mov	r2, r5
   178ea:	4621      	mov	r1, r4
   178ec:	f7fd fa0e 	bl	14d0c <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:42
GPIO RST(P0_30);
   178f0:	211e      	movs	r1, #30
   178f2:	4630      	mov	r0, r6
   178f4:	f7fc fcce 	bl	14294 <GPIO::GPIO(LPC1758_GPIO_Type)>
   178f8:	462a      	mov	r2, r5
   178fa:	4621      	mov	r1, r4
   178fc:	4630      	mov	r0, r6
_GLOBAL__sub_I_CS():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:160
}
   178fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3Test/L5_Application/main.cpp:42
GPIO RST(P0_30);
   17902:	f7fd ba03 	b.w	14d0c <__aeabi_atexit>
   17906:	bf00      	nop
   17908:	2007c760 	.word	0x2007c760
   1790c:	2007c538 	.word	0x2007c538
   17910:	00014381 	.word	0x00014381
   17914:	2007c770 	.word	0x2007c770
   17918:	2007c778 	.word	0x2007c778
   1791c:	2007c768 	.word	0x2007c768

00017920 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   17920:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   17922:	2310      	movs	r3, #16
   17924:	2400      	movs	r4, #0
   17926:	9302      	str	r3, [sp, #8]
   17928:	6803      	ldr	r3, [r0, #0]
   1792a:	4615      	mov	r5, r2
   1792c:	699e      	ldr	r6, [r3, #24]
   1792e:	9400      	str	r4, [sp, #0]
   17930:	466b      	mov	r3, sp
   17932:	f88d 4004 	strb.w	r4, [sp, #4]
   17936:	9403      	str	r4, [sp, #12]
   17938:	6812      	ldr	r2, [r2, #0]
   1793a:	47b0      	blx	r6
   1793c:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17940:	f003 0306 	and.w	r3, r3, #6
   17944:	2b06      	cmp	r3, #6
   17946:	bf09      	itett	eq
   17948:	2001      	moveq	r0, #1
   1794a:	4620      	movne	r0, r4
   1794c:	9b00      	ldreq	r3, [sp, #0]
   1794e:	602b      	streq	r3, [r5, #0]
   17950:	b004      	add	sp, #16
   17952:	bd70      	pop	{r4, r5, r6, pc}

00017954 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   17954:	9800      	ldr	r0, [sp, #0]
   17956:	4290      	cmp	r0, r2
   17958:	bf0c      	ite	eq
   1795a:	2006      	moveq	r0, #6
   1795c:	2001      	movne	r0, #1
   1795e:	4770      	bx	lr

00017960 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   17960:	b510      	push	{r4, lr}
   17962:	4604      	mov	r4, r0
   17964:	4b02      	ldr	r3, [pc, #8]	; (17970 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   17966:	6003      	str	r3, [r0, #0]
   17968:	f000 f8e3 	bl	17b32 <std::type_info::~type_info()>
   1796c:	4620      	mov	r0, r4
   1796e:	bd10      	pop	{r4, pc}
   17970:	00020518 	.word	0x00020518

00017974 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   17974:	b510      	push	{r4, lr}
   17976:	4604      	mov	r4, r0
   17978:	f7ff fff2 	bl	17960 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1797c:	4620      	mov	r0, r4
   1797e:	2108      	movs	r1, #8
   17980:	f000 f83f 	bl	17a02 <operator delete(void*, unsigned int)>
   17984:	4620      	mov	r0, r4
   17986:	bd10      	pop	{r4, pc}

00017988 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   17988:	b538      	push	{r3, r4, r5, lr}
   1798a:	4615      	mov	r5, r2
   1798c:	461c      	mov	r4, r3
   1798e:	f000 f8d3 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17992:	b120      	cbz	r0, 1799e <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   17994:	2308      	movs	r3, #8
   17996:	60e3      	str	r3, [r4, #12]
   17998:	2306      	movs	r3, #6
   1799a:	6025      	str	r5, [r4, #0]
   1799c:	7123      	strb	r3, [r4, #4]
   1799e:	bd38      	pop	{r3, r4, r5, pc}

000179a0 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   179a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   179a4:	4605      	mov	r5, r0
   179a6:	460c      	mov	r4, r1
   179a8:	4616      	mov	r6, r2
   179aa:	461f      	mov	r7, r3
   179ac:	f000 f8c4 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   179b0:	b948      	cbnz	r0, 179c6 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   179b2:	2f03      	cmp	r7, #3
   179b4:	d807      	bhi.n	179c6 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   179b6:	6823      	ldr	r3, [r4, #0]
   179b8:	4632      	mov	r2, r6
   179ba:	4629      	mov	r1, r5
   179bc:	4620      	mov	r0, r4
   179be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   179c2:	695b      	ldr	r3, [r3, #20]
   179c4:	4718      	bx	r3
   179c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000179ca <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   179ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   179ce:	9e06      	ldr	r6, [sp, #24]
   179d0:	4698      	mov	r8, r3
   179d2:	9b08      	ldr	r3, [sp, #32]
   179d4:	4607      	mov	r7, r0
   179d6:	429e      	cmp	r6, r3
   179d8:	4615      	mov	r5, r2
   179da:	9c09      	ldr	r4, [sp, #36]	; 0x24
   179dc:	d103      	bne.n	179e6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   179de:	9907      	ldr	r1, [sp, #28]
   179e0:	f000 f8aa 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   179e4:	b958      	cbnz	r0, 179fe <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   179e6:	4641      	mov	r1, r8
   179e8:	4638      	mov	r0, r7
   179ea:	f000 f8a5 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   179ee:	b118      	cbz	r0, 179f8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   179f0:	2301      	movs	r3, #1
   179f2:	6026      	str	r6, [r4, #0]
   179f4:	7125      	strb	r5, [r4, #4]
   179f6:	71a3      	strb	r3, [r4, #6]
   179f8:	2000      	movs	r0, #0
   179fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   179fe:	7165      	strb	r5, [r4, #5]
   17a00:	e7fa      	b.n	179f8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>

00017a02 <operator delete(void*, unsigned int)>:
_ZdlPvj():
   17a02:	f7fd b927 	b.w	14c54 <operator delete(void*)>

00017a06 <__cxa_guard_acquire>:
__cxa_guard_acquire():
   17a06:	6803      	ldr	r3, [r0, #0]
   17a08:	07db      	lsls	r3, r3, #31
   17a0a:	d406      	bmi.n	17a1a <__cxa_guard_acquire+0x14>
   17a0c:	7843      	ldrb	r3, [r0, #1]
   17a0e:	b103      	cbz	r3, 17a12 <__cxa_guard_acquire+0xc>
   17a10:	deff      	udf	#255	; 0xff
   17a12:	2301      	movs	r3, #1
   17a14:	7043      	strb	r3, [r0, #1]
   17a16:	4618      	mov	r0, r3
   17a18:	4770      	bx	lr
   17a1a:	2000      	movs	r0, #0
   17a1c:	4770      	bx	lr

00017a1e <__cxa_guard_release>:
__cxa_guard_release():
   17a1e:	2301      	movs	r3, #1
   17a20:	6003      	str	r3, [r0, #0]
   17a22:	4770      	bx	lr

00017a24 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   17a24:	b508      	push	{r3, lr}
   17a26:	f000 faeb 	bl	18000 <std::terminate()>
   17a2a:	Address 0x0000000000017a2a is out of bounds.


00017a2c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   17a2c:	b510      	push	{r4, lr}
   17a2e:	4604      	mov	r4, r0
   17a30:	4b02      	ldr	r3, [pc, #8]	; (17a3c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   17a32:	6003      	str	r3, [r0, #0]
   17a34:	f7ff ff94 	bl	17960 <__cxxabiv1::__class_type_info::~__class_type_info()>
   17a38:	4620      	mov	r0, r4
   17a3a:	bd10      	pop	{r4, pc}
   17a3c:	00020578 	.word	0x00020578

00017a40 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   17a40:	b510      	push	{r4, lr}
   17a42:	4604      	mov	r4, r0
   17a44:	f7ff fff2 	bl	17a2c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   17a48:	4620      	mov	r0, r4
   17a4a:	210c      	movs	r1, #12
   17a4c:	f7ff ffd9 	bl	17a02 <operator delete(void*, unsigned int)>
   17a50:	4620      	mov	r0, r4
   17a52:	bd10      	pop	{r4, pc}

00017a54 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   17a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17a58:	9e06      	ldr	r6, [sp, #24]
   17a5a:	4680      	mov	r8, r0
   17a5c:	4296      	cmp	r6, r2
   17a5e:	460f      	mov	r7, r1
   17a60:	4614      	mov	r4, r2
   17a62:	461d      	mov	r5, r3
   17a64:	d103      	bne.n	17a6e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   17a66:	4619      	mov	r1, r3
   17a68:	f000 f866 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17a6c:	b958      	cbnz	r0, 17a86 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   17a6e:	f8d8 0008 	ldr.w	r0, [r8, #8]
   17a72:	4622      	mov	r2, r4
   17a74:	6803      	ldr	r3, [r0, #0]
   17a76:	9606      	str	r6, [sp, #24]
   17a78:	6a1e      	ldr	r6, [r3, #32]
   17a7a:	4639      	mov	r1, r7
   17a7c:	462b      	mov	r3, r5
   17a7e:	46b4      	mov	ip, r6
   17a80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   17a84:	4760      	bx	ip
   17a86:	2006      	movs	r0, #6
   17a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00017a8c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   17a8c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a90:	460e      	mov	r6, r1
   17a92:	4619      	mov	r1, r3
   17a94:	4683      	mov	fp, r0
   17a96:	4617      	mov	r7, r2
   17a98:	4699      	mov	r9, r3
   17a9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   17a9c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   17aa0:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   17aa4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   17aa6:	f000 f847 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17aaa:	b190      	cbz	r0, 17ad2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   17aac:	2e00      	cmp	r6, #0
   17aae:	602c      	str	r4, [r5, #0]
   17ab0:	712f      	strb	r7, [r5, #4]
   17ab2:	db09      	blt.n	17ac8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   17ab4:	4434      	add	r4, r6
   17ab6:	45a0      	cmp	r8, r4
   17ab8:	bf0c      	ite	eq
   17aba:	2406      	moveq	r4, #6
   17abc:	2401      	movne	r4, #1
   17abe:	71ac      	strb	r4, [r5, #6]
   17ac0:	2000      	movs	r0, #0
   17ac2:	b001      	add	sp, #4
   17ac4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ac8:	3602      	adds	r6, #2
   17aca:	d1f9      	bne.n	17ac0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   17acc:	2301      	movs	r3, #1
   17ace:	71ab      	strb	r3, [r5, #6]
   17ad0:	e7f6      	b.n	17ac0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   17ad2:	4544      	cmp	r4, r8
   17ad4:	d104      	bne.n	17ae0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   17ad6:	4651      	mov	r1, sl
   17ad8:	4658      	mov	r0, fp
   17ada:	f000 f82d 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17ade:	b988      	cbnz	r0, 17b04 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   17ae0:	f8db 0008 	ldr.w	r0, [fp, #8]
   17ae4:	463a      	mov	r2, r7
   17ae6:	6803      	ldr	r3, [r0, #0]
   17ae8:	950d      	str	r5, [sp, #52]	; 0x34
   17aea:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   17aee:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   17af2:	940a      	str	r4, [sp, #40]	; 0x28
   17af4:	69dc      	ldr	r4, [r3, #28]
   17af6:	4631      	mov	r1, r6
   17af8:	464b      	mov	r3, r9
   17afa:	46a4      	mov	ip, r4
   17afc:	b001      	add	sp, #4
   17afe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b02:	4760      	bx	ip
   17b04:	716f      	strb	r7, [r5, #5]
   17b06:	e7db      	b.n	17ac0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

00017b08 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   17b08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17b0c:	4604      	mov	r4, r0
   17b0e:	460d      	mov	r5, r1
   17b10:	4616      	mov	r6, r2
   17b12:	461f      	mov	r7, r3
   17b14:	f7ff ff38 	bl	17988 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   17b18:	b948      	cbnz	r0, 17b2e <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   17b1a:	68a0      	ldr	r0, [r4, #8]
   17b1c:	4632      	mov	r2, r6
   17b1e:	6803      	ldr	r3, [r0, #0]
   17b20:	4629      	mov	r1, r5
   17b22:	699c      	ldr	r4, [r3, #24]
   17b24:	463b      	mov	r3, r7
   17b26:	46a4      	mov	ip, r4
   17b28:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   17b2c:	4760      	bx	ip
   17b2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00017b32 <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   17b32:	4770      	bx	lr

00017b34 <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   17b34:	2000      	movs	r0, #0
   17b36:	4770      	bx	lr

00017b38 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   17b38:	4281      	cmp	r1, r0
   17b3a:	b508      	push	{r3, lr}
   17b3c:	d00e      	beq.n	17b5c <std::type_info::operator==(std::type_info const&) const+0x24>
   17b3e:	6840      	ldr	r0, [r0, #4]
   17b40:	7803      	ldrb	r3, [r0, #0]
   17b42:	2b2a      	cmp	r3, #42	; 0x2a
   17b44:	d00c      	beq.n	17b60 <std::type_info::operator==(std::type_info const&) const+0x28>
   17b46:	6849      	ldr	r1, [r1, #4]
   17b48:	780b      	ldrb	r3, [r1, #0]
   17b4a:	2b2a      	cmp	r3, #42	; 0x2a
   17b4c:	bf08      	it	eq
   17b4e:	3101      	addeq	r1, #1
   17b50:	f003 f80f 	bl	1ab72 <strcmp>
   17b54:	fab0 f080 	clz	r0, r0
   17b58:	0940      	lsrs	r0, r0, #5
   17b5a:	bd08      	pop	{r3, pc}
   17b5c:	2001      	movs	r0, #1
   17b5e:	bd08      	pop	{r3, pc}
   17b60:	2000      	movs	r0, #0
   17b62:	bd08      	pop	{r3, pc}

00017b64 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   17b64:	b510      	push	{r4, lr}
   17b66:	4604      	mov	r4, r0
   17b68:	4b02      	ldr	r3, [pc, #8]	; (17b74 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   17b6a:	6003      	str	r3, [r0, #0]
   17b6c:	f7ff fef8 	bl	17960 <__cxxabiv1::__class_type_info::~__class_type_info()>
   17b70:	4620      	mov	r0, r4
   17b72:	bd10      	pop	{r4, pc}
   17b74:	000205f0 	.word	0x000205f0

00017b78 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   17b78:	b510      	push	{r4, lr}
   17b7a:	4604      	mov	r4, r0
   17b7c:	f7ff fff2 	bl	17b64 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   17b80:	4620      	mov	r0, r4
   17b82:	2118      	movs	r1, #24
   17b84:	f7ff ff3d 	bl	17a02 <operator delete(void*, unsigned int)>
   17b88:	4620      	mov	r0, r4
   17b8a:	bd10      	pop	{r4, pc}

00017b8c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   17b8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b90:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   17b94:	4604      	mov	r4, r0
   17b96:	454a      	cmp	r2, r9
   17b98:	460f      	mov	r7, r1
   17b9a:	4616      	mov	r6, r2
   17b9c:	4698      	mov	r8, r3
   17b9e:	d103      	bne.n	17ba8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   17ba0:	4619      	mov	r1, r3
   17ba2:	f7ff ffc9 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17ba6:	bb38      	cbnz	r0, 17bf8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   17ba8:	68e5      	ldr	r5, [r4, #12]
   17baa:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   17bae:	e001      	b.n	17bb4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   17bb0:	3d01      	subs	r5, #1
   17bb2:	3c08      	subs	r4, #8
   17bb4:	b315      	cbz	r5, 17bfc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   17bb6:	68e3      	ldr	r3, [r4, #12]
   17bb8:	079a      	lsls	r2, r3, #30
   17bba:	d5f9      	bpl.n	17bb0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   17bbc:	f013 0a01 	ands.w	sl, r3, #1
   17bc0:	ea4f 2223 	mov.w	r2, r3, asr #8
   17bc4:	d003      	beq.n	17bce <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   17bc6:	1cfb      	adds	r3, r7, #3
   17bc8:	d0f2      	beq.n	17bb0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   17bca:	6833      	ldr	r3, [r6, #0]
   17bcc:	589a      	ldr	r2, [r3, r2]
   17bce:	68a0      	ldr	r0, [r4, #8]
   17bd0:	4432      	add	r2, r6
   17bd2:	6803      	ldr	r3, [r0, #0]
   17bd4:	f8cd 9000 	str.w	r9, [sp]
   17bd8:	f8d3 b020 	ldr.w	fp, [r3, #32]
   17bdc:	4639      	mov	r1, r7
   17bde:	4643      	mov	r3, r8
   17be0:	47d8      	blx	fp
   17be2:	2803      	cmp	r0, #3
   17be4:	dde4      	ble.n	17bb0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   17be6:	f1ba 0f00 	cmp.w	sl, #0
   17bea:	d002      	beq.n	17bf2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   17bec:	f040 0001 	orr.w	r0, r0, #1
   17bf0:	b2c0      	uxtb	r0, r0
   17bf2:	b003      	add	sp, #12
   17bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bf8:	2006      	movs	r0, #6
   17bfa:	e7fa      	b.n	17bf2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   17bfc:	2001      	movs	r0, #1
   17bfe:	e7f8      	b.n	17bf2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

00017c00 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   17c00:	b4f0      	push	{r4, r5, r6, r7}
   17c02:	1e0e      	subs	r6, r1, #0
   17c04:	9c04      	ldr	r4, [sp, #16]
   17c06:	db06      	blt.n	17c16 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   17c08:	1990      	adds	r0, r2, r6
   17c0a:	4284      	cmp	r4, r0
   17c0c:	bf14      	ite	ne
   17c0e:	2001      	movne	r0, #1
   17c10:	2006      	moveq	r0, #6
   17c12:	bcf0      	pop	{r4, r5, r6, r7}
   17c14:	4770      	bx	lr
   17c16:	3602      	adds	r6, #2
   17c18:	d005      	beq.n	17c26 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   17c1a:	6805      	ldr	r5, [r0, #0]
   17c1c:	9404      	str	r4, [sp, #16]
   17c1e:	6a2c      	ldr	r4, [r5, #32]
   17c20:	46a4      	mov	ip, r4
   17c22:	bcf0      	pop	{r4, r5, r6, r7}
   17c24:	4760      	bx	ip
   17c26:	2001      	movs	r0, #1
   17c28:	e7f3      	b.n	17c12 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

00017c2a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   17c2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c2e:	b091      	sub	sp, #68	; 0x44
   17c30:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   17c32:	9308      	str	r3, [sp, #32]
   17c34:	68a3      	ldr	r3, [r4, #8]
   17c36:	4688      	mov	r8, r1
   17c38:	06d9      	lsls	r1, r3, #27
   17c3a:	bf48      	it	mi
   17c3c:	6883      	ldrmi	r3, [r0, #8]
   17c3e:	9207      	str	r2, [sp, #28]
   17c40:	bf48      	it	mi
   17c42:	60a3      	strmi	r3, [r4, #8]
   17c44:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   17c46:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17c48:	4681      	mov	r9, r0
   17c4a:	4293      	cmp	r3, r2
   17c4c:	d105      	bne.n	17c5a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   17c4e:	991b      	ldr	r1, [sp, #108]	; 0x6c
   17c50:	f7ff ff72 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17c54:	2800      	cmp	r0, #0
   17c56:	f040 8119 	bne.w	17e8c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   17c5a:	9908      	ldr	r1, [sp, #32]
   17c5c:	4648      	mov	r0, r9
   17c5e:	f7ff ff6b 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17c62:	4682      	mov	sl, r0
   17c64:	2800      	cmp	r0, #0
   17c66:	d16e      	bne.n	17d46 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   17c68:	2600      	movs	r6, #0
   17c6a:	f1b8 0f00 	cmp.w	r8, #0
   17c6e:	bfa8      	it	ge
   17c70:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   17c72:	46b3      	mov	fp, r6
   17c74:	bfa4      	itt	ge
   17c76:	eba3 0308 	subge.w	r3, r3, r8
   17c7a:	9309      	strge	r3, [sp, #36]	; 0x24
   17c7c:	f04f 0301 	mov.w	r3, #1
   17c80:	930a      	str	r3, [sp, #40]	; 0x28
   17c82:	9b07      	ldr	r3, [sp, #28]
   17c84:	bfb8      	it	lt
   17c86:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   17c8a:	f043 0301 	orr.w	r3, r3, #1
   17c8e:	9606      	str	r6, [sp, #24]
   17c90:	930b      	str	r3, [sp, #44]	; 0x2c
   17c92:	f8d9 300c 	ldr.w	r3, [r9, #12]
   17c96:	9304      	str	r3, [sp, #16]
   17c98:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   17c9c:	9305      	str	r3, [sp, #20]
   17c9e:	9b04      	ldr	r3, [sp, #16]
   17ca0:	2b00      	cmp	r3, #0
   17ca2:	f000 80e9 	beq.w	17e78 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   17ca6:	9b05      	ldr	r3, [sp, #20]
   17ca8:	68a5      	ldr	r5, [r4, #8]
   17caa:	68db      	ldr	r3, [r3, #12]
   17cac:	950f      	str	r5, [sp, #60]	; 0x3c
   17cae:	07da      	lsls	r2, r3, #31
   17cb0:	bf48      	it	mi
   17cb2:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   17cb4:	ea4f 2123 	mov.w	r1, r3, asr #8
   17cb8:	bf48      	it	mi
   17cba:	6800      	ldrmi	r0, [r0, #0]
   17cbc:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   17cc0:	bf48      	it	mi
   17cc2:	5841      	ldrmi	r1, [r0, r1]
   17cc4:	981a      	ldr	r0, [sp, #104]	; 0x68
   17cc6:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   17cca:	4401      	add	r1, r0
   17ccc:	9809      	ldr	r0, [sp, #36]	; 0x24
   17cce:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   17cd2:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   17cd6:	bf4c      	ite	mi
   17cd8:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   17cda:	9a07      	ldrpl	r2, [sp, #28]
   17cdc:	b138      	cbz	r0, 17cee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   17cde:	4288      	cmp	r0, r1
   17ce0:	bf2c      	ite	cs
   17ce2:	2000      	movcs	r0, #0
   17ce4:	2001      	movcc	r0, #1
   17ce6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   17ce8:	42b8      	cmp	r0, r7
   17cea:	f000 80ba 	beq.w	17e62 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   17cee:	079b      	lsls	r3, r3, #30
   17cf0:	d407      	bmi.n	17d02 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   17cf2:	f118 0f02 	cmn.w	r8, #2
   17cf6:	d102      	bne.n	17cfe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   17cf8:	07af      	lsls	r7, r5, #30
   17cfa:	f000 80b4 	beq.w	17e66 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   17cfe:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   17d02:	9b05      	ldr	r3, [sp, #20]
   17d04:	ad0d      	add	r5, sp, #52	; 0x34
   17d06:	6898      	ldr	r0, [r3, #8]
   17d08:	6803      	ldr	r3, [r0, #0]
   17d0a:	9503      	str	r5, [sp, #12]
   17d0c:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   17d0e:	9502      	str	r5, [sp, #8]
   17d10:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   17d12:	e88d 0022 	stmia.w	sp, {r1, r5}
   17d16:	4641      	mov	r1, r8
   17d18:	69dd      	ldr	r5, [r3, #28]
   17d1a:	9b08      	ldr	r3, [sp, #32]
   17d1c:	47a8      	blx	r5
   17d1e:	7961      	ldrb	r1, [r4, #5]
   17d20:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   17d24:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   17d28:	4311      	orrs	r1, r2
   17d2a:	2d06      	cmp	r5, #6
   17d2c:	4603      	mov	r3, r0
   17d2e:	7161      	strb	r1, [r4, #5]
   17d30:	d001      	beq.n	17d36 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   17d32:	2d02      	cmp	r5, #2
   17d34:	d122      	bne.n	17d7c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   17d36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17d38:	71a5      	strb	r5, [r4, #6]
   17d3a:	6023      	str	r3, [r4, #0]
   17d3c:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   17d40:	7123      	strb	r3, [r4, #4]
   17d42:	4682      	mov	sl, r0
   17d44:	e078      	b.n	17e38 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17d46:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17d48:	f1b8 0f00 	cmp.w	r8, #0
   17d4c:	6023      	str	r3, [r4, #0]
   17d4e:	f89d 301c 	ldrb.w	r3, [sp, #28]
   17d52:	7123      	strb	r3, [r4, #4]
   17d54:	db0c      	blt.n	17d70 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   17d56:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   17d58:	4498      	add	r8, r3
   17d5a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17d5c:	4543      	cmp	r3, r8
   17d5e:	bf0c      	ite	eq
   17d60:	f04f 0806 	moveq.w	r8, #6
   17d64:	f04f 0801 	movne.w	r8, #1
   17d68:	f884 8006 	strb.w	r8, [r4, #6]
   17d6c:	2600      	movs	r6, #0
   17d6e:	e064      	b.n	17e3a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17d70:	f118 0f02 	cmn.w	r8, #2
   17d74:	d1fa      	bne.n	17d6c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17d76:	2301      	movs	r3, #1
   17d78:	71a3      	strb	r3, [r4, #6]
   17d7a:	e7f7      	b.n	17d6c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17d7c:	6822      	ldr	r2, [r4, #0]
   17d7e:	b986      	cbnz	r6, 17da2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   17d80:	b97a      	cbnz	r2, 17da2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   17d82:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17d84:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   17d88:	6022      	str	r2, [r4, #0]
   17d8a:	7125      	strb	r5, [r4, #4]
   17d8c:	b122      	cbz	r2, 17d98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17d8e:	b119      	cbz	r1, 17d98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17d90:	f8d9 2008 	ldr.w	r2, [r9, #8]
   17d94:	07d5      	lsls	r5, r2, #31
   17d96:	d5d4      	bpl.n	17d42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   17d98:	7962      	ldrb	r2, [r4, #5]
   17d9a:	2a04      	cmp	r2, #4
   17d9c:	d164      	bne.n	17e68 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   17d9e:	469a      	mov	sl, r3
   17da0:	e04a      	b.n	17e38 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17da2:	b15a      	cbz	r2, 17dbc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   17da4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17da6:	429a      	cmp	r2, r3
   17da8:	d106      	bne.n	17db8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   17daa:	7923      	ldrb	r3, [r4, #4]
   17dac:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   17db0:	4313      	orrs	r3, r2
   17db2:	7123      	strb	r3, [r4, #4]
   17db4:	4633      	mov	r3, r6
   17db6:	e7ef      	b.n	17d98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17db8:	b92b      	cbnz	r3, 17dc6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   17dba:	b920      	cbnz	r0, 17dc6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   17dbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   17dbe:	2b00      	cmp	r3, #0
   17dc0:	d0f8      	beq.n	17db4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   17dc2:	2e00      	cmp	r6, #0
   17dc4:	d0f6      	beq.n	17db4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   17dc6:	2903      	cmp	r1, #3
   17dc8:	79a7      	ldrb	r7, [r4, #6]
   17dca:	d904      	bls.n	17dd6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   17dcc:	07c8      	lsls	r0, r1, #31
   17dce:	d561      	bpl.n	17e94 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   17dd0:	68a3      	ldr	r3, [r4, #8]
   17dd2:	0799      	lsls	r1, r3, #30
   17dd4:	d55e      	bpl.n	17e94 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   17dd6:	b97f      	cbnz	r7, 17df8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   17dd8:	2d03      	cmp	r5, #3
   17dda:	dd05      	ble.n	17de8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   17ddc:	07eb      	lsls	r3, r5, #31
   17dde:	d560      	bpl.n	17ea2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   17de0:	f8d9 3008 	ldr.w	r3, [r9, #8]
   17de4:	079f      	lsls	r7, r3, #30
   17de6:	d52c      	bpl.n	17e42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   17de8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17dea:	4641      	mov	r1, r8
   17dec:	9300      	str	r3, [sp, #0]
   17dee:	9808      	ldr	r0, [sp, #32]
   17df0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   17df2:	f7ff ff05 	bl	17c00 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   17df6:	4607      	mov	r7, r0
   17df8:	b945      	cbnz	r5, 17e0c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17dfa:	2f03      	cmp	r7, #3
   17dfc:	dd54      	ble.n	17ea8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   17dfe:	07fd      	lsls	r5, r7, #31
   17e00:	d503      	bpl.n	17e0a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   17e02:	f8d9 3008 	ldr.w	r3, [r9, #8]
   17e06:	0798      	lsls	r0, r3, #30
   17e08:	d44e      	bmi.n	17ea8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   17e0a:	2501      	movs	r5, #1
   17e0c:	ea85 0307 	eor.w	r3, r5, r7
   17e10:	b2db      	uxtb	r3, r3
   17e12:	2b03      	cmp	r3, #3
   17e14:	d917      	bls.n	17e46 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   17e16:	2d03      	cmp	r5, #3
   17e18:	bfc5      	ittet	gt
   17e1a:	462f      	movgt	r7, r5
   17e1c:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   17e1e:	4633      	movle	r3, r6
   17e20:	6023      	strgt	r3, [r4, #0]
   17e22:	bfc8      	it	gt
   17e24:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   17e28:	71a7      	strb	r7, [r4, #6]
   17e2a:	bfc4      	itt	gt
   17e2c:	7123      	strbgt	r3, [r4, #4]
   17e2e:	2300      	movgt	r3, #0
   17e30:	07b9      	lsls	r1, r7, #30
   17e32:	d401      	bmi.n	17e38 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17e34:	07fa      	lsls	r2, r7, #31
   17e36:	d4af      	bmi.n	17d98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17e38:	4656      	mov	r6, sl
   17e3a:	4630      	mov	r0, r6
   17e3c:	b011      	add	sp, #68	; 0x44
   17e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e42:	2701      	movs	r7, #1
   17e44:	e7e2      	b.n	17e0c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17e46:	403d      	ands	r5, r7
   17e48:	b2ed      	uxtb	r5, r5
   17e4a:	2d03      	cmp	r5, #3
   17e4c:	f8c4 b000 	str.w	fp, [r4]
   17e50:	d904      	bls.n	17e5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   17e52:	2302      	movs	r3, #2
   17e54:	f04f 0a01 	mov.w	sl, #1
   17e58:	71a3      	strb	r3, [r4, #6]
   17e5a:	e7ed      	b.n	17e38 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   17e5c:	2301      	movs	r3, #1
   17e5e:	71a3      	strb	r3, [r4, #6]
   17e60:	e79a      	b.n	17d98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   17e62:	2301      	movs	r3, #1
   17e64:	9306      	str	r3, [sp, #24]
   17e66:	4633      	mov	r3, r6
   17e68:	9a04      	ldr	r2, [sp, #16]
   17e6a:	461e      	mov	r6, r3
   17e6c:	3a01      	subs	r2, #1
   17e6e:	9204      	str	r2, [sp, #16]
   17e70:	9a05      	ldr	r2, [sp, #20]
   17e72:	3a08      	subs	r2, #8
   17e74:	9205      	str	r2, [sp, #20]
   17e76:	e712      	b.n	17c9e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   17e78:	9b06      	ldr	r3, [sp, #24]
   17e7a:	2b00      	cmp	r3, #0
   17e7c:	d0dd      	beq.n	17e3a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17e7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   17e80:	9306      	str	r3, [sp, #24]
   17e82:	2b00      	cmp	r3, #0
   17e84:	d0d9      	beq.n	17e3a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   17e86:	9b04      	ldr	r3, [sp, #16]
   17e88:	930a      	str	r3, [sp, #40]	; 0x28
   17e8a:	e702      	b.n	17c92 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   17e8c:	f89d 301c 	ldrb.w	r3, [sp, #28]
   17e90:	7163      	strb	r3, [r4, #5]
   17e92:	e76b      	b.n	17d6c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   17e94:	2f00      	cmp	r7, #0
   17e96:	bf08      	it	eq
   17e98:	2701      	moveq	r7, #1
   17e9a:	2d00      	cmp	r5, #0
   17e9c:	bf08      	it	eq
   17e9e:	2501      	moveq	r5, #1
   17ea0:	e7b4      	b.n	17e0c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   17ea2:	2d00      	cmp	r5, #0
   17ea4:	d1cd      	bne.n	17e42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   17ea6:	2701      	movs	r7, #1
   17ea8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   17eaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17eac:	9300      	str	r3, [sp, #0]
   17eae:	4641      	mov	r1, r8
   17eb0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   17eb2:	9808      	ldr	r0, [sp, #32]
   17eb4:	f7ff fea4 	bl	17c00 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   17eb8:	4605      	mov	r5, r0
   17eba:	e7a7      	b.n	17e0c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

00017ebc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   17ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ec0:	b089      	sub	sp, #36	; 0x24
   17ec2:	4607      	mov	r7, r0
   17ec4:	9102      	str	r1, [sp, #8]
   17ec6:	4692      	mov	sl, r2
   17ec8:	461c      	mov	r4, r3
   17eca:	f7ff fd5d 	bl	17988 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   17ece:	4605      	mov	r5, r0
   17ed0:	2800      	cmp	r0, #0
   17ed2:	d155      	bne.n	17f80 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17ed4:	f04f 0b00 	mov.w	fp, #0
   17ed8:	f8d4 8008 	ldr.w	r8, [r4, #8]
   17edc:	f8d7 900c 	ldr.w	r9, [r7, #12]
   17ee0:	f018 0f10 	tst.w	r8, #16
   17ee4:	bf18      	it	ne
   17ee6:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   17eea:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   17eee:	f008 0301 	and.w	r3, r8, #1
   17ef2:	9303      	str	r3, [sp, #12]
   17ef4:	f1b9 0f00 	cmp.w	r9, #0
   17ef8:	d06b      	beq.n	17fd2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   17efa:	68f2      	ldr	r2, [r6, #12]
   17efc:	f8cd b010 	str.w	fp, [sp, #16]
   17f00:	f002 0301 	and.w	r3, r2, #1
   17f04:	9300      	str	r3, [sp, #0]
   17f06:	f012 0302 	ands.w	r3, r2, #2
   17f0a:	f88d b014 	strb.w	fp, [sp, #20]
   17f0e:	f8cd 8018 	str.w	r8, [sp, #24]
   17f12:	f8cd b01c 	str.w	fp, [sp, #28]
   17f16:	9301      	str	r3, [sp, #4]
   17f18:	d102      	bne.n	17f20 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   17f1a:	9b03      	ldr	r3, [sp, #12]
   17f1c:	2b00      	cmp	r3, #0
   17f1e:	d04a      	beq.n	17fb6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17f20:	f1ba 0f00 	cmp.w	sl, #0
   17f24:	d030      	beq.n	17f88 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   17f26:	9b00      	ldr	r3, [sp, #0]
   17f28:	1212      	asrs	r2, r2, #8
   17f2a:	b113      	cbz	r3, 17f32 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   17f2c:	f8da 3000 	ldr.w	r3, [sl]
   17f30:	589a      	ldr	r2, [r3, r2]
   17f32:	4452      	add	r2, sl
   17f34:	68b0      	ldr	r0, [r6, #8]
   17f36:	9902      	ldr	r1, [sp, #8]
   17f38:	6803      	ldr	r3, [r0, #0]
   17f3a:	699d      	ldr	r5, [r3, #24]
   17f3c:	ab04      	add	r3, sp, #16
   17f3e:	47a8      	blx	r5
   17f40:	4605      	mov	r5, r0
   17f42:	2800      	cmp	r0, #0
   17f44:	d037      	beq.n	17fb6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17f46:	9b07      	ldr	r3, [sp, #28]
   17f48:	2b08      	cmp	r3, #8
   17f4a:	d103      	bne.n	17f54 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   17f4c:	9b00      	ldr	r3, [sp, #0]
   17f4e:	b10b      	cbz	r3, 17f54 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   17f50:	68b3      	ldr	r3, [r6, #8]
   17f52:	9307      	str	r3, [sp, #28]
   17f54:	f89d 3014 	ldrb.w	r3, [sp, #20]
   17f58:	2b03      	cmp	r3, #3
   17f5a:	dd02      	ble.n	17f62 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   17f5c:	9a01      	ldr	r2, [sp, #4]
   17f5e:	2a00      	cmp	r2, #0
   17f60:	d03c      	beq.n	17fdc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   17f62:	68e1      	ldr	r1, [r4, #12]
   17f64:	b9c1      	cbnz	r1, 17f98 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   17f66:	ab04      	add	r3, sp, #16
   17f68:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   17f6a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   17f6e:	7923      	ldrb	r3, [r4, #4]
   17f70:	2b03      	cmp	r3, #3
   17f72:	dd05      	ble.n	17f80 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17f74:	079a      	lsls	r2, r3, #30
   17f76:	d509      	bpl.n	17f8c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   17f78:	68bb      	ldr	r3, [r7, #8]
   17f7a:	f013 0f01 	tst.w	r3, #1
   17f7e:	d11a      	bne.n	17fb6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   17f80:	4628      	mov	r0, r5
   17f82:	b009      	add	sp, #36	; 0x24
   17f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f88:	4652      	mov	r2, sl
   17f8a:	e7d3      	b.n	17f34 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   17f8c:	07db      	lsls	r3, r3, #31
   17f8e:	d5f7      	bpl.n	17f80 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17f90:	68bb      	ldr	r3, [r7, #8]
   17f92:	f013 0f02 	tst.w	r3, #2
   17f96:	e7f2      	b.n	17f7e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   17f98:	6823      	ldr	r3, [r4, #0]
   17f9a:	9a04      	ldr	r2, [sp, #16]
   17f9c:	4293      	cmp	r3, r2
   17f9e:	d004      	beq.n	17faa <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   17fa0:	2300      	movs	r3, #0
   17fa2:	6023      	str	r3, [r4, #0]
   17fa4:	2302      	movs	r3, #2
   17fa6:	7123      	strb	r3, [r4, #4]
   17fa8:	e7ea      	b.n	17f80 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17faa:	b143      	cbz	r3, 17fbe <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   17fac:	7923      	ldrb	r3, [r4, #4]
   17fae:	f89d 2014 	ldrb.w	r2, [sp, #20]
   17fb2:	4313      	orrs	r3, r2
   17fb4:	7123      	strb	r3, [r4, #4]
   17fb6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   17fba:	3e08      	subs	r6, #8
   17fbc:	e79a      	b.n	17ef4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   17fbe:	9807      	ldr	r0, [sp, #28]
   17fc0:	2808      	cmp	r0, #8
   17fc2:	d0ef      	beq.n	17fa4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17fc4:	2908      	cmp	r1, #8
   17fc6:	d0ed      	beq.n	17fa4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17fc8:	f7ff fdb6 	bl	17b38 <std::type_info::operator==(std::type_info const&) const>
   17fcc:	2800      	cmp	r0, #0
   17fce:	d1ed      	bne.n	17fac <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   17fd0:	e7e8      	b.n	17fa4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   17fd2:	7925      	ldrb	r5, [r4, #4]
   17fd4:	3500      	adds	r5, #0
   17fd6:	bf18      	it	ne
   17fd8:	2501      	movne	r5, #1
   17fda:	e7d1      	b.n	17f80 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   17fdc:	f023 0302 	bic.w	r3, r3, #2
   17fe0:	f88d 3014 	strb.w	r3, [sp, #20]
   17fe4:	e7bd      	b.n	17f62 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

00017fe6 <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   17fe6:	b508      	push	{r3, lr}
   17fe8:	4780      	blx	r0
   17fea:	f000 fe49 	bl	18c80 <abort>
   17fee:	Address 0x0000000000017fee is out of bounds.


00017ff0 <std::get_terminate()>:
_ZSt13get_terminatev():
   17ff0:	4b02      	ldr	r3, [pc, #8]	; (17ffc <std::get_terminate()+0xc>)
   17ff2:	6818      	ldr	r0, [r3, #0]
   17ff4:	f3bf 8f5b 	dmb	ish
   17ff8:	4770      	bx	lr
   17ffa:	bf00      	nop
   17ffc:	2007c0dc 	.word	0x2007c0dc

00018000 <std::terminate()>:
_ZSt9terminatev():
   18000:	b508      	push	{r3, lr}
   18002:	f7ff fff5 	bl	17ff0 <std::get_terminate()>
   18006:	f7ff ffee 	bl	17fe6 <__cxxabiv1::__terminate(void (*)())>
   1800a:	Address 0x000000000001800a is out of bounds.


0001800c <__aeabi_llsl>:
__aeabi_llsl():
   1800c:	4091      	lsls	r1, r2
   1800e:	1c03      	adds	r3, r0, #0
   18010:	4090      	lsls	r0, r2
   18012:	469c      	mov	ip, r3
   18014:	3a20      	subs	r2, #32
   18016:	4093      	lsls	r3, r2
   18018:	4319      	orrs	r1, r3
   1801a:	4252      	negs	r2, r2
   1801c:	4663      	mov	r3, ip
   1801e:	40d3      	lsrs	r3, r2
   18020:	4319      	orrs	r1, r3
   18022:	4770      	bx	lr

00018024 <__aeabi_drsub>:
__aeabi_drsub():
   18024:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   18028:	e002      	b.n	18030 <__adddf3>
   1802a:	bf00      	nop

0001802c <__aeabi_dsub>:
__subdf3():
   1802c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00018030 <__adddf3>:
__aeabi_dadd():
   18030:	b530      	push	{r4, r5, lr}
   18032:	ea4f 0441 	mov.w	r4, r1, lsl #1
   18036:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1803a:	ea94 0f05 	teq	r4, r5
   1803e:	bf08      	it	eq
   18040:	ea90 0f02 	teqeq	r0, r2
   18044:	bf1f      	itttt	ne
   18046:	ea54 0c00 	orrsne.w	ip, r4, r0
   1804a:	ea55 0c02 	orrsne.w	ip, r5, r2
   1804e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   18052:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   18056:	f000 80e2 	beq.w	1821e <__adddf3+0x1ee>
   1805a:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1805e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   18062:	bfb8      	it	lt
   18064:	426d      	neglt	r5, r5
   18066:	dd0c      	ble.n	18082 <__adddf3+0x52>
   18068:	442c      	add	r4, r5
   1806a:	ea80 0202 	eor.w	r2, r0, r2
   1806e:	ea81 0303 	eor.w	r3, r1, r3
   18072:	ea82 0000 	eor.w	r0, r2, r0
   18076:	ea83 0101 	eor.w	r1, r3, r1
   1807a:	ea80 0202 	eor.w	r2, r0, r2
   1807e:	ea81 0303 	eor.w	r3, r1, r3
   18082:	2d36      	cmp	r5, #54	; 0x36
   18084:	bf88      	it	hi
   18086:	bd30      	pophi	{r4, r5, pc}
   18088:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1808c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   18090:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   18094:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   18098:	d002      	beq.n	180a0 <__adddf3+0x70>
   1809a:	4240      	negs	r0, r0
   1809c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   180a0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   180a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   180a8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   180ac:	d002      	beq.n	180b4 <__adddf3+0x84>
   180ae:	4252      	negs	r2, r2
   180b0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   180b4:	ea94 0f05 	teq	r4, r5
   180b8:	f000 80a7 	beq.w	1820a <__adddf3+0x1da>
   180bc:	f1a4 0401 	sub.w	r4, r4, #1
   180c0:	f1d5 0e20 	rsbs	lr, r5, #32
   180c4:	db0d      	blt.n	180e2 <__adddf3+0xb2>
   180c6:	fa02 fc0e 	lsl.w	ip, r2, lr
   180ca:	fa22 f205 	lsr.w	r2, r2, r5
   180ce:	1880      	adds	r0, r0, r2
   180d0:	f141 0100 	adc.w	r1, r1, #0
   180d4:	fa03 f20e 	lsl.w	r2, r3, lr
   180d8:	1880      	adds	r0, r0, r2
   180da:	fa43 f305 	asr.w	r3, r3, r5
   180de:	4159      	adcs	r1, r3
   180e0:	e00e      	b.n	18100 <__adddf3+0xd0>
   180e2:	f1a5 0520 	sub.w	r5, r5, #32
   180e6:	f10e 0e20 	add.w	lr, lr, #32
   180ea:	2a01      	cmp	r2, #1
   180ec:	fa03 fc0e 	lsl.w	ip, r3, lr
   180f0:	bf28      	it	cs
   180f2:	f04c 0c02 	orrcs.w	ip, ip, #2
   180f6:	fa43 f305 	asr.w	r3, r3, r5
   180fa:	18c0      	adds	r0, r0, r3
   180fc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   18100:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18104:	d507      	bpl.n	18116 <__adddf3+0xe6>
   18106:	f04f 0e00 	mov.w	lr, #0
   1810a:	f1dc 0c00 	rsbs	ip, ip, #0
   1810e:	eb7e 0000 	sbcs.w	r0, lr, r0
   18112:	eb6e 0101 	sbc.w	r1, lr, r1
   18116:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1811a:	d31b      	bcc.n	18154 <__adddf3+0x124>
   1811c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   18120:	d30c      	bcc.n	1813c <__adddf3+0x10c>
   18122:	0849      	lsrs	r1, r1, #1
   18124:	ea5f 0030 	movs.w	r0, r0, rrx
   18128:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1812c:	f104 0401 	add.w	r4, r4, #1
   18130:	ea4f 5244 	mov.w	r2, r4, lsl #21
   18134:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   18138:	f080 809a 	bcs.w	18270 <__adddf3+0x240>
   1813c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   18140:	bf08      	it	eq
   18142:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   18146:	f150 0000 	adcs.w	r0, r0, #0
   1814a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1814e:	ea41 0105 	orr.w	r1, r1, r5
   18152:	bd30      	pop	{r4, r5, pc}
   18154:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   18158:	4140      	adcs	r0, r0
   1815a:	eb41 0101 	adc.w	r1, r1, r1
   1815e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   18162:	f1a4 0401 	sub.w	r4, r4, #1
   18166:	d1e9      	bne.n	1813c <__adddf3+0x10c>
   18168:	f091 0f00 	teq	r1, #0
   1816c:	bf04      	itt	eq
   1816e:	4601      	moveq	r1, r0
   18170:	2000      	moveq	r0, #0
   18172:	fab1 f381 	clz	r3, r1
   18176:	bf08      	it	eq
   18178:	3320      	addeq	r3, #32
   1817a:	f1a3 030b 	sub.w	r3, r3, #11
   1817e:	f1b3 0220 	subs.w	r2, r3, #32
   18182:	da0c      	bge.n	1819e <__adddf3+0x16e>
   18184:	320c      	adds	r2, #12
   18186:	dd08      	ble.n	1819a <__adddf3+0x16a>
   18188:	f102 0c14 	add.w	ip, r2, #20
   1818c:	f1c2 020c 	rsb	r2, r2, #12
   18190:	fa01 f00c 	lsl.w	r0, r1, ip
   18194:	fa21 f102 	lsr.w	r1, r1, r2
   18198:	e00c      	b.n	181b4 <__adddf3+0x184>
   1819a:	f102 0214 	add.w	r2, r2, #20
   1819e:	bfd8      	it	le
   181a0:	f1c2 0c20 	rsble	ip, r2, #32
   181a4:	fa01 f102 	lsl.w	r1, r1, r2
   181a8:	fa20 fc0c 	lsr.w	ip, r0, ip
   181ac:	bfdc      	itt	le
   181ae:	ea41 010c 	orrle.w	r1, r1, ip
   181b2:	4090      	lslle	r0, r2
   181b4:	1ae4      	subs	r4, r4, r3
   181b6:	bfa2      	ittt	ge
   181b8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   181bc:	4329      	orrge	r1, r5
   181be:	bd30      	popge	{r4, r5, pc}
   181c0:	ea6f 0404 	mvn.w	r4, r4
   181c4:	3c1f      	subs	r4, #31
   181c6:	da1c      	bge.n	18202 <__adddf3+0x1d2>
   181c8:	340c      	adds	r4, #12
   181ca:	dc0e      	bgt.n	181ea <__adddf3+0x1ba>
   181cc:	f104 0414 	add.w	r4, r4, #20
   181d0:	f1c4 0220 	rsb	r2, r4, #32
   181d4:	fa20 f004 	lsr.w	r0, r0, r4
   181d8:	fa01 f302 	lsl.w	r3, r1, r2
   181dc:	ea40 0003 	orr.w	r0, r0, r3
   181e0:	fa21 f304 	lsr.w	r3, r1, r4
   181e4:	ea45 0103 	orr.w	r1, r5, r3
   181e8:	bd30      	pop	{r4, r5, pc}
   181ea:	f1c4 040c 	rsb	r4, r4, #12
   181ee:	f1c4 0220 	rsb	r2, r4, #32
   181f2:	fa20 f002 	lsr.w	r0, r0, r2
   181f6:	fa01 f304 	lsl.w	r3, r1, r4
   181fa:	ea40 0003 	orr.w	r0, r0, r3
   181fe:	4629      	mov	r1, r5
   18200:	bd30      	pop	{r4, r5, pc}
   18202:	fa21 f004 	lsr.w	r0, r1, r4
   18206:	4629      	mov	r1, r5
   18208:	bd30      	pop	{r4, r5, pc}
   1820a:	f094 0f00 	teq	r4, #0
   1820e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   18212:	bf06      	itte	eq
   18214:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   18218:	3401      	addeq	r4, #1
   1821a:	3d01      	subne	r5, #1
   1821c:	e74e      	b.n	180bc <__adddf3+0x8c>
   1821e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   18222:	bf18      	it	ne
   18224:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   18228:	d029      	beq.n	1827e <__adddf3+0x24e>
   1822a:	ea94 0f05 	teq	r4, r5
   1822e:	bf08      	it	eq
   18230:	ea90 0f02 	teqeq	r0, r2
   18234:	d005      	beq.n	18242 <__adddf3+0x212>
   18236:	ea54 0c00 	orrs.w	ip, r4, r0
   1823a:	bf04      	itt	eq
   1823c:	4619      	moveq	r1, r3
   1823e:	4610      	moveq	r0, r2
   18240:	bd30      	pop	{r4, r5, pc}
   18242:	ea91 0f03 	teq	r1, r3
   18246:	bf1e      	ittt	ne
   18248:	2100      	movne	r1, #0
   1824a:	2000      	movne	r0, #0
   1824c:	bd30      	popne	{r4, r5, pc}
   1824e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   18252:	d105      	bne.n	18260 <__adddf3+0x230>
   18254:	0040      	lsls	r0, r0, #1
   18256:	4149      	adcs	r1, r1
   18258:	bf28      	it	cs
   1825a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1825e:	bd30      	pop	{r4, r5, pc}
   18260:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   18264:	bf3c      	itt	cc
   18266:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1826a:	bd30      	popcc	{r4, r5, pc}
   1826c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18270:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   18274:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   18278:	f04f 0000 	mov.w	r0, #0
   1827c:	bd30      	pop	{r4, r5, pc}
   1827e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   18282:	bf1a      	itte	ne
   18284:	4619      	movne	r1, r3
   18286:	4610      	movne	r0, r2
   18288:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1828c:	bf1c      	itt	ne
   1828e:	460b      	movne	r3, r1
   18290:	4602      	movne	r2, r0
   18292:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   18296:	bf06      	itte	eq
   18298:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1829c:	ea91 0f03 	teqeq	r1, r3
   182a0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   182a4:	bd30      	pop	{r4, r5, pc}
   182a6:	bf00      	nop

000182a8 <__aeabi_ui2d>:
__floatunsidf():
   182a8:	f090 0f00 	teq	r0, #0
   182ac:	bf04      	itt	eq
   182ae:	2100      	moveq	r1, #0
   182b0:	4770      	bxeq	lr
   182b2:	b530      	push	{r4, r5, lr}
   182b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
   182b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
   182bc:	f04f 0500 	mov.w	r5, #0
   182c0:	f04f 0100 	mov.w	r1, #0
   182c4:	e750      	b.n	18168 <__adddf3+0x138>
   182c6:	bf00      	nop

000182c8 <__aeabi_i2d>:
__aeabi_i2d():
   182c8:	f090 0f00 	teq	r0, #0
   182cc:	bf04      	itt	eq
   182ce:	2100      	moveq	r1, #0
   182d0:	4770      	bxeq	lr
   182d2:	b530      	push	{r4, r5, lr}
   182d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
   182d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
   182dc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   182e0:	bf48      	it	mi
   182e2:	4240      	negmi	r0, r0
   182e4:	f04f 0100 	mov.w	r1, #0
   182e8:	e73e      	b.n	18168 <__adddf3+0x138>
   182ea:	bf00      	nop

000182ec <__aeabi_f2d>:
__aeabi_f2d():
   182ec:	0042      	lsls	r2, r0, #1
   182ee:	ea4f 01e2 	mov.w	r1, r2, asr #3
   182f2:	ea4f 0131 	mov.w	r1, r1, rrx
   182f6:	ea4f 7002 	mov.w	r0, r2, lsl #28
   182fa:	bf1f      	itttt	ne
   182fc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   18300:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   18304:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   18308:	4770      	bxne	lr
   1830a:	f092 0f00 	teq	r2, #0
   1830e:	bf14      	ite	ne
   18310:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   18314:	4770      	bxeq	lr
   18316:	b530      	push	{r4, r5, lr}
   18318:	f44f 7460 	mov.w	r4, #896	; 0x380
   1831c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18320:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   18324:	e720      	b.n	18168 <__adddf3+0x138>
   18326:	bf00      	nop

00018328 <__aeabi_ul2d>:
__floatundidf():
   18328:	ea50 0201 	orrs.w	r2, r0, r1
   1832c:	bf08      	it	eq
   1832e:	4770      	bxeq	lr
   18330:	b530      	push	{r4, r5, lr}
   18332:	f04f 0500 	mov.w	r5, #0
   18336:	e00a      	b.n	1834e <__aeabi_l2d+0x16>

00018338 <__aeabi_l2d>:
__aeabi_l2d():
   18338:	ea50 0201 	orrs.w	r2, r0, r1
   1833c:	bf08      	it	eq
   1833e:	4770      	bxeq	lr
   18340:	b530      	push	{r4, r5, lr}
   18342:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   18346:	d502      	bpl.n	1834e <__aeabi_l2d+0x16>
   18348:	4240      	negs	r0, r0
   1834a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1834e:	f44f 6480 	mov.w	r4, #1024	; 0x400
   18352:	f104 0432 	add.w	r4, r4, #50	; 0x32
   18356:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1835a:	f43f aedc 	beq.w	18116 <__adddf3+0xe6>
   1835e:	f04f 0203 	mov.w	r2, #3
   18362:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   18366:	bf18      	it	ne
   18368:	3203      	addne	r2, #3
   1836a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1836e:	bf18      	it	ne
   18370:	3203      	addne	r2, #3
   18372:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   18376:	f1c2 0320 	rsb	r3, r2, #32
   1837a:	fa00 fc03 	lsl.w	ip, r0, r3
   1837e:	fa20 f002 	lsr.w	r0, r0, r2
   18382:	fa01 fe03 	lsl.w	lr, r1, r3
   18386:	ea40 000e 	orr.w	r0, r0, lr
   1838a:	fa21 f102 	lsr.w	r1, r1, r2
   1838e:	4414      	add	r4, r2
   18390:	e6c1      	b.n	18116 <__adddf3+0xe6>
   18392:	bf00      	nop

00018394 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   18394:	004a      	lsls	r2, r1, #1
   18396:	d211      	bcs.n	183bc <__aeabi_d2uiz+0x28>
   18398:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1839c:	d211      	bcs.n	183c2 <__aeabi_d2uiz+0x2e>
   1839e:	d50d      	bpl.n	183bc <__aeabi_d2uiz+0x28>
   183a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   183a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   183a8:	d40e      	bmi.n	183c8 <__aeabi_d2uiz+0x34>
   183aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   183ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   183b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   183b6:	fa23 f002 	lsr.w	r0, r3, r2
   183ba:	4770      	bx	lr
   183bc:	f04f 0000 	mov.w	r0, #0
   183c0:	4770      	bx	lr
   183c2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   183c6:	d102      	bne.n	183ce <__aeabi_d2uiz+0x3a>
   183c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   183cc:	4770      	bx	lr
   183ce:	f04f 0000 	mov.w	r0, #0
   183d2:	4770      	bx	lr

000183d4 <__aeabi_d2f>:
__truncdfsf2():
   183d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   183d8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   183dc:	bf24      	itt	cs
   183de:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   183e2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   183e6:	d90d      	bls.n	18404 <__aeabi_d2f+0x30>
   183e8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   183ec:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   183f0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   183f4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   183f8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   183fc:	bf08      	it	eq
   183fe:	f020 0001 	biceq.w	r0, r0, #1
   18402:	4770      	bx	lr
   18404:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   18408:	d121      	bne.n	1844e <__aeabi_d2f+0x7a>
   1840a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1840e:	bfbc      	itt	lt
   18410:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   18414:	4770      	bxlt	lr
   18416:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1841a:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1841e:	f1c2 0218 	rsb	r2, r2, #24
   18422:	f1c2 0c20 	rsb	ip, r2, #32
   18426:	fa10 f30c 	lsls.w	r3, r0, ip
   1842a:	fa20 f002 	lsr.w	r0, r0, r2
   1842e:	bf18      	it	ne
   18430:	f040 0001 	orrne.w	r0, r0, #1
   18434:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18438:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1843c:	fa03 fc0c 	lsl.w	ip, r3, ip
   18440:	ea40 000c 	orr.w	r0, r0, ip
   18444:	fa23 f302 	lsr.w	r3, r3, r2
   18448:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1844c:	e7cc      	b.n	183e8 <__aeabi_d2f+0x14>
   1844e:	ea7f 5362 	mvns.w	r3, r2, asr #21
   18452:	d107      	bne.n	18464 <__aeabi_d2f+0x90>
   18454:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   18458:	bf1e      	ittt	ne
   1845a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1845e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   18462:	4770      	bxne	lr
   18464:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   18468:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1846c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18470:	4770      	bx	lr
   18472:	bf00      	nop

00018474 <__aeabi_frsub>:
__aeabi_frsub():
   18474:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   18478:	e002      	b.n	18480 <__addsf3>
   1847a:	bf00      	nop

0001847c <__aeabi_fsub>:
__aeabi_fsub():
   1847c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00018480 <__addsf3>:
__addsf3():
   18480:	0042      	lsls	r2, r0, #1
   18482:	bf1f      	itttt	ne
   18484:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   18488:	ea92 0f03 	teqne	r2, r3
   1848c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   18490:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   18494:	d06a      	beq.n	1856c <__addsf3+0xec>
   18496:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1849a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1849e:	bfc1      	itttt	gt
   184a0:	18d2      	addgt	r2, r2, r3
   184a2:	4041      	eorgt	r1, r0
   184a4:	4048      	eorgt	r0, r1
   184a6:	4041      	eorgt	r1, r0
   184a8:	bfb8      	it	lt
   184aa:	425b      	neglt	r3, r3
   184ac:	2b19      	cmp	r3, #25
   184ae:	bf88      	it	hi
   184b0:	4770      	bxhi	lr
   184b2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   184b6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   184ba:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   184be:	bf18      	it	ne
   184c0:	4240      	negne	r0, r0
   184c2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   184c6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   184ca:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   184ce:	bf18      	it	ne
   184d0:	4249      	negne	r1, r1
   184d2:	ea92 0f03 	teq	r2, r3
   184d6:	d03f      	beq.n	18558 <__addsf3+0xd8>
   184d8:	f1a2 0201 	sub.w	r2, r2, #1
   184dc:	fa41 fc03 	asr.w	ip, r1, r3
   184e0:	eb10 000c 	adds.w	r0, r0, ip
   184e4:	f1c3 0320 	rsb	r3, r3, #32
   184e8:	fa01 f103 	lsl.w	r1, r1, r3
   184ec:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   184f0:	d502      	bpl.n	184f8 <__addsf3+0x78>
   184f2:	4249      	negs	r1, r1
   184f4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   184f8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   184fc:	d313      	bcc.n	18526 <__addsf3+0xa6>
   184fe:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   18502:	d306      	bcc.n	18512 <__addsf3+0x92>
   18504:	0840      	lsrs	r0, r0, #1
   18506:	ea4f 0131 	mov.w	r1, r1, rrx
   1850a:	f102 0201 	add.w	r2, r2, #1
   1850e:	2afe      	cmp	r2, #254	; 0xfe
   18510:	d251      	bcs.n	185b6 <__addsf3+0x136>
   18512:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   18516:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1851a:	bf08      	it	eq
   1851c:	f020 0001 	biceq.w	r0, r0, #1
   18520:	ea40 0003 	orr.w	r0, r0, r3
   18524:	4770      	bx	lr
   18526:	0049      	lsls	r1, r1, #1
   18528:	eb40 0000 	adc.w	r0, r0, r0
   1852c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   18530:	f1a2 0201 	sub.w	r2, r2, #1
   18534:	d1ed      	bne.n	18512 <__addsf3+0x92>
   18536:	fab0 fc80 	clz	ip, r0
   1853a:	f1ac 0c08 	sub.w	ip, ip, #8
   1853e:	ebb2 020c 	subs.w	r2, r2, ip
   18542:	fa00 f00c 	lsl.w	r0, r0, ip
   18546:	bfaa      	itet	ge
   18548:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1854c:	4252      	neglt	r2, r2
   1854e:	4318      	orrge	r0, r3
   18550:	bfbc      	itt	lt
   18552:	40d0      	lsrlt	r0, r2
   18554:	4318      	orrlt	r0, r3
   18556:	4770      	bx	lr
   18558:	f092 0f00 	teq	r2, #0
   1855c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   18560:	bf06      	itte	eq
   18562:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   18566:	3201      	addeq	r2, #1
   18568:	3b01      	subne	r3, #1
   1856a:	e7b5      	b.n	184d8 <__addsf3+0x58>
   1856c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   18570:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   18574:	bf18      	it	ne
   18576:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1857a:	d021      	beq.n	185c0 <__addsf3+0x140>
   1857c:	ea92 0f03 	teq	r2, r3
   18580:	d004      	beq.n	1858c <__addsf3+0x10c>
   18582:	f092 0f00 	teq	r2, #0
   18586:	bf08      	it	eq
   18588:	4608      	moveq	r0, r1
   1858a:	4770      	bx	lr
   1858c:	ea90 0f01 	teq	r0, r1
   18590:	bf1c      	itt	ne
   18592:	2000      	movne	r0, #0
   18594:	4770      	bxne	lr
   18596:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1859a:	d104      	bne.n	185a6 <__addsf3+0x126>
   1859c:	0040      	lsls	r0, r0, #1
   1859e:	bf28      	it	cs
   185a0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   185a4:	4770      	bx	lr
   185a6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   185aa:	bf3c      	itt	cc
   185ac:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   185b0:	4770      	bxcc	lr
   185b2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   185b6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   185ba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   185be:	4770      	bx	lr
   185c0:	ea7f 6222 	mvns.w	r2, r2, asr #24
   185c4:	bf16      	itet	ne
   185c6:	4608      	movne	r0, r1
   185c8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   185cc:	4601      	movne	r1, r0
   185ce:	0242      	lsls	r2, r0, #9
   185d0:	bf06      	itte	eq
   185d2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   185d6:	ea90 0f01 	teqeq	r0, r1
   185da:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   185de:	4770      	bx	lr

000185e0 <__aeabi_ui2f>:
__floatunsisf():
   185e0:	f04f 0300 	mov.w	r3, #0
   185e4:	e004      	b.n	185f0 <__aeabi_i2f+0x8>
   185e6:	bf00      	nop

000185e8 <__aeabi_i2f>:
__floatsisf():
   185e8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   185ec:	bf48      	it	mi
   185ee:	4240      	negmi	r0, r0
   185f0:	ea5f 0c00 	movs.w	ip, r0
   185f4:	bf08      	it	eq
   185f6:	4770      	bxeq	lr
   185f8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   185fc:	4601      	mov	r1, r0
   185fe:	f04f 0000 	mov.w	r0, #0
   18602:	e01c      	b.n	1863e <__aeabi_l2f+0x2a>

00018604 <__aeabi_ul2f>:
__aeabi_ul2f():
   18604:	ea50 0201 	orrs.w	r2, r0, r1
   18608:	bf08      	it	eq
   1860a:	4770      	bxeq	lr
   1860c:	f04f 0300 	mov.w	r3, #0
   18610:	e00a      	b.n	18628 <__aeabi_l2f+0x14>
   18612:	bf00      	nop

00018614 <__aeabi_l2f>:
__aeabi_l2f():
   18614:	ea50 0201 	orrs.w	r2, r0, r1
   18618:	bf08      	it	eq
   1861a:	4770      	bxeq	lr
   1861c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   18620:	d502      	bpl.n	18628 <__aeabi_l2f+0x14>
   18622:	4240      	negs	r0, r0
   18624:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18628:	ea5f 0c01 	movs.w	ip, r1
   1862c:	bf02      	ittt	eq
   1862e:	4684      	moveq	ip, r0
   18630:	4601      	moveq	r1, r0
   18632:	2000      	moveq	r0, #0
   18634:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   18638:	bf08      	it	eq
   1863a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1863e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   18642:	fabc f28c 	clz	r2, ip
   18646:	3a08      	subs	r2, #8
   18648:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1864c:	db10      	blt.n	18670 <__aeabi_l2f+0x5c>
   1864e:	fa01 fc02 	lsl.w	ip, r1, r2
   18652:	4463      	add	r3, ip
   18654:	fa00 fc02 	lsl.w	ip, r0, r2
   18658:	f1c2 0220 	rsb	r2, r2, #32
   1865c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   18660:	fa20 f202 	lsr.w	r2, r0, r2
   18664:	eb43 0002 	adc.w	r0, r3, r2
   18668:	bf08      	it	eq
   1866a:	f020 0001 	biceq.w	r0, r0, #1
   1866e:	4770      	bx	lr
   18670:	f102 0220 	add.w	r2, r2, #32
   18674:	fa01 fc02 	lsl.w	ip, r1, r2
   18678:	f1c2 0220 	rsb	r2, r2, #32
   1867c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   18680:	fa21 f202 	lsr.w	r2, r1, r2
   18684:	eb43 0002 	adc.w	r0, r3, r2
   18688:	bf08      	it	eq
   1868a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1868e:	4770      	bx	lr

00018690 <__aeabi_fmul>:
__aeabi_fmul():
   18690:	f04f 0cff 	mov.w	ip, #255	; 0xff
   18694:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   18698:	bf1e      	ittt	ne
   1869a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1869e:	ea92 0f0c 	teqne	r2, ip
   186a2:	ea93 0f0c 	teqne	r3, ip
   186a6:	d06f      	beq.n	18788 <__aeabi_fmul+0xf8>
   186a8:	441a      	add	r2, r3
   186aa:	ea80 0c01 	eor.w	ip, r0, r1
   186ae:	0240      	lsls	r0, r0, #9
   186b0:	bf18      	it	ne
   186b2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   186b6:	d01e      	beq.n	186f6 <__aeabi_fmul+0x66>
   186b8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   186bc:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   186c0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   186c4:	fba0 3101 	umull	r3, r1, r0, r1
   186c8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   186cc:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   186d0:	bf3e      	ittt	cc
   186d2:	0049      	lslcc	r1, r1, #1
   186d4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   186d8:	005b      	lslcc	r3, r3, #1
   186da:	ea40 0001 	orr.w	r0, r0, r1
   186de:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   186e2:	2afd      	cmp	r2, #253	; 0xfd
   186e4:	d81d      	bhi.n	18722 <__aeabi_fmul+0x92>
   186e6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   186ea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   186ee:	bf08      	it	eq
   186f0:	f020 0001 	biceq.w	r0, r0, #1
   186f4:	4770      	bx	lr
   186f6:	f090 0f00 	teq	r0, #0
   186fa:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   186fe:	bf08      	it	eq
   18700:	0249      	lsleq	r1, r1, #9
   18702:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   18706:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1870a:	3a7f      	subs	r2, #127	; 0x7f
   1870c:	bfc2      	ittt	gt
   1870e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   18712:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   18716:	4770      	bxgt	lr
   18718:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1871c:	f04f 0300 	mov.w	r3, #0
   18720:	3a01      	subs	r2, #1
   18722:	dc5d      	bgt.n	187e0 <__aeabi_fmul+0x150>
   18724:	f112 0f19 	cmn.w	r2, #25
   18728:	bfdc      	itt	le
   1872a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1872e:	4770      	bxle	lr
   18730:	f1c2 0200 	rsb	r2, r2, #0
   18734:	0041      	lsls	r1, r0, #1
   18736:	fa21 f102 	lsr.w	r1, r1, r2
   1873a:	f1c2 0220 	rsb	r2, r2, #32
   1873e:	fa00 fc02 	lsl.w	ip, r0, r2
   18742:	ea5f 0031 	movs.w	r0, r1, rrx
   18746:	f140 0000 	adc.w	r0, r0, #0
   1874a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1874e:	bf08      	it	eq
   18750:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   18754:	4770      	bx	lr
   18756:	f092 0f00 	teq	r2, #0
   1875a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1875e:	bf02      	ittt	eq
   18760:	0040      	lsleq	r0, r0, #1
   18762:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   18766:	3a01      	subeq	r2, #1
   18768:	d0f9      	beq.n	1875e <__aeabi_fmul+0xce>
   1876a:	ea40 000c 	orr.w	r0, r0, ip
   1876e:	f093 0f00 	teq	r3, #0
   18772:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   18776:	bf02      	ittt	eq
   18778:	0049      	lsleq	r1, r1, #1
   1877a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1877e:	3b01      	subeq	r3, #1
   18780:	d0f9      	beq.n	18776 <__aeabi_fmul+0xe6>
   18782:	ea41 010c 	orr.w	r1, r1, ip
   18786:	e78f      	b.n	186a8 <__aeabi_fmul+0x18>
   18788:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1878c:	ea92 0f0c 	teq	r2, ip
   18790:	bf18      	it	ne
   18792:	ea93 0f0c 	teqne	r3, ip
   18796:	d00a      	beq.n	187ae <__aeabi_fmul+0x11e>
   18798:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1879c:	bf18      	it	ne
   1879e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   187a2:	d1d8      	bne.n	18756 <__aeabi_fmul+0xc6>
   187a4:	ea80 0001 	eor.w	r0, r0, r1
   187a8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   187ac:	4770      	bx	lr
   187ae:	f090 0f00 	teq	r0, #0
   187b2:	bf17      	itett	ne
   187b4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   187b8:	4608      	moveq	r0, r1
   187ba:	f091 0f00 	teqne	r1, #0
   187be:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   187c2:	d014      	beq.n	187ee <__aeabi_fmul+0x15e>
   187c4:	ea92 0f0c 	teq	r2, ip
   187c8:	d101      	bne.n	187ce <__aeabi_fmul+0x13e>
   187ca:	0242      	lsls	r2, r0, #9
   187cc:	d10f      	bne.n	187ee <__aeabi_fmul+0x15e>
   187ce:	ea93 0f0c 	teq	r3, ip
   187d2:	d103      	bne.n	187dc <__aeabi_fmul+0x14c>
   187d4:	024b      	lsls	r3, r1, #9
   187d6:	bf18      	it	ne
   187d8:	4608      	movne	r0, r1
   187da:	d108      	bne.n	187ee <__aeabi_fmul+0x15e>
   187dc:	ea80 0001 	eor.w	r0, r0, r1
   187e0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   187e4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   187e8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   187ec:	4770      	bx	lr
   187ee:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   187f2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   187f6:	4770      	bx	lr

000187f8 <__aeabi_fdiv>:
__aeabi_fdiv():
   187f8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   187fc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   18800:	bf1e      	ittt	ne
   18802:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   18806:	ea92 0f0c 	teqne	r2, ip
   1880a:	ea93 0f0c 	teqne	r3, ip
   1880e:	d069      	beq.n	188e4 <__aeabi_fdiv+0xec>
   18810:	eba2 0203 	sub.w	r2, r2, r3
   18814:	ea80 0c01 	eor.w	ip, r0, r1
   18818:	0249      	lsls	r1, r1, #9
   1881a:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1881e:	d037      	beq.n	18890 <__aeabi_fdiv+0x98>
   18820:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   18824:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   18828:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1882c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   18830:	428b      	cmp	r3, r1
   18832:	bf38      	it	cc
   18834:	005b      	lslcc	r3, r3, #1
   18836:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1883a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1883e:	428b      	cmp	r3, r1
   18840:	bf24      	itt	cs
   18842:	1a5b      	subcs	r3, r3, r1
   18844:	ea40 000c 	orrcs.w	r0, r0, ip
   18848:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1884c:	bf24      	itt	cs
   1884e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   18852:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   18856:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1885a:	bf24      	itt	cs
   1885c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   18860:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   18864:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   18868:	bf24      	itt	cs
   1886a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1886e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   18872:	011b      	lsls	r3, r3, #4
   18874:	bf18      	it	ne
   18876:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1887a:	d1e0      	bne.n	1883e <__aeabi_fdiv+0x46>
   1887c:	2afd      	cmp	r2, #253	; 0xfd
   1887e:	f63f af50 	bhi.w	18722 <__aeabi_fmul+0x92>
   18882:	428b      	cmp	r3, r1
   18884:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   18888:	bf08      	it	eq
   1888a:	f020 0001 	biceq.w	r0, r0, #1
   1888e:	4770      	bx	lr
   18890:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   18894:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   18898:	327f      	adds	r2, #127	; 0x7f
   1889a:	bfc2      	ittt	gt
   1889c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   188a0:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   188a4:	4770      	bxgt	lr
   188a6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   188aa:	f04f 0300 	mov.w	r3, #0
   188ae:	3a01      	subs	r2, #1
   188b0:	e737      	b.n	18722 <__aeabi_fmul+0x92>
   188b2:	f092 0f00 	teq	r2, #0
   188b6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   188ba:	bf02      	ittt	eq
   188bc:	0040      	lsleq	r0, r0, #1
   188be:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   188c2:	3a01      	subeq	r2, #1
   188c4:	d0f9      	beq.n	188ba <__aeabi_fdiv+0xc2>
   188c6:	ea40 000c 	orr.w	r0, r0, ip
   188ca:	f093 0f00 	teq	r3, #0
   188ce:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   188d2:	bf02      	ittt	eq
   188d4:	0049      	lsleq	r1, r1, #1
   188d6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   188da:	3b01      	subeq	r3, #1
   188dc:	d0f9      	beq.n	188d2 <__aeabi_fdiv+0xda>
   188de:	ea41 010c 	orr.w	r1, r1, ip
   188e2:	e795      	b.n	18810 <__aeabi_fdiv+0x18>
   188e4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   188e8:	ea92 0f0c 	teq	r2, ip
   188ec:	d108      	bne.n	18900 <__aeabi_fdiv+0x108>
   188ee:	0242      	lsls	r2, r0, #9
   188f0:	f47f af7d 	bne.w	187ee <__aeabi_fmul+0x15e>
   188f4:	ea93 0f0c 	teq	r3, ip
   188f8:	f47f af70 	bne.w	187dc <__aeabi_fmul+0x14c>
   188fc:	4608      	mov	r0, r1
   188fe:	e776      	b.n	187ee <__aeabi_fmul+0x15e>
   18900:	ea93 0f0c 	teq	r3, ip
   18904:	d104      	bne.n	18910 <__aeabi_fdiv+0x118>
   18906:	024b      	lsls	r3, r1, #9
   18908:	f43f af4c 	beq.w	187a4 <__aeabi_fmul+0x114>
   1890c:	4608      	mov	r0, r1
   1890e:	e76e      	b.n	187ee <__aeabi_fmul+0x15e>
   18910:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   18914:	bf18      	it	ne
   18916:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1891a:	d1ca      	bne.n	188b2 <__aeabi_fdiv+0xba>
   1891c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   18920:	f47f af5c 	bne.w	187dc <__aeabi_fmul+0x14c>
   18924:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   18928:	f47f af3c 	bne.w	187a4 <__aeabi_fmul+0x114>
   1892c:	e75f      	b.n	187ee <__aeabi_fmul+0x15e>
   1892e:	bf00      	nop

00018930 <__aeabi_f2uiz>:
__fixunssfsi():
   18930:	0042      	lsls	r2, r0, #1
   18932:	d20e      	bcs.n	18952 <__aeabi_f2uiz+0x22>
   18934:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   18938:	d30b      	bcc.n	18952 <__aeabi_f2uiz+0x22>
   1893a:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1893e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   18942:	d409      	bmi.n	18958 <__aeabi_f2uiz+0x28>
   18944:	ea4f 2300 	mov.w	r3, r0, lsl #8
   18948:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1894c:	fa23 f002 	lsr.w	r0, r3, r2
   18950:	4770      	bx	lr
   18952:	f04f 0000 	mov.w	r0, #0
   18956:	4770      	bx	lr
   18958:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1895c:	d101      	bne.n	18962 <__aeabi_f2uiz+0x32>
   1895e:	0242      	lsls	r2, r0, #9
   18960:	d102      	bne.n	18968 <__aeabi_f2uiz+0x38>
   18962:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18966:	4770      	bx	lr
   18968:	f04f 0000 	mov.w	r0, #0
   1896c:	4770      	bx	lr
   1896e:	bf00      	nop

00018970 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   18970:	b953      	cbnz	r3, 18988 <__aeabi_uldivmod+0x18>
   18972:	b94a      	cbnz	r2, 18988 <__aeabi_uldivmod+0x18>
   18974:	2900      	cmp	r1, #0
   18976:	bf08      	it	eq
   18978:	2800      	cmpeq	r0, #0
   1897a:	bf1c      	itt	ne
   1897c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   18980:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   18984:	f000 b97a 	b.w	18c7c <__aeabi_idiv0>
   18988:	f1ad 0c08 	sub.w	ip, sp, #8
   1898c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   18990:	f000 f806 	bl	189a0 <__udivmoddi4>
   18994:	f8dd e004 	ldr.w	lr, [sp, #4]
   18998:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1899c:	b004      	add	sp, #16
   1899e:	4770      	bx	lr

000189a0 <__udivmoddi4>:
__udivmoddi4():
   189a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   189a4:	468c      	mov	ip, r1
   189a6:	460e      	mov	r6, r1
   189a8:	4604      	mov	r4, r0
   189aa:	9d08      	ldr	r5, [sp, #32]
   189ac:	2b00      	cmp	r3, #0
   189ae:	d150      	bne.n	18a52 <__udivmoddi4+0xb2>
   189b0:	428a      	cmp	r2, r1
   189b2:	4617      	mov	r7, r2
   189b4:	d96c      	bls.n	18a90 <__udivmoddi4+0xf0>
   189b6:	fab2 fe82 	clz	lr, r2
   189ba:	f1be 0f00 	cmp.w	lr, #0
   189be:	d00b      	beq.n	189d8 <__udivmoddi4+0x38>
   189c0:	f1ce 0c20 	rsb	ip, lr, #32
   189c4:	fa01 f60e 	lsl.w	r6, r1, lr
   189c8:	fa20 fc0c 	lsr.w	ip, r0, ip
   189cc:	fa02 f70e 	lsl.w	r7, r2, lr
   189d0:	ea4c 0c06 	orr.w	ip, ip, r6
   189d4:	fa00 f40e 	lsl.w	r4, r0, lr
   189d8:	0c3a      	lsrs	r2, r7, #16
   189da:	fbbc f9f2 	udiv	r9, ip, r2
   189de:	b2bb      	uxth	r3, r7
   189e0:	fb02 cc19 	mls	ip, r2, r9, ip
   189e4:	fb09 fa03 	mul.w	sl, r9, r3
   189e8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   189ec:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   189f0:	45b2      	cmp	sl, r6
   189f2:	d90a      	bls.n	18a0a <__udivmoddi4+0x6a>
   189f4:	19f6      	adds	r6, r6, r7
   189f6:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   189fa:	f080 8125 	bcs.w	18c48 <__udivmoddi4+0x2a8>
   189fe:	45b2      	cmp	sl, r6
   18a00:	f240 8122 	bls.w	18c48 <__udivmoddi4+0x2a8>
   18a04:	f1a9 0902 	sub.w	r9, r9, #2
   18a08:	443e      	add	r6, r7
   18a0a:	eba6 060a 	sub.w	r6, r6, sl
   18a0e:	fbb6 f0f2 	udiv	r0, r6, r2
   18a12:	fb02 6610 	mls	r6, r2, r0, r6
   18a16:	fb00 f303 	mul.w	r3, r0, r3
   18a1a:	b2a4      	uxth	r4, r4
   18a1c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   18a20:	42a3      	cmp	r3, r4
   18a22:	d909      	bls.n	18a38 <__udivmoddi4+0x98>
   18a24:	19e4      	adds	r4, r4, r7
   18a26:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   18a2a:	f080 810b 	bcs.w	18c44 <__udivmoddi4+0x2a4>
   18a2e:	42a3      	cmp	r3, r4
   18a30:	f240 8108 	bls.w	18c44 <__udivmoddi4+0x2a4>
   18a34:	3802      	subs	r0, #2
   18a36:	443c      	add	r4, r7
   18a38:	2100      	movs	r1, #0
   18a3a:	1ae4      	subs	r4, r4, r3
   18a3c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   18a40:	2d00      	cmp	r5, #0
   18a42:	d062      	beq.n	18b0a <__udivmoddi4+0x16a>
   18a44:	2300      	movs	r3, #0
   18a46:	fa24 f40e 	lsr.w	r4, r4, lr
   18a4a:	602c      	str	r4, [r5, #0]
   18a4c:	606b      	str	r3, [r5, #4]
   18a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18a52:	428b      	cmp	r3, r1
   18a54:	d907      	bls.n	18a66 <__udivmoddi4+0xc6>
   18a56:	2d00      	cmp	r5, #0
   18a58:	d055      	beq.n	18b06 <__udivmoddi4+0x166>
   18a5a:	2100      	movs	r1, #0
   18a5c:	e885 0041 	stmia.w	r5, {r0, r6}
   18a60:	4608      	mov	r0, r1
   18a62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18a66:	fab3 f183 	clz	r1, r3
   18a6a:	2900      	cmp	r1, #0
   18a6c:	f040 808f 	bne.w	18b8e <__udivmoddi4+0x1ee>
   18a70:	42b3      	cmp	r3, r6
   18a72:	d302      	bcc.n	18a7a <__udivmoddi4+0xda>
   18a74:	4282      	cmp	r2, r0
   18a76:	f200 80fc 	bhi.w	18c72 <__udivmoddi4+0x2d2>
   18a7a:	1a84      	subs	r4, r0, r2
   18a7c:	eb66 0603 	sbc.w	r6, r6, r3
   18a80:	2001      	movs	r0, #1
   18a82:	46b4      	mov	ip, r6
   18a84:	2d00      	cmp	r5, #0
   18a86:	d040      	beq.n	18b0a <__udivmoddi4+0x16a>
   18a88:	e885 1010 	stmia.w	r5, {r4, ip}
   18a8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18a90:	b912      	cbnz	r2, 18a98 <__udivmoddi4+0xf8>
   18a92:	2701      	movs	r7, #1
   18a94:	fbb7 f7f2 	udiv	r7, r7, r2
   18a98:	fab7 fe87 	clz	lr, r7
   18a9c:	f1be 0f00 	cmp.w	lr, #0
   18aa0:	d135      	bne.n	18b0e <__udivmoddi4+0x16e>
   18aa2:	2101      	movs	r1, #1
   18aa4:	1bf6      	subs	r6, r6, r7
   18aa6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   18aaa:	fa1f f887 	uxth.w	r8, r7
   18aae:	fbb6 f2fc 	udiv	r2, r6, ip
   18ab2:	fb0c 6612 	mls	r6, ip, r2, r6
   18ab6:	fb08 f002 	mul.w	r0, r8, r2
   18aba:	0c23      	lsrs	r3, r4, #16
   18abc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   18ac0:	42b0      	cmp	r0, r6
   18ac2:	d907      	bls.n	18ad4 <__udivmoddi4+0x134>
   18ac4:	19f6      	adds	r6, r6, r7
   18ac6:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   18aca:	d202      	bcs.n	18ad2 <__udivmoddi4+0x132>
   18acc:	42b0      	cmp	r0, r6
   18ace:	f200 80d2 	bhi.w	18c76 <__udivmoddi4+0x2d6>
   18ad2:	461a      	mov	r2, r3
   18ad4:	1a36      	subs	r6, r6, r0
   18ad6:	fbb6 f0fc 	udiv	r0, r6, ip
   18ada:	fb0c 6610 	mls	r6, ip, r0, r6
   18ade:	fb08 f800 	mul.w	r8, r8, r0
   18ae2:	b2a3      	uxth	r3, r4
   18ae4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   18ae8:	45a0      	cmp	r8, r4
   18aea:	d907      	bls.n	18afc <__udivmoddi4+0x15c>
   18aec:	19e4      	adds	r4, r4, r7
   18aee:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   18af2:	d202      	bcs.n	18afa <__udivmoddi4+0x15a>
   18af4:	45a0      	cmp	r8, r4
   18af6:	f200 80b9 	bhi.w	18c6c <__udivmoddi4+0x2cc>
   18afa:	4618      	mov	r0, r3
   18afc:	eba4 0408 	sub.w	r4, r4, r8
   18b00:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   18b04:	e79c      	b.n	18a40 <__udivmoddi4+0xa0>
   18b06:	4629      	mov	r1, r5
   18b08:	4628      	mov	r0, r5
   18b0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18b0e:	fa07 f70e 	lsl.w	r7, r7, lr
   18b12:	f1ce 0320 	rsb	r3, lr, #32
   18b16:	fa26 f203 	lsr.w	r2, r6, r3
   18b1a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   18b1e:	fbb2 f1fc 	udiv	r1, r2, ip
   18b22:	fa1f f887 	uxth.w	r8, r7
   18b26:	fb0c 2211 	mls	r2, ip, r1, r2
   18b2a:	fa06 f60e 	lsl.w	r6, r6, lr
   18b2e:	fa20 f303 	lsr.w	r3, r0, r3
   18b32:	fb01 f908 	mul.w	r9, r1, r8
   18b36:	4333      	orrs	r3, r6
   18b38:	0c1e      	lsrs	r6, r3, #16
   18b3a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   18b3e:	45b1      	cmp	r9, r6
   18b40:	fa00 f40e 	lsl.w	r4, r0, lr
   18b44:	d909      	bls.n	18b5a <__udivmoddi4+0x1ba>
   18b46:	19f6      	adds	r6, r6, r7
   18b48:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   18b4c:	f080 808c 	bcs.w	18c68 <__udivmoddi4+0x2c8>
   18b50:	45b1      	cmp	r9, r6
   18b52:	f240 8089 	bls.w	18c68 <__udivmoddi4+0x2c8>
   18b56:	3902      	subs	r1, #2
   18b58:	443e      	add	r6, r7
   18b5a:	eba6 0609 	sub.w	r6, r6, r9
   18b5e:	fbb6 f0fc 	udiv	r0, r6, ip
   18b62:	fb0c 6210 	mls	r2, ip, r0, r6
   18b66:	fb00 f908 	mul.w	r9, r0, r8
   18b6a:	b29e      	uxth	r6, r3
   18b6c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   18b70:	45b1      	cmp	r9, r6
   18b72:	d907      	bls.n	18b84 <__udivmoddi4+0x1e4>
   18b74:	19f6      	adds	r6, r6, r7
   18b76:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   18b7a:	d271      	bcs.n	18c60 <__udivmoddi4+0x2c0>
   18b7c:	45b1      	cmp	r9, r6
   18b7e:	d96f      	bls.n	18c60 <__udivmoddi4+0x2c0>
   18b80:	3802      	subs	r0, #2
   18b82:	443e      	add	r6, r7
   18b84:	eba6 0609 	sub.w	r6, r6, r9
   18b88:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   18b8c:	e78f      	b.n	18aae <__udivmoddi4+0x10e>
   18b8e:	f1c1 0720 	rsb	r7, r1, #32
   18b92:	fa22 f807 	lsr.w	r8, r2, r7
   18b96:	408b      	lsls	r3, r1
   18b98:	ea48 0303 	orr.w	r3, r8, r3
   18b9c:	fa26 f407 	lsr.w	r4, r6, r7
   18ba0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   18ba4:	fbb4 f9fe 	udiv	r9, r4, lr
   18ba8:	fa1f fc83 	uxth.w	ip, r3
   18bac:	fb0e 4419 	mls	r4, lr, r9, r4
   18bb0:	408e      	lsls	r6, r1
   18bb2:	fa20 f807 	lsr.w	r8, r0, r7
   18bb6:	fb09 fa0c 	mul.w	sl, r9, ip
   18bba:	ea48 0806 	orr.w	r8, r8, r6
   18bbe:	ea4f 4618 	mov.w	r6, r8, lsr #16
   18bc2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   18bc6:	45a2      	cmp	sl, r4
   18bc8:	fa02 f201 	lsl.w	r2, r2, r1
   18bcc:	fa00 f601 	lsl.w	r6, r0, r1
   18bd0:	d908      	bls.n	18be4 <__udivmoddi4+0x244>
   18bd2:	18e4      	adds	r4, r4, r3
   18bd4:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   18bd8:	d244      	bcs.n	18c64 <__udivmoddi4+0x2c4>
   18bda:	45a2      	cmp	sl, r4
   18bdc:	d942      	bls.n	18c64 <__udivmoddi4+0x2c4>
   18bde:	f1a9 0902 	sub.w	r9, r9, #2
   18be2:	441c      	add	r4, r3
   18be4:	eba4 040a 	sub.w	r4, r4, sl
   18be8:	fbb4 f0fe 	udiv	r0, r4, lr
   18bec:	fb0e 4410 	mls	r4, lr, r0, r4
   18bf0:	fb00 fc0c 	mul.w	ip, r0, ip
   18bf4:	fa1f f888 	uxth.w	r8, r8
   18bf8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   18bfc:	45a4      	cmp	ip, r4
   18bfe:	d907      	bls.n	18c10 <__udivmoddi4+0x270>
   18c00:	18e4      	adds	r4, r4, r3
   18c02:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   18c06:	d229      	bcs.n	18c5c <__udivmoddi4+0x2bc>
   18c08:	45a4      	cmp	ip, r4
   18c0a:	d927      	bls.n	18c5c <__udivmoddi4+0x2bc>
   18c0c:	3802      	subs	r0, #2
   18c0e:	441c      	add	r4, r3
   18c10:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   18c14:	fba0 8902 	umull	r8, r9, r0, r2
   18c18:	eba4 0c0c 	sub.w	ip, r4, ip
   18c1c:	45cc      	cmp	ip, r9
   18c1e:	46c2      	mov	sl, r8
   18c20:	46ce      	mov	lr, r9
   18c22:	d315      	bcc.n	18c50 <__udivmoddi4+0x2b0>
   18c24:	d012      	beq.n	18c4c <__udivmoddi4+0x2ac>
   18c26:	b155      	cbz	r5, 18c3e <__udivmoddi4+0x29e>
   18c28:	ebb6 030a 	subs.w	r3, r6, sl
   18c2c:	eb6c 060e 	sbc.w	r6, ip, lr
   18c30:	fa06 f707 	lsl.w	r7, r6, r7
   18c34:	40cb      	lsrs	r3, r1
   18c36:	431f      	orrs	r7, r3
   18c38:	40ce      	lsrs	r6, r1
   18c3a:	602f      	str	r7, [r5, #0]
   18c3c:	606e      	str	r6, [r5, #4]
   18c3e:	2100      	movs	r1, #0
   18c40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18c44:	4610      	mov	r0, r2
   18c46:	e6f7      	b.n	18a38 <__udivmoddi4+0x98>
   18c48:	4689      	mov	r9, r1
   18c4a:	e6de      	b.n	18a0a <__udivmoddi4+0x6a>
   18c4c:	4546      	cmp	r6, r8
   18c4e:	d2ea      	bcs.n	18c26 <__udivmoddi4+0x286>
   18c50:	ebb8 0a02 	subs.w	sl, r8, r2
   18c54:	eb69 0e03 	sbc.w	lr, r9, r3
   18c58:	3801      	subs	r0, #1
   18c5a:	e7e4      	b.n	18c26 <__udivmoddi4+0x286>
   18c5c:	4670      	mov	r0, lr
   18c5e:	e7d7      	b.n	18c10 <__udivmoddi4+0x270>
   18c60:	4618      	mov	r0, r3
   18c62:	e78f      	b.n	18b84 <__udivmoddi4+0x1e4>
   18c64:	4681      	mov	r9, r0
   18c66:	e7bd      	b.n	18be4 <__udivmoddi4+0x244>
   18c68:	4611      	mov	r1, r2
   18c6a:	e776      	b.n	18b5a <__udivmoddi4+0x1ba>
   18c6c:	3802      	subs	r0, #2
   18c6e:	443c      	add	r4, r7
   18c70:	e744      	b.n	18afc <__udivmoddi4+0x15c>
   18c72:	4608      	mov	r0, r1
   18c74:	e706      	b.n	18a84 <__udivmoddi4+0xe4>
   18c76:	3a02      	subs	r2, #2
   18c78:	443e      	add	r6, r7
   18c7a:	e72b      	b.n	18ad4 <__udivmoddi4+0x134>

00018c7c <__aeabi_idiv0>:
__aeabi_idiv0():
   18c7c:	4770      	bx	lr
   18c7e:	bf00      	nop

00018c80 <abort>:
abort():
   18c80:	b508      	push	{r3, lr}
   18c82:	2006      	movs	r0, #6
   18c84:	f001 fec6 	bl	1aa14 <raise>
   18c88:	2001      	movs	r0, #1
   18c8a:	f7fc f8fb 	bl	14e84 <_exit>

00018c8e <atoi>:
atoi():
   18c8e:	220a      	movs	r2, #10
   18c90:	2100      	movs	r1, #0
   18c92:	f002 be6b 	b.w	1b96c <strtol>
   18c96:	Address 0x0000000000018c96 is out of bounds.


00018c98 <__errno>:
__errno():
   18c98:	4b01      	ldr	r3, [pc, #4]	; (18ca0 <__errno+0x8>)
   18c9a:	6818      	ldr	r0, [r3, #0]
   18c9c:	4770      	bx	lr
   18c9e:	bf00      	nop
   18ca0:	2007c0e0 	.word	0x2007c0e0

00018ca4 <__sflush_r>:
__sflush_r():
   18ca4:	898a      	ldrh	r2, [r1, #12]
   18ca6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18caa:	4605      	mov	r5, r0
   18cac:	0710      	lsls	r0, r2, #28
   18cae:	460c      	mov	r4, r1
   18cb0:	d45a      	bmi.n	18d68 <__sflush_r+0xc4>
   18cb2:	684b      	ldr	r3, [r1, #4]
   18cb4:	2b00      	cmp	r3, #0
   18cb6:	dc05      	bgt.n	18cc4 <__sflush_r+0x20>
   18cb8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   18cba:	2b00      	cmp	r3, #0
   18cbc:	dc02      	bgt.n	18cc4 <__sflush_r+0x20>
   18cbe:	2000      	movs	r0, #0
   18cc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18cc4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   18cc6:	2e00      	cmp	r6, #0
   18cc8:	d0f9      	beq.n	18cbe <__sflush_r+0x1a>
   18cca:	2300      	movs	r3, #0
   18ccc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   18cd0:	682f      	ldr	r7, [r5, #0]
   18cd2:	602b      	str	r3, [r5, #0]
   18cd4:	d033      	beq.n	18d3e <__sflush_r+0x9a>
   18cd6:	6d60      	ldr	r0, [r4, #84]	; 0x54
   18cd8:	89a3      	ldrh	r3, [r4, #12]
   18cda:	075a      	lsls	r2, r3, #29
   18cdc:	d505      	bpl.n	18cea <__sflush_r+0x46>
   18cde:	6863      	ldr	r3, [r4, #4]
   18ce0:	1ac0      	subs	r0, r0, r3
   18ce2:	6b63      	ldr	r3, [r4, #52]	; 0x34
   18ce4:	b10b      	cbz	r3, 18cea <__sflush_r+0x46>
   18ce6:	6c23      	ldr	r3, [r4, #64]	; 0x40
   18ce8:	1ac0      	subs	r0, r0, r3
   18cea:	2300      	movs	r3, #0
   18cec:	4602      	mov	r2, r0
   18cee:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   18cf0:	6a21      	ldr	r1, [r4, #32]
   18cf2:	4628      	mov	r0, r5
   18cf4:	47b0      	blx	r6
   18cf6:	1c43      	adds	r3, r0, #1
   18cf8:	89a3      	ldrh	r3, [r4, #12]
   18cfa:	d106      	bne.n	18d0a <__sflush_r+0x66>
   18cfc:	6829      	ldr	r1, [r5, #0]
   18cfe:	291d      	cmp	r1, #29
   18d00:	d84b      	bhi.n	18d9a <__sflush_r+0xf6>
   18d02:	4a2b      	ldr	r2, [pc, #172]	; (18db0 <__sflush_r+0x10c>)
   18d04:	40ca      	lsrs	r2, r1
   18d06:	07d6      	lsls	r6, r2, #31
   18d08:	d547      	bpl.n	18d9a <__sflush_r+0xf6>
   18d0a:	2200      	movs	r2, #0
   18d0c:	6062      	str	r2, [r4, #4]
   18d0e:	6922      	ldr	r2, [r4, #16]
   18d10:	04d9      	lsls	r1, r3, #19
   18d12:	6022      	str	r2, [r4, #0]
   18d14:	d504      	bpl.n	18d20 <__sflush_r+0x7c>
   18d16:	1c42      	adds	r2, r0, #1
   18d18:	d101      	bne.n	18d1e <__sflush_r+0x7a>
   18d1a:	682b      	ldr	r3, [r5, #0]
   18d1c:	b903      	cbnz	r3, 18d20 <__sflush_r+0x7c>
   18d1e:	6560      	str	r0, [r4, #84]	; 0x54
   18d20:	6b61      	ldr	r1, [r4, #52]	; 0x34
   18d22:	602f      	str	r7, [r5, #0]
   18d24:	2900      	cmp	r1, #0
   18d26:	d0ca      	beq.n	18cbe <__sflush_r+0x1a>
   18d28:	f104 0344 	add.w	r3, r4, #68	; 0x44
   18d2c:	4299      	cmp	r1, r3
   18d2e:	d002      	beq.n	18d36 <__sflush_r+0x92>
   18d30:	4628      	mov	r0, r5
   18d32:	f000 fcdb 	bl	196ec <_free_r>
   18d36:	2000      	movs	r0, #0
   18d38:	6360      	str	r0, [r4, #52]	; 0x34
   18d3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18d3e:	6a21      	ldr	r1, [r4, #32]
   18d40:	2301      	movs	r3, #1
   18d42:	4628      	mov	r0, r5
   18d44:	47b0      	blx	r6
   18d46:	1c41      	adds	r1, r0, #1
   18d48:	d1c6      	bne.n	18cd8 <__sflush_r+0x34>
   18d4a:	682b      	ldr	r3, [r5, #0]
   18d4c:	2b00      	cmp	r3, #0
   18d4e:	d0c3      	beq.n	18cd8 <__sflush_r+0x34>
   18d50:	2b1d      	cmp	r3, #29
   18d52:	d001      	beq.n	18d58 <__sflush_r+0xb4>
   18d54:	2b16      	cmp	r3, #22
   18d56:	d101      	bne.n	18d5c <__sflush_r+0xb8>
   18d58:	602f      	str	r7, [r5, #0]
   18d5a:	e7b0      	b.n	18cbe <__sflush_r+0x1a>
   18d5c:	89a3      	ldrh	r3, [r4, #12]
   18d5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18d62:	81a3      	strh	r3, [r4, #12]
   18d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18d68:	690f      	ldr	r7, [r1, #16]
   18d6a:	2f00      	cmp	r7, #0
   18d6c:	d0a7      	beq.n	18cbe <__sflush_r+0x1a>
   18d6e:	0793      	lsls	r3, r2, #30
   18d70:	bf18      	it	ne
   18d72:	2300      	movne	r3, #0
   18d74:	680e      	ldr	r6, [r1, #0]
   18d76:	bf08      	it	eq
   18d78:	694b      	ldreq	r3, [r1, #20]
   18d7a:	eba6 0807 	sub.w	r8, r6, r7
   18d7e:	600f      	str	r7, [r1, #0]
   18d80:	608b      	str	r3, [r1, #8]
   18d82:	f1b8 0f00 	cmp.w	r8, #0
   18d86:	dd9a      	ble.n	18cbe <__sflush_r+0x1a>
   18d88:	4643      	mov	r3, r8
   18d8a:	463a      	mov	r2, r7
   18d8c:	6a21      	ldr	r1, [r4, #32]
   18d8e:	4628      	mov	r0, r5
   18d90:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   18d92:	47b0      	blx	r6
   18d94:	2800      	cmp	r0, #0
   18d96:	dc07      	bgt.n	18da8 <__sflush_r+0x104>
   18d98:	89a3      	ldrh	r3, [r4, #12]
   18d9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18d9e:	81a3      	strh	r3, [r4, #12]
   18da0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18da4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18da8:	4407      	add	r7, r0
   18daa:	eba8 0800 	sub.w	r8, r8, r0
   18dae:	e7e8      	b.n	18d82 <__sflush_r+0xde>
   18db0:	20400001 	.word	0x20400001

00018db4 <_fflush_r>:
_fflush_r():
   18db4:	b538      	push	{r3, r4, r5, lr}
   18db6:	690b      	ldr	r3, [r1, #16]
   18db8:	4605      	mov	r5, r0
   18dba:	460c      	mov	r4, r1
   18dbc:	b1db      	cbz	r3, 18df6 <_fflush_r+0x42>
   18dbe:	b118      	cbz	r0, 18dc8 <_fflush_r+0x14>
   18dc0:	6983      	ldr	r3, [r0, #24]
   18dc2:	b90b      	cbnz	r3, 18dc8 <_fflush_r+0x14>
   18dc4:	f000 f872 	bl	18eac <__sinit>
   18dc8:	4b0c      	ldr	r3, [pc, #48]	; (18dfc <_fflush_r+0x48>)
   18dca:	429c      	cmp	r4, r3
   18dcc:	d109      	bne.n	18de2 <_fflush_r+0x2e>
   18dce:	686c      	ldr	r4, [r5, #4]
   18dd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   18dd4:	b17b      	cbz	r3, 18df6 <_fflush_r+0x42>
   18dd6:	4621      	mov	r1, r4
   18dd8:	4628      	mov	r0, r5
   18dda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   18dde:	f7ff bf61 	b.w	18ca4 <__sflush_r>
   18de2:	4b07      	ldr	r3, [pc, #28]	; (18e00 <_fflush_r+0x4c>)
   18de4:	429c      	cmp	r4, r3
   18de6:	d101      	bne.n	18dec <_fflush_r+0x38>
   18de8:	68ac      	ldr	r4, [r5, #8]
   18dea:	e7f1      	b.n	18dd0 <_fflush_r+0x1c>
   18dec:	4b05      	ldr	r3, [pc, #20]	; (18e04 <_fflush_r+0x50>)
   18dee:	429c      	cmp	r4, r3
   18df0:	bf08      	it	eq
   18df2:	68ec      	ldreq	r4, [r5, #12]
   18df4:	e7ec      	b.n	18dd0 <_fflush_r+0x1c>
   18df6:	2000      	movs	r0, #0
   18df8:	bd38      	pop	{r3, r4, r5, pc}
   18dfa:	bf00      	nop
   18dfc:	00020634 	.word	0x00020634
   18e00:	00020654 	.word	0x00020654
   18e04:	00020614 	.word	0x00020614

00018e08 <fflush>:
fflush():
   18e08:	4601      	mov	r1, r0
   18e0a:	b920      	cbnz	r0, 18e16 <fflush+0xe>
   18e0c:	4b04      	ldr	r3, [pc, #16]	; (18e20 <fflush+0x18>)
   18e0e:	4905      	ldr	r1, [pc, #20]	; (18e24 <fflush+0x1c>)
   18e10:	6818      	ldr	r0, [r3, #0]
   18e12:	f000 b8d3 	b.w	18fbc <_fwalk_reent>
   18e16:	4b04      	ldr	r3, [pc, #16]	; (18e28 <fflush+0x20>)
   18e18:	6818      	ldr	r0, [r3, #0]
   18e1a:	f7ff bfcb 	b.w	18db4 <_fflush_r>
   18e1e:	bf00      	nop
   18e20:	00020674 	.word	0x00020674
   18e24:	00018db5 	.word	0x00018db5
   18e28:	2007c0e0 	.word	0x2007c0e0

00018e2c <_cleanup_r>:
_cleanup_r():
   18e2c:	4901      	ldr	r1, [pc, #4]	; (18e34 <_cleanup_r+0x8>)
   18e2e:	f000 b8c5 	b.w	18fbc <_fwalk_reent>
   18e32:	bf00      	nop
   18e34:	00018db5 	.word	0x00018db5

00018e38 <std.isra.0>:
std.isra.0():
   18e38:	2300      	movs	r3, #0
   18e3a:	b510      	push	{r4, lr}
   18e3c:	4604      	mov	r4, r0
   18e3e:	6003      	str	r3, [r0, #0]
   18e40:	6043      	str	r3, [r0, #4]
   18e42:	6083      	str	r3, [r0, #8]
   18e44:	8181      	strh	r1, [r0, #12]
   18e46:	6643      	str	r3, [r0, #100]	; 0x64
   18e48:	81c2      	strh	r2, [r0, #14]
   18e4a:	6103      	str	r3, [r0, #16]
   18e4c:	6143      	str	r3, [r0, #20]
   18e4e:	6183      	str	r3, [r0, #24]
   18e50:	4619      	mov	r1, r3
   18e52:	2208      	movs	r2, #8
   18e54:	305c      	adds	r0, #92	; 0x5c
   18e56:	f000 f9cd 	bl	191f4 <memset>
   18e5a:	4b05      	ldr	r3, [pc, #20]	; (18e70 <std.isra.0+0x38>)
   18e5c:	6224      	str	r4, [r4, #32]
   18e5e:	6263      	str	r3, [r4, #36]	; 0x24
   18e60:	4b04      	ldr	r3, [pc, #16]	; (18e74 <std.isra.0+0x3c>)
   18e62:	62a3      	str	r3, [r4, #40]	; 0x28
   18e64:	4b04      	ldr	r3, [pc, #16]	; (18e78 <std.isra.0+0x40>)
   18e66:	62e3      	str	r3, [r4, #44]	; 0x2c
   18e68:	4b04      	ldr	r3, [pc, #16]	; (18e7c <std.isra.0+0x44>)
   18e6a:	6323      	str	r3, [r4, #48]	; 0x30
   18e6c:	bd10      	pop	{r4, pc}
   18e6e:	bf00      	nop
   18e70:	0001aae9 	.word	0x0001aae9
   18e74:	0001ab0f 	.word	0x0001ab0f
   18e78:	0001ab47 	.word	0x0001ab47
   18e7c:	0001ab6b 	.word	0x0001ab6b

00018e80 <__sfmoreglue>:
__sfmoreglue():
   18e80:	b570      	push	{r4, r5, r6, lr}
   18e82:	2568      	movs	r5, #104	; 0x68
   18e84:	1e4a      	subs	r2, r1, #1
   18e86:	4355      	muls	r5, r2
   18e88:	460e      	mov	r6, r1
   18e8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
   18e8e:	f000 fcab 	bl	197e8 <_malloc_r>
   18e92:	4604      	mov	r4, r0
   18e94:	b140      	cbz	r0, 18ea8 <__sfmoreglue+0x28>
   18e96:	2100      	movs	r1, #0
   18e98:	e880 0042 	stmia.w	r0, {r1, r6}
   18e9c:	300c      	adds	r0, #12
   18e9e:	60a0      	str	r0, [r4, #8]
   18ea0:	f105 0268 	add.w	r2, r5, #104	; 0x68
   18ea4:	f000 f9a6 	bl	191f4 <memset>
   18ea8:	4620      	mov	r0, r4
   18eaa:	bd70      	pop	{r4, r5, r6, pc}

00018eac <__sinit>:
__sinit():
   18eac:	6983      	ldr	r3, [r0, #24]
   18eae:	b510      	push	{r4, lr}
   18eb0:	4604      	mov	r4, r0
   18eb2:	bb33      	cbnz	r3, 18f02 <__sinit+0x56>
   18eb4:	6483      	str	r3, [r0, #72]	; 0x48
   18eb6:	64c3      	str	r3, [r0, #76]	; 0x4c
   18eb8:	6503      	str	r3, [r0, #80]	; 0x50
   18eba:	4b12      	ldr	r3, [pc, #72]	; (18f04 <__sinit+0x58>)
   18ebc:	4a12      	ldr	r2, [pc, #72]	; (18f08 <__sinit+0x5c>)
   18ebe:	681b      	ldr	r3, [r3, #0]
   18ec0:	6282      	str	r2, [r0, #40]	; 0x28
   18ec2:	4298      	cmp	r0, r3
   18ec4:	bf04      	itt	eq
   18ec6:	2301      	moveq	r3, #1
   18ec8:	6183      	streq	r3, [r0, #24]
   18eca:	f000 f81f 	bl	18f0c <__sfp>
   18ece:	6060      	str	r0, [r4, #4]
   18ed0:	4620      	mov	r0, r4
   18ed2:	f000 f81b 	bl	18f0c <__sfp>
   18ed6:	60a0      	str	r0, [r4, #8]
   18ed8:	4620      	mov	r0, r4
   18eda:	f000 f817 	bl	18f0c <__sfp>
   18ede:	2200      	movs	r2, #0
   18ee0:	60e0      	str	r0, [r4, #12]
   18ee2:	2104      	movs	r1, #4
   18ee4:	6860      	ldr	r0, [r4, #4]
   18ee6:	f7ff ffa7 	bl	18e38 <std.isra.0>
   18eea:	2201      	movs	r2, #1
   18eec:	2109      	movs	r1, #9
   18eee:	68a0      	ldr	r0, [r4, #8]
   18ef0:	f7ff ffa2 	bl	18e38 <std.isra.0>
   18ef4:	2202      	movs	r2, #2
   18ef6:	2112      	movs	r1, #18
   18ef8:	68e0      	ldr	r0, [r4, #12]
   18efa:	f7ff ff9d 	bl	18e38 <std.isra.0>
   18efe:	2301      	movs	r3, #1
   18f00:	61a3      	str	r3, [r4, #24]
   18f02:	bd10      	pop	{r4, pc}
   18f04:	00020674 	.word	0x00020674
   18f08:	00018e2d 	.word	0x00018e2d

00018f0c <__sfp>:
__sfp():
   18f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18f0e:	4b1c      	ldr	r3, [pc, #112]	; (18f80 <__sfp+0x74>)
   18f10:	4607      	mov	r7, r0
   18f12:	681e      	ldr	r6, [r3, #0]
   18f14:	69b3      	ldr	r3, [r6, #24]
   18f16:	b913      	cbnz	r3, 18f1e <__sfp+0x12>
   18f18:	4630      	mov	r0, r6
   18f1a:	f7ff ffc7 	bl	18eac <__sinit>
   18f1e:	3648      	adds	r6, #72	; 0x48
   18f20:	68b4      	ldr	r4, [r6, #8]
   18f22:	6873      	ldr	r3, [r6, #4]
   18f24:	3b01      	subs	r3, #1
   18f26:	d503      	bpl.n	18f30 <__sfp+0x24>
   18f28:	6833      	ldr	r3, [r6, #0]
   18f2a:	b133      	cbz	r3, 18f3a <__sfp+0x2e>
   18f2c:	6836      	ldr	r6, [r6, #0]
   18f2e:	e7f7      	b.n	18f20 <__sfp+0x14>
   18f30:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   18f34:	b16d      	cbz	r5, 18f52 <__sfp+0x46>
   18f36:	3468      	adds	r4, #104	; 0x68
   18f38:	e7f4      	b.n	18f24 <__sfp+0x18>
   18f3a:	2104      	movs	r1, #4
   18f3c:	4638      	mov	r0, r7
   18f3e:	f7ff ff9f 	bl	18e80 <__sfmoreglue>
   18f42:	6030      	str	r0, [r6, #0]
   18f44:	2800      	cmp	r0, #0
   18f46:	d1f1      	bne.n	18f2c <__sfp+0x20>
   18f48:	230c      	movs	r3, #12
   18f4a:	4604      	mov	r4, r0
   18f4c:	603b      	str	r3, [r7, #0]
   18f4e:	4620      	mov	r0, r4
   18f50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18f52:	f64f 73ff 	movw	r3, #65535	; 0xffff
   18f56:	81e3      	strh	r3, [r4, #14]
   18f58:	2301      	movs	r3, #1
   18f5a:	6665      	str	r5, [r4, #100]	; 0x64
   18f5c:	81a3      	strh	r3, [r4, #12]
   18f5e:	6025      	str	r5, [r4, #0]
   18f60:	60a5      	str	r5, [r4, #8]
   18f62:	6065      	str	r5, [r4, #4]
   18f64:	6125      	str	r5, [r4, #16]
   18f66:	6165      	str	r5, [r4, #20]
   18f68:	61a5      	str	r5, [r4, #24]
   18f6a:	2208      	movs	r2, #8
   18f6c:	4629      	mov	r1, r5
   18f6e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   18f72:	f000 f93f 	bl	191f4 <memset>
   18f76:	6365      	str	r5, [r4, #52]	; 0x34
   18f78:	63a5      	str	r5, [r4, #56]	; 0x38
   18f7a:	64a5      	str	r5, [r4, #72]	; 0x48
   18f7c:	64e5      	str	r5, [r4, #76]	; 0x4c
   18f7e:	e7e6      	b.n	18f4e <__sfp+0x42>
   18f80:	00020674 	.word	0x00020674

00018f84 <_fwalk>:
_fwalk():
   18f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18f88:	4688      	mov	r8, r1
   18f8a:	2600      	movs	r6, #0
   18f8c:	f100 0448 	add.w	r4, r0, #72	; 0x48
   18f90:	b914      	cbnz	r4, 18f98 <_fwalk+0x14>
   18f92:	4630      	mov	r0, r6
   18f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18f98:	68a5      	ldr	r5, [r4, #8]
   18f9a:	6867      	ldr	r7, [r4, #4]
   18f9c:	3f01      	subs	r7, #1
   18f9e:	d501      	bpl.n	18fa4 <_fwalk+0x20>
   18fa0:	6824      	ldr	r4, [r4, #0]
   18fa2:	e7f5      	b.n	18f90 <_fwalk+0xc>
   18fa4:	89ab      	ldrh	r3, [r5, #12]
   18fa6:	2b01      	cmp	r3, #1
   18fa8:	d906      	bls.n	18fb8 <_fwalk+0x34>
   18faa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   18fae:	3301      	adds	r3, #1
   18fb0:	d002      	beq.n	18fb8 <_fwalk+0x34>
   18fb2:	4628      	mov	r0, r5
   18fb4:	47c0      	blx	r8
   18fb6:	4306      	orrs	r6, r0
   18fb8:	3568      	adds	r5, #104	; 0x68
   18fba:	e7ef      	b.n	18f9c <_fwalk+0x18>

00018fbc <_fwalk_reent>:
_fwalk_reent():
   18fbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   18fc0:	4680      	mov	r8, r0
   18fc2:	4689      	mov	r9, r1
   18fc4:	2600      	movs	r6, #0
   18fc6:	f100 0448 	add.w	r4, r0, #72	; 0x48
   18fca:	b914      	cbnz	r4, 18fd2 <_fwalk_reent+0x16>
   18fcc:	4630      	mov	r0, r6
   18fce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   18fd2:	68a5      	ldr	r5, [r4, #8]
   18fd4:	6867      	ldr	r7, [r4, #4]
   18fd6:	3f01      	subs	r7, #1
   18fd8:	d501      	bpl.n	18fde <_fwalk_reent+0x22>
   18fda:	6824      	ldr	r4, [r4, #0]
   18fdc:	e7f5      	b.n	18fca <_fwalk_reent+0xe>
   18fde:	89ab      	ldrh	r3, [r5, #12]
   18fe0:	2b01      	cmp	r3, #1
   18fe2:	d907      	bls.n	18ff4 <_fwalk_reent+0x38>
   18fe4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   18fe8:	3301      	adds	r3, #1
   18fea:	d003      	beq.n	18ff4 <_fwalk_reent+0x38>
   18fec:	4629      	mov	r1, r5
   18fee:	4640      	mov	r0, r8
   18ff0:	47c8      	blx	r9
   18ff2:	4306      	orrs	r6, r0
   18ff4:	3568      	adds	r5, #104	; 0x68
   18ff6:	e7ee      	b.n	18fd6 <_fwalk_reent+0x1a>

00018ff8 <__libc_init_array>:
__libc_init_array():
   18ff8:	b570      	push	{r4, r5, r6, lr}
   18ffa:	2500      	movs	r5, #0
   18ffc:	4e0c      	ldr	r6, [pc, #48]	; (19030 <__libc_init_array+0x38>)
   18ffe:	4c0d      	ldr	r4, [pc, #52]	; (19034 <__libc_init_array+0x3c>)
   19000:	1ba4      	subs	r4, r4, r6
   19002:	10a4      	asrs	r4, r4, #2
   19004:	42a5      	cmp	r5, r4
   19006:	d109      	bne.n	1901c <__libc_init_array+0x24>
   19008:	f7fb ff46 	bl	14e98 <_init>
   1900c:	2500      	movs	r5, #0
   1900e:	4e0a      	ldr	r6, [pc, #40]	; (19038 <__libc_init_array+0x40>)
   19010:	4c0a      	ldr	r4, [pc, #40]	; (1903c <__libc_init_array+0x44>)
   19012:	1ba4      	subs	r4, r4, r6
   19014:	10a4      	asrs	r4, r4, #2
   19016:	42a5      	cmp	r5, r4
   19018:	d105      	bne.n	19026 <__libc_init_array+0x2e>
   1901a:	bd70      	pop	{r4, r5, r6, pc}
   1901c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   19020:	4798      	blx	r3
   19022:	3501      	adds	r5, #1
   19024:	e7ee      	b.n	19004 <__libc_init_array+0xc>
   19026:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1902a:	4798      	blx	r3
   1902c:	3501      	adds	r5, #1
   1902e:	e7f2      	b.n	19016 <__libc_init_array+0x1e>
   19030:	00020a50 	.word	0x00020a50
   19034:	00020a50 	.word	0x00020a50
   19038:	00020a50 	.word	0x00020a50
   1903c:	00020a54 	.word	0x00020a54

00019040 <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   19040:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   19044:	4770      	bx	lr
   19046:	Address 0x0000000000019046 is out of bounds.


00019048 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   19048:	4b04      	ldr	r3, [pc, #16]	; (1905c <__locale_ctype_ptr+0x14>)
   1904a:	4a05      	ldr	r2, [pc, #20]	; (19060 <__locale_ctype_ptr+0x18>)
   1904c:	681b      	ldr	r3, [r3, #0]
   1904e:	6a1b      	ldr	r3, [r3, #32]
   19050:	2b00      	cmp	r3, #0
   19052:	bf08      	it	eq
   19054:	4613      	moveq	r3, r2
   19056:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   1905a:	4770      	bx	lr
   1905c:	2007c0e0 	.word	0x2007c0e0
   19060:	2007c144 	.word	0x2007c144

00019064 <__swhatbuf_r>:
__swhatbuf_r():
   19064:	b570      	push	{r4, r5, r6, lr}
   19066:	460e      	mov	r6, r1
   19068:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1906c:	b090      	sub	sp, #64	; 0x40
   1906e:	2900      	cmp	r1, #0
   19070:	4614      	mov	r4, r2
   19072:	461d      	mov	r5, r3
   19074:	da07      	bge.n	19086 <__swhatbuf_r+0x22>
   19076:	2300      	movs	r3, #0
   19078:	602b      	str	r3, [r5, #0]
   1907a:	89b3      	ldrh	r3, [r6, #12]
   1907c:	061a      	lsls	r2, r3, #24
   1907e:	d410      	bmi.n	190a2 <__swhatbuf_r+0x3e>
   19080:	f44f 6380 	mov.w	r3, #1024	; 0x400
   19084:	e00e      	b.n	190a4 <__swhatbuf_r+0x40>
   19086:	aa01      	add	r2, sp, #4
   19088:	f003 fe6a 	bl	1cd60 <_fstat_r>
   1908c:	2800      	cmp	r0, #0
   1908e:	dbf2      	blt.n	19076 <__swhatbuf_r+0x12>
   19090:	9a02      	ldr	r2, [sp, #8]
   19092:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   19096:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   1909a:	425a      	negs	r2, r3
   1909c:	415a      	adcs	r2, r3
   1909e:	602a      	str	r2, [r5, #0]
   190a0:	e7ee      	b.n	19080 <__swhatbuf_r+0x1c>
   190a2:	2340      	movs	r3, #64	; 0x40
   190a4:	2000      	movs	r0, #0
   190a6:	6023      	str	r3, [r4, #0]
   190a8:	b010      	add	sp, #64	; 0x40
   190aa:	bd70      	pop	{r4, r5, r6, pc}

000190ac <__smakebuf_r>:
__smakebuf_r():
   190ac:	898b      	ldrh	r3, [r1, #12]
   190ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
   190b0:	079d      	lsls	r5, r3, #30
   190b2:	4606      	mov	r6, r0
   190b4:	460c      	mov	r4, r1
   190b6:	d507      	bpl.n	190c8 <__smakebuf_r+0x1c>
   190b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
   190bc:	6023      	str	r3, [r4, #0]
   190be:	6123      	str	r3, [r4, #16]
   190c0:	2301      	movs	r3, #1
   190c2:	6163      	str	r3, [r4, #20]
   190c4:	b002      	add	sp, #8
   190c6:	bd70      	pop	{r4, r5, r6, pc}
   190c8:	ab01      	add	r3, sp, #4
   190ca:	466a      	mov	r2, sp
   190cc:	f7ff ffca 	bl	19064 <__swhatbuf_r>
   190d0:	9900      	ldr	r1, [sp, #0]
   190d2:	4605      	mov	r5, r0
   190d4:	4630      	mov	r0, r6
   190d6:	f000 fb87 	bl	197e8 <_malloc_r>
   190da:	b948      	cbnz	r0, 190f0 <__smakebuf_r+0x44>
   190dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   190e0:	059a      	lsls	r2, r3, #22
   190e2:	d4ef      	bmi.n	190c4 <__smakebuf_r+0x18>
   190e4:	f023 0303 	bic.w	r3, r3, #3
   190e8:	f043 0302 	orr.w	r3, r3, #2
   190ec:	81a3      	strh	r3, [r4, #12]
   190ee:	e7e3      	b.n	190b8 <__smakebuf_r+0xc>
   190f0:	4b0d      	ldr	r3, [pc, #52]	; (19128 <__smakebuf_r+0x7c>)
   190f2:	62b3      	str	r3, [r6, #40]	; 0x28
   190f4:	89a3      	ldrh	r3, [r4, #12]
   190f6:	6020      	str	r0, [r4, #0]
   190f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   190fc:	81a3      	strh	r3, [r4, #12]
   190fe:	9b00      	ldr	r3, [sp, #0]
   19100:	6120      	str	r0, [r4, #16]
   19102:	6163      	str	r3, [r4, #20]
   19104:	9b01      	ldr	r3, [sp, #4]
   19106:	b15b      	cbz	r3, 19120 <__smakebuf_r+0x74>
   19108:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1910c:	4630      	mov	r0, r6
   1910e:	f004 f9b5 	bl	1d47c <_isatty_r>
   19112:	b128      	cbz	r0, 19120 <__smakebuf_r+0x74>
   19114:	89a3      	ldrh	r3, [r4, #12]
   19116:	f023 0303 	bic.w	r3, r3, #3
   1911a:	f043 0301 	orr.w	r3, r3, #1
   1911e:	81a3      	strh	r3, [r4, #12]
   19120:	89a3      	ldrh	r3, [r4, #12]
   19122:	431d      	orrs	r5, r3
   19124:	81a5      	strh	r5, [r4, #12]
   19126:	e7cd      	b.n	190c4 <__smakebuf_r+0x18>
   19128:	00018e2d 	.word	0x00018e2d

0001912c <malloc>:
malloc():
   1912c:	4b02      	ldr	r3, [pc, #8]	; (19138 <malloc+0xc>)
   1912e:	4601      	mov	r1, r0
   19130:	6818      	ldr	r0, [r3, #0]
   19132:	f000 bb59 	b.w	197e8 <_malloc_r>
   19136:	bf00      	nop
   19138:	2007c0e0 	.word	0x2007c0e0

0001913c <free>:
free():
   1913c:	4b02      	ldr	r3, [pc, #8]	; (19148 <free+0xc>)
   1913e:	4601      	mov	r1, r0
   19140:	6818      	ldr	r0, [r3, #0]
   19142:	f000 bad3 	b.w	196ec <_free_r>
   19146:	bf00      	nop
   19148:	2007c0e0 	.word	0x2007c0e0

0001914c <__ascii_mbtowc>:
__ascii_mbtowc():
   1914c:	b082      	sub	sp, #8
   1914e:	b901      	cbnz	r1, 19152 <__ascii_mbtowc+0x6>
   19150:	a901      	add	r1, sp, #4
   19152:	b142      	cbz	r2, 19166 <__ascii_mbtowc+0x1a>
   19154:	b14b      	cbz	r3, 1916a <__ascii_mbtowc+0x1e>
   19156:	7813      	ldrb	r3, [r2, #0]
   19158:	600b      	str	r3, [r1, #0]
   1915a:	7812      	ldrb	r2, [r2, #0]
   1915c:	1c10      	adds	r0, r2, #0
   1915e:	bf18      	it	ne
   19160:	2001      	movne	r0, #1
   19162:	b002      	add	sp, #8
   19164:	4770      	bx	lr
   19166:	4610      	mov	r0, r2
   19168:	e7fb      	b.n	19162 <__ascii_mbtowc+0x16>
   1916a:	f06f 0001 	mvn.w	r0, #1
   1916e:	e7f8      	b.n	19162 <__ascii_mbtowc+0x16>

00019170 <memchr>:
memchr():
   19170:	b510      	push	{r4, lr}
   19172:	b2c9      	uxtb	r1, r1
   19174:	4402      	add	r2, r0
   19176:	4290      	cmp	r0, r2
   19178:	4603      	mov	r3, r0
   1917a:	d101      	bne.n	19180 <memchr+0x10>
   1917c:	2000      	movs	r0, #0
   1917e:	bd10      	pop	{r4, pc}
   19180:	781c      	ldrb	r4, [r3, #0]
   19182:	3001      	adds	r0, #1
   19184:	428c      	cmp	r4, r1
   19186:	d1f6      	bne.n	19176 <memchr+0x6>
   19188:	4618      	mov	r0, r3
   1918a:	bd10      	pop	{r4, pc}

0001918c <memcmp>:
memcmp():
   1918c:	b510      	push	{r4, lr}
   1918e:	3901      	subs	r1, #1
   19190:	4402      	add	r2, r0
   19192:	4290      	cmp	r0, r2
   19194:	d101      	bne.n	1919a <memcmp+0xe>
   19196:	2000      	movs	r0, #0
   19198:	bd10      	pop	{r4, pc}
   1919a:	f810 3b01 	ldrb.w	r3, [r0], #1
   1919e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   191a2:	42a3      	cmp	r3, r4
   191a4:	d0f5      	beq.n	19192 <memcmp+0x6>
   191a6:	1b18      	subs	r0, r3, r4
   191a8:	bd10      	pop	{r4, pc}

000191aa <memcpy>:
memcpy():
   191aa:	b510      	push	{r4, lr}
   191ac:	1e43      	subs	r3, r0, #1
   191ae:	440a      	add	r2, r1
   191b0:	4291      	cmp	r1, r2
   191b2:	d100      	bne.n	191b6 <memcpy+0xc>
   191b4:	bd10      	pop	{r4, pc}
   191b6:	f811 4b01 	ldrb.w	r4, [r1], #1
   191ba:	f803 4f01 	strb.w	r4, [r3, #1]!
   191be:	e7f7      	b.n	191b0 <memcpy+0x6>

000191c0 <memmove>:
memmove():
   191c0:	4288      	cmp	r0, r1
   191c2:	b510      	push	{r4, lr}
   191c4:	eb01 0302 	add.w	r3, r1, r2
   191c8:	d803      	bhi.n	191d2 <memmove+0x12>
   191ca:	1e42      	subs	r2, r0, #1
   191cc:	4299      	cmp	r1, r3
   191ce:	d10c      	bne.n	191ea <memmove+0x2a>
   191d0:	bd10      	pop	{r4, pc}
   191d2:	4298      	cmp	r0, r3
   191d4:	d2f9      	bcs.n	191ca <memmove+0xa>
   191d6:	1881      	adds	r1, r0, r2
   191d8:	1ad2      	subs	r2, r2, r3
   191da:	42d3      	cmn	r3, r2
   191dc:	d100      	bne.n	191e0 <memmove+0x20>
   191de:	bd10      	pop	{r4, pc}
   191e0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   191e4:	f801 4d01 	strb.w	r4, [r1, #-1]!
   191e8:	e7f7      	b.n	191da <memmove+0x1a>
   191ea:	f811 4b01 	ldrb.w	r4, [r1], #1
   191ee:	f802 4f01 	strb.w	r4, [r2, #1]!
   191f2:	e7eb      	b.n	191cc <memmove+0xc>

000191f4 <memset>:
memset():
   191f4:	4603      	mov	r3, r0
   191f6:	4402      	add	r2, r0
   191f8:	4293      	cmp	r3, r2
   191fa:	d100      	bne.n	191fe <memset+0xa>
   191fc:	4770      	bx	lr
   191fe:	f803 1b01 	strb.w	r1, [r3], #1
   19202:	e7f9      	b.n	191f8 <memset+0x4>

00019204 <validate_structure>:
validate_structure():
   19204:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19206:	6801      	ldr	r1, [r0, #0]
   19208:	4604      	mov	r4, r0
   1920a:	293b      	cmp	r1, #59	; 0x3b
   1920c:	d911      	bls.n	19232 <validate_structure+0x2e>
   1920e:	223c      	movs	r2, #60	; 0x3c
   19210:	4668      	mov	r0, sp
   19212:	f002 ff31 	bl	1c078 <div>
   19216:	9a01      	ldr	r2, [sp, #4]
   19218:	6863      	ldr	r3, [r4, #4]
   1921a:	9900      	ldr	r1, [sp, #0]
   1921c:	2a00      	cmp	r2, #0
   1921e:	440b      	add	r3, r1
   19220:	6063      	str	r3, [r4, #4]
   19222:	bfbb      	ittet	lt
   19224:	323c      	addlt	r2, #60	; 0x3c
   19226:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1922a:	6022      	strge	r2, [r4, #0]
   1922c:	6022      	strlt	r2, [r4, #0]
   1922e:	bfb8      	it	lt
   19230:	6063      	strlt	r3, [r4, #4]
   19232:	6861      	ldr	r1, [r4, #4]
   19234:	293b      	cmp	r1, #59	; 0x3b
   19236:	d911      	bls.n	1925c <validate_structure+0x58>
   19238:	223c      	movs	r2, #60	; 0x3c
   1923a:	4668      	mov	r0, sp
   1923c:	f002 ff1c 	bl	1c078 <div>
   19240:	9a01      	ldr	r2, [sp, #4]
   19242:	68a3      	ldr	r3, [r4, #8]
   19244:	9900      	ldr	r1, [sp, #0]
   19246:	2a00      	cmp	r2, #0
   19248:	440b      	add	r3, r1
   1924a:	60a3      	str	r3, [r4, #8]
   1924c:	bfbb      	ittet	lt
   1924e:	323c      	addlt	r2, #60	; 0x3c
   19250:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   19254:	6062      	strge	r2, [r4, #4]
   19256:	6062      	strlt	r2, [r4, #4]
   19258:	bfb8      	it	lt
   1925a:	60a3      	strlt	r3, [r4, #8]
   1925c:	68a1      	ldr	r1, [r4, #8]
   1925e:	2917      	cmp	r1, #23
   19260:	d911      	bls.n	19286 <validate_structure+0x82>
   19262:	2218      	movs	r2, #24
   19264:	4668      	mov	r0, sp
   19266:	f002 ff07 	bl	1c078 <div>
   1926a:	9a01      	ldr	r2, [sp, #4]
   1926c:	68e3      	ldr	r3, [r4, #12]
   1926e:	9900      	ldr	r1, [sp, #0]
   19270:	2a00      	cmp	r2, #0
   19272:	440b      	add	r3, r1
   19274:	60e3      	str	r3, [r4, #12]
   19276:	bfbb      	ittet	lt
   19278:	3218      	addlt	r2, #24
   1927a:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1927e:	60a2      	strge	r2, [r4, #8]
   19280:	60a2      	strlt	r2, [r4, #8]
   19282:	bfb8      	it	lt
   19284:	60e3      	strlt	r3, [r4, #12]
   19286:	6921      	ldr	r1, [r4, #16]
   19288:	290b      	cmp	r1, #11
   1928a:	d911      	bls.n	192b0 <validate_structure+0xac>
   1928c:	220c      	movs	r2, #12
   1928e:	4668      	mov	r0, sp
   19290:	f002 fef2 	bl	1c078 <div>
   19294:	9a01      	ldr	r2, [sp, #4]
   19296:	6963      	ldr	r3, [r4, #20]
   19298:	9900      	ldr	r1, [sp, #0]
   1929a:	2a00      	cmp	r2, #0
   1929c:	440b      	add	r3, r1
   1929e:	6163      	str	r3, [r4, #20]
   192a0:	bfbb      	ittet	lt
   192a2:	320c      	addlt	r2, #12
   192a4:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   192a8:	6122      	strge	r2, [r4, #16]
   192aa:	6122      	strlt	r2, [r4, #16]
   192ac:	bfb8      	it	lt
   192ae:	6163      	strlt	r3, [r4, #20]
   192b0:	6963      	ldr	r3, [r4, #20]
   192b2:	0799      	lsls	r1, r3, #30
   192b4:	d143      	bne.n	1933e <validate_structure+0x13a>
   192b6:	2164      	movs	r1, #100	; 0x64
   192b8:	fb93 f2f1 	sdiv	r2, r3, r1
   192bc:	fb01 3212 	mls	r2, r1, r2, r3
   192c0:	2a00      	cmp	r2, #0
   192c2:	d13e      	bne.n	19342 <validate_structure+0x13e>
   192c4:	f44f 71c8 	mov.w	r1, #400	; 0x190
   192c8:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   192cc:	fb93 f2f1 	sdiv	r2, r3, r1
   192d0:	fb01 3312 	mls	r3, r1, r2, r3
   192d4:	2b00      	cmp	r3, #0
   192d6:	bf14      	ite	ne
   192d8:	231c      	movne	r3, #28
   192da:	231d      	moveq	r3, #29
   192dc:	68e2      	ldr	r2, [r4, #12]
   192de:	2a00      	cmp	r2, #0
   192e0:	dd31      	ble.n	19346 <validate_structure+0x142>
   192e2:	2602      	movs	r6, #2
   192e4:	f04f 0e00 	mov.w	lr, #0
   192e8:	2064      	movs	r0, #100	; 0x64
   192ea:	f44f 75c8 	mov.w	r5, #400	; 0x190
   192ee:	4f34      	ldr	r7, [pc, #208]	; (193c0 <validate_structure+0x1bc>)
   192f0:	6921      	ldr	r1, [r4, #16]
   192f2:	68e2      	ldr	r2, [r4, #12]
   192f4:	2901      	cmp	r1, #1
   192f6:	d05d      	beq.n	193b4 <validate_structure+0x1b0>
   192f8:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   192fc:	4562      	cmp	r2, ip
   192fe:	dd2c      	ble.n	1935a <validate_structure+0x156>
   19300:	3101      	adds	r1, #1
   19302:	eba2 020c 	sub.w	r2, r2, ip
   19306:	290c      	cmp	r1, #12
   19308:	60e2      	str	r2, [r4, #12]
   1930a:	6121      	str	r1, [r4, #16]
   1930c:	d1f0      	bne.n	192f0 <validate_structure+0xec>
   1930e:	6963      	ldr	r3, [r4, #20]
   19310:	f8c4 e010 	str.w	lr, [r4, #16]
   19314:	1c5a      	adds	r2, r3, #1
   19316:	0791      	lsls	r1, r2, #30
   19318:	6162      	str	r2, [r4, #20]
   1931a:	d147      	bne.n	193ac <validate_structure+0x1a8>
   1931c:	fb92 f1f0 	sdiv	r1, r2, r0
   19320:	fb00 2211 	mls	r2, r0, r1, r2
   19324:	2a00      	cmp	r2, #0
   19326:	d143      	bne.n	193b0 <validate_structure+0x1ac>
   19328:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1932c:	fb93 f2f5 	sdiv	r2, r3, r5
   19330:	fb05 3312 	mls	r3, r5, r2, r3
   19334:	2b00      	cmp	r3, #0
   19336:	bf14      	ite	ne
   19338:	231c      	movne	r3, #28
   1933a:	231d      	moveq	r3, #29
   1933c:	e7d8      	b.n	192f0 <validate_structure+0xec>
   1933e:	231c      	movs	r3, #28
   19340:	e7cc      	b.n	192dc <validate_structure+0xd8>
   19342:	231d      	movs	r3, #29
   19344:	e7ca      	b.n	192dc <validate_structure+0xd8>
   19346:	260b      	movs	r6, #11
   19348:	2064      	movs	r0, #100	; 0x64
   1934a:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1934e:	4f1c      	ldr	r7, [pc, #112]	; (193c0 <validate_structure+0x1bc>)
   19350:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   19354:	f1be 0f00 	cmp.w	lr, #0
   19358:	dd01      	ble.n	1935e <validate_structure+0x15a>
   1935a:	b003      	add	sp, #12
   1935c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1935e:	6921      	ldr	r1, [r4, #16]
   19360:	3901      	subs	r1, #1
   19362:	6121      	str	r1, [r4, #16]
   19364:	3101      	adds	r1, #1
   19366:	d114      	bne.n	19392 <validate_structure+0x18e>
   19368:	6963      	ldr	r3, [r4, #20]
   1936a:	6126      	str	r6, [r4, #16]
   1936c:	1e59      	subs	r1, r3, #1
   1936e:	078a      	lsls	r2, r1, #30
   19370:	6161      	str	r1, [r4, #20]
   19372:	d117      	bne.n	193a4 <validate_structure+0x1a0>
   19374:	fb91 f2f0 	sdiv	r2, r1, r0
   19378:	fb00 1112 	mls	r1, r0, r2, r1
   1937c:	b9a1      	cbnz	r1, 193a8 <validate_structure+0x1a4>
   1937e:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   19382:	fb93 f2f5 	sdiv	r2, r3, r5
   19386:	fb05 3312 	mls	r3, r5, r2, r3
   1938a:	2b00      	cmp	r3, #0
   1938c:	bf14      	ite	ne
   1938e:	231c      	movne	r3, #28
   19390:	231d      	moveq	r3, #29
   19392:	6922      	ldr	r2, [r4, #16]
   19394:	2a01      	cmp	r2, #1
   19396:	bf0c      	ite	eq
   19398:	461a      	moveq	r2, r3
   1939a:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1939e:	4472      	add	r2, lr
   193a0:	60e2      	str	r2, [r4, #12]
   193a2:	e7d5      	b.n	19350 <validate_structure+0x14c>
   193a4:	231c      	movs	r3, #28
   193a6:	e7f4      	b.n	19392 <validate_structure+0x18e>
   193a8:	231d      	movs	r3, #29
   193aa:	e7f2      	b.n	19392 <validate_structure+0x18e>
   193ac:	231c      	movs	r3, #28
   193ae:	e79f      	b.n	192f0 <validate_structure+0xec>
   193b0:	231d      	movs	r3, #29
   193b2:	e79d      	b.n	192f0 <validate_structure+0xec>
   193b4:	4293      	cmp	r3, r2
   193b6:	dad0      	bge.n	1935a <validate_structure+0x156>
   193b8:	1ad2      	subs	r2, r2, r3
   193ba:	60e2      	str	r2, [r4, #12]
   193bc:	6126      	str	r6, [r4, #16]
   193be:	e797      	b.n	192f0 <validate_structure+0xec>
   193c0:	00020680 	.word	0x00020680

000193c4 <mktime>:
mktime():
   193c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   193c8:	4681      	mov	r9, r0
   193ca:	f004 f853 	bl	1d474 <__gettzinfo>
   193ce:	253c      	movs	r5, #60	; 0x3c
   193d0:	4680      	mov	r8, r0
   193d2:	4648      	mov	r0, r9
   193d4:	f7ff ff16 	bl	19204 <validate_structure>
   193d8:	e899 0081 	ldmia.w	r9, {r0, r7}
   193dc:	fb05 0707 	mla	r7, r5, r7, r0
   193e0:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   193e4:	f8d9 3010 	ldr.w	r3, [r9, #16]
   193e8:	4ab1      	ldr	r2, [pc, #708]	; (196b0 <mktime+0x2ec>)
   193ea:	f8d9 400c 	ldr.w	r4, [r9, #12]
   193ee:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   193f2:	f8d9 0008 	ldr.w	r0, [r9, #8]
   193f6:	3c01      	subs	r4, #1
   193f8:	2b01      	cmp	r3, #1
   193fa:	fb05 7000 	mla	r0, r5, r0, r7
   193fe:	4414      	add	r4, r2
   19400:	f8d9 3014 	ldr.w	r3, [r9, #20]
   19404:	dd11      	ble.n	1942a <mktime+0x66>
   19406:	0799      	lsls	r1, r3, #30
   19408:	d10f      	bne.n	1942a <mktime+0x66>
   1940a:	2164      	movs	r1, #100	; 0x64
   1940c:	fb93 f2f1 	sdiv	r2, r3, r1
   19410:	fb01 3212 	mls	r2, r1, r2, r3
   19414:	b942      	cbnz	r2, 19428 <mktime+0x64>
   19416:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1941a:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1941e:	fb95 f2f1 	sdiv	r2, r5, r1
   19422:	fb01 5212 	mls	r2, r1, r2, r5
   19426:	b902      	cbnz	r2, 1942a <mktime+0x66>
   19428:	3401      	adds	r4, #1
   1942a:	f644 6120 	movw	r1, #20000	; 0x4e20
   1942e:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   19432:	3210      	adds	r2, #16
   19434:	428a      	cmp	r2, r1
   19436:	f8c9 401c 	str.w	r4, [r9, #28]
   1943a:	f200 812d 	bhi.w	19698 <mktime+0x2d4>
   1943e:	2b46      	cmp	r3, #70	; 0x46
   19440:	dd70      	ble.n	19524 <mktime+0x160>
   19442:	2546      	movs	r5, #70	; 0x46
   19444:	f240 176d 	movw	r7, #365	; 0x16d
   19448:	2164      	movs	r1, #100	; 0x64
   1944a:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1944e:	07aa      	lsls	r2, r5, #30
   19450:	d162      	bne.n	19518 <mktime+0x154>
   19452:	fb95 f2f1 	sdiv	r2, r5, r1
   19456:	fb01 5212 	mls	r2, r1, r2, r5
   1945a:	2a00      	cmp	r2, #0
   1945c:	d15f      	bne.n	1951e <mktime+0x15a>
   1945e:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   19462:	fb9e f2f6 	sdiv	r2, lr, r6
   19466:	fb06 e212 	mls	r2, r6, r2, lr
   1946a:	2a00      	cmp	r2, #0
   1946c:	bf14      	ite	ne
   1946e:	463a      	movne	r2, r7
   19470:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   19474:	3501      	adds	r5, #1
   19476:	42ab      	cmp	r3, r5
   19478:	4414      	add	r4, r2
   1947a:	d1e8      	bne.n	1944e <mktime+0x8a>
   1947c:	4f8d      	ldr	r7, [pc, #564]	; (196b4 <mktime+0x2f0>)
   1947e:	fb07 0704 	mla	r7, r7, r4, r0
   19482:	f002 fb45 	bl	1bb10 <__tz_lock>
   19486:	f002 fb45 	bl	1bb14 <_tzset_unlocked>
   1948a:	4b8b      	ldr	r3, [pc, #556]	; (196b8 <mktime+0x2f4>)
   1948c:	681e      	ldr	r6, [r3, #0]
   1948e:	2e00      	cmp	r6, #0
   19490:	f000 810a 	beq.w	196a8 <mktime+0x2e4>
   19494:	f8d9 3020 	ldr.w	r3, [r9, #32]
   19498:	f8d9 0014 	ldr.w	r0, [r9, #20]
   1949c:	2b01      	cmp	r3, #1
   1949e:	bfa8      	it	ge
   194a0:	2301      	movge	r3, #1
   194a2:	469a      	mov	sl, r3
   194a4:	f8d8 3004 	ldr.w	r3, [r8, #4]
   194a8:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   194ac:	4298      	cmp	r0, r3
   194ae:	d17c      	bne.n	195aa <mktime+0x1e6>
   194b0:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   194b4:	f8d8 3020 	ldr.w	r3, [r8, #32]
   194b8:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   194bc:	f8d8 101c 	ldr.w	r1, [r8, #28]
   194c0:	1ad6      	subs	r6, r2, r3
   194c2:	42b7      	cmp	r7, r6
   194c4:	eba1 0100 	sub.w	r1, r1, r0
   194c8:	da76      	bge.n	195b8 <mktime+0x1f4>
   194ca:	f8d8 2000 	ldr.w	r2, [r8]
   194ce:	2a00      	cmp	r2, #0
   194d0:	d076      	beq.n	195c0 <mktime+0x1fc>
   194d2:	428f      	cmp	r7, r1
   194d4:	f2c0 80e3 	blt.w	1969e <mktime+0x2da>
   194d8:	42b7      	cmp	r7, r6
   194da:	bfac      	ite	ge
   194dc:	2600      	movge	r6, #0
   194de:	2601      	movlt	r6, #1
   194e0:	f1ba 0f00 	cmp.w	sl, #0
   194e4:	da72      	bge.n	195cc <mktime+0x208>
   194e6:	2e01      	cmp	r6, #1
   194e8:	f040 80de 	bne.w	196a8 <mktime+0x2e4>
   194ec:	2601      	movs	r6, #1
   194ee:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   194f2:	443d      	add	r5, r7
   194f4:	f002 fb0d 	bl	1bb12 <__tz_unlock>
   194f8:	2307      	movs	r3, #7
   194fa:	3404      	adds	r4, #4
   194fc:	fb94 f3f3 	sdiv	r3, r4, r3
   19500:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   19504:	1ae4      	subs	r4, r4, r3
   19506:	bf48      	it	mi
   19508:	3407      	addmi	r4, #7
   1950a:	f8c9 6020 	str.w	r6, [r9, #32]
   1950e:	f8c9 4018 	str.w	r4, [r9, #24]
   19512:	4628      	mov	r0, r5
   19514:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19518:	f240 126d 	movw	r2, #365	; 0x16d
   1951c:	e7aa      	b.n	19474 <mktime+0xb0>
   1951e:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   19522:	e7a7      	b.n	19474 <mktime+0xb0>
   19524:	d01e      	beq.n	19564 <mktime+0x1a0>
   19526:	2245      	movs	r2, #69	; 0x45
   19528:	f240 176d 	movw	r7, #365	; 0x16d
   1952c:	2564      	movs	r5, #100	; 0x64
   1952e:	f44f 76c8 	mov.w	r6, #400	; 0x190
   19532:	429a      	cmp	r2, r3
   19534:	dc18      	bgt.n	19568 <mktime+0x1a4>
   19536:	079d      	lsls	r5, r3, #30
   19538:	d131      	bne.n	1959e <mktime+0x1da>
   1953a:	2164      	movs	r1, #100	; 0x64
   1953c:	fb93 f2f1 	sdiv	r2, r3, r1
   19540:	fb01 3212 	mls	r2, r1, r2, r3
   19544:	bb72      	cbnz	r2, 195a4 <mktime+0x1e0>
   19546:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1954a:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1954e:	fb95 f2f1 	sdiv	r2, r5, r1
   19552:	fb01 5212 	mls	r2, r1, r2, r5
   19556:	2a00      	cmp	r2, #0
   19558:	f240 126d 	movw	r2, #365	; 0x16d
   1955c:	bf08      	it	eq
   1955e:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   19562:	1aa4      	subs	r4, r4, r2
   19564:	461d      	mov	r5, r3
   19566:	e789      	b.n	1947c <mktime+0xb8>
   19568:	0791      	lsls	r1, r2, #30
   1956a:	d112      	bne.n	19592 <mktime+0x1ce>
   1956c:	fb92 f1f5 	sdiv	r1, r2, r5
   19570:	fb05 2111 	mls	r1, r5, r1, r2
   19574:	b981      	cbnz	r1, 19598 <mktime+0x1d4>
   19576:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1957a:	fb9e f1f6 	sdiv	r1, lr, r6
   1957e:	fb06 e111 	mls	r1, r6, r1, lr
   19582:	2900      	cmp	r1, #0
   19584:	bf14      	ite	ne
   19586:	4639      	movne	r1, r7
   19588:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1958c:	1a64      	subs	r4, r4, r1
   1958e:	3a01      	subs	r2, #1
   19590:	e7cf      	b.n	19532 <mktime+0x16e>
   19592:	f240 116d 	movw	r1, #365	; 0x16d
   19596:	e7f9      	b.n	1958c <mktime+0x1c8>
   19598:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1959c:	e7f6      	b.n	1958c <mktime+0x1c8>
   1959e:	f240 126d 	movw	r2, #365	; 0x16d
   195a2:	e7de      	b.n	19562 <mktime+0x19e>
   195a4:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   195a8:	e7db      	b.n	19562 <mktime+0x19e>
   195aa:	f002 fa09 	bl	1b9c0 <__tzcalc_limits>
   195ae:	2800      	cmp	r0, #0
   195b0:	f47f af7e 	bne.w	194b0 <mktime+0xec>
   195b4:	4656      	mov	r6, sl
   195b6:	e796      	b.n	194e6 <mktime+0x122>
   195b8:	1a12      	subs	r2, r2, r0
   195ba:	4297      	cmp	r7, r2
   195bc:	dbfa      	blt.n	195b4 <mktime+0x1f0>
   195be:	e784      	b.n	194ca <mktime+0x106>
   195c0:	428f      	cmp	r7, r1
   195c2:	db89      	blt.n	194d8 <mktime+0x114>
   195c4:	f1ba 0f00 	cmp.w	sl, #0
   195c8:	db90      	blt.n	194ec <mktime+0x128>
   195ca:	2601      	movs	r6, #1
   195cc:	ea8a 0a06 	eor.w	sl, sl, r6
   195d0:	f1ba 0f01 	cmp.w	sl, #1
   195d4:	d187      	bne.n	194e6 <mktime+0x122>
   195d6:	1a1b      	subs	r3, r3, r0
   195d8:	b906      	cbnz	r6, 195dc <mktime+0x218>
   195da:	425b      	negs	r3, r3
   195dc:	f8d9 2000 	ldr.w	r2, [r9]
   195e0:	4648      	mov	r0, r9
   195e2:	441a      	add	r2, r3
   195e4:	f8c9 2000 	str.w	r2, [r9]
   195e8:	441f      	add	r7, r3
   195ea:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   195ee:	f7ff fe09 	bl	19204 <validate_structure>
   195f2:	f8d9 300c 	ldr.w	r3, [r9, #12]
   195f6:	ebb3 030a 	subs.w	r3, r3, sl
   195fa:	f43f af74 	beq.w	194e6 <mktime+0x122>
   195fe:	2b01      	cmp	r3, #1
   19600:	dc21      	bgt.n	19646 <mktime+0x282>
   19602:	1c98      	adds	r0, r3, #2
   19604:	bfd8      	it	le
   19606:	2301      	movle	r3, #1
   19608:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1960c:	441c      	add	r4, r3
   1960e:	189b      	adds	r3, r3, r2
   19610:	d522      	bpl.n	19658 <mktime+0x294>
   19612:	1e6a      	subs	r2, r5, #1
   19614:	0791      	lsls	r1, r2, #30
   19616:	d119      	bne.n	1964c <mktime+0x288>
   19618:	2164      	movs	r1, #100	; 0x64
   1961a:	fb92 f3f1 	sdiv	r3, r2, r1
   1961e:	fb01 2313 	mls	r3, r1, r3, r2
   19622:	b9b3      	cbnz	r3, 19652 <mktime+0x28e>
   19624:	f44f 72c8 	mov.w	r2, #400	; 0x190
   19628:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1962c:	fb95 f3f2 	sdiv	r3, r5, r2
   19630:	fb02 5513 	mls	r5, r2, r3, r5
   19634:	2d00      	cmp	r5, #0
   19636:	f240 136d 	movw	r3, #365	; 0x16d
   1963a:	bf18      	it	ne
   1963c:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   19640:	f8c9 301c 	str.w	r3, [r9, #28]
   19644:	e74f      	b.n	194e6 <mktime+0x122>
   19646:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1964a:	e7dd      	b.n	19608 <mktime+0x244>
   1964c:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   19650:	e7f6      	b.n	19640 <mktime+0x27c>
   19652:	f240 136d 	movw	r3, #365	; 0x16d
   19656:	e7f3      	b.n	19640 <mktime+0x27c>
   19658:	07aa      	lsls	r2, r5, #30
   1965a:	d117      	bne.n	1968c <mktime+0x2c8>
   1965c:	2164      	movs	r1, #100	; 0x64
   1965e:	fb95 f2f1 	sdiv	r2, r5, r1
   19662:	fb01 5212 	mls	r2, r1, r2, r5
   19666:	b9a2      	cbnz	r2, 19692 <mktime+0x2ce>
   19668:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1966c:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   19670:	fb95 f2f1 	sdiv	r2, r5, r1
   19674:	fb01 5512 	mls	r5, r1, r2, r5
   19678:	2d00      	cmp	r5, #0
   1967a:	f240 126d 	movw	r2, #365	; 0x16d
   1967e:	bf08      	it	eq
   19680:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   19684:	429a      	cmp	r2, r3
   19686:	bfd8      	it	le
   19688:	1a9b      	suble	r3, r3, r2
   1968a:	e7d9      	b.n	19640 <mktime+0x27c>
   1968c:	f240 126d 	movw	r2, #365	; 0x16d
   19690:	e7f8      	b.n	19684 <mktime+0x2c0>
   19692:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   19696:	e7f5      	b.n	19684 <mktime+0x2c0>
   19698:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1969c:	e739      	b.n	19512 <mktime+0x14e>
   1969e:	f1ba 0f00 	cmp.w	sl, #0
   196a2:	f04f 0600 	mov.w	r6, #0
   196a6:	da91      	bge.n	195cc <mktime+0x208>
   196a8:	f8d8 5020 	ldr.w	r5, [r8, #32]
   196ac:	443d      	add	r5, r7
   196ae:	e721      	b.n	194f4 <mktime+0x130>
   196b0:	000206b0 	.word	0x000206b0
   196b4:	00015180 	.word	0x00015180
   196b8:	2007c7cc 	.word	0x2007c7cc

000196bc <mallinfo>:
mallinfo():
   196bc:	b510      	push	{r4, lr}
   196be:	4604      	mov	r4, r0
   196c0:	4b02      	ldr	r3, [pc, #8]	; (196cc <mallinfo+0x10>)
   196c2:	6819      	ldr	r1, [r3, #0]
   196c4:	f000 f85e 	bl	19784 <_mallinfo_r>
   196c8:	4620      	mov	r0, r4
   196ca:	bd10      	pop	{r4, pc}
   196cc:	2007c0e0 	.word	0x2007c0e0

000196d0 <_calloc_r>:
_calloc_r():
   196d0:	b538      	push	{r3, r4, r5, lr}
   196d2:	fb02 f401 	mul.w	r4, r2, r1
   196d6:	4621      	mov	r1, r4
   196d8:	f000 f886 	bl	197e8 <_malloc_r>
   196dc:	4605      	mov	r5, r0
   196de:	b118      	cbz	r0, 196e8 <_calloc_r+0x18>
   196e0:	4622      	mov	r2, r4
   196e2:	2100      	movs	r1, #0
   196e4:	f7ff fd86 	bl	191f4 <memset>
   196e8:	4628      	mov	r0, r5
   196ea:	bd38      	pop	{r3, r4, r5, pc}

000196ec <_free_r>:
_free_r():
   196ec:	b538      	push	{r3, r4, r5, lr}
   196ee:	4605      	mov	r5, r0
   196f0:	2900      	cmp	r1, #0
   196f2:	d043      	beq.n	1977c <_free_r+0x90>
   196f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
   196f8:	1f0c      	subs	r4, r1, #4
   196fa:	2b00      	cmp	r3, #0
   196fc:	bfb8      	it	lt
   196fe:	18e4      	addlt	r4, r4, r3
   19700:	f7fb fb06 	bl	14d10 <__malloc_lock>
   19704:	4a1e      	ldr	r2, [pc, #120]	; (19780 <_free_r+0x94>)
   19706:	6813      	ldr	r3, [r2, #0]
   19708:	4610      	mov	r0, r2
   1970a:	b933      	cbnz	r3, 1971a <_free_r+0x2e>
   1970c:	6063      	str	r3, [r4, #4]
   1970e:	6014      	str	r4, [r2, #0]
   19710:	4628      	mov	r0, r5
   19712:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   19716:	f7fb bafd 	b.w	14d14 <__malloc_unlock>
   1971a:	42a3      	cmp	r3, r4
   1971c:	d90b      	bls.n	19736 <_free_r+0x4a>
   1971e:	6821      	ldr	r1, [r4, #0]
   19720:	1862      	adds	r2, r4, r1
   19722:	4293      	cmp	r3, r2
   19724:	bf01      	itttt	eq
   19726:	681a      	ldreq	r2, [r3, #0]
   19728:	685b      	ldreq	r3, [r3, #4]
   1972a:	1852      	addeq	r2, r2, r1
   1972c:	6022      	streq	r2, [r4, #0]
   1972e:	6063      	str	r3, [r4, #4]
   19730:	6004      	str	r4, [r0, #0]
   19732:	e7ed      	b.n	19710 <_free_r+0x24>
   19734:	4613      	mov	r3, r2
   19736:	685a      	ldr	r2, [r3, #4]
   19738:	b10a      	cbz	r2, 1973e <_free_r+0x52>
   1973a:	42a2      	cmp	r2, r4
   1973c:	d9fa      	bls.n	19734 <_free_r+0x48>
   1973e:	6819      	ldr	r1, [r3, #0]
   19740:	1858      	adds	r0, r3, r1
   19742:	42a0      	cmp	r0, r4
   19744:	d10b      	bne.n	1975e <_free_r+0x72>
   19746:	6820      	ldr	r0, [r4, #0]
   19748:	4401      	add	r1, r0
   1974a:	1858      	adds	r0, r3, r1
   1974c:	4282      	cmp	r2, r0
   1974e:	6019      	str	r1, [r3, #0]
   19750:	d1de      	bne.n	19710 <_free_r+0x24>
   19752:	6810      	ldr	r0, [r2, #0]
   19754:	6852      	ldr	r2, [r2, #4]
   19756:	4401      	add	r1, r0
   19758:	6019      	str	r1, [r3, #0]
   1975a:	605a      	str	r2, [r3, #4]
   1975c:	e7d8      	b.n	19710 <_free_r+0x24>
   1975e:	d902      	bls.n	19766 <_free_r+0x7a>
   19760:	230c      	movs	r3, #12
   19762:	602b      	str	r3, [r5, #0]
   19764:	e7d4      	b.n	19710 <_free_r+0x24>
   19766:	6820      	ldr	r0, [r4, #0]
   19768:	1821      	adds	r1, r4, r0
   1976a:	428a      	cmp	r2, r1
   1976c:	bf01      	itttt	eq
   1976e:	6811      	ldreq	r1, [r2, #0]
   19770:	6852      	ldreq	r2, [r2, #4]
   19772:	1809      	addeq	r1, r1, r0
   19774:	6021      	streq	r1, [r4, #0]
   19776:	6062      	str	r2, [r4, #4]
   19778:	605c      	str	r4, [r3, #4]
   1977a:	e7c9      	b.n	19710 <_free_r+0x24>
   1977c:	bd38      	pop	{r3, r4, r5, pc}
   1977e:	bf00      	nop
   19780:	2007c7a8 	.word	0x2007c7a8

00019784 <_mallinfo_r>:
_mallinfo_r():
   19784:	b570      	push	{r4, r5, r6, lr}
   19786:	4c15      	ldr	r4, [pc, #84]	; (197dc <_mallinfo_r+0x58>)
   19788:	4606      	mov	r6, r0
   1978a:	4608      	mov	r0, r1
   1978c:	460d      	mov	r5, r1
   1978e:	f7fb fabf 	bl	14d10 <__malloc_lock>
   19792:	6820      	ldr	r0, [r4, #0]
   19794:	b138      	cbz	r0, 197a6 <_mallinfo_r+0x22>
   19796:	2100      	movs	r1, #0
   19798:	4628      	mov	r0, r5
   1979a:	f001 f839 	bl	1a810 <_sbrk_r>
   1979e:	1c43      	adds	r3, r0, #1
   197a0:	bf1c      	itt	ne
   197a2:	6823      	ldrne	r3, [r4, #0]
   197a4:	1ac0      	subne	r0, r0, r3
   197a6:	4b0e      	ldr	r3, [pc, #56]	; (197e0 <_mallinfo_r+0x5c>)
   197a8:	681a      	ldr	r2, [r3, #0]
   197aa:	2300      	movs	r3, #0
   197ac:	b992      	cbnz	r2, 197d4 <_mallinfo_r+0x50>
   197ae:	4c0d      	ldr	r4, [pc, #52]	; (197e4 <_mallinfo_r+0x60>)
   197b0:	6020      	str	r0, [r4, #0]
   197b2:	1ac0      	subs	r0, r0, r3
   197b4:	61e0      	str	r0, [r4, #28]
   197b6:	4628      	mov	r0, r5
   197b8:	4635      	mov	r5, r6
   197ba:	6223      	str	r3, [r4, #32]
   197bc:	f7fb faaa 	bl	14d14 <__malloc_unlock>
   197c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   197c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   197c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   197c6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   197c8:	e894 0003 	ldmia.w	r4, {r0, r1}
   197cc:	e885 0003 	stmia.w	r5, {r0, r1}
   197d0:	4630      	mov	r0, r6
   197d2:	bd70      	pop	{r4, r5, r6, pc}
   197d4:	6811      	ldr	r1, [r2, #0]
   197d6:	6852      	ldr	r2, [r2, #4]
   197d8:	440b      	add	r3, r1
   197da:	e7e7      	b.n	197ac <_mallinfo_r+0x28>
   197dc:	2007c7ac 	.word	0x2007c7ac
   197e0:	2007c7a8 	.word	0x2007c7a8
   197e4:	2007c780 	.word	0x2007c780

000197e8 <_malloc_r>:
_malloc_r():
   197e8:	b570      	push	{r4, r5, r6, lr}
   197ea:	1ccd      	adds	r5, r1, #3
   197ec:	f025 0503 	bic.w	r5, r5, #3
   197f0:	3508      	adds	r5, #8
   197f2:	2d0c      	cmp	r5, #12
   197f4:	bf38      	it	cc
   197f6:	250c      	movcc	r5, #12
   197f8:	2d00      	cmp	r5, #0
   197fa:	4606      	mov	r6, r0
   197fc:	db01      	blt.n	19802 <_malloc_r+0x1a>
   197fe:	42a9      	cmp	r1, r5
   19800:	d903      	bls.n	1980a <_malloc_r+0x22>
   19802:	230c      	movs	r3, #12
   19804:	6033      	str	r3, [r6, #0]
   19806:	2000      	movs	r0, #0
   19808:	bd70      	pop	{r4, r5, r6, pc}
   1980a:	f7fb fa81 	bl	14d10 <__malloc_lock>
   1980e:	4a23      	ldr	r2, [pc, #140]	; (1989c <_malloc_r+0xb4>)
   19810:	6814      	ldr	r4, [r2, #0]
   19812:	4621      	mov	r1, r4
   19814:	b991      	cbnz	r1, 1983c <_malloc_r+0x54>
   19816:	4c22      	ldr	r4, [pc, #136]	; (198a0 <_malloc_r+0xb8>)
   19818:	6823      	ldr	r3, [r4, #0]
   1981a:	b91b      	cbnz	r3, 19824 <_malloc_r+0x3c>
   1981c:	4630      	mov	r0, r6
   1981e:	f000 fff7 	bl	1a810 <_sbrk_r>
   19822:	6020      	str	r0, [r4, #0]
   19824:	4629      	mov	r1, r5
   19826:	4630      	mov	r0, r6
   19828:	f000 fff2 	bl	1a810 <_sbrk_r>
   1982c:	1c43      	adds	r3, r0, #1
   1982e:	d126      	bne.n	1987e <_malloc_r+0x96>
   19830:	230c      	movs	r3, #12
   19832:	4630      	mov	r0, r6
   19834:	6033      	str	r3, [r6, #0]
   19836:	f7fb fa6d 	bl	14d14 <__malloc_unlock>
   1983a:	e7e4      	b.n	19806 <_malloc_r+0x1e>
   1983c:	680b      	ldr	r3, [r1, #0]
   1983e:	1b5b      	subs	r3, r3, r5
   19840:	d41a      	bmi.n	19878 <_malloc_r+0x90>
   19842:	2b0b      	cmp	r3, #11
   19844:	d90f      	bls.n	19866 <_malloc_r+0x7e>
   19846:	600b      	str	r3, [r1, #0]
   19848:	18cc      	adds	r4, r1, r3
   1984a:	50cd      	str	r5, [r1, r3]
   1984c:	4630      	mov	r0, r6
   1984e:	f7fb fa61 	bl	14d14 <__malloc_unlock>
   19852:	f104 000b 	add.w	r0, r4, #11
   19856:	1d23      	adds	r3, r4, #4
   19858:	f020 0007 	bic.w	r0, r0, #7
   1985c:	1ac3      	subs	r3, r0, r3
   1985e:	d01b      	beq.n	19898 <_malloc_r+0xb0>
   19860:	425a      	negs	r2, r3
   19862:	50e2      	str	r2, [r4, r3]
   19864:	bd70      	pop	{r4, r5, r6, pc}
   19866:	428c      	cmp	r4, r1
   19868:	bf0b      	itete	eq
   1986a:	6863      	ldreq	r3, [r4, #4]
   1986c:	684b      	ldrne	r3, [r1, #4]
   1986e:	6013      	streq	r3, [r2, #0]
   19870:	6063      	strne	r3, [r4, #4]
   19872:	bf18      	it	ne
   19874:	460c      	movne	r4, r1
   19876:	e7e9      	b.n	1984c <_malloc_r+0x64>
   19878:	460c      	mov	r4, r1
   1987a:	6849      	ldr	r1, [r1, #4]
   1987c:	e7ca      	b.n	19814 <_malloc_r+0x2c>
   1987e:	1cc4      	adds	r4, r0, #3
   19880:	f024 0403 	bic.w	r4, r4, #3
   19884:	42a0      	cmp	r0, r4
   19886:	d005      	beq.n	19894 <_malloc_r+0xac>
   19888:	1a21      	subs	r1, r4, r0
   1988a:	4630      	mov	r0, r6
   1988c:	f000 ffc0 	bl	1a810 <_sbrk_r>
   19890:	3001      	adds	r0, #1
   19892:	d0cd      	beq.n	19830 <_malloc_r+0x48>
   19894:	6025      	str	r5, [r4, #0]
   19896:	e7d9      	b.n	1984c <_malloc_r+0x64>
   19898:	bd70      	pop	{r4, r5, r6, pc}
   1989a:	bf00      	nop
   1989c:	2007c7a8 	.word	0x2007c7a8
   198a0:	2007c7ac 	.word	0x2007c7ac

000198a4 <__cvt>:
__cvt():
   198a4:	2b00      	cmp	r3, #0
   198a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   198aa:	461e      	mov	r6, r3
   198ac:	bfbb      	ittet	lt
   198ae:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   198b2:	461e      	movlt	r6, r3
   198b4:	2300      	movge	r3, #0
   198b6:	232d      	movlt	r3, #45	; 0x2d
   198b8:	b088      	sub	sp, #32
   198ba:	9f14      	ldr	r7, [sp, #80]	; 0x50
   198bc:	9912      	ldr	r1, [sp, #72]	; 0x48
   198be:	f027 0720 	bic.w	r7, r7, #32
   198c2:	2f46      	cmp	r7, #70	; 0x46
   198c4:	4614      	mov	r4, r2
   198c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   198c8:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   198cc:	700b      	strb	r3, [r1, #0]
   198ce:	d004      	beq.n	198da <__cvt+0x36>
   198d0:	2f45      	cmp	r7, #69	; 0x45
   198d2:	d100      	bne.n	198d6 <__cvt+0x32>
   198d4:	3501      	adds	r5, #1
   198d6:	2302      	movs	r3, #2
   198d8:	e000      	b.n	198dc <__cvt+0x38>
   198da:	2303      	movs	r3, #3
   198dc:	aa07      	add	r2, sp, #28
   198de:	9204      	str	r2, [sp, #16]
   198e0:	aa06      	add	r2, sp, #24
   198e2:	9203      	str	r2, [sp, #12]
   198e4:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   198e8:	4622      	mov	r2, r4
   198ea:	4633      	mov	r3, r6
   198ec:	f002 fc64 	bl	1c1b8 <_dtoa_r>
   198f0:	2f47      	cmp	r7, #71	; 0x47
   198f2:	4680      	mov	r8, r0
   198f4:	d102      	bne.n	198fc <__cvt+0x58>
   198f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   198f8:	07db      	lsls	r3, r3, #31
   198fa:	d526      	bpl.n	1994a <__cvt+0xa6>
   198fc:	2f46      	cmp	r7, #70	; 0x46
   198fe:	eb08 0905 	add.w	r9, r8, r5
   19902:	d111      	bne.n	19928 <__cvt+0x84>
   19904:	f898 3000 	ldrb.w	r3, [r8]
   19908:	2b30      	cmp	r3, #48	; 0x30
   1990a:	d10a      	bne.n	19922 <__cvt+0x7e>
   1990c:	2200      	movs	r2, #0
   1990e:	2300      	movs	r3, #0
   19910:	4620      	mov	r0, r4
   19912:	4631      	mov	r1, r6
   19914:	f005 fd0a 	bl	1f32c <__aeabi_dcmpeq>
   19918:	b918      	cbnz	r0, 19922 <__cvt+0x7e>
   1991a:	f1c5 0501 	rsb	r5, r5, #1
   1991e:	f8ca 5000 	str.w	r5, [sl]
   19922:	f8da 3000 	ldr.w	r3, [sl]
   19926:	4499      	add	r9, r3
   19928:	2200      	movs	r2, #0
   1992a:	2300      	movs	r3, #0
   1992c:	4620      	mov	r0, r4
   1992e:	4631      	mov	r1, r6
   19930:	f005 fcfc 	bl	1f32c <__aeabi_dcmpeq>
   19934:	b938      	cbnz	r0, 19946 <__cvt+0xa2>
   19936:	2230      	movs	r2, #48	; 0x30
   19938:	9b07      	ldr	r3, [sp, #28]
   1993a:	4599      	cmp	r9, r3
   1993c:	d905      	bls.n	1994a <__cvt+0xa6>
   1993e:	1c59      	adds	r1, r3, #1
   19940:	9107      	str	r1, [sp, #28]
   19942:	701a      	strb	r2, [r3, #0]
   19944:	e7f8      	b.n	19938 <__cvt+0x94>
   19946:	f8cd 901c 	str.w	r9, [sp, #28]
   1994a:	4640      	mov	r0, r8
   1994c:	9b07      	ldr	r3, [sp, #28]
   1994e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   19950:	eba3 0308 	sub.w	r3, r3, r8
   19954:	6013      	str	r3, [r2, #0]
   19956:	b008      	add	sp, #32
   19958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001995c <__exponent>:
__exponent():
   1995c:	4603      	mov	r3, r0
   1995e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19960:	2900      	cmp	r1, #0
   19962:	f803 2b02 	strb.w	r2, [r3], #2
   19966:	bfb6      	itet	lt
   19968:	222d      	movlt	r2, #45	; 0x2d
   1996a:	222b      	movge	r2, #43	; 0x2b
   1996c:	4249      	neglt	r1, r1
   1996e:	2909      	cmp	r1, #9
   19970:	7042      	strb	r2, [r0, #1]
   19972:	dd21      	ble.n	199b8 <__exponent+0x5c>
   19974:	f10d 0207 	add.w	r2, sp, #7
   19978:	4617      	mov	r7, r2
   1997a:	260a      	movs	r6, #10
   1997c:	fb91 f5f6 	sdiv	r5, r1, r6
   19980:	fb06 1115 	mls	r1, r6, r5, r1
   19984:	2d09      	cmp	r5, #9
   19986:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1998a:	f802 1c01 	strb.w	r1, [r2, #-1]
   1998e:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   19992:	4629      	mov	r1, r5
   19994:	dc09      	bgt.n	199aa <__exponent+0x4e>
   19996:	3130      	adds	r1, #48	; 0x30
   19998:	3a02      	subs	r2, #2
   1999a:	f804 1c01 	strb.w	r1, [r4, #-1]
   1999e:	42ba      	cmp	r2, r7
   199a0:	461c      	mov	r4, r3
   199a2:	d304      	bcc.n	199ae <__exponent+0x52>
   199a4:	1a20      	subs	r0, r4, r0
   199a6:	b003      	add	sp, #12
   199a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   199aa:	4622      	mov	r2, r4
   199ac:	e7e6      	b.n	1997c <__exponent+0x20>
   199ae:	f812 1b01 	ldrb.w	r1, [r2], #1
   199b2:	f803 1b01 	strb.w	r1, [r3], #1
   199b6:	e7f2      	b.n	1999e <__exponent+0x42>
   199b8:	2230      	movs	r2, #48	; 0x30
   199ba:	461c      	mov	r4, r3
   199bc:	4411      	add	r1, r2
   199be:	f804 2b02 	strb.w	r2, [r4], #2
   199c2:	7059      	strb	r1, [r3, #1]
   199c4:	e7ee      	b.n	199a4 <__exponent+0x48>
   199c6:	Address 0x00000000000199c6 is out of bounds.


000199c8 <_printf_float>:
_printf_float():
   199c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199cc:	b091      	sub	sp, #68	; 0x44
   199ce:	460c      	mov	r4, r1
   199d0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   199d2:	4693      	mov	fp, r2
   199d4:	461e      	mov	r6, r3
   199d6:	4605      	mov	r5, r0
   199d8:	f003 fd62 	bl	1d4a0 <_localeconv_r>
   199dc:	6803      	ldr	r3, [r0, #0]
   199de:	4618      	mov	r0, r3
   199e0:	9309      	str	r3, [sp, #36]	; 0x24
   199e2:	f001 f8d8 	bl	1ab96 <strlen>
   199e6:	2300      	movs	r3, #0
   199e8:	930e      	str	r3, [sp, #56]	; 0x38
   199ea:	683b      	ldr	r3, [r7, #0]
   199ec:	900a      	str	r0, [sp, #40]	; 0x28
   199ee:	3307      	adds	r3, #7
   199f0:	f023 0307 	bic.w	r3, r3, #7
   199f4:	f103 0208 	add.w	r2, r3, #8
   199f8:	f894 8018 	ldrb.w	r8, [r4, #24]
   199fc:	f8d4 a000 	ldr.w	sl, [r4]
   19a00:	603a      	str	r2, [r7, #0]
   19a02:	e9d3 2300 	ldrd	r2, r3, [r3]
   19a06:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   19a0a:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   19a0e:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   19a10:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   19a14:	930b      	str	r3, [sp, #44]	; 0x2c
   19a16:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19a1a:	4ba6      	ldr	r3, [pc, #664]	; (19cb4 <_printf_float+0x2ec>)
   19a1c:	4638      	mov	r0, r7
   19a1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   19a20:	f005 fcb6 	bl	1f390 <__aeabi_dcmpun>
   19a24:	2800      	cmp	r0, #0
   19a26:	f040 81f7 	bne.w	19e18 <_printf_float+0x450>
   19a2a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19a2e:	4ba1      	ldr	r3, [pc, #644]	; (19cb4 <_printf_float+0x2ec>)
   19a30:	4638      	mov	r0, r7
   19a32:	990b      	ldr	r1, [sp, #44]	; 0x2c
   19a34:	f005 fc8e 	bl	1f354 <__aeabi_dcmple>
   19a38:	2800      	cmp	r0, #0
   19a3a:	f040 81ed 	bne.w	19e18 <_printf_float+0x450>
   19a3e:	2200      	movs	r2, #0
   19a40:	2300      	movs	r3, #0
   19a42:	4638      	mov	r0, r7
   19a44:	4649      	mov	r1, r9
   19a46:	f005 fc7b 	bl	1f340 <__aeabi_dcmplt>
   19a4a:	b110      	cbz	r0, 19a52 <_printf_float+0x8a>
   19a4c:	232d      	movs	r3, #45	; 0x2d
   19a4e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   19a52:	4b99      	ldr	r3, [pc, #612]	; (19cb8 <_printf_float+0x2f0>)
   19a54:	4f99      	ldr	r7, [pc, #612]	; (19cbc <_printf_float+0x2f4>)
   19a56:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   19a5a:	bf98      	it	ls
   19a5c:	461f      	movls	r7, r3
   19a5e:	2303      	movs	r3, #3
   19a60:	f04f 0900 	mov.w	r9, #0
   19a64:	6123      	str	r3, [r4, #16]
   19a66:	f02a 0304 	bic.w	r3, sl, #4
   19a6a:	6023      	str	r3, [r4, #0]
   19a6c:	9600      	str	r6, [sp, #0]
   19a6e:	465b      	mov	r3, fp
   19a70:	aa0f      	add	r2, sp, #60	; 0x3c
   19a72:	4621      	mov	r1, r4
   19a74:	4628      	mov	r0, r5
   19a76:	f000 f9df 	bl	19e38 <_printf_common>
   19a7a:	3001      	adds	r0, #1
   19a7c:	f040 809a 	bne.w	19bb4 <_printf_float+0x1ec>
   19a80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19a84:	b011      	add	sp, #68	; 0x44
   19a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a8a:	6862      	ldr	r2, [r4, #4]
   19a8c:	a80e      	add	r0, sp, #56	; 0x38
   19a8e:	1c53      	adds	r3, r2, #1
   19a90:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   19a94:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   19a98:	d141      	bne.n	19b1e <_printf_float+0x156>
   19a9a:	2206      	movs	r2, #6
   19a9c:	6062      	str	r2, [r4, #4]
   19a9e:	2100      	movs	r1, #0
   19aa0:	6023      	str	r3, [r4, #0]
   19aa2:	9301      	str	r3, [sp, #4]
   19aa4:	6863      	ldr	r3, [r4, #4]
   19aa6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   19aaa:	9005      	str	r0, [sp, #20]
   19aac:	9202      	str	r2, [sp, #8]
   19aae:	9300      	str	r3, [sp, #0]
   19ab0:	463a      	mov	r2, r7
   19ab2:	464b      	mov	r3, r9
   19ab4:	9106      	str	r1, [sp, #24]
   19ab6:	f8cd 8010 	str.w	r8, [sp, #16]
   19aba:	f8cd e00c 	str.w	lr, [sp, #12]
   19abe:	4628      	mov	r0, r5
   19ac0:	f7ff fef0 	bl	198a4 <__cvt>
   19ac4:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   19ac8:	2b47      	cmp	r3, #71	; 0x47
   19aca:	4607      	mov	r7, r0
   19acc:	d109      	bne.n	19ae2 <_printf_float+0x11a>
   19ace:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19ad0:	1cd8      	adds	r0, r3, #3
   19ad2:	db02      	blt.n	19ada <_printf_float+0x112>
   19ad4:	6862      	ldr	r2, [r4, #4]
   19ad6:	4293      	cmp	r3, r2
   19ad8:	dd59      	ble.n	19b8e <_printf_float+0x1c6>
   19ada:	f1a8 0802 	sub.w	r8, r8, #2
   19ade:	fa5f f888 	uxtb.w	r8, r8
   19ae2:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   19ae6:	990d      	ldr	r1, [sp, #52]	; 0x34
   19ae8:	d836      	bhi.n	19b58 <_printf_float+0x190>
   19aea:	3901      	subs	r1, #1
   19aec:	4642      	mov	r2, r8
   19aee:	f104 0050 	add.w	r0, r4, #80	; 0x50
   19af2:	910d      	str	r1, [sp, #52]	; 0x34
   19af4:	f7ff ff32 	bl	1995c <__exponent>
   19af8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19afa:	4681      	mov	r9, r0
   19afc:	1883      	adds	r3, r0, r2
   19afe:	2a01      	cmp	r2, #1
   19b00:	6123      	str	r3, [r4, #16]
   19b02:	dc02      	bgt.n	19b0a <_printf_float+0x142>
   19b04:	6822      	ldr	r2, [r4, #0]
   19b06:	07d1      	lsls	r1, r2, #31
   19b08:	d501      	bpl.n	19b0e <_printf_float+0x146>
   19b0a:	3301      	adds	r3, #1
   19b0c:	6123      	str	r3, [r4, #16]
   19b0e:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   19b12:	2b00      	cmp	r3, #0
   19b14:	d0aa      	beq.n	19a6c <_printf_float+0xa4>
   19b16:	232d      	movs	r3, #45	; 0x2d
   19b18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   19b1c:	e7a6      	b.n	19a6c <_printf_float+0xa4>
   19b1e:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   19b22:	d002      	beq.n	19b2a <_printf_float+0x162>
   19b24:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   19b28:	d1b9      	bne.n	19a9e <_printf_float+0xd6>
   19b2a:	b19a      	cbz	r2, 19b54 <_printf_float+0x18c>
   19b2c:	2100      	movs	r1, #0
   19b2e:	9106      	str	r1, [sp, #24]
   19b30:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   19b34:	e88d 000c 	stmia.w	sp, {r2, r3}
   19b38:	6023      	str	r3, [r4, #0]
   19b3a:	9005      	str	r0, [sp, #20]
   19b3c:	463a      	mov	r2, r7
   19b3e:	f8cd 8010 	str.w	r8, [sp, #16]
   19b42:	f8cd e00c 	str.w	lr, [sp, #12]
   19b46:	9102      	str	r1, [sp, #8]
   19b48:	464b      	mov	r3, r9
   19b4a:	4628      	mov	r0, r5
   19b4c:	f7ff feaa 	bl	198a4 <__cvt>
   19b50:	4607      	mov	r7, r0
   19b52:	e7bc      	b.n	19ace <_printf_float+0x106>
   19b54:	2201      	movs	r2, #1
   19b56:	e7a1      	b.n	19a9c <_printf_float+0xd4>
   19b58:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   19b5c:	d119      	bne.n	19b92 <_printf_float+0x1ca>
   19b5e:	2900      	cmp	r1, #0
   19b60:	6863      	ldr	r3, [r4, #4]
   19b62:	dd0c      	ble.n	19b7e <_printf_float+0x1b6>
   19b64:	6121      	str	r1, [r4, #16]
   19b66:	b913      	cbnz	r3, 19b6e <_printf_float+0x1a6>
   19b68:	6822      	ldr	r2, [r4, #0]
   19b6a:	07d2      	lsls	r2, r2, #31
   19b6c:	d502      	bpl.n	19b74 <_printf_float+0x1ac>
   19b6e:	3301      	adds	r3, #1
   19b70:	440b      	add	r3, r1
   19b72:	6123      	str	r3, [r4, #16]
   19b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19b76:	f04f 0900 	mov.w	r9, #0
   19b7a:	65a3      	str	r3, [r4, #88]	; 0x58
   19b7c:	e7c7      	b.n	19b0e <_printf_float+0x146>
   19b7e:	b913      	cbnz	r3, 19b86 <_printf_float+0x1be>
   19b80:	6822      	ldr	r2, [r4, #0]
   19b82:	07d0      	lsls	r0, r2, #31
   19b84:	d501      	bpl.n	19b8a <_printf_float+0x1c2>
   19b86:	3302      	adds	r3, #2
   19b88:	e7f3      	b.n	19b72 <_printf_float+0x1aa>
   19b8a:	2301      	movs	r3, #1
   19b8c:	e7f1      	b.n	19b72 <_printf_float+0x1aa>
   19b8e:	f04f 0867 	mov.w	r8, #103	; 0x67
   19b92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19b94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19b96:	4293      	cmp	r3, r2
   19b98:	db05      	blt.n	19ba6 <_printf_float+0x1de>
   19b9a:	6822      	ldr	r2, [r4, #0]
   19b9c:	6123      	str	r3, [r4, #16]
   19b9e:	07d1      	lsls	r1, r2, #31
   19ba0:	d5e8      	bpl.n	19b74 <_printf_float+0x1ac>
   19ba2:	3301      	adds	r3, #1
   19ba4:	e7e5      	b.n	19b72 <_printf_float+0x1aa>
   19ba6:	2b00      	cmp	r3, #0
   19ba8:	bfcc      	ite	gt
   19baa:	2301      	movgt	r3, #1
   19bac:	f1c3 0302 	rsble	r3, r3, #2
   19bb0:	4413      	add	r3, r2
   19bb2:	e7de      	b.n	19b72 <_printf_float+0x1aa>
   19bb4:	6823      	ldr	r3, [r4, #0]
   19bb6:	055a      	lsls	r2, r3, #21
   19bb8:	d407      	bmi.n	19bca <_printf_float+0x202>
   19bba:	6923      	ldr	r3, [r4, #16]
   19bbc:	463a      	mov	r2, r7
   19bbe:	4659      	mov	r1, fp
   19bc0:	4628      	mov	r0, r5
   19bc2:	47b0      	blx	r6
   19bc4:	3001      	adds	r0, #1
   19bc6:	d12a      	bne.n	19c1e <_printf_float+0x256>
   19bc8:	e75a      	b.n	19a80 <_printf_float+0xb8>
   19bca:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   19bce:	f240 80dc 	bls.w	19d8a <_printf_float+0x3c2>
   19bd2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   19bd6:	2200      	movs	r2, #0
   19bd8:	2300      	movs	r3, #0
   19bda:	f005 fba7 	bl	1f32c <__aeabi_dcmpeq>
   19bde:	2800      	cmp	r0, #0
   19be0:	d039      	beq.n	19c56 <_printf_float+0x28e>
   19be2:	2301      	movs	r3, #1
   19be4:	4a36      	ldr	r2, [pc, #216]	; (19cc0 <_printf_float+0x2f8>)
   19be6:	4659      	mov	r1, fp
   19be8:	4628      	mov	r0, r5
   19bea:	47b0      	blx	r6
   19bec:	3001      	adds	r0, #1
   19bee:	f43f af47 	beq.w	19a80 <_printf_float+0xb8>
   19bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19bf4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19bf6:	429a      	cmp	r2, r3
   19bf8:	db02      	blt.n	19c00 <_printf_float+0x238>
   19bfa:	6823      	ldr	r3, [r4, #0]
   19bfc:	07d8      	lsls	r0, r3, #31
   19bfe:	d50e      	bpl.n	19c1e <_printf_float+0x256>
   19c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19c02:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19c04:	4659      	mov	r1, fp
   19c06:	4628      	mov	r0, r5
   19c08:	47b0      	blx	r6
   19c0a:	3001      	adds	r0, #1
   19c0c:	f43f af38 	beq.w	19a80 <_printf_float+0xb8>
   19c10:	2700      	movs	r7, #0
   19c12:	f104 081a 	add.w	r8, r4, #26
   19c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19c18:	3b01      	subs	r3, #1
   19c1a:	429f      	cmp	r7, r3
   19c1c:	db11      	blt.n	19c42 <_printf_float+0x27a>
   19c1e:	6823      	ldr	r3, [r4, #0]
   19c20:	079f      	lsls	r7, r3, #30
   19c22:	d508      	bpl.n	19c36 <_printf_float+0x26e>
   19c24:	2700      	movs	r7, #0
   19c26:	f104 0819 	add.w	r8, r4, #25
   19c2a:	68e3      	ldr	r3, [r4, #12]
   19c2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   19c2e:	1a9b      	subs	r3, r3, r2
   19c30:	429f      	cmp	r7, r3
   19c32:	f2c0 80e7 	blt.w	19e04 <_printf_float+0x43c>
   19c36:	68e0      	ldr	r0, [r4, #12]
   19c38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   19c3a:	4298      	cmp	r0, r3
   19c3c:	bfb8      	it	lt
   19c3e:	4618      	movlt	r0, r3
   19c40:	e720      	b.n	19a84 <_printf_float+0xbc>
   19c42:	2301      	movs	r3, #1
   19c44:	4642      	mov	r2, r8
   19c46:	4659      	mov	r1, fp
   19c48:	4628      	mov	r0, r5
   19c4a:	47b0      	blx	r6
   19c4c:	3001      	adds	r0, #1
   19c4e:	f43f af17 	beq.w	19a80 <_printf_float+0xb8>
   19c52:	3701      	adds	r7, #1
   19c54:	e7df      	b.n	19c16 <_printf_float+0x24e>
   19c56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19c58:	2b00      	cmp	r3, #0
   19c5a:	dc33      	bgt.n	19cc4 <_printf_float+0x2fc>
   19c5c:	2301      	movs	r3, #1
   19c5e:	4a18      	ldr	r2, [pc, #96]	; (19cc0 <_printf_float+0x2f8>)
   19c60:	4659      	mov	r1, fp
   19c62:	4628      	mov	r0, r5
   19c64:	47b0      	blx	r6
   19c66:	3001      	adds	r0, #1
   19c68:	f43f af0a 	beq.w	19a80 <_printf_float+0xb8>
   19c6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19c6e:	b923      	cbnz	r3, 19c7a <_printf_float+0x2b2>
   19c70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19c72:	b913      	cbnz	r3, 19c7a <_printf_float+0x2b2>
   19c74:	6823      	ldr	r3, [r4, #0]
   19c76:	07d9      	lsls	r1, r3, #31
   19c78:	d5d1      	bpl.n	19c1e <_printf_float+0x256>
   19c7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19c7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19c7e:	4659      	mov	r1, fp
   19c80:	4628      	mov	r0, r5
   19c82:	47b0      	blx	r6
   19c84:	3001      	adds	r0, #1
   19c86:	f43f aefb 	beq.w	19a80 <_printf_float+0xb8>
   19c8a:	f04f 0800 	mov.w	r8, #0
   19c8e:	f104 091a 	add.w	r9, r4, #26
   19c92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19c94:	425b      	negs	r3, r3
   19c96:	4598      	cmp	r8, r3
   19c98:	db01      	blt.n	19c9e <_printf_float+0x2d6>
   19c9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19c9c:	e78e      	b.n	19bbc <_printf_float+0x1f4>
   19c9e:	2301      	movs	r3, #1
   19ca0:	464a      	mov	r2, r9
   19ca2:	4659      	mov	r1, fp
   19ca4:	4628      	mov	r0, r5
   19ca6:	47b0      	blx	r6
   19ca8:	3001      	adds	r0, #1
   19caa:	f43f aee9 	beq.w	19a80 <_printf_float+0xb8>
   19cae:	f108 0801 	add.w	r8, r8, #1
   19cb2:	e7ee      	b.n	19c92 <_printf_float+0x2ca>
   19cb4:	7fefffff 	.word	0x7fefffff
   19cb8:	00020740 	.word	0x00020740
   19cbc:	00020744 	.word	0x00020744
   19cc0:	0001f6be 	.word	0x0001f6be
   19cc4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19cc6:	6da3      	ldr	r3, [r4, #88]	; 0x58
   19cc8:	429a      	cmp	r2, r3
   19cca:	bfa8      	it	ge
   19ccc:	461a      	movge	r2, r3
   19cce:	2a00      	cmp	r2, #0
   19cd0:	4690      	mov	r8, r2
   19cd2:	dc36      	bgt.n	19d42 <_printf_float+0x37a>
   19cd4:	f04f 0a00 	mov.w	sl, #0
   19cd8:	f104 031a 	add.w	r3, r4, #26
   19cdc:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   19ce0:	930b      	str	r3, [sp, #44]	; 0x2c
   19ce2:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   19ce6:	eba9 0308 	sub.w	r3, r9, r8
   19cea:	459a      	cmp	sl, r3
   19cec:	db31      	blt.n	19d52 <_printf_float+0x38a>
   19cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19cf0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19cf2:	429a      	cmp	r2, r3
   19cf4:	db38      	blt.n	19d68 <_printf_float+0x3a0>
   19cf6:	6823      	ldr	r3, [r4, #0]
   19cf8:	07da      	lsls	r2, r3, #31
   19cfa:	d435      	bmi.n	19d68 <_printf_float+0x3a0>
   19cfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19cfe:	990d      	ldr	r1, [sp, #52]	; 0x34
   19d00:	eba3 0209 	sub.w	r2, r3, r9
   19d04:	eba3 0801 	sub.w	r8, r3, r1
   19d08:	4590      	cmp	r8, r2
   19d0a:	bfa8      	it	ge
   19d0c:	4690      	movge	r8, r2
   19d0e:	f1b8 0f00 	cmp.w	r8, #0
   19d12:	dc31      	bgt.n	19d78 <_printf_float+0x3b0>
   19d14:	2700      	movs	r7, #0
   19d16:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   19d1a:	f104 091a 	add.w	r9, r4, #26
   19d1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19d20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19d22:	1a9b      	subs	r3, r3, r2
   19d24:	eba3 0308 	sub.w	r3, r3, r8
   19d28:	429f      	cmp	r7, r3
   19d2a:	f6bf af78 	bge.w	19c1e <_printf_float+0x256>
   19d2e:	2301      	movs	r3, #1
   19d30:	464a      	mov	r2, r9
   19d32:	4659      	mov	r1, fp
   19d34:	4628      	mov	r0, r5
   19d36:	47b0      	blx	r6
   19d38:	3001      	adds	r0, #1
   19d3a:	f43f aea1 	beq.w	19a80 <_printf_float+0xb8>
   19d3e:	3701      	adds	r7, #1
   19d40:	e7ed      	b.n	19d1e <_printf_float+0x356>
   19d42:	4613      	mov	r3, r2
   19d44:	4659      	mov	r1, fp
   19d46:	463a      	mov	r2, r7
   19d48:	4628      	mov	r0, r5
   19d4a:	47b0      	blx	r6
   19d4c:	3001      	adds	r0, #1
   19d4e:	d1c1      	bne.n	19cd4 <_printf_float+0x30c>
   19d50:	e696      	b.n	19a80 <_printf_float+0xb8>
   19d52:	2301      	movs	r3, #1
   19d54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   19d56:	4659      	mov	r1, fp
   19d58:	4628      	mov	r0, r5
   19d5a:	47b0      	blx	r6
   19d5c:	3001      	adds	r0, #1
   19d5e:	f43f ae8f 	beq.w	19a80 <_printf_float+0xb8>
   19d62:	f10a 0a01 	add.w	sl, sl, #1
   19d66:	e7bc      	b.n	19ce2 <_printf_float+0x31a>
   19d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19d6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19d6c:	4659      	mov	r1, fp
   19d6e:	4628      	mov	r0, r5
   19d70:	47b0      	blx	r6
   19d72:	3001      	adds	r0, #1
   19d74:	d1c2      	bne.n	19cfc <_printf_float+0x334>
   19d76:	e683      	b.n	19a80 <_printf_float+0xb8>
   19d78:	4643      	mov	r3, r8
   19d7a:	eb07 0209 	add.w	r2, r7, r9
   19d7e:	4659      	mov	r1, fp
   19d80:	4628      	mov	r0, r5
   19d82:	47b0      	blx	r6
   19d84:	3001      	adds	r0, #1
   19d86:	d1c5      	bne.n	19d14 <_printf_float+0x34c>
   19d88:	e67a      	b.n	19a80 <_printf_float+0xb8>
   19d8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   19d8c:	2a01      	cmp	r2, #1
   19d8e:	dc01      	bgt.n	19d94 <_printf_float+0x3cc>
   19d90:	07db      	lsls	r3, r3, #31
   19d92:	d534      	bpl.n	19dfe <_printf_float+0x436>
   19d94:	2301      	movs	r3, #1
   19d96:	463a      	mov	r2, r7
   19d98:	4659      	mov	r1, fp
   19d9a:	4628      	mov	r0, r5
   19d9c:	47b0      	blx	r6
   19d9e:	3001      	adds	r0, #1
   19da0:	f43f ae6e 	beq.w	19a80 <_printf_float+0xb8>
   19da4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19da6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19da8:	4659      	mov	r1, fp
   19daa:	4628      	mov	r0, r5
   19dac:	47b0      	blx	r6
   19dae:	3001      	adds	r0, #1
   19db0:	f43f ae66 	beq.w	19a80 <_printf_float+0xb8>
   19db4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   19db8:	2200      	movs	r2, #0
   19dba:	2300      	movs	r3, #0
   19dbc:	f005 fab6 	bl	1f32c <__aeabi_dcmpeq>
   19dc0:	b150      	cbz	r0, 19dd8 <_printf_float+0x410>
   19dc2:	2700      	movs	r7, #0
   19dc4:	f104 081a 	add.w	r8, r4, #26
   19dc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19dca:	3b01      	subs	r3, #1
   19dcc:	429f      	cmp	r7, r3
   19dce:	db0c      	blt.n	19dea <_printf_float+0x422>
   19dd0:	464b      	mov	r3, r9
   19dd2:	f104 0250 	add.w	r2, r4, #80	; 0x50
   19dd6:	e6f2      	b.n	19bbe <_printf_float+0x1f6>
   19dd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19dda:	1c7a      	adds	r2, r7, #1
   19ddc:	3b01      	subs	r3, #1
   19dde:	4659      	mov	r1, fp
   19de0:	4628      	mov	r0, r5
   19de2:	47b0      	blx	r6
   19de4:	3001      	adds	r0, #1
   19de6:	d1f3      	bne.n	19dd0 <_printf_float+0x408>
   19de8:	e64a      	b.n	19a80 <_printf_float+0xb8>
   19dea:	2301      	movs	r3, #1
   19dec:	4642      	mov	r2, r8
   19dee:	4659      	mov	r1, fp
   19df0:	4628      	mov	r0, r5
   19df2:	47b0      	blx	r6
   19df4:	3001      	adds	r0, #1
   19df6:	f43f ae43 	beq.w	19a80 <_printf_float+0xb8>
   19dfa:	3701      	adds	r7, #1
   19dfc:	e7e4      	b.n	19dc8 <_printf_float+0x400>
   19dfe:	2301      	movs	r3, #1
   19e00:	463a      	mov	r2, r7
   19e02:	e7ec      	b.n	19dde <_printf_float+0x416>
   19e04:	2301      	movs	r3, #1
   19e06:	4642      	mov	r2, r8
   19e08:	4659      	mov	r1, fp
   19e0a:	4628      	mov	r0, r5
   19e0c:	47b0      	blx	r6
   19e0e:	3001      	adds	r0, #1
   19e10:	f43f ae36 	beq.w	19a80 <_printf_float+0xb8>
   19e14:	3701      	adds	r7, #1
   19e16:	e708      	b.n	19c2a <_printf_float+0x262>
   19e18:	463a      	mov	r2, r7
   19e1a:	464b      	mov	r3, r9
   19e1c:	4638      	mov	r0, r7
   19e1e:	4649      	mov	r1, r9
   19e20:	f005 fab6 	bl	1f390 <__aeabi_dcmpun>
   19e24:	2800      	cmp	r0, #0
   19e26:	f43f ae30 	beq.w	19a8a <_printf_float+0xc2>
   19e2a:	4b01      	ldr	r3, [pc, #4]	; (19e30 <_printf_float+0x468>)
   19e2c:	4f01      	ldr	r7, [pc, #4]	; (19e34 <_printf_float+0x46c>)
   19e2e:	e612      	b.n	19a56 <_printf_float+0x8e>
   19e30:	00020748 	.word	0x00020748
   19e34:	0002074c 	.word	0x0002074c

00019e38 <_printf_common>:
_printf_common():
   19e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   19e3c:	4691      	mov	r9, r2
   19e3e:	461f      	mov	r7, r3
   19e40:	688a      	ldr	r2, [r1, #8]
   19e42:	690b      	ldr	r3, [r1, #16]
   19e44:	4606      	mov	r6, r0
   19e46:	4293      	cmp	r3, r2
   19e48:	bfb8      	it	lt
   19e4a:	4613      	movlt	r3, r2
   19e4c:	f8c9 3000 	str.w	r3, [r9]
   19e50:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   19e54:	460c      	mov	r4, r1
   19e56:	f8dd 8020 	ldr.w	r8, [sp, #32]
   19e5a:	b112      	cbz	r2, 19e62 <_printf_common+0x2a>
   19e5c:	3301      	adds	r3, #1
   19e5e:	f8c9 3000 	str.w	r3, [r9]
   19e62:	6823      	ldr	r3, [r4, #0]
   19e64:	0699      	lsls	r1, r3, #26
   19e66:	bf42      	ittt	mi
   19e68:	f8d9 3000 	ldrmi.w	r3, [r9]
   19e6c:	3302      	addmi	r3, #2
   19e6e:	f8c9 3000 	strmi.w	r3, [r9]
   19e72:	6825      	ldr	r5, [r4, #0]
   19e74:	f015 0506 	ands.w	r5, r5, #6
   19e78:	d107      	bne.n	19e8a <_printf_common+0x52>
   19e7a:	f104 0a19 	add.w	sl, r4, #25
   19e7e:	68e3      	ldr	r3, [r4, #12]
   19e80:	f8d9 2000 	ldr.w	r2, [r9]
   19e84:	1a9b      	subs	r3, r3, r2
   19e86:	429d      	cmp	r5, r3
   19e88:	db2a      	blt.n	19ee0 <_printf_common+0xa8>
   19e8a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   19e8e:	6822      	ldr	r2, [r4, #0]
   19e90:	3300      	adds	r3, #0
   19e92:	bf18      	it	ne
   19e94:	2301      	movne	r3, #1
   19e96:	0692      	lsls	r2, r2, #26
   19e98:	d42f      	bmi.n	19efa <_printf_common+0xc2>
   19e9a:	f104 0243 	add.w	r2, r4, #67	; 0x43
   19e9e:	4639      	mov	r1, r7
   19ea0:	4630      	mov	r0, r6
   19ea2:	47c0      	blx	r8
   19ea4:	3001      	adds	r0, #1
   19ea6:	d022      	beq.n	19eee <_printf_common+0xb6>
   19ea8:	6823      	ldr	r3, [r4, #0]
   19eaa:	68e5      	ldr	r5, [r4, #12]
   19eac:	f003 0306 	and.w	r3, r3, #6
   19eb0:	2b04      	cmp	r3, #4
   19eb2:	bf18      	it	ne
   19eb4:	2500      	movne	r5, #0
   19eb6:	f8d9 2000 	ldr.w	r2, [r9]
   19eba:	f04f 0900 	mov.w	r9, #0
   19ebe:	bf08      	it	eq
   19ec0:	1aad      	subeq	r5, r5, r2
   19ec2:	68a3      	ldr	r3, [r4, #8]
   19ec4:	6922      	ldr	r2, [r4, #16]
   19ec6:	bf08      	it	eq
   19ec8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   19ecc:	4293      	cmp	r3, r2
   19ece:	bfc4      	itt	gt
   19ed0:	1a9b      	subgt	r3, r3, r2
   19ed2:	18ed      	addgt	r5, r5, r3
   19ed4:	341a      	adds	r4, #26
   19ed6:	454d      	cmp	r5, r9
   19ed8:	d11b      	bne.n	19f12 <_printf_common+0xda>
   19eda:	2000      	movs	r0, #0
   19edc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19ee0:	2301      	movs	r3, #1
   19ee2:	4652      	mov	r2, sl
   19ee4:	4639      	mov	r1, r7
   19ee6:	4630      	mov	r0, r6
   19ee8:	47c0      	blx	r8
   19eea:	3001      	adds	r0, #1
   19eec:	d103      	bne.n	19ef6 <_printf_common+0xbe>
   19eee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   19ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19ef6:	3501      	adds	r5, #1
   19ef8:	e7c1      	b.n	19e7e <_printf_common+0x46>
   19efa:	2030      	movs	r0, #48	; 0x30
   19efc:	18e1      	adds	r1, r4, r3
   19efe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   19f02:	1c5a      	adds	r2, r3, #1
   19f04:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   19f08:	4422      	add	r2, r4
   19f0a:	3302      	adds	r3, #2
   19f0c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   19f10:	e7c3      	b.n	19e9a <_printf_common+0x62>
   19f12:	2301      	movs	r3, #1
   19f14:	4622      	mov	r2, r4
   19f16:	4639      	mov	r1, r7
   19f18:	4630      	mov	r0, r6
   19f1a:	47c0      	blx	r8
   19f1c:	3001      	adds	r0, #1
   19f1e:	d0e6      	beq.n	19eee <_printf_common+0xb6>
   19f20:	f109 0901 	add.w	r9, r9, #1
   19f24:	e7d7      	b.n	19ed6 <_printf_common+0x9e>
   19f26:	Address 0x0000000000019f26 is out of bounds.


00019f28 <_printf_i>:
_printf_i():
   19f28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   19f2c:	4617      	mov	r7, r2
   19f2e:	7e0a      	ldrb	r2, [r1, #24]
   19f30:	b085      	sub	sp, #20
   19f32:	2a6e      	cmp	r2, #110	; 0x6e
   19f34:	4698      	mov	r8, r3
   19f36:	4606      	mov	r6, r0
   19f38:	460c      	mov	r4, r1
   19f3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   19f3c:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   19f40:	f000 80bc 	beq.w	1a0bc <_printf_i+0x194>
   19f44:	d81a      	bhi.n	19f7c <_printf_i+0x54>
   19f46:	2a63      	cmp	r2, #99	; 0x63
   19f48:	d02e      	beq.n	19fa8 <_printf_i+0x80>
   19f4a:	d80a      	bhi.n	19f62 <_printf_i+0x3a>
   19f4c:	2a00      	cmp	r2, #0
   19f4e:	f000 80c8 	beq.w	1a0e2 <_printf_i+0x1ba>
   19f52:	2a58      	cmp	r2, #88	; 0x58
   19f54:	f000 808a 	beq.w	1a06c <_printf_i+0x144>
   19f58:	f104 0542 	add.w	r5, r4, #66	; 0x42
   19f5c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   19f60:	e02a      	b.n	19fb8 <_printf_i+0x90>
   19f62:	2a64      	cmp	r2, #100	; 0x64
   19f64:	d001      	beq.n	19f6a <_printf_i+0x42>
   19f66:	2a69      	cmp	r2, #105	; 0x69
   19f68:	d1f6      	bne.n	19f58 <_printf_i+0x30>
   19f6a:	6821      	ldr	r1, [r4, #0]
   19f6c:	681a      	ldr	r2, [r3, #0]
   19f6e:	f011 0f80 	tst.w	r1, #128	; 0x80
   19f72:	d023      	beq.n	19fbc <_printf_i+0x94>
   19f74:	1d11      	adds	r1, r2, #4
   19f76:	6019      	str	r1, [r3, #0]
   19f78:	6813      	ldr	r3, [r2, #0]
   19f7a:	e027      	b.n	19fcc <_printf_i+0xa4>
   19f7c:	2a73      	cmp	r2, #115	; 0x73
   19f7e:	f000 80b4 	beq.w	1a0ea <_printf_i+0x1c2>
   19f82:	d808      	bhi.n	19f96 <_printf_i+0x6e>
   19f84:	2a6f      	cmp	r2, #111	; 0x6f
   19f86:	d02a      	beq.n	19fde <_printf_i+0xb6>
   19f88:	2a70      	cmp	r2, #112	; 0x70
   19f8a:	d1e5      	bne.n	19f58 <_printf_i+0x30>
   19f8c:	680a      	ldr	r2, [r1, #0]
   19f8e:	f042 0220 	orr.w	r2, r2, #32
   19f92:	600a      	str	r2, [r1, #0]
   19f94:	e003      	b.n	19f9e <_printf_i+0x76>
   19f96:	2a75      	cmp	r2, #117	; 0x75
   19f98:	d021      	beq.n	19fde <_printf_i+0xb6>
   19f9a:	2a78      	cmp	r2, #120	; 0x78
   19f9c:	d1dc      	bne.n	19f58 <_printf_i+0x30>
   19f9e:	2278      	movs	r2, #120	; 0x78
   19fa0:	496f      	ldr	r1, [pc, #444]	; (1a160 <_printf_i+0x238>)
   19fa2:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   19fa6:	e064      	b.n	1a072 <_printf_i+0x14a>
   19fa8:	681a      	ldr	r2, [r3, #0]
   19faa:	f101 0542 	add.w	r5, r1, #66	; 0x42
   19fae:	1d11      	adds	r1, r2, #4
   19fb0:	6019      	str	r1, [r3, #0]
   19fb2:	6813      	ldr	r3, [r2, #0]
   19fb4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   19fb8:	2301      	movs	r3, #1
   19fba:	e0a3      	b.n	1a104 <_printf_i+0x1dc>
   19fbc:	f011 0f40 	tst.w	r1, #64	; 0x40
   19fc0:	f102 0104 	add.w	r1, r2, #4
   19fc4:	6019      	str	r1, [r3, #0]
   19fc6:	d0d7      	beq.n	19f78 <_printf_i+0x50>
   19fc8:	f9b2 3000 	ldrsh.w	r3, [r2]
   19fcc:	2b00      	cmp	r3, #0
   19fce:	da03      	bge.n	19fd8 <_printf_i+0xb0>
   19fd0:	222d      	movs	r2, #45	; 0x2d
   19fd2:	425b      	negs	r3, r3
   19fd4:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   19fd8:	4962      	ldr	r1, [pc, #392]	; (1a164 <_printf_i+0x23c>)
   19fda:	220a      	movs	r2, #10
   19fdc:	e017      	b.n	1a00e <_printf_i+0xe6>
   19fde:	6820      	ldr	r0, [r4, #0]
   19fe0:	6819      	ldr	r1, [r3, #0]
   19fe2:	f010 0f80 	tst.w	r0, #128	; 0x80
   19fe6:	d003      	beq.n	19ff0 <_printf_i+0xc8>
   19fe8:	1d08      	adds	r0, r1, #4
   19fea:	6018      	str	r0, [r3, #0]
   19fec:	680b      	ldr	r3, [r1, #0]
   19fee:	e006      	b.n	19ffe <_printf_i+0xd6>
   19ff0:	f010 0f40 	tst.w	r0, #64	; 0x40
   19ff4:	f101 0004 	add.w	r0, r1, #4
   19ff8:	6018      	str	r0, [r3, #0]
   19ffa:	d0f7      	beq.n	19fec <_printf_i+0xc4>
   19ffc:	880b      	ldrh	r3, [r1, #0]
   19ffe:	2a6f      	cmp	r2, #111	; 0x6f
   1a000:	bf14      	ite	ne
   1a002:	220a      	movne	r2, #10
   1a004:	2208      	moveq	r2, #8
   1a006:	4957      	ldr	r1, [pc, #348]	; (1a164 <_printf_i+0x23c>)
   1a008:	2000      	movs	r0, #0
   1a00a:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1a00e:	6865      	ldr	r5, [r4, #4]
   1a010:	2d00      	cmp	r5, #0
   1a012:	60a5      	str	r5, [r4, #8]
   1a014:	f2c0 809c 	blt.w	1a150 <_printf_i+0x228>
   1a018:	6820      	ldr	r0, [r4, #0]
   1a01a:	f020 0004 	bic.w	r0, r0, #4
   1a01e:	6020      	str	r0, [r4, #0]
   1a020:	2b00      	cmp	r3, #0
   1a022:	d13f      	bne.n	1a0a4 <_printf_i+0x17c>
   1a024:	2d00      	cmp	r5, #0
   1a026:	f040 8095 	bne.w	1a154 <_printf_i+0x22c>
   1a02a:	4675      	mov	r5, lr
   1a02c:	2a08      	cmp	r2, #8
   1a02e:	d10b      	bne.n	1a048 <_printf_i+0x120>
   1a030:	6823      	ldr	r3, [r4, #0]
   1a032:	07da      	lsls	r2, r3, #31
   1a034:	d508      	bpl.n	1a048 <_printf_i+0x120>
   1a036:	6923      	ldr	r3, [r4, #16]
   1a038:	6862      	ldr	r2, [r4, #4]
   1a03a:	429a      	cmp	r2, r3
   1a03c:	bfde      	ittt	le
   1a03e:	2330      	movle	r3, #48	; 0x30
   1a040:	f805 3c01 	strble.w	r3, [r5, #-1]
   1a044:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1a048:	ebae 0305 	sub.w	r3, lr, r5
   1a04c:	6123      	str	r3, [r4, #16]
   1a04e:	f8cd 8000 	str.w	r8, [sp]
   1a052:	463b      	mov	r3, r7
   1a054:	aa03      	add	r2, sp, #12
   1a056:	4621      	mov	r1, r4
   1a058:	4630      	mov	r0, r6
   1a05a:	f7ff feed 	bl	19e38 <_printf_common>
   1a05e:	3001      	adds	r0, #1
   1a060:	d155      	bne.n	1a10e <_printf_i+0x1e6>
   1a062:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a066:	b005      	add	sp, #20
   1a068:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a06c:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1a070:	493c      	ldr	r1, [pc, #240]	; (1a164 <_printf_i+0x23c>)
   1a072:	6822      	ldr	r2, [r4, #0]
   1a074:	6818      	ldr	r0, [r3, #0]
   1a076:	f012 0f80 	tst.w	r2, #128	; 0x80
   1a07a:	f100 0504 	add.w	r5, r0, #4
   1a07e:	601d      	str	r5, [r3, #0]
   1a080:	d001      	beq.n	1a086 <_printf_i+0x15e>
   1a082:	6803      	ldr	r3, [r0, #0]
   1a084:	e002      	b.n	1a08c <_printf_i+0x164>
   1a086:	0655      	lsls	r5, r2, #25
   1a088:	d5fb      	bpl.n	1a082 <_printf_i+0x15a>
   1a08a:	8803      	ldrh	r3, [r0, #0]
   1a08c:	07d0      	lsls	r0, r2, #31
   1a08e:	bf44      	itt	mi
   1a090:	f042 0220 	orrmi.w	r2, r2, #32
   1a094:	6022      	strmi	r2, [r4, #0]
   1a096:	b91b      	cbnz	r3, 1a0a0 <_printf_i+0x178>
   1a098:	6822      	ldr	r2, [r4, #0]
   1a09a:	f022 0220 	bic.w	r2, r2, #32
   1a09e:	6022      	str	r2, [r4, #0]
   1a0a0:	2210      	movs	r2, #16
   1a0a2:	e7b1      	b.n	1a008 <_printf_i+0xe0>
   1a0a4:	4675      	mov	r5, lr
   1a0a6:	fbb3 f0f2 	udiv	r0, r3, r2
   1a0aa:	fb02 3310 	mls	r3, r2, r0, r3
   1a0ae:	5ccb      	ldrb	r3, [r1, r3]
   1a0b0:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1a0b4:	4603      	mov	r3, r0
   1a0b6:	2800      	cmp	r0, #0
   1a0b8:	d1f5      	bne.n	1a0a6 <_printf_i+0x17e>
   1a0ba:	e7b7      	b.n	1a02c <_printf_i+0x104>
   1a0bc:	6808      	ldr	r0, [r1, #0]
   1a0be:	681a      	ldr	r2, [r3, #0]
   1a0c0:	f010 0f80 	tst.w	r0, #128	; 0x80
   1a0c4:	6949      	ldr	r1, [r1, #20]
   1a0c6:	d004      	beq.n	1a0d2 <_printf_i+0x1aa>
   1a0c8:	1d10      	adds	r0, r2, #4
   1a0ca:	6018      	str	r0, [r3, #0]
   1a0cc:	6813      	ldr	r3, [r2, #0]
   1a0ce:	6019      	str	r1, [r3, #0]
   1a0d0:	e007      	b.n	1a0e2 <_printf_i+0x1ba>
   1a0d2:	f010 0f40 	tst.w	r0, #64	; 0x40
   1a0d6:	f102 0004 	add.w	r0, r2, #4
   1a0da:	6018      	str	r0, [r3, #0]
   1a0dc:	6813      	ldr	r3, [r2, #0]
   1a0de:	d0f6      	beq.n	1a0ce <_printf_i+0x1a6>
   1a0e0:	8019      	strh	r1, [r3, #0]
   1a0e2:	2300      	movs	r3, #0
   1a0e4:	4675      	mov	r5, lr
   1a0e6:	6123      	str	r3, [r4, #16]
   1a0e8:	e7b1      	b.n	1a04e <_printf_i+0x126>
   1a0ea:	681a      	ldr	r2, [r3, #0]
   1a0ec:	1d11      	adds	r1, r2, #4
   1a0ee:	6019      	str	r1, [r3, #0]
   1a0f0:	6815      	ldr	r5, [r2, #0]
   1a0f2:	2100      	movs	r1, #0
   1a0f4:	6862      	ldr	r2, [r4, #4]
   1a0f6:	4628      	mov	r0, r5
   1a0f8:	f7ff f83a 	bl	19170 <memchr>
   1a0fc:	b108      	cbz	r0, 1a102 <_printf_i+0x1da>
   1a0fe:	1b40      	subs	r0, r0, r5
   1a100:	6060      	str	r0, [r4, #4]
   1a102:	6863      	ldr	r3, [r4, #4]
   1a104:	6123      	str	r3, [r4, #16]
   1a106:	2300      	movs	r3, #0
   1a108:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1a10c:	e79f      	b.n	1a04e <_printf_i+0x126>
   1a10e:	6923      	ldr	r3, [r4, #16]
   1a110:	462a      	mov	r2, r5
   1a112:	4639      	mov	r1, r7
   1a114:	4630      	mov	r0, r6
   1a116:	47c0      	blx	r8
   1a118:	3001      	adds	r0, #1
   1a11a:	d0a2      	beq.n	1a062 <_printf_i+0x13a>
   1a11c:	6823      	ldr	r3, [r4, #0]
   1a11e:	079b      	lsls	r3, r3, #30
   1a120:	d507      	bpl.n	1a132 <_printf_i+0x20a>
   1a122:	2500      	movs	r5, #0
   1a124:	f104 0919 	add.w	r9, r4, #25
   1a128:	68e3      	ldr	r3, [r4, #12]
   1a12a:	9a03      	ldr	r2, [sp, #12]
   1a12c:	1a9b      	subs	r3, r3, r2
   1a12e:	429d      	cmp	r5, r3
   1a130:	db05      	blt.n	1a13e <_printf_i+0x216>
   1a132:	68e0      	ldr	r0, [r4, #12]
   1a134:	9b03      	ldr	r3, [sp, #12]
   1a136:	4298      	cmp	r0, r3
   1a138:	bfb8      	it	lt
   1a13a:	4618      	movlt	r0, r3
   1a13c:	e793      	b.n	1a066 <_printf_i+0x13e>
   1a13e:	2301      	movs	r3, #1
   1a140:	464a      	mov	r2, r9
   1a142:	4639      	mov	r1, r7
   1a144:	4630      	mov	r0, r6
   1a146:	47c0      	blx	r8
   1a148:	3001      	adds	r0, #1
   1a14a:	d08a      	beq.n	1a062 <_printf_i+0x13a>
   1a14c:	3501      	adds	r5, #1
   1a14e:	e7eb      	b.n	1a128 <_printf_i+0x200>
   1a150:	2b00      	cmp	r3, #0
   1a152:	d1a7      	bne.n	1a0a4 <_printf_i+0x17c>
   1a154:	780b      	ldrb	r3, [r1, #0]
   1a156:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1a15a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1a15e:	e765      	b.n	1a02c <_printf_i+0x104>
   1a160:	00020761 	.word	0x00020761
   1a164:	00020750 	.word	0x00020750

0001a168 <_scanf_float>:
_scanf_float():
   1a168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a16c:	469a      	mov	sl, r3
   1a16e:	688b      	ldr	r3, [r1, #8]
   1a170:	4616      	mov	r6, r2
   1a172:	1e5a      	subs	r2, r3, #1
   1a174:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1a178:	bf88      	it	hi
   1a17a:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1a17e:	b087      	sub	sp, #28
   1a180:	bf85      	ittet	hi
   1a182:	189b      	addhi	r3, r3, r2
   1a184:	9301      	strhi	r3, [sp, #4]
   1a186:	2300      	movls	r3, #0
   1a188:	f240 135d 	movwhi	r3, #349	; 0x15d
   1a18c:	4688      	mov	r8, r1
   1a18e:	f04f 0b00 	mov.w	fp, #0
   1a192:	bf8c      	ite	hi
   1a194:	608b      	strhi	r3, [r1, #8]
   1a196:	9301      	strls	r3, [sp, #4]
   1a198:	680b      	ldr	r3, [r1, #0]
   1a19a:	4607      	mov	r7, r0
   1a19c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1a1a0:	f848 3b1c 	str.w	r3, [r8], #28
   1a1a4:	460c      	mov	r4, r1
   1a1a6:	4645      	mov	r5, r8
   1a1a8:	465a      	mov	r2, fp
   1a1aa:	46d9      	mov	r9, fp
   1a1ac:	f8cd b010 	str.w	fp, [sp, #16]
   1a1b0:	f8cd b00c 	str.w	fp, [sp, #12]
   1a1b4:	f8cd b008 	str.w	fp, [sp, #8]
   1a1b8:	68a1      	ldr	r1, [r4, #8]
   1a1ba:	b181      	cbz	r1, 1a1de <_scanf_float+0x76>
   1a1bc:	6833      	ldr	r3, [r6, #0]
   1a1be:	781b      	ldrb	r3, [r3, #0]
   1a1c0:	2b49      	cmp	r3, #73	; 0x49
   1a1c2:	d071      	beq.n	1a2a8 <_scanf_float+0x140>
   1a1c4:	d84d      	bhi.n	1a262 <_scanf_float+0xfa>
   1a1c6:	2b39      	cmp	r3, #57	; 0x39
   1a1c8:	d840      	bhi.n	1a24c <_scanf_float+0xe4>
   1a1ca:	2b31      	cmp	r3, #49	; 0x31
   1a1cc:	f080 8088 	bcs.w	1a2e0 <_scanf_float+0x178>
   1a1d0:	2b2d      	cmp	r3, #45	; 0x2d
   1a1d2:	f000 8090 	beq.w	1a2f6 <_scanf_float+0x18e>
   1a1d6:	d815      	bhi.n	1a204 <_scanf_float+0x9c>
   1a1d8:	2b2b      	cmp	r3, #43	; 0x2b
   1a1da:	f000 808c 	beq.w	1a2f6 <_scanf_float+0x18e>
   1a1de:	f1b9 0f00 	cmp.w	r9, #0
   1a1e2:	d003      	beq.n	1a1ec <_scanf_float+0x84>
   1a1e4:	6823      	ldr	r3, [r4, #0]
   1a1e6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1a1ea:	6023      	str	r3, [r4, #0]
   1a1ec:	3a01      	subs	r2, #1
   1a1ee:	2a01      	cmp	r2, #1
   1a1f0:	f200 80ea 	bhi.w	1a3c8 <_scanf_float+0x260>
   1a1f4:	4545      	cmp	r5, r8
   1a1f6:	f200 80dc 	bhi.w	1a3b2 <_scanf_float+0x24a>
   1a1fa:	2601      	movs	r6, #1
   1a1fc:	4630      	mov	r0, r6
   1a1fe:	b007      	add	sp, #28
   1a200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a204:	2b2e      	cmp	r3, #46	; 0x2e
   1a206:	f000 809f 	beq.w	1a348 <_scanf_float+0x1e0>
   1a20a:	2b30      	cmp	r3, #48	; 0x30
   1a20c:	d1e7      	bne.n	1a1de <_scanf_float+0x76>
   1a20e:	6820      	ldr	r0, [r4, #0]
   1a210:	f410 7f80 	tst.w	r0, #256	; 0x100
   1a214:	d064      	beq.n	1a2e0 <_scanf_float+0x178>
   1a216:	9b01      	ldr	r3, [sp, #4]
   1a218:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1a21c:	6020      	str	r0, [r4, #0]
   1a21e:	f109 0901 	add.w	r9, r9, #1
   1a222:	b11b      	cbz	r3, 1a22c <_scanf_float+0xc4>
   1a224:	3b01      	subs	r3, #1
   1a226:	3101      	adds	r1, #1
   1a228:	9301      	str	r3, [sp, #4]
   1a22a:	60a1      	str	r1, [r4, #8]
   1a22c:	68a3      	ldr	r3, [r4, #8]
   1a22e:	3b01      	subs	r3, #1
   1a230:	60a3      	str	r3, [r4, #8]
   1a232:	6923      	ldr	r3, [r4, #16]
   1a234:	3301      	adds	r3, #1
   1a236:	6123      	str	r3, [r4, #16]
   1a238:	6873      	ldr	r3, [r6, #4]
   1a23a:	3b01      	subs	r3, #1
   1a23c:	2b00      	cmp	r3, #0
   1a23e:	6073      	str	r3, [r6, #4]
   1a240:	f340 80ac 	ble.w	1a39c <_scanf_float+0x234>
   1a244:	6833      	ldr	r3, [r6, #0]
   1a246:	3301      	adds	r3, #1
   1a248:	6033      	str	r3, [r6, #0]
   1a24a:	e7b5      	b.n	1a1b8 <_scanf_float+0x50>
   1a24c:	2b45      	cmp	r3, #69	; 0x45
   1a24e:	f000 8085 	beq.w	1a35c <_scanf_float+0x1f4>
   1a252:	2b46      	cmp	r3, #70	; 0x46
   1a254:	d06a      	beq.n	1a32c <_scanf_float+0x1c4>
   1a256:	2b41      	cmp	r3, #65	; 0x41
   1a258:	d1c1      	bne.n	1a1de <_scanf_float+0x76>
   1a25a:	2a01      	cmp	r2, #1
   1a25c:	d1bf      	bne.n	1a1de <_scanf_float+0x76>
   1a25e:	2202      	movs	r2, #2
   1a260:	e046      	b.n	1a2f0 <_scanf_float+0x188>
   1a262:	2b65      	cmp	r3, #101	; 0x65
   1a264:	d07a      	beq.n	1a35c <_scanf_float+0x1f4>
   1a266:	d818      	bhi.n	1a29a <_scanf_float+0x132>
   1a268:	2b54      	cmp	r3, #84	; 0x54
   1a26a:	d066      	beq.n	1a33a <_scanf_float+0x1d2>
   1a26c:	d811      	bhi.n	1a292 <_scanf_float+0x12a>
   1a26e:	2b4e      	cmp	r3, #78	; 0x4e
   1a270:	d1b5      	bne.n	1a1de <_scanf_float+0x76>
   1a272:	2a00      	cmp	r2, #0
   1a274:	d146      	bne.n	1a304 <_scanf_float+0x19c>
   1a276:	f1b9 0f00 	cmp.w	r9, #0
   1a27a:	d145      	bne.n	1a308 <_scanf_float+0x1a0>
   1a27c:	6821      	ldr	r1, [r4, #0]
   1a27e:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1a282:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1a286:	d13f      	bne.n	1a308 <_scanf_float+0x1a0>
   1a288:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1a28c:	6021      	str	r1, [r4, #0]
   1a28e:	2201      	movs	r2, #1
   1a290:	e02e      	b.n	1a2f0 <_scanf_float+0x188>
   1a292:	2b59      	cmp	r3, #89	; 0x59
   1a294:	d01e      	beq.n	1a2d4 <_scanf_float+0x16c>
   1a296:	2b61      	cmp	r3, #97	; 0x61
   1a298:	e7de      	b.n	1a258 <_scanf_float+0xf0>
   1a29a:	2b6e      	cmp	r3, #110	; 0x6e
   1a29c:	d0e9      	beq.n	1a272 <_scanf_float+0x10a>
   1a29e:	d815      	bhi.n	1a2cc <_scanf_float+0x164>
   1a2a0:	2b66      	cmp	r3, #102	; 0x66
   1a2a2:	d043      	beq.n	1a32c <_scanf_float+0x1c4>
   1a2a4:	2b69      	cmp	r3, #105	; 0x69
   1a2a6:	d19a      	bne.n	1a1de <_scanf_float+0x76>
   1a2a8:	f1bb 0f00 	cmp.w	fp, #0
   1a2ac:	d138      	bne.n	1a320 <_scanf_float+0x1b8>
   1a2ae:	f1b9 0f00 	cmp.w	r9, #0
   1a2b2:	d197      	bne.n	1a1e4 <_scanf_float+0x7c>
   1a2b4:	6821      	ldr	r1, [r4, #0]
   1a2b6:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1a2ba:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1a2be:	d195      	bne.n	1a1ec <_scanf_float+0x84>
   1a2c0:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1a2c4:	6021      	str	r1, [r4, #0]
   1a2c6:	f04f 0b01 	mov.w	fp, #1
   1a2ca:	e011      	b.n	1a2f0 <_scanf_float+0x188>
   1a2cc:	2b74      	cmp	r3, #116	; 0x74
   1a2ce:	d034      	beq.n	1a33a <_scanf_float+0x1d2>
   1a2d0:	2b79      	cmp	r3, #121	; 0x79
   1a2d2:	d184      	bne.n	1a1de <_scanf_float+0x76>
   1a2d4:	f1bb 0f07 	cmp.w	fp, #7
   1a2d8:	d181      	bne.n	1a1de <_scanf_float+0x76>
   1a2da:	f04f 0b08 	mov.w	fp, #8
   1a2de:	e007      	b.n	1a2f0 <_scanf_float+0x188>
   1a2e0:	eb12 0f0b 	cmn.w	r2, fp
   1a2e4:	f47f af7b 	bne.w	1a1de <_scanf_float+0x76>
   1a2e8:	6821      	ldr	r1, [r4, #0]
   1a2ea:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1a2ee:	6021      	str	r1, [r4, #0]
   1a2f0:	702b      	strb	r3, [r5, #0]
   1a2f2:	3501      	adds	r5, #1
   1a2f4:	e79a      	b.n	1a22c <_scanf_float+0xc4>
   1a2f6:	6821      	ldr	r1, [r4, #0]
   1a2f8:	0608      	lsls	r0, r1, #24
   1a2fa:	f57f af70 	bpl.w	1a1de <_scanf_float+0x76>
   1a2fe:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1a302:	e7f4      	b.n	1a2ee <_scanf_float+0x186>
   1a304:	2a02      	cmp	r2, #2
   1a306:	d047      	beq.n	1a398 <_scanf_float+0x230>
   1a308:	f1bb 0f01 	cmp.w	fp, #1
   1a30c:	d003      	beq.n	1a316 <_scanf_float+0x1ae>
   1a30e:	f1bb 0f04 	cmp.w	fp, #4
   1a312:	f47f af64 	bne.w	1a1de <_scanf_float+0x76>
   1a316:	f10b 0b01 	add.w	fp, fp, #1
   1a31a:	fa5f fb8b 	uxtb.w	fp, fp
   1a31e:	e7e7      	b.n	1a2f0 <_scanf_float+0x188>
   1a320:	f1bb 0f03 	cmp.w	fp, #3
   1a324:	d0f7      	beq.n	1a316 <_scanf_float+0x1ae>
   1a326:	f1bb 0f05 	cmp.w	fp, #5
   1a32a:	e7f2      	b.n	1a312 <_scanf_float+0x1aa>
   1a32c:	f1bb 0f02 	cmp.w	fp, #2
   1a330:	f47f af55 	bne.w	1a1de <_scanf_float+0x76>
   1a334:	f04f 0b03 	mov.w	fp, #3
   1a338:	e7da      	b.n	1a2f0 <_scanf_float+0x188>
   1a33a:	f1bb 0f06 	cmp.w	fp, #6
   1a33e:	f47f af4e 	bne.w	1a1de <_scanf_float+0x76>
   1a342:	f04f 0b07 	mov.w	fp, #7
   1a346:	e7d3      	b.n	1a2f0 <_scanf_float+0x188>
   1a348:	6821      	ldr	r1, [r4, #0]
   1a34a:	0588      	lsls	r0, r1, #22
   1a34c:	f57f af47 	bpl.w	1a1de <_scanf_float+0x76>
   1a350:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1a354:	6021      	str	r1, [r4, #0]
   1a356:	f8cd 9008 	str.w	r9, [sp, #8]
   1a35a:	e7c9      	b.n	1a2f0 <_scanf_float+0x188>
   1a35c:	6821      	ldr	r1, [r4, #0]
   1a35e:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1a362:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1a366:	d006      	beq.n	1a376 <_scanf_float+0x20e>
   1a368:	0548      	lsls	r0, r1, #21
   1a36a:	f57f af38 	bpl.w	1a1de <_scanf_float+0x76>
   1a36e:	f1b9 0f00 	cmp.w	r9, #0
   1a372:	f43f af3b 	beq.w	1a1ec <_scanf_float+0x84>
   1a376:	0588      	lsls	r0, r1, #22
   1a378:	bf58      	it	pl
   1a37a:	9802      	ldrpl	r0, [sp, #8]
   1a37c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1a380:	bf58      	it	pl
   1a382:	eba9 0000 	subpl.w	r0, r9, r0
   1a386:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1a38a:	bf5c      	itt	pl
   1a38c:	9003      	strpl	r0, [sp, #12]
   1a38e:	9504      	strpl	r5, [sp, #16]
   1a390:	6021      	str	r1, [r4, #0]
   1a392:	f04f 0900 	mov.w	r9, #0
   1a396:	e7ab      	b.n	1a2f0 <_scanf_float+0x188>
   1a398:	2203      	movs	r2, #3
   1a39a:	e7a9      	b.n	1a2f0 <_scanf_float+0x188>
   1a39c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1a3a0:	4631      	mov	r1, r6
   1a3a2:	4638      	mov	r0, r7
   1a3a4:	9205      	str	r2, [sp, #20]
   1a3a6:	4798      	blx	r3
   1a3a8:	9a05      	ldr	r2, [sp, #20]
   1a3aa:	2800      	cmp	r0, #0
   1a3ac:	f43f af04 	beq.w	1a1b8 <_scanf_float+0x50>
   1a3b0:	e715      	b.n	1a1de <_scanf_float+0x76>
   1a3b2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a3b6:	4632      	mov	r2, r6
   1a3b8:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a3bc:	4638      	mov	r0, r7
   1a3be:	4798      	blx	r3
   1a3c0:	6923      	ldr	r3, [r4, #16]
   1a3c2:	3b01      	subs	r3, #1
   1a3c4:	6123      	str	r3, [r4, #16]
   1a3c6:	e715      	b.n	1a1f4 <_scanf_float+0x8c>
   1a3c8:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1a3cc:	2b06      	cmp	r3, #6
   1a3ce:	d80a      	bhi.n	1a3e6 <_scanf_float+0x27e>
   1a3d0:	f1bb 0f02 	cmp.w	fp, #2
   1a3d4:	d92f      	bls.n	1a436 <_scanf_float+0x2ce>
   1a3d6:	f1ab 0b03 	sub.w	fp, fp, #3
   1a3da:	fa5f fb8b 	uxtb.w	fp, fp
   1a3de:	eba5 0b0b 	sub.w	fp, r5, fp
   1a3e2:	455d      	cmp	r5, fp
   1a3e4:	d112      	bne.n	1a40c <_scanf_float+0x2a4>
   1a3e6:	6823      	ldr	r3, [r4, #0]
   1a3e8:	05da      	lsls	r2, r3, #23
   1a3ea:	d545      	bpl.n	1a478 <_scanf_float+0x310>
   1a3ec:	055b      	lsls	r3, r3, #21
   1a3ee:	d525      	bpl.n	1a43c <_scanf_float+0x2d4>
   1a3f0:	4545      	cmp	r5, r8
   1a3f2:	f67f af02 	bls.w	1a1fa <_scanf_float+0x92>
   1a3f6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a3fa:	4632      	mov	r2, r6
   1a3fc:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a400:	4638      	mov	r0, r7
   1a402:	4798      	blx	r3
   1a404:	6923      	ldr	r3, [r4, #16]
   1a406:	3b01      	subs	r3, #1
   1a408:	6123      	str	r3, [r4, #16]
   1a40a:	e7f1      	b.n	1a3f0 <_scanf_float+0x288>
   1a40c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a410:	4632      	mov	r2, r6
   1a412:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a416:	4638      	mov	r0, r7
   1a418:	4798      	blx	r3
   1a41a:	6923      	ldr	r3, [r4, #16]
   1a41c:	3b01      	subs	r3, #1
   1a41e:	6123      	str	r3, [r4, #16]
   1a420:	e7df      	b.n	1a3e2 <_scanf_float+0x27a>
   1a422:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a426:	4632      	mov	r2, r6
   1a428:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1a42c:	4638      	mov	r0, r7
   1a42e:	4798      	blx	r3
   1a430:	6923      	ldr	r3, [r4, #16]
   1a432:	3b01      	subs	r3, #1
   1a434:	6123      	str	r3, [r4, #16]
   1a436:	4545      	cmp	r5, r8
   1a438:	d8f3      	bhi.n	1a422 <_scanf_float+0x2ba>
   1a43a:	e6de      	b.n	1a1fa <_scanf_float+0x92>
   1a43c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1a440:	6923      	ldr	r3, [r4, #16]
   1a442:	2965      	cmp	r1, #101	; 0x65
   1a444:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1a448:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1a44c:	6123      	str	r3, [r4, #16]
   1a44e:	d00d      	beq.n	1a46c <_scanf_float+0x304>
   1a450:	2945      	cmp	r1, #69	; 0x45
   1a452:	d00b      	beq.n	1a46c <_scanf_float+0x304>
   1a454:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a458:	4632      	mov	r2, r6
   1a45a:	4638      	mov	r0, r7
   1a45c:	4798      	blx	r3
   1a45e:	6923      	ldr	r3, [r4, #16]
   1a460:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1a464:	3b01      	subs	r3, #1
   1a466:	f1a5 0b02 	sub.w	fp, r5, #2
   1a46a:	6123      	str	r3, [r4, #16]
   1a46c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1a470:	4632      	mov	r2, r6
   1a472:	4638      	mov	r0, r7
   1a474:	4798      	blx	r3
   1a476:	465d      	mov	r5, fp
   1a478:	6826      	ldr	r6, [r4, #0]
   1a47a:	f016 0610 	ands.w	r6, r6, #16
   1a47e:	d14e      	bne.n	1a51e <_scanf_float+0x3b6>
   1a480:	702e      	strb	r6, [r5, #0]
   1a482:	6823      	ldr	r3, [r4, #0]
   1a484:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1a488:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1a48c:	d11c      	bne.n	1a4c8 <_scanf_float+0x360>
   1a48e:	9b02      	ldr	r3, [sp, #8]
   1a490:	eba9 0303 	sub.w	r3, r9, r3
   1a494:	425a      	negs	r2, r3
   1a496:	bb23      	cbnz	r3, 1a4e2 <_scanf_float+0x37a>
   1a498:	2200      	movs	r2, #0
   1a49a:	4641      	mov	r1, r8
   1a49c:	4638      	mov	r0, r7
   1a49e:	f001 f9c3 	bl	1b828 <_strtod_r>
   1a4a2:	6825      	ldr	r5, [r4, #0]
   1a4a4:	f8da 3000 	ldr.w	r3, [sl]
   1a4a8:	f015 0f02 	tst.w	r5, #2
   1a4ac:	f103 0204 	add.w	r2, r3, #4
   1a4b0:	4680      	mov	r8, r0
   1a4b2:	4689      	mov	r9, r1
   1a4b4:	f8ca 2000 	str.w	r2, [sl]
   1a4b8:	d01e      	beq.n	1a4f8 <_scanf_float+0x390>
   1a4ba:	681b      	ldr	r3, [r3, #0]
   1a4bc:	e9c3 8900 	strd	r8, r9, [r3]
   1a4c0:	68e3      	ldr	r3, [r4, #12]
   1a4c2:	3301      	adds	r3, #1
   1a4c4:	60e3      	str	r3, [r4, #12]
   1a4c6:	e699      	b.n	1a1fc <_scanf_float+0x94>
   1a4c8:	9b03      	ldr	r3, [sp, #12]
   1a4ca:	2b00      	cmp	r3, #0
   1a4cc:	d0e4      	beq.n	1a498 <_scanf_float+0x330>
   1a4ce:	9904      	ldr	r1, [sp, #16]
   1a4d0:	230a      	movs	r3, #10
   1a4d2:	4632      	mov	r2, r6
   1a4d4:	3101      	adds	r1, #1
   1a4d6:	4638      	mov	r0, r7
   1a4d8:	f001 fa36 	bl	1b948 <_strtol_r>
   1a4dc:	9b03      	ldr	r3, [sp, #12]
   1a4de:	9d04      	ldr	r5, [sp, #16]
   1a4e0:	1ac2      	subs	r2, r0, r3
   1a4e2:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1a4e6:	429d      	cmp	r5, r3
   1a4e8:	bf28      	it	cs
   1a4ea:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1a4ee:	490d      	ldr	r1, [pc, #52]	; (1a524 <_scanf_float+0x3bc>)
   1a4f0:	4628      	mov	r0, r5
   1a4f2:	f000 faab 	bl	1aa4c <siprintf>
   1a4f6:	e7cf      	b.n	1a498 <_scanf_float+0x330>
   1a4f8:	f015 0504 	ands.w	r5, r5, #4
   1a4fc:	d1dd      	bne.n	1a4ba <_scanf_float+0x352>
   1a4fe:	681f      	ldr	r7, [r3, #0]
   1a500:	4602      	mov	r2, r0
   1a502:	460b      	mov	r3, r1
   1a504:	f004 ff44 	bl	1f390 <__aeabi_dcmpun>
   1a508:	b120      	cbz	r0, 1a514 <_scanf_float+0x3ac>
   1a50a:	4628      	mov	r0, r5
   1a50c:	f000 fa56 	bl	1a9bc <nanf>
   1a510:	6038      	str	r0, [r7, #0]
   1a512:	e7d5      	b.n	1a4c0 <_scanf_float+0x358>
   1a514:	4640      	mov	r0, r8
   1a516:	4649      	mov	r1, r9
   1a518:	f7fd ff5c 	bl	183d4 <__aeabi_d2f>
   1a51c:	e7f8      	b.n	1a510 <_scanf_float+0x3a8>
   1a51e:	2600      	movs	r6, #0
   1a520:	e66c      	b.n	1a1fc <_scanf_float+0x94>
   1a522:	bf00      	nop
   1a524:	00020772 	.word	0x00020772

0001a528 <iprintf>:
iprintf():
   1a528:	b40f      	push	{r0, r1, r2, r3}
   1a52a:	4b0a      	ldr	r3, [pc, #40]	; (1a554 <iprintf+0x2c>)
   1a52c:	b513      	push	{r0, r1, r4, lr}
   1a52e:	681c      	ldr	r4, [r3, #0]
   1a530:	b124      	cbz	r4, 1a53c <iprintf+0x14>
   1a532:	69a3      	ldr	r3, [r4, #24]
   1a534:	b913      	cbnz	r3, 1a53c <iprintf+0x14>
   1a536:	4620      	mov	r0, r4
   1a538:	f7fe fcb8 	bl	18eac <__sinit>
   1a53c:	ab05      	add	r3, sp, #20
   1a53e:	9a04      	ldr	r2, [sp, #16]
   1a540:	68a1      	ldr	r1, [r4, #8]
   1a542:	4620      	mov	r0, r4
   1a544:	9301      	str	r3, [sp, #4]
   1a546:	f003 feff 	bl	1e348 <_vfiprintf_r>
   1a54a:	b002      	add	sp, #8
   1a54c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a550:	b004      	add	sp, #16
   1a552:	4770      	bx	lr
   1a554:	2007c0e0 	.word	0x2007c0e0

0001a558 <_puts_r>:
_puts_r():
   1a558:	b570      	push	{r4, r5, r6, lr}
   1a55a:	460e      	mov	r6, r1
   1a55c:	4605      	mov	r5, r0
   1a55e:	b118      	cbz	r0, 1a568 <_puts_r+0x10>
   1a560:	6983      	ldr	r3, [r0, #24]
   1a562:	b90b      	cbnz	r3, 1a568 <_puts_r+0x10>
   1a564:	f7fe fca2 	bl	18eac <__sinit>
   1a568:	69ab      	ldr	r3, [r5, #24]
   1a56a:	68ac      	ldr	r4, [r5, #8]
   1a56c:	b913      	cbnz	r3, 1a574 <_puts_r+0x1c>
   1a56e:	4628      	mov	r0, r5
   1a570:	f7fe fc9c 	bl	18eac <__sinit>
   1a574:	4b23      	ldr	r3, [pc, #140]	; (1a604 <_puts_r+0xac>)
   1a576:	429c      	cmp	r4, r3
   1a578:	d117      	bne.n	1a5aa <_puts_r+0x52>
   1a57a:	686c      	ldr	r4, [r5, #4]
   1a57c:	89a3      	ldrh	r3, [r4, #12]
   1a57e:	071b      	lsls	r3, r3, #28
   1a580:	d51d      	bpl.n	1a5be <_puts_r+0x66>
   1a582:	6923      	ldr	r3, [r4, #16]
   1a584:	b1db      	cbz	r3, 1a5be <_puts_r+0x66>
   1a586:	3e01      	subs	r6, #1
   1a588:	68a3      	ldr	r3, [r4, #8]
   1a58a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1a58e:	3b01      	subs	r3, #1
   1a590:	60a3      	str	r3, [r4, #8]
   1a592:	b9e9      	cbnz	r1, 1a5d0 <_puts_r+0x78>
   1a594:	2b00      	cmp	r3, #0
   1a596:	da2e      	bge.n	1a5f6 <_puts_r+0x9e>
   1a598:	4622      	mov	r2, r4
   1a59a:	210a      	movs	r1, #10
   1a59c:	4628      	mov	r0, r5
   1a59e:	f001 fc7b 	bl	1be98 <__swbuf_r>
   1a5a2:	3001      	adds	r0, #1
   1a5a4:	d011      	beq.n	1a5ca <_puts_r+0x72>
   1a5a6:	200a      	movs	r0, #10
   1a5a8:	bd70      	pop	{r4, r5, r6, pc}
   1a5aa:	4b17      	ldr	r3, [pc, #92]	; (1a608 <_puts_r+0xb0>)
   1a5ac:	429c      	cmp	r4, r3
   1a5ae:	d101      	bne.n	1a5b4 <_puts_r+0x5c>
   1a5b0:	68ac      	ldr	r4, [r5, #8]
   1a5b2:	e7e3      	b.n	1a57c <_puts_r+0x24>
   1a5b4:	4b15      	ldr	r3, [pc, #84]	; (1a60c <_puts_r+0xb4>)
   1a5b6:	429c      	cmp	r4, r3
   1a5b8:	bf08      	it	eq
   1a5ba:	68ec      	ldreq	r4, [r5, #12]
   1a5bc:	e7de      	b.n	1a57c <_puts_r+0x24>
   1a5be:	4621      	mov	r1, r4
   1a5c0:	4628      	mov	r0, r5
   1a5c2:	f001 fcdb 	bl	1bf7c <__swsetup_r>
   1a5c6:	2800      	cmp	r0, #0
   1a5c8:	d0dd      	beq.n	1a586 <_puts_r+0x2e>
   1a5ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a5ce:	bd70      	pop	{r4, r5, r6, pc}
   1a5d0:	2b00      	cmp	r3, #0
   1a5d2:	da04      	bge.n	1a5de <_puts_r+0x86>
   1a5d4:	69a2      	ldr	r2, [r4, #24]
   1a5d6:	4293      	cmp	r3, r2
   1a5d8:	db06      	blt.n	1a5e8 <_puts_r+0x90>
   1a5da:	290a      	cmp	r1, #10
   1a5dc:	d004      	beq.n	1a5e8 <_puts_r+0x90>
   1a5de:	6823      	ldr	r3, [r4, #0]
   1a5e0:	1c5a      	adds	r2, r3, #1
   1a5e2:	6022      	str	r2, [r4, #0]
   1a5e4:	7019      	strb	r1, [r3, #0]
   1a5e6:	e7cf      	b.n	1a588 <_puts_r+0x30>
   1a5e8:	4622      	mov	r2, r4
   1a5ea:	4628      	mov	r0, r5
   1a5ec:	f001 fc54 	bl	1be98 <__swbuf_r>
   1a5f0:	3001      	adds	r0, #1
   1a5f2:	d1c9      	bne.n	1a588 <_puts_r+0x30>
   1a5f4:	e7e9      	b.n	1a5ca <_puts_r+0x72>
   1a5f6:	200a      	movs	r0, #10
   1a5f8:	6823      	ldr	r3, [r4, #0]
   1a5fa:	1c5a      	adds	r2, r3, #1
   1a5fc:	6022      	str	r2, [r4, #0]
   1a5fe:	7018      	strb	r0, [r3, #0]
   1a600:	bd70      	pop	{r4, r5, r6, pc}
   1a602:	bf00      	nop
   1a604:	00020634 	.word	0x00020634
   1a608:	00020654 	.word	0x00020654
   1a60c:	00020614 	.word	0x00020614

0001a610 <puts>:
puts():
   1a610:	4b02      	ldr	r3, [pc, #8]	; (1a61c <puts+0xc>)
   1a612:	4601      	mov	r1, r0
   1a614:	6818      	ldr	r0, [r3, #0]
   1a616:	f7ff bf9f 	b.w	1a558 <_puts_r>
   1a61a:	bf00      	nop
   1a61c:	2007c0e0 	.word	0x2007c0e0

0001a620 <srand>:
srand():
   1a620:	b538      	push	{r3, r4, r5, lr}
   1a622:	4b12      	ldr	r3, [pc, #72]	; (1a66c <srand+0x4c>)
   1a624:	4605      	mov	r5, r0
   1a626:	681c      	ldr	r4, [r3, #0]
   1a628:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a62a:	b9d3      	cbnz	r3, 1a662 <srand+0x42>
   1a62c:	2018      	movs	r0, #24
   1a62e:	f7fe fd7d 	bl	1912c <malloc>
   1a632:	f243 330e 	movw	r3, #13070	; 0x330e
   1a636:	63a0      	str	r0, [r4, #56]	; 0x38
   1a638:	8003      	strh	r3, [r0, #0]
   1a63a:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1a63e:	8043      	strh	r3, [r0, #2]
   1a640:	f241 2334 	movw	r3, #4660	; 0x1234
   1a644:	8083      	strh	r3, [r0, #4]
   1a646:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1a64a:	80c3      	strh	r3, [r0, #6]
   1a64c:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1a650:	8103      	strh	r3, [r0, #8]
   1a652:	2305      	movs	r3, #5
   1a654:	8143      	strh	r3, [r0, #10]
   1a656:	230b      	movs	r3, #11
   1a658:	2201      	movs	r2, #1
   1a65a:	8183      	strh	r3, [r0, #12]
   1a65c:	2300      	movs	r3, #0
   1a65e:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1a662:	2200      	movs	r2, #0
   1a664:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a666:	611d      	str	r5, [r3, #16]
   1a668:	615a      	str	r2, [r3, #20]
   1a66a:	bd38      	pop	{r3, r4, r5, pc}
   1a66c:	2007c0e0 	.word	0x2007c0e0

0001a670 <rand>:
rand():
   1a670:	4b19      	ldr	r3, [pc, #100]	; (1a6d8 <rand+0x68>)
   1a672:	b510      	push	{r4, lr}
   1a674:	681c      	ldr	r4, [r3, #0]
   1a676:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a678:	b9d3      	cbnz	r3, 1a6b0 <rand+0x40>
   1a67a:	2018      	movs	r0, #24
   1a67c:	f7fe fd56 	bl	1912c <malloc>
   1a680:	f243 330e 	movw	r3, #13070	; 0x330e
   1a684:	63a0      	str	r0, [r4, #56]	; 0x38
   1a686:	8003      	strh	r3, [r0, #0]
   1a688:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1a68c:	8043      	strh	r3, [r0, #2]
   1a68e:	f241 2334 	movw	r3, #4660	; 0x1234
   1a692:	8083      	strh	r3, [r0, #4]
   1a694:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1a698:	80c3      	strh	r3, [r0, #6]
   1a69a:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1a69e:	8103      	strh	r3, [r0, #8]
   1a6a0:	2305      	movs	r3, #5
   1a6a2:	8143      	strh	r3, [r0, #10]
   1a6a4:	230b      	movs	r3, #11
   1a6a6:	2201      	movs	r2, #1
   1a6a8:	8183      	strh	r3, [r0, #12]
   1a6aa:	2300      	movs	r3, #0
   1a6ac:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1a6b0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1a6b2:	480a      	ldr	r0, [pc, #40]	; (1a6dc <rand+0x6c>)
   1a6b4:	690a      	ldr	r2, [r1, #16]
   1a6b6:	694b      	ldr	r3, [r1, #20]
   1a6b8:	4350      	muls	r0, r2
   1a6ba:	4c09      	ldr	r4, [pc, #36]	; (1a6e0 <rand+0x70>)
   1a6bc:	fb04 0003 	mla	r0, r4, r3, r0
   1a6c0:	fba2 2304 	umull	r2, r3, r2, r4
   1a6c4:	3201      	adds	r2, #1
   1a6c6:	4403      	add	r3, r0
   1a6c8:	f143 0300 	adc.w	r3, r3, #0
   1a6cc:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1a6d0:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1a6d4:	bd10      	pop	{r4, pc}
   1a6d6:	bf00      	nop
   1a6d8:	2007c0e0 	.word	0x2007c0e0
   1a6dc:	5851f42d 	.word	0x5851f42d
   1a6e0:	4c957f2d 	.word	0x4c957f2d

0001a6e4 <lflush>:
lflush():
   1a6e4:	8983      	ldrh	r3, [r0, #12]
   1a6e6:	f003 0309 	and.w	r3, r3, #9
   1a6ea:	2b09      	cmp	r3, #9
   1a6ec:	d101      	bne.n	1a6f2 <lflush+0xe>
   1a6ee:	f7fe bb8b 	b.w	18e08 <fflush>
   1a6f2:	2000      	movs	r0, #0
   1a6f4:	4770      	bx	lr
   1a6f6:	Address 0x000000000001a6f6 is out of bounds.


0001a6f8 <__srefill_r>:
__srefill_r():
   1a6f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a6fa:	460c      	mov	r4, r1
   1a6fc:	4605      	mov	r5, r0
   1a6fe:	b118      	cbz	r0, 1a708 <__srefill_r+0x10>
   1a700:	6983      	ldr	r3, [r0, #24]
   1a702:	b90b      	cbnz	r3, 1a708 <__srefill_r+0x10>
   1a704:	f7fe fbd2 	bl	18eac <__sinit>
   1a708:	4b3c      	ldr	r3, [pc, #240]	; (1a7fc <__srefill_r+0x104>)
   1a70a:	429c      	cmp	r4, r3
   1a70c:	d10a      	bne.n	1a724 <__srefill_r+0x2c>
   1a70e:	686c      	ldr	r4, [r5, #4]
   1a710:	2300      	movs	r3, #0
   1a712:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1a716:	6063      	str	r3, [r4, #4]
   1a718:	b293      	uxth	r3, r2
   1a71a:	069e      	lsls	r6, r3, #26
   1a71c:	d50c      	bpl.n	1a738 <__srefill_r+0x40>
   1a71e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a724:	4b36      	ldr	r3, [pc, #216]	; (1a800 <__srefill_r+0x108>)
   1a726:	429c      	cmp	r4, r3
   1a728:	d101      	bne.n	1a72e <__srefill_r+0x36>
   1a72a:	68ac      	ldr	r4, [r5, #8]
   1a72c:	e7f0      	b.n	1a710 <__srefill_r+0x18>
   1a72e:	4b35      	ldr	r3, [pc, #212]	; (1a804 <__srefill_r+0x10c>)
   1a730:	429c      	cmp	r4, r3
   1a732:	bf08      	it	eq
   1a734:	68ec      	ldreq	r4, [r5, #12]
   1a736:	e7eb      	b.n	1a710 <__srefill_r+0x18>
   1a738:	0758      	lsls	r0, r3, #29
   1a73a:	d449      	bmi.n	1a7d0 <__srefill_r+0xd8>
   1a73c:	06d9      	lsls	r1, r3, #27
   1a73e:	d405      	bmi.n	1a74c <__srefill_r+0x54>
   1a740:	2309      	movs	r3, #9
   1a742:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1a746:	602b      	str	r3, [r5, #0]
   1a748:	81a2      	strh	r2, [r4, #12]
   1a74a:	e7e8      	b.n	1a71e <__srefill_r+0x26>
   1a74c:	071a      	lsls	r2, r3, #28
   1a74e:	d50b      	bpl.n	1a768 <__srefill_r+0x70>
   1a750:	4621      	mov	r1, r4
   1a752:	4628      	mov	r0, r5
   1a754:	f7fe fb2e 	bl	18db4 <_fflush_r>
   1a758:	2800      	cmp	r0, #0
   1a75a:	d1e0      	bne.n	1a71e <__srefill_r+0x26>
   1a75c:	89a3      	ldrh	r3, [r4, #12]
   1a75e:	60a0      	str	r0, [r4, #8]
   1a760:	f023 0308 	bic.w	r3, r3, #8
   1a764:	81a3      	strh	r3, [r4, #12]
   1a766:	61a0      	str	r0, [r4, #24]
   1a768:	89a3      	ldrh	r3, [r4, #12]
   1a76a:	f043 0304 	orr.w	r3, r3, #4
   1a76e:	81a3      	strh	r3, [r4, #12]
   1a770:	6923      	ldr	r3, [r4, #16]
   1a772:	b91b      	cbnz	r3, 1a77c <__srefill_r+0x84>
   1a774:	4621      	mov	r1, r4
   1a776:	4628      	mov	r0, r5
   1a778:	f7fe fc98 	bl	190ac <__smakebuf_r>
   1a77c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1a780:	b2be      	uxth	r6, r7
   1a782:	07b3      	lsls	r3, r6, #30
   1a784:	d00f      	beq.n	1a7a6 <__srefill_r+0xae>
   1a786:	2301      	movs	r3, #1
   1a788:	81a3      	strh	r3, [r4, #12]
   1a78a:	4b1f      	ldr	r3, [pc, #124]	; (1a808 <__srefill_r+0x110>)
   1a78c:	491f      	ldr	r1, [pc, #124]	; (1a80c <__srefill_r+0x114>)
   1a78e:	6818      	ldr	r0, [r3, #0]
   1a790:	f006 0609 	and.w	r6, r6, #9
   1a794:	f7fe fbf6 	bl	18f84 <_fwalk>
   1a798:	2e09      	cmp	r6, #9
   1a79a:	81a7      	strh	r7, [r4, #12]
   1a79c:	d103      	bne.n	1a7a6 <__srefill_r+0xae>
   1a79e:	4621      	mov	r1, r4
   1a7a0:	4628      	mov	r0, r5
   1a7a2:	f7fe fa7f 	bl	18ca4 <__sflush_r>
   1a7a6:	6922      	ldr	r2, [r4, #16]
   1a7a8:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1a7aa:	6022      	str	r2, [r4, #0]
   1a7ac:	6963      	ldr	r3, [r4, #20]
   1a7ae:	6a21      	ldr	r1, [r4, #32]
   1a7b0:	4628      	mov	r0, r5
   1a7b2:	47b0      	blx	r6
   1a7b4:	2800      	cmp	r0, #0
   1a7b6:	6060      	str	r0, [r4, #4]
   1a7b8:	dc1d      	bgt.n	1a7f6 <__srefill_r+0xfe>
   1a7ba:	bf18      	it	ne
   1a7bc:	2200      	movne	r2, #0
   1a7be:	89a3      	ldrh	r3, [r4, #12]
   1a7c0:	bf16      	itet	ne
   1a7c2:	6062      	strne	r2, [r4, #4]
   1a7c4:	f043 0320 	orreq.w	r3, r3, #32
   1a7c8:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1a7cc:	81a3      	strh	r3, [r4, #12]
   1a7ce:	e7a6      	b.n	1a71e <__srefill_r+0x26>
   1a7d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a7d2:	2900      	cmp	r1, #0
   1a7d4:	d0cc      	beq.n	1a770 <__srefill_r+0x78>
   1a7d6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a7da:	4299      	cmp	r1, r3
   1a7dc:	d002      	beq.n	1a7e4 <__srefill_r+0xec>
   1a7de:	4628      	mov	r0, r5
   1a7e0:	f7fe ff84 	bl	196ec <_free_r>
   1a7e4:	2000      	movs	r0, #0
   1a7e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1a7e8:	6360      	str	r0, [r4, #52]	; 0x34
   1a7ea:	6063      	str	r3, [r4, #4]
   1a7ec:	2b00      	cmp	r3, #0
   1a7ee:	d0bf      	beq.n	1a770 <__srefill_r+0x78>
   1a7f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1a7f2:	6023      	str	r3, [r4, #0]
   1a7f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a7f6:	2000      	movs	r0, #0
   1a7f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a7fa:	bf00      	nop
   1a7fc:	00020634 	.word	0x00020634
   1a800:	00020654 	.word	0x00020654
   1a804:	00020614 	.word	0x00020614
   1a808:	00020674 	.word	0x00020674
   1a80c:	0001a6e5 	.word	0x0001a6e5

0001a810 <_sbrk_r>:
_sbrk_r():
   1a810:	b538      	push	{r3, r4, r5, lr}
   1a812:	2300      	movs	r3, #0
   1a814:	4c05      	ldr	r4, [pc, #20]	; (1a82c <_sbrk_r+0x1c>)
   1a816:	4605      	mov	r5, r0
   1a818:	4608      	mov	r0, r1
   1a81a:	6023      	str	r3, [r4, #0]
   1a81c:	f7fa f9e2 	bl	14be4 <_sbrk>
   1a820:	1c43      	adds	r3, r0, #1
   1a822:	d102      	bne.n	1a82a <_sbrk_r+0x1a>
   1a824:	6823      	ldr	r3, [r4, #0]
   1a826:	b103      	cbz	r3, 1a82a <_sbrk_r+0x1a>
   1a828:	602b      	str	r3, [r5, #0]
   1a82a:	bd38      	pop	{r3, r4, r5, pc}
   1a82c:	2007c7d8 	.word	0x2007c7d8

0001a830 <iscanf>:
scanf():
   1a830:	b40f      	push	{r0, r1, r2, r3}
   1a832:	4b0a      	ldr	r3, [pc, #40]	; (1a85c <iscanf+0x2c>)
   1a834:	b513      	push	{r0, r1, r4, lr}
   1a836:	681c      	ldr	r4, [r3, #0]
   1a838:	b124      	cbz	r4, 1a844 <iscanf+0x14>
   1a83a:	69a3      	ldr	r3, [r4, #24]
   1a83c:	b913      	cbnz	r3, 1a844 <iscanf+0x14>
   1a83e:	4620      	mov	r0, r4
   1a840:	f7fe fb34 	bl	18eac <__sinit>
   1a844:	ab05      	add	r3, sp, #20
   1a846:	9a04      	ldr	r2, [sp, #16]
   1a848:	6861      	ldr	r1, [r4, #4]
   1a84a:	4620      	mov	r0, r4
   1a84c:	9301      	str	r3, [sp, #4]
   1a84e:	f003 ffe5 	bl	1e81c <_vfiscanf_r>
   1a852:	b002      	add	sp, #8
   1a854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a858:	b004      	add	sp, #16
   1a85a:	4770      	bx	lr
   1a85c:	2007c0e0 	.word	0x2007c0e0

0001a860 <setvbuf>:
setvbuf():
   1a860:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1a864:	461d      	mov	r5, r3
   1a866:	4b51      	ldr	r3, [pc, #324]	; (1a9ac <setvbuf+0x14c>)
   1a868:	4604      	mov	r4, r0
   1a86a:	681e      	ldr	r6, [r3, #0]
   1a86c:	460f      	mov	r7, r1
   1a86e:	4690      	mov	r8, r2
   1a870:	b126      	cbz	r6, 1a87c <setvbuf+0x1c>
   1a872:	69b3      	ldr	r3, [r6, #24]
   1a874:	b913      	cbnz	r3, 1a87c <setvbuf+0x1c>
   1a876:	4630      	mov	r0, r6
   1a878:	f7fe fb18 	bl	18eac <__sinit>
   1a87c:	4b4c      	ldr	r3, [pc, #304]	; (1a9b0 <setvbuf+0x150>)
   1a87e:	429c      	cmp	r4, r3
   1a880:	d152      	bne.n	1a928 <setvbuf+0xc8>
   1a882:	6874      	ldr	r4, [r6, #4]
   1a884:	f1b8 0f02 	cmp.w	r8, #2
   1a888:	d006      	beq.n	1a898 <setvbuf+0x38>
   1a88a:	f1b8 0f01 	cmp.w	r8, #1
   1a88e:	f200 8089 	bhi.w	1a9a4 <setvbuf+0x144>
   1a892:	2d00      	cmp	r5, #0
   1a894:	f2c0 8086 	blt.w	1a9a4 <setvbuf+0x144>
   1a898:	4621      	mov	r1, r4
   1a89a:	4630      	mov	r0, r6
   1a89c:	f7fe fa8a 	bl	18db4 <_fflush_r>
   1a8a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1a8a2:	b141      	cbz	r1, 1a8b6 <setvbuf+0x56>
   1a8a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1a8a8:	4299      	cmp	r1, r3
   1a8aa:	d002      	beq.n	1a8b2 <setvbuf+0x52>
   1a8ac:	4630      	mov	r0, r6
   1a8ae:	f7fe ff1d 	bl	196ec <_free_r>
   1a8b2:	2300      	movs	r3, #0
   1a8b4:	6363      	str	r3, [r4, #52]	; 0x34
   1a8b6:	2300      	movs	r3, #0
   1a8b8:	61a3      	str	r3, [r4, #24]
   1a8ba:	6063      	str	r3, [r4, #4]
   1a8bc:	89a3      	ldrh	r3, [r4, #12]
   1a8be:	061b      	lsls	r3, r3, #24
   1a8c0:	d503      	bpl.n	1a8ca <setvbuf+0x6a>
   1a8c2:	6921      	ldr	r1, [r4, #16]
   1a8c4:	4630      	mov	r0, r6
   1a8c6:	f7fe ff11 	bl	196ec <_free_r>
   1a8ca:	89a3      	ldrh	r3, [r4, #12]
   1a8cc:	f1b8 0f02 	cmp.w	r8, #2
   1a8d0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1a8d4:	f023 0303 	bic.w	r3, r3, #3
   1a8d8:	81a3      	strh	r3, [r4, #12]
   1a8da:	d05d      	beq.n	1a998 <setvbuf+0x138>
   1a8dc:	ab01      	add	r3, sp, #4
   1a8de:	466a      	mov	r2, sp
   1a8e0:	4621      	mov	r1, r4
   1a8e2:	4630      	mov	r0, r6
   1a8e4:	f7fe fbbe 	bl	19064 <__swhatbuf_r>
   1a8e8:	89a3      	ldrh	r3, [r4, #12]
   1a8ea:	4318      	orrs	r0, r3
   1a8ec:	81a0      	strh	r0, [r4, #12]
   1a8ee:	bb2d      	cbnz	r5, 1a93c <setvbuf+0xdc>
   1a8f0:	9d00      	ldr	r5, [sp, #0]
   1a8f2:	4628      	mov	r0, r5
   1a8f4:	f7fe fc1a 	bl	1912c <malloc>
   1a8f8:	4607      	mov	r7, r0
   1a8fa:	2800      	cmp	r0, #0
   1a8fc:	d14e      	bne.n	1a99c <setvbuf+0x13c>
   1a8fe:	f8dd 9000 	ldr.w	r9, [sp]
   1a902:	45a9      	cmp	r9, r5
   1a904:	d13c      	bne.n	1a980 <setvbuf+0x120>
   1a906:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a90a:	89a3      	ldrh	r3, [r4, #12]
   1a90c:	f043 0302 	orr.w	r3, r3, #2
   1a910:	81a3      	strh	r3, [r4, #12]
   1a912:	2300      	movs	r3, #0
   1a914:	60a3      	str	r3, [r4, #8]
   1a916:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1a91a:	6023      	str	r3, [r4, #0]
   1a91c:	6123      	str	r3, [r4, #16]
   1a91e:	2301      	movs	r3, #1
   1a920:	6163      	str	r3, [r4, #20]
   1a922:	b003      	add	sp, #12
   1a924:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a928:	4b22      	ldr	r3, [pc, #136]	; (1a9b4 <setvbuf+0x154>)
   1a92a:	429c      	cmp	r4, r3
   1a92c:	d101      	bne.n	1a932 <setvbuf+0xd2>
   1a92e:	68b4      	ldr	r4, [r6, #8]
   1a930:	e7a8      	b.n	1a884 <setvbuf+0x24>
   1a932:	4b21      	ldr	r3, [pc, #132]	; (1a9b8 <setvbuf+0x158>)
   1a934:	429c      	cmp	r4, r3
   1a936:	bf08      	it	eq
   1a938:	68f4      	ldreq	r4, [r6, #12]
   1a93a:	e7a3      	b.n	1a884 <setvbuf+0x24>
   1a93c:	2f00      	cmp	r7, #0
   1a93e:	d0d8      	beq.n	1a8f2 <setvbuf+0x92>
   1a940:	69b3      	ldr	r3, [r6, #24]
   1a942:	b913      	cbnz	r3, 1a94a <setvbuf+0xea>
   1a944:	4630      	mov	r0, r6
   1a946:	f7fe fab1 	bl	18eac <__sinit>
   1a94a:	f1b8 0f01 	cmp.w	r8, #1
   1a94e:	bf08      	it	eq
   1a950:	89a3      	ldrheq	r3, [r4, #12]
   1a952:	6027      	str	r7, [r4, #0]
   1a954:	bf04      	itt	eq
   1a956:	f043 0301 	orreq.w	r3, r3, #1
   1a95a:	81a3      	strheq	r3, [r4, #12]
   1a95c:	89a3      	ldrh	r3, [r4, #12]
   1a95e:	6127      	str	r7, [r4, #16]
   1a960:	f013 0008 	ands.w	r0, r3, #8
   1a964:	6165      	str	r5, [r4, #20]
   1a966:	d01b      	beq.n	1a9a0 <setvbuf+0x140>
   1a968:	f013 0001 	ands.w	r0, r3, #1
   1a96c:	f04f 0300 	mov.w	r3, #0
   1a970:	bf1f      	itttt	ne
   1a972:	426d      	negne	r5, r5
   1a974:	60a3      	strne	r3, [r4, #8]
   1a976:	61a5      	strne	r5, [r4, #24]
   1a978:	4618      	movne	r0, r3
   1a97a:	bf08      	it	eq
   1a97c:	60a5      	streq	r5, [r4, #8]
   1a97e:	e7d0      	b.n	1a922 <setvbuf+0xc2>
   1a980:	4648      	mov	r0, r9
   1a982:	f7fe fbd3 	bl	1912c <malloc>
   1a986:	4607      	mov	r7, r0
   1a988:	2800      	cmp	r0, #0
   1a98a:	d0bc      	beq.n	1a906 <setvbuf+0xa6>
   1a98c:	89a3      	ldrh	r3, [r4, #12]
   1a98e:	464d      	mov	r5, r9
   1a990:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1a994:	81a3      	strh	r3, [r4, #12]
   1a996:	e7d3      	b.n	1a940 <setvbuf+0xe0>
   1a998:	2000      	movs	r0, #0
   1a99a:	e7b6      	b.n	1a90a <setvbuf+0xaa>
   1a99c:	46a9      	mov	r9, r5
   1a99e:	e7f5      	b.n	1a98c <setvbuf+0x12c>
   1a9a0:	60a0      	str	r0, [r4, #8]
   1a9a2:	e7be      	b.n	1a922 <setvbuf+0xc2>
   1a9a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a9a8:	e7bb      	b.n	1a922 <setvbuf+0xc2>
   1a9aa:	bf00      	nop
   1a9ac:	2007c0e0 	.word	0x2007c0e0
   1a9b0:	00020634 	.word	0x00020634
   1a9b4:	00020654 	.word	0x00020654
   1a9b8:	00020614 	.word	0x00020614

0001a9bc <nanf>:
nanf():
   1a9bc:	4800      	ldr	r0, [pc, #0]	; (1a9c0 <nanf+0x4>)
   1a9be:	4770      	bx	lr
   1a9c0:	7fc00000 	.word	0x7fc00000

0001a9c4 <_raise_r>:
_raise_r():
   1a9c4:	291f      	cmp	r1, #31
   1a9c6:	b538      	push	{r3, r4, r5, lr}
   1a9c8:	4604      	mov	r4, r0
   1a9ca:	460d      	mov	r5, r1
   1a9cc:	d904      	bls.n	1a9d8 <_raise_r+0x14>
   1a9ce:	2316      	movs	r3, #22
   1a9d0:	6003      	str	r3, [r0, #0]
   1a9d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a9d6:	bd38      	pop	{r3, r4, r5, pc}
   1a9d8:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1a9da:	b112      	cbz	r2, 1a9e2 <_raise_r+0x1e>
   1a9dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1a9e0:	b94b      	cbnz	r3, 1a9f6 <_raise_r+0x32>
   1a9e2:	4620      	mov	r0, r4
   1a9e4:	f000 f830 	bl	1aa48 <_getpid_r>
   1a9e8:	462a      	mov	r2, r5
   1a9ea:	4601      	mov	r1, r0
   1a9ec:	4620      	mov	r0, r4
   1a9ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a9f2:	f000 b817 	b.w	1aa24 <_kill_r>
   1a9f6:	2b01      	cmp	r3, #1
   1a9f8:	d00a      	beq.n	1aa10 <_raise_r+0x4c>
   1a9fa:	1c59      	adds	r1, r3, #1
   1a9fc:	d103      	bne.n	1aa06 <_raise_r+0x42>
   1a9fe:	2316      	movs	r3, #22
   1aa00:	6003      	str	r3, [r0, #0]
   1aa02:	2001      	movs	r0, #1
   1aa04:	bd38      	pop	{r3, r4, r5, pc}
   1aa06:	2400      	movs	r4, #0
   1aa08:	4628      	mov	r0, r5
   1aa0a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1aa0e:	4798      	blx	r3
   1aa10:	2000      	movs	r0, #0
   1aa12:	bd38      	pop	{r3, r4, r5, pc}

0001aa14 <raise>:
raise():
   1aa14:	4b02      	ldr	r3, [pc, #8]	; (1aa20 <raise+0xc>)
   1aa16:	4601      	mov	r1, r0
   1aa18:	6818      	ldr	r0, [r3, #0]
   1aa1a:	f7ff bfd3 	b.w	1a9c4 <_raise_r>
   1aa1e:	bf00      	nop
   1aa20:	2007c0e0 	.word	0x2007c0e0

0001aa24 <_kill_r>:
_kill_r():
   1aa24:	b538      	push	{r3, r4, r5, lr}
   1aa26:	2300      	movs	r3, #0
   1aa28:	4c06      	ldr	r4, [pc, #24]	; (1aa44 <_kill_r+0x20>)
   1aa2a:	4605      	mov	r5, r0
   1aa2c:	4608      	mov	r0, r1
   1aa2e:	4611      	mov	r1, r2
   1aa30:	6023      	str	r3, [r4, #0]
   1aa32:	f7fa fa1f 	bl	14e74 <_kill>
   1aa36:	1c43      	adds	r3, r0, #1
   1aa38:	d102      	bne.n	1aa40 <_kill_r+0x1c>
   1aa3a:	6823      	ldr	r3, [r4, #0]
   1aa3c:	b103      	cbz	r3, 1aa40 <_kill_r+0x1c>
   1aa3e:	602b      	str	r3, [r5, #0]
   1aa40:	bd38      	pop	{r3, r4, r5, pc}
   1aa42:	bf00      	nop
   1aa44:	2007c7d8 	.word	0x2007c7d8

0001aa48 <_getpid_r>:
_getpid_r():
   1aa48:	f7fa ba24 	b.w	14e94 <_getpid>

0001aa4c <siprintf>:
siprintf():
   1aa4c:	b40e      	push	{r1, r2, r3}
   1aa4e:	f44f 7102 	mov.w	r1, #520	; 0x208
   1aa52:	b500      	push	{lr}
   1aa54:	b09c      	sub	sp, #112	; 0x70
   1aa56:	f8ad 1014 	strh.w	r1, [sp, #20]
   1aa5a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1aa5e:	9104      	str	r1, [sp, #16]
   1aa60:	9107      	str	r1, [sp, #28]
   1aa62:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1aa66:	ab1d      	add	r3, sp, #116	; 0x74
   1aa68:	9002      	str	r0, [sp, #8]
   1aa6a:	9006      	str	r0, [sp, #24]
   1aa6c:	4808      	ldr	r0, [pc, #32]	; (1aa90 <siprintf+0x44>)
   1aa6e:	f853 2b04 	ldr.w	r2, [r3], #4
   1aa72:	f8ad 1016 	strh.w	r1, [sp, #22]
   1aa76:	6800      	ldr	r0, [r0, #0]
   1aa78:	a902      	add	r1, sp, #8
   1aa7a:	9301      	str	r3, [sp, #4]
   1aa7c:	f003 f99a 	bl	1ddb4 <_svfiprintf_r>
   1aa80:	2200      	movs	r2, #0
   1aa82:	9b02      	ldr	r3, [sp, #8]
   1aa84:	701a      	strb	r2, [r3, #0]
   1aa86:	b01c      	add	sp, #112	; 0x70
   1aa88:	f85d eb04 	ldr.w	lr, [sp], #4
   1aa8c:	b003      	add	sp, #12
   1aa8e:	4770      	bx	lr
   1aa90:	2007c0e0 	.word	0x2007c0e0

0001aa94 <siscanf>:
siscanf():
   1aa94:	b40e      	push	{r1, r2, r3}
   1aa96:	f44f 7201 	mov.w	r2, #516	; 0x204
   1aa9a:	b530      	push	{r4, r5, lr}
   1aa9c:	b09c      	sub	sp, #112	; 0x70
   1aa9e:	ac1f      	add	r4, sp, #124	; 0x7c
   1aaa0:	f854 5b04 	ldr.w	r5, [r4], #4
   1aaa4:	f8ad 2014 	strh.w	r2, [sp, #20]
   1aaa8:	9002      	str	r0, [sp, #8]
   1aaaa:	9006      	str	r0, [sp, #24]
   1aaac:	f000 f873 	bl	1ab96 <strlen>
   1aab0:	4b0b      	ldr	r3, [pc, #44]	; (1aae0 <siscanf+0x4c>)
   1aab2:	9003      	str	r0, [sp, #12]
   1aab4:	930b      	str	r3, [sp, #44]	; 0x2c
   1aab6:	2300      	movs	r3, #0
   1aab8:	930f      	str	r3, [sp, #60]	; 0x3c
   1aaba:	9314      	str	r3, [sp, #80]	; 0x50
   1aabc:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1aac0:	9007      	str	r0, [sp, #28]
   1aac2:	4808      	ldr	r0, [pc, #32]	; (1aae4 <siscanf+0x50>)
   1aac4:	f8ad 3016 	strh.w	r3, [sp, #22]
   1aac8:	462a      	mov	r2, r5
   1aaca:	4623      	mov	r3, r4
   1aacc:	a902      	add	r1, sp, #8
   1aace:	6800      	ldr	r0, [r0, #0]
   1aad0:	9401      	str	r4, [sp, #4]
   1aad2:	f003 fabd 	bl	1e050 <__ssvfiscanf_r>
   1aad6:	b01c      	add	sp, #112	; 0x70
   1aad8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1aadc:	b003      	add	sp, #12
   1aade:	4770      	bx	lr
   1aae0:	0001ab0b 	.word	0x0001ab0b
   1aae4:	2007c0e0 	.word	0x2007c0e0

0001aae8 <__sread>:
__sread():
   1aae8:	b510      	push	{r4, lr}
   1aaea:	460c      	mov	r4, r1
   1aaec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1aaf0:	f004 f816 	bl	1eb20 <_read_r>
   1aaf4:	2800      	cmp	r0, #0
   1aaf6:	bfab      	itete	ge
   1aaf8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1aafa:	89a3      	ldrhlt	r3, [r4, #12]
   1aafc:	181b      	addge	r3, r3, r0
   1aafe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1ab02:	bfac      	ite	ge
   1ab04:	6563      	strge	r3, [r4, #84]	; 0x54
   1ab06:	81a3      	strhlt	r3, [r4, #12]
   1ab08:	bd10      	pop	{r4, pc}

0001ab0a <__seofread>:
__seofread():
   1ab0a:	2000      	movs	r0, #0
   1ab0c:	4770      	bx	lr

0001ab0e <__swrite>:
__swrite():
   1ab0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ab12:	461f      	mov	r7, r3
   1ab14:	898b      	ldrh	r3, [r1, #12]
   1ab16:	4605      	mov	r5, r0
   1ab18:	05db      	lsls	r3, r3, #23
   1ab1a:	460c      	mov	r4, r1
   1ab1c:	4616      	mov	r6, r2
   1ab1e:	d505      	bpl.n	1ab2c <__swrite+0x1e>
   1ab20:	2302      	movs	r3, #2
   1ab22:	2200      	movs	r2, #0
   1ab24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ab28:	f002 fcc8 	bl	1d4bc <_lseek_r>
   1ab2c:	89a3      	ldrh	r3, [r4, #12]
   1ab2e:	4632      	mov	r2, r6
   1ab30:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1ab34:	81a3      	strh	r3, [r4, #12]
   1ab36:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1ab3a:	463b      	mov	r3, r7
   1ab3c:	4628      	mov	r0, r5
   1ab3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1ab42:	f001 ba09 	b.w	1bf58 <_write_r>

0001ab46 <__sseek>:
__sseek():
   1ab46:	b510      	push	{r4, lr}
   1ab48:	460c      	mov	r4, r1
   1ab4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ab4e:	f002 fcb5 	bl	1d4bc <_lseek_r>
   1ab52:	1c43      	adds	r3, r0, #1
   1ab54:	89a3      	ldrh	r3, [r4, #12]
   1ab56:	bf15      	itete	ne
   1ab58:	6560      	strne	r0, [r4, #84]	; 0x54
   1ab5a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1ab5e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1ab62:	81a3      	strheq	r3, [r4, #12]
   1ab64:	bf18      	it	ne
   1ab66:	81a3      	strhne	r3, [r4, #12]
   1ab68:	bd10      	pop	{r4, pc}

0001ab6a <__sclose>:
__sclose():
   1ab6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ab6e:	f001 ba73 	b.w	1c058 <_close_r>

0001ab72 <strcmp>:
strcmp():
   1ab72:	f810 2b01 	ldrb.w	r2, [r0], #1
   1ab76:	f811 3b01 	ldrb.w	r3, [r1], #1
   1ab7a:	2a01      	cmp	r2, #1
   1ab7c:	bf28      	it	cs
   1ab7e:	429a      	cmpcs	r2, r3
   1ab80:	d0f7      	beq.n	1ab72 <strcmp>
   1ab82:	1ad0      	subs	r0, r2, r3
   1ab84:	4770      	bx	lr

0001ab86 <strcpy>:
strcpy():
   1ab86:	4603      	mov	r3, r0
   1ab88:	f811 2b01 	ldrb.w	r2, [r1], #1
   1ab8c:	f803 2b01 	strb.w	r2, [r3], #1
   1ab90:	2a00      	cmp	r2, #0
   1ab92:	d1f9      	bne.n	1ab88 <strcpy+0x2>
   1ab94:	4770      	bx	lr

0001ab96 <strlen>:
strlen():
   1ab96:	4603      	mov	r3, r0
   1ab98:	f813 2b01 	ldrb.w	r2, [r3], #1
   1ab9c:	2a00      	cmp	r2, #0
   1ab9e:	d1fb      	bne.n	1ab98 <strlen+0x2>
   1aba0:	1a18      	subs	r0, r3, r0
   1aba2:	3801      	subs	r0, #1
   1aba4:	4770      	bx	lr

0001aba6 <strncmp>:
strncmp():
   1aba6:	b510      	push	{r4, lr}
   1aba8:	b16a      	cbz	r2, 1abc6 <strncmp+0x20>
   1abaa:	3901      	subs	r1, #1
   1abac:	1884      	adds	r4, r0, r2
   1abae:	f810 3b01 	ldrb.w	r3, [r0], #1
   1abb2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   1abb6:	4293      	cmp	r3, r2
   1abb8:	d103      	bne.n	1abc2 <strncmp+0x1c>
   1abba:	42a0      	cmp	r0, r4
   1abbc:	d001      	beq.n	1abc2 <strncmp+0x1c>
   1abbe:	2b00      	cmp	r3, #0
   1abc0:	d1f5      	bne.n	1abae <strncmp+0x8>
   1abc2:	1a98      	subs	r0, r3, r2
   1abc4:	bd10      	pop	{r4, pc}
   1abc6:	4610      	mov	r0, r2
   1abc8:	bd10      	pop	{r4, pc}

0001abca <strncpy>:
strncpy():
   1abca:	b570      	push	{r4, r5, r6, lr}
   1abcc:	4604      	mov	r4, r0
   1abce:	b902      	cbnz	r2, 1abd2 <strncpy+0x8>
   1abd0:	bd70      	pop	{r4, r5, r6, pc}
   1abd2:	4623      	mov	r3, r4
   1abd4:	f811 5b01 	ldrb.w	r5, [r1], #1
   1abd8:	1e56      	subs	r6, r2, #1
   1abda:	f803 5b01 	strb.w	r5, [r3], #1
   1abde:	b91d      	cbnz	r5, 1abe8 <strncpy+0x1e>
   1abe0:	4414      	add	r4, r2
   1abe2:	42a3      	cmp	r3, r4
   1abe4:	d103      	bne.n	1abee <strncpy+0x24>
   1abe6:	bd70      	pop	{r4, r5, r6, pc}
   1abe8:	461c      	mov	r4, r3
   1abea:	4632      	mov	r2, r6
   1abec:	e7ef      	b.n	1abce <strncpy+0x4>
   1abee:	f803 5b01 	strb.w	r5, [r3], #1
   1abf2:	e7f6      	b.n	1abe2 <strncpy+0x18>

0001abf4 <sulp>:
sulp():
   1abf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1abf8:	460f      	mov	r7, r1
   1abfa:	4690      	mov	r8, r2
   1abfc:	f002 ff30 	bl	1da60 <__ulp>
   1ac00:	4604      	mov	r4, r0
   1ac02:	460d      	mov	r5, r1
   1ac04:	f1b8 0f00 	cmp.w	r8, #0
   1ac08:	d011      	beq.n	1ac2e <sulp+0x3a>
   1ac0a:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1ac0e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1ac12:	2b00      	cmp	r3, #0
   1ac14:	dd0b      	ble.n	1ac2e <sulp+0x3a>
   1ac16:	2400      	movs	r4, #0
   1ac18:	051b      	lsls	r3, r3, #20
   1ac1a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   1ac1e:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1ac22:	4622      	mov	r2, r4
   1ac24:	462b      	mov	r3, r5
   1ac26:	f004 f919 	bl	1ee5c <__aeabi_dmul>
   1ac2a:	4604      	mov	r4, r0
   1ac2c:	460d      	mov	r5, r1
   1ac2e:	4620      	mov	r0, r4
   1ac30:	4629      	mov	r1, r5
   1ac32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ac36:	Address 0x000000000001ac36 is out of bounds.


0001ac38 <_strtod_l>:
_strtod_l():
   1ac38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac3c:	4699      	mov	r9, r3
   1ac3e:	2300      	movs	r3, #0
   1ac40:	b09f      	sub	sp, #124	; 0x7c
   1ac42:	4680      	mov	r8, r0
   1ac44:	4648      	mov	r0, r9
   1ac46:	460c      	mov	r4, r1
   1ac48:	9215      	str	r2, [sp, #84]	; 0x54
   1ac4a:	931a      	str	r3, [sp, #104]	; 0x68
   1ac4c:	f002 fc26 	bl	1d49c <__localeconv_l>
   1ac50:	4607      	mov	r7, r0
   1ac52:	6800      	ldr	r0, [r0, #0]
   1ac54:	f7ff ff9f 	bl	1ab96 <strlen>
   1ac58:	f04f 0a00 	mov.w	sl, #0
   1ac5c:	4605      	mov	r5, r0
   1ac5e:	f04f 0b00 	mov.w	fp, #0
   1ac62:	9419      	str	r4, [sp, #100]	; 0x64
   1ac64:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ac66:	781a      	ldrb	r2, [r3, #0]
   1ac68:	2a0d      	cmp	r2, #13
   1ac6a:	d833      	bhi.n	1acd4 <_strtod_l+0x9c>
   1ac6c:	2a09      	cmp	r2, #9
   1ac6e:	d237      	bcs.n	1ace0 <_strtod_l+0xa8>
   1ac70:	2a00      	cmp	r2, #0
   1ac72:	d03f      	beq.n	1acf4 <_strtod_l+0xbc>
   1ac74:	2300      	movs	r3, #0
   1ac76:	9309      	str	r3, [sp, #36]	; 0x24
   1ac78:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1ac7a:	7833      	ldrb	r3, [r6, #0]
   1ac7c:	2b30      	cmp	r3, #48	; 0x30
   1ac7e:	f040 8101 	bne.w	1ae84 <_strtod_l+0x24c>
   1ac82:	7873      	ldrb	r3, [r6, #1]
   1ac84:	2b58      	cmp	r3, #88	; 0x58
   1ac86:	d001      	beq.n	1ac8c <_strtod_l+0x54>
   1ac88:	2b78      	cmp	r3, #120	; 0x78
   1ac8a:	d16b      	bne.n	1ad64 <_strtod_l+0x12c>
   1ac8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ac8e:	f8cd 9008 	str.w	r9, [sp, #8]
   1ac92:	9301      	str	r3, [sp, #4]
   1ac94:	ab1a      	add	r3, sp, #104	; 0x68
   1ac96:	9300      	str	r3, [sp, #0]
   1ac98:	4aaa      	ldr	r2, [pc, #680]	; (1af44 <_strtod_l+0x30c>)
   1ac9a:	ab1b      	add	r3, sp, #108	; 0x6c
   1ac9c:	a919      	add	r1, sp, #100	; 0x64
   1ac9e:	4640      	mov	r0, r8
   1aca0:	f002 f8ba 	bl	1ce18 <__gethex>
   1aca4:	f010 0407 	ands.w	r4, r0, #7
   1aca8:	4605      	mov	r5, r0
   1acaa:	d005      	beq.n	1acb8 <_strtod_l+0x80>
   1acac:	2c06      	cmp	r4, #6
   1acae:	d12b      	bne.n	1ad08 <_strtod_l+0xd0>
   1acb0:	2300      	movs	r3, #0
   1acb2:	3601      	adds	r6, #1
   1acb4:	9619      	str	r6, [sp, #100]	; 0x64
   1acb6:	9309      	str	r3, [sp, #36]	; 0x24
   1acb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1acba:	2b00      	cmp	r3, #0
   1acbc:	f040 859d 	bne.w	1b7fa <_strtod_l+0xbc2>
   1acc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1acc2:	b1e3      	cbz	r3, 1acfe <_strtod_l+0xc6>
   1acc4:	4652      	mov	r2, sl
   1acc6:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   1acca:	4610      	mov	r0, r2
   1accc:	4619      	mov	r1, r3
   1acce:	b01f      	add	sp, #124	; 0x7c
   1acd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acd4:	2a2b      	cmp	r2, #43	; 0x2b
   1acd6:	d006      	beq.n	1ace6 <_strtod_l+0xae>
   1acd8:	2a2d      	cmp	r2, #45	; 0x2d
   1acda:	d013      	beq.n	1ad04 <_strtod_l+0xcc>
   1acdc:	2a20      	cmp	r2, #32
   1acde:	d1c9      	bne.n	1ac74 <_strtod_l+0x3c>
   1ace0:	3301      	adds	r3, #1
   1ace2:	9319      	str	r3, [sp, #100]	; 0x64
   1ace4:	e7be      	b.n	1ac64 <_strtod_l+0x2c>
   1ace6:	2200      	movs	r2, #0
   1ace8:	9209      	str	r2, [sp, #36]	; 0x24
   1acea:	1c5a      	adds	r2, r3, #1
   1acec:	9219      	str	r2, [sp, #100]	; 0x64
   1acee:	785b      	ldrb	r3, [r3, #1]
   1acf0:	2b00      	cmp	r3, #0
   1acf2:	d1c1      	bne.n	1ac78 <_strtod_l+0x40>
   1acf4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1acf6:	9419      	str	r4, [sp, #100]	; 0x64
   1acf8:	2b00      	cmp	r3, #0
   1acfa:	f040 857c 	bne.w	1b7f6 <_strtod_l+0xbbe>
   1acfe:	4652      	mov	r2, sl
   1ad00:	465b      	mov	r3, fp
   1ad02:	e7e2      	b.n	1acca <_strtod_l+0x92>
   1ad04:	2201      	movs	r2, #1
   1ad06:	e7ef      	b.n	1ace8 <_strtod_l+0xb0>
   1ad08:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1ad0a:	b13a      	cbz	r2, 1ad1c <_strtod_l+0xe4>
   1ad0c:	2135      	movs	r1, #53	; 0x35
   1ad0e:	a81c      	add	r0, sp, #112	; 0x70
   1ad10:	f002 ff93 	bl	1dc3a <__copybits>
   1ad14:	991a      	ldr	r1, [sp, #104]	; 0x68
   1ad16:	4640      	mov	r0, r8
   1ad18:	f002 fc16 	bl	1d548 <_Bfree>
   1ad1c:	3c01      	subs	r4, #1
   1ad1e:	2c04      	cmp	r4, #4
   1ad20:	d808      	bhi.n	1ad34 <_strtod_l+0xfc>
   1ad22:	e8df f004 	tbb	[pc, r4]
   1ad26:	030c      	.short	0x030c
   1ad28:	1a17      	.short	0x1a17
   1ad2a:	0c          	.byte	0x0c
   1ad2b:	00          	.byte	0x00
   1ad2c:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1ad30:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1ad34:	0729      	lsls	r1, r5, #28
   1ad36:	d5bf      	bpl.n	1acb8 <_strtod_l+0x80>
   1ad38:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1ad3c:	e7bc      	b.n	1acb8 <_strtod_l+0x80>
   1ad3e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1ad40:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1ad42:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1ad46:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1ad4a:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1ad4e:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1ad52:	e7ef      	b.n	1ad34 <_strtod_l+0xfc>
   1ad54:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 1af50 <_strtod_l+0x318>
   1ad58:	e7ec      	b.n	1ad34 <_strtod_l+0xfc>
   1ad5a:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1ad5e:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1ad62:	e7e7      	b.n	1ad34 <_strtod_l+0xfc>
   1ad64:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ad66:	1c5a      	adds	r2, r3, #1
   1ad68:	9219      	str	r2, [sp, #100]	; 0x64
   1ad6a:	785b      	ldrb	r3, [r3, #1]
   1ad6c:	2b30      	cmp	r3, #48	; 0x30
   1ad6e:	d0f9      	beq.n	1ad64 <_strtod_l+0x12c>
   1ad70:	2b00      	cmp	r3, #0
   1ad72:	d0a1      	beq.n	1acb8 <_strtod_l+0x80>
   1ad74:	2301      	movs	r3, #1
   1ad76:	9308      	str	r3, [sp, #32]
   1ad78:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ad7a:	220a      	movs	r2, #10
   1ad7c:	930a      	str	r3, [sp, #40]	; 0x28
   1ad7e:	2300      	movs	r3, #0
   1ad80:	9305      	str	r3, [sp, #20]
   1ad82:	9306      	str	r3, [sp, #24]
   1ad84:	9304      	str	r3, [sp, #16]
   1ad86:	9819      	ldr	r0, [sp, #100]	; 0x64
   1ad88:	7806      	ldrb	r6, [r0, #0]
   1ad8a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1ad8e:	b2d9      	uxtb	r1, r3
   1ad90:	2909      	cmp	r1, #9
   1ad92:	d979      	bls.n	1ae88 <_strtod_l+0x250>
   1ad94:	462a      	mov	r2, r5
   1ad96:	6839      	ldr	r1, [r7, #0]
   1ad98:	f7ff ff05 	bl	1aba6 <strncmp>
   1ad9c:	2800      	cmp	r0, #0
   1ad9e:	f000 8085 	beq.w	1aeac <_strtod_l+0x274>
   1ada2:	2000      	movs	r0, #0
   1ada4:	4633      	mov	r3, r6
   1ada6:	4602      	mov	r2, r0
   1ada8:	4601      	mov	r1, r0
   1adaa:	9d04      	ldr	r5, [sp, #16]
   1adac:	2b65      	cmp	r3, #101	; 0x65
   1adae:	d002      	beq.n	1adb6 <_strtod_l+0x17e>
   1adb0:	2b45      	cmp	r3, #69	; 0x45
   1adb2:	f040 80ef 	bne.w	1af94 <_strtod_l+0x35c>
   1adb6:	b925      	cbnz	r5, 1adc2 <_strtod_l+0x18a>
   1adb8:	b910      	cbnz	r0, 1adc0 <_strtod_l+0x188>
   1adba:	9b08      	ldr	r3, [sp, #32]
   1adbc:	2b00      	cmp	r3, #0
   1adbe:	d099      	beq.n	1acf4 <_strtod_l+0xbc>
   1adc0:	2500      	movs	r5, #0
   1adc2:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1adc4:	1c63      	adds	r3, r4, #1
   1adc6:	9319      	str	r3, [sp, #100]	; 0x64
   1adc8:	7863      	ldrb	r3, [r4, #1]
   1adca:	2b2b      	cmp	r3, #43	; 0x2b
   1adcc:	f000 80cf 	beq.w	1af6e <_strtod_l+0x336>
   1add0:	2b2d      	cmp	r3, #45	; 0x2d
   1add2:	f000 80d2 	beq.w	1af7a <_strtod_l+0x342>
   1add6:	2600      	movs	r6, #0
   1add8:	9607      	str	r6, [sp, #28]
   1adda:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   1adde:	2e09      	cmp	r6, #9
   1ade0:	f200 80d7 	bhi.w	1af92 <_strtod_l+0x35a>
   1ade4:	2b30      	cmp	r3, #48	; 0x30
   1ade6:	f000 80ca 	beq.w	1af7e <_strtod_l+0x346>
   1adea:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   1adee:	2e08      	cmp	r6, #8
   1adf0:	f200 80d0 	bhi.w	1af94 <_strtod_l+0x35c>
   1adf4:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   1adf8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1adfa:	f04f 0c0a 	mov.w	ip, #10
   1adfe:	461f      	mov	r7, r3
   1ae00:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ae02:	1c5e      	adds	r6, r3, #1
   1ae04:	9619      	str	r6, [sp, #100]	; 0x64
   1ae06:	785b      	ldrb	r3, [r3, #1]
   1ae08:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   1ae0c:	f1b9 0f09 	cmp.w	r9, #9
   1ae10:	f240 80ba 	bls.w	1af88 <_strtod_l+0x350>
   1ae14:	1bf6      	subs	r6, r6, r7
   1ae16:	2e08      	cmp	r6, #8
   1ae18:	f644 691f 	movw	r9, #19999	; 0x4e1f
   1ae1c:	dc02      	bgt.n	1ae24 <_strtod_l+0x1ec>
   1ae1e:	45f1      	cmp	r9, lr
   1ae20:	bfa8      	it	ge
   1ae22:	46f1      	movge	r9, lr
   1ae24:	9e07      	ldr	r6, [sp, #28]
   1ae26:	b10e      	cbz	r6, 1ae2c <_strtod_l+0x1f4>
   1ae28:	f1c9 0900 	rsb	r9, r9, #0
   1ae2c:	2d00      	cmp	r5, #0
   1ae2e:	f040 80d7 	bne.w	1afe0 <_strtod_l+0x3a8>
   1ae32:	2800      	cmp	r0, #0
   1ae34:	f47f af40 	bne.w	1acb8 <_strtod_l+0x80>
   1ae38:	9a08      	ldr	r2, [sp, #32]
   1ae3a:	2a00      	cmp	r2, #0
   1ae3c:	f47f af3c 	bne.w	1acb8 <_strtod_l+0x80>
   1ae40:	2900      	cmp	r1, #0
   1ae42:	f47f af57 	bne.w	1acf4 <_strtod_l+0xbc>
   1ae46:	2b4e      	cmp	r3, #78	; 0x4e
   1ae48:	f000 80ad 	beq.w	1afa6 <_strtod_l+0x36e>
   1ae4c:	f300 80a5 	bgt.w	1af9a <_strtod_l+0x362>
   1ae50:	2b49      	cmp	r3, #73	; 0x49
   1ae52:	f47f af4f 	bne.w	1acf4 <_strtod_l+0xbc>
   1ae56:	493c      	ldr	r1, [pc, #240]	; (1af48 <_strtod_l+0x310>)
   1ae58:	a819      	add	r0, sp, #100	; 0x64
   1ae5a:	f002 fa0e 	bl	1d27a <__match>
   1ae5e:	2800      	cmp	r0, #0
   1ae60:	f43f af48 	beq.w	1acf4 <_strtod_l+0xbc>
   1ae64:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ae66:	4939      	ldr	r1, [pc, #228]	; (1af4c <_strtod_l+0x314>)
   1ae68:	3b01      	subs	r3, #1
   1ae6a:	a819      	add	r0, sp, #100	; 0x64
   1ae6c:	9319      	str	r3, [sp, #100]	; 0x64
   1ae6e:	f002 fa04 	bl	1d27a <__match>
   1ae72:	b910      	cbnz	r0, 1ae7a <_strtod_l+0x242>
   1ae74:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ae76:	3301      	adds	r3, #1
   1ae78:	9319      	str	r3, [sp, #100]	; 0x64
   1ae7a:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 1af50 <_strtod_l+0x318>
   1ae7e:	f04f 0a00 	mov.w	sl, #0
   1ae82:	e719      	b.n	1acb8 <_strtod_l+0x80>
   1ae84:	2300      	movs	r3, #0
   1ae86:	e776      	b.n	1ad76 <_strtod_l+0x13e>
   1ae88:	9904      	ldr	r1, [sp, #16]
   1ae8a:	3001      	adds	r0, #1
   1ae8c:	2908      	cmp	r1, #8
   1ae8e:	bfd5      	itete	le
   1ae90:	9906      	ldrle	r1, [sp, #24]
   1ae92:	9905      	ldrgt	r1, [sp, #20]
   1ae94:	fb02 3301 	mlale	r3, r2, r1, r3
   1ae98:	fb02 3301 	mlagt	r3, r2, r1, r3
   1ae9c:	bfd4      	ite	le
   1ae9e:	9306      	strle	r3, [sp, #24]
   1aea0:	9305      	strgt	r3, [sp, #20]
   1aea2:	9b04      	ldr	r3, [sp, #16]
   1aea4:	9019      	str	r0, [sp, #100]	; 0x64
   1aea6:	3301      	adds	r3, #1
   1aea8:	9304      	str	r3, [sp, #16]
   1aeaa:	e76c      	b.n	1ad86 <_strtod_l+0x14e>
   1aeac:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1aeae:	195a      	adds	r2, r3, r5
   1aeb0:	9219      	str	r2, [sp, #100]	; 0x64
   1aeb2:	9a04      	ldr	r2, [sp, #16]
   1aeb4:	5d5b      	ldrb	r3, [r3, r5]
   1aeb6:	2a00      	cmp	r2, #0
   1aeb8:	d154      	bne.n	1af64 <_strtod_l+0x32c>
   1aeba:	4610      	mov	r0, r2
   1aebc:	2b30      	cmp	r3, #48	; 0x30
   1aebe:	d02a      	beq.n	1af16 <_strtod_l+0x2de>
   1aec0:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   1aec4:	2a08      	cmp	r2, #8
   1aec6:	f200 849d 	bhi.w	1b804 <_strtod_l+0xbcc>
   1aeca:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1aecc:	920a      	str	r2, [sp, #40]	; 0x28
   1aece:	4602      	mov	r2, r0
   1aed0:	2000      	movs	r0, #0
   1aed2:	4605      	mov	r5, r0
   1aed4:	3b30      	subs	r3, #48	; 0x30
   1aed6:	f100 0101 	add.w	r1, r0, #1
   1aeda:	d011      	beq.n	1af00 <_strtod_l+0x2c8>
   1aedc:	440a      	add	r2, r1
   1aede:	260a      	movs	r6, #10
   1aee0:	4629      	mov	r1, r5
   1aee2:	eb00 0c05 	add.w	ip, r0, r5
   1aee6:	4561      	cmp	r1, ip
   1aee8:	d11b      	bne.n	1af22 <_strtod_l+0x2ea>
   1aeea:	4428      	add	r0, r5
   1aeec:	2808      	cmp	r0, #8
   1aeee:	f100 0501 	add.w	r5, r0, #1
   1aef2:	dc2f      	bgt.n	1af54 <_strtod_l+0x31c>
   1aef4:	210a      	movs	r1, #10
   1aef6:	9806      	ldr	r0, [sp, #24]
   1aef8:	fb01 3300 	mla	r3, r1, r0, r3
   1aefc:	9306      	str	r3, [sp, #24]
   1aefe:	2100      	movs	r1, #0
   1af00:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1af02:	1c58      	adds	r0, r3, #1
   1af04:	9019      	str	r0, [sp, #100]	; 0x64
   1af06:	4608      	mov	r0, r1
   1af08:	785b      	ldrb	r3, [r3, #1]
   1af0a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   1af0e:	2909      	cmp	r1, #9
   1af10:	d9e0      	bls.n	1aed4 <_strtod_l+0x29c>
   1af12:	2101      	movs	r1, #1
   1af14:	e74a      	b.n	1adac <_strtod_l+0x174>
   1af16:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1af18:	3001      	adds	r0, #1
   1af1a:	1c5a      	adds	r2, r3, #1
   1af1c:	9219      	str	r2, [sp, #100]	; 0x64
   1af1e:	785b      	ldrb	r3, [r3, #1]
   1af20:	e7cc      	b.n	1aebc <_strtod_l+0x284>
   1af22:	3101      	adds	r1, #1
   1af24:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1af28:	f1be 0f08 	cmp.w	lr, #8
   1af2c:	dc03      	bgt.n	1af36 <_strtod_l+0x2fe>
   1af2e:	9f06      	ldr	r7, [sp, #24]
   1af30:	4377      	muls	r7, r6
   1af32:	9706      	str	r7, [sp, #24]
   1af34:	e7d7      	b.n	1aee6 <_strtod_l+0x2ae>
   1af36:	2910      	cmp	r1, #16
   1af38:	bfde      	ittt	le
   1af3a:	9f05      	ldrle	r7, [sp, #20]
   1af3c:	4377      	mulle	r7, r6
   1af3e:	9705      	strle	r7, [sp, #20]
   1af40:	e7d1      	b.n	1aee6 <_strtod_l+0x2ae>
   1af42:	bf00      	nop
   1af44:	00020778 	.word	0x00020778
   1af48:	00020745 	.word	0x00020745
   1af4c:	00020908 	.word	0x00020908
   1af50:	7ff00000 	.word	0x7ff00000
   1af54:	2d10      	cmp	r5, #16
   1af56:	bfdf      	itttt	le
   1af58:	210a      	movle	r1, #10
   1af5a:	9805      	ldrle	r0, [sp, #20]
   1af5c:	fb01 3300 	mlale	r3, r1, r0, r3
   1af60:	9305      	strle	r3, [sp, #20]
   1af62:	e7cc      	b.n	1aefe <_strtod_l+0x2c6>
   1af64:	4602      	mov	r2, r0
   1af66:	9d04      	ldr	r5, [sp, #16]
   1af68:	e7cf      	b.n	1af0a <_strtod_l+0x2d2>
   1af6a:	2101      	movs	r1, #1
   1af6c:	e724      	b.n	1adb8 <_strtod_l+0x180>
   1af6e:	2300      	movs	r3, #0
   1af70:	9307      	str	r3, [sp, #28]
   1af72:	1ca3      	adds	r3, r4, #2
   1af74:	9319      	str	r3, [sp, #100]	; 0x64
   1af76:	78a3      	ldrb	r3, [r4, #2]
   1af78:	e72f      	b.n	1adda <_strtod_l+0x1a2>
   1af7a:	2301      	movs	r3, #1
   1af7c:	e7f8      	b.n	1af70 <_strtod_l+0x338>
   1af7e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1af80:	1c5e      	adds	r6, r3, #1
   1af82:	9619      	str	r6, [sp, #100]	; 0x64
   1af84:	785b      	ldrb	r3, [r3, #1]
   1af86:	e72d      	b.n	1ade4 <_strtod_l+0x1ac>
   1af88:	fb0c 3e0e 	mla	lr, ip, lr, r3
   1af8c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   1af90:	e736      	b.n	1ae00 <_strtod_l+0x1c8>
   1af92:	9419      	str	r4, [sp, #100]	; 0x64
   1af94:	f04f 0900 	mov.w	r9, #0
   1af98:	e748      	b.n	1ae2c <_strtod_l+0x1f4>
   1af9a:	2b69      	cmp	r3, #105	; 0x69
   1af9c:	f43f af5b 	beq.w	1ae56 <_strtod_l+0x21e>
   1afa0:	2b6e      	cmp	r3, #110	; 0x6e
   1afa2:	f47f aea7 	bne.w	1acf4 <_strtod_l+0xbc>
   1afa6:	498c      	ldr	r1, [pc, #560]	; (1b1d8 <_strtod_l+0x5a0>)
   1afa8:	a819      	add	r0, sp, #100	; 0x64
   1afaa:	f002 f966 	bl	1d27a <__match>
   1afae:	2800      	cmp	r0, #0
   1afb0:	f43f aea0 	beq.w	1acf4 <_strtod_l+0xbc>
   1afb4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1afb6:	781b      	ldrb	r3, [r3, #0]
   1afb8:	2b28      	cmp	r3, #40	; 0x28
   1afba:	d10e      	bne.n	1afda <_strtod_l+0x3a2>
   1afbc:	aa1c      	add	r2, sp, #112	; 0x70
   1afbe:	4987      	ldr	r1, [pc, #540]	; (1b1dc <_strtod_l+0x5a4>)
   1afc0:	a819      	add	r0, sp, #100	; 0x64
   1afc2:	f002 f96d 	bl	1d2a0 <__hexnan>
   1afc6:	2805      	cmp	r0, #5
   1afc8:	d107      	bne.n	1afda <_strtod_l+0x3a2>
   1afca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1afcc:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1afd0:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   1afd4:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   1afd8:	e66e      	b.n	1acb8 <_strtod_l+0x80>
   1afda:	f8df b210 	ldr.w	fp, [pc, #528]	; 1b1ec <_strtod_l+0x5b4>
   1afde:	e74e      	b.n	1ae7e <_strtod_l+0x246>
   1afe0:	9b04      	ldr	r3, [sp, #16]
   1afe2:	462c      	mov	r4, r5
   1afe4:	2b00      	cmp	r3, #0
   1afe6:	bf08      	it	eq
   1afe8:	462b      	moveq	r3, r5
   1afea:	2d10      	cmp	r5, #16
   1afec:	bfa8      	it	ge
   1afee:	2410      	movge	r4, #16
   1aff0:	9806      	ldr	r0, [sp, #24]
   1aff2:	eba9 0902 	sub.w	r9, r9, r2
   1aff6:	9304      	str	r3, [sp, #16]
   1aff8:	f7fd f956 	bl	182a8 <__aeabi_ui2d>
   1affc:	2c09      	cmp	r4, #9
   1affe:	4682      	mov	sl, r0
   1b000:	468b      	mov	fp, r1
   1b002:	dd13      	ble.n	1b02c <_strtod_l+0x3f4>
   1b004:	4b76      	ldr	r3, [pc, #472]	; (1b1e0 <_strtod_l+0x5a8>)
   1b006:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1b00a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1b00e:	f003 ff25 	bl	1ee5c <__aeabi_dmul>
   1b012:	4606      	mov	r6, r0
   1b014:	9805      	ldr	r0, [sp, #20]
   1b016:	460f      	mov	r7, r1
   1b018:	f7fd f946 	bl	182a8 <__aeabi_ui2d>
   1b01c:	4602      	mov	r2, r0
   1b01e:	460b      	mov	r3, r1
   1b020:	4630      	mov	r0, r6
   1b022:	4639      	mov	r1, r7
   1b024:	f7fd f804 	bl	18030 <__adddf3>
   1b028:	4682      	mov	sl, r0
   1b02a:	468b      	mov	fp, r1
   1b02c:	2d0f      	cmp	r5, #15
   1b02e:	dc36      	bgt.n	1b09e <_strtod_l+0x466>
   1b030:	f1b9 0f00 	cmp.w	r9, #0
   1b034:	f43f ae40 	beq.w	1acb8 <_strtod_l+0x80>
   1b038:	dd24      	ble.n	1b084 <_strtod_l+0x44c>
   1b03a:	f1b9 0f16 	cmp.w	r9, #22
   1b03e:	dc0b      	bgt.n	1b058 <_strtod_l+0x420>
   1b040:	4652      	mov	r2, sl
   1b042:	465b      	mov	r3, fp
   1b044:	4d66      	ldr	r5, [pc, #408]	; (1b1e0 <_strtod_l+0x5a8>)
   1b046:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   1b04a:	e9d9 0100 	ldrd	r0, r1, [r9]
   1b04e:	f003 ff05 	bl	1ee5c <__aeabi_dmul>
   1b052:	4682      	mov	sl, r0
   1b054:	468b      	mov	fp, r1
   1b056:	e62f      	b.n	1acb8 <_strtod_l+0x80>
   1b058:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1b05c:	4599      	cmp	r9, r3
   1b05e:	dc1e      	bgt.n	1b09e <_strtod_l+0x466>
   1b060:	4c5f      	ldr	r4, [pc, #380]	; (1b1e0 <_strtod_l+0x5a8>)
   1b062:	f1c5 050f 	rsb	r5, r5, #15
   1b066:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   1b06a:	eba9 0505 	sub.w	r5, r9, r5
   1b06e:	4652      	mov	r2, sl
   1b070:	e9d1 0100 	ldrd	r0, r1, [r1]
   1b074:	465b      	mov	r3, fp
   1b076:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1b07a:	f003 feef 	bl	1ee5c <__aeabi_dmul>
   1b07e:	e9d4 2300 	ldrd	r2, r3, [r4]
   1b082:	e7e4      	b.n	1b04e <_strtod_l+0x416>
   1b084:	f119 0f16 	cmn.w	r9, #22
   1b088:	db09      	blt.n	1b09e <_strtod_l+0x466>
   1b08a:	4d55      	ldr	r5, [pc, #340]	; (1b1e0 <_strtod_l+0x5a8>)
   1b08c:	4650      	mov	r0, sl
   1b08e:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   1b092:	e9d9 2300 	ldrd	r2, r3, [r9]
   1b096:	4659      	mov	r1, fp
   1b098:	f004 f80a 	bl	1f0b0 <__aeabi_ddiv>
   1b09c:	e7d9      	b.n	1b052 <_strtod_l+0x41a>
   1b09e:	1b2c      	subs	r4, r5, r4
   1b0a0:	444c      	add	r4, r9
   1b0a2:	2c00      	cmp	r4, #0
   1b0a4:	dd73      	ble.n	1b18e <_strtod_l+0x556>
   1b0a6:	f014 030f 	ands.w	r3, r4, #15
   1b0aa:	d00a      	beq.n	1b0c2 <_strtod_l+0x48a>
   1b0ac:	494c      	ldr	r1, [pc, #304]	; (1b1e0 <_strtod_l+0x5a8>)
   1b0ae:	4652      	mov	r2, sl
   1b0b0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   1b0b4:	e9d1 0100 	ldrd	r0, r1, [r1]
   1b0b8:	465b      	mov	r3, fp
   1b0ba:	f003 fecf 	bl	1ee5c <__aeabi_dmul>
   1b0be:	4682      	mov	sl, r0
   1b0c0:	468b      	mov	fp, r1
   1b0c2:	f034 040f 	bics.w	r4, r4, #15
   1b0c6:	d054      	beq.n	1b172 <_strtod_l+0x53a>
   1b0c8:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   1b0cc:	dd27      	ble.n	1b11e <_strtod_l+0x4e6>
   1b0ce:	f04f 0900 	mov.w	r9, #0
   1b0d2:	f8cd 9010 	str.w	r9, [sp, #16]
   1b0d6:	f8cd 901c 	str.w	r9, [sp, #28]
   1b0da:	f8cd 9018 	str.w	r9, [sp, #24]
   1b0de:	2322      	movs	r3, #34	; 0x22
   1b0e0:	f04f 0a00 	mov.w	sl, #0
   1b0e4:	f8df b108 	ldr.w	fp, [pc, #264]	; 1b1f0 <_strtod_l+0x5b8>
   1b0e8:	f8c8 3000 	str.w	r3, [r8]
   1b0ec:	9b07      	ldr	r3, [sp, #28]
   1b0ee:	2b00      	cmp	r3, #0
   1b0f0:	f43f ade2 	beq.w	1acb8 <_strtod_l+0x80>
   1b0f4:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b0f6:	4640      	mov	r0, r8
   1b0f8:	f002 fa26 	bl	1d548 <_Bfree>
   1b0fc:	9906      	ldr	r1, [sp, #24]
   1b0fe:	4640      	mov	r0, r8
   1b100:	f002 fa22 	bl	1d548 <_Bfree>
   1b104:	9904      	ldr	r1, [sp, #16]
   1b106:	4640      	mov	r0, r8
   1b108:	f002 fa1e 	bl	1d548 <_Bfree>
   1b10c:	9907      	ldr	r1, [sp, #28]
   1b10e:	4640      	mov	r0, r8
   1b110:	f002 fa1a 	bl	1d548 <_Bfree>
   1b114:	4649      	mov	r1, r9
   1b116:	4640      	mov	r0, r8
   1b118:	f002 fa16 	bl	1d548 <_Bfree>
   1b11c:	e5cc      	b.n	1acb8 <_strtod_l+0x80>
   1b11e:	2300      	movs	r3, #0
   1b120:	4650      	mov	r0, sl
   1b122:	4659      	mov	r1, fp
   1b124:	461f      	mov	r7, r3
   1b126:	4e2f      	ldr	r6, [pc, #188]	; (1b1e4 <_strtod_l+0x5ac>)
   1b128:	1124      	asrs	r4, r4, #4
   1b12a:	2c01      	cmp	r4, #1
   1b12c:	dc24      	bgt.n	1b178 <_strtod_l+0x540>
   1b12e:	b10b      	cbz	r3, 1b134 <_strtod_l+0x4fc>
   1b130:	4682      	mov	sl, r0
   1b132:	468b      	mov	fp, r1
   1b134:	4b2b      	ldr	r3, [pc, #172]	; (1b1e4 <_strtod_l+0x5ac>)
   1b136:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1b13a:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   1b13e:	4652      	mov	r2, sl
   1b140:	e9d7 0100 	ldrd	r0, r1, [r7]
   1b144:	465b      	mov	r3, fp
   1b146:	f003 fe89 	bl	1ee5c <__aeabi_dmul>
   1b14a:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1b14e:	468b      	mov	fp, r1
   1b150:	460a      	mov	r2, r1
   1b152:	0d1b      	lsrs	r3, r3, #20
   1b154:	4924      	ldr	r1, [pc, #144]	; (1b1e8 <_strtod_l+0x5b0>)
   1b156:	051b      	lsls	r3, r3, #20
   1b158:	428b      	cmp	r3, r1
   1b15a:	4682      	mov	sl, r0
   1b15c:	d8b7      	bhi.n	1b0ce <_strtod_l+0x496>
   1b15e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1b162:	428b      	cmp	r3, r1
   1b164:	bf86      	itte	hi
   1b166:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   1b16a:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 1b1f4 <_strtod_l+0x5bc>
   1b16e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   1b172:	2300      	movs	r3, #0
   1b174:	9305      	str	r3, [sp, #20]
   1b176:	e070      	b.n	1b25a <_strtod_l+0x622>
   1b178:	07e2      	lsls	r2, r4, #31
   1b17a:	d504      	bpl.n	1b186 <_strtod_l+0x54e>
   1b17c:	e9d6 2300 	ldrd	r2, r3, [r6]
   1b180:	f003 fe6c 	bl	1ee5c <__aeabi_dmul>
   1b184:	2301      	movs	r3, #1
   1b186:	3701      	adds	r7, #1
   1b188:	1064      	asrs	r4, r4, #1
   1b18a:	3608      	adds	r6, #8
   1b18c:	e7cd      	b.n	1b12a <_strtod_l+0x4f2>
   1b18e:	d0f0      	beq.n	1b172 <_strtod_l+0x53a>
   1b190:	4264      	negs	r4, r4
   1b192:	f014 020f 	ands.w	r2, r4, #15
   1b196:	d00a      	beq.n	1b1ae <_strtod_l+0x576>
   1b198:	4b11      	ldr	r3, [pc, #68]	; (1b1e0 <_strtod_l+0x5a8>)
   1b19a:	4650      	mov	r0, sl
   1b19c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1b1a0:	4659      	mov	r1, fp
   1b1a2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b1a6:	f003 ff83 	bl	1f0b0 <__aeabi_ddiv>
   1b1aa:	4682      	mov	sl, r0
   1b1ac:	468b      	mov	fp, r1
   1b1ae:	1124      	asrs	r4, r4, #4
   1b1b0:	d0df      	beq.n	1b172 <_strtod_l+0x53a>
   1b1b2:	2c1f      	cmp	r4, #31
   1b1b4:	dd20      	ble.n	1b1f8 <_strtod_l+0x5c0>
   1b1b6:	f04f 0900 	mov.w	r9, #0
   1b1ba:	f8cd 9010 	str.w	r9, [sp, #16]
   1b1be:	f8cd 901c 	str.w	r9, [sp, #28]
   1b1c2:	f8cd 9018 	str.w	r9, [sp, #24]
   1b1c6:	2322      	movs	r3, #34	; 0x22
   1b1c8:	f04f 0a00 	mov.w	sl, #0
   1b1cc:	f04f 0b00 	mov.w	fp, #0
   1b1d0:	f8c8 3000 	str.w	r3, [r8]
   1b1d4:	e78a      	b.n	1b0ec <_strtod_l+0x4b4>
   1b1d6:	bf00      	nop
   1b1d8:	0002074d 	.word	0x0002074d
   1b1dc:	0002078c 	.word	0x0002078c
   1b1e0:	00020940 	.word	0x00020940
   1b1e4:	00020918 	.word	0x00020918
   1b1e8:	7ca00000 	.word	0x7ca00000
   1b1ec:	fff80000 	.word	0xfff80000
   1b1f0:	7ff00000 	.word	0x7ff00000
   1b1f4:	7fefffff 	.word	0x7fefffff
   1b1f8:	f014 0310 	ands.w	r3, r4, #16
   1b1fc:	bf18      	it	ne
   1b1fe:	236a      	movne	r3, #106	; 0x6a
   1b200:	4650      	mov	r0, sl
   1b202:	9305      	str	r3, [sp, #20]
   1b204:	4659      	mov	r1, fp
   1b206:	2300      	movs	r3, #0
   1b208:	4e9f      	ldr	r6, [pc, #636]	; (1b488 <_strtod_l+0x850>)
   1b20a:	2c00      	cmp	r4, #0
   1b20c:	f300 8109 	bgt.w	1b422 <_strtod_l+0x7ea>
   1b210:	b10b      	cbz	r3, 1b216 <_strtod_l+0x5de>
   1b212:	4682      	mov	sl, r0
   1b214:	468b      	mov	fp, r1
   1b216:	9b05      	ldr	r3, [sp, #20]
   1b218:	b1bb      	cbz	r3, 1b24a <_strtod_l+0x612>
   1b21a:	f3cb 530a 	ubfx	r3, fp, #20, #11
   1b21e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1b222:	2b00      	cmp	r3, #0
   1b224:	4659      	mov	r1, fp
   1b226:	dd10      	ble.n	1b24a <_strtod_l+0x612>
   1b228:	2b1f      	cmp	r3, #31
   1b22a:	f340 8104 	ble.w	1b436 <_strtod_l+0x7fe>
   1b22e:	2b34      	cmp	r3, #52	; 0x34
   1b230:	bfd8      	it	le
   1b232:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   1b236:	f04f 0a00 	mov.w	sl, #0
   1b23a:	bfcf      	iteee	gt
   1b23c:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   1b240:	3b20      	suble	r3, #32
   1b242:	fa02 f303 	lslle.w	r3, r2, r3
   1b246:	ea03 0b01 	andle.w	fp, r3, r1
   1b24a:	2200      	movs	r2, #0
   1b24c:	2300      	movs	r3, #0
   1b24e:	4650      	mov	r0, sl
   1b250:	4659      	mov	r1, fp
   1b252:	f004 f86b 	bl	1f32c <__aeabi_dcmpeq>
   1b256:	2800      	cmp	r0, #0
   1b258:	d1ad      	bne.n	1b1b6 <_strtod_l+0x57e>
   1b25a:	9b06      	ldr	r3, [sp, #24]
   1b25c:	9a04      	ldr	r2, [sp, #16]
   1b25e:	9300      	str	r3, [sp, #0]
   1b260:	990a      	ldr	r1, [sp, #40]	; 0x28
   1b262:	462b      	mov	r3, r5
   1b264:	4640      	mov	r0, r8
   1b266:	f002 f9c1 	bl	1d5ec <__s2b>
   1b26a:	9007      	str	r0, [sp, #28]
   1b26c:	2800      	cmp	r0, #0
   1b26e:	f43f af2e 	beq.w	1b0ce <_strtod_l+0x496>
   1b272:	f1b9 0f00 	cmp.w	r9, #0
   1b276:	f1c9 0300 	rsb	r3, r9, #0
   1b27a:	bfa8      	it	ge
   1b27c:	2300      	movge	r3, #0
   1b27e:	930e      	str	r3, [sp, #56]	; 0x38
   1b280:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   1b284:	f04f 0900 	mov.w	r9, #0
   1b288:	930f      	str	r3, [sp, #60]	; 0x3c
   1b28a:	f8cd 9010 	str.w	r9, [sp, #16]
   1b28e:	9b07      	ldr	r3, [sp, #28]
   1b290:	4640      	mov	r0, r8
   1b292:	6859      	ldr	r1, [r3, #4]
   1b294:	f002 f924 	bl	1d4e0 <_Balloc>
   1b298:	9006      	str	r0, [sp, #24]
   1b29a:	2800      	cmp	r0, #0
   1b29c:	f43f af1f 	beq.w	1b0de <_strtod_l+0x4a6>
   1b2a0:	9b07      	ldr	r3, [sp, #28]
   1b2a2:	300c      	adds	r0, #12
   1b2a4:	691a      	ldr	r2, [r3, #16]
   1b2a6:	f103 010c 	add.w	r1, r3, #12
   1b2aa:	3202      	adds	r2, #2
   1b2ac:	0092      	lsls	r2, r2, #2
   1b2ae:	f7fd ff7c 	bl	191aa <memcpy>
   1b2b2:	ab1c      	add	r3, sp, #112	; 0x70
   1b2b4:	9301      	str	r3, [sp, #4]
   1b2b6:	ab1b      	add	r3, sp, #108	; 0x6c
   1b2b8:	9300      	str	r3, [sp, #0]
   1b2ba:	4652      	mov	r2, sl
   1b2bc:	465b      	mov	r3, fp
   1b2be:	4640      	mov	r0, r8
   1b2c0:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   1b2c4:	f002 fc42 	bl	1db4c <__d2b>
   1b2c8:	901a      	str	r0, [sp, #104]	; 0x68
   1b2ca:	2800      	cmp	r0, #0
   1b2cc:	f43f af07 	beq.w	1b0de <_strtod_l+0x4a6>
   1b2d0:	2101      	movs	r1, #1
   1b2d2:	4640      	mov	r0, r8
   1b2d4:	f002 fa16 	bl	1d704 <__i2b>
   1b2d8:	9004      	str	r0, [sp, #16]
   1b2da:	4603      	mov	r3, r0
   1b2dc:	2800      	cmp	r0, #0
   1b2de:	f43f aefe 	beq.w	1b0de <_strtod_l+0x4a6>
   1b2e2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1b2e4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1b2e6:	2d00      	cmp	r5, #0
   1b2e8:	bfab      	itete	ge
   1b2ea:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   1b2ec:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   1b2ee:	195e      	addge	r6, r3, r5
   1b2f0:	1b5c      	sublt	r4, r3, r5
   1b2f2:	9b05      	ldr	r3, [sp, #20]
   1b2f4:	bfa8      	it	ge
   1b2f6:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   1b2f8:	eba5 0503 	sub.w	r5, r5, r3
   1b2fc:	4415      	add	r5, r2
   1b2fe:	4b63      	ldr	r3, [pc, #396]	; (1b48c <_strtod_l+0x854>)
   1b300:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   1b304:	bfb8      	it	lt
   1b306:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   1b308:	429d      	cmp	r5, r3
   1b30a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   1b30e:	f280 80a4 	bge.w	1b45a <_strtod_l+0x822>
   1b312:	1b5b      	subs	r3, r3, r5
   1b314:	2b1f      	cmp	r3, #31
   1b316:	eba2 0203 	sub.w	r2, r2, r3
   1b31a:	f04f 0701 	mov.w	r7, #1
   1b31e:	f300 8091 	bgt.w	1b444 <_strtod_l+0x80c>
   1b322:	2500      	movs	r5, #0
   1b324:	fa07 f303 	lsl.w	r3, r7, r3
   1b328:	9314      	str	r3, [sp, #80]	; 0x50
   1b32a:	18b7      	adds	r7, r6, r2
   1b32c:	9b05      	ldr	r3, [sp, #20]
   1b32e:	42be      	cmp	r6, r7
   1b330:	4414      	add	r4, r2
   1b332:	441c      	add	r4, r3
   1b334:	4633      	mov	r3, r6
   1b336:	bfa8      	it	ge
   1b338:	463b      	movge	r3, r7
   1b33a:	42a3      	cmp	r3, r4
   1b33c:	bfa8      	it	ge
   1b33e:	4623      	movge	r3, r4
   1b340:	2b00      	cmp	r3, #0
   1b342:	bfc2      	ittt	gt
   1b344:	1aff      	subgt	r7, r7, r3
   1b346:	1ae4      	subgt	r4, r4, r3
   1b348:	1af6      	subgt	r6, r6, r3
   1b34a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1b34c:	b1bb      	cbz	r3, 1b37e <_strtod_l+0x746>
   1b34e:	461a      	mov	r2, r3
   1b350:	9904      	ldr	r1, [sp, #16]
   1b352:	4640      	mov	r0, r8
   1b354:	f002 fa6c 	bl	1d830 <__pow5mult>
   1b358:	9004      	str	r0, [sp, #16]
   1b35a:	2800      	cmp	r0, #0
   1b35c:	f43f aebf 	beq.w	1b0de <_strtod_l+0x4a6>
   1b360:	4601      	mov	r1, r0
   1b362:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1b364:	4640      	mov	r0, r8
   1b366:	f002 f9d6 	bl	1d716 <__multiply>
   1b36a:	9008      	str	r0, [sp, #32]
   1b36c:	2800      	cmp	r0, #0
   1b36e:	f43f aeb6 	beq.w	1b0de <_strtod_l+0x4a6>
   1b372:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b374:	4640      	mov	r0, r8
   1b376:	f002 f8e7 	bl	1d548 <_Bfree>
   1b37a:	9b08      	ldr	r3, [sp, #32]
   1b37c:	931a      	str	r3, [sp, #104]	; 0x68
   1b37e:	2f00      	cmp	r7, #0
   1b380:	dc6f      	bgt.n	1b462 <_strtod_l+0x82a>
   1b382:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1b384:	2b00      	cmp	r3, #0
   1b386:	d175      	bne.n	1b474 <_strtod_l+0x83c>
   1b388:	2c00      	cmp	r4, #0
   1b38a:	dd08      	ble.n	1b39e <_strtod_l+0x766>
   1b38c:	4622      	mov	r2, r4
   1b38e:	9906      	ldr	r1, [sp, #24]
   1b390:	4640      	mov	r0, r8
   1b392:	f002 fa9b 	bl	1d8cc <__lshift>
   1b396:	9006      	str	r0, [sp, #24]
   1b398:	2800      	cmp	r0, #0
   1b39a:	f43f aea0 	beq.w	1b0de <_strtod_l+0x4a6>
   1b39e:	2e00      	cmp	r6, #0
   1b3a0:	dd08      	ble.n	1b3b4 <_strtod_l+0x77c>
   1b3a2:	4632      	mov	r2, r6
   1b3a4:	9904      	ldr	r1, [sp, #16]
   1b3a6:	4640      	mov	r0, r8
   1b3a8:	f002 fa90 	bl	1d8cc <__lshift>
   1b3ac:	9004      	str	r0, [sp, #16]
   1b3ae:	2800      	cmp	r0, #0
   1b3b0:	f43f ae95 	beq.w	1b0de <_strtod_l+0x4a6>
   1b3b4:	9a06      	ldr	r2, [sp, #24]
   1b3b6:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b3b8:	4640      	mov	r0, r8
   1b3ba:	f002 faf2 	bl	1d9a2 <__mdiff>
   1b3be:	4681      	mov	r9, r0
   1b3c0:	2800      	cmp	r0, #0
   1b3c2:	f43f ae8c 	beq.w	1b0de <_strtod_l+0x4a6>
   1b3c6:	2400      	movs	r4, #0
   1b3c8:	68c3      	ldr	r3, [r0, #12]
   1b3ca:	9904      	ldr	r1, [sp, #16]
   1b3cc:	60c4      	str	r4, [r0, #12]
   1b3ce:	9308      	str	r3, [sp, #32]
   1b3d0:	f002 facd 	bl	1d96e <__mcmp>
   1b3d4:	42a0      	cmp	r0, r4
   1b3d6:	da5b      	bge.n	1b490 <_strtod_l+0x858>
   1b3d8:	9b08      	ldr	r3, [sp, #32]
   1b3da:	b9f3      	cbnz	r3, 1b41a <_strtod_l+0x7e2>
   1b3dc:	f1ba 0f00 	cmp.w	sl, #0
   1b3e0:	d11b      	bne.n	1b41a <_strtod_l+0x7e2>
   1b3e2:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b3e6:	b9c3      	cbnz	r3, 1b41a <_strtod_l+0x7e2>
   1b3e8:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b3ec:	0d1b      	lsrs	r3, r3, #20
   1b3ee:	051b      	lsls	r3, r3, #20
   1b3f0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1b3f4:	d911      	bls.n	1b41a <_strtod_l+0x7e2>
   1b3f6:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1b3fa:	b91b      	cbnz	r3, 1b404 <_strtod_l+0x7cc>
   1b3fc:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1b400:	2b01      	cmp	r3, #1
   1b402:	dd0a      	ble.n	1b41a <_strtod_l+0x7e2>
   1b404:	4649      	mov	r1, r9
   1b406:	2201      	movs	r2, #1
   1b408:	4640      	mov	r0, r8
   1b40a:	f002 fa5f 	bl	1d8cc <__lshift>
   1b40e:	9904      	ldr	r1, [sp, #16]
   1b410:	4681      	mov	r9, r0
   1b412:	f002 faac 	bl	1d96e <__mcmp>
   1b416:	2800      	cmp	r0, #0
   1b418:	dc6b      	bgt.n	1b4f2 <_strtod_l+0x8ba>
   1b41a:	9b05      	ldr	r3, [sp, #20]
   1b41c:	2b00      	cmp	r3, #0
   1b41e:	d175      	bne.n	1b50c <_strtod_l+0x8d4>
   1b420:	e668      	b.n	1b0f4 <_strtod_l+0x4bc>
   1b422:	07e2      	lsls	r2, r4, #31
   1b424:	d504      	bpl.n	1b430 <_strtod_l+0x7f8>
   1b426:	e9d6 2300 	ldrd	r2, r3, [r6]
   1b42a:	f003 fd17 	bl	1ee5c <__aeabi_dmul>
   1b42e:	2301      	movs	r3, #1
   1b430:	1064      	asrs	r4, r4, #1
   1b432:	3608      	adds	r6, #8
   1b434:	e6e9      	b.n	1b20a <_strtod_l+0x5d2>
   1b436:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b43a:	fa02 f303 	lsl.w	r3, r2, r3
   1b43e:	ea03 0a0a 	and.w	sl, r3, sl
   1b442:	e702      	b.n	1b24a <_strtod_l+0x612>
   1b444:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   1b448:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   1b44c:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   1b450:	35e2      	adds	r5, #226	; 0xe2
   1b452:	fa07 f505 	lsl.w	r5, r7, r5
   1b456:	9714      	str	r7, [sp, #80]	; 0x50
   1b458:	e767      	b.n	1b32a <_strtod_l+0x6f2>
   1b45a:	2301      	movs	r3, #1
   1b45c:	2500      	movs	r5, #0
   1b45e:	9314      	str	r3, [sp, #80]	; 0x50
   1b460:	e763      	b.n	1b32a <_strtod_l+0x6f2>
   1b462:	463a      	mov	r2, r7
   1b464:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b466:	4640      	mov	r0, r8
   1b468:	f002 fa30 	bl	1d8cc <__lshift>
   1b46c:	901a      	str	r0, [sp, #104]	; 0x68
   1b46e:	2800      	cmp	r0, #0
   1b470:	d187      	bne.n	1b382 <_strtod_l+0x74a>
   1b472:	e634      	b.n	1b0de <_strtod_l+0x4a6>
   1b474:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1b476:	9906      	ldr	r1, [sp, #24]
   1b478:	4640      	mov	r0, r8
   1b47a:	f002 f9d9 	bl	1d830 <__pow5mult>
   1b47e:	9006      	str	r0, [sp, #24]
   1b480:	2800      	cmp	r0, #0
   1b482:	d181      	bne.n	1b388 <_strtod_l+0x750>
   1b484:	e62b      	b.n	1b0de <_strtod_l+0x4a6>
   1b486:	bf00      	nop
   1b488:	000207a0 	.word	0x000207a0
   1b48c:	fffffc02 	.word	0xfffffc02
   1b490:	f040 8086 	bne.w	1b5a0 <_strtod_l+0x968>
   1b494:	9a08      	ldr	r2, [sp, #32]
   1b496:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b49a:	b332      	cbz	r2, 1b4ea <_strtod_l+0x8b2>
   1b49c:	4aac      	ldr	r2, [pc, #688]	; (1b750 <_strtod_l+0xb18>)
   1b49e:	4659      	mov	r1, fp
   1b4a0:	4293      	cmp	r3, r2
   1b4a2:	d152      	bne.n	1b54a <_strtod_l+0x912>
   1b4a4:	9b05      	ldr	r3, [sp, #20]
   1b4a6:	4650      	mov	r0, sl
   1b4a8:	b1d3      	cbz	r3, 1b4e0 <_strtod_l+0x8a8>
   1b4aa:	4aaa      	ldr	r2, [pc, #680]	; (1b754 <_strtod_l+0xb1c>)
   1b4ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1b4b0:	400a      	ands	r2, r1
   1b4b2:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   1b4b6:	d816      	bhi.n	1b4e6 <_strtod_l+0x8ae>
   1b4b8:	0d12      	lsrs	r2, r2, #20
   1b4ba:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   1b4be:	fa04 f303 	lsl.w	r3, r4, r3
   1b4c2:	4283      	cmp	r3, r0
   1b4c4:	d141      	bne.n	1b54a <_strtod_l+0x912>
   1b4c6:	4aa4      	ldr	r2, [pc, #656]	; (1b758 <_strtod_l+0xb20>)
   1b4c8:	4291      	cmp	r1, r2
   1b4ca:	d102      	bne.n	1b4d2 <_strtod_l+0x89a>
   1b4cc:	3301      	adds	r3, #1
   1b4ce:	f43f ae06 	beq.w	1b0de <_strtod_l+0x4a6>
   1b4d2:	4ba0      	ldr	r3, [pc, #640]	; (1b754 <_strtod_l+0xb1c>)
   1b4d4:	f04f 0a00 	mov.w	sl, #0
   1b4d8:	400b      	ands	r3, r1
   1b4da:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   1b4de:	e79c      	b.n	1b41a <_strtod_l+0x7e2>
   1b4e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1b4e4:	e7ed      	b.n	1b4c2 <_strtod_l+0x88a>
   1b4e6:	4623      	mov	r3, r4
   1b4e8:	e7eb      	b.n	1b4c2 <_strtod_l+0x88a>
   1b4ea:	bb73      	cbnz	r3, 1b54a <_strtod_l+0x912>
   1b4ec:	f1ba 0f00 	cmp.w	sl, #0
   1b4f0:	d12b      	bne.n	1b54a <_strtod_l+0x912>
   1b4f2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b4f6:	9a05      	ldr	r2, [sp, #20]
   1b4f8:	0d1b      	lsrs	r3, r3, #20
   1b4fa:	051b      	lsls	r3, r3, #20
   1b4fc:	b1e2      	cbz	r2, 1b538 <_strtod_l+0x900>
   1b4fe:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1b502:	dc19      	bgt.n	1b538 <_strtod_l+0x900>
   1b504:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1b508:	f77f ae5d 	ble.w	1b1c6 <_strtod_l+0x58e>
   1b50c:	4b93      	ldr	r3, [pc, #588]	; (1b75c <_strtod_l+0xb24>)
   1b50e:	4650      	mov	r0, sl
   1b510:	930d      	str	r3, [sp, #52]	; 0x34
   1b512:	2300      	movs	r3, #0
   1b514:	930c      	str	r3, [sp, #48]	; 0x30
   1b516:	4659      	mov	r1, fp
   1b518:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1b51c:	f003 fc9e 	bl	1ee5c <__aeabi_dmul>
   1b520:	4682      	mov	sl, r0
   1b522:	468b      	mov	fp, r1
   1b524:	2900      	cmp	r1, #0
   1b526:	f47f ade5 	bne.w	1b0f4 <_strtod_l+0x4bc>
   1b52a:	2800      	cmp	r0, #0
   1b52c:	f47f ade2 	bne.w	1b0f4 <_strtod_l+0x4bc>
   1b530:	2322      	movs	r3, #34	; 0x22
   1b532:	f8c8 3000 	str.w	r3, [r8]
   1b536:	e5dd      	b.n	1b0f4 <_strtod_l+0x4bc>
   1b538:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1b53c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   1b540:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1b544:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   1b548:	e767      	b.n	1b41a <_strtod_l+0x7e2>
   1b54a:	b19d      	cbz	r5, 1b574 <_strtod_l+0x93c>
   1b54c:	ea15 0f0b 	tst.w	r5, fp
   1b550:	f43f af63 	beq.w	1b41a <_strtod_l+0x7e2>
   1b554:	9b08      	ldr	r3, [sp, #32]
   1b556:	9a05      	ldr	r2, [sp, #20]
   1b558:	4650      	mov	r0, sl
   1b55a:	4659      	mov	r1, fp
   1b55c:	b173      	cbz	r3, 1b57c <_strtod_l+0x944>
   1b55e:	f7ff fb49 	bl	1abf4 <sulp>
   1b562:	4602      	mov	r2, r0
   1b564:	460b      	mov	r3, r1
   1b566:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b56a:	f7fc fd61 	bl	18030 <__adddf3>
   1b56e:	4682      	mov	sl, r0
   1b570:	468b      	mov	fp, r1
   1b572:	e752      	b.n	1b41a <_strtod_l+0x7e2>
   1b574:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1b576:	ea13 0f0a 	tst.w	r3, sl
   1b57a:	e7e9      	b.n	1b550 <_strtod_l+0x918>
   1b57c:	f7ff fb3a 	bl	1abf4 <sulp>
   1b580:	4602      	mov	r2, r0
   1b582:	460b      	mov	r3, r1
   1b584:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b588:	f7fc fd50 	bl	1802c <__aeabi_dsub>
   1b58c:	2200      	movs	r2, #0
   1b58e:	2300      	movs	r3, #0
   1b590:	4682      	mov	sl, r0
   1b592:	468b      	mov	fp, r1
   1b594:	f003 feca 	bl	1f32c <__aeabi_dcmpeq>
   1b598:	2800      	cmp	r0, #0
   1b59a:	f47f ae14 	bne.w	1b1c6 <_strtod_l+0x58e>
   1b59e:	e73c      	b.n	1b41a <_strtod_l+0x7e2>
   1b5a0:	9904      	ldr	r1, [sp, #16]
   1b5a2:	4648      	mov	r0, r9
   1b5a4:	f002 fb21 	bl	1dbea <__ratio>
   1b5a8:	2200      	movs	r2, #0
   1b5aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1b5ae:	4606      	mov	r6, r0
   1b5b0:	460f      	mov	r7, r1
   1b5b2:	f003 fecf 	bl	1f354 <__aeabi_dcmple>
   1b5b6:	2800      	cmp	r0, #0
   1b5b8:	d070      	beq.n	1b69c <_strtod_l+0xa64>
   1b5ba:	9b08      	ldr	r3, [sp, #32]
   1b5bc:	2b00      	cmp	r3, #0
   1b5be:	d043      	beq.n	1b648 <_strtod_l+0xa10>
   1b5c0:	2600      	movs	r6, #0
   1b5c2:	4f67      	ldr	r7, [pc, #412]	; (1b760 <_strtod_l+0xb28>)
   1b5c4:	4d66      	ldr	r5, [pc, #408]	; (1b760 <_strtod_l+0xb28>)
   1b5c6:	4b63      	ldr	r3, [pc, #396]	; (1b754 <_strtod_l+0xb1c>)
   1b5c8:	ea0b 0303 	and.w	r3, fp, r3
   1b5cc:	9314      	str	r3, [sp, #80]	; 0x50
   1b5ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b5d0:	4b64      	ldr	r3, [pc, #400]	; (1b764 <_strtod_l+0xb2c>)
   1b5d2:	429a      	cmp	r2, r3
   1b5d4:	f040 80ce 	bne.w	1b774 <_strtod_l+0xb3c>
   1b5d8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1b5dc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1b5e0:	4650      	mov	r0, sl
   1b5e2:	4659      	mov	r1, fp
   1b5e4:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   1b5e8:	f002 fa3a 	bl	1da60 <__ulp>
   1b5ec:	4602      	mov	r2, r0
   1b5ee:	460b      	mov	r3, r1
   1b5f0:	4630      	mov	r0, r6
   1b5f2:	4639      	mov	r1, r7
   1b5f4:	f003 fc32 	bl	1ee5c <__aeabi_dmul>
   1b5f8:	4652      	mov	r2, sl
   1b5fa:	465b      	mov	r3, fp
   1b5fc:	f7fc fd18 	bl	18030 <__adddf3>
   1b600:	4a54      	ldr	r2, [pc, #336]	; (1b754 <_strtod_l+0xb1c>)
   1b602:	4b59      	ldr	r3, [pc, #356]	; (1b768 <_strtod_l+0xb30>)
   1b604:	400a      	ands	r2, r1
   1b606:	429a      	cmp	r2, r3
   1b608:	4682      	mov	sl, r0
   1b60a:	d95d      	bls.n	1b6c8 <_strtod_l+0xa90>
   1b60c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1b60e:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   1b612:	429a      	cmp	r2, r3
   1b614:	d103      	bne.n	1b61e <_strtod_l+0x9e6>
   1b616:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1b618:	3301      	adds	r3, #1
   1b61a:	f43f ad60 	beq.w	1b0de <_strtod_l+0x4a6>
   1b61e:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1b622:	f8df b134 	ldr.w	fp, [pc, #308]	; 1b758 <_strtod_l+0xb20>
   1b626:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b628:	4640      	mov	r0, r8
   1b62a:	f001 ff8d 	bl	1d548 <_Bfree>
   1b62e:	9906      	ldr	r1, [sp, #24]
   1b630:	4640      	mov	r0, r8
   1b632:	f001 ff89 	bl	1d548 <_Bfree>
   1b636:	9904      	ldr	r1, [sp, #16]
   1b638:	4640      	mov	r0, r8
   1b63a:	f001 ff85 	bl	1d548 <_Bfree>
   1b63e:	4649      	mov	r1, r9
   1b640:	4640      	mov	r0, r8
   1b642:	f001 ff81 	bl	1d548 <_Bfree>
   1b646:	e622      	b.n	1b28e <_strtod_l+0x656>
   1b648:	f1ba 0f00 	cmp.w	sl, #0
   1b64c:	d118      	bne.n	1b680 <_strtod_l+0xa48>
   1b64e:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1b652:	b9e3      	cbnz	r3, 1b68e <_strtod_l+0xa56>
   1b654:	2200      	movs	r2, #0
   1b656:	4b42      	ldr	r3, [pc, #264]	; (1b760 <_strtod_l+0xb28>)
   1b658:	4630      	mov	r0, r6
   1b65a:	4639      	mov	r1, r7
   1b65c:	f003 fe70 	bl	1f340 <__aeabi_dcmplt>
   1b660:	b9c8      	cbnz	r0, 1b696 <_strtod_l+0xa5e>
   1b662:	2200      	movs	r2, #0
   1b664:	4b41      	ldr	r3, [pc, #260]	; (1b76c <_strtod_l+0xb34>)
   1b666:	4630      	mov	r0, r6
   1b668:	4639      	mov	r1, r7
   1b66a:	f003 fbf7 	bl	1ee5c <__aeabi_dmul>
   1b66e:	4604      	mov	r4, r0
   1b670:	460d      	mov	r5, r1
   1b672:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1b676:	9416      	str	r4, [sp, #88]	; 0x58
   1b678:	9317      	str	r3, [sp, #92]	; 0x5c
   1b67a:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   1b67e:	e7a2      	b.n	1b5c6 <_strtod_l+0x98e>
   1b680:	f1ba 0f01 	cmp.w	sl, #1
   1b684:	d103      	bne.n	1b68e <_strtod_l+0xa56>
   1b686:	f1bb 0f00 	cmp.w	fp, #0
   1b68a:	f43f ad9c 	beq.w	1b1c6 <_strtod_l+0x58e>
   1b68e:	2600      	movs	r6, #0
   1b690:	4f37      	ldr	r7, [pc, #220]	; (1b770 <_strtod_l+0xb38>)
   1b692:	2400      	movs	r4, #0
   1b694:	e796      	b.n	1b5c4 <_strtod_l+0x98c>
   1b696:	9c08      	ldr	r4, [sp, #32]
   1b698:	4d34      	ldr	r5, [pc, #208]	; (1b76c <_strtod_l+0xb34>)
   1b69a:	e7ea      	b.n	1b672 <_strtod_l+0xa3a>
   1b69c:	4b33      	ldr	r3, [pc, #204]	; (1b76c <_strtod_l+0xb34>)
   1b69e:	2200      	movs	r2, #0
   1b6a0:	4630      	mov	r0, r6
   1b6a2:	4639      	mov	r1, r7
   1b6a4:	f003 fbda 	bl	1ee5c <__aeabi_dmul>
   1b6a8:	9b08      	ldr	r3, [sp, #32]
   1b6aa:	4604      	mov	r4, r0
   1b6ac:	460d      	mov	r5, r1
   1b6ae:	b933      	cbnz	r3, 1b6be <_strtod_l+0xa86>
   1b6b0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1b6b4:	9010      	str	r0, [sp, #64]	; 0x40
   1b6b6:	9311      	str	r3, [sp, #68]	; 0x44
   1b6b8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1b6bc:	e783      	b.n	1b5c6 <_strtod_l+0x98e>
   1b6be:	4602      	mov	r2, r0
   1b6c0:	460b      	mov	r3, r1
   1b6c2:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1b6c6:	e7f7      	b.n	1b6b8 <_strtod_l+0xa80>
   1b6c8:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   1b6cc:	9b05      	ldr	r3, [sp, #20]
   1b6ce:	2b00      	cmp	r3, #0
   1b6d0:	d1a9      	bne.n	1b626 <_strtod_l+0x9ee>
   1b6d2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1b6d6:	0d1b      	lsrs	r3, r3, #20
   1b6d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b6da:	051b      	lsls	r3, r3, #20
   1b6dc:	429a      	cmp	r2, r3
   1b6de:	465e      	mov	r6, fp
   1b6e0:	d1a1      	bne.n	1b626 <_strtod_l+0x9ee>
   1b6e2:	4629      	mov	r1, r5
   1b6e4:	4620      	mov	r0, r4
   1b6e6:	f003 fe69 	bl	1f3bc <__aeabi_d2iz>
   1b6ea:	f7fc fded 	bl	182c8 <__aeabi_i2d>
   1b6ee:	460b      	mov	r3, r1
   1b6f0:	4602      	mov	r2, r0
   1b6f2:	4629      	mov	r1, r5
   1b6f4:	4620      	mov	r0, r4
   1b6f6:	f7fc fc99 	bl	1802c <__aeabi_dsub>
   1b6fa:	9b08      	ldr	r3, [sp, #32]
   1b6fc:	4604      	mov	r4, r0
   1b6fe:	460d      	mov	r5, r1
   1b700:	b933      	cbnz	r3, 1b710 <_strtod_l+0xad8>
   1b702:	f1ba 0f00 	cmp.w	sl, #0
   1b706:	d103      	bne.n	1b710 <_strtod_l+0xad8>
   1b708:	f3cb 0613 	ubfx	r6, fp, #0, #20
   1b70c:	2e00      	cmp	r6, #0
   1b70e:	d06c      	beq.n	1b7ea <_strtod_l+0xbb2>
   1b710:	a30b      	add	r3, pc, #44	; (adr r3, 1b740 <_strtod_l+0xb08>)
   1b712:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b716:	4620      	mov	r0, r4
   1b718:	4629      	mov	r1, r5
   1b71a:	f003 fe11 	bl	1f340 <__aeabi_dcmplt>
   1b71e:	2800      	cmp	r0, #0
   1b720:	f47f ace8 	bne.w	1b0f4 <_strtod_l+0x4bc>
   1b724:	a308      	add	r3, pc, #32	; (adr r3, 1b748 <_strtod_l+0xb10>)
   1b726:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b72a:	4620      	mov	r0, r4
   1b72c:	4629      	mov	r1, r5
   1b72e:	f003 fe25 	bl	1f37c <__aeabi_dcmpgt>
   1b732:	2800      	cmp	r0, #0
   1b734:	f43f af77 	beq.w	1b626 <_strtod_l+0x9ee>
   1b738:	e4dc      	b.n	1b0f4 <_strtod_l+0x4bc>
   1b73a:	bf00      	nop
   1b73c:	f3af 8000 	nop.w
   1b740:	94a03595 	.word	0x94a03595
   1b744:	3fdfffff 	.word	0x3fdfffff
   1b748:	35afe535 	.word	0x35afe535
   1b74c:	3fe00000 	.word	0x3fe00000
   1b750:	000fffff 	.word	0x000fffff
   1b754:	7ff00000 	.word	0x7ff00000
   1b758:	7fefffff 	.word	0x7fefffff
   1b75c:	39500000 	.word	0x39500000
   1b760:	3ff00000 	.word	0x3ff00000
   1b764:	7fe00000 	.word	0x7fe00000
   1b768:	7c9fffff 	.word	0x7c9fffff
   1b76c:	3fe00000 	.word	0x3fe00000
   1b770:	bff00000 	.word	0xbff00000
   1b774:	9b05      	ldr	r3, [sp, #20]
   1b776:	b313      	cbz	r3, 1b7be <_strtod_l+0xb86>
   1b778:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1b77a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1b77e:	d81e      	bhi.n	1b7be <_strtod_l+0xb86>
   1b780:	a325      	add	r3, pc, #148	; (adr r3, 1b818 <_strtod_l+0xbe0>)
   1b782:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b786:	4620      	mov	r0, r4
   1b788:	4629      	mov	r1, r5
   1b78a:	f003 fde3 	bl	1f354 <__aeabi_dcmple>
   1b78e:	b190      	cbz	r0, 1b7b6 <_strtod_l+0xb7e>
   1b790:	4629      	mov	r1, r5
   1b792:	4620      	mov	r0, r4
   1b794:	f7fc fdfe 	bl	18394 <__aeabi_d2uiz>
   1b798:	2800      	cmp	r0, #0
   1b79a:	bf08      	it	eq
   1b79c:	2001      	moveq	r0, #1
   1b79e:	f7fc fd83 	bl	182a8 <__aeabi_ui2d>
   1b7a2:	9b08      	ldr	r3, [sp, #32]
   1b7a4:	4604      	mov	r4, r0
   1b7a6:	460d      	mov	r5, r1
   1b7a8:	b9d3      	cbnz	r3, 1b7e0 <_strtod_l+0xba8>
   1b7aa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1b7ae:	9012      	str	r0, [sp, #72]	; 0x48
   1b7b0:	9313      	str	r3, [sp, #76]	; 0x4c
   1b7b2:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   1b7b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1b7b8:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1b7bc:	1a9f      	subs	r7, r3, r2
   1b7be:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1b7c2:	f002 f94d 	bl	1da60 <__ulp>
   1b7c6:	4602      	mov	r2, r0
   1b7c8:	460b      	mov	r3, r1
   1b7ca:	4630      	mov	r0, r6
   1b7cc:	4639      	mov	r1, r7
   1b7ce:	f003 fb45 	bl	1ee5c <__aeabi_dmul>
   1b7d2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1b7d6:	f7fc fc2b 	bl	18030 <__adddf3>
   1b7da:	4682      	mov	sl, r0
   1b7dc:	468b      	mov	fp, r1
   1b7de:	e775      	b.n	1b6cc <_strtod_l+0xa94>
   1b7e0:	4602      	mov	r2, r0
   1b7e2:	460b      	mov	r3, r1
   1b7e4:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   1b7e8:	e7e3      	b.n	1b7b2 <_strtod_l+0xb7a>
   1b7ea:	a30d      	add	r3, pc, #52	; (adr r3, 1b820 <_strtod_l+0xbe8>)
   1b7ec:	e9d3 2300 	ldrd	r2, r3, [r3]
   1b7f0:	f003 fda6 	bl	1f340 <__aeabi_dcmplt>
   1b7f4:	e79d      	b.n	1b732 <_strtod_l+0xafa>
   1b7f6:	2300      	movs	r3, #0
   1b7f8:	9309      	str	r3, [sp, #36]	; 0x24
   1b7fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b7fc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1b7fe:	6013      	str	r3, [r2, #0]
   1b800:	f7ff ba5e 	b.w	1acc0 <_strtod_l+0x88>
   1b804:	2b65      	cmp	r3, #101	; 0x65
   1b806:	f04f 0200 	mov.w	r2, #0
   1b80a:	f43f abae 	beq.w	1af6a <_strtod_l+0x332>
   1b80e:	4615      	mov	r5, r2
   1b810:	2101      	movs	r1, #1
   1b812:	f7ff bacd 	b.w	1adb0 <_strtod_l+0x178>
   1b816:	bf00      	nop
   1b818:	ffc00000 	.word	0xffc00000
   1b81c:	41dfffff 	.word	0x41dfffff
   1b820:	94a03595 	.word	0x94a03595
   1b824:	3fcfffff 	.word	0x3fcfffff

0001b828 <_strtod_r>:
_strtod_r():
   1b828:	4b05      	ldr	r3, [pc, #20]	; (1b840 <_strtod_r+0x18>)
   1b82a:	b410      	push	{r4}
   1b82c:	681b      	ldr	r3, [r3, #0]
   1b82e:	4c05      	ldr	r4, [pc, #20]	; (1b844 <_strtod_r+0x1c>)
   1b830:	6a1b      	ldr	r3, [r3, #32]
   1b832:	2b00      	cmp	r3, #0
   1b834:	bf08      	it	eq
   1b836:	4623      	moveq	r3, r4
   1b838:	bc10      	pop	{r4}
   1b83a:	f7ff b9fd 	b.w	1ac38 <_strtod_l>
   1b83e:	bf00      	nop
   1b840:	2007c0e0 	.word	0x2007c0e0
   1b844:	2007c144 	.word	0x2007c144

0001b848 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   1b848:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b84c:	4680      	mov	r8, r0
   1b84e:	4689      	mov	r9, r1
   1b850:	4692      	mov	sl, r2
   1b852:	461f      	mov	r7, r3
   1b854:	468b      	mov	fp, r1
   1b856:	465d      	mov	r5, fp
   1b858:	980a      	ldr	r0, [sp, #40]	; 0x28
   1b85a:	f815 4b01 	ldrb.w	r4, [r5], #1
   1b85e:	f7fd fbef 	bl	19040 <__locale_ctype_ptr_l>
   1b862:	4420      	add	r0, r4
   1b864:	7846      	ldrb	r6, [r0, #1]
   1b866:	f016 0608 	ands.w	r6, r6, #8
   1b86a:	d10b      	bne.n	1b884 <_strtol_l.isra.0+0x3c>
   1b86c:	2c2d      	cmp	r4, #45	; 0x2d
   1b86e:	d10b      	bne.n	1b888 <_strtol_l.isra.0+0x40>
   1b870:	2601      	movs	r6, #1
   1b872:	782c      	ldrb	r4, [r5, #0]
   1b874:	f10b 0502 	add.w	r5, fp, #2
   1b878:	b167      	cbz	r7, 1b894 <_strtol_l.isra.0+0x4c>
   1b87a:	2f10      	cmp	r7, #16
   1b87c:	d114      	bne.n	1b8a8 <_strtol_l.isra.0+0x60>
   1b87e:	2c30      	cmp	r4, #48	; 0x30
   1b880:	d00a      	beq.n	1b898 <_strtol_l.isra.0+0x50>
   1b882:	e011      	b.n	1b8a8 <_strtol_l.isra.0+0x60>
   1b884:	46ab      	mov	fp, r5
   1b886:	e7e6      	b.n	1b856 <_strtol_l.isra.0+0xe>
   1b888:	2c2b      	cmp	r4, #43	; 0x2b
   1b88a:	bf04      	itt	eq
   1b88c:	782c      	ldrbeq	r4, [r5, #0]
   1b88e:	f10b 0502 	addeq.w	r5, fp, #2
   1b892:	e7f1      	b.n	1b878 <_strtol_l.isra.0+0x30>
   1b894:	2c30      	cmp	r4, #48	; 0x30
   1b896:	d127      	bne.n	1b8e8 <_strtol_l.isra.0+0xa0>
   1b898:	782b      	ldrb	r3, [r5, #0]
   1b89a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   1b89e:	2b58      	cmp	r3, #88	; 0x58
   1b8a0:	d14b      	bne.n	1b93a <_strtol_l.isra.0+0xf2>
   1b8a2:	2710      	movs	r7, #16
   1b8a4:	786c      	ldrb	r4, [r5, #1]
   1b8a6:	3502      	adds	r5, #2
   1b8a8:	2e00      	cmp	r6, #0
   1b8aa:	bf0c      	ite	eq
   1b8ac:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   1b8b0:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   1b8b4:	2200      	movs	r2, #0
   1b8b6:	fbb1 fef7 	udiv	lr, r1, r7
   1b8ba:	4610      	mov	r0, r2
   1b8bc:	fb07 1c1e 	mls	ip, r7, lr, r1
   1b8c0:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   1b8c4:	2b09      	cmp	r3, #9
   1b8c6:	d811      	bhi.n	1b8ec <_strtol_l.isra.0+0xa4>
   1b8c8:	461c      	mov	r4, r3
   1b8ca:	42a7      	cmp	r7, r4
   1b8cc:	dd1d      	ble.n	1b90a <_strtol_l.isra.0+0xc2>
   1b8ce:	1c53      	adds	r3, r2, #1
   1b8d0:	d007      	beq.n	1b8e2 <_strtol_l.isra.0+0x9a>
   1b8d2:	4586      	cmp	lr, r0
   1b8d4:	d316      	bcc.n	1b904 <_strtol_l.isra.0+0xbc>
   1b8d6:	d101      	bne.n	1b8dc <_strtol_l.isra.0+0x94>
   1b8d8:	45a4      	cmp	ip, r4
   1b8da:	db13      	blt.n	1b904 <_strtol_l.isra.0+0xbc>
   1b8dc:	2201      	movs	r2, #1
   1b8de:	fb00 4007 	mla	r0, r0, r7, r4
   1b8e2:	f815 4b01 	ldrb.w	r4, [r5], #1
   1b8e6:	e7eb      	b.n	1b8c0 <_strtol_l.isra.0+0x78>
   1b8e8:	270a      	movs	r7, #10
   1b8ea:	e7dd      	b.n	1b8a8 <_strtol_l.isra.0+0x60>
   1b8ec:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   1b8f0:	2b19      	cmp	r3, #25
   1b8f2:	d801      	bhi.n	1b8f8 <_strtol_l.isra.0+0xb0>
   1b8f4:	3c37      	subs	r4, #55	; 0x37
   1b8f6:	e7e8      	b.n	1b8ca <_strtol_l.isra.0+0x82>
   1b8f8:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   1b8fc:	2b19      	cmp	r3, #25
   1b8fe:	d804      	bhi.n	1b90a <_strtol_l.isra.0+0xc2>
   1b900:	3c57      	subs	r4, #87	; 0x57
   1b902:	e7e2      	b.n	1b8ca <_strtol_l.isra.0+0x82>
   1b904:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b908:	e7eb      	b.n	1b8e2 <_strtol_l.isra.0+0x9a>
   1b90a:	1c53      	adds	r3, r2, #1
   1b90c:	d108      	bne.n	1b920 <_strtol_l.isra.0+0xd8>
   1b90e:	2322      	movs	r3, #34	; 0x22
   1b910:	4608      	mov	r0, r1
   1b912:	f8c8 3000 	str.w	r3, [r8]
   1b916:	f1ba 0f00 	cmp.w	sl, #0
   1b91a:	d107      	bne.n	1b92c <_strtol_l.isra.0+0xe4>
   1b91c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b920:	b106      	cbz	r6, 1b924 <_strtol_l.isra.0+0xdc>
   1b922:	4240      	negs	r0, r0
   1b924:	f1ba 0f00 	cmp.w	sl, #0
   1b928:	d00c      	beq.n	1b944 <_strtol_l.isra.0+0xfc>
   1b92a:	b122      	cbz	r2, 1b936 <_strtol_l.isra.0+0xee>
   1b92c:	3d01      	subs	r5, #1
   1b92e:	f8ca 5000 	str.w	r5, [sl]
   1b932:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b936:	464d      	mov	r5, r9
   1b938:	e7f9      	b.n	1b92e <_strtol_l.isra.0+0xe6>
   1b93a:	2430      	movs	r4, #48	; 0x30
   1b93c:	2f00      	cmp	r7, #0
   1b93e:	d1b3      	bne.n	1b8a8 <_strtol_l.isra.0+0x60>
   1b940:	2708      	movs	r7, #8
   1b942:	e7b1      	b.n	1b8a8 <_strtol_l.isra.0+0x60>
   1b944:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b948 <_strtol_r>:
_strtol_r():
   1b948:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1b94a:	4c06      	ldr	r4, [pc, #24]	; (1b964 <_strtol_r+0x1c>)
   1b94c:	4d06      	ldr	r5, [pc, #24]	; (1b968 <_strtol_r+0x20>)
   1b94e:	6824      	ldr	r4, [r4, #0]
   1b950:	6a24      	ldr	r4, [r4, #32]
   1b952:	2c00      	cmp	r4, #0
   1b954:	bf08      	it	eq
   1b956:	462c      	moveq	r4, r5
   1b958:	9400      	str	r4, [sp, #0]
   1b95a:	f7ff ff75 	bl	1b848 <_strtol_l.isra.0>
   1b95e:	b003      	add	sp, #12
   1b960:	bd30      	pop	{r4, r5, pc}
   1b962:	bf00      	nop
   1b964:	2007c0e0 	.word	0x2007c0e0
   1b968:	2007c144 	.word	0x2007c144

0001b96c <strtol>:
strtol():
   1b96c:	4b08      	ldr	r3, [pc, #32]	; (1b990 <strtol+0x24>)
   1b96e:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1b970:	681c      	ldr	r4, [r3, #0]
   1b972:	4d08      	ldr	r5, [pc, #32]	; (1b994 <strtol+0x28>)
   1b974:	6a23      	ldr	r3, [r4, #32]
   1b976:	2b00      	cmp	r3, #0
   1b978:	bf08      	it	eq
   1b97a:	462b      	moveq	r3, r5
   1b97c:	9300      	str	r3, [sp, #0]
   1b97e:	4613      	mov	r3, r2
   1b980:	460a      	mov	r2, r1
   1b982:	4601      	mov	r1, r0
   1b984:	4620      	mov	r0, r4
   1b986:	f7ff ff5f 	bl	1b848 <_strtol_l.isra.0>
   1b98a:	b003      	add	sp, #12
   1b98c:	bd30      	pop	{r4, r5, pc}
   1b98e:	bf00      	nop
   1b990:	2007c0e0 	.word	0x2007c0e0
   1b994:	2007c144 	.word	0x2007c144

0001b998 <time>:
time():
   1b998:	b513      	push	{r0, r1, r4, lr}
   1b99a:	4b08      	ldr	r3, [pc, #32]	; (1b9bc <time+0x24>)
   1b99c:	4604      	mov	r4, r0
   1b99e:	2200      	movs	r2, #0
   1b9a0:	6818      	ldr	r0, [r3, #0]
   1b9a2:	4669      	mov	r1, sp
   1b9a4:	f001 fd54 	bl	1d450 <_gettimeofday_r>
   1b9a8:	2800      	cmp	r0, #0
   1b9aa:	bfbc      	itt	lt
   1b9ac:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1b9b0:	9300      	strlt	r3, [sp, #0]
   1b9b2:	9800      	ldr	r0, [sp, #0]
   1b9b4:	b104      	cbz	r4, 1b9b8 <time+0x20>
   1b9b6:	6020      	str	r0, [r4, #0]
   1b9b8:	b002      	add	sp, #8
   1b9ba:	bd10      	pop	{r4, pc}
   1b9bc:	2007c0e0 	.word	0x2007c0e0

0001b9c0 <__tzcalc_limits>:
__tzcalc_limits():
   1b9c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9c4:	4604      	mov	r4, r0
   1b9c6:	f001 fd55 	bl	1d474 <__gettzinfo>
   1b9ca:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1b9ce:	429c      	cmp	r4, r3
   1b9d0:	f340 8098 	ble.w	1bb04 <__tzcalc_limits+0x144>
   1b9d4:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1b9d8:	f240 126d 	movw	r2, #365	; 0x16d
   1b9dc:	18e3      	adds	r3, r4, r3
   1b9de:	109b      	asrs	r3, r3, #2
   1b9e0:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   1b9e4:	fb02 3505 	mla	r5, r2, r5, r3
   1b9e8:	f06f 0263 	mvn.w	r2, #99	; 0x63
   1b9ec:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   1b9f0:	fb93 f3f2 	sdiv	r3, r3, r2
   1b9f4:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1b9f8:	441d      	add	r5, r3
   1b9fa:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1b9fe:	18a2      	adds	r2, r4, r2
   1ba00:	fb92 f2f3 	sdiv	r2, r2, r3
   1ba04:	fb94 f7f3 	sdiv	r7, r4, r3
   1ba08:	4415      	add	r5, r2
   1ba0a:	2264      	movs	r2, #100	; 0x64
   1ba0c:	fb03 4717 	mls	r7, r3, r7, r4
   1ba10:	fb94 f6f2 	sdiv	r6, r4, r2
   1ba14:	fab7 fe87 	clz	lr, r7
   1ba18:	4601      	mov	r1, r0
   1ba1a:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   1ba1e:	fb02 4616 	mls	r6, r2, r6, r4
   1ba22:	f100 0338 	add.w	r3, r0, #56	; 0x38
   1ba26:	9301      	str	r3, [sp, #4]
   1ba28:	f004 0303 	and.w	r3, r4, #3
   1ba2c:	6044      	str	r4, [r0, #4]
   1ba2e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1ba32:	9300      	str	r3, [sp, #0]
   1ba34:	7a0b      	ldrb	r3, [r1, #8]
   1ba36:	2b4a      	cmp	r3, #74	; 0x4a
   1ba38:	d123      	bne.n	1ba82 <__tzcalc_limits+0xc2>
   1ba3a:	694c      	ldr	r4, [r1, #20]
   1ba3c:	9a00      	ldr	r2, [sp, #0]
   1ba3e:	192b      	adds	r3, r5, r4
   1ba40:	b902      	cbnz	r2, 1ba44 <__tzcalc_limits+0x84>
   1ba42:	b906      	cbnz	r6, 1ba46 <__tzcalc_limits+0x86>
   1ba44:	b9df      	cbnz	r7, 1ba7e <__tzcalc_limits+0xbe>
   1ba46:	2c3b      	cmp	r4, #59	; 0x3b
   1ba48:	bfd4      	ite	le
   1ba4a:	2400      	movle	r4, #0
   1ba4c:	2401      	movgt	r4, #1
   1ba4e:	441c      	add	r4, r3
   1ba50:	3c01      	subs	r4, #1
   1ba52:	4b2d      	ldr	r3, [pc, #180]	; (1bb08 <__tzcalc_limits+0x148>)
   1ba54:	698a      	ldr	r2, [r1, #24]
   1ba56:	fb03 2404 	mla	r4, r3, r4, r2
   1ba5a:	6a0b      	ldr	r3, [r1, #32]
   1ba5c:	441c      	add	r4, r3
   1ba5e:	9b01      	ldr	r3, [sp, #4]
   1ba60:	f841 4f1c 	str.w	r4, [r1, #28]!
   1ba64:	428b      	cmp	r3, r1
   1ba66:	d1e5      	bne.n	1ba34 <__tzcalc_limits+0x74>
   1ba68:	69c3      	ldr	r3, [r0, #28]
   1ba6a:	6b82      	ldr	r2, [r0, #56]	; 0x38
   1ba6c:	4293      	cmp	r3, r2
   1ba6e:	bfac      	ite	ge
   1ba70:	2300      	movge	r3, #0
   1ba72:	2301      	movlt	r3, #1
   1ba74:	6003      	str	r3, [r0, #0]
   1ba76:	2001      	movs	r0, #1
   1ba78:	b003      	add	sp, #12
   1ba7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba7e:	2400      	movs	r4, #0
   1ba80:	e7e5      	b.n	1ba4e <__tzcalc_limits+0x8e>
   1ba82:	2b44      	cmp	r3, #68	; 0x44
   1ba84:	d102      	bne.n	1ba8c <__tzcalc_limits+0xcc>
   1ba86:	694b      	ldr	r3, [r1, #20]
   1ba88:	18ec      	adds	r4, r5, r3
   1ba8a:	e7e2      	b.n	1ba52 <__tzcalc_limits+0x92>
   1ba8c:	9b00      	ldr	r3, [sp, #0]
   1ba8e:	bb7b      	cbnz	r3, 1baf0 <__tzcalc_limits+0x130>
   1ba90:	2e00      	cmp	r6, #0
   1ba92:	bf0c      	ite	eq
   1ba94:	46f0      	moveq	r8, lr
   1ba96:	f04f 0801 	movne.w	r8, #1
   1ba9a:	2230      	movs	r2, #48	; 0x30
   1ba9c:	4b1b      	ldr	r3, [pc, #108]	; (1bb0c <__tzcalc_limits+0x14c>)
   1ba9e:	f04f 0901 	mov.w	r9, #1
   1baa2:	fb02 3808 	mla	r8, r2, r8, r3
   1baa6:	462b      	mov	r3, r5
   1baa8:	68cc      	ldr	r4, [r1, #12]
   1baaa:	f1a8 0a04 	sub.w	sl, r8, #4
   1baae:	45a1      	cmp	r9, r4
   1bab0:	db20      	blt.n	1baf4 <__tzcalc_limits+0x134>
   1bab2:	2207      	movs	r2, #7
   1bab4:	2c01      	cmp	r4, #1
   1bab6:	bfb8      	it	lt
   1bab8:	2401      	movlt	r4, #1
   1baba:	f103 0b04 	add.w	fp, r3, #4
   1babe:	fb9b faf2 	sdiv	sl, fp, r2
   1bac2:	46a1      	mov	r9, r4
   1bac4:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1bac8:	694c      	ldr	r4, [r1, #20]
   1baca:	ebab 0a0a 	sub.w	sl, fp, sl
   1bace:	ebb4 0a0a 	subs.w	sl, r4, sl
   1bad2:	690c      	ldr	r4, [r1, #16]
   1bad4:	44e1      	add	r9, ip
   1bad6:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   1bada:	bf48      	it	mi
   1badc:	4492      	addmi	sl, r2
   1bade:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   1bae2:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1bae6:	4454      	add	r4, sl
   1bae8:	4544      	cmp	r4, r8
   1baea:	da09      	bge.n	1bb00 <__tzcalc_limits+0x140>
   1baec:	441c      	add	r4, r3
   1baee:	e7b0      	b.n	1ba52 <__tzcalc_limits+0x92>
   1baf0:	46f0      	mov	r8, lr
   1baf2:	e7d2      	b.n	1ba9a <__tzcalc_limits+0xda>
   1baf4:	f85a bf04 	ldr.w	fp, [sl, #4]!
   1baf8:	f109 0901 	add.w	r9, r9, #1
   1bafc:	445b      	add	r3, fp
   1bafe:	e7d6      	b.n	1baae <__tzcalc_limits+0xee>
   1bb00:	3c07      	subs	r4, #7
   1bb02:	e7f1      	b.n	1bae8 <__tzcalc_limits+0x128>
   1bb04:	2000      	movs	r0, #0
   1bb06:	e7b7      	b.n	1ba78 <__tzcalc_limits+0xb8>
   1bb08:	00015180 	.word	0x00015180
   1bb0c:	000206e0 	.word	0x000206e0

0001bb10 <__tz_lock>:
__tz_lock():
   1bb10:	4770      	bx	lr

0001bb12 <__tz_unlock>:
__tz_unlock():
   1bb12:	4770      	bx	lr

0001bb14 <_tzset_unlocked>:
_tzset_unlocked():
   1bb14:	4b01      	ldr	r3, [pc, #4]	; (1bb1c <_tzset_unlocked+0x8>)
   1bb16:	6818      	ldr	r0, [r3, #0]
   1bb18:	f000 b802 	b.w	1bb20 <_tzset_unlocked_r>
   1bb1c:	2007c0e0 	.word	0x2007c0e0

0001bb20 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   1bb20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb24:	b08d      	sub	sp, #52	; 0x34
   1bb26:	4607      	mov	r7, r0
   1bb28:	f001 fca4 	bl	1d474 <__gettzinfo>
   1bb2c:	49b1      	ldr	r1, [pc, #708]	; (1bdf4 <_tzset_unlocked_r+0x2d4>)
   1bb2e:	4605      	mov	r5, r0
   1bb30:	4638      	mov	r0, r7
   1bb32:	f001 fc85 	bl	1d440 <_getenv_r>
   1bb36:	4eb0      	ldr	r6, [pc, #704]	; (1bdf8 <_tzset_unlocked_r+0x2d8>)
   1bb38:	4604      	mov	r4, r0
   1bb3a:	b970      	cbnz	r0, 1bb5a <_tzset_unlocked_r+0x3a>
   1bb3c:	4baf      	ldr	r3, [pc, #700]	; (1bdfc <_tzset_unlocked_r+0x2dc>)
   1bb3e:	4ab0      	ldr	r2, [pc, #704]	; (1be00 <_tzset_unlocked_r+0x2e0>)
   1bb40:	6018      	str	r0, [r3, #0]
   1bb42:	4bb0      	ldr	r3, [pc, #704]	; (1be04 <_tzset_unlocked_r+0x2e4>)
   1bb44:	6018      	str	r0, [r3, #0]
   1bb46:	4bb0      	ldr	r3, [pc, #704]	; (1be08 <_tzset_unlocked_r+0x2e8>)
   1bb48:	6830      	ldr	r0, [r6, #0]
   1bb4a:	601a      	str	r2, [r3, #0]
   1bb4c:	605a      	str	r2, [r3, #4]
   1bb4e:	f7fd faf5 	bl	1913c <free>
   1bb52:	6034      	str	r4, [r6, #0]
   1bb54:	b00d      	add	sp, #52	; 0x34
   1bb56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb5a:	6831      	ldr	r1, [r6, #0]
   1bb5c:	2900      	cmp	r1, #0
   1bb5e:	d160      	bne.n	1bc22 <_tzset_unlocked_r+0x102>
   1bb60:	6830      	ldr	r0, [r6, #0]
   1bb62:	f7fd faeb 	bl	1913c <free>
   1bb66:	4620      	mov	r0, r4
   1bb68:	f7ff f815 	bl	1ab96 <strlen>
   1bb6c:	1c41      	adds	r1, r0, #1
   1bb6e:	4638      	mov	r0, r7
   1bb70:	f7fd fe3a 	bl	197e8 <_malloc_r>
   1bb74:	6030      	str	r0, [r6, #0]
   1bb76:	2800      	cmp	r0, #0
   1bb78:	d158      	bne.n	1bc2c <_tzset_unlocked_r+0x10c>
   1bb7a:	7823      	ldrb	r3, [r4, #0]
   1bb7c:	ae0a      	add	r6, sp, #40	; 0x28
   1bb7e:	2b3a      	cmp	r3, #58	; 0x3a
   1bb80:	bf08      	it	eq
   1bb82:	3401      	addeq	r4, #1
   1bb84:	4633      	mov	r3, r6
   1bb86:	4aa1      	ldr	r2, [pc, #644]	; (1be0c <_tzset_unlocked_r+0x2ec>)
   1bb88:	49a1      	ldr	r1, [pc, #644]	; (1be10 <_tzset_unlocked_r+0x2f0>)
   1bb8a:	4620      	mov	r0, r4
   1bb8c:	f7fe ff82 	bl	1aa94 <siscanf>
   1bb90:	2800      	cmp	r0, #0
   1bb92:	dddf      	ble.n	1bb54 <_tzset_unlocked_r+0x34>
   1bb94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bb96:	18e7      	adds	r7, r4, r3
   1bb98:	5ce3      	ldrb	r3, [r4, r3]
   1bb9a:	2b2d      	cmp	r3, #45	; 0x2d
   1bb9c:	d14a      	bne.n	1bc34 <_tzset_unlocked_r+0x114>
   1bb9e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1bba2:	3701      	adds	r7, #1
   1bba4:	f04f 0800 	mov.w	r8, #0
   1bba8:	f10d 0a20 	add.w	sl, sp, #32
   1bbac:	f10d 0b1e 	add.w	fp, sp, #30
   1bbb0:	9603      	str	r6, [sp, #12]
   1bbb2:	f8cd a008 	str.w	sl, [sp, #8]
   1bbb6:	9601      	str	r6, [sp, #4]
   1bbb8:	f8cd b000 	str.w	fp, [sp]
   1bbbc:	4633      	mov	r3, r6
   1bbbe:	aa07      	add	r2, sp, #28
   1bbc0:	4994      	ldr	r1, [pc, #592]	; (1be14 <_tzset_unlocked_r+0x2f4>)
   1bbc2:	4638      	mov	r0, r7
   1bbc4:	f8ad 801e 	strh.w	r8, [sp, #30]
   1bbc8:	f8ad 8020 	strh.w	r8, [sp, #32]
   1bbcc:	f7fe ff62 	bl	1aa94 <siscanf>
   1bbd0:	4540      	cmp	r0, r8
   1bbd2:	ddbf      	ble.n	1bb54 <_tzset_unlocked_r+0x34>
   1bbd4:	213c      	movs	r1, #60	; 0x3c
   1bbd6:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1bbda:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1bbde:	f8df 9240 	ldr.w	r9, [pc, #576]	; 1be20 <_tzset_unlocked_r+0x300>
   1bbe2:	fb01 2203 	mla	r2, r1, r3, r2
   1bbe6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1bbea:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1bbee:	fb01 2303 	mla	r3, r1, r3, r2
   1bbf2:	435c      	muls	r4, r3
   1bbf4:	4b85      	ldr	r3, [pc, #532]	; (1be0c <_tzset_unlocked_r+0x2ec>)
   1bbf6:	622c      	str	r4, [r5, #32]
   1bbf8:	4c83      	ldr	r4, [pc, #524]	; (1be08 <_tzset_unlocked_r+0x2e8>)
   1bbfa:	464a      	mov	r2, r9
   1bbfc:	6023      	str	r3, [r4, #0]
   1bbfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bc00:	4983      	ldr	r1, [pc, #524]	; (1be10 <_tzset_unlocked_r+0x2f0>)
   1bc02:	441f      	add	r7, r3
   1bc04:	4638      	mov	r0, r7
   1bc06:	4633      	mov	r3, r6
   1bc08:	f7fe ff44 	bl	1aa94 <siscanf>
   1bc0c:	4540      	cmp	r0, r8
   1bc0e:	dc16      	bgt.n	1bc3e <_tzset_unlocked_r+0x11e>
   1bc10:	6823      	ldr	r3, [r4, #0]
   1bc12:	6a2a      	ldr	r2, [r5, #32]
   1bc14:	6063      	str	r3, [r4, #4]
   1bc16:	4b79      	ldr	r3, [pc, #484]	; (1bdfc <_tzset_unlocked_r+0x2dc>)
   1bc18:	601a      	str	r2, [r3, #0]
   1bc1a:	4b7a      	ldr	r3, [pc, #488]	; (1be04 <_tzset_unlocked_r+0x2e4>)
   1bc1c:	f8c3 8000 	str.w	r8, [r3]
   1bc20:	e798      	b.n	1bb54 <_tzset_unlocked_r+0x34>
   1bc22:	f7fe ffa6 	bl	1ab72 <strcmp>
   1bc26:	2800      	cmp	r0, #0
   1bc28:	d094      	beq.n	1bb54 <_tzset_unlocked_r+0x34>
   1bc2a:	e799      	b.n	1bb60 <_tzset_unlocked_r+0x40>
   1bc2c:	4621      	mov	r1, r4
   1bc2e:	f7fe ffaa 	bl	1ab86 <strcpy>
   1bc32:	e7a2      	b.n	1bb7a <_tzset_unlocked_r+0x5a>
   1bc34:	2b2b      	cmp	r3, #43	; 0x2b
   1bc36:	bf08      	it	eq
   1bc38:	3701      	addeq	r7, #1
   1bc3a:	2401      	movs	r4, #1
   1bc3c:	e7b2      	b.n	1bba4 <_tzset_unlocked_r+0x84>
   1bc3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bc40:	f8c4 9004 	str.w	r9, [r4, #4]
   1bc44:	18fc      	adds	r4, r7, r3
   1bc46:	5cfb      	ldrb	r3, [r7, r3]
   1bc48:	2b2d      	cmp	r3, #45	; 0x2d
   1bc4a:	f040 8092 	bne.w	1bd72 <_tzset_unlocked_r+0x252>
   1bc4e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1bc52:	3401      	adds	r4, #1
   1bc54:	2300      	movs	r3, #0
   1bc56:	9603      	str	r6, [sp, #12]
   1bc58:	f8ad 301c 	strh.w	r3, [sp, #28]
   1bc5c:	f8ad 301e 	strh.w	r3, [sp, #30]
   1bc60:	f8ad 3020 	strh.w	r3, [sp, #32]
   1bc64:	930a      	str	r3, [sp, #40]	; 0x28
   1bc66:	f8cd a008 	str.w	sl, [sp, #8]
   1bc6a:	9601      	str	r6, [sp, #4]
   1bc6c:	f8cd b000 	str.w	fp, [sp]
   1bc70:	4633      	mov	r3, r6
   1bc72:	aa07      	add	r2, sp, #28
   1bc74:	4967      	ldr	r1, [pc, #412]	; (1be14 <_tzset_unlocked_r+0x2f4>)
   1bc76:	4620      	mov	r0, r4
   1bc78:	f7fe ff0c 	bl	1aa94 <siscanf>
   1bc7c:	2800      	cmp	r0, #0
   1bc7e:	dc7d      	bgt.n	1bd7c <_tzset_unlocked_r+0x25c>
   1bc80:	6a2b      	ldr	r3, [r5, #32]
   1bc82:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   1bc86:	63eb      	str	r3, [r5, #60]	; 0x3c
   1bc88:	462f      	mov	r7, r5
   1bc8a:	f04f 0900 	mov.w	r9, #0
   1bc8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bc90:	441c      	add	r4, r3
   1bc92:	7823      	ldrb	r3, [r4, #0]
   1bc94:	2b2c      	cmp	r3, #44	; 0x2c
   1bc96:	bf08      	it	eq
   1bc98:	3401      	addeq	r4, #1
   1bc9a:	f894 8000 	ldrb.w	r8, [r4]
   1bc9e:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   1bca2:	d17b      	bne.n	1bd9c <_tzset_unlocked_r+0x27c>
   1bca4:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   1bca8:	9302      	str	r3, [sp, #8]
   1bcaa:	ab09      	add	r3, sp, #36	; 0x24
   1bcac:	9300      	str	r3, [sp, #0]
   1bcae:	9603      	str	r6, [sp, #12]
   1bcb0:	9601      	str	r6, [sp, #4]
   1bcb2:	4633      	mov	r3, r6
   1bcb4:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   1bcb8:	4957      	ldr	r1, [pc, #348]	; (1be18 <_tzset_unlocked_r+0x2f8>)
   1bcba:	4620      	mov	r0, r4
   1bcbc:	f7fe feea 	bl	1aa94 <siscanf>
   1bcc0:	2803      	cmp	r0, #3
   1bcc2:	f47f af47 	bne.w	1bb54 <_tzset_unlocked_r+0x34>
   1bcc6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   1bcca:	1e4b      	subs	r3, r1, #1
   1bccc:	2b0b      	cmp	r3, #11
   1bcce:	f63f af41 	bhi.w	1bb54 <_tzset_unlocked_r+0x34>
   1bcd2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   1bcd6:	1e53      	subs	r3, r2, #1
   1bcd8:	2b04      	cmp	r3, #4
   1bcda:	f63f af3b 	bhi.w	1bb54 <_tzset_unlocked_r+0x34>
   1bcde:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   1bce2:	2b06      	cmp	r3, #6
   1bce4:	f63f af36 	bhi.w	1bb54 <_tzset_unlocked_r+0x34>
   1bce8:	f887 8008 	strb.w	r8, [r7, #8]
   1bcec:	60f9      	str	r1, [r7, #12]
   1bcee:	613a      	str	r2, [r7, #16]
   1bcf0:	617b      	str	r3, [r7, #20]
   1bcf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bcf4:	eb04 0803 	add.w	r8, r4, r3
   1bcf8:	2302      	movs	r3, #2
   1bcfa:	f8ad 301c 	strh.w	r3, [sp, #28]
   1bcfe:	2300      	movs	r3, #0
   1bd00:	f8ad 301e 	strh.w	r3, [sp, #30]
   1bd04:	f8ad 3020 	strh.w	r3, [sp, #32]
   1bd08:	930a      	str	r3, [sp, #40]	; 0x28
   1bd0a:	f898 3000 	ldrb.w	r3, [r8]
   1bd0e:	2b2f      	cmp	r3, #47	; 0x2f
   1bd10:	d10b      	bne.n	1bd2a <_tzset_unlocked_r+0x20a>
   1bd12:	9603      	str	r6, [sp, #12]
   1bd14:	f8cd a008 	str.w	sl, [sp, #8]
   1bd18:	9601      	str	r6, [sp, #4]
   1bd1a:	f8cd b000 	str.w	fp, [sp]
   1bd1e:	4633      	mov	r3, r6
   1bd20:	aa07      	add	r2, sp, #28
   1bd22:	493e      	ldr	r1, [pc, #248]	; (1be1c <_tzset_unlocked_r+0x2fc>)
   1bd24:	4640      	mov	r0, r8
   1bd26:	f7fe feb5 	bl	1aa94 <siscanf>
   1bd2a:	213c      	movs	r1, #60	; 0x3c
   1bd2c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1bd30:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1bd34:	f109 0901 	add.w	r9, r9, #1
   1bd38:	fb01 2203 	mla	r2, r1, r3, r2
   1bd3c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1bd40:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1bd44:	f1b9 0f02 	cmp.w	r9, #2
   1bd48:	fb01 2303 	mla	r3, r1, r3, r2
   1bd4c:	61bb      	str	r3, [r7, #24]
   1bd4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1bd50:	f107 071c 	add.w	r7, r7, #28
   1bd54:	4444      	add	r4, r8
   1bd56:	d19c      	bne.n	1bc92 <_tzset_unlocked_r+0x172>
   1bd58:	6868      	ldr	r0, [r5, #4]
   1bd5a:	f7ff fe31 	bl	1b9c0 <__tzcalc_limits>
   1bd5e:	6a2a      	ldr	r2, [r5, #32]
   1bd60:	4b26      	ldr	r3, [pc, #152]	; (1bdfc <_tzset_unlocked_r+0x2dc>)
   1bd62:	601a      	str	r2, [r3, #0]
   1bd64:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1bd66:	1a9b      	subs	r3, r3, r2
   1bd68:	bf18      	it	ne
   1bd6a:	2301      	movne	r3, #1
   1bd6c:	4a25      	ldr	r2, [pc, #148]	; (1be04 <_tzset_unlocked_r+0x2e4>)
   1bd6e:	6013      	str	r3, [r2, #0]
   1bd70:	e6f0      	b.n	1bb54 <_tzset_unlocked_r+0x34>
   1bd72:	2b2b      	cmp	r3, #43	; 0x2b
   1bd74:	bf08      	it	eq
   1bd76:	3401      	addeq	r4, #1
   1bd78:	2701      	movs	r7, #1
   1bd7a:	e76b      	b.n	1bc54 <_tzset_unlocked_r+0x134>
   1bd7c:	213c      	movs	r1, #60	; 0x3c
   1bd7e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1bd82:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1bd86:	fb01 2203 	mla	r2, r1, r3, r2
   1bd8a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1bd8e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1bd92:	fb01 2303 	mla	r3, r1, r3, r2
   1bd96:	435f      	muls	r7, r3
   1bd98:	63ef      	str	r7, [r5, #60]	; 0x3c
   1bd9a:	e775      	b.n	1bc88 <_tzset_unlocked_r+0x168>
   1bd9c:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   1bda0:	bf0a      	itet	eq
   1bda2:	4643      	moveq	r3, r8
   1bda4:	2344      	movne	r3, #68	; 0x44
   1bda6:	3401      	addeq	r4, #1
   1bda8:	220a      	movs	r2, #10
   1bdaa:	a90b      	add	r1, sp, #44	; 0x2c
   1bdac:	4620      	mov	r0, r4
   1bdae:	9305      	str	r3, [sp, #20]
   1bdb0:	f002 ff86 	bl	1ecc0 <strtoul>
   1bdb4:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   1bdb8:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   1bdbc:	4544      	cmp	r4, r8
   1bdbe:	9b05      	ldr	r3, [sp, #20]
   1bdc0:	d114      	bne.n	1bdec <_tzset_unlocked_r+0x2cc>
   1bdc2:	234d      	movs	r3, #77	; 0x4d
   1bdc4:	f1b9 0f00 	cmp.w	r9, #0
   1bdc8:	d107      	bne.n	1bdda <_tzset_unlocked_r+0x2ba>
   1bdca:	722b      	strb	r3, [r5, #8]
   1bdcc:	2303      	movs	r3, #3
   1bdce:	60eb      	str	r3, [r5, #12]
   1bdd0:	2302      	movs	r3, #2
   1bdd2:	f8c5 9014 	str.w	r9, [r5, #20]
   1bdd6:	612b      	str	r3, [r5, #16]
   1bdd8:	e78e      	b.n	1bcf8 <_tzset_unlocked_r+0x1d8>
   1bdda:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   1bdde:	230b      	movs	r3, #11
   1bde0:	62ab      	str	r3, [r5, #40]	; 0x28
   1bde2:	2301      	movs	r3, #1
   1bde4:	62eb      	str	r3, [r5, #44]	; 0x2c
   1bde6:	2300      	movs	r3, #0
   1bde8:	632b      	str	r3, [r5, #48]	; 0x30
   1bdea:	e785      	b.n	1bcf8 <_tzset_unlocked_r+0x1d8>
   1bdec:	b280      	uxth	r0, r0
   1bdee:	723b      	strb	r3, [r7, #8]
   1bdf0:	6178      	str	r0, [r7, #20]
   1bdf2:	e781      	b.n	1bcf8 <_tzset_unlocked_r+0x1d8>
   1bdf4:	000207c8 	.word	0x000207c8
   1bdf8:	2007c7c8 	.word	0x2007c7c8
   1bdfc:	2007c7d0 	.word	0x2007c7d0
   1be00:	000207cb 	.word	0x000207cb
   1be04:	2007c7cc 	.word	0x2007c7cc
   1be08:	2007c2b0 	.word	0x2007c2b0
   1be0c:	2007c7bb 	.word	0x2007c7bb
   1be10:	000207cf 	.word	0x000207cf
   1be14:	000207f2 	.word	0x000207f2
   1be18:	000207de 	.word	0x000207de
   1be1c:	000207f1 	.word	0x000207f1
   1be20:	2007c7b0 	.word	0x2007c7b0

0001be24 <_vsniprintf_r>:
_vsniprintf_r():
   1be24:	b530      	push	{r4, r5, lr}
   1be26:	1e14      	subs	r4, r2, #0
   1be28:	4605      	mov	r5, r0
   1be2a:	b09b      	sub	sp, #108	; 0x6c
   1be2c:	4618      	mov	r0, r3
   1be2e:	da05      	bge.n	1be3c <_vsniprintf_r+0x18>
   1be30:	238b      	movs	r3, #139	; 0x8b
   1be32:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1be36:	602b      	str	r3, [r5, #0]
   1be38:	b01b      	add	sp, #108	; 0x6c
   1be3a:	bd30      	pop	{r4, r5, pc}
   1be3c:	f44f 7302 	mov.w	r3, #520	; 0x208
   1be40:	f8ad 300c 	strh.w	r3, [sp, #12]
   1be44:	bf0c      	ite	eq
   1be46:	4623      	moveq	r3, r4
   1be48:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1be4c:	9302      	str	r3, [sp, #8]
   1be4e:	9305      	str	r3, [sp, #20]
   1be50:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1be54:	9100      	str	r1, [sp, #0]
   1be56:	9104      	str	r1, [sp, #16]
   1be58:	f8ad 300e 	strh.w	r3, [sp, #14]
   1be5c:	4602      	mov	r2, r0
   1be5e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1be60:	4669      	mov	r1, sp
   1be62:	4628      	mov	r0, r5
   1be64:	f001 ffa6 	bl	1ddb4 <_svfiprintf_r>
   1be68:	1c43      	adds	r3, r0, #1
   1be6a:	bfbc      	itt	lt
   1be6c:	238b      	movlt	r3, #139	; 0x8b
   1be6e:	602b      	strlt	r3, [r5, #0]
   1be70:	2c00      	cmp	r4, #0
   1be72:	d0e1      	beq.n	1be38 <_vsniprintf_r+0x14>
   1be74:	2200      	movs	r2, #0
   1be76:	9b00      	ldr	r3, [sp, #0]
   1be78:	701a      	strb	r2, [r3, #0]
   1be7a:	e7dd      	b.n	1be38 <_vsniprintf_r+0x14>

0001be7c <vsniprintf>:
vsniprintf():
   1be7c:	b507      	push	{r0, r1, r2, lr}
   1be7e:	9300      	str	r3, [sp, #0]
   1be80:	4613      	mov	r3, r2
   1be82:	460a      	mov	r2, r1
   1be84:	4601      	mov	r1, r0
   1be86:	4803      	ldr	r0, [pc, #12]	; (1be94 <vsniprintf+0x18>)
   1be88:	6800      	ldr	r0, [r0, #0]
   1be8a:	f7ff ffcb 	bl	1be24 <_vsniprintf_r>
   1be8e:	b003      	add	sp, #12
   1be90:	f85d fb04 	ldr.w	pc, [sp], #4
   1be94:	2007c0e0 	.word	0x2007c0e0

0001be98 <__swbuf_r>:
__swbuf_r():
   1be98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1be9a:	460e      	mov	r6, r1
   1be9c:	4614      	mov	r4, r2
   1be9e:	4605      	mov	r5, r0
   1bea0:	b118      	cbz	r0, 1beaa <__swbuf_r+0x12>
   1bea2:	6983      	ldr	r3, [r0, #24]
   1bea4:	b90b      	cbnz	r3, 1beaa <__swbuf_r+0x12>
   1bea6:	f7fd f801 	bl	18eac <__sinit>
   1beaa:	4b21      	ldr	r3, [pc, #132]	; (1bf30 <__swbuf_r+0x98>)
   1beac:	429c      	cmp	r4, r3
   1beae:	d12a      	bne.n	1bf06 <__swbuf_r+0x6e>
   1beb0:	686c      	ldr	r4, [r5, #4]
   1beb2:	69a3      	ldr	r3, [r4, #24]
   1beb4:	60a3      	str	r3, [r4, #8]
   1beb6:	89a3      	ldrh	r3, [r4, #12]
   1beb8:	071a      	lsls	r2, r3, #28
   1beba:	d52e      	bpl.n	1bf1a <__swbuf_r+0x82>
   1bebc:	6923      	ldr	r3, [r4, #16]
   1bebe:	b363      	cbz	r3, 1bf1a <__swbuf_r+0x82>
   1bec0:	6923      	ldr	r3, [r4, #16]
   1bec2:	6820      	ldr	r0, [r4, #0]
   1bec4:	b2f6      	uxtb	r6, r6
   1bec6:	1ac0      	subs	r0, r0, r3
   1bec8:	6963      	ldr	r3, [r4, #20]
   1beca:	4637      	mov	r7, r6
   1becc:	4298      	cmp	r0, r3
   1bece:	db04      	blt.n	1beda <__swbuf_r+0x42>
   1bed0:	4621      	mov	r1, r4
   1bed2:	4628      	mov	r0, r5
   1bed4:	f7fc ff6e 	bl	18db4 <_fflush_r>
   1bed8:	bb28      	cbnz	r0, 1bf26 <__swbuf_r+0x8e>
   1beda:	68a3      	ldr	r3, [r4, #8]
   1bedc:	3001      	adds	r0, #1
   1bede:	3b01      	subs	r3, #1
   1bee0:	60a3      	str	r3, [r4, #8]
   1bee2:	6823      	ldr	r3, [r4, #0]
   1bee4:	1c5a      	adds	r2, r3, #1
   1bee6:	6022      	str	r2, [r4, #0]
   1bee8:	701e      	strb	r6, [r3, #0]
   1beea:	6963      	ldr	r3, [r4, #20]
   1beec:	4298      	cmp	r0, r3
   1beee:	d004      	beq.n	1befa <__swbuf_r+0x62>
   1bef0:	89a3      	ldrh	r3, [r4, #12]
   1bef2:	07db      	lsls	r3, r3, #31
   1bef4:	d519      	bpl.n	1bf2a <__swbuf_r+0x92>
   1bef6:	2e0a      	cmp	r6, #10
   1bef8:	d117      	bne.n	1bf2a <__swbuf_r+0x92>
   1befa:	4621      	mov	r1, r4
   1befc:	4628      	mov	r0, r5
   1befe:	f7fc ff59 	bl	18db4 <_fflush_r>
   1bf02:	b190      	cbz	r0, 1bf2a <__swbuf_r+0x92>
   1bf04:	e00f      	b.n	1bf26 <__swbuf_r+0x8e>
   1bf06:	4b0b      	ldr	r3, [pc, #44]	; (1bf34 <__swbuf_r+0x9c>)
   1bf08:	429c      	cmp	r4, r3
   1bf0a:	d101      	bne.n	1bf10 <__swbuf_r+0x78>
   1bf0c:	68ac      	ldr	r4, [r5, #8]
   1bf0e:	e7d0      	b.n	1beb2 <__swbuf_r+0x1a>
   1bf10:	4b09      	ldr	r3, [pc, #36]	; (1bf38 <__swbuf_r+0xa0>)
   1bf12:	429c      	cmp	r4, r3
   1bf14:	bf08      	it	eq
   1bf16:	68ec      	ldreq	r4, [r5, #12]
   1bf18:	e7cb      	b.n	1beb2 <__swbuf_r+0x1a>
   1bf1a:	4621      	mov	r1, r4
   1bf1c:	4628      	mov	r0, r5
   1bf1e:	f000 f82d 	bl	1bf7c <__swsetup_r>
   1bf22:	2800      	cmp	r0, #0
   1bf24:	d0cc      	beq.n	1bec0 <__swbuf_r+0x28>
   1bf26:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1bf2a:	4638      	mov	r0, r7
   1bf2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bf2e:	bf00      	nop
   1bf30:	00020634 	.word	0x00020634
   1bf34:	00020654 	.word	0x00020654
   1bf38:	00020614 	.word	0x00020614

0001bf3c <__ascii_wctomb>:
__ascii_wctomb():
   1bf3c:	b149      	cbz	r1, 1bf52 <__ascii_wctomb+0x16>
   1bf3e:	2aff      	cmp	r2, #255	; 0xff
   1bf40:	bf8b      	itete	hi
   1bf42:	238a      	movhi	r3, #138	; 0x8a
   1bf44:	700a      	strbls	r2, [r1, #0]
   1bf46:	6003      	strhi	r3, [r0, #0]
   1bf48:	2001      	movls	r0, #1
   1bf4a:	bf88      	it	hi
   1bf4c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   1bf50:	4770      	bx	lr
   1bf52:	4608      	mov	r0, r1
   1bf54:	4770      	bx	lr
   1bf56:	Address 0x000000000001bf56 is out of bounds.


0001bf58 <_write_r>:
_write_r():
   1bf58:	b538      	push	{r3, r4, r5, lr}
   1bf5a:	4605      	mov	r5, r0
   1bf5c:	4608      	mov	r0, r1
   1bf5e:	4611      	mov	r1, r2
   1bf60:	2200      	movs	r2, #0
   1bf62:	4c05      	ldr	r4, [pc, #20]	; (1bf78 <_write_r+0x20>)
   1bf64:	6022      	str	r2, [r4, #0]
   1bf66:	461a      	mov	r2, r3
   1bf68:	f7f9 f830 	bl	14fcc <_write>
   1bf6c:	1c43      	adds	r3, r0, #1
   1bf6e:	d102      	bne.n	1bf76 <_write_r+0x1e>
   1bf70:	6823      	ldr	r3, [r4, #0]
   1bf72:	b103      	cbz	r3, 1bf76 <_write_r+0x1e>
   1bf74:	602b      	str	r3, [r5, #0]
   1bf76:	bd38      	pop	{r3, r4, r5, pc}
   1bf78:	2007c7d8 	.word	0x2007c7d8

0001bf7c <__swsetup_r>:
__swsetup_r():
   1bf7c:	4b32      	ldr	r3, [pc, #200]	; (1c048 <__swsetup_r+0xcc>)
   1bf7e:	b570      	push	{r4, r5, r6, lr}
   1bf80:	681d      	ldr	r5, [r3, #0]
   1bf82:	4606      	mov	r6, r0
   1bf84:	460c      	mov	r4, r1
   1bf86:	b125      	cbz	r5, 1bf92 <__swsetup_r+0x16>
   1bf88:	69ab      	ldr	r3, [r5, #24]
   1bf8a:	b913      	cbnz	r3, 1bf92 <__swsetup_r+0x16>
   1bf8c:	4628      	mov	r0, r5
   1bf8e:	f7fc ff8d 	bl	18eac <__sinit>
   1bf92:	4b2e      	ldr	r3, [pc, #184]	; (1c04c <__swsetup_r+0xd0>)
   1bf94:	429c      	cmp	r4, r3
   1bf96:	d10f      	bne.n	1bfb8 <__swsetup_r+0x3c>
   1bf98:	686c      	ldr	r4, [r5, #4]
   1bf9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1bf9e:	b29a      	uxth	r2, r3
   1bfa0:	0715      	lsls	r5, r2, #28
   1bfa2:	d42c      	bmi.n	1bffe <__swsetup_r+0x82>
   1bfa4:	06d0      	lsls	r0, r2, #27
   1bfa6:	d411      	bmi.n	1bfcc <__swsetup_r+0x50>
   1bfa8:	2209      	movs	r2, #9
   1bfaa:	6032      	str	r2, [r6, #0]
   1bfac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1bfb0:	81a3      	strh	r3, [r4, #12]
   1bfb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1bfb6:	bd70      	pop	{r4, r5, r6, pc}
   1bfb8:	4b25      	ldr	r3, [pc, #148]	; (1c050 <__swsetup_r+0xd4>)
   1bfba:	429c      	cmp	r4, r3
   1bfbc:	d101      	bne.n	1bfc2 <__swsetup_r+0x46>
   1bfbe:	68ac      	ldr	r4, [r5, #8]
   1bfc0:	e7eb      	b.n	1bf9a <__swsetup_r+0x1e>
   1bfc2:	4b24      	ldr	r3, [pc, #144]	; (1c054 <__swsetup_r+0xd8>)
   1bfc4:	429c      	cmp	r4, r3
   1bfc6:	bf08      	it	eq
   1bfc8:	68ec      	ldreq	r4, [r5, #12]
   1bfca:	e7e6      	b.n	1bf9a <__swsetup_r+0x1e>
   1bfcc:	0751      	lsls	r1, r2, #29
   1bfce:	d512      	bpl.n	1bff6 <__swsetup_r+0x7a>
   1bfd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1bfd2:	b141      	cbz	r1, 1bfe6 <__swsetup_r+0x6a>
   1bfd4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1bfd8:	4299      	cmp	r1, r3
   1bfda:	d002      	beq.n	1bfe2 <__swsetup_r+0x66>
   1bfdc:	4630      	mov	r0, r6
   1bfde:	f7fd fb85 	bl	196ec <_free_r>
   1bfe2:	2300      	movs	r3, #0
   1bfe4:	6363      	str	r3, [r4, #52]	; 0x34
   1bfe6:	89a3      	ldrh	r3, [r4, #12]
   1bfe8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   1bfec:	81a3      	strh	r3, [r4, #12]
   1bfee:	2300      	movs	r3, #0
   1bff0:	6063      	str	r3, [r4, #4]
   1bff2:	6923      	ldr	r3, [r4, #16]
   1bff4:	6023      	str	r3, [r4, #0]
   1bff6:	89a3      	ldrh	r3, [r4, #12]
   1bff8:	f043 0308 	orr.w	r3, r3, #8
   1bffc:	81a3      	strh	r3, [r4, #12]
   1bffe:	6923      	ldr	r3, [r4, #16]
   1c000:	b94b      	cbnz	r3, 1c016 <__swsetup_r+0x9a>
   1c002:	89a3      	ldrh	r3, [r4, #12]
   1c004:	f403 7320 	and.w	r3, r3, #640	; 0x280
   1c008:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   1c00c:	d003      	beq.n	1c016 <__swsetup_r+0x9a>
   1c00e:	4621      	mov	r1, r4
   1c010:	4630      	mov	r0, r6
   1c012:	f7fd f84b 	bl	190ac <__smakebuf_r>
   1c016:	89a2      	ldrh	r2, [r4, #12]
   1c018:	f012 0301 	ands.w	r3, r2, #1
   1c01c:	d00c      	beq.n	1c038 <__swsetup_r+0xbc>
   1c01e:	2300      	movs	r3, #0
   1c020:	60a3      	str	r3, [r4, #8]
   1c022:	6963      	ldr	r3, [r4, #20]
   1c024:	425b      	negs	r3, r3
   1c026:	61a3      	str	r3, [r4, #24]
   1c028:	6923      	ldr	r3, [r4, #16]
   1c02a:	b953      	cbnz	r3, 1c042 <__swsetup_r+0xc6>
   1c02c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1c030:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   1c034:	d1ba      	bne.n	1bfac <__swsetup_r+0x30>
   1c036:	bd70      	pop	{r4, r5, r6, pc}
   1c038:	0792      	lsls	r2, r2, #30
   1c03a:	bf58      	it	pl
   1c03c:	6963      	ldrpl	r3, [r4, #20]
   1c03e:	60a3      	str	r3, [r4, #8]
   1c040:	e7f2      	b.n	1c028 <__swsetup_r+0xac>
   1c042:	2000      	movs	r0, #0
   1c044:	e7f7      	b.n	1c036 <__swsetup_r+0xba>
   1c046:	bf00      	nop
   1c048:	2007c0e0 	.word	0x2007c0e0
   1c04c:	00020634 	.word	0x00020634
   1c050:	00020654 	.word	0x00020654
   1c054:	00020614 	.word	0x00020614

0001c058 <_close_r>:
_close_r():
   1c058:	b538      	push	{r3, r4, r5, lr}
   1c05a:	2300      	movs	r3, #0
   1c05c:	4c05      	ldr	r4, [pc, #20]	; (1c074 <_close_r+0x1c>)
   1c05e:	4605      	mov	r5, r0
   1c060:	4608      	mov	r0, r1
   1c062:	6023      	str	r3, [r4, #0]
   1c064:	f7f9 f804 	bl	15070 <_close>
   1c068:	1c43      	adds	r3, r0, #1
   1c06a:	d102      	bne.n	1c072 <_close_r+0x1a>
   1c06c:	6823      	ldr	r3, [r4, #0]
   1c06e:	b103      	cbz	r3, 1c072 <_close_r+0x1a>
   1c070:	602b      	str	r3, [r5, #0]
   1c072:	bd38      	pop	{r3, r4, r5, pc}
   1c074:	2007c7d8 	.word	0x2007c7d8

0001c078 <div>:
div():
   1c078:	b510      	push	{r4, lr}
   1c07a:	fb91 f4f2 	sdiv	r4, r1, r2
   1c07e:	2900      	cmp	r1, #0
   1c080:	fb02 1314 	mls	r3, r2, r4, r1
   1c084:	db06      	blt.n	1c094 <div+0x1c>
   1c086:	2b00      	cmp	r3, #0
   1c088:	da01      	bge.n	1c08e <div+0x16>
   1c08a:	3401      	adds	r4, #1
   1c08c:	1a9b      	subs	r3, r3, r2
   1c08e:	6004      	str	r4, [r0, #0]
   1c090:	6043      	str	r3, [r0, #4]
   1c092:	bd10      	pop	{r4, pc}
   1c094:	2b00      	cmp	r3, #0
   1c096:	bfc4      	itt	gt
   1c098:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   1c09c:	189b      	addgt	r3, r3, r2
   1c09e:	e7f6      	b.n	1c08e <div+0x16>

0001c0a0 <quorem>:
quorem():
   1c0a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0a4:	6903      	ldr	r3, [r0, #16]
   1c0a6:	690c      	ldr	r4, [r1, #16]
   1c0a8:	4680      	mov	r8, r0
   1c0aa:	429c      	cmp	r4, r3
   1c0ac:	f300 8082 	bgt.w	1c1b4 <quorem+0x114>
   1c0b0:	3c01      	subs	r4, #1
   1c0b2:	f101 0714 	add.w	r7, r1, #20
   1c0b6:	f100 0614 	add.w	r6, r0, #20
   1c0ba:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   1c0be:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   1c0c2:	3501      	adds	r5, #1
   1c0c4:	fbb0 f5f5 	udiv	r5, r0, r5
   1c0c8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   1c0cc:	eb06 030e 	add.w	r3, r6, lr
   1c0d0:	eb07 090e 	add.w	r9, r7, lr
   1c0d4:	9301      	str	r3, [sp, #4]
   1c0d6:	b38d      	cbz	r5, 1c13c <quorem+0x9c>
   1c0d8:	f04f 0a00 	mov.w	sl, #0
   1c0dc:	4638      	mov	r0, r7
   1c0de:	46b4      	mov	ip, r6
   1c0e0:	46d3      	mov	fp, sl
   1c0e2:	f850 2b04 	ldr.w	r2, [r0], #4
   1c0e6:	b293      	uxth	r3, r2
   1c0e8:	fb05 a303 	mla	r3, r5, r3, sl
   1c0ec:	0c12      	lsrs	r2, r2, #16
   1c0ee:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1c0f2:	fb05 a202 	mla	r2, r5, r2, sl
   1c0f6:	b29b      	uxth	r3, r3
   1c0f8:	ebab 0303 	sub.w	r3, fp, r3
   1c0fc:	f8bc b000 	ldrh.w	fp, [ip]
   1c100:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   1c104:	445b      	add	r3, fp
   1c106:	fa1f fb82 	uxth.w	fp, r2
   1c10a:	f8dc 2000 	ldr.w	r2, [ip]
   1c10e:	4581      	cmp	r9, r0
   1c110:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   1c114:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1c118:	b29b      	uxth	r3, r3
   1c11a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1c11e:	ea4f 4b22 	mov.w	fp, r2, asr #16
   1c122:	f84c 3b04 	str.w	r3, [ip], #4
   1c126:	d2dc      	bcs.n	1c0e2 <quorem+0x42>
   1c128:	f856 300e 	ldr.w	r3, [r6, lr]
   1c12c:	b933      	cbnz	r3, 1c13c <quorem+0x9c>
   1c12e:	9b01      	ldr	r3, [sp, #4]
   1c130:	3b04      	subs	r3, #4
   1c132:	429e      	cmp	r6, r3
   1c134:	461a      	mov	r2, r3
   1c136:	d331      	bcc.n	1c19c <quorem+0xfc>
   1c138:	f8c8 4010 	str.w	r4, [r8, #16]
   1c13c:	4640      	mov	r0, r8
   1c13e:	f001 fc16 	bl	1d96e <__mcmp>
   1c142:	2800      	cmp	r0, #0
   1c144:	db26      	blt.n	1c194 <quorem+0xf4>
   1c146:	4630      	mov	r0, r6
   1c148:	f04f 0e00 	mov.w	lr, #0
   1c14c:	3501      	adds	r5, #1
   1c14e:	f857 1b04 	ldr.w	r1, [r7], #4
   1c152:	f8d0 c000 	ldr.w	ip, [r0]
   1c156:	b28b      	uxth	r3, r1
   1c158:	ebae 0303 	sub.w	r3, lr, r3
   1c15c:	fa1f f28c 	uxth.w	r2, ip
   1c160:	4413      	add	r3, r2
   1c162:	0c0a      	lsrs	r2, r1, #16
   1c164:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   1c168:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1c16c:	b29b      	uxth	r3, r3
   1c16e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1c172:	45b9      	cmp	r9, r7
   1c174:	ea4f 4e22 	mov.w	lr, r2, asr #16
   1c178:	f840 3b04 	str.w	r3, [r0], #4
   1c17c:	d2e7      	bcs.n	1c14e <quorem+0xae>
   1c17e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1c182:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   1c186:	b92a      	cbnz	r2, 1c194 <quorem+0xf4>
   1c188:	3b04      	subs	r3, #4
   1c18a:	429e      	cmp	r6, r3
   1c18c:	461a      	mov	r2, r3
   1c18e:	d30b      	bcc.n	1c1a8 <quorem+0x108>
   1c190:	f8c8 4010 	str.w	r4, [r8, #16]
   1c194:	4628      	mov	r0, r5
   1c196:	b003      	add	sp, #12
   1c198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c19c:	6812      	ldr	r2, [r2, #0]
   1c19e:	3b04      	subs	r3, #4
   1c1a0:	2a00      	cmp	r2, #0
   1c1a2:	d1c9      	bne.n	1c138 <quorem+0x98>
   1c1a4:	3c01      	subs	r4, #1
   1c1a6:	e7c4      	b.n	1c132 <quorem+0x92>
   1c1a8:	6812      	ldr	r2, [r2, #0]
   1c1aa:	3b04      	subs	r3, #4
   1c1ac:	2a00      	cmp	r2, #0
   1c1ae:	d1ef      	bne.n	1c190 <quorem+0xf0>
   1c1b0:	3c01      	subs	r4, #1
   1c1b2:	e7ea      	b.n	1c18a <quorem+0xea>
   1c1b4:	2000      	movs	r0, #0
   1c1b6:	e7ee      	b.n	1c196 <quorem+0xf6>

0001c1b8 <_dtoa_r>:
_dtoa_r():
   1c1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1bc:	6a46      	ldr	r6, [r0, #36]	; 0x24
   1c1be:	b095      	sub	sp, #84	; 0x54
   1c1c0:	4604      	mov	r4, r0
   1c1c2:	9d21      	ldr	r5, [sp, #132]	; 0x84
   1c1c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1c1c8:	b93e      	cbnz	r6, 1c1da <_dtoa_r+0x22>
   1c1ca:	2010      	movs	r0, #16
   1c1cc:	f7fc ffae 	bl	1912c <malloc>
   1c1d0:	6260      	str	r0, [r4, #36]	; 0x24
   1c1d2:	6046      	str	r6, [r0, #4]
   1c1d4:	6086      	str	r6, [r0, #8]
   1c1d6:	6006      	str	r6, [r0, #0]
   1c1d8:	60c6      	str	r6, [r0, #12]
   1c1da:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1c1dc:	6819      	ldr	r1, [r3, #0]
   1c1de:	b151      	cbz	r1, 1c1f6 <_dtoa_r+0x3e>
   1c1e0:	685a      	ldr	r2, [r3, #4]
   1c1e2:	2301      	movs	r3, #1
   1c1e4:	4093      	lsls	r3, r2
   1c1e6:	604a      	str	r2, [r1, #4]
   1c1e8:	608b      	str	r3, [r1, #8]
   1c1ea:	4620      	mov	r0, r4
   1c1ec:	f001 f9ac 	bl	1d548 <_Bfree>
   1c1f0:	2200      	movs	r2, #0
   1c1f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1c1f4:	601a      	str	r2, [r3, #0]
   1c1f6:	9b03      	ldr	r3, [sp, #12]
   1c1f8:	2b00      	cmp	r3, #0
   1c1fa:	bfb7      	itett	lt
   1c1fc:	2301      	movlt	r3, #1
   1c1fe:	2300      	movge	r3, #0
   1c200:	602b      	strlt	r3, [r5, #0]
   1c202:	9b03      	ldrlt	r3, [sp, #12]
   1c204:	bfae      	itee	ge
   1c206:	602b      	strge	r3, [r5, #0]
   1c208:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   1c20c:	9303      	strlt	r3, [sp, #12]
   1c20e:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1c212:	4bab      	ldr	r3, [pc, #684]	; (1c4c0 <_dtoa_r+0x308>)
   1c214:	ea33 0309 	bics.w	r3, r3, r9
   1c218:	d11b      	bne.n	1c252 <_dtoa_r+0x9a>
   1c21a:	f242 730f 	movw	r3, #9999	; 0x270f
   1c21e:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1c220:	6013      	str	r3, [r2, #0]
   1c222:	9b02      	ldr	r3, [sp, #8]
   1c224:	b923      	cbnz	r3, 1c230 <_dtoa_r+0x78>
   1c226:	f3c9 0013 	ubfx	r0, r9, #0, #20
   1c22a:	2800      	cmp	r0, #0
   1c22c:	f000 8583 	beq.w	1cd36 <_dtoa_r+0xb7e>
   1c230:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1c232:	b953      	cbnz	r3, 1c24a <_dtoa_r+0x92>
   1c234:	4ba3      	ldr	r3, [pc, #652]	; (1c4c4 <_dtoa_r+0x30c>)
   1c236:	e021      	b.n	1c27c <_dtoa_r+0xc4>
   1c238:	4ba3      	ldr	r3, [pc, #652]	; (1c4c8 <_dtoa_r+0x310>)
   1c23a:	9306      	str	r3, [sp, #24]
   1c23c:	3308      	adds	r3, #8
   1c23e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1c240:	6013      	str	r3, [r2, #0]
   1c242:	9806      	ldr	r0, [sp, #24]
   1c244:	b015      	add	sp, #84	; 0x54
   1c246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c24a:	4b9e      	ldr	r3, [pc, #632]	; (1c4c4 <_dtoa_r+0x30c>)
   1c24c:	9306      	str	r3, [sp, #24]
   1c24e:	3303      	adds	r3, #3
   1c250:	e7f5      	b.n	1c23e <_dtoa_r+0x86>
   1c252:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1c256:	2200      	movs	r2, #0
   1c258:	2300      	movs	r3, #0
   1c25a:	4630      	mov	r0, r6
   1c25c:	4639      	mov	r1, r7
   1c25e:	f003 f865 	bl	1f32c <__aeabi_dcmpeq>
   1c262:	4680      	mov	r8, r0
   1c264:	b160      	cbz	r0, 1c280 <_dtoa_r+0xc8>
   1c266:	2301      	movs	r3, #1
   1c268:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1c26a:	6013      	str	r3, [r2, #0]
   1c26c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1c26e:	2b00      	cmp	r3, #0
   1c270:	f000 855e 	beq.w	1cd30 <_dtoa_r+0xb78>
   1c274:	4b95      	ldr	r3, [pc, #596]	; (1c4cc <_dtoa_r+0x314>)
   1c276:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1c278:	6013      	str	r3, [r2, #0]
   1c27a:	3b01      	subs	r3, #1
   1c27c:	9306      	str	r3, [sp, #24]
   1c27e:	e7e0      	b.n	1c242 <_dtoa_r+0x8a>
   1c280:	ab12      	add	r3, sp, #72	; 0x48
   1c282:	9301      	str	r3, [sp, #4]
   1c284:	ab13      	add	r3, sp, #76	; 0x4c
   1c286:	9300      	str	r3, [sp, #0]
   1c288:	4632      	mov	r2, r6
   1c28a:	463b      	mov	r3, r7
   1c28c:	4620      	mov	r0, r4
   1c28e:	f001 fc5d 	bl	1db4c <__d2b>
   1c292:	f3c9 550a 	ubfx	r5, r9, #20, #11
   1c296:	4682      	mov	sl, r0
   1c298:	2d00      	cmp	r5, #0
   1c29a:	d07d      	beq.n	1c398 <_dtoa_r+0x1e0>
   1c29c:	4630      	mov	r0, r6
   1c29e:	f3c7 0313 	ubfx	r3, r7, #0, #20
   1c2a2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   1c2a6:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   1c2aa:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   1c2ae:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   1c2b2:	2200      	movs	r2, #0
   1c2b4:	4b86      	ldr	r3, [pc, #536]	; (1c4d0 <_dtoa_r+0x318>)
   1c2b6:	f7fb feb9 	bl	1802c <__aeabi_dsub>
   1c2ba:	a37b      	add	r3, pc, #492	; (adr r3, 1c4a8 <_dtoa_r+0x2f0>)
   1c2bc:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c2c0:	f002 fdcc 	bl	1ee5c <__aeabi_dmul>
   1c2c4:	a37a      	add	r3, pc, #488	; (adr r3, 1c4b0 <_dtoa_r+0x2f8>)
   1c2c6:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c2ca:	f7fb feb1 	bl	18030 <__adddf3>
   1c2ce:	4606      	mov	r6, r0
   1c2d0:	4628      	mov	r0, r5
   1c2d2:	460f      	mov	r7, r1
   1c2d4:	f7fb fff8 	bl	182c8 <__aeabi_i2d>
   1c2d8:	a377      	add	r3, pc, #476	; (adr r3, 1c4b8 <_dtoa_r+0x300>)
   1c2da:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c2de:	f002 fdbd 	bl	1ee5c <__aeabi_dmul>
   1c2e2:	4602      	mov	r2, r0
   1c2e4:	460b      	mov	r3, r1
   1c2e6:	4630      	mov	r0, r6
   1c2e8:	4639      	mov	r1, r7
   1c2ea:	f7fb fea1 	bl	18030 <__adddf3>
   1c2ee:	4606      	mov	r6, r0
   1c2f0:	460f      	mov	r7, r1
   1c2f2:	f003 f863 	bl	1f3bc <__aeabi_d2iz>
   1c2f6:	2200      	movs	r2, #0
   1c2f8:	4683      	mov	fp, r0
   1c2fa:	2300      	movs	r3, #0
   1c2fc:	4630      	mov	r0, r6
   1c2fe:	4639      	mov	r1, r7
   1c300:	f003 f81e 	bl	1f340 <__aeabi_dcmplt>
   1c304:	b158      	cbz	r0, 1c31e <_dtoa_r+0x166>
   1c306:	4658      	mov	r0, fp
   1c308:	f7fb ffde 	bl	182c8 <__aeabi_i2d>
   1c30c:	4602      	mov	r2, r0
   1c30e:	460b      	mov	r3, r1
   1c310:	4630      	mov	r0, r6
   1c312:	4639      	mov	r1, r7
   1c314:	f003 f80a 	bl	1f32c <__aeabi_dcmpeq>
   1c318:	b908      	cbnz	r0, 1c31e <_dtoa_r+0x166>
   1c31a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c31e:	f1bb 0f16 	cmp.w	fp, #22
   1c322:	d858      	bhi.n	1c3d6 <_dtoa_r+0x21e>
   1c324:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c328:	496a      	ldr	r1, [pc, #424]	; (1c4d4 <_dtoa_r+0x31c>)
   1c32a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   1c32e:	e9d1 0100 	ldrd	r0, r1, [r1]
   1c332:	f003 f823 	bl	1f37c <__aeabi_dcmpgt>
   1c336:	2800      	cmp	r0, #0
   1c338:	d04f      	beq.n	1c3da <_dtoa_r+0x222>
   1c33a:	2300      	movs	r3, #0
   1c33c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c340:	930d      	str	r3, [sp, #52]	; 0x34
   1c342:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1c344:	1b5d      	subs	r5, r3, r5
   1c346:	1e6b      	subs	r3, r5, #1
   1c348:	9307      	str	r3, [sp, #28]
   1c34a:	bf43      	ittte	mi
   1c34c:	2300      	movmi	r3, #0
   1c34e:	f1c5 0801 	rsbmi	r8, r5, #1
   1c352:	9307      	strmi	r3, [sp, #28]
   1c354:	f04f 0800 	movpl.w	r8, #0
   1c358:	f1bb 0f00 	cmp.w	fp, #0
   1c35c:	db3f      	blt.n	1c3de <_dtoa_r+0x226>
   1c35e:	9b07      	ldr	r3, [sp, #28]
   1c360:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   1c364:	445b      	add	r3, fp
   1c366:	9307      	str	r3, [sp, #28]
   1c368:	2300      	movs	r3, #0
   1c36a:	9308      	str	r3, [sp, #32]
   1c36c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c36e:	2b09      	cmp	r3, #9
   1c370:	f200 80b4 	bhi.w	1c4dc <_dtoa_r+0x324>
   1c374:	2b05      	cmp	r3, #5
   1c376:	bfc4      	itt	gt
   1c378:	3b04      	subgt	r3, #4
   1c37a:	931e      	strgt	r3, [sp, #120]	; 0x78
   1c37c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c37e:	bfc8      	it	gt
   1c380:	2600      	movgt	r6, #0
   1c382:	f1a3 0302 	sub.w	r3, r3, #2
   1c386:	bfd8      	it	le
   1c388:	2601      	movle	r6, #1
   1c38a:	2b03      	cmp	r3, #3
   1c38c:	f200 80b2 	bhi.w	1c4f4 <_dtoa_r+0x33c>
   1c390:	e8df f003 	tbb	[pc, r3]
   1c394:	782d8684 	.word	0x782d8684
   1c398:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1c39a:	9d12      	ldr	r5, [sp, #72]	; 0x48
   1c39c:	441d      	add	r5, r3
   1c39e:	f205 4332 	addw	r3, r5, #1074	; 0x432
   1c3a2:	2b20      	cmp	r3, #32
   1c3a4:	dd11      	ble.n	1c3ca <_dtoa_r+0x212>
   1c3a6:	9a02      	ldr	r2, [sp, #8]
   1c3a8:	f205 4012 	addw	r0, r5, #1042	; 0x412
   1c3ac:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   1c3b0:	fa22 f000 	lsr.w	r0, r2, r0
   1c3b4:	fa09 f303 	lsl.w	r3, r9, r3
   1c3b8:	4318      	orrs	r0, r3
   1c3ba:	f7fb ff75 	bl	182a8 <__aeabi_ui2d>
   1c3be:	2301      	movs	r3, #1
   1c3c0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   1c3c4:	3d01      	subs	r5, #1
   1c3c6:	9310      	str	r3, [sp, #64]	; 0x40
   1c3c8:	e773      	b.n	1c2b2 <_dtoa_r+0xfa>
   1c3ca:	f1c3 0020 	rsb	r0, r3, #32
   1c3ce:	9b02      	ldr	r3, [sp, #8]
   1c3d0:	fa03 f000 	lsl.w	r0, r3, r0
   1c3d4:	e7f1      	b.n	1c3ba <_dtoa_r+0x202>
   1c3d6:	2301      	movs	r3, #1
   1c3d8:	e7b2      	b.n	1c340 <_dtoa_r+0x188>
   1c3da:	900d      	str	r0, [sp, #52]	; 0x34
   1c3dc:	e7b1      	b.n	1c342 <_dtoa_r+0x18a>
   1c3de:	f1cb 0300 	rsb	r3, fp, #0
   1c3e2:	9308      	str	r3, [sp, #32]
   1c3e4:	2300      	movs	r3, #0
   1c3e6:	eba8 080b 	sub.w	r8, r8, fp
   1c3ea:	930c      	str	r3, [sp, #48]	; 0x30
   1c3ec:	e7be      	b.n	1c36c <_dtoa_r+0x1b4>
   1c3ee:	2301      	movs	r3, #1
   1c3f0:	9309      	str	r3, [sp, #36]	; 0x24
   1c3f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c3f4:	2b00      	cmp	r3, #0
   1c3f6:	f340 8080 	ble.w	1c4fa <_dtoa_r+0x342>
   1c3fa:	4699      	mov	r9, r3
   1c3fc:	9304      	str	r3, [sp, #16]
   1c3fe:	2200      	movs	r2, #0
   1c400:	2104      	movs	r1, #4
   1c402:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1c404:	606a      	str	r2, [r5, #4]
   1c406:	f101 0214 	add.w	r2, r1, #20
   1c40a:	429a      	cmp	r2, r3
   1c40c:	d97a      	bls.n	1c504 <_dtoa_r+0x34c>
   1c40e:	6869      	ldr	r1, [r5, #4]
   1c410:	4620      	mov	r0, r4
   1c412:	f001 f865 	bl	1d4e0 <_Balloc>
   1c416:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1c418:	6028      	str	r0, [r5, #0]
   1c41a:	681b      	ldr	r3, [r3, #0]
   1c41c:	f1b9 0f0e 	cmp.w	r9, #14
   1c420:	9306      	str	r3, [sp, #24]
   1c422:	f200 80f0 	bhi.w	1c606 <_dtoa_r+0x44e>
   1c426:	2e00      	cmp	r6, #0
   1c428:	f000 80ed 	beq.w	1c606 <_dtoa_r+0x44e>
   1c42c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c430:	f1bb 0f00 	cmp.w	fp, #0
   1c434:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   1c438:	dd79      	ble.n	1c52e <_dtoa_r+0x376>
   1c43a:	4a26      	ldr	r2, [pc, #152]	; (1c4d4 <_dtoa_r+0x31c>)
   1c43c:	f00b 030f 	and.w	r3, fp, #15
   1c440:	ea4f 162b 	mov.w	r6, fp, asr #4
   1c444:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1c448:	06f0      	lsls	r0, r6, #27
   1c44a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c44e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1c452:	d55c      	bpl.n	1c50e <_dtoa_r+0x356>
   1c454:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1c458:	4b1f      	ldr	r3, [pc, #124]	; (1c4d8 <_dtoa_r+0x320>)
   1c45a:	2503      	movs	r5, #3
   1c45c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1c460:	f002 fe26 	bl	1f0b0 <__aeabi_ddiv>
   1c464:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c468:	f006 060f 	and.w	r6, r6, #15
   1c46c:	4f1a      	ldr	r7, [pc, #104]	; (1c4d8 <_dtoa_r+0x320>)
   1c46e:	2e00      	cmp	r6, #0
   1c470:	d14f      	bne.n	1c512 <_dtoa_r+0x35a>
   1c472:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c476:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c47a:	f002 fe19 	bl	1f0b0 <__aeabi_ddiv>
   1c47e:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c482:	e06e      	b.n	1c562 <_dtoa_r+0x3aa>
   1c484:	2301      	movs	r3, #1
   1c486:	9309      	str	r3, [sp, #36]	; 0x24
   1c488:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c48a:	445b      	add	r3, fp
   1c48c:	f103 0901 	add.w	r9, r3, #1
   1c490:	9304      	str	r3, [sp, #16]
   1c492:	464b      	mov	r3, r9
   1c494:	2b01      	cmp	r3, #1
   1c496:	bfb8      	it	lt
   1c498:	2301      	movlt	r3, #1
   1c49a:	e7b0      	b.n	1c3fe <_dtoa_r+0x246>
   1c49c:	2300      	movs	r3, #0
   1c49e:	e7a7      	b.n	1c3f0 <_dtoa_r+0x238>
   1c4a0:	2300      	movs	r3, #0
   1c4a2:	e7f0      	b.n	1c486 <_dtoa_r+0x2ce>
   1c4a4:	f3af 8000 	nop.w
   1c4a8:	636f4361 	.word	0x636f4361
   1c4ac:	3fd287a7 	.word	0x3fd287a7
   1c4b0:	8b60c8b3 	.word	0x8b60c8b3
   1c4b4:	3fc68a28 	.word	0x3fc68a28
   1c4b8:	509f79fb 	.word	0x509f79fb
   1c4bc:	3fd34413 	.word	0x3fd34413
   1c4c0:	7ff00000 	.word	0x7ff00000
   1c4c4:	0002090e 	.word	0x0002090e
   1c4c8:	00020905 	.word	0x00020905
   1c4cc:	0001f6bf 	.word	0x0001f6bf
   1c4d0:	3ff80000 	.word	0x3ff80000
   1c4d4:	00020940 	.word	0x00020940
   1c4d8:	00020918 	.word	0x00020918
   1c4dc:	2601      	movs	r6, #1
   1c4de:	2300      	movs	r3, #0
   1c4e0:	9609      	str	r6, [sp, #36]	; 0x24
   1c4e2:	931e      	str	r3, [sp, #120]	; 0x78
   1c4e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1c4e8:	2200      	movs	r2, #0
   1c4ea:	9304      	str	r3, [sp, #16]
   1c4ec:	4699      	mov	r9, r3
   1c4ee:	2312      	movs	r3, #18
   1c4f0:	921f      	str	r2, [sp, #124]	; 0x7c
   1c4f2:	e784      	b.n	1c3fe <_dtoa_r+0x246>
   1c4f4:	2301      	movs	r3, #1
   1c4f6:	9309      	str	r3, [sp, #36]	; 0x24
   1c4f8:	e7f4      	b.n	1c4e4 <_dtoa_r+0x32c>
   1c4fa:	2301      	movs	r3, #1
   1c4fc:	9304      	str	r3, [sp, #16]
   1c4fe:	4699      	mov	r9, r3
   1c500:	461a      	mov	r2, r3
   1c502:	e7f5      	b.n	1c4f0 <_dtoa_r+0x338>
   1c504:	686a      	ldr	r2, [r5, #4]
   1c506:	0049      	lsls	r1, r1, #1
   1c508:	3201      	adds	r2, #1
   1c50a:	606a      	str	r2, [r5, #4]
   1c50c:	e77b      	b.n	1c406 <_dtoa_r+0x24e>
   1c50e:	2502      	movs	r5, #2
   1c510:	e7ac      	b.n	1c46c <_dtoa_r+0x2b4>
   1c512:	07f1      	lsls	r1, r6, #31
   1c514:	d508      	bpl.n	1c528 <_dtoa_r+0x370>
   1c516:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c51a:	e9d7 2300 	ldrd	r2, r3, [r7]
   1c51e:	f002 fc9d 	bl	1ee5c <__aeabi_dmul>
   1c522:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c526:	3501      	adds	r5, #1
   1c528:	1076      	asrs	r6, r6, #1
   1c52a:	3708      	adds	r7, #8
   1c52c:	e79f      	b.n	1c46e <_dtoa_r+0x2b6>
   1c52e:	f000 80a5 	beq.w	1c67c <_dtoa_r+0x4c4>
   1c532:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1c536:	f1cb 0600 	rsb	r6, fp, #0
   1c53a:	4ba2      	ldr	r3, [pc, #648]	; (1c7c4 <_dtoa_r+0x60c>)
   1c53c:	f006 020f 	and.w	r2, r6, #15
   1c540:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1c544:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c548:	f002 fc88 	bl	1ee5c <__aeabi_dmul>
   1c54c:	2502      	movs	r5, #2
   1c54e:	2300      	movs	r3, #0
   1c550:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c554:	4f9c      	ldr	r7, [pc, #624]	; (1c7c8 <_dtoa_r+0x610>)
   1c556:	1136      	asrs	r6, r6, #4
   1c558:	2e00      	cmp	r6, #0
   1c55a:	f040 8084 	bne.w	1c666 <_dtoa_r+0x4ae>
   1c55e:	2b00      	cmp	r3, #0
   1c560:	d18d      	bne.n	1c47e <_dtoa_r+0x2c6>
   1c562:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c564:	2b00      	cmp	r3, #0
   1c566:	f000 808b 	beq.w	1c680 <_dtoa_r+0x4c8>
   1c56a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c56e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1c572:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c576:	2200      	movs	r2, #0
   1c578:	4b94      	ldr	r3, [pc, #592]	; (1c7cc <_dtoa_r+0x614>)
   1c57a:	f002 fee1 	bl	1f340 <__aeabi_dcmplt>
   1c57e:	2800      	cmp	r0, #0
   1c580:	d07e      	beq.n	1c680 <_dtoa_r+0x4c8>
   1c582:	f1b9 0f00 	cmp.w	r9, #0
   1c586:	d07b      	beq.n	1c680 <_dtoa_r+0x4c8>
   1c588:	9b04      	ldr	r3, [sp, #16]
   1c58a:	2b00      	cmp	r3, #0
   1c58c:	dd37      	ble.n	1c5fe <_dtoa_r+0x446>
   1c58e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c592:	2200      	movs	r2, #0
   1c594:	4b8e      	ldr	r3, [pc, #568]	; (1c7d0 <_dtoa_r+0x618>)
   1c596:	f002 fc61 	bl	1ee5c <__aeabi_dmul>
   1c59a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c59e:	9e04      	ldr	r6, [sp, #16]
   1c5a0:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   1c5a4:	3501      	adds	r5, #1
   1c5a6:	4628      	mov	r0, r5
   1c5a8:	f7fb fe8e 	bl	182c8 <__aeabi_i2d>
   1c5ac:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c5b0:	f002 fc54 	bl	1ee5c <__aeabi_dmul>
   1c5b4:	4b87      	ldr	r3, [pc, #540]	; (1c7d4 <_dtoa_r+0x61c>)
   1c5b6:	2200      	movs	r2, #0
   1c5b8:	f7fb fd3a 	bl	18030 <__adddf3>
   1c5bc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c5c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c5c2:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   1c5c6:	950b      	str	r5, [sp, #44]	; 0x2c
   1c5c8:	2e00      	cmp	r6, #0
   1c5ca:	d15c      	bne.n	1c686 <_dtoa_r+0x4ce>
   1c5cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c5d0:	2200      	movs	r2, #0
   1c5d2:	4b81      	ldr	r3, [pc, #516]	; (1c7d8 <_dtoa_r+0x620>)
   1c5d4:	f7fb fd2a 	bl	1802c <__aeabi_dsub>
   1c5d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1c5da:	462b      	mov	r3, r5
   1c5dc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c5e0:	f002 fecc 	bl	1f37c <__aeabi_dcmpgt>
   1c5e4:	2800      	cmp	r0, #0
   1c5e6:	f040 82f7 	bne.w	1cbd8 <_dtoa_r+0xa20>
   1c5ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c5ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1c5f0:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1c5f4:	f002 fea4 	bl	1f340 <__aeabi_dcmplt>
   1c5f8:	2800      	cmp	r0, #0
   1c5fa:	f040 82eb 	bne.w	1cbd4 <_dtoa_r+0xa1c>
   1c5fe:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   1c602:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1c606:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1c608:	2b00      	cmp	r3, #0
   1c60a:	f2c0 8150 	blt.w	1c8ae <_dtoa_r+0x6f6>
   1c60e:	f1bb 0f0e 	cmp.w	fp, #14
   1c612:	f300 814c 	bgt.w	1c8ae <_dtoa_r+0x6f6>
   1c616:	4b6b      	ldr	r3, [pc, #428]	; (1c7c4 <_dtoa_r+0x60c>)
   1c618:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   1c61c:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c620:	e9cd 2304 	strd	r2, r3, [sp, #16]
   1c624:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1c626:	2b00      	cmp	r3, #0
   1c628:	f280 80da 	bge.w	1c7e0 <_dtoa_r+0x628>
   1c62c:	f1b9 0f00 	cmp.w	r9, #0
   1c630:	f300 80d6 	bgt.w	1c7e0 <_dtoa_r+0x628>
   1c634:	f040 82cd 	bne.w	1cbd2 <_dtoa_r+0xa1a>
   1c638:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c63c:	2200      	movs	r2, #0
   1c63e:	4b66      	ldr	r3, [pc, #408]	; (1c7d8 <_dtoa_r+0x620>)
   1c640:	f002 fc0c 	bl	1ee5c <__aeabi_dmul>
   1c644:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c648:	f002 fe8e 	bl	1f368 <__aeabi_dcmpge>
   1c64c:	464e      	mov	r6, r9
   1c64e:	464f      	mov	r7, r9
   1c650:	2800      	cmp	r0, #0
   1c652:	f040 82a4 	bne.w	1cb9e <_dtoa_r+0x9e6>
   1c656:	9b06      	ldr	r3, [sp, #24]
   1c658:	9a06      	ldr	r2, [sp, #24]
   1c65a:	1c5d      	adds	r5, r3, #1
   1c65c:	2331      	movs	r3, #49	; 0x31
   1c65e:	f10b 0b01 	add.w	fp, fp, #1
   1c662:	7013      	strb	r3, [r2, #0]
   1c664:	e29f      	b.n	1cba6 <_dtoa_r+0x9ee>
   1c666:	07f2      	lsls	r2, r6, #31
   1c668:	d505      	bpl.n	1c676 <_dtoa_r+0x4be>
   1c66a:	e9d7 2300 	ldrd	r2, r3, [r7]
   1c66e:	f002 fbf5 	bl	1ee5c <__aeabi_dmul>
   1c672:	2301      	movs	r3, #1
   1c674:	3501      	adds	r5, #1
   1c676:	1076      	asrs	r6, r6, #1
   1c678:	3708      	adds	r7, #8
   1c67a:	e76d      	b.n	1c558 <_dtoa_r+0x3a0>
   1c67c:	2502      	movs	r5, #2
   1c67e:	e770      	b.n	1c562 <_dtoa_r+0x3aa>
   1c680:	465f      	mov	r7, fp
   1c682:	464e      	mov	r6, r9
   1c684:	e78f      	b.n	1c5a6 <_dtoa_r+0x3ee>
   1c686:	9a06      	ldr	r2, [sp, #24]
   1c688:	4b4e      	ldr	r3, [pc, #312]	; (1c7c4 <_dtoa_r+0x60c>)
   1c68a:	4432      	add	r2, r6
   1c68c:	9211      	str	r2, [sp, #68]	; 0x44
   1c68e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1c690:	1e71      	subs	r1, r6, #1
   1c692:	2a00      	cmp	r2, #0
   1c694:	d048      	beq.n	1c728 <_dtoa_r+0x570>
   1c696:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   1c69a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c69e:	2000      	movs	r0, #0
   1c6a0:	494e      	ldr	r1, [pc, #312]	; (1c7dc <_dtoa_r+0x624>)
   1c6a2:	f002 fd05 	bl	1f0b0 <__aeabi_ddiv>
   1c6a6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c6aa:	f7fb fcbf 	bl	1802c <__aeabi_dsub>
   1c6ae:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c6b2:	9d06      	ldr	r5, [sp, #24]
   1c6b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c6b8:	f002 fe80 	bl	1f3bc <__aeabi_d2iz>
   1c6bc:	4606      	mov	r6, r0
   1c6be:	f7fb fe03 	bl	182c8 <__aeabi_i2d>
   1c6c2:	4602      	mov	r2, r0
   1c6c4:	460b      	mov	r3, r1
   1c6c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c6ca:	f7fb fcaf 	bl	1802c <__aeabi_dsub>
   1c6ce:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c6d2:	3630      	adds	r6, #48	; 0x30
   1c6d4:	f805 6b01 	strb.w	r6, [r5], #1
   1c6d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c6dc:	f002 fe30 	bl	1f340 <__aeabi_dcmplt>
   1c6e0:	2800      	cmp	r0, #0
   1c6e2:	d164      	bne.n	1c7ae <_dtoa_r+0x5f6>
   1c6e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1c6e8:	2000      	movs	r0, #0
   1c6ea:	4938      	ldr	r1, [pc, #224]	; (1c7cc <_dtoa_r+0x614>)
   1c6ec:	f7fb fc9e 	bl	1802c <__aeabi_dsub>
   1c6f0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c6f4:	f002 fe24 	bl	1f340 <__aeabi_dcmplt>
   1c6f8:	2800      	cmp	r0, #0
   1c6fa:	f040 80b9 	bne.w	1c870 <_dtoa_r+0x6b8>
   1c6fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1c700:	429d      	cmp	r5, r3
   1c702:	f43f af7c 	beq.w	1c5fe <_dtoa_r+0x446>
   1c706:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c70a:	2200      	movs	r2, #0
   1c70c:	4b30      	ldr	r3, [pc, #192]	; (1c7d0 <_dtoa_r+0x618>)
   1c70e:	f002 fba5 	bl	1ee5c <__aeabi_dmul>
   1c712:	2200      	movs	r2, #0
   1c714:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c718:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c71c:	4b2c      	ldr	r3, [pc, #176]	; (1c7d0 <_dtoa_r+0x618>)
   1c71e:	f002 fb9d 	bl	1ee5c <__aeabi_dmul>
   1c722:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c726:	e7c5      	b.n	1c6b4 <_dtoa_r+0x4fc>
   1c728:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   1c72c:	e9d1 0100 	ldrd	r0, r1, [r1]
   1c730:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c734:	f002 fb92 	bl	1ee5c <__aeabi_dmul>
   1c738:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1c73c:	9d06      	ldr	r5, [sp, #24]
   1c73e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c742:	f002 fe3b 	bl	1f3bc <__aeabi_d2iz>
   1c746:	4606      	mov	r6, r0
   1c748:	f7fb fdbe 	bl	182c8 <__aeabi_i2d>
   1c74c:	4602      	mov	r2, r0
   1c74e:	460b      	mov	r3, r1
   1c750:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c754:	f7fb fc6a 	bl	1802c <__aeabi_dsub>
   1c758:	3630      	adds	r6, #48	; 0x30
   1c75a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1c75c:	f805 6b01 	strb.w	r6, [r5], #1
   1c760:	42ab      	cmp	r3, r5
   1c762:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c766:	f04f 0200 	mov.w	r2, #0
   1c76a:	d124      	bne.n	1c7b6 <_dtoa_r+0x5fe>
   1c76c:	4b1b      	ldr	r3, [pc, #108]	; (1c7dc <_dtoa_r+0x624>)
   1c76e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c772:	f7fb fc5d 	bl	18030 <__adddf3>
   1c776:	4602      	mov	r2, r0
   1c778:	460b      	mov	r3, r1
   1c77a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c77e:	f002 fdfd 	bl	1f37c <__aeabi_dcmpgt>
   1c782:	2800      	cmp	r0, #0
   1c784:	d174      	bne.n	1c870 <_dtoa_r+0x6b8>
   1c786:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c78a:	2000      	movs	r0, #0
   1c78c:	4913      	ldr	r1, [pc, #76]	; (1c7dc <_dtoa_r+0x624>)
   1c78e:	f7fb fc4d 	bl	1802c <__aeabi_dsub>
   1c792:	4602      	mov	r2, r0
   1c794:	460b      	mov	r3, r1
   1c796:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1c79a:	f002 fdd1 	bl	1f340 <__aeabi_dcmplt>
   1c79e:	2800      	cmp	r0, #0
   1c7a0:	f43f af2d 	beq.w	1c5fe <_dtoa_r+0x446>
   1c7a4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1c7a8:	1e6a      	subs	r2, r5, #1
   1c7aa:	2b30      	cmp	r3, #48	; 0x30
   1c7ac:	d001      	beq.n	1c7b2 <_dtoa_r+0x5fa>
   1c7ae:	46bb      	mov	fp, r7
   1c7b0:	e04d      	b.n	1c84e <_dtoa_r+0x696>
   1c7b2:	4615      	mov	r5, r2
   1c7b4:	e7f6      	b.n	1c7a4 <_dtoa_r+0x5ec>
   1c7b6:	4b06      	ldr	r3, [pc, #24]	; (1c7d0 <_dtoa_r+0x618>)
   1c7b8:	f002 fb50 	bl	1ee5c <__aeabi_dmul>
   1c7bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1c7c0:	e7bd      	b.n	1c73e <_dtoa_r+0x586>
   1c7c2:	bf00      	nop
   1c7c4:	00020940 	.word	0x00020940
   1c7c8:	00020918 	.word	0x00020918
   1c7cc:	3ff00000 	.word	0x3ff00000
   1c7d0:	40240000 	.word	0x40240000
   1c7d4:	401c0000 	.word	0x401c0000
   1c7d8:	40140000 	.word	0x40140000
   1c7dc:	3fe00000 	.word	0x3fe00000
   1c7e0:	9d06      	ldr	r5, [sp, #24]
   1c7e2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1c7e6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1c7ea:	4630      	mov	r0, r6
   1c7ec:	4639      	mov	r1, r7
   1c7ee:	f002 fc5f 	bl	1f0b0 <__aeabi_ddiv>
   1c7f2:	f002 fde3 	bl	1f3bc <__aeabi_d2iz>
   1c7f6:	4680      	mov	r8, r0
   1c7f8:	f7fb fd66 	bl	182c8 <__aeabi_i2d>
   1c7fc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1c800:	f002 fb2c 	bl	1ee5c <__aeabi_dmul>
   1c804:	4602      	mov	r2, r0
   1c806:	460b      	mov	r3, r1
   1c808:	4630      	mov	r0, r6
   1c80a:	4639      	mov	r1, r7
   1c80c:	f7fb fc0e 	bl	1802c <__aeabi_dsub>
   1c810:	f108 0630 	add.w	r6, r8, #48	; 0x30
   1c814:	f805 6b01 	strb.w	r6, [r5], #1
   1c818:	9e06      	ldr	r6, [sp, #24]
   1c81a:	4602      	mov	r2, r0
   1c81c:	1bae      	subs	r6, r5, r6
   1c81e:	45b1      	cmp	r9, r6
   1c820:	460b      	mov	r3, r1
   1c822:	d137      	bne.n	1c894 <_dtoa_r+0x6dc>
   1c824:	f7fb fc04 	bl	18030 <__adddf3>
   1c828:	4606      	mov	r6, r0
   1c82a:	460f      	mov	r7, r1
   1c82c:	4602      	mov	r2, r0
   1c82e:	460b      	mov	r3, r1
   1c830:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c834:	f002 fd84 	bl	1f340 <__aeabi_dcmplt>
   1c838:	b9c8      	cbnz	r0, 1c86e <_dtoa_r+0x6b6>
   1c83a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1c83e:	4632      	mov	r2, r6
   1c840:	463b      	mov	r3, r7
   1c842:	f002 fd73 	bl	1f32c <__aeabi_dcmpeq>
   1c846:	b110      	cbz	r0, 1c84e <_dtoa_r+0x696>
   1c848:	f018 0f01 	tst.w	r8, #1
   1c84c:	d10f      	bne.n	1c86e <_dtoa_r+0x6b6>
   1c84e:	4651      	mov	r1, sl
   1c850:	4620      	mov	r0, r4
   1c852:	f000 fe79 	bl	1d548 <_Bfree>
   1c856:	2300      	movs	r3, #0
   1c858:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1c85a:	702b      	strb	r3, [r5, #0]
   1c85c:	f10b 0301 	add.w	r3, fp, #1
   1c860:	6013      	str	r3, [r2, #0]
   1c862:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1c864:	2b00      	cmp	r3, #0
   1c866:	f43f acec 	beq.w	1c242 <_dtoa_r+0x8a>
   1c86a:	601d      	str	r5, [r3, #0]
   1c86c:	e4e9      	b.n	1c242 <_dtoa_r+0x8a>
   1c86e:	465f      	mov	r7, fp
   1c870:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   1c874:	1e6b      	subs	r3, r5, #1
   1c876:	2a39      	cmp	r2, #57	; 0x39
   1c878:	d106      	bne.n	1c888 <_dtoa_r+0x6d0>
   1c87a:	9a06      	ldr	r2, [sp, #24]
   1c87c:	429a      	cmp	r2, r3
   1c87e:	d107      	bne.n	1c890 <_dtoa_r+0x6d8>
   1c880:	2330      	movs	r3, #48	; 0x30
   1c882:	7013      	strb	r3, [r2, #0]
   1c884:	4613      	mov	r3, r2
   1c886:	3701      	adds	r7, #1
   1c888:	781a      	ldrb	r2, [r3, #0]
   1c88a:	3201      	adds	r2, #1
   1c88c:	701a      	strb	r2, [r3, #0]
   1c88e:	e78e      	b.n	1c7ae <_dtoa_r+0x5f6>
   1c890:	461d      	mov	r5, r3
   1c892:	e7ed      	b.n	1c870 <_dtoa_r+0x6b8>
   1c894:	2200      	movs	r2, #0
   1c896:	4bb5      	ldr	r3, [pc, #724]	; (1cb6c <_dtoa_r+0x9b4>)
   1c898:	f002 fae0 	bl	1ee5c <__aeabi_dmul>
   1c89c:	2200      	movs	r2, #0
   1c89e:	2300      	movs	r3, #0
   1c8a0:	4606      	mov	r6, r0
   1c8a2:	460f      	mov	r7, r1
   1c8a4:	f002 fd42 	bl	1f32c <__aeabi_dcmpeq>
   1c8a8:	2800      	cmp	r0, #0
   1c8aa:	d09c      	beq.n	1c7e6 <_dtoa_r+0x62e>
   1c8ac:	e7cf      	b.n	1c84e <_dtoa_r+0x696>
   1c8ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1c8b0:	2a00      	cmp	r2, #0
   1c8b2:	f000 8129 	beq.w	1cb08 <_dtoa_r+0x950>
   1c8b6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1c8b8:	2a01      	cmp	r2, #1
   1c8ba:	f300 810e 	bgt.w	1cada <_dtoa_r+0x922>
   1c8be:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1c8c0:	2a00      	cmp	r2, #0
   1c8c2:	f000 8106 	beq.w	1cad2 <_dtoa_r+0x91a>
   1c8c6:	f203 4333 	addw	r3, r3, #1075	; 0x433
   1c8ca:	4645      	mov	r5, r8
   1c8cc:	9e08      	ldr	r6, [sp, #32]
   1c8ce:	9a07      	ldr	r2, [sp, #28]
   1c8d0:	2101      	movs	r1, #1
   1c8d2:	441a      	add	r2, r3
   1c8d4:	4620      	mov	r0, r4
   1c8d6:	4498      	add	r8, r3
   1c8d8:	9207      	str	r2, [sp, #28]
   1c8da:	f000 ff13 	bl	1d704 <__i2b>
   1c8de:	4607      	mov	r7, r0
   1c8e0:	2d00      	cmp	r5, #0
   1c8e2:	dd0b      	ble.n	1c8fc <_dtoa_r+0x744>
   1c8e4:	9b07      	ldr	r3, [sp, #28]
   1c8e6:	2b00      	cmp	r3, #0
   1c8e8:	dd08      	ble.n	1c8fc <_dtoa_r+0x744>
   1c8ea:	42ab      	cmp	r3, r5
   1c8ec:	bfa8      	it	ge
   1c8ee:	462b      	movge	r3, r5
   1c8f0:	9a07      	ldr	r2, [sp, #28]
   1c8f2:	eba8 0803 	sub.w	r8, r8, r3
   1c8f6:	1aed      	subs	r5, r5, r3
   1c8f8:	1ad3      	subs	r3, r2, r3
   1c8fa:	9307      	str	r3, [sp, #28]
   1c8fc:	9b08      	ldr	r3, [sp, #32]
   1c8fe:	b1fb      	cbz	r3, 1c940 <_dtoa_r+0x788>
   1c900:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c902:	2b00      	cmp	r3, #0
   1c904:	f000 8104 	beq.w	1cb10 <_dtoa_r+0x958>
   1c908:	2e00      	cmp	r6, #0
   1c90a:	dd11      	ble.n	1c930 <_dtoa_r+0x778>
   1c90c:	4639      	mov	r1, r7
   1c90e:	4632      	mov	r2, r6
   1c910:	4620      	mov	r0, r4
   1c912:	f000 ff8d 	bl	1d830 <__pow5mult>
   1c916:	4652      	mov	r2, sl
   1c918:	4601      	mov	r1, r0
   1c91a:	4607      	mov	r7, r0
   1c91c:	4620      	mov	r0, r4
   1c91e:	f000 fefa 	bl	1d716 <__multiply>
   1c922:	4651      	mov	r1, sl
   1c924:	900a      	str	r0, [sp, #40]	; 0x28
   1c926:	4620      	mov	r0, r4
   1c928:	f000 fe0e 	bl	1d548 <_Bfree>
   1c92c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c92e:	469a      	mov	sl, r3
   1c930:	9b08      	ldr	r3, [sp, #32]
   1c932:	1b9a      	subs	r2, r3, r6
   1c934:	d004      	beq.n	1c940 <_dtoa_r+0x788>
   1c936:	4651      	mov	r1, sl
   1c938:	4620      	mov	r0, r4
   1c93a:	f000 ff79 	bl	1d830 <__pow5mult>
   1c93e:	4682      	mov	sl, r0
   1c940:	2101      	movs	r1, #1
   1c942:	4620      	mov	r0, r4
   1c944:	f000 fede 	bl	1d704 <__i2b>
   1c948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1c94a:	4606      	mov	r6, r0
   1c94c:	2b00      	cmp	r3, #0
   1c94e:	f340 80e1 	ble.w	1cb14 <_dtoa_r+0x95c>
   1c952:	461a      	mov	r2, r3
   1c954:	4601      	mov	r1, r0
   1c956:	4620      	mov	r0, r4
   1c958:	f000 ff6a 	bl	1d830 <__pow5mult>
   1c95c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c95e:	4606      	mov	r6, r0
   1c960:	2b01      	cmp	r3, #1
   1c962:	f340 80da 	ble.w	1cb1a <_dtoa_r+0x962>
   1c966:	2300      	movs	r3, #0
   1c968:	9308      	str	r3, [sp, #32]
   1c96a:	6933      	ldr	r3, [r6, #16]
   1c96c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   1c970:	6918      	ldr	r0, [r3, #16]
   1c972:	f000 fe79 	bl	1d668 <__hi0bits>
   1c976:	f1c0 0020 	rsb	r0, r0, #32
   1c97a:	9b07      	ldr	r3, [sp, #28]
   1c97c:	4418      	add	r0, r3
   1c97e:	f010 001f 	ands.w	r0, r0, #31
   1c982:	f000 80f0 	beq.w	1cb66 <_dtoa_r+0x9ae>
   1c986:	f1c0 0320 	rsb	r3, r0, #32
   1c98a:	2b04      	cmp	r3, #4
   1c98c:	f340 80e2 	ble.w	1cb54 <_dtoa_r+0x99c>
   1c990:	9b07      	ldr	r3, [sp, #28]
   1c992:	f1c0 001c 	rsb	r0, r0, #28
   1c996:	4480      	add	r8, r0
   1c998:	4405      	add	r5, r0
   1c99a:	4403      	add	r3, r0
   1c99c:	9307      	str	r3, [sp, #28]
   1c99e:	f1b8 0f00 	cmp.w	r8, #0
   1c9a2:	dd05      	ble.n	1c9b0 <_dtoa_r+0x7f8>
   1c9a4:	4651      	mov	r1, sl
   1c9a6:	4642      	mov	r2, r8
   1c9a8:	4620      	mov	r0, r4
   1c9aa:	f000 ff8f 	bl	1d8cc <__lshift>
   1c9ae:	4682      	mov	sl, r0
   1c9b0:	9b07      	ldr	r3, [sp, #28]
   1c9b2:	2b00      	cmp	r3, #0
   1c9b4:	dd05      	ble.n	1c9c2 <_dtoa_r+0x80a>
   1c9b6:	4631      	mov	r1, r6
   1c9b8:	461a      	mov	r2, r3
   1c9ba:	4620      	mov	r0, r4
   1c9bc:	f000 ff86 	bl	1d8cc <__lshift>
   1c9c0:	4606      	mov	r6, r0
   1c9c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1c9c4:	2b00      	cmp	r3, #0
   1c9c6:	f000 80d3 	beq.w	1cb70 <_dtoa_r+0x9b8>
   1c9ca:	4631      	mov	r1, r6
   1c9cc:	4650      	mov	r0, sl
   1c9ce:	f000 ffce 	bl	1d96e <__mcmp>
   1c9d2:	2800      	cmp	r0, #0
   1c9d4:	f280 80cc 	bge.w	1cb70 <_dtoa_r+0x9b8>
   1c9d8:	2300      	movs	r3, #0
   1c9da:	4651      	mov	r1, sl
   1c9dc:	220a      	movs	r2, #10
   1c9de:	4620      	mov	r0, r4
   1c9e0:	f000 fdc9 	bl	1d576 <__multadd>
   1c9e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1c9e6:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1c9ea:	4682      	mov	sl, r0
   1c9ec:	2b00      	cmp	r3, #0
   1c9ee:	f000 81a9 	beq.w	1cd44 <_dtoa_r+0xb8c>
   1c9f2:	2300      	movs	r3, #0
   1c9f4:	4639      	mov	r1, r7
   1c9f6:	220a      	movs	r2, #10
   1c9f8:	4620      	mov	r0, r4
   1c9fa:	f000 fdbc 	bl	1d576 <__multadd>
   1c9fe:	9b04      	ldr	r3, [sp, #16]
   1ca00:	4607      	mov	r7, r0
   1ca02:	2b00      	cmp	r3, #0
   1ca04:	dc03      	bgt.n	1ca0e <_dtoa_r+0x856>
   1ca06:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1ca08:	2b02      	cmp	r3, #2
   1ca0a:	f300 80b9 	bgt.w	1cb80 <_dtoa_r+0x9c8>
   1ca0e:	2d00      	cmp	r5, #0
   1ca10:	dd05      	ble.n	1ca1e <_dtoa_r+0x866>
   1ca12:	4639      	mov	r1, r7
   1ca14:	462a      	mov	r2, r5
   1ca16:	4620      	mov	r0, r4
   1ca18:	f000 ff58 	bl	1d8cc <__lshift>
   1ca1c:	4607      	mov	r7, r0
   1ca1e:	9b08      	ldr	r3, [sp, #32]
   1ca20:	2b00      	cmp	r3, #0
   1ca22:	f000 8110 	beq.w	1cc46 <_dtoa_r+0xa8e>
   1ca26:	6879      	ldr	r1, [r7, #4]
   1ca28:	4620      	mov	r0, r4
   1ca2a:	f000 fd59 	bl	1d4e0 <_Balloc>
   1ca2e:	4605      	mov	r5, r0
   1ca30:	693a      	ldr	r2, [r7, #16]
   1ca32:	f107 010c 	add.w	r1, r7, #12
   1ca36:	3202      	adds	r2, #2
   1ca38:	0092      	lsls	r2, r2, #2
   1ca3a:	300c      	adds	r0, #12
   1ca3c:	f7fc fbb5 	bl	191aa <memcpy>
   1ca40:	2201      	movs	r2, #1
   1ca42:	4629      	mov	r1, r5
   1ca44:	4620      	mov	r0, r4
   1ca46:	f000 ff41 	bl	1d8cc <__lshift>
   1ca4a:	9707      	str	r7, [sp, #28]
   1ca4c:	4607      	mov	r7, r0
   1ca4e:	9b02      	ldr	r3, [sp, #8]
   1ca50:	f8dd 8018 	ldr.w	r8, [sp, #24]
   1ca54:	f003 0301 	and.w	r3, r3, #1
   1ca58:	9308      	str	r3, [sp, #32]
   1ca5a:	4631      	mov	r1, r6
   1ca5c:	4650      	mov	r0, sl
   1ca5e:	f7ff fb1f 	bl	1c0a0 <quorem>
   1ca62:	9907      	ldr	r1, [sp, #28]
   1ca64:	4605      	mov	r5, r0
   1ca66:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1ca6a:	4650      	mov	r0, sl
   1ca6c:	f000 ff7f 	bl	1d96e <__mcmp>
   1ca70:	463a      	mov	r2, r7
   1ca72:	9002      	str	r0, [sp, #8]
   1ca74:	4631      	mov	r1, r6
   1ca76:	4620      	mov	r0, r4
   1ca78:	f000 ff93 	bl	1d9a2 <__mdiff>
   1ca7c:	68c3      	ldr	r3, [r0, #12]
   1ca7e:	4602      	mov	r2, r0
   1ca80:	2b00      	cmp	r3, #0
   1ca82:	f040 80e2 	bne.w	1cc4a <_dtoa_r+0xa92>
   1ca86:	4601      	mov	r1, r0
   1ca88:	9009      	str	r0, [sp, #36]	; 0x24
   1ca8a:	4650      	mov	r0, sl
   1ca8c:	f000 ff6f 	bl	1d96e <__mcmp>
   1ca90:	4603      	mov	r3, r0
   1ca92:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ca94:	4611      	mov	r1, r2
   1ca96:	4620      	mov	r0, r4
   1ca98:	9309      	str	r3, [sp, #36]	; 0x24
   1ca9a:	f000 fd55 	bl	1d548 <_Bfree>
   1ca9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1caa0:	2b00      	cmp	r3, #0
   1caa2:	f040 80d4 	bne.w	1cc4e <_dtoa_r+0xa96>
   1caa6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1caa8:	2a00      	cmp	r2, #0
   1caaa:	f040 80d0 	bne.w	1cc4e <_dtoa_r+0xa96>
   1caae:	9a08      	ldr	r2, [sp, #32]
   1cab0:	2a00      	cmp	r2, #0
   1cab2:	f040 80cc 	bne.w	1cc4e <_dtoa_r+0xa96>
   1cab6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1caba:	f000 80e8 	beq.w	1cc8e <_dtoa_r+0xad6>
   1cabe:	9b02      	ldr	r3, [sp, #8]
   1cac0:	2b00      	cmp	r3, #0
   1cac2:	dd01      	ble.n	1cac8 <_dtoa_r+0x910>
   1cac4:	f105 0931 	add.w	r9, r5, #49	; 0x31
   1cac8:	f108 0501 	add.w	r5, r8, #1
   1cacc:	f888 9000 	strb.w	r9, [r8]
   1cad0:	e06b      	b.n	1cbaa <_dtoa_r+0x9f2>
   1cad2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1cad4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   1cad8:	e6f7      	b.n	1c8ca <_dtoa_r+0x712>
   1cada:	9b08      	ldr	r3, [sp, #32]
   1cadc:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   1cae0:	42b3      	cmp	r3, r6
   1cae2:	bfb7      	itett	lt
   1cae4:	9b08      	ldrlt	r3, [sp, #32]
   1cae6:	1b9e      	subge	r6, r3, r6
   1cae8:	1af2      	sublt	r2, r6, r3
   1caea:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   1caec:	bfbf      	itttt	lt
   1caee:	9608      	strlt	r6, [sp, #32]
   1caf0:	189b      	addlt	r3, r3, r2
   1caf2:	930c      	strlt	r3, [sp, #48]	; 0x30
   1caf4:	2600      	movlt	r6, #0
   1caf6:	f1b9 0f00 	cmp.w	r9, #0
   1cafa:	bfb9      	ittee	lt
   1cafc:	eba8 0509 	sublt.w	r5, r8, r9
   1cb00:	2300      	movlt	r3, #0
   1cb02:	4645      	movge	r5, r8
   1cb04:	464b      	movge	r3, r9
   1cb06:	e6e2      	b.n	1c8ce <_dtoa_r+0x716>
   1cb08:	9e08      	ldr	r6, [sp, #32]
   1cb0a:	4645      	mov	r5, r8
   1cb0c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1cb0e:	e6e7      	b.n	1c8e0 <_dtoa_r+0x728>
   1cb10:	9a08      	ldr	r2, [sp, #32]
   1cb12:	e710      	b.n	1c936 <_dtoa_r+0x77e>
   1cb14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1cb16:	2b01      	cmp	r3, #1
   1cb18:	dc18      	bgt.n	1cb4c <_dtoa_r+0x994>
   1cb1a:	9b02      	ldr	r3, [sp, #8]
   1cb1c:	b9b3      	cbnz	r3, 1cb4c <_dtoa_r+0x994>
   1cb1e:	9b03      	ldr	r3, [sp, #12]
   1cb20:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1cb24:	b9a3      	cbnz	r3, 1cb50 <_dtoa_r+0x998>
   1cb26:	9b03      	ldr	r3, [sp, #12]
   1cb28:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   1cb2c:	0d1b      	lsrs	r3, r3, #20
   1cb2e:	051b      	lsls	r3, r3, #20
   1cb30:	b12b      	cbz	r3, 1cb3e <_dtoa_r+0x986>
   1cb32:	9b07      	ldr	r3, [sp, #28]
   1cb34:	f108 0801 	add.w	r8, r8, #1
   1cb38:	3301      	adds	r3, #1
   1cb3a:	9307      	str	r3, [sp, #28]
   1cb3c:	2301      	movs	r3, #1
   1cb3e:	9308      	str	r3, [sp, #32]
   1cb40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1cb42:	2b00      	cmp	r3, #0
   1cb44:	f47f af11 	bne.w	1c96a <_dtoa_r+0x7b2>
   1cb48:	2001      	movs	r0, #1
   1cb4a:	e716      	b.n	1c97a <_dtoa_r+0x7c2>
   1cb4c:	2300      	movs	r3, #0
   1cb4e:	e7f6      	b.n	1cb3e <_dtoa_r+0x986>
   1cb50:	9b02      	ldr	r3, [sp, #8]
   1cb52:	e7f4      	b.n	1cb3e <_dtoa_r+0x986>
   1cb54:	f43f af23 	beq.w	1c99e <_dtoa_r+0x7e6>
   1cb58:	9a07      	ldr	r2, [sp, #28]
   1cb5a:	331c      	adds	r3, #28
   1cb5c:	441a      	add	r2, r3
   1cb5e:	4498      	add	r8, r3
   1cb60:	441d      	add	r5, r3
   1cb62:	4613      	mov	r3, r2
   1cb64:	e71a      	b.n	1c99c <_dtoa_r+0x7e4>
   1cb66:	4603      	mov	r3, r0
   1cb68:	e7f6      	b.n	1cb58 <_dtoa_r+0x9a0>
   1cb6a:	bf00      	nop
   1cb6c:	40240000 	.word	0x40240000
   1cb70:	f1b9 0f00 	cmp.w	r9, #0
   1cb74:	dc33      	bgt.n	1cbde <_dtoa_r+0xa26>
   1cb76:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1cb78:	2b02      	cmp	r3, #2
   1cb7a:	dd30      	ble.n	1cbde <_dtoa_r+0xa26>
   1cb7c:	f8cd 9010 	str.w	r9, [sp, #16]
   1cb80:	9b04      	ldr	r3, [sp, #16]
   1cb82:	b963      	cbnz	r3, 1cb9e <_dtoa_r+0x9e6>
   1cb84:	4631      	mov	r1, r6
   1cb86:	2205      	movs	r2, #5
   1cb88:	4620      	mov	r0, r4
   1cb8a:	f000 fcf4 	bl	1d576 <__multadd>
   1cb8e:	4601      	mov	r1, r0
   1cb90:	4606      	mov	r6, r0
   1cb92:	4650      	mov	r0, sl
   1cb94:	f000 feeb 	bl	1d96e <__mcmp>
   1cb98:	2800      	cmp	r0, #0
   1cb9a:	f73f ad5c 	bgt.w	1c656 <_dtoa_r+0x49e>
   1cb9e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1cba0:	9d06      	ldr	r5, [sp, #24]
   1cba2:	ea6f 0b03 	mvn.w	fp, r3
   1cba6:	2300      	movs	r3, #0
   1cba8:	9307      	str	r3, [sp, #28]
   1cbaa:	4631      	mov	r1, r6
   1cbac:	4620      	mov	r0, r4
   1cbae:	f000 fccb 	bl	1d548 <_Bfree>
   1cbb2:	2f00      	cmp	r7, #0
   1cbb4:	f43f ae4b 	beq.w	1c84e <_dtoa_r+0x696>
   1cbb8:	9b07      	ldr	r3, [sp, #28]
   1cbba:	b12b      	cbz	r3, 1cbc8 <_dtoa_r+0xa10>
   1cbbc:	42bb      	cmp	r3, r7
   1cbbe:	d003      	beq.n	1cbc8 <_dtoa_r+0xa10>
   1cbc0:	4619      	mov	r1, r3
   1cbc2:	4620      	mov	r0, r4
   1cbc4:	f000 fcc0 	bl	1d548 <_Bfree>
   1cbc8:	4639      	mov	r1, r7
   1cbca:	4620      	mov	r0, r4
   1cbcc:	f000 fcbc 	bl	1d548 <_Bfree>
   1cbd0:	e63d      	b.n	1c84e <_dtoa_r+0x696>
   1cbd2:	2600      	movs	r6, #0
   1cbd4:	4637      	mov	r7, r6
   1cbd6:	e7e2      	b.n	1cb9e <_dtoa_r+0x9e6>
   1cbd8:	46bb      	mov	fp, r7
   1cbda:	4637      	mov	r7, r6
   1cbdc:	e53b      	b.n	1c656 <_dtoa_r+0x49e>
   1cbde:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1cbe0:	f8cd 9010 	str.w	r9, [sp, #16]
   1cbe4:	2b00      	cmp	r3, #0
   1cbe6:	f47f af12 	bne.w	1ca0e <_dtoa_r+0x856>
   1cbea:	9d06      	ldr	r5, [sp, #24]
   1cbec:	4631      	mov	r1, r6
   1cbee:	4650      	mov	r0, sl
   1cbf0:	f7ff fa56 	bl	1c0a0 <quorem>
   1cbf4:	9b06      	ldr	r3, [sp, #24]
   1cbf6:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1cbfa:	f805 9b01 	strb.w	r9, [r5], #1
   1cbfe:	9a04      	ldr	r2, [sp, #16]
   1cc00:	1aeb      	subs	r3, r5, r3
   1cc02:	429a      	cmp	r2, r3
   1cc04:	f300 8081 	bgt.w	1cd0a <_dtoa_r+0xb52>
   1cc08:	9b06      	ldr	r3, [sp, #24]
   1cc0a:	2a01      	cmp	r2, #1
   1cc0c:	bfac      	ite	ge
   1cc0e:	189b      	addge	r3, r3, r2
   1cc10:	3301      	addlt	r3, #1
   1cc12:	4698      	mov	r8, r3
   1cc14:	2300      	movs	r3, #0
   1cc16:	9307      	str	r3, [sp, #28]
   1cc18:	4651      	mov	r1, sl
   1cc1a:	2201      	movs	r2, #1
   1cc1c:	4620      	mov	r0, r4
   1cc1e:	f000 fe55 	bl	1d8cc <__lshift>
   1cc22:	4631      	mov	r1, r6
   1cc24:	4682      	mov	sl, r0
   1cc26:	f000 fea2 	bl	1d96e <__mcmp>
   1cc2a:	2800      	cmp	r0, #0
   1cc2c:	dc34      	bgt.n	1cc98 <_dtoa_r+0xae0>
   1cc2e:	d102      	bne.n	1cc36 <_dtoa_r+0xa7e>
   1cc30:	f019 0f01 	tst.w	r9, #1
   1cc34:	d130      	bne.n	1cc98 <_dtoa_r+0xae0>
   1cc36:	4645      	mov	r5, r8
   1cc38:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1cc3c:	1e6a      	subs	r2, r5, #1
   1cc3e:	2b30      	cmp	r3, #48	; 0x30
   1cc40:	d1b3      	bne.n	1cbaa <_dtoa_r+0x9f2>
   1cc42:	4615      	mov	r5, r2
   1cc44:	e7f8      	b.n	1cc38 <_dtoa_r+0xa80>
   1cc46:	4638      	mov	r0, r7
   1cc48:	e6ff      	b.n	1ca4a <_dtoa_r+0x892>
   1cc4a:	2301      	movs	r3, #1
   1cc4c:	e722      	b.n	1ca94 <_dtoa_r+0x8dc>
   1cc4e:	9a02      	ldr	r2, [sp, #8]
   1cc50:	2a00      	cmp	r2, #0
   1cc52:	db04      	blt.n	1cc5e <_dtoa_r+0xaa6>
   1cc54:	d128      	bne.n	1cca8 <_dtoa_r+0xaf0>
   1cc56:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1cc58:	bb32      	cbnz	r2, 1cca8 <_dtoa_r+0xaf0>
   1cc5a:	9a08      	ldr	r2, [sp, #32]
   1cc5c:	bb22      	cbnz	r2, 1cca8 <_dtoa_r+0xaf0>
   1cc5e:	2b00      	cmp	r3, #0
   1cc60:	f77f af32 	ble.w	1cac8 <_dtoa_r+0x910>
   1cc64:	4651      	mov	r1, sl
   1cc66:	2201      	movs	r2, #1
   1cc68:	4620      	mov	r0, r4
   1cc6a:	f000 fe2f 	bl	1d8cc <__lshift>
   1cc6e:	4631      	mov	r1, r6
   1cc70:	4682      	mov	sl, r0
   1cc72:	f000 fe7c 	bl	1d96e <__mcmp>
   1cc76:	2800      	cmp	r0, #0
   1cc78:	dc05      	bgt.n	1cc86 <_dtoa_r+0xace>
   1cc7a:	f47f af25 	bne.w	1cac8 <_dtoa_r+0x910>
   1cc7e:	f019 0f01 	tst.w	r9, #1
   1cc82:	f43f af21 	beq.w	1cac8 <_dtoa_r+0x910>
   1cc86:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1cc8a:	f47f af1b 	bne.w	1cac4 <_dtoa_r+0x90c>
   1cc8e:	2339      	movs	r3, #57	; 0x39
   1cc90:	f108 0801 	add.w	r8, r8, #1
   1cc94:	f808 3c01 	strb.w	r3, [r8, #-1]
   1cc98:	4645      	mov	r5, r8
   1cc9a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1cc9e:	1e6a      	subs	r2, r5, #1
   1cca0:	2b39      	cmp	r3, #57	; 0x39
   1cca2:	d03a      	beq.n	1cd1a <_dtoa_r+0xb62>
   1cca4:	3301      	adds	r3, #1
   1cca6:	e03f      	b.n	1cd28 <_dtoa_r+0xb70>
   1cca8:	2b00      	cmp	r3, #0
   1ccaa:	f108 0501 	add.w	r5, r8, #1
   1ccae:	dd05      	ble.n	1ccbc <_dtoa_r+0xb04>
   1ccb0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1ccb4:	d0eb      	beq.n	1cc8e <_dtoa_r+0xad6>
   1ccb6:	f109 0901 	add.w	r9, r9, #1
   1ccba:	e707      	b.n	1cacc <_dtoa_r+0x914>
   1ccbc:	9b06      	ldr	r3, [sp, #24]
   1ccbe:	9a04      	ldr	r2, [sp, #16]
   1ccc0:	1aeb      	subs	r3, r5, r3
   1ccc2:	4293      	cmp	r3, r2
   1ccc4:	46a8      	mov	r8, r5
   1ccc6:	f805 9c01 	strb.w	r9, [r5, #-1]
   1ccca:	d0a5      	beq.n	1cc18 <_dtoa_r+0xa60>
   1cccc:	4651      	mov	r1, sl
   1ccce:	2300      	movs	r3, #0
   1ccd0:	220a      	movs	r2, #10
   1ccd2:	4620      	mov	r0, r4
   1ccd4:	f000 fc4f 	bl	1d576 <__multadd>
   1ccd8:	9b07      	ldr	r3, [sp, #28]
   1ccda:	4682      	mov	sl, r0
   1ccdc:	42bb      	cmp	r3, r7
   1ccde:	f04f 020a 	mov.w	r2, #10
   1cce2:	f04f 0300 	mov.w	r3, #0
   1cce6:	9907      	ldr	r1, [sp, #28]
   1cce8:	4620      	mov	r0, r4
   1ccea:	d104      	bne.n	1ccf6 <_dtoa_r+0xb3e>
   1ccec:	f000 fc43 	bl	1d576 <__multadd>
   1ccf0:	9007      	str	r0, [sp, #28]
   1ccf2:	4607      	mov	r7, r0
   1ccf4:	e6b1      	b.n	1ca5a <_dtoa_r+0x8a2>
   1ccf6:	f000 fc3e 	bl	1d576 <__multadd>
   1ccfa:	2300      	movs	r3, #0
   1ccfc:	9007      	str	r0, [sp, #28]
   1ccfe:	220a      	movs	r2, #10
   1cd00:	4639      	mov	r1, r7
   1cd02:	4620      	mov	r0, r4
   1cd04:	f000 fc37 	bl	1d576 <__multadd>
   1cd08:	e7f3      	b.n	1ccf2 <_dtoa_r+0xb3a>
   1cd0a:	4651      	mov	r1, sl
   1cd0c:	2300      	movs	r3, #0
   1cd0e:	220a      	movs	r2, #10
   1cd10:	4620      	mov	r0, r4
   1cd12:	f000 fc30 	bl	1d576 <__multadd>
   1cd16:	4682      	mov	sl, r0
   1cd18:	e768      	b.n	1cbec <_dtoa_r+0xa34>
   1cd1a:	9b06      	ldr	r3, [sp, #24]
   1cd1c:	4293      	cmp	r3, r2
   1cd1e:	d105      	bne.n	1cd2c <_dtoa_r+0xb74>
   1cd20:	2331      	movs	r3, #49	; 0x31
   1cd22:	9a06      	ldr	r2, [sp, #24]
   1cd24:	f10b 0b01 	add.w	fp, fp, #1
   1cd28:	7013      	strb	r3, [r2, #0]
   1cd2a:	e73e      	b.n	1cbaa <_dtoa_r+0x9f2>
   1cd2c:	4615      	mov	r5, r2
   1cd2e:	e7b4      	b.n	1cc9a <_dtoa_r+0xae2>
   1cd30:	4b09      	ldr	r3, [pc, #36]	; (1cd58 <_dtoa_r+0xba0>)
   1cd32:	f7ff baa3 	b.w	1c27c <_dtoa_r+0xc4>
   1cd36:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1cd38:	2b00      	cmp	r3, #0
   1cd3a:	f47f aa7d 	bne.w	1c238 <_dtoa_r+0x80>
   1cd3e:	4b07      	ldr	r3, [pc, #28]	; (1cd5c <_dtoa_r+0xba4>)
   1cd40:	f7ff ba9c 	b.w	1c27c <_dtoa_r+0xc4>
   1cd44:	9b04      	ldr	r3, [sp, #16]
   1cd46:	2b00      	cmp	r3, #0
   1cd48:	f73f af4f 	bgt.w	1cbea <_dtoa_r+0xa32>
   1cd4c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1cd4e:	2b02      	cmp	r3, #2
   1cd50:	f77f af4b 	ble.w	1cbea <_dtoa_r+0xa32>
   1cd54:	e714      	b.n	1cb80 <_dtoa_r+0x9c8>
   1cd56:	bf00      	nop
   1cd58:	0001f6be 	.word	0x0001f6be
   1cd5c:	00020905 	.word	0x00020905

0001cd60 <_fstat_r>:
_fstat_r():
   1cd60:	b538      	push	{r3, r4, r5, lr}
   1cd62:	2300      	movs	r3, #0
   1cd64:	4c06      	ldr	r4, [pc, #24]	; (1cd80 <_fstat_r+0x20>)
   1cd66:	4605      	mov	r5, r0
   1cd68:	4608      	mov	r0, r1
   1cd6a:	4611      	mov	r1, r2
   1cd6c:	6023      	str	r3, [r4, #0]
   1cd6e:	f7f8 f9a9 	bl	150c4 <_fstat>
   1cd72:	1c43      	adds	r3, r0, #1
   1cd74:	d102      	bne.n	1cd7c <_fstat_r+0x1c>
   1cd76:	6823      	ldr	r3, [r4, #0]
   1cd78:	b103      	cbz	r3, 1cd7c <_fstat_r+0x1c>
   1cd7a:	602b      	str	r3, [r5, #0]
   1cd7c:	bd38      	pop	{r3, r4, r5, pc}
   1cd7e:	bf00      	nop
   1cd80:	2007c7d8 	.word	0x2007c7d8

0001cd84 <rshift>:
rshift():
   1cd84:	b5f0      	push	{r4, r5, r6, r7, lr}
   1cd86:	6906      	ldr	r6, [r0, #16]
   1cd88:	114b      	asrs	r3, r1, #5
   1cd8a:	42b3      	cmp	r3, r6
   1cd8c:	f100 0514 	add.w	r5, r0, #20
   1cd90:	da2b      	bge.n	1cdea <rshift+0x66>
   1cd92:	f011 011f 	ands.w	r1, r1, #31
   1cd96:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   1cd9a:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   1cd9e:	d108      	bne.n	1cdb2 <rshift+0x2e>
   1cda0:	4629      	mov	r1, r5
   1cda2:	42b2      	cmp	r2, r6
   1cda4:	460b      	mov	r3, r1
   1cda6:	d210      	bcs.n	1cdca <rshift+0x46>
   1cda8:	f852 3b04 	ldr.w	r3, [r2], #4
   1cdac:	f841 3b04 	str.w	r3, [r1], #4
   1cdb0:	e7f7      	b.n	1cda2 <rshift+0x1e>
   1cdb2:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   1cdb6:	462b      	mov	r3, r5
   1cdb8:	f1c1 0e20 	rsb	lr, r1, #32
   1cdbc:	3204      	adds	r2, #4
   1cdbe:	40cc      	lsrs	r4, r1
   1cdc0:	42b2      	cmp	r2, r6
   1cdc2:	d308      	bcc.n	1cdd6 <rshift+0x52>
   1cdc4:	601c      	str	r4, [r3, #0]
   1cdc6:	b104      	cbz	r4, 1cdca <rshift+0x46>
   1cdc8:	3304      	adds	r3, #4
   1cdca:	1b5b      	subs	r3, r3, r5
   1cdcc:	109b      	asrs	r3, r3, #2
   1cdce:	6103      	str	r3, [r0, #16]
   1cdd0:	b903      	cbnz	r3, 1cdd4 <rshift+0x50>
   1cdd2:	6143      	str	r3, [r0, #20]
   1cdd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1cdd6:	6817      	ldr	r7, [r2, #0]
   1cdd8:	fa07 f70e 	lsl.w	r7, r7, lr
   1cddc:	433c      	orrs	r4, r7
   1cdde:	f843 4b04 	str.w	r4, [r3], #4
   1cde2:	f852 4b04 	ldr.w	r4, [r2], #4
   1cde6:	40cc      	lsrs	r4, r1
   1cde8:	e7ea      	b.n	1cdc0 <rshift+0x3c>
   1cdea:	462b      	mov	r3, r5
   1cdec:	e7ed      	b.n	1cdca <rshift+0x46>

0001cdee <__hexdig_fun>:
__hexdig_fun():
   1cdee:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   1cdf2:	2b09      	cmp	r3, #9
   1cdf4:	d802      	bhi.n	1cdfc <__hexdig_fun+0xe>
   1cdf6:	3820      	subs	r0, #32
   1cdf8:	b2c0      	uxtb	r0, r0
   1cdfa:	4770      	bx	lr
   1cdfc:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   1ce00:	2b05      	cmp	r3, #5
   1ce02:	d801      	bhi.n	1ce08 <__hexdig_fun+0x1a>
   1ce04:	3847      	subs	r0, #71	; 0x47
   1ce06:	e7f7      	b.n	1cdf8 <__hexdig_fun+0xa>
   1ce08:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   1ce0c:	2b05      	cmp	r3, #5
   1ce0e:	d801      	bhi.n	1ce14 <__hexdig_fun+0x26>
   1ce10:	3827      	subs	r0, #39	; 0x27
   1ce12:	e7f1      	b.n	1cdf8 <__hexdig_fun+0xa>
   1ce14:	2000      	movs	r0, #0
   1ce16:	4770      	bx	lr

0001ce18 <__gethex>:
__gethex():
   1ce18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce1c:	b08b      	sub	sp, #44	; 0x2c
   1ce1e:	9002      	str	r0, [sp, #8]
   1ce20:	9816      	ldr	r0, [sp, #88]	; 0x58
   1ce22:	468a      	mov	sl, r1
   1ce24:	4690      	mov	r8, r2
   1ce26:	9306      	str	r3, [sp, #24]
   1ce28:	f000 fb38 	bl	1d49c <__localeconv_l>
   1ce2c:	6803      	ldr	r3, [r0, #0]
   1ce2e:	f04f 0b00 	mov.w	fp, #0
   1ce32:	4618      	mov	r0, r3
   1ce34:	9303      	str	r3, [sp, #12]
   1ce36:	f7fd feae 	bl	1ab96 <strlen>
   1ce3a:	9b03      	ldr	r3, [sp, #12]
   1ce3c:	9001      	str	r0, [sp, #4]
   1ce3e:	4403      	add	r3, r0
   1ce40:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   1ce44:	9307      	str	r3, [sp, #28]
   1ce46:	f8da 3000 	ldr.w	r3, [sl]
   1ce4a:	3302      	adds	r3, #2
   1ce4c:	461f      	mov	r7, r3
   1ce4e:	f813 0b01 	ldrb.w	r0, [r3], #1
   1ce52:	2830      	cmp	r0, #48	; 0x30
   1ce54:	d06c      	beq.n	1cf30 <__gethex+0x118>
   1ce56:	f7ff ffca 	bl	1cdee <__hexdig_fun>
   1ce5a:	4604      	mov	r4, r0
   1ce5c:	2800      	cmp	r0, #0
   1ce5e:	d16a      	bne.n	1cf36 <__gethex+0x11e>
   1ce60:	9a01      	ldr	r2, [sp, #4]
   1ce62:	9903      	ldr	r1, [sp, #12]
   1ce64:	4638      	mov	r0, r7
   1ce66:	f7fd fe9e 	bl	1aba6 <strncmp>
   1ce6a:	2800      	cmp	r0, #0
   1ce6c:	d166      	bne.n	1cf3c <__gethex+0x124>
   1ce6e:	9b01      	ldr	r3, [sp, #4]
   1ce70:	5cf8      	ldrb	r0, [r7, r3]
   1ce72:	18fe      	adds	r6, r7, r3
   1ce74:	f7ff ffbb 	bl	1cdee <__hexdig_fun>
   1ce78:	2800      	cmp	r0, #0
   1ce7a:	d062      	beq.n	1cf42 <__gethex+0x12a>
   1ce7c:	4633      	mov	r3, r6
   1ce7e:	7818      	ldrb	r0, [r3, #0]
   1ce80:	461f      	mov	r7, r3
   1ce82:	2830      	cmp	r0, #48	; 0x30
   1ce84:	f103 0301 	add.w	r3, r3, #1
   1ce88:	d0f9      	beq.n	1ce7e <__gethex+0x66>
   1ce8a:	f7ff ffb0 	bl	1cdee <__hexdig_fun>
   1ce8e:	fab0 f580 	clz	r5, r0
   1ce92:	4634      	mov	r4, r6
   1ce94:	f04f 0b01 	mov.w	fp, #1
   1ce98:	096d      	lsrs	r5, r5, #5
   1ce9a:	463a      	mov	r2, r7
   1ce9c:	4616      	mov	r6, r2
   1ce9e:	7830      	ldrb	r0, [r6, #0]
   1cea0:	3201      	adds	r2, #1
   1cea2:	f7ff ffa4 	bl	1cdee <__hexdig_fun>
   1cea6:	2800      	cmp	r0, #0
   1cea8:	d1f8      	bne.n	1ce9c <__gethex+0x84>
   1ceaa:	9a01      	ldr	r2, [sp, #4]
   1ceac:	9903      	ldr	r1, [sp, #12]
   1ceae:	4630      	mov	r0, r6
   1ceb0:	f7fd fe79 	bl	1aba6 <strncmp>
   1ceb4:	b950      	cbnz	r0, 1cecc <__gethex+0xb4>
   1ceb6:	b954      	cbnz	r4, 1cece <__gethex+0xb6>
   1ceb8:	9b01      	ldr	r3, [sp, #4]
   1ceba:	18f4      	adds	r4, r6, r3
   1cebc:	4622      	mov	r2, r4
   1cebe:	4616      	mov	r6, r2
   1cec0:	7830      	ldrb	r0, [r6, #0]
   1cec2:	3201      	adds	r2, #1
   1cec4:	f7ff ff93 	bl	1cdee <__hexdig_fun>
   1cec8:	2800      	cmp	r0, #0
   1ceca:	d1f8      	bne.n	1cebe <__gethex+0xa6>
   1cecc:	b10c      	cbz	r4, 1ced2 <__gethex+0xba>
   1cece:	1ba4      	subs	r4, r4, r6
   1ced0:	00a4      	lsls	r4, r4, #2
   1ced2:	7833      	ldrb	r3, [r6, #0]
   1ced4:	2b50      	cmp	r3, #80	; 0x50
   1ced6:	d001      	beq.n	1cedc <__gethex+0xc4>
   1ced8:	2b70      	cmp	r3, #112	; 0x70
   1ceda:	d140      	bne.n	1cf5e <__gethex+0x146>
   1cedc:	7873      	ldrb	r3, [r6, #1]
   1cede:	2b2b      	cmp	r3, #43	; 0x2b
   1cee0:	d035      	beq.n	1cf4e <__gethex+0x136>
   1cee2:	2b2d      	cmp	r3, #45	; 0x2d
   1cee4:	d02f      	beq.n	1cf46 <__gethex+0x12e>
   1cee6:	f04f 0900 	mov.w	r9, #0
   1ceea:	1c71      	adds	r1, r6, #1
   1ceec:	7808      	ldrb	r0, [r1, #0]
   1ceee:	f7ff ff7e 	bl	1cdee <__hexdig_fun>
   1cef2:	1e43      	subs	r3, r0, #1
   1cef4:	b2db      	uxtb	r3, r3
   1cef6:	2b18      	cmp	r3, #24
   1cef8:	d831      	bhi.n	1cf5e <__gethex+0x146>
   1cefa:	f1a0 0210 	sub.w	r2, r0, #16
   1cefe:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   1cf02:	f7ff ff74 	bl	1cdee <__hexdig_fun>
   1cf06:	1e43      	subs	r3, r0, #1
   1cf08:	b2db      	uxtb	r3, r3
   1cf0a:	2b18      	cmp	r3, #24
   1cf0c:	d922      	bls.n	1cf54 <__gethex+0x13c>
   1cf0e:	f1b9 0f00 	cmp.w	r9, #0
   1cf12:	d000      	beq.n	1cf16 <__gethex+0xfe>
   1cf14:	4252      	negs	r2, r2
   1cf16:	4414      	add	r4, r2
   1cf18:	f8ca 1000 	str.w	r1, [sl]
   1cf1c:	b30d      	cbz	r5, 1cf62 <__gethex+0x14a>
   1cf1e:	f1bb 0f00 	cmp.w	fp, #0
   1cf22:	bf14      	ite	ne
   1cf24:	2700      	movne	r7, #0
   1cf26:	2706      	moveq	r7, #6
   1cf28:	4638      	mov	r0, r7
   1cf2a:	b00b      	add	sp, #44	; 0x2c
   1cf2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cf30:	f10b 0b01 	add.w	fp, fp, #1
   1cf34:	e78a      	b.n	1ce4c <__gethex+0x34>
   1cf36:	2500      	movs	r5, #0
   1cf38:	462c      	mov	r4, r5
   1cf3a:	e7ae      	b.n	1ce9a <__gethex+0x82>
   1cf3c:	463e      	mov	r6, r7
   1cf3e:	2501      	movs	r5, #1
   1cf40:	e7c7      	b.n	1ced2 <__gethex+0xba>
   1cf42:	4604      	mov	r4, r0
   1cf44:	e7fb      	b.n	1cf3e <__gethex+0x126>
   1cf46:	f04f 0901 	mov.w	r9, #1
   1cf4a:	1cb1      	adds	r1, r6, #2
   1cf4c:	e7ce      	b.n	1ceec <__gethex+0xd4>
   1cf4e:	f04f 0900 	mov.w	r9, #0
   1cf52:	e7fa      	b.n	1cf4a <__gethex+0x132>
   1cf54:	230a      	movs	r3, #10
   1cf56:	fb03 0202 	mla	r2, r3, r2, r0
   1cf5a:	3a10      	subs	r2, #16
   1cf5c:	e7cf      	b.n	1cefe <__gethex+0xe6>
   1cf5e:	4631      	mov	r1, r6
   1cf60:	e7da      	b.n	1cf18 <__gethex+0x100>
   1cf62:	4629      	mov	r1, r5
   1cf64:	1bf3      	subs	r3, r6, r7
   1cf66:	3b01      	subs	r3, #1
   1cf68:	2b07      	cmp	r3, #7
   1cf6a:	dc49      	bgt.n	1d000 <__gethex+0x1e8>
   1cf6c:	9802      	ldr	r0, [sp, #8]
   1cf6e:	f000 fab7 	bl	1d4e0 <_Balloc>
   1cf72:	f04f 0b00 	mov.w	fp, #0
   1cf76:	4605      	mov	r5, r0
   1cf78:	46da      	mov	sl, fp
   1cf7a:	9b01      	ldr	r3, [sp, #4]
   1cf7c:	f100 0914 	add.w	r9, r0, #20
   1cf80:	f1c3 0301 	rsb	r3, r3, #1
   1cf84:	f8cd 9010 	str.w	r9, [sp, #16]
   1cf88:	9308      	str	r3, [sp, #32]
   1cf8a:	42b7      	cmp	r7, r6
   1cf8c:	d33b      	bcc.n	1d006 <__gethex+0x1ee>
   1cf8e:	9804      	ldr	r0, [sp, #16]
   1cf90:	f840 ab04 	str.w	sl, [r0], #4
   1cf94:	eba0 0009 	sub.w	r0, r0, r9
   1cf98:	1080      	asrs	r0, r0, #2
   1cf9a:	6128      	str	r0, [r5, #16]
   1cf9c:	0147      	lsls	r7, r0, #5
   1cf9e:	4650      	mov	r0, sl
   1cfa0:	f000 fb62 	bl	1d668 <__hi0bits>
   1cfa4:	f8d8 6000 	ldr.w	r6, [r8]
   1cfa8:	1a3f      	subs	r7, r7, r0
   1cfaa:	42b7      	cmp	r7, r6
   1cfac:	dd64      	ble.n	1d078 <__gethex+0x260>
   1cfae:	1bbf      	subs	r7, r7, r6
   1cfb0:	4639      	mov	r1, r7
   1cfb2:	4628      	mov	r0, r5
   1cfb4:	f000 fe5b 	bl	1dc6e <__any_on>
   1cfb8:	4682      	mov	sl, r0
   1cfba:	b178      	cbz	r0, 1cfdc <__gethex+0x1c4>
   1cfbc:	f04f 0a01 	mov.w	sl, #1
   1cfc0:	1e7b      	subs	r3, r7, #1
   1cfc2:	1159      	asrs	r1, r3, #5
   1cfc4:	f003 021f 	and.w	r2, r3, #31
   1cfc8:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   1cfcc:	fa0a f202 	lsl.w	r2, sl, r2
   1cfd0:	420a      	tst	r2, r1
   1cfd2:	d003      	beq.n	1cfdc <__gethex+0x1c4>
   1cfd4:	4553      	cmp	r3, sl
   1cfd6:	dc46      	bgt.n	1d066 <__gethex+0x24e>
   1cfd8:	f04f 0a02 	mov.w	sl, #2
   1cfdc:	4639      	mov	r1, r7
   1cfde:	4628      	mov	r0, r5
   1cfe0:	f7ff fed0 	bl	1cd84 <rshift>
   1cfe4:	443c      	add	r4, r7
   1cfe6:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1cfea:	429c      	cmp	r4, r3
   1cfec:	dd52      	ble.n	1d094 <__gethex+0x27c>
   1cfee:	4629      	mov	r1, r5
   1cff0:	9802      	ldr	r0, [sp, #8]
   1cff2:	f000 faa9 	bl	1d548 <_Bfree>
   1cff6:	2300      	movs	r3, #0
   1cff8:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1cffa:	27a3      	movs	r7, #163	; 0xa3
   1cffc:	6013      	str	r3, [r2, #0]
   1cffe:	e793      	b.n	1cf28 <__gethex+0x110>
   1d000:	3101      	adds	r1, #1
   1d002:	105b      	asrs	r3, r3, #1
   1d004:	e7b0      	b.n	1cf68 <__gethex+0x150>
   1d006:	1e73      	subs	r3, r6, #1
   1d008:	9305      	str	r3, [sp, #20]
   1d00a:	9a07      	ldr	r2, [sp, #28]
   1d00c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1d010:	4293      	cmp	r3, r2
   1d012:	d018      	beq.n	1d046 <__gethex+0x22e>
   1d014:	f1bb 0f20 	cmp.w	fp, #32
   1d018:	d107      	bne.n	1d02a <__gethex+0x212>
   1d01a:	9b04      	ldr	r3, [sp, #16]
   1d01c:	f8c3 a000 	str.w	sl, [r3]
   1d020:	f04f 0a00 	mov.w	sl, #0
   1d024:	46d3      	mov	fp, sl
   1d026:	3304      	adds	r3, #4
   1d028:	9304      	str	r3, [sp, #16]
   1d02a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   1d02e:	f7ff fede 	bl	1cdee <__hexdig_fun>
   1d032:	f000 000f 	and.w	r0, r0, #15
   1d036:	fa00 f00b 	lsl.w	r0, r0, fp
   1d03a:	ea4a 0a00 	orr.w	sl, sl, r0
   1d03e:	f10b 0b04 	add.w	fp, fp, #4
   1d042:	9b05      	ldr	r3, [sp, #20]
   1d044:	e00d      	b.n	1d062 <__gethex+0x24a>
   1d046:	9b05      	ldr	r3, [sp, #20]
   1d048:	9a08      	ldr	r2, [sp, #32]
   1d04a:	4413      	add	r3, r2
   1d04c:	429f      	cmp	r7, r3
   1d04e:	d8e1      	bhi.n	1d014 <__gethex+0x1fc>
   1d050:	4618      	mov	r0, r3
   1d052:	9a01      	ldr	r2, [sp, #4]
   1d054:	9903      	ldr	r1, [sp, #12]
   1d056:	9309      	str	r3, [sp, #36]	; 0x24
   1d058:	f7fd fda5 	bl	1aba6 <strncmp>
   1d05c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1d05e:	2800      	cmp	r0, #0
   1d060:	d1d8      	bne.n	1d014 <__gethex+0x1fc>
   1d062:	461e      	mov	r6, r3
   1d064:	e791      	b.n	1cf8a <__gethex+0x172>
   1d066:	1eb9      	subs	r1, r7, #2
   1d068:	4628      	mov	r0, r5
   1d06a:	f000 fe00 	bl	1dc6e <__any_on>
   1d06e:	2800      	cmp	r0, #0
   1d070:	d0b2      	beq.n	1cfd8 <__gethex+0x1c0>
   1d072:	f04f 0a03 	mov.w	sl, #3
   1d076:	e7b1      	b.n	1cfdc <__gethex+0x1c4>
   1d078:	da09      	bge.n	1d08e <__gethex+0x276>
   1d07a:	1bf7      	subs	r7, r6, r7
   1d07c:	4629      	mov	r1, r5
   1d07e:	463a      	mov	r2, r7
   1d080:	9802      	ldr	r0, [sp, #8]
   1d082:	f000 fc23 	bl	1d8cc <__lshift>
   1d086:	4605      	mov	r5, r0
   1d088:	1be4      	subs	r4, r4, r7
   1d08a:	f100 0914 	add.w	r9, r0, #20
   1d08e:	f04f 0a00 	mov.w	sl, #0
   1d092:	e7a8      	b.n	1cfe6 <__gethex+0x1ce>
   1d094:	f8d8 0004 	ldr.w	r0, [r8, #4]
   1d098:	4284      	cmp	r4, r0
   1d09a:	da6b      	bge.n	1d174 <__gethex+0x35c>
   1d09c:	1b04      	subs	r4, r0, r4
   1d09e:	42a6      	cmp	r6, r4
   1d0a0:	dc2e      	bgt.n	1d100 <__gethex+0x2e8>
   1d0a2:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1d0a6:	2b02      	cmp	r3, #2
   1d0a8:	d022      	beq.n	1d0f0 <__gethex+0x2d8>
   1d0aa:	2b03      	cmp	r3, #3
   1d0ac:	d024      	beq.n	1d0f8 <__gethex+0x2e0>
   1d0ae:	2b01      	cmp	r3, #1
   1d0b0:	d115      	bne.n	1d0de <__gethex+0x2c6>
   1d0b2:	42a6      	cmp	r6, r4
   1d0b4:	d113      	bne.n	1d0de <__gethex+0x2c6>
   1d0b6:	2e01      	cmp	r6, #1
   1d0b8:	dc0b      	bgt.n	1d0d2 <__gethex+0x2ba>
   1d0ba:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1d0be:	9a06      	ldr	r2, [sp, #24]
   1d0c0:	2762      	movs	r7, #98	; 0x62
   1d0c2:	6013      	str	r3, [r2, #0]
   1d0c4:	2301      	movs	r3, #1
   1d0c6:	612b      	str	r3, [r5, #16]
   1d0c8:	f8c9 3000 	str.w	r3, [r9]
   1d0cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1d0ce:	601d      	str	r5, [r3, #0]
   1d0d0:	e72a      	b.n	1cf28 <__gethex+0x110>
   1d0d2:	1e71      	subs	r1, r6, #1
   1d0d4:	4628      	mov	r0, r5
   1d0d6:	f000 fdca 	bl	1dc6e <__any_on>
   1d0da:	2800      	cmp	r0, #0
   1d0dc:	d1ed      	bne.n	1d0ba <__gethex+0x2a2>
   1d0de:	4629      	mov	r1, r5
   1d0e0:	9802      	ldr	r0, [sp, #8]
   1d0e2:	f000 fa31 	bl	1d548 <_Bfree>
   1d0e6:	2300      	movs	r3, #0
   1d0e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1d0ea:	2750      	movs	r7, #80	; 0x50
   1d0ec:	6013      	str	r3, [r2, #0]
   1d0ee:	e71b      	b.n	1cf28 <__gethex+0x110>
   1d0f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1d0f2:	2b00      	cmp	r3, #0
   1d0f4:	d0e1      	beq.n	1d0ba <__gethex+0x2a2>
   1d0f6:	e7f2      	b.n	1d0de <__gethex+0x2c6>
   1d0f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1d0fa:	2b00      	cmp	r3, #0
   1d0fc:	d1dd      	bne.n	1d0ba <__gethex+0x2a2>
   1d0fe:	e7ee      	b.n	1d0de <__gethex+0x2c6>
   1d100:	1e67      	subs	r7, r4, #1
   1d102:	f1ba 0f00 	cmp.w	sl, #0
   1d106:	d132      	bne.n	1d16e <__gethex+0x356>
   1d108:	b127      	cbz	r7, 1d114 <__gethex+0x2fc>
   1d10a:	4639      	mov	r1, r7
   1d10c:	4628      	mov	r0, r5
   1d10e:	f000 fdae 	bl	1dc6e <__any_on>
   1d112:	4682      	mov	sl, r0
   1d114:	2301      	movs	r3, #1
   1d116:	117a      	asrs	r2, r7, #5
   1d118:	f007 071f 	and.w	r7, r7, #31
   1d11c:	fa03 f707 	lsl.w	r7, r3, r7
   1d120:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   1d124:	4621      	mov	r1, r4
   1d126:	421f      	tst	r7, r3
   1d128:	f04f 0702 	mov.w	r7, #2
   1d12c:	4628      	mov	r0, r5
   1d12e:	bf18      	it	ne
   1d130:	f04a 0a02 	orrne.w	sl, sl, #2
   1d134:	1b36      	subs	r6, r6, r4
   1d136:	f7ff fe25 	bl	1cd84 <rshift>
   1d13a:	f8d8 4004 	ldr.w	r4, [r8, #4]
   1d13e:	f1ba 0f00 	cmp.w	sl, #0
   1d142:	d045      	beq.n	1d1d0 <__gethex+0x3b8>
   1d144:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1d148:	2b02      	cmp	r3, #2
   1d14a:	d015      	beq.n	1d178 <__gethex+0x360>
   1d14c:	2b03      	cmp	r3, #3
   1d14e:	d017      	beq.n	1d180 <__gethex+0x368>
   1d150:	2b01      	cmp	r3, #1
   1d152:	d109      	bne.n	1d168 <__gethex+0x350>
   1d154:	f01a 0f02 	tst.w	sl, #2
   1d158:	d006      	beq.n	1d168 <__gethex+0x350>
   1d15a:	f8d9 3000 	ldr.w	r3, [r9]
   1d15e:	ea4a 0a03 	orr.w	sl, sl, r3
   1d162:	f01a 0f01 	tst.w	sl, #1
   1d166:	d10e      	bne.n	1d186 <__gethex+0x36e>
   1d168:	f047 0710 	orr.w	r7, r7, #16
   1d16c:	e030      	b.n	1d1d0 <__gethex+0x3b8>
   1d16e:	f04f 0a01 	mov.w	sl, #1
   1d172:	e7cf      	b.n	1d114 <__gethex+0x2fc>
   1d174:	2701      	movs	r7, #1
   1d176:	e7e2      	b.n	1d13e <__gethex+0x326>
   1d178:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1d17a:	f1c3 0301 	rsb	r3, r3, #1
   1d17e:	9315      	str	r3, [sp, #84]	; 0x54
   1d180:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1d182:	2b00      	cmp	r3, #0
   1d184:	d0f0      	beq.n	1d168 <__gethex+0x350>
   1d186:	2000      	movs	r0, #0
   1d188:	f8d5 9010 	ldr.w	r9, [r5, #16]
   1d18c:	f105 0314 	add.w	r3, r5, #20
   1d190:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   1d194:	eb03 010a 	add.w	r1, r3, sl
   1d198:	681a      	ldr	r2, [r3, #0]
   1d19a:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   1d19e:	d01c      	beq.n	1d1da <__gethex+0x3c2>
   1d1a0:	3201      	adds	r2, #1
   1d1a2:	601a      	str	r2, [r3, #0]
   1d1a4:	2f02      	cmp	r7, #2
   1d1a6:	f105 0314 	add.w	r3, r5, #20
   1d1aa:	d138      	bne.n	1d21e <__gethex+0x406>
   1d1ac:	f8d8 2000 	ldr.w	r2, [r8]
   1d1b0:	3a01      	subs	r2, #1
   1d1b2:	4296      	cmp	r6, r2
   1d1b4:	d10a      	bne.n	1d1cc <__gethex+0x3b4>
   1d1b6:	2201      	movs	r2, #1
   1d1b8:	1171      	asrs	r1, r6, #5
   1d1ba:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1d1be:	f006 061f 	and.w	r6, r6, #31
   1d1c2:	fa02 f606 	lsl.w	r6, r2, r6
   1d1c6:	421e      	tst	r6, r3
   1d1c8:	bf18      	it	ne
   1d1ca:	4617      	movne	r7, r2
   1d1cc:	f047 0720 	orr.w	r7, r7, #32
   1d1d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1d1d2:	601d      	str	r5, [r3, #0]
   1d1d4:	9b06      	ldr	r3, [sp, #24]
   1d1d6:	601c      	str	r4, [r3, #0]
   1d1d8:	e6a6      	b.n	1cf28 <__gethex+0x110>
   1d1da:	f843 0b04 	str.w	r0, [r3], #4
   1d1de:	4299      	cmp	r1, r3
   1d1e0:	d8da      	bhi.n	1d198 <__gethex+0x380>
   1d1e2:	68ab      	ldr	r3, [r5, #8]
   1d1e4:	4599      	cmp	r9, r3
   1d1e6:	db12      	blt.n	1d20e <__gethex+0x3f6>
   1d1e8:	6869      	ldr	r1, [r5, #4]
   1d1ea:	9802      	ldr	r0, [sp, #8]
   1d1ec:	3101      	adds	r1, #1
   1d1ee:	f000 f977 	bl	1d4e0 <_Balloc>
   1d1f2:	4683      	mov	fp, r0
   1d1f4:	692a      	ldr	r2, [r5, #16]
   1d1f6:	f105 010c 	add.w	r1, r5, #12
   1d1fa:	3202      	adds	r2, #2
   1d1fc:	0092      	lsls	r2, r2, #2
   1d1fe:	300c      	adds	r0, #12
   1d200:	f7fb ffd3 	bl	191aa <memcpy>
   1d204:	4629      	mov	r1, r5
   1d206:	9802      	ldr	r0, [sp, #8]
   1d208:	f000 f99e 	bl	1d548 <_Bfree>
   1d20c:	465d      	mov	r5, fp
   1d20e:	692b      	ldr	r3, [r5, #16]
   1d210:	1c5a      	adds	r2, r3, #1
   1d212:	612a      	str	r2, [r5, #16]
   1d214:	2201      	movs	r2, #1
   1d216:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   1d21a:	615a      	str	r2, [r3, #20]
   1d21c:	e7c2      	b.n	1d1a4 <__gethex+0x38c>
   1d21e:	692a      	ldr	r2, [r5, #16]
   1d220:	4591      	cmp	r9, r2
   1d222:	da0b      	bge.n	1d23c <__gethex+0x424>
   1d224:	2101      	movs	r1, #1
   1d226:	4628      	mov	r0, r5
   1d228:	f7ff fdac 	bl	1cd84 <rshift>
   1d22c:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1d230:	3401      	adds	r4, #1
   1d232:	429c      	cmp	r4, r3
   1d234:	f73f aedb 	bgt.w	1cfee <__gethex+0x1d6>
   1d238:	2701      	movs	r7, #1
   1d23a:	e7c7      	b.n	1d1cc <__gethex+0x3b4>
   1d23c:	f016 061f 	ands.w	r6, r6, #31
   1d240:	d0fa      	beq.n	1d238 <__gethex+0x420>
   1d242:	449a      	add	sl, r3
   1d244:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   1d248:	f000 fa0e 	bl	1d668 <__hi0bits>
   1d24c:	f1c6 0620 	rsb	r6, r6, #32
   1d250:	42b0      	cmp	r0, r6
   1d252:	dbe7      	blt.n	1d224 <__gethex+0x40c>
   1d254:	e7f0      	b.n	1d238 <__gethex+0x420>

0001d256 <L_shift>:
L_shift():
   1d256:	f1c2 0208 	rsb	r2, r2, #8
   1d25a:	0092      	lsls	r2, r2, #2
   1d25c:	b570      	push	{r4, r5, r6, lr}
   1d25e:	f1c2 0620 	rsb	r6, r2, #32
   1d262:	6843      	ldr	r3, [r0, #4]
   1d264:	6804      	ldr	r4, [r0, #0]
   1d266:	fa03 f506 	lsl.w	r5, r3, r6
   1d26a:	432c      	orrs	r4, r5
   1d26c:	40d3      	lsrs	r3, r2
   1d26e:	6004      	str	r4, [r0, #0]
   1d270:	f840 3f04 	str.w	r3, [r0, #4]!
   1d274:	4288      	cmp	r0, r1
   1d276:	d3f4      	bcc.n	1d262 <L_shift+0xc>
   1d278:	bd70      	pop	{r4, r5, r6, pc}

0001d27a <__match>:
__match():
   1d27a:	b530      	push	{r4, r5, lr}
   1d27c:	6803      	ldr	r3, [r0, #0]
   1d27e:	f811 4b01 	ldrb.w	r4, [r1], #1
   1d282:	3301      	adds	r3, #1
   1d284:	b914      	cbnz	r4, 1d28c <__match+0x12>
   1d286:	6003      	str	r3, [r0, #0]
   1d288:	2001      	movs	r0, #1
   1d28a:	bd30      	pop	{r4, r5, pc}
   1d28c:	781a      	ldrb	r2, [r3, #0]
   1d28e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   1d292:	2d19      	cmp	r5, #25
   1d294:	bf98      	it	ls
   1d296:	3220      	addls	r2, #32
   1d298:	42a2      	cmp	r2, r4
   1d29a:	d0f0      	beq.n	1d27e <__match+0x4>
   1d29c:	2000      	movs	r0, #0
   1d29e:	bd30      	pop	{r4, r5, pc}

0001d2a0 <__hexnan>:
__hexnan():
   1d2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2a4:	2500      	movs	r5, #0
   1d2a6:	680b      	ldr	r3, [r1, #0]
   1d2a8:	4682      	mov	sl, r0
   1d2aa:	115f      	asrs	r7, r3, #5
   1d2ac:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   1d2b0:	f013 031f 	ands.w	r3, r3, #31
   1d2b4:	bf18      	it	ne
   1d2b6:	3704      	addne	r7, #4
   1d2b8:	1f3e      	subs	r6, r7, #4
   1d2ba:	4690      	mov	r8, r2
   1d2bc:	46b1      	mov	r9, r6
   1d2be:	4634      	mov	r4, r6
   1d2c0:	46ab      	mov	fp, r5
   1d2c2:	b087      	sub	sp, #28
   1d2c4:	6801      	ldr	r1, [r0, #0]
   1d2c6:	9302      	str	r3, [sp, #8]
   1d2c8:	f847 5c04 	str.w	r5, [r7, #-4]
   1d2cc:	9501      	str	r5, [sp, #4]
   1d2ce:	784a      	ldrb	r2, [r1, #1]
   1d2d0:	1c4b      	adds	r3, r1, #1
   1d2d2:	9303      	str	r3, [sp, #12]
   1d2d4:	b342      	cbz	r2, 1d328 <__hexnan+0x88>
   1d2d6:	4610      	mov	r0, r2
   1d2d8:	9105      	str	r1, [sp, #20]
   1d2da:	9204      	str	r2, [sp, #16]
   1d2dc:	f7ff fd87 	bl	1cdee <__hexdig_fun>
   1d2e0:	2800      	cmp	r0, #0
   1d2e2:	d143      	bne.n	1d36c <__hexnan+0xcc>
   1d2e4:	9a04      	ldr	r2, [sp, #16]
   1d2e6:	9905      	ldr	r1, [sp, #20]
   1d2e8:	2a20      	cmp	r2, #32
   1d2ea:	d818      	bhi.n	1d31e <__hexnan+0x7e>
   1d2ec:	9b01      	ldr	r3, [sp, #4]
   1d2ee:	459b      	cmp	fp, r3
   1d2f0:	dd13      	ble.n	1d31a <__hexnan+0x7a>
   1d2f2:	454c      	cmp	r4, r9
   1d2f4:	d206      	bcs.n	1d304 <__hexnan+0x64>
   1d2f6:	2d07      	cmp	r5, #7
   1d2f8:	dc04      	bgt.n	1d304 <__hexnan+0x64>
   1d2fa:	462a      	mov	r2, r5
   1d2fc:	4649      	mov	r1, r9
   1d2fe:	4620      	mov	r0, r4
   1d300:	f7ff ffa9 	bl	1d256 <L_shift>
   1d304:	4544      	cmp	r4, r8
   1d306:	d944      	bls.n	1d392 <__hexnan+0xf2>
   1d308:	2300      	movs	r3, #0
   1d30a:	f1a4 0904 	sub.w	r9, r4, #4
   1d30e:	f844 3c04 	str.w	r3, [r4, #-4]
   1d312:	461d      	mov	r5, r3
   1d314:	464c      	mov	r4, r9
   1d316:	f8cd b004 	str.w	fp, [sp, #4]
   1d31a:	9903      	ldr	r1, [sp, #12]
   1d31c:	e7d7      	b.n	1d2ce <__hexnan+0x2e>
   1d31e:	2a29      	cmp	r2, #41	; 0x29
   1d320:	d14a      	bne.n	1d3b8 <__hexnan+0x118>
   1d322:	3102      	adds	r1, #2
   1d324:	f8ca 1000 	str.w	r1, [sl]
   1d328:	f1bb 0f00 	cmp.w	fp, #0
   1d32c:	d044      	beq.n	1d3b8 <__hexnan+0x118>
   1d32e:	454c      	cmp	r4, r9
   1d330:	d206      	bcs.n	1d340 <__hexnan+0xa0>
   1d332:	2d07      	cmp	r5, #7
   1d334:	dc04      	bgt.n	1d340 <__hexnan+0xa0>
   1d336:	462a      	mov	r2, r5
   1d338:	4649      	mov	r1, r9
   1d33a:	4620      	mov	r0, r4
   1d33c:	f7ff ff8b 	bl	1d256 <L_shift>
   1d340:	4544      	cmp	r4, r8
   1d342:	d928      	bls.n	1d396 <__hexnan+0xf6>
   1d344:	4643      	mov	r3, r8
   1d346:	f854 2b04 	ldr.w	r2, [r4], #4
   1d34a:	42a6      	cmp	r6, r4
   1d34c:	f843 2b04 	str.w	r2, [r3], #4
   1d350:	d2f9      	bcs.n	1d346 <__hexnan+0xa6>
   1d352:	2200      	movs	r2, #0
   1d354:	f843 2b04 	str.w	r2, [r3], #4
   1d358:	429e      	cmp	r6, r3
   1d35a:	d2fb      	bcs.n	1d354 <__hexnan+0xb4>
   1d35c:	6833      	ldr	r3, [r6, #0]
   1d35e:	b91b      	cbnz	r3, 1d368 <__hexnan+0xc8>
   1d360:	4546      	cmp	r6, r8
   1d362:	d127      	bne.n	1d3b4 <__hexnan+0x114>
   1d364:	2301      	movs	r3, #1
   1d366:	6033      	str	r3, [r6, #0]
   1d368:	2005      	movs	r0, #5
   1d36a:	e026      	b.n	1d3ba <__hexnan+0x11a>
   1d36c:	3501      	adds	r5, #1
   1d36e:	2d08      	cmp	r5, #8
   1d370:	f10b 0b01 	add.w	fp, fp, #1
   1d374:	dd06      	ble.n	1d384 <__hexnan+0xe4>
   1d376:	4544      	cmp	r4, r8
   1d378:	d9cf      	bls.n	1d31a <__hexnan+0x7a>
   1d37a:	2300      	movs	r3, #0
   1d37c:	2501      	movs	r5, #1
   1d37e:	f844 3c04 	str.w	r3, [r4, #-4]
   1d382:	3c04      	subs	r4, #4
   1d384:	6822      	ldr	r2, [r4, #0]
   1d386:	f000 000f 	and.w	r0, r0, #15
   1d38a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   1d38e:	6020      	str	r0, [r4, #0]
   1d390:	e7c3      	b.n	1d31a <__hexnan+0x7a>
   1d392:	2508      	movs	r5, #8
   1d394:	e7c1      	b.n	1d31a <__hexnan+0x7a>
   1d396:	9b02      	ldr	r3, [sp, #8]
   1d398:	2b00      	cmp	r3, #0
   1d39a:	d0df      	beq.n	1d35c <__hexnan+0xbc>
   1d39c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1d3a0:	f1c3 0320 	rsb	r3, r3, #32
   1d3a4:	fa22 f303 	lsr.w	r3, r2, r3
   1d3a8:	f857 2c04 	ldr.w	r2, [r7, #-4]
   1d3ac:	401a      	ands	r2, r3
   1d3ae:	f847 2c04 	str.w	r2, [r7, #-4]
   1d3b2:	e7d3      	b.n	1d35c <__hexnan+0xbc>
   1d3b4:	3e04      	subs	r6, #4
   1d3b6:	e7d1      	b.n	1d35c <__hexnan+0xbc>
   1d3b8:	2004      	movs	r0, #4
   1d3ba:	b007      	add	sp, #28
   1d3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d3c0 <_findenv_r>:
_findenv_r():
   1d3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d3c4:	4606      	mov	r6, r0
   1d3c6:	468a      	mov	sl, r1
   1d3c8:	4617      	mov	r7, r2
   1d3ca:	f001 fd3b 	bl	1ee44 <__env_lock>
   1d3ce:	4b1b      	ldr	r3, [pc, #108]	; (1d43c <_findenv_r+0x7c>)
   1d3d0:	f8d3 8000 	ldr.w	r8, [r3]
   1d3d4:	4699      	mov	r9, r3
   1d3d6:	f1b8 0f00 	cmp.w	r8, #0
   1d3da:	d007      	beq.n	1d3ec <_findenv_r+0x2c>
   1d3dc:	4654      	mov	r4, sl
   1d3de:	4623      	mov	r3, r4
   1d3e0:	f813 2b01 	ldrb.w	r2, [r3], #1
   1d3e4:	b332      	cbz	r2, 1d434 <_findenv_r+0x74>
   1d3e6:	2a3d      	cmp	r2, #61	; 0x3d
   1d3e8:	461c      	mov	r4, r3
   1d3ea:	d1f8      	bne.n	1d3de <_findenv_r+0x1e>
   1d3ec:	4630      	mov	r0, r6
   1d3ee:	f001 fd2a 	bl	1ee46 <__env_unlock>
   1d3f2:	2000      	movs	r0, #0
   1d3f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d3f8:	f108 0804 	add.w	r8, r8, #4
   1d3fc:	f8d8 0000 	ldr.w	r0, [r8]
   1d400:	2800      	cmp	r0, #0
   1d402:	d0f3      	beq.n	1d3ec <_findenv_r+0x2c>
   1d404:	4622      	mov	r2, r4
   1d406:	4651      	mov	r1, sl
   1d408:	f7fd fbcd 	bl	1aba6 <strncmp>
   1d40c:	2800      	cmp	r0, #0
   1d40e:	d1f3      	bne.n	1d3f8 <_findenv_r+0x38>
   1d410:	f8d8 3000 	ldr.w	r3, [r8]
   1d414:	191d      	adds	r5, r3, r4
   1d416:	5d1b      	ldrb	r3, [r3, r4]
   1d418:	2b3d      	cmp	r3, #61	; 0x3d
   1d41a:	d1ed      	bne.n	1d3f8 <_findenv_r+0x38>
   1d41c:	f8d9 3000 	ldr.w	r3, [r9]
   1d420:	4630      	mov	r0, r6
   1d422:	eba8 0303 	sub.w	r3, r8, r3
   1d426:	109b      	asrs	r3, r3, #2
   1d428:	603b      	str	r3, [r7, #0]
   1d42a:	f001 fd0c 	bl	1ee46 <__env_unlock>
   1d42e:	1c68      	adds	r0, r5, #1
   1d430:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d434:	eba4 040a 	sub.w	r4, r4, sl
   1d438:	e7e0      	b.n	1d3fc <_findenv_r+0x3c>
   1d43a:	bf00      	nop
   1d43c:	2007c2f8 	.word	0x2007c2f8

0001d440 <_getenv_r>:
_getenv_r():
   1d440:	b507      	push	{r0, r1, r2, lr}
   1d442:	aa01      	add	r2, sp, #4
   1d444:	f7ff ffbc 	bl	1d3c0 <_findenv_r>
   1d448:	b003      	add	sp, #12
   1d44a:	f85d fb04 	ldr.w	pc, [sp], #4
   1d44e:	Address 0x000000000001d44e is out of bounds.


0001d450 <_gettimeofday_r>:
_gettimeofday_r():
   1d450:	b538      	push	{r3, r4, r5, lr}
   1d452:	2300      	movs	r3, #0
   1d454:	4c06      	ldr	r4, [pc, #24]	; (1d470 <_gettimeofday_r+0x20>)
   1d456:	4605      	mov	r5, r0
   1d458:	4608      	mov	r0, r1
   1d45a:	4611      	mov	r1, r2
   1d45c:	6023      	str	r3, [r4, #0]
   1d45e:	f7f7 fc5b 	bl	14d18 <_gettimeofday>
   1d462:	1c43      	adds	r3, r0, #1
   1d464:	d102      	bne.n	1d46c <_gettimeofday_r+0x1c>
   1d466:	6823      	ldr	r3, [r4, #0]
   1d468:	b103      	cbz	r3, 1d46c <_gettimeofday_r+0x1c>
   1d46a:	602b      	str	r3, [r5, #0]
   1d46c:	bd38      	pop	{r3, r4, r5, pc}
   1d46e:	bf00      	nop
   1d470:	2007c7d8 	.word	0x2007c7d8

0001d474 <__gettzinfo>:
__gettzinfo():
   1d474:	4800      	ldr	r0, [pc, #0]	; (1d478 <__gettzinfo+0x4>)
   1d476:	4770      	bx	lr
   1d478:	2007c2b8 	.word	0x2007c2b8

0001d47c <_isatty_r>:
_isatty_r():
   1d47c:	b538      	push	{r3, r4, r5, lr}
   1d47e:	2300      	movs	r3, #0
   1d480:	4c05      	ldr	r4, [pc, #20]	; (1d498 <_isatty_r+0x1c>)
   1d482:	4605      	mov	r5, r0
   1d484:	4608      	mov	r0, r1
   1d486:	6023      	str	r3, [r4, #0]
   1d488:	f7f7 fe24 	bl	150d4 <_isatty>
   1d48c:	1c43      	adds	r3, r0, #1
   1d48e:	d102      	bne.n	1d496 <_isatty_r+0x1a>
   1d490:	6823      	ldr	r3, [r4, #0]
   1d492:	b103      	cbz	r3, 1d496 <_isatty_r+0x1a>
   1d494:	602b      	str	r3, [r5, #0]
   1d496:	bd38      	pop	{r3, r4, r5, pc}
   1d498:	2007c7d8 	.word	0x2007c7d8

0001d49c <__localeconv_l>:
__localeconv_l():
   1d49c:	30f0      	adds	r0, #240	; 0xf0
   1d49e:	4770      	bx	lr

0001d4a0 <_localeconv_r>:
_localeconv_r():
   1d4a0:	4b04      	ldr	r3, [pc, #16]	; (1d4b4 <_localeconv_r+0x14>)
   1d4a2:	681b      	ldr	r3, [r3, #0]
   1d4a4:	6a18      	ldr	r0, [r3, #32]
   1d4a6:	4b04      	ldr	r3, [pc, #16]	; (1d4b8 <_localeconv_r+0x18>)
   1d4a8:	2800      	cmp	r0, #0
   1d4aa:	bf08      	it	eq
   1d4ac:	4618      	moveq	r0, r3
   1d4ae:	30f0      	adds	r0, #240	; 0xf0
   1d4b0:	4770      	bx	lr
   1d4b2:	bf00      	nop
   1d4b4:	2007c0e0 	.word	0x2007c0e0
   1d4b8:	2007c144 	.word	0x2007c144

0001d4bc <_lseek_r>:
_lseek_r():
   1d4bc:	b538      	push	{r3, r4, r5, lr}
   1d4be:	4605      	mov	r5, r0
   1d4c0:	4608      	mov	r0, r1
   1d4c2:	4611      	mov	r1, r2
   1d4c4:	2200      	movs	r2, #0
   1d4c6:	4c05      	ldr	r4, [pc, #20]	; (1d4dc <_lseek_r+0x20>)
   1d4c8:	6022      	str	r2, [r4, #0]
   1d4ca:	461a      	mov	r2, r3
   1d4cc:	f7f7 fd4e 	bl	14f6c <_lseek>
   1d4d0:	1c43      	adds	r3, r0, #1
   1d4d2:	d102      	bne.n	1d4da <_lseek_r+0x1e>
   1d4d4:	6823      	ldr	r3, [r4, #0]
   1d4d6:	b103      	cbz	r3, 1d4da <_lseek_r+0x1e>
   1d4d8:	602b      	str	r3, [r5, #0]
   1d4da:	bd38      	pop	{r3, r4, r5, pc}
   1d4dc:	2007c7d8 	.word	0x2007c7d8

0001d4e0 <_Balloc>:
_Balloc():
   1d4e0:	b570      	push	{r4, r5, r6, lr}
   1d4e2:	6a45      	ldr	r5, [r0, #36]	; 0x24
   1d4e4:	4604      	mov	r4, r0
   1d4e6:	460e      	mov	r6, r1
   1d4e8:	b93d      	cbnz	r5, 1d4fa <_Balloc+0x1a>
   1d4ea:	2010      	movs	r0, #16
   1d4ec:	f7fb fe1e 	bl	1912c <malloc>
   1d4f0:	6260      	str	r0, [r4, #36]	; 0x24
   1d4f2:	6045      	str	r5, [r0, #4]
   1d4f4:	6085      	str	r5, [r0, #8]
   1d4f6:	6005      	str	r5, [r0, #0]
   1d4f8:	60c5      	str	r5, [r0, #12]
   1d4fa:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1d4fc:	68eb      	ldr	r3, [r5, #12]
   1d4fe:	b183      	cbz	r3, 1d522 <_Balloc+0x42>
   1d500:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1d502:	68db      	ldr	r3, [r3, #12]
   1d504:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   1d508:	b9b8      	cbnz	r0, 1d53a <_Balloc+0x5a>
   1d50a:	2101      	movs	r1, #1
   1d50c:	fa01 f506 	lsl.w	r5, r1, r6
   1d510:	1d6a      	adds	r2, r5, #5
   1d512:	0092      	lsls	r2, r2, #2
   1d514:	4620      	mov	r0, r4
   1d516:	f7fc f8db 	bl	196d0 <_calloc_r>
   1d51a:	b160      	cbz	r0, 1d536 <_Balloc+0x56>
   1d51c:	6046      	str	r6, [r0, #4]
   1d51e:	6085      	str	r5, [r0, #8]
   1d520:	e00e      	b.n	1d540 <_Balloc+0x60>
   1d522:	2221      	movs	r2, #33	; 0x21
   1d524:	2104      	movs	r1, #4
   1d526:	4620      	mov	r0, r4
   1d528:	f7fc f8d2 	bl	196d0 <_calloc_r>
   1d52c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1d52e:	60e8      	str	r0, [r5, #12]
   1d530:	68db      	ldr	r3, [r3, #12]
   1d532:	2b00      	cmp	r3, #0
   1d534:	d1e4      	bne.n	1d500 <_Balloc+0x20>
   1d536:	2000      	movs	r0, #0
   1d538:	bd70      	pop	{r4, r5, r6, pc}
   1d53a:	6802      	ldr	r2, [r0, #0]
   1d53c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   1d540:	2300      	movs	r3, #0
   1d542:	6103      	str	r3, [r0, #16]
   1d544:	60c3      	str	r3, [r0, #12]
   1d546:	bd70      	pop	{r4, r5, r6, pc}

0001d548 <_Bfree>:
_Bfree():
   1d548:	b570      	push	{r4, r5, r6, lr}
   1d54a:	6a44      	ldr	r4, [r0, #36]	; 0x24
   1d54c:	4606      	mov	r6, r0
   1d54e:	460d      	mov	r5, r1
   1d550:	b93c      	cbnz	r4, 1d562 <_Bfree+0x1a>
   1d552:	2010      	movs	r0, #16
   1d554:	f7fb fdea 	bl	1912c <malloc>
   1d558:	6270      	str	r0, [r6, #36]	; 0x24
   1d55a:	6044      	str	r4, [r0, #4]
   1d55c:	6084      	str	r4, [r0, #8]
   1d55e:	6004      	str	r4, [r0, #0]
   1d560:	60c4      	str	r4, [r0, #12]
   1d562:	b13d      	cbz	r5, 1d574 <_Bfree+0x2c>
   1d564:	6a73      	ldr	r3, [r6, #36]	; 0x24
   1d566:	686a      	ldr	r2, [r5, #4]
   1d568:	68db      	ldr	r3, [r3, #12]
   1d56a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   1d56e:	6029      	str	r1, [r5, #0]
   1d570:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   1d574:	bd70      	pop	{r4, r5, r6, pc}

0001d576 <__multadd>:
__multadd():
   1d576:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d57a:	461f      	mov	r7, r3
   1d57c:	4606      	mov	r6, r0
   1d57e:	460c      	mov	r4, r1
   1d580:	2300      	movs	r3, #0
   1d582:	690d      	ldr	r5, [r1, #16]
   1d584:	f101 0e14 	add.w	lr, r1, #20
   1d588:	f8de 0000 	ldr.w	r0, [lr]
   1d58c:	3301      	adds	r3, #1
   1d58e:	b281      	uxth	r1, r0
   1d590:	fb02 7101 	mla	r1, r2, r1, r7
   1d594:	0c00      	lsrs	r0, r0, #16
   1d596:	0c0f      	lsrs	r7, r1, #16
   1d598:	fb02 7000 	mla	r0, r2, r0, r7
   1d59c:	b289      	uxth	r1, r1
   1d59e:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   1d5a2:	429d      	cmp	r5, r3
   1d5a4:	ea4f 4710 	mov.w	r7, r0, lsr #16
   1d5a8:	f84e 1b04 	str.w	r1, [lr], #4
   1d5ac:	dcec      	bgt.n	1d588 <__multadd+0x12>
   1d5ae:	b1d7      	cbz	r7, 1d5e6 <__multadd+0x70>
   1d5b0:	68a3      	ldr	r3, [r4, #8]
   1d5b2:	429d      	cmp	r5, r3
   1d5b4:	db12      	blt.n	1d5dc <__multadd+0x66>
   1d5b6:	6861      	ldr	r1, [r4, #4]
   1d5b8:	4630      	mov	r0, r6
   1d5ba:	3101      	adds	r1, #1
   1d5bc:	f7ff ff90 	bl	1d4e0 <_Balloc>
   1d5c0:	4680      	mov	r8, r0
   1d5c2:	6922      	ldr	r2, [r4, #16]
   1d5c4:	f104 010c 	add.w	r1, r4, #12
   1d5c8:	3202      	adds	r2, #2
   1d5ca:	0092      	lsls	r2, r2, #2
   1d5cc:	300c      	adds	r0, #12
   1d5ce:	f7fb fdec 	bl	191aa <memcpy>
   1d5d2:	4621      	mov	r1, r4
   1d5d4:	4630      	mov	r0, r6
   1d5d6:	f7ff ffb7 	bl	1d548 <_Bfree>
   1d5da:	4644      	mov	r4, r8
   1d5dc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   1d5e0:	3501      	adds	r5, #1
   1d5e2:	615f      	str	r7, [r3, #20]
   1d5e4:	6125      	str	r5, [r4, #16]
   1d5e6:	4620      	mov	r0, r4
   1d5e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d5ec <__s2b>:
__s2b():
   1d5ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d5f0:	4615      	mov	r5, r2
   1d5f2:	2209      	movs	r2, #9
   1d5f4:	461f      	mov	r7, r3
   1d5f6:	3308      	adds	r3, #8
   1d5f8:	460c      	mov	r4, r1
   1d5fa:	fb93 f3f2 	sdiv	r3, r3, r2
   1d5fe:	4606      	mov	r6, r0
   1d600:	2201      	movs	r2, #1
   1d602:	2100      	movs	r1, #0
   1d604:	429a      	cmp	r2, r3
   1d606:	db20      	blt.n	1d64a <__s2b+0x5e>
   1d608:	4630      	mov	r0, r6
   1d60a:	f7ff ff69 	bl	1d4e0 <_Balloc>
   1d60e:	9b08      	ldr	r3, [sp, #32]
   1d610:	2d09      	cmp	r5, #9
   1d612:	6143      	str	r3, [r0, #20]
   1d614:	f04f 0301 	mov.w	r3, #1
   1d618:	6103      	str	r3, [r0, #16]
   1d61a:	dd19      	ble.n	1d650 <__s2b+0x64>
   1d61c:	f104 0909 	add.w	r9, r4, #9
   1d620:	46c8      	mov	r8, r9
   1d622:	442c      	add	r4, r5
   1d624:	f818 3b01 	ldrb.w	r3, [r8], #1
   1d628:	4601      	mov	r1, r0
   1d62a:	3b30      	subs	r3, #48	; 0x30
   1d62c:	220a      	movs	r2, #10
   1d62e:	4630      	mov	r0, r6
   1d630:	f7ff ffa1 	bl	1d576 <__multadd>
   1d634:	45a0      	cmp	r8, r4
   1d636:	d1f5      	bne.n	1d624 <__s2b+0x38>
   1d638:	f1a5 0408 	sub.w	r4, r5, #8
   1d63c:	444c      	add	r4, r9
   1d63e:	1b2d      	subs	r5, r5, r4
   1d640:	1963      	adds	r3, r4, r5
   1d642:	42bb      	cmp	r3, r7
   1d644:	db07      	blt.n	1d656 <__s2b+0x6a>
   1d646:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d64a:	0052      	lsls	r2, r2, #1
   1d64c:	3101      	adds	r1, #1
   1d64e:	e7d9      	b.n	1d604 <__s2b+0x18>
   1d650:	340a      	adds	r4, #10
   1d652:	2509      	movs	r5, #9
   1d654:	e7f3      	b.n	1d63e <__s2b+0x52>
   1d656:	f814 3b01 	ldrb.w	r3, [r4], #1
   1d65a:	4601      	mov	r1, r0
   1d65c:	3b30      	subs	r3, #48	; 0x30
   1d65e:	220a      	movs	r2, #10
   1d660:	4630      	mov	r0, r6
   1d662:	f7ff ff88 	bl	1d576 <__multadd>
   1d666:	e7eb      	b.n	1d640 <__s2b+0x54>

0001d668 <__hi0bits>:
__hi0bits():
   1d668:	0c02      	lsrs	r2, r0, #16
   1d66a:	0412      	lsls	r2, r2, #16
   1d66c:	4603      	mov	r3, r0
   1d66e:	b9b2      	cbnz	r2, 1d69e <__hi0bits+0x36>
   1d670:	0403      	lsls	r3, r0, #16
   1d672:	2010      	movs	r0, #16
   1d674:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   1d678:	bf04      	itt	eq
   1d67a:	021b      	lsleq	r3, r3, #8
   1d67c:	3008      	addeq	r0, #8
   1d67e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   1d682:	bf04      	itt	eq
   1d684:	011b      	lsleq	r3, r3, #4
   1d686:	3004      	addeq	r0, #4
   1d688:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   1d68c:	bf04      	itt	eq
   1d68e:	009b      	lsleq	r3, r3, #2
   1d690:	3002      	addeq	r0, #2
   1d692:	2b00      	cmp	r3, #0
   1d694:	db06      	blt.n	1d6a4 <__hi0bits+0x3c>
   1d696:	005b      	lsls	r3, r3, #1
   1d698:	d503      	bpl.n	1d6a2 <__hi0bits+0x3a>
   1d69a:	3001      	adds	r0, #1
   1d69c:	4770      	bx	lr
   1d69e:	2000      	movs	r0, #0
   1d6a0:	e7e8      	b.n	1d674 <__hi0bits+0xc>
   1d6a2:	2020      	movs	r0, #32
   1d6a4:	4770      	bx	lr

0001d6a6 <__lo0bits>:
__lo0bits():
   1d6a6:	6803      	ldr	r3, [r0, #0]
   1d6a8:	4601      	mov	r1, r0
   1d6aa:	f013 0207 	ands.w	r2, r3, #7
   1d6ae:	d00b      	beq.n	1d6c8 <__lo0bits+0x22>
   1d6b0:	07da      	lsls	r2, r3, #31
   1d6b2:	d423      	bmi.n	1d6fc <__lo0bits+0x56>
   1d6b4:	0798      	lsls	r0, r3, #30
   1d6b6:	bf49      	itett	mi
   1d6b8:	085b      	lsrmi	r3, r3, #1
   1d6ba:	089b      	lsrpl	r3, r3, #2
   1d6bc:	2001      	movmi	r0, #1
   1d6be:	600b      	strmi	r3, [r1, #0]
   1d6c0:	bf5c      	itt	pl
   1d6c2:	600b      	strpl	r3, [r1, #0]
   1d6c4:	2002      	movpl	r0, #2
   1d6c6:	4770      	bx	lr
   1d6c8:	b298      	uxth	r0, r3
   1d6ca:	b9a8      	cbnz	r0, 1d6f8 <__lo0bits+0x52>
   1d6cc:	2010      	movs	r0, #16
   1d6ce:	0c1b      	lsrs	r3, r3, #16
   1d6d0:	f013 0fff 	tst.w	r3, #255	; 0xff
   1d6d4:	bf04      	itt	eq
   1d6d6:	0a1b      	lsreq	r3, r3, #8
   1d6d8:	3008      	addeq	r0, #8
   1d6da:	071a      	lsls	r2, r3, #28
   1d6dc:	bf04      	itt	eq
   1d6de:	091b      	lsreq	r3, r3, #4
   1d6e0:	3004      	addeq	r0, #4
   1d6e2:	079a      	lsls	r2, r3, #30
   1d6e4:	bf04      	itt	eq
   1d6e6:	089b      	lsreq	r3, r3, #2
   1d6e8:	3002      	addeq	r0, #2
   1d6ea:	07da      	lsls	r2, r3, #31
   1d6ec:	d402      	bmi.n	1d6f4 <__lo0bits+0x4e>
   1d6ee:	085b      	lsrs	r3, r3, #1
   1d6f0:	d006      	beq.n	1d700 <__lo0bits+0x5a>
   1d6f2:	3001      	adds	r0, #1
   1d6f4:	600b      	str	r3, [r1, #0]
   1d6f6:	4770      	bx	lr
   1d6f8:	4610      	mov	r0, r2
   1d6fa:	e7e9      	b.n	1d6d0 <__lo0bits+0x2a>
   1d6fc:	2000      	movs	r0, #0
   1d6fe:	4770      	bx	lr
   1d700:	2020      	movs	r0, #32
   1d702:	4770      	bx	lr

0001d704 <__i2b>:
__i2b():
   1d704:	b510      	push	{r4, lr}
   1d706:	460c      	mov	r4, r1
   1d708:	2101      	movs	r1, #1
   1d70a:	f7ff fee9 	bl	1d4e0 <_Balloc>
   1d70e:	2201      	movs	r2, #1
   1d710:	6144      	str	r4, [r0, #20]
   1d712:	6102      	str	r2, [r0, #16]
   1d714:	bd10      	pop	{r4, pc}

0001d716 <__multiply>:
__multiply():
   1d716:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d71a:	4614      	mov	r4, r2
   1d71c:	690a      	ldr	r2, [r1, #16]
   1d71e:	6923      	ldr	r3, [r4, #16]
   1d720:	4689      	mov	r9, r1
   1d722:	429a      	cmp	r2, r3
   1d724:	bfbe      	ittt	lt
   1d726:	460b      	movlt	r3, r1
   1d728:	46a1      	movlt	r9, r4
   1d72a:	461c      	movlt	r4, r3
   1d72c:	f8d9 7010 	ldr.w	r7, [r9, #16]
   1d730:	f8d4 a010 	ldr.w	sl, [r4, #16]
   1d734:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1d738:	f8d9 1004 	ldr.w	r1, [r9, #4]
   1d73c:	eb07 060a 	add.w	r6, r7, sl
   1d740:	429e      	cmp	r6, r3
   1d742:	bfc8      	it	gt
   1d744:	3101      	addgt	r1, #1
   1d746:	f7ff fecb 	bl	1d4e0 <_Balloc>
   1d74a:	f100 0514 	add.w	r5, r0, #20
   1d74e:	462b      	mov	r3, r5
   1d750:	2200      	movs	r2, #0
   1d752:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   1d756:	4543      	cmp	r3, r8
   1d758:	d316      	bcc.n	1d788 <__multiply+0x72>
   1d75a:	f104 0214 	add.w	r2, r4, #20
   1d75e:	f109 0114 	add.w	r1, r9, #20
   1d762:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   1d766:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   1d76a:	9301      	str	r3, [sp, #4]
   1d76c:	9c01      	ldr	r4, [sp, #4]
   1d76e:	4613      	mov	r3, r2
   1d770:	4294      	cmp	r4, r2
   1d772:	d80c      	bhi.n	1d78e <__multiply+0x78>
   1d774:	2e00      	cmp	r6, #0
   1d776:	dd03      	ble.n	1d780 <__multiply+0x6a>
   1d778:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   1d77c:	2b00      	cmp	r3, #0
   1d77e:	d054      	beq.n	1d82a <__multiply+0x114>
   1d780:	6106      	str	r6, [r0, #16]
   1d782:	b003      	add	sp, #12
   1d784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d788:	f843 2b04 	str.w	r2, [r3], #4
   1d78c:	e7e3      	b.n	1d756 <__multiply+0x40>
   1d78e:	f8b3 a000 	ldrh.w	sl, [r3]
   1d792:	3204      	adds	r2, #4
   1d794:	f1ba 0f00 	cmp.w	sl, #0
   1d798:	d020      	beq.n	1d7dc <__multiply+0xc6>
   1d79a:	46ae      	mov	lr, r5
   1d79c:	4689      	mov	r9, r1
   1d79e:	f04f 0c00 	mov.w	ip, #0
   1d7a2:	f859 4b04 	ldr.w	r4, [r9], #4
   1d7a6:	f8be b000 	ldrh.w	fp, [lr]
   1d7aa:	b2a3      	uxth	r3, r4
   1d7ac:	fb0a b303 	mla	r3, sl, r3, fp
   1d7b0:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   1d7b4:	f8de 4000 	ldr.w	r4, [lr]
   1d7b8:	4463      	add	r3, ip
   1d7ba:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1d7be:	fb0a c40b 	mla	r4, sl, fp, ip
   1d7c2:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   1d7c6:	b29b      	uxth	r3, r3
   1d7c8:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1d7cc:	454f      	cmp	r7, r9
   1d7ce:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1d7d2:	f84e 3b04 	str.w	r3, [lr], #4
   1d7d6:	d8e4      	bhi.n	1d7a2 <__multiply+0x8c>
   1d7d8:	f8ce c000 	str.w	ip, [lr]
   1d7dc:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   1d7e0:	f1b9 0f00 	cmp.w	r9, #0
   1d7e4:	d01f      	beq.n	1d826 <__multiply+0x110>
   1d7e6:	46ae      	mov	lr, r5
   1d7e8:	468c      	mov	ip, r1
   1d7ea:	f04f 0a00 	mov.w	sl, #0
   1d7ee:	682b      	ldr	r3, [r5, #0]
   1d7f0:	f8bc 4000 	ldrh.w	r4, [ip]
   1d7f4:	f8be b002 	ldrh.w	fp, [lr, #2]
   1d7f8:	b29b      	uxth	r3, r3
   1d7fa:	fb09 b404 	mla	r4, r9, r4, fp
   1d7fe:	44a2      	add	sl, r4
   1d800:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   1d804:	f84e 3b04 	str.w	r3, [lr], #4
   1d808:	f85c 3b04 	ldr.w	r3, [ip], #4
   1d80c:	f8be 4000 	ldrh.w	r4, [lr]
   1d810:	0c1b      	lsrs	r3, r3, #16
   1d812:	fb09 4303 	mla	r3, r9, r3, r4
   1d816:	4567      	cmp	r7, ip
   1d818:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   1d81c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1d820:	d8e6      	bhi.n	1d7f0 <__multiply+0xda>
   1d822:	f8ce 3000 	str.w	r3, [lr]
   1d826:	3504      	adds	r5, #4
   1d828:	e7a0      	b.n	1d76c <__multiply+0x56>
   1d82a:	3e01      	subs	r6, #1
   1d82c:	e7a2      	b.n	1d774 <__multiply+0x5e>
   1d82e:	Address 0x000000000001d82e is out of bounds.


0001d830 <__pow5mult>:
__pow5mult():
   1d830:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d834:	4615      	mov	r5, r2
   1d836:	f012 0203 	ands.w	r2, r2, #3
   1d83a:	4606      	mov	r6, r0
   1d83c:	460f      	mov	r7, r1
   1d83e:	d007      	beq.n	1d850 <__pow5mult+0x20>
   1d840:	4c21      	ldr	r4, [pc, #132]	; (1d8c8 <__pow5mult+0x98>)
   1d842:	3a01      	subs	r2, #1
   1d844:	2300      	movs	r3, #0
   1d846:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   1d84a:	f7ff fe94 	bl	1d576 <__multadd>
   1d84e:	4607      	mov	r7, r0
   1d850:	10ad      	asrs	r5, r5, #2
   1d852:	d035      	beq.n	1d8c0 <__pow5mult+0x90>
   1d854:	6a74      	ldr	r4, [r6, #36]	; 0x24
   1d856:	b93c      	cbnz	r4, 1d868 <__pow5mult+0x38>
   1d858:	2010      	movs	r0, #16
   1d85a:	f7fb fc67 	bl	1912c <malloc>
   1d85e:	6270      	str	r0, [r6, #36]	; 0x24
   1d860:	6044      	str	r4, [r0, #4]
   1d862:	6084      	str	r4, [r0, #8]
   1d864:	6004      	str	r4, [r0, #0]
   1d866:	60c4      	str	r4, [r0, #12]
   1d868:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   1d86c:	f8d8 4008 	ldr.w	r4, [r8, #8]
   1d870:	b94c      	cbnz	r4, 1d886 <__pow5mult+0x56>
   1d872:	f240 2171 	movw	r1, #625	; 0x271
   1d876:	4630      	mov	r0, r6
   1d878:	f7ff ff44 	bl	1d704 <__i2b>
   1d87c:	2300      	movs	r3, #0
   1d87e:	4604      	mov	r4, r0
   1d880:	f8c8 0008 	str.w	r0, [r8, #8]
   1d884:	6003      	str	r3, [r0, #0]
   1d886:	f04f 0800 	mov.w	r8, #0
   1d88a:	07eb      	lsls	r3, r5, #31
   1d88c:	d50a      	bpl.n	1d8a4 <__pow5mult+0x74>
   1d88e:	4639      	mov	r1, r7
   1d890:	4622      	mov	r2, r4
   1d892:	4630      	mov	r0, r6
   1d894:	f7ff ff3f 	bl	1d716 <__multiply>
   1d898:	4681      	mov	r9, r0
   1d89a:	4639      	mov	r1, r7
   1d89c:	4630      	mov	r0, r6
   1d89e:	f7ff fe53 	bl	1d548 <_Bfree>
   1d8a2:	464f      	mov	r7, r9
   1d8a4:	106d      	asrs	r5, r5, #1
   1d8a6:	d00b      	beq.n	1d8c0 <__pow5mult+0x90>
   1d8a8:	6820      	ldr	r0, [r4, #0]
   1d8aa:	b938      	cbnz	r0, 1d8bc <__pow5mult+0x8c>
   1d8ac:	4622      	mov	r2, r4
   1d8ae:	4621      	mov	r1, r4
   1d8b0:	4630      	mov	r0, r6
   1d8b2:	f7ff ff30 	bl	1d716 <__multiply>
   1d8b6:	6020      	str	r0, [r4, #0]
   1d8b8:	f8c0 8000 	str.w	r8, [r0]
   1d8bc:	4604      	mov	r4, r0
   1d8be:	e7e4      	b.n	1d88a <__pow5mult+0x5a>
   1d8c0:	4638      	mov	r0, r7
   1d8c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d8c6:	bf00      	nop
   1d8c8:	00020a08 	.word	0x00020a08

0001d8cc <__lshift>:
__lshift():
   1d8cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d8d0:	460c      	mov	r4, r1
   1d8d2:	4607      	mov	r7, r0
   1d8d4:	4616      	mov	r6, r2
   1d8d6:	6923      	ldr	r3, [r4, #16]
   1d8d8:	ea4f 1a62 	mov.w	sl, r2, asr #5
   1d8dc:	eb0a 0903 	add.w	r9, sl, r3
   1d8e0:	6849      	ldr	r1, [r1, #4]
   1d8e2:	68a3      	ldr	r3, [r4, #8]
   1d8e4:	f109 0501 	add.w	r5, r9, #1
   1d8e8:	42ab      	cmp	r3, r5
   1d8ea:	db31      	blt.n	1d950 <__lshift+0x84>
   1d8ec:	4638      	mov	r0, r7
   1d8ee:	f7ff fdf7 	bl	1d4e0 <_Balloc>
   1d8f2:	2200      	movs	r2, #0
   1d8f4:	4680      	mov	r8, r0
   1d8f6:	4611      	mov	r1, r2
   1d8f8:	f100 0314 	add.w	r3, r0, #20
   1d8fc:	4552      	cmp	r2, sl
   1d8fe:	db2a      	blt.n	1d956 <__lshift+0x8a>
   1d900:	6920      	ldr	r0, [r4, #16]
   1d902:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   1d906:	f104 0114 	add.w	r1, r4, #20
   1d90a:	f016 021f 	ands.w	r2, r6, #31
   1d90e:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   1d912:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   1d916:	d022      	beq.n	1d95e <__lshift+0x92>
   1d918:	2000      	movs	r0, #0
   1d91a:	f1c2 0c20 	rsb	ip, r2, #32
   1d91e:	680e      	ldr	r6, [r1, #0]
   1d920:	4096      	lsls	r6, r2
   1d922:	4330      	orrs	r0, r6
   1d924:	f843 0b04 	str.w	r0, [r3], #4
   1d928:	f851 0b04 	ldr.w	r0, [r1], #4
   1d92c:	458e      	cmp	lr, r1
   1d92e:	fa20 f00c 	lsr.w	r0, r0, ip
   1d932:	d8f4      	bhi.n	1d91e <__lshift+0x52>
   1d934:	6018      	str	r0, [r3, #0]
   1d936:	b108      	cbz	r0, 1d93c <__lshift+0x70>
   1d938:	f109 0502 	add.w	r5, r9, #2
   1d93c:	3d01      	subs	r5, #1
   1d93e:	4638      	mov	r0, r7
   1d940:	f8c8 5010 	str.w	r5, [r8, #16]
   1d944:	4621      	mov	r1, r4
   1d946:	f7ff fdff 	bl	1d548 <_Bfree>
   1d94a:	4640      	mov	r0, r8
   1d94c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d950:	3101      	adds	r1, #1
   1d952:	005b      	lsls	r3, r3, #1
   1d954:	e7c8      	b.n	1d8e8 <__lshift+0x1c>
   1d956:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   1d95a:	3201      	adds	r2, #1
   1d95c:	e7ce      	b.n	1d8fc <__lshift+0x30>
   1d95e:	3b04      	subs	r3, #4
   1d960:	f851 2b04 	ldr.w	r2, [r1], #4
   1d964:	458e      	cmp	lr, r1
   1d966:	f843 2f04 	str.w	r2, [r3, #4]!
   1d96a:	d8f9      	bhi.n	1d960 <__lshift+0x94>
   1d96c:	e7e6      	b.n	1d93c <__lshift+0x70>

0001d96e <__mcmp>:
__mcmp():
   1d96e:	6903      	ldr	r3, [r0, #16]
   1d970:	690a      	ldr	r2, [r1, #16]
   1d972:	b530      	push	{r4, r5, lr}
   1d974:	1a9b      	subs	r3, r3, r2
   1d976:	d10c      	bne.n	1d992 <__mcmp+0x24>
   1d978:	0092      	lsls	r2, r2, #2
   1d97a:	3014      	adds	r0, #20
   1d97c:	3114      	adds	r1, #20
   1d97e:	1884      	adds	r4, r0, r2
   1d980:	4411      	add	r1, r2
   1d982:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   1d986:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   1d98a:	4295      	cmp	r5, r2
   1d98c:	d003      	beq.n	1d996 <__mcmp+0x28>
   1d98e:	d305      	bcc.n	1d99c <__mcmp+0x2e>
   1d990:	2301      	movs	r3, #1
   1d992:	4618      	mov	r0, r3
   1d994:	bd30      	pop	{r4, r5, pc}
   1d996:	42a0      	cmp	r0, r4
   1d998:	d3f3      	bcc.n	1d982 <__mcmp+0x14>
   1d99a:	e7fa      	b.n	1d992 <__mcmp+0x24>
   1d99c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d9a0:	e7f7      	b.n	1d992 <__mcmp+0x24>

0001d9a2 <__mdiff>:
__mdiff():
   1d9a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d9a6:	460d      	mov	r5, r1
   1d9a8:	4607      	mov	r7, r0
   1d9aa:	4611      	mov	r1, r2
   1d9ac:	4628      	mov	r0, r5
   1d9ae:	4614      	mov	r4, r2
   1d9b0:	f7ff ffdd 	bl	1d96e <__mcmp>
   1d9b4:	1e06      	subs	r6, r0, #0
   1d9b6:	d108      	bne.n	1d9ca <__mdiff+0x28>
   1d9b8:	4631      	mov	r1, r6
   1d9ba:	4638      	mov	r0, r7
   1d9bc:	f7ff fd90 	bl	1d4e0 <_Balloc>
   1d9c0:	2301      	movs	r3, #1
   1d9c2:	6146      	str	r6, [r0, #20]
   1d9c4:	6103      	str	r3, [r0, #16]
   1d9c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d9ca:	bfa4      	itt	ge
   1d9cc:	4623      	movge	r3, r4
   1d9ce:	462c      	movge	r4, r5
   1d9d0:	4638      	mov	r0, r7
   1d9d2:	6861      	ldr	r1, [r4, #4]
   1d9d4:	bfa6      	itte	ge
   1d9d6:	461d      	movge	r5, r3
   1d9d8:	2600      	movge	r6, #0
   1d9da:	2601      	movlt	r6, #1
   1d9dc:	f7ff fd80 	bl	1d4e0 <_Balloc>
   1d9e0:	f04f 0c00 	mov.w	ip, #0
   1d9e4:	60c6      	str	r6, [r0, #12]
   1d9e6:	692b      	ldr	r3, [r5, #16]
   1d9e8:	6926      	ldr	r6, [r4, #16]
   1d9ea:	f104 0214 	add.w	r2, r4, #20
   1d9ee:	f105 0914 	add.w	r9, r5, #20
   1d9f2:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   1d9f6:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   1d9fa:	f100 0114 	add.w	r1, r0, #20
   1d9fe:	f852 ab04 	ldr.w	sl, [r2], #4
   1da02:	f859 5b04 	ldr.w	r5, [r9], #4
   1da06:	fa1f f38a 	uxth.w	r3, sl
   1da0a:	4463      	add	r3, ip
   1da0c:	b2ac      	uxth	r4, r5
   1da0e:	1b1b      	subs	r3, r3, r4
   1da10:	0c2c      	lsrs	r4, r5, #16
   1da12:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   1da16:	eb04 4423 	add.w	r4, r4, r3, asr #16
   1da1a:	b29b      	uxth	r3, r3
   1da1c:	ea4f 4c24 	mov.w	ip, r4, asr #16
   1da20:	45c8      	cmp	r8, r9
   1da22:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   1da26:	4696      	mov	lr, r2
   1da28:	f841 4b04 	str.w	r4, [r1], #4
   1da2c:	d8e7      	bhi.n	1d9fe <__mdiff+0x5c>
   1da2e:	45be      	cmp	lr, r7
   1da30:	d305      	bcc.n	1da3e <__mdiff+0x9c>
   1da32:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   1da36:	b18b      	cbz	r3, 1da5c <__mdiff+0xba>
   1da38:	6106      	str	r6, [r0, #16]
   1da3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1da3e:	f85e 4b04 	ldr.w	r4, [lr], #4
   1da42:	b2a2      	uxth	r2, r4
   1da44:	4462      	add	r2, ip
   1da46:	1413      	asrs	r3, r2, #16
   1da48:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   1da4c:	b292      	uxth	r2, r2
   1da4e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   1da52:	ea4f 4c23 	mov.w	ip, r3, asr #16
   1da56:	f841 2b04 	str.w	r2, [r1], #4
   1da5a:	e7e8      	b.n	1da2e <__mdiff+0x8c>
   1da5c:	3e01      	subs	r6, #1
   1da5e:	e7e8      	b.n	1da32 <__mdiff+0x90>

0001da60 <__ulp>:
__ulp():
   1da60:	4b10      	ldr	r3, [pc, #64]	; (1daa4 <__ulp+0x44>)
   1da62:	400b      	ands	r3, r1
   1da64:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   1da68:	2b00      	cmp	r3, #0
   1da6a:	dd02      	ble.n	1da72 <__ulp+0x12>
   1da6c:	2000      	movs	r0, #0
   1da6e:	4619      	mov	r1, r3
   1da70:	4770      	bx	lr
   1da72:	425b      	negs	r3, r3
   1da74:	151b      	asrs	r3, r3, #20
   1da76:	2b13      	cmp	r3, #19
   1da78:	f04f 0000 	mov.w	r0, #0
   1da7c:	f04f 0100 	mov.w	r1, #0
   1da80:	dc04      	bgt.n	1da8c <__ulp+0x2c>
   1da82:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   1da86:	fa42 f103 	asr.w	r1, r2, r3
   1da8a:	4770      	bx	lr
   1da8c:	2201      	movs	r2, #1
   1da8e:	3b14      	subs	r3, #20
   1da90:	2b1e      	cmp	r3, #30
   1da92:	bfce      	itee	gt
   1da94:	4613      	movgt	r3, r2
   1da96:	f1c3 031f 	rsble	r3, r3, #31
   1da9a:	fa02 f303 	lslle.w	r3, r2, r3
   1da9e:	4618      	mov	r0, r3
   1daa0:	4770      	bx	lr
   1daa2:	bf00      	nop
   1daa4:	7ff00000 	.word	0x7ff00000

0001daa8 <__b2d>:
__b2d():
   1daa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1daac:	6907      	ldr	r7, [r0, #16]
   1daae:	f100 0914 	add.w	r9, r0, #20
   1dab2:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   1dab6:	f857 6c04 	ldr.w	r6, [r7, #-4]
   1daba:	f1a7 0804 	sub.w	r8, r7, #4
   1dabe:	4630      	mov	r0, r6
   1dac0:	f7ff fdd2 	bl	1d668 <__hi0bits>
   1dac4:	f1c0 0320 	rsb	r3, r0, #32
   1dac8:	280a      	cmp	r0, #10
   1daca:	600b      	str	r3, [r1, #0]
   1dacc:	491e      	ldr	r1, [pc, #120]	; (1db48 <__b2d+0xa0>)
   1dace:	dc17      	bgt.n	1db00 <__b2d+0x58>
   1dad0:	45c1      	cmp	r9, r8
   1dad2:	bf28      	it	cs
   1dad4:	2200      	movcs	r2, #0
   1dad6:	f1c0 0e0b 	rsb	lr, r0, #11
   1dada:	fa26 f30e 	lsr.w	r3, r6, lr
   1dade:	bf38      	it	cc
   1dae0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1dae4:	ea43 0501 	orr.w	r5, r3, r1
   1dae8:	f100 0315 	add.w	r3, r0, #21
   1daec:	fa06 f303 	lsl.w	r3, r6, r3
   1daf0:	fa22 f20e 	lsr.w	r2, r2, lr
   1daf4:	ea43 0402 	orr.w	r4, r3, r2
   1daf8:	4620      	mov	r0, r4
   1dafa:	4629      	mov	r1, r5
   1dafc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1db00:	45c1      	cmp	r9, r8
   1db02:	bf3a      	itte	cc
   1db04:	f1a7 0808 	subcc.w	r8, r7, #8
   1db08:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1db0c:	2200      	movcs	r2, #0
   1db0e:	f1b0 030b 	subs.w	r3, r0, #11
   1db12:	d015      	beq.n	1db40 <__b2d+0x98>
   1db14:	409e      	lsls	r6, r3
   1db16:	f1c3 0720 	rsb	r7, r3, #32
   1db1a:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   1db1e:	fa22 f107 	lsr.w	r1, r2, r7
   1db22:	45c8      	cmp	r8, r9
   1db24:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   1db28:	ea46 0501 	orr.w	r5, r6, r1
   1db2c:	bf94      	ite	ls
   1db2e:	2100      	movls	r1, #0
   1db30:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   1db34:	fa02 f003 	lsl.w	r0, r2, r3
   1db38:	40f9      	lsrs	r1, r7
   1db3a:	ea40 0401 	orr.w	r4, r0, r1
   1db3e:	e7db      	b.n	1daf8 <__b2d+0x50>
   1db40:	ea46 0501 	orr.w	r5, r6, r1
   1db44:	4614      	mov	r4, r2
   1db46:	e7d7      	b.n	1daf8 <__b2d+0x50>
   1db48:	3ff00000 	.word	0x3ff00000

0001db4c <__d2b>:
__d2b():
   1db4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1db50:	461c      	mov	r4, r3
   1db52:	2101      	movs	r1, #1
   1db54:	4690      	mov	r8, r2
   1db56:	9e08      	ldr	r6, [sp, #32]
   1db58:	9d09      	ldr	r5, [sp, #36]	; 0x24
   1db5a:	f7ff fcc1 	bl	1d4e0 <_Balloc>
   1db5e:	f3c4 0213 	ubfx	r2, r4, #0, #20
   1db62:	f3c4 540a 	ubfx	r4, r4, #20, #11
   1db66:	4607      	mov	r7, r0
   1db68:	bb34      	cbnz	r4, 1dbb8 <__d2b+0x6c>
   1db6a:	9201      	str	r2, [sp, #4]
   1db6c:	f1b8 0f00 	cmp.w	r8, #0
   1db70:	d027      	beq.n	1dbc2 <__d2b+0x76>
   1db72:	a802      	add	r0, sp, #8
   1db74:	f840 8d08 	str.w	r8, [r0, #-8]!
   1db78:	f7ff fd95 	bl	1d6a6 <__lo0bits>
   1db7c:	9900      	ldr	r1, [sp, #0]
   1db7e:	b1f0      	cbz	r0, 1dbbe <__d2b+0x72>
   1db80:	9a01      	ldr	r2, [sp, #4]
   1db82:	f1c0 0320 	rsb	r3, r0, #32
   1db86:	fa02 f303 	lsl.w	r3, r2, r3
   1db8a:	430b      	orrs	r3, r1
   1db8c:	40c2      	lsrs	r2, r0
   1db8e:	617b      	str	r3, [r7, #20]
   1db90:	9201      	str	r2, [sp, #4]
   1db92:	9b01      	ldr	r3, [sp, #4]
   1db94:	2b00      	cmp	r3, #0
   1db96:	bf14      	ite	ne
   1db98:	2102      	movne	r1, #2
   1db9a:	2101      	moveq	r1, #1
   1db9c:	61bb      	str	r3, [r7, #24]
   1db9e:	6139      	str	r1, [r7, #16]
   1dba0:	b1c4      	cbz	r4, 1dbd4 <__d2b+0x88>
   1dba2:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   1dba6:	4404      	add	r4, r0
   1dba8:	6034      	str	r4, [r6, #0]
   1dbaa:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   1dbae:	6028      	str	r0, [r5, #0]
   1dbb0:	4638      	mov	r0, r7
   1dbb2:	b002      	add	sp, #8
   1dbb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dbb8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   1dbbc:	e7d5      	b.n	1db6a <__d2b+0x1e>
   1dbbe:	6179      	str	r1, [r7, #20]
   1dbc0:	e7e7      	b.n	1db92 <__d2b+0x46>
   1dbc2:	a801      	add	r0, sp, #4
   1dbc4:	f7ff fd6f 	bl	1d6a6 <__lo0bits>
   1dbc8:	2101      	movs	r1, #1
   1dbca:	9b01      	ldr	r3, [sp, #4]
   1dbcc:	6139      	str	r1, [r7, #16]
   1dbce:	617b      	str	r3, [r7, #20]
   1dbd0:	3020      	adds	r0, #32
   1dbd2:	e7e5      	b.n	1dba0 <__d2b+0x54>
   1dbd4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   1dbd8:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   1dbdc:	6030      	str	r0, [r6, #0]
   1dbde:	6918      	ldr	r0, [r3, #16]
   1dbe0:	f7ff fd42 	bl	1d668 <__hi0bits>
   1dbe4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   1dbe8:	e7e1      	b.n	1dbae <__d2b+0x62>

0001dbea <__ratio>:
__ratio():
   1dbea:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   1dbee:	4688      	mov	r8, r1
   1dbf0:	4669      	mov	r1, sp
   1dbf2:	4681      	mov	r9, r0
   1dbf4:	f7ff ff58 	bl	1daa8 <__b2d>
   1dbf8:	460d      	mov	r5, r1
   1dbfa:	4604      	mov	r4, r0
   1dbfc:	a901      	add	r1, sp, #4
   1dbfe:	4640      	mov	r0, r8
   1dc00:	f7ff ff52 	bl	1daa8 <__b2d>
   1dc04:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1dc08:	f8d8 2010 	ldr.w	r2, [r8, #16]
   1dc0c:	9e00      	ldr	r6, [sp, #0]
   1dc0e:	1a9a      	subs	r2, r3, r2
   1dc10:	9b01      	ldr	r3, [sp, #4]
   1dc12:	1af3      	subs	r3, r6, r3
   1dc14:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1dc18:	2b00      	cmp	r3, #0
   1dc1a:	bfd6      	itet	le
   1dc1c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   1dc20:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   1dc24:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   1dc28:	4602      	mov	r2, r0
   1dc2a:	460b      	mov	r3, r1
   1dc2c:	4620      	mov	r0, r4
   1dc2e:	4629      	mov	r1, r5
   1dc30:	f001 fa3e 	bl	1f0b0 <__aeabi_ddiv>
   1dc34:	b002      	add	sp, #8
   1dc36:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001dc3a <__copybits>:
__copybits():
   1dc3a:	3901      	subs	r1, #1
   1dc3c:	b510      	push	{r4, lr}
   1dc3e:	1149      	asrs	r1, r1, #5
   1dc40:	6914      	ldr	r4, [r2, #16]
   1dc42:	3101      	adds	r1, #1
   1dc44:	f102 0314 	add.w	r3, r2, #20
   1dc48:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   1dc4c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   1dc50:	42a3      	cmp	r3, r4
   1dc52:	4602      	mov	r2, r0
   1dc54:	d303      	bcc.n	1dc5e <__copybits+0x24>
   1dc56:	2300      	movs	r3, #0
   1dc58:	428a      	cmp	r2, r1
   1dc5a:	d305      	bcc.n	1dc68 <__copybits+0x2e>
   1dc5c:	bd10      	pop	{r4, pc}
   1dc5e:	f853 2b04 	ldr.w	r2, [r3], #4
   1dc62:	f840 2b04 	str.w	r2, [r0], #4
   1dc66:	e7f3      	b.n	1dc50 <__copybits+0x16>
   1dc68:	f842 3b04 	str.w	r3, [r2], #4
   1dc6c:	e7f4      	b.n	1dc58 <__copybits+0x1e>

0001dc6e <__any_on>:
__any_on():
   1dc6e:	f100 0214 	add.w	r2, r0, #20
   1dc72:	6900      	ldr	r0, [r0, #16]
   1dc74:	114b      	asrs	r3, r1, #5
   1dc76:	4298      	cmp	r0, r3
   1dc78:	b510      	push	{r4, lr}
   1dc7a:	db11      	blt.n	1dca0 <__any_on+0x32>
   1dc7c:	dd0a      	ble.n	1dc94 <__any_on+0x26>
   1dc7e:	f011 011f 	ands.w	r1, r1, #31
   1dc82:	d007      	beq.n	1dc94 <__any_on+0x26>
   1dc84:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   1dc88:	fa24 f001 	lsr.w	r0, r4, r1
   1dc8c:	fa00 f101 	lsl.w	r1, r0, r1
   1dc90:	428c      	cmp	r4, r1
   1dc92:	d10b      	bne.n	1dcac <__any_on+0x3e>
   1dc94:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   1dc98:	4293      	cmp	r3, r2
   1dc9a:	d803      	bhi.n	1dca4 <__any_on+0x36>
   1dc9c:	2000      	movs	r0, #0
   1dc9e:	bd10      	pop	{r4, pc}
   1dca0:	4603      	mov	r3, r0
   1dca2:	e7f7      	b.n	1dc94 <__any_on+0x26>
   1dca4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   1dca8:	2900      	cmp	r1, #0
   1dcaa:	d0f5      	beq.n	1dc98 <__any_on+0x2a>
   1dcac:	2001      	movs	r0, #1
   1dcae:	bd10      	pop	{r4, pc}

0001dcb0 <_realloc_r>:
_realloc_r():
   1dcb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1dcb2:	4607      	mov	r7, r0
   1dcb4:	4614      	mov	r4, r2
   1dcb6:	460e      	mov	r6, r1
   1dcb8:	b921      	cbnz	r1, 1dcc4 <_realloc_r+0x14>
   1dcba:	4611      	mov	r1, r2
   1dcbc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1dcc0:	f7fb bd92 	b.w	197e8 <_malloc_r>
   1dcc4:	b922      	cbnz	r2, 1dcd0 <_realloc_r+0x20>
   1dcc6:	f7fb fd11 	bl	196ec <_free_r>
   1dcca:	4625      	mov	r5, r4
   1dccc:	4628      	mov	r0, r5
   1dcce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1dcd0:	f001 f8ba 	bl	1ee48 <_malloc_usable_size_r>
   1dcd4:	4284      	cmp	r4, r0
   1dcd6:	d90f      	bls.n	1dcf8 <_realloc_r+0x48>
   1dcd8:	4621      	mov	r1, r4
   1dcda:	4638      	mov	r0, r7
   1dcdc:	f7fb fd84 	bl	197e8 <_malloc_r>
   1dce0:	4605      	mov	r5, r0
   1dce2:	2800      	cmp	r0, #0
   1dce4:	d0f2      	beq.n	1dccc <_realloc_r+0x1c>
   1dce6:	4631      	mov	r1, r6
   1dce8:	4622      	mov	r2, r4
   1dcea:	f7fb fa5e 	bl	191aa <memcpy>
   1dcee:	4631      	mov	r1, r6
   1dcf0:	4638      	mov	r0, r7
   1dcf2:	f7fb fcfb 	bl	196ec <_free_r>
   1dcf6:	e7e9      	b.n	1dccc <_realloc_r+0x1c>
   1dcf8:	4635      	mov	r5, r6
   1dcfa:	e7e7      	b.n	1dccc <_realloc_r+0x1c>

0001dcfc <__ssputs_r>:
__ssputs_r():
   1dcfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1dd00:	688e      	ldr	r6, [r1, #8]
   1dd02:	4682      	mov	sl, r0
   1dd04:	429e      	cmp	r6, r3
   1dd06:	460c      	mov	r4, r1
   1dd08:	4691      	mov	r9, r2
   1dd0a:	4698      	mov	r8, r3
   1dd0c:	d835      	bhi.n	1dd7a <__ssputs_r+0x7e>
   1dd0e:	898a      	ldrh	r2, [r1, #12]
   1dd10:	f412 6f90 	tst.w	r2, #1152	; 0x480
   1dd14:	d031      	beq.n	1dd7a <__ssputs_r+0x7e>
   1dd16:	2302      	movs	r3, #2
   1dd18:	6825      	ldr	r5, [r4, #0]
   1dd1a:	6909      	ldr	r1, [r1, #16]
   1dd1c:	1a6f      	subs	r7, r5, r1
   1dd1e:	6965      	ldr	r5, [r4, #20]
   1dd20:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   1dd24:	fb95 f5f3 	sdiv	r5, r5, r3
   1dd28:	f108 0301 	add.w	r3, r8, #1
   1dd2c:	443b      	add	r3, r7
   1dd2e:	429d      	cmp	r5, r3
   1dd30:	bf38      	it	cc
   1dd32:	461d      	movcc	r5, r3
   1dd34:	0553      	lsls	r3, r2, #21
   1dd36:	d531      	bpl.n	1dd9c <__ssputs_r+0xa0>
   1dd38:	4629      	mov	r1, r5
   1dd3a:	f7fb fd55 	bl	197e8 <_malloc_r>
   1dd3e:	4606      	mov	r6, r0
   1dd40:	b950      	cbnz	r0, 1dd58 <__ssputs_r+0x5c>
   1dd42:	230c      	movs	r3, #12
   1dd44:	f8ca 3000 	str.w	r3, [sl]
   1dd48:	89a3      	ldrh	r3, [r4, #12]
   1dd4a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dd4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1dd52:	81a3      	strh	r3, [r4, #12]
   1dd54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1dd58:	463a      	mov	r2, r7
   1dd5a:	6921      	ldr	r1, [r4, #16]
   1dd5c:	f7fb fa25 	bl	191aa <memcpy>
   1dd60:	89a3      	ldrh	r3, [r4, #12]
   1dd62:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1dd66:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1dd6a:	81a3      	strh	r3, [r4, #12]
   1dd6c:	6126      	str	r6, [r4, #16]
   1dd6e:	443e      	add	r6, r7
   1dd70:	6026      	str	r6, [r4, #0]
   1dd72:	4646      	mov	r6, r8
   1dd74:	6165      	str	r5, [r4, #20]
   1dd76:	1bed      	subs	r5, r5, r7
   1dd78:	60a5      	str	r5, [r4, #8]
   1dd7a:	4546      	cmp	r6, r8
   1dd7c:	bf28      	it	cs
   1dd7e:	4646      	movcs	r6, r8
   1dd80:	4649      	mov	r1, r9
   1dd82:	4632      	mov	r2, r6
   1dd84:	6820      	ldr	r0, [r4, #0]
   1dd86:	f7fb fa1b 	bl	191c0 <memmove>
   1dd8a:	68a3      	ldr	r3, [r4, #8]
   1dd8c:	2000      	movs	r0, #0
   1dd8e:	1b9b      	subs	r3, r3, r6
   1dd90:	60a3      	str	r3, [r4, #8]
   1dd92:	6823      	ldr	r3, [r4, #0]
   1dd94:	441e      	add	r6, r3
   1dd96:	6026      	str	r6, [r4, #0]
   1dd98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1dd9c:	462a      	mov	r2, r5
   1dd9e:	f7ff ff87 	bl	1dcb0 <_realloc_r>
   1dda2:	4606      	mov	r6, r0
   1dda4:	2800      	cmp	r0, #0
   1dda6:	d1e1      	bne.n	1dd6c <__ssputs_r+0x70>
   1dda8:	6921      	ldr	r1, [r4, #16]
   1ddaa:	4650      	mov	r0, sl
   1ddac:	f7fb fc9e 	bl	196ec <_free_r>
   1ddb0:	e7c7      	b.n	1dd42 <__ssputs_r+0x46>
   1ddb2:	Address 0x000000000001ddb2 is out of bounds.


0001ddb4 <_svfiprintf_r>:
_svfiprintf_r():
   1ddb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ddb8:	b09d      	sub	sp, #116	; 0x74
   1ddba:	9303      	str	r3, [sp, #12]
   1ddbc:	898b      	ldrh	r3, [r1, #12]
   1ddbe:	4680      	mov	r8, r0
   1ddc0:	061c      	lsls	r4, r3, #24
   1ddc2:	460d      	mov	r5, r1
   1ddc4:	4616      	mov	r6, r2
   1ddc6:	d50f      	bpl.n	1dde8 <_svfiprintf_r+0x34>
   1ddc8:	690b      	ldr	r3, [r1, #16]
   1ddca:	b96b      	cbnz	r3, 1dde8 <_svfiprintf_r+0x34>
   1ddcc:	2140      	movs	r1, #64	; 0x40
   1ddce:	f7fb fd0b 	bl	197e8 <_malloc_r>
   1ddd2:	6028      	str	r0, [r5, #0]
   1ddd4:	6128      	str	r0, [r5, #16]
   1ddd6:	b928      	cbnz	r0, 1dde4 <_svfiprintf_r+0x30>
   1ddd8:	230c      	movs	r3, #12
   1ddda:	f8c8 3000 	str.w	r3, [r8]
   1ddde:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dde2:	e0c4      	b.n	1df6e <_svfiprintf_r+0x1ba>
   1dde4:	2340      	movs	r3, #64	; 0x40
   1dde6:	616b      	str	r3, [r5, #20]
   1dde8:	2300      	movs	r3, #0
   1ddea:	9309      	str	r3, [sp, #36]	; 0x24
   1ddec:	2320      	movs	r3, #32
   1ddee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1ddf2:	2330      	movs	r3, #48	; 0x30
   1ddf4:	f04f 0b01 	mov.w	fp, #1
   1ddf8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1ddfc:	4637      	mov	r7, r6
   1ddfe:	463c      	mov	r4, r7
   1de00:	f814 3b01 	ldrb.w	r3, [r4], #1
   1de04:	2b00      	cmp	r3, #0
   1de06:	d13c      	bne.n	1de82 <_svfiprintf_r+0xce>
   1de08:	ebb7 0a06 	subs.w	sl, r7, r6
   1de0c:	d00b      	beq.n	1de26 <_svfiprintf_r+0x72>
   1de0e:	4653      	mov	r3, sl
   1de10:	4632      	mov	r2, r6
   1de12:	4629      	mov	r1, r5
   1de14:	4640      	mov	r0, r8
   1de16:	f7ff ff71 	bl	1dcfc <__ssputs_r>
   1de1a:	3001      	adds	r0, #1
   1de1c:	f000 80a2 	beq.w	1df64 <_svfiprintf_r+0x1b0>
   1de20:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1de22:	4453      	add	r3, sl
   1de24:	9309      	str	r3, [sp, #36]	; 0x24
   1de26:	783b      	ldrb	r3, [r7, #0]
   1de28:	2b00      	cmp	r3, #0
   1de2a:	f000 809b 	beq.w	1df64 <_svfiprintf_r+0x1b0>
   1de2e:	2300      	movs	r3, #0
   1de30:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1de34:	9304      	str	r3, [sp, #16]
   1de36:	9307      	str	r3, [sp, #28]
   1de38:	9205      	str	r2, [sp, #20]
   1de3a:	9306      	str	r3, [sp, #24]
   1de3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1de40:	931a      	str	r3, [sp, #104]	; 0x68
   1de42:	2205      	movs	r2, #5
   1de44:	7821      	ldrb	r1, [r4, #0]
   1de46:	4850      	ldr	r0, [pc, #320]	; (1df88 <_svfiprintf_r+0x1d4>)
   1de48:	f7fb f992 	bl	19170 <memchr>
   1de4c:	1c67      	adds	r7, r4, #1
   1de4e:	9b04      	ldr	r3, [sp, #16]
   1de50:	b9d8      	cbnz	r0, 1de8a <_svfiprintf_r+0xd6>
   1de52:	06d9      	lsls	r1, r3, #27
   1de54:	bf44      	itt	mi
   1de56:	2220      	movmi	r2, #32
   1de58:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1de5c:	071a      	lsls	r2, r3, #28
   1de5e:	bf44      	itt	mi
   1de60:	222b      	movmi	r2, #43	; 0x2b
   1de62:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1de66:	7822      	ldrb	r2, [r4, #0]
   1de68:	2a2a      	cmp	r2, #42	; 0x2a
   1de6a:	d016      	beq.n	1de9a <_svfiprintf_r+0xe6>
   1de6c:	2100      	movs	r1, #0
   1de6e:	200a      	movs	r0, #10
   1de70:	9a07      	ldr	r2, [sp, #28]
   1de72:	4627      	mov	r7, r4
   1de74:	783b      	ldrb	r3, [r7, #0]
   1de76:	3401      	adds	r4, #1
   1de78:	3b30      	subs	r3, #48	; 0x30
   1de7a:	2b09      	cmp	r3, #9
   1de7c:	d950      	bls.n	1df20 <_svfiprintf_r+0x16c>
   1de7e:	b1c9      	cbz	r1, 1deb4 <_svfiprintf_r+0x100>
   1de80:	e011      	b.n	1dea6 <_svfiprintf_r+0xf2>
   1de82:	2b25      	cmp	r3, #37	; 0x25
   1de84:	d0c0      	beq.n	1de08 <_svfiprintf_r+0x54>
   1de86:	4627      	mov	r7, r4
   1de88:	e7b9      	b.n	1ddfe <_svfiprintf_r+0x4a>
   1de8a:	4a3f      	ldr	r2, [pc, #252]	; (1df88 <_svfiprintf_r+0x1d4>)
   1de8c:	463c      	mov	r4, r7
   1de8e:	1a80      	subs	r0, r0, r2
   1de90:	fa0b f000 	lsl.w	r0, fp, r0
   1de94:	4318      	orrs	r0, r3
   1de96:	9004      	str	r0, [sp, #16]
   1de98:	e7d3      	b.n	1de42 <_svfiprintf_r+0x8e>
   1de9a:	9a03      	ldr	r2, [sp, #12]
   1de9c:	1d11      	adds	r1, r2, #4
   1de9e:	6812      	ldr	r2, [r2, #0]
   1dea0:	9103      	str	r1, [sp, #12]
   1dea2:	2a00      	cmp	r2, #0
   1dea4:	db01      	blt.n	1deaa <_svfiprintf_r+0xf6>
   1dea6:	9207      	str	r2, [sp, #28]
   1dea8:	e004      	b.n	1deb4 <_svfiprintf_r+0x100>
   1deaa:	4252      	negs	r2, r2
   1deac:	f043 0302 	orr.w	r3, r3, #2
   1deb0:	9207      	str	r2, [sp, #28]
   1deb2:	9304      	str	r3, [sp, #16]
   1deb4:	783b      	ldrb	r3, [r7, #0]
   1deb6:	2b2e      	cmp	r3, #46	; 0x2e
   1deb8:	d10d      	bne.n	1ded6 <_svfiprintf_r+0x122>
   1deba:	787b      	ldrb	r3, [r7, #1]
   1debc:	1c79      	adds	r1, r7, #1
   1debe:	2b2a      	cmp	r3, #42	; 0x2a
   1dec0:	d132      	bne.n	1df28 <_svfiprintf_r+0x174>
   1dec2:	9b03      	ldr	r3, [sp, #12]
   1dec4:	3702      	adds	r7, #2
   1dec6:	1d1a      	adds	r2, r3, #4
   1dec8:	681b      	ldr	r3, [r3, #0]
   1deca:	9203      	str	r2, [sp, #12]
   1decc:	2b00      	cmp	r3, #0
   1dece:	bfb8      	it	lt
   1ded0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1ded4:	9305      	str	r3, [sp, #20]
   1ded6:	4c2d      	ldr	r4, [pc, #180]	; (1df8c <_svfiprintf_r+0x1d8>)
   1ded8:	2203      	movs	r2, #3
   1deda:	7839      	ldrb	r1, [r7, #0]
   1dedc:	4620      	mov	r0, r4
   1dede:	f7fb f947 	bl	19170 <memchr>
   1dee2:	b138      	cbz	r0, 1def4 <_svfiprintf_r+0x140>
   1dee4:	2340      	movs	r3, #64	; 0x40
   1dee6:	1b00      	subs	r0, r0, r4
   1dee8:	fa03 f000 	lsl.w	r0, r3, r0
   1deec:	9b04      	ldr	r3, [sp, #16]
   1deee:	3701      	adds	r7, #1
   1def0:	4303      	orrs	r3, r0
   1def2:	9304      	str	r3, [sp, #16]
   1def4:	7839      	ldrb	r1, [r7, #0]
   1def6:	2206      	movs	r2, #6
   1def8:	4825      	ldr	r0, [pc, #148]	; (1df90 <_svfiprintf_r+0x1dc>)
   1defa:	1c7e      	adds	r6, r7, #1
   1defc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1df00:	f7fb f936 	bl	19170 <memchr>
   1df04:	2800      	cmp	r0, #0
   1df06:	d035      	beq.n	1df74 <_svfiprintf_r+0x1c0>
   1df08:	4b22      	ldr	r3, [pc, #136]	; (1df94 <_svfiprintf_r+0x1e0>)
   1df0a:	b9fb      	cbnz	r3, 1df4c <_svfiprintf_r+0x198>
   1df0c:	9b03      	ldr	r3, [sp, #12]
   1df0e:	3307      	adds	r3, #7
   1df10:	f023 0307 	bic.w	r3, r3, #7
   1df14:	3308      	adds	r3, #8
   1df16:	9303      	str	r3, [sp, #12]
   1df18:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1df1a:	444b      	add	r3, r9
   1df1c:	9309      	str	r3, [sp, #36]	; 0x24
   1df1e:	e76d      	b.n	1ddfc <_svfiprintf_r+0x48>
   1df20:	fb00 3202 	mla	r2, r0, r2, r3
   1df24:	2101      	movs	r1, #1
   1df26:	e7a4      	b.n	1de72 <_svfiprintf_r+0xbe>
   1df28:	2300      	movs	r3, #0
   1df2a:	240a      	movs	r4, #10
   1df2c:	4618      	mov	r0, r3
   1df2e:	9305      	str	r3, [sp, #20]
   1df30:	460f      	mov	r7, r1
   1df32:	783a      	ldrb	r2, [r7, #0]
   1df34:	3101      	adds	r1, #1
   1df36:	3a30      	subs	r2, #48	; 0x30
   1df38:	2a09      	cmp	r2, #9
   1df3a:	d903      	bls.n	1df44 <_svfiprintf_r+0x190>
   1df3c:	2b00      	cmp	r3, #0
   1df3e:	d0ca      	beq.n	1ded6 <_svfiprintf_r+0x122>
   1df40:	9005      	str	r0, [sp, #20]
   1df42:	e7c8      	b.n	1ded6 <_svfiprintf_r+0x122>
   1df44:	fb04 2000 	mla	r0, r4, r0, r2
   1df48:	2301      	movs	r3, #1
   1df4a:	e7f1      	b.n	1df30 <_svfiprintf_r+0x17c>
   1df4c:	ab03      	add	r3, sp, #12
   1df4e:	9300      	str	r3, [sp, #0]
   1df50:	462a      	mov	r2, r5
   1df52:	4b11      	ldr	r3, [pc, #68]	; (1df98 <_svfiprintf_r+0x1e4>)
   1df54:	a904      	add	r1, sp, #16
   1df56:	4640      	mov	r0, r8
   1df58:	f7fb fd36 	bl	199c8 <_printf_float>
   1df5c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1df60:	4681      	mov	r9, r0
   1df62:	d1d9      	bne.n	1df18 <_svfiprintf_r+0x164>
   1df64:	89ab      	ldrh	r3, [r5, #12]
   1df66:	065b      	lsls	r3, r3, #25
   1df68:	f53f af39 	bmi.w	1ddde <_svfiprintf_r+0x2a>
   1df6c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1df6e:	b01d      	add	sp, #116	; 0x74
   1df70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df74:	ab03      	add	r3, sp, #12
   1df76:	9300      	str	r3, [sp, #0]
   1df78:	462a      	mov	r2, r5
   1df7a:	4b07      	ldr	r3, [pc, #28]	; (1df98 <_svfiprintf_r+0x1e4>)
   1df7c:	a904      	add	r1, sp, #16
   1df7e:	4640      	mov	r0, r8
   1df80:	f7fb ffd2 	bl	19f28 <_printf_i>
   1df84:	e7ea      	b.n	1df5c <_svfiprintf_r+0x1a8>
   1df86:	bf00      	nop
   1df88:	00020a14 	.word	0x00020a14
   1df8c:	00020a1a 	.word	0x00020a1a
   1df90:	00020a1e 	.word	0x00020a1e
   1df94:	000199c9 	.word	0x000199c9
   1df98:	0001dcfd 	.word	0x0001dcfd

0001df9c <_sungetc_r>:
_sungetc_r():
   1df9c:	b538      	push	{r3, r4, r5, lr}
   1df9e:	1c4b      	adds	r3, r1, #1
   1dfa0:	4614      	mov	r4, r2
   1dfa2:	d103      	bne.n	1dfac <_sungetc_r+0x10>
   1dfa4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1dfa8:	4628      	mov	r0, r5
   1dfaa:	bd38      	pop	{r3, r4, r5, pc}
   1dfac:	8993      	ldrh	r3, [r2, #12]
   1dfae:	b2cd      	uxtb	r5, r1
   1dfb0:	f023 0320 	bic.w	r3, r3, #32
   1dfb4:	8193      	strh	r3, [r2, #12]
   1dfb6:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1dfb8:	6852      	ldr	r2, [r2, #4]
   1dfba:	b18b      	cbz	r3, 1dfe0 <_sungetc_r+0x44>
   1dfbc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1dfbe:	429a      	cmp	r2, r3
   1dfc0:	da08      	bge.n	1dfd4 <_sungetc_r+0x38>
   1dfc2:	6823      	ldr	r3, [r4, #0]
   1dfc4:	1e5a      	subs	r2, r3, #1
   1dfc6:	6022      	str	r2, [r4, #0]
   1dfc8:	f803 5c01 	strb.w	r5, [r3, #-1]
   1dfcc:	6863      	ldr	r3, [r4, #4]
   1dfce:	3301      	adds	r3, #1
   1dfd0:	6063      	str	r3, [r4, #4]
   1dfd2:	e7e9      	b.n	1dfa8 <_sungetc_r+0xc>
   1dfd4:	4621      	mov	r1, r4
   1dfd6:	f000 fe89 	bl	1ecec <__submore>
   1dfda:	2800      	cmp	r0, #0
   1dfdc:	d0f1      	beq.n	1dfc2 <_sungetc_r+0x26>
   1dfde:	e7e1      	b.n	1dfa4 <_sungetc_r+0x8>
   1dfe0:	6921      	ldr	r1, [r4, #16]
   1dfe2:	6823      	ldr	r3, [r4, #0]
   1dfe4:	b151      	cbz	r1, 1dffc <_sungetc_r+0x60>
   1dfe6:	4299      	cmp	r1, r3
   1dfe8:	d208      	bcs.n	1dffc <_sungetc_r+0x60>
   1dfea:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1dfee:	428d      	cmp	r5, r1
   1dff0:	d104      	bne.n	1dffc <_sungetc_r+0x60>
   1dff2:	3b01      	subs	r3, #1
   1dff4:	3201      	adds	r2, #1
   1dff6:	6023      	str	r3, [r4, #0]
   1dff8:	6062      	str	r2, [r4, #4]
   1dffa:	e7d5      	b.n	1dfa8 <_sungetc_r+0xc>
   1dffc:	63e3      	str	r3, [r4, #60]	; 0x3c
   1dffe:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1e002:	6363      	str	r3, [r4, #52]	; 0x34
   1e004:	2303      	movs	r3, #3
   1e006:	63a3      	str	r3, [r4, #56]	; 0x38
   1e008:	4623      	mov	r3, r4
   1e00a:	6422      	str	r2, [r4, #64]	; 0x40
   1e00c:	f803 5f46 	strb.w	r5, [r3, #70]!
   1e010:	6023      	str	r3, [r4, #0]
   1e012:	2301      	movs	r3, #1
   1e014:	e7dc      	b.n	1dfd0 <_sungetc_r+0x34>

0001e016 <__ssrefill_r>:
__ssrefill_r():
   1e016:	b510      	push	{r4, lr}
   1e018:	460c      	mov	r4, r1
   1e01a:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1e01c:	b169      	cbz	r1, 1e03a <__ssrefill_r+0x24>
   1e01e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1e022:	4299      	cmp	r1, r3
   1e024:	d001      	beq.n	1e02a <__ssrefill_r+0x14>
   1e026:	f7fb fb61 	bl	196ec <_free_r>
   1e02a:	2000      	movs	r0, #0
   1e02c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1e02e:	6360      	str	r0, [r4, #52]	; 0x34
   1e030:	6063      	str	r3, [r4, #4]
   1e032:	b113      	cbz	r3, 1e03a <__ssrefill_r+0x24>
   1e034:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1e036:	6023      	str	r3, [r4, #0]
   1e038:	bd10      	pop	{r4, pc}
   1e03a:	6923      	ldr	r3, [r4, #16]
   1e03c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e040:	6023      	str	r3, [r4, #0]
   1e042:	2300      	movs	r3, #0
   1e044:	6063      	str	r3, [r4, #4]
   1e046:	89a3      	ldrh	r3, [r4, #12]
   1e048:	f043 0320 	orr.w	r3, r3, #32
   1e04c:	81a3      	strh	r3, [r4, #12]
   1e04e:	bd10      	pop	{r4, pc}

0001e050 <__ssvfiscanf_r>:
__ssvfiscanf_r():
   1e050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e054:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1e058:	9301      	str	r3, [sp, #4]
   1e05a:	2300      	movs	r3, #0
   1e05c:	4606      	mov	r6, r0
   1e05e:	460c      	mov	r4, r1
   1e060:	4692      	mov	sl, r2
   1e062:	270a      	movs	r7, #10
   1e064:	9346      	str	r3, [sp, #280]	; 0x118
   1e066:	9347      	str	r3, [sp, #284]	; 0x11c
   1e068:	4b9f      	ldr	r3, [pc, #636]	; (1e2e8 <__ssvfiscanf_r+0x298>)
   1e06a:	f10d 080c 	add.w	r8, sp, #12
   1e06e:	93a2      	str	r3, [sp, #648]	; 0x288
   1e070:	4b9e      	ldr	r3, [pc, #632]	; (1e2ec <__ssvfiscanf_r+0x29c>)
   1e072:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1e2f0 <__ssvfiscanf_r+0x2a0>
   1e076:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1e07a:	93a3      	str	r3, [sp, #652]	; 0x28c
   1e07c:	f89a 3000 	ldrb.w	r3, [sl]
   1e080:	2b00      	cmp	r3, #0
   1e082:	f000 812f 	beq.w	1e2e4 <__ssvfiscanf_r+0x294>
   1e086:	f7fa ffdf 	bl	19048 <__locale_ctype_ptr>
   1e08a:	f89a b000 	ldrb.w	fp, [sl]
   1e08e:	4458      	add	r0, fp
   1e090:	7843      	ldrb	r3, [r0, #1]
   1e092:	f013 0308 	ands.w	r3, r3, #8
   1e096:	d143      	bne.n	1e120 <__ssvfiscanf_r+0xd0>
   1e098:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1e09c:	f10a 0501 	add.w	r5, sl, #1
   1e0a0:	f040 8099 	bne.w	1e1d6 <__ssvfiscanf_r+0x186>
   1e0a4:	9345      	str	r3, [sp, #276]	; 0x114
   1e0a6:	9343      	str	r3, [sp, #268]	; 0x10c
   1e0a8:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1e0ac:	2b2a      	cmp	r3, #42	; 0x2a
   1e0ae:	d103      	bne.n	1e0b8 <__ssvfiscanf_r+0x68>
   1e0b0:	2310      	movs	r3, #16
   1e0b2:	f10a 0502 	add.w	r5, sl, #2
   1e0b6:	9343      	str	r3, [sp, #268]	; 0x10c
   1e0b8:	7829      	ldrb	r1, [r5, #0]
   1e0ba:	46aa      	mov	sl, r5
   1e0bc:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1e0c0:	2a09      	cmp	r2, #9
   1e0c2:	f105 0501 	add.w	r5, r5, #1
   1e0c6:	d941      	bls.n	1e14c <__ssvfiscanf_r+0xfc>
   1e0c8:	2203      	movs	r2, #3
   1e0ca:	4889      	ldr	r0, [pc, #548]	; (1e2f0 <__ssvfiscanf_r+0x2a0>)
   1e0cc:	f7fb f850 	bl	19170 <memchr>
   1e0d0:	b138      	cbz	r0, 1e0e2 <__ssvfiscanf_r+0x92>
   1e0d2:	eba0 0309 	sub.w	r3, r0, r9
   1e0d6:	2001      	movs	r0, #1
   1e0d8:	46aa      	mov	sl, r5
   1e0da:	4098      	lsls	r0, r3
   1e0dc:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e0de:	4318      	orrs	r0, r3
   1e0e0:	9043      	str	r0, [sp, #268]	; 0x10c
   1e0e2:	f89a 3000 	ldrb.w	r3, [sl]
   1e0e6:	f10a 0501 	add.w	r5, sl, #1
   1e0ea:	2b67      	cmp	r3, #103	; 0x67
   1e0ec:	d84a      	bhi.n	1e184 <__ssvfiscanf_r+0x134>
   1e0ee:	2b65      	cmp	r3, #101	; 0x65
   1e0f0:	f080 80b7 	bcs.w	1e262 <__ssvfiscanf_r+0x212>
   1e0f4:	2b47      	cmp	r3, #71	; 0x47
   1e0f6:	d82f      	bhi.n	1e158 <__ssvfiscanf_r+0x108>
   1e0f8:	2b45      	cmp	r3, #69	; 0x45
   1e0fa:	f080 80b2 	bcs.w	1e262 <__ssvfiscanf_r+0x212>
   1e0fe:	2b00      	cmp	r3, #0
   1e100:	f000 8082 	beq.w	1e208 <__ssvfiscanf_r+0x1b8>
   1e104:	2b25      	cmp	r3, #37	; 0x25
   1e106:	d066      	beq.n	1e1d6 <__ssvfiscanf_r+0x186>
   1e108:	2303      	movs	r3, #3
   1e10a:	9744      	str	r7, [sp, #272]	; 0x110
   1e10c:	9349      	str	r3, [sp, #292]	; 0x124
   1e10e:	e045      	b.n	1e19c <__ssvfiscanf_r+0x14c>
   1e110:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1e112:	3301      	adds	r3, #1
   1e114:	3101      	adds	r1, #1
   1e116:	9147      	str	r1, [sp, #284]	; 0x11c
   1e118:	6861      	ldr	r1, [r4, #4]
   1e11a:	6023      	str	r3, [r4, #0]
   1e11c:	3901      	subs	r1, #1
   1e11e:	6061      	str	r1, [r4, #4]
   1e120:	6863      	ldr	r3, [r4, #4]
   1e122:	2b00      	cmp	r3, #0
   1e124:	dd0b      	ble.n	1e13e <__ssvfiscanf_r+0xee>
   1e126:	f7fa ff8f 	bl	19048 <__locale_ctype_ptr>
   1e12a:	6823      	ldr	r3, [r4, #0]
   1e12c:	7819      	ldrb	r1, [r3, #0]
   1e12e:	4408      	add	r0, r1
   1e130:	7841      	ldrb	r1, [r0, #1]
   1e132:	070d      	lsls	r5, r1, #28
   1e134:	d4ec      	bmi.n	1e110 <__ssvfiscanf_r+0xc0>
   1e136:	f10a 0501 	add.w	r5, sl, #1
   1e13a:	46aa      	mov	sl, r5
   1e13c:	e79e      	b.n	1e07c <__ssvfiscanf_r+0x2c>
   1e13e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e140:	4621      	mov	r1, r4
   1e142:	4630      	mov	r0, r6
   1e144:	4798      	blx	r3
   1e146:	2800      	cmp	r0, #0
   1e148:	d0ed      	beq.n	1e126 <__ssvfiscanf_r+0xd6>
   1e14a:	e7f4      	b.n	1e136 <__ssvfiscanf_r+0xe6>
   1e14c:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1e14e:	fb07 1303 	mla	r3, r7, r3, r1
   1e152:	3b30      	subs	r3, #48	; 0x30
   1e154:	9345      	str	r3, [sp, #276]	; 0x114
   1e156:	e7af      	b.n	1e0b8 <__ssvfiscanf_r+0x68>
   1e158:	2b5b      	cmp	r3, #91	; 0x5b
   1e15a:	d061      	beq.n	1e220 <__ssvfiscanf_r+0x1d0>
   1e15c:	d80c      	bhi.n	1e178 <__ssvfiscanf_r+0x128>
   1e15e:	2b58      	cmp	r3, #88	; 0x58
   1e160:	d1d2      	bne.n	1e108 <__ssvfiscanf_r+0xb8>
   1e162:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e164:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1e168:	9243      	str	r2, [sp, #268]	; 0x10c
   1e16a:	2210      	movs	r2, #16
   1e16c:	9244      	str	r2, [sp, #272]	; 0x110
   1e16e:	2b6f      	cmp	r3, #111	; 0x6f
   1e170:	bfb4      	ite	lt
   1e172:	2303      	movlt	r3, #3
   1e174:	2304      	movge	r3, #4
   1e176:	e010      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e178:	2b63      	cmp	r3, #99	; 0x63
   1e17a:	d05c      	beq.n	1e236 <__ssvfiscanf_r+0x1e6>
   1e17c:	2b64      	cmp	r3, #100	; 0x64
   1e17e:	d1c3      	bne.n	1e108 <__ssvfiscanf_r+0xb8>
   1e180:	9744      	str	r7, [sp, #272]	; 0x110
   1e182:	e7f4      	b.n	1e16e <__ssvfiscanf_r+0x11e>
   1e184:	2b70      	cmp	r3, #112	; 0x70
   1e186:	d042      	beq.n	1e20e <__ssvfiscanf_r+0x1be>
   1e188:	d81d      	bhi.n	1e1c6 <__ssvfiscanf_r+0x176>
   1e18a:	2b6e      	cmp	r3, #110	; 0x6e
   1e18c:	d059      	beq.n	1e242 <__ssvfiscanf_r+0x1f2>
   1e18e:	d843      	bhi.n	1e218 <__ssvfiscanf_r+0x1c8>
   1e190:	2b69      	cmp	r3, #105	; 0x69
   1e192:	d1b9      	bne.n	1e108 <__ssvfiscanf_r+0xb8>
   1e194:	2300      	movs	r3, #0
   1e196:	9344      	str	r3, [sp, #272]	; 0x110
   1e198:	2303      	movs	r3, #3
   1e19a:	9349      	str	r3, [sp, #292]	; 0x124
   1e19c:	6863      	ldr	r3, [r4, #4]
   1e19e:	2b00      	cmp	r3, #0
   1e1a0:	dd61      	ble.n	1e266 <__ssvfiscanf_r+0x216>
   1e1a2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e1a4:	0659      	lsls	r1, r3, #25
   1e1a6:	d56f      	bpl.n	1e288 <__ssvfiscanf_r+0x238>
   1e1a8:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1e1aa:	2b02      	cmp	r3, #2
   1e1ac:	dc7c      	bgt.n	1e2a8 <__ssvfiscanf_r+0x258>
   1e1ae:	ab01      	add	r3, sp, #4
   1e1b0:	4622      	mov	r2, r4
   1e1b2:	a943      	add	r1, sp, #268	; 0x10c
   1e1b4:	4630      	mov	r0, r6
   1e1b6:	f000 fb59 	bl	1e86c <_scanf_chars>
   1e1ba:	2801      	cmp	r0, #1
   1e1bc:	f000 8092 	beq.w	1e2e4 <__ssvfiscanf_r+0x294>
   1e1c0:	2802      	cmp	r0, #2
   1e1c2:	d1ba      	bne.n	1e13a <__ssvfiscanf_r+0xea>
   1e1c4:	e01d      	b.n	1e202 <__ssvfiscanf_r+0x1b2>
   1e1c6:	2b75      	cmp	r3, #117	; 0x75
   1e1c8:	d0da      	beq.n	1e180 <__ssvfiscanf_r+0x130>
   1e1ca:	2b78      	cmp	r3, #120	; 0x78
   1e1cc:	d0c9      	beq.n	1e162 <__ssvfiscanf_r+0x112>
   1e1ce:	2b73      	cmp	r3, #115	; 0x73
   1e1d0:	d19a      	bne.n	1e108 <__ssvfiscanf_r+0xb8>
   1e1d2:	2302      	movs	r3, #2
   1e1d4:	e7e1      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e1d6:	6863      	ldr	r3, [r4, #4]
   1e1d8:	2b00      	cmp	r3, #0
   1e1da:	dd0c      	ble.n	1e1f6 <__ssvfiscanf_r+0x1a6>
   1e1dc:	6823      	ldr	r3, [r4, #0]
   1e1de:	781a      	ldrb	r2, [r3, #0]
   1e1e0:	4593      	cmp	fp, r2
   1e1e2:	d17f      	bne.n	1e2e4 <__ssvfiscanf_r+0x294>
   1e1e4:	3301      	adds	r3, #1
   1e1e6:	6862      	ldr	r2, [r4, #4]
   1e1e8:	6023      	str	r3, [r4, #0]
   1e1ea:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e1ec:	3a01      	subs	r2, #1
   1e1ee:	3301      	adds	r3, #1
   1e1f0:	6062      	str	r2, [r4, #4]
   1e1f2:	9347      	str	r3, [sp, #284]	; 0x11c
   1e1f4:	e7a1      	b.n	1e13a <__ssvfiscanf_r+0xea>
   1e1f6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e1f8:	4621      	mov	r1, r4
   1e1fa:	4630      	mov	r0, r6
   1e1fc:	4798      	blx	r3
   1e1fe:	2800      	cmp	r0, #0
   1e200:	d0ec      	beq.n	1e1dc <__ssvfiscanf_r+0x18c>
   1e202:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e204:	2800      	cmp	r0, #0
   1e206:	d163      	bne.n	1e2d0 <__ssvfiscanf_r+0x280>
   1e208:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e20c:	e066      	b.n	1e2dc <__ssvfiscanf_r+0x28c>
   1e20e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e210:	f042 0220 	orr.w	r2, r2, #32
   1e214:	9243      	str	r2, [sp, #268]	; 0x10c
   1e216:	e7a4      	b.n	1e162 <__ssvfiscanf_r+0x112>
   1e218:	2308      	movs	r3, #8
   1e21a:	9344      	str	r3, [sp, #272]	; 0x110
   1e21c:	2304      	movs	r3, #4
   1e21e:	e7bc      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e220:	4629      	mov	r1, r5
   1e222:	4640      	mov	r0, r8
   1e224:	f000 fc8e 	bl	1eb44 <__sccl>
   1e228:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e22a:	4605      	mov	r5, r0
   1e22c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e230:	9343      	str	r3, [sp, #268]	; 0x10c
   1e232:	2301      	movs	r3, #1
   1e234:	e7b1      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e236:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e238:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e23c:	9343      	str	r3, [sp, #268]	; 0x10c
   1e23e:	2300      	movs	r3, #0
   1e240:	e7ab      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e242:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e244:	06d0      	lsls	r0, r2, #27
   1e246:	f53f af78 	bmi.w	1e13a <__ssvfiscanf_r+0xea>
   1e24a:	f012 0f01 	tst.w	r2, #1
   1e24e:	9a01      	ldr	r2, [sp, #4]
   1e250:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e252:	f102 0104 	add.w	r1, r2, #4
   1e256:	9101      	str	r1, [sp, #4]
   1e258:	6812      	ldr	r2, [r2, #0]
   1e25a:	bf14      	ite	ne
   1e25c:	8013      	strhne	r3, [r2, #0]
   1e25e:	6013      	streq	r3, [r2, #0]
   1e260:	e76b      	b.n	1e13a <__ssvfiscanf_r+0xea>
   1e262:	2305      	movs	r3, #5
   1e264:	e799      	b.n	1e19a <__ssvfiscanf_r+0x14a>
   1e266:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e268:	4621      	mov	r1, r4
   1e26a:	4630      	mov	r0, r6
   1e26c:	4798      	blx	r3
   1e26e:	2800      	cmp	r0, #0
   1e270:	d097      	beq.n	1e1a2 <__ssvfiscanf_r+0x152>
   1e272:	e7c6      	b.n	1e202 <__ssvfiscanf_r+0x1b2>
   1e274:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1e276:	3201      	adds	r2, #1
   1e278:	9247      	str	r2, [sp, #284]	; 0x11c
   1e27a:	6862      	ldr	r2, [r4, #4]
   1e27c:	3a01      	subs	r2, #1
   1e27e:	2a00      	cmp	r2, #0
   1e280:	6062      	str	r2, [r4, #4]
   1e282:	dd0a      	ble.n	1e29a <__ssvfiscanf_r+0x24a>
   1e284:	3301      	adds	r3, #1
   1e286:	6023      	str	r3, [r4, #0]
   1e288:	f7fa fede 	bl	19048 <__locale_ctype_ptr>
   1e28c:	6823      	ldr	r3, [r4, #0]
   1e28e:	781a      	ldrb	r2, [r3, #0]
   1e290:	4410      	add	r0, r2
   1e292:	7842      	ldrb	r2, [r0, #1]
   1e294:	0712      	lsls	r2, r2, #28
   1e296:	d4ed      	bmi.n	1e274 <__ssvfiscanf_r+0x224>
   1e298:	e786      	b.n	1e1a8 <__ssvfiscanf_r+0x158>
   1e29a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e29c:	4621      	mov	r1, r4
   1e29e:	4630      	mov	r0, r6
   1e2a0:	4798      	blx	r3
   1e2a2:	2800      	cmp	r0, #0
   1e2a4:	d0f0      	beq.n	1e288 <__ssvfiscanf_r+0x238>
   1e2a6:	e7ac      	b.n	1e202 <__ssvfiscanf_r+0x1b2>
   1e2a8:	2b04      	cmp	r3, #4
   1e2aa:	dc06      	bgt.n	1e2ba <__ssvfiscanf_r+0x26a>
   1e2ac:	ab01      	add	r3, sp, #4
   1e2ae:	4622      	mov	r2, r4
   1e2b0:	a943      	add	r1, sp, #268	; 0x10c
   1e2b2:	4630      	mov	r0, r6
   1e2b4:	f000 fb3e 	bl	1e934 <_scanf_i>
   1e2b8:	e77f      	b.n	1e1ba <__ssvfiscanf_r+0x16a>
   1e2ba:	4b0e      	ldr	r3, [pc, #56]	; (1e2f4 <__ssvfiscanf_r+0x2a4>)
   1e2bc:	2b00      	cmp	r3, #0
   1e2be:	f43f af3c 	beq.w	1e13a <__ssvfiscanf_r+0xea>
   1e2c2:	ab01      	add	r3, sp, #4
   1e2c4:	4622      	mov	r2, r4
   1e2c6:	a943      	add	r1, sp, #268	; 0x10c
   1e2c8:	4630      	mov	r0, r6
   1e2ca:	f7fb ff4d 	bl	1a168 <_scanf_float>
   1e2ce:	e774      	b.n	1e1ba <__ssvfiscanf_r+0x16a>
   1e2d0:	89a3      	ldrh	r3, [r4, #12]
   1e2d2:	f013 0f40 	tst.w	r3, #64	; 0x40
   1e2d6:	bf18      	it	ne
   1e2d8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1e2dc:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1e2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2e4:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e2e6:	e7f9      	b.n	1e2dc <__ssvfiscanf_r+0x28c>
   1e2e8:	0001df9d 	.word	0x0001df9d
   1e2ec:	0001e017 	.word	0x0001e017
   1e2f0:	00020a1a 	.word	0x00020a1a
   1e2f4:	0001a169 	.word	0x0001a169

0001e2f8 <__sfputc_r>:
__sfputc_r():
   1e2f8:	6893      	ldr	r3, [r2, #8]
   1e2fa:	b410      	push	{r4}
   1e2fc:	3b01      	subs	r3, #1
   1e2fe:	2b00      	cmp	r3, #0
   1e300:	6093      	str	r3, [r2, #8]
   1e302:	da08      	bge.n	1e316 <__sfputc_r+0x1e>
   1e304:	6994      	ldr	r4, [r2, #24]
   1e306:	42a3      	cmp	r3, r4
   1e308:	db02      	blt.n	1e310 <__sfputc_r+0x18>
   1e30a:	b2cb      	uxtb	r3, r1
   1e30c:	2b0a      	cmp	r3, #10
   1e30e:	d102      	bne.n	1e316 <__sfputc_r+0x1e>
   1e310:	bc10      	pop	{r4}
   1e312:	f7fd bdc1 	b.w	1be98 <__swbuf_r>
   1e316:	6813      	ldr	r3, [r2, #0]
   1e318:	1c58      	adds	r0, r3, #1
   1e31a:	6010      	str	r0, [r2, #0]
   1e31c:	7019      	strb	r1, [r3, #0]
   1e31e:	b2c8      	uxtb	r0, r1
   1e320:	bc10      	pop	{r4}
   1e322:	4770      	bx	lr

0001e324 <__sfputs_r>:
__sfputs_r():
   1e324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e326:	4606      	mov	r6, r0
   1e328:	460f      	mov	r7, r1
   1e32a:	4614      	mov	r4, r2
   1e32c:	18d5      	adds	r5, r2, r3
   1e32e:	42ac      	cmp	r4, r5
   1e330:	d101      	bne.n	1e336 <__sfputs_r+0x12>
   1e332:	2000      	movs	r0, #0
   1e334:	e007      	b.n	1e346 <__sfputs_r+0x22>
   1e336:	463a      	mov	r2, r7
   1e338:	f814 1b01 	ldrb.w	r1, [r4], #1
   1e33c:	4630      	mov	r0, r6
   1e33e:	f7ff ffdb 	bl	1e2f8 <__sfputc_r>
   1e342:	1c43      	adds	r3, r0, #1
   1e344:	d1f3      	bne.n	1e32e <__sfputs_r+0xa>
   1e346:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001e348 <_vfiprintf_r>:
_vfprintf_r():
   1e348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e34c:	b09d      	sub	sp, #116	; 0x74
   1e34e:	460c      	mov	r4, r1
   1e350:	4617      	mov	r7, r2
   1e352:	9303      	str	r3, [sp, #12]
   1e354:	4606      	mov	r6, r0
   1e356:	b118      	cbz	r0, 1e360 <_vfiprintf_r+0x18>
   1e358:	6983      	ldr	r3, [r0, #24]
   1e35a:	b90b      	cbnz	r3, 1e360 <_vfiprintf_r+0x18>
   1e35c:	f7fa fda6 	bl	18eac <__sinit>
   1e360:	4b7c      	ldr	r3, [pc, #496]	; (1e554 <_vfiprintf_r+0x20c>)
   1e362:	429c      	cmp	r4, r3
   1e364:	d157      	bne.n	1e416 <_vfiprintf_r+0xce>
   1e366:	6874      	ldr	r4, [r6, #4]
   1e368:	89a3      	ldrh	r3, [r4, #12]
   1e36a:	0718      	lsls	r0, r3, #28
   1e36c:	d55d      	bpl.n	1e42a <_vfiprintf_r+0xe2>
   1e36e:	6923      	ldr	r3, [r4, #16]
   1e370:	2b00      	cmp	r3, #0
   1e372:	d05a      	beq.n	1e42a <_vfiprintf_r+0xe2>
   1e374:	2300      	movs	r3, #0
   1e376:	9309      	str	r3, [sp, #36]	; 0x24
   1e378:	2320      	movs	r3, #32
   1e37a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1e37e:	2330      	movs	r3, #48	; 0x30
   1e380:	f04f 0b01 	mov.w	fp, #1
   1e384:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1e388:	46b8      	mov	r8, r7
   1e38a:	4645      	mov	r5, r8
   1e38c:	f815 3b01 	ldrb.w	r3, [r5], #1
   1e390:	2b00      	cmp	r3, #0
   1e392:	d155      	bne.n	1e440 <_vfiprintf_r+0xf8>
   1e394:	ebb8 0a07 	subs.w	sl, r8, r7
   1e398:	d00b      	beq.n	1e3b2 <_vfiprintf_r+0x6a>
   1e39a:	4653      	mov	r3, sl
   1e39c:	463a      	mov	r2, r7
   1e39e:	4621      	mov	r1, r4
   1e3a0:	4630      	mov	r0, r6
   1e3a2:	f7ff ffbf 	bl	1e324 <__sfputs_r>
   1e3a6:	3001      	adds	r0, #1
   1e3a8:	f000 80c4 	beq.w	1e534 <_vfiprintf_r+0x1ec>
   1e3ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e3ae:	4453      	add	r3, sl
   1e3b0:	9309      	str	r3, [sp, #36]	; 0x24
   1e3b2:	f898 3000 	ldrb.w	r3, [r8]
   1e3b6:	2b00      	cmp	r3, #0
   1e3b8:	f000 80bc 	beq.w	1e534 <_vfiprintf_r+0x1ec>
   1e3bc:	2300      	movs	r3, #0
   1e3be:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1e3c2:	9304      	str	r3, [sp, #16]
   1e3c4:	9307      	str	r3, [sp, #28]
   1e3c6:	9205      	str	r2, [sp, #20]
   1e3c8:	9306      	str	r3, [sp, #24]
   1e3ca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1e3ce:	931a      	str	r3, [sp, #104]	; 0x68
   1e3d0:	2205      	movs	r2, #5
   1e3d2:	7829      	ldrb	r1, [r5, #0]
   1e3d4:	4860      	ldr	r0, [pc, #384]	; (1e558 <_vfiprintf_r+0x210>)
   1e3d6:	f7fa fecb 	bl	19170 <memchr>
   1e3da:	f105 0801 	add.w	r8, r5, #1
   1e3de:	9b04      	ldr	r3, [sp, #16]
   1e3e0:	2800      	cmp	r0, #0
   1e3e2:	d131      	bne.n	1e448 <_vfiprintf_r+0x100>
   1e3e4:	06d9      	lsls	r1, r3, #27
   1e3e6:	bf44      	itt	mi
   1e3e8:	2220      	movmi	r2, #32
   1e3ea:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e3ee:	071a      	lsls	r2, r3, #28
   1e3f0:	bf44      	itt	mi
   1e3f2:	222b      	movmi	r2, #43	; 0x2b
   1e3f4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e3f8:	782a      	ldrb	r2, [r5, #0]
   1e3fa:	2a2a      	cmp	r2, #42	; 0x2a
   1e3fc:	d02c      	beq.n	1e458 <_vfiprintf_r+0x110>
   1e3fe:	2100      	movs	r1, #0
   1e400:	200a      	movs	r0, #10
   1e402:	9a07      	ldr	r2, [sp, #28]
   1e404:	46a8      	mov	r8, r5
   1e406:	f898 3000 	ldrb.w	r3, [r8]
   1e40a:	3501      	adds	r5, #1
   1e40c:	3b30      	subs	r3, #48	; 0x30
   1e40e:	2b09      	cmp	r3, #9
   1e410:	d96d      	bls.n	1e4ee <_vfiprintf_r+0x1a6>
   1e412:	b371      	cbz	r1, 1e472 <_vfiprintf_r+0x12a>
   1e414:	e026      	b.n	1e464 <_vfiprintf_r+0x11c>
   1e416:	4b51      	ldr	r3, [pc, #324]	; (1e55c <_vfiprintf_r+0x214>)
   1e418:	429c      	cmp	r4, r3
   1e41a:	d101      	bne.n	1e420 <_vfiprintf_r+0xd8>
   1e41c:	68b4      	ldr	r4, [r6, #8]
   1e41e:	e7a3      	b.n	1e368 <_vfiprintf_r+0x20>
   1e420:	4b4f      	ldr	r3, [pc, #316]	; (1e560 <_vfiprintf_r+0x218>)
   1e422:	429c      	cmp	r4, r3
   1e424:	bf08      	it	eq
   1e426:	68f4      	ldreq	r4, [r6, #12]
   1e428:	e79e      	b.n	1e368 <_vfiprintf_r+0x20>
   1e42a:	4621      	mov	r1, r4
   1e42c:	4630      	mov	r0, r6
   1e42e:	f7fd fda5 	bl	1bf7c <__swsetup_r>
   1e432:	2800      	cmp	r0, #0
   1e434:	d09e      	beq.n	1e374 <_vfiprintf_r+0x2c>
   1e436:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e43a:	b01d      	add	sp, #116	; 0x74
   1e43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e440:	2b25      	cmp	r3, #37	; 0x25
   1e442:	d0a7      	beq.n	1e394 <_vfiprintf_r+0x4c>
   1e444:	46a8      	mov	r8, r5
   1e446:	e7a0      	b.n	1e38a <_vfiprintf_r+0x42>
   1e448:	4a43      	ldr	r2, [pc, #268]	; (1e558 <_vfiprintf_r+0x210>)
   1e44a:	4645      	mov	r5, r8
   1e44c:	1a80      	subs	r0, r0, r2
   1e44e:	fa0b f000 	lsl.w	r0, fp, r0
   1e452:	4318      	orrs	r0, r3
   1e454:	9004      	str	r0, [sp, #16]
   1e456:	e7bb      	b.n	1e3d0 <_vfiprintf_r+0x88>
   1e458:	9a03      	ldr	r2, [sp, #12]
   1e45a:	1d11      	adds	r1, r2, #4
   1e45c:	6812      	ldr	r2, [r2, #0]
   1e45e:	9103      	str	r1, [sp, #12]
   1e460:	2a00      	cmp	r2, #0
   1e462:	db01      	blt.n	1e468 <_vfiprintf_r+0x120>
   1e464:	9207      	str	r2, [sp, #28]
   1e466:	e004      	b.n	1e472 <_vfiprintf_r+0x12a>
   1e468:	4252      	negs	r2, r2
   1e46a:	f043 0302 	orr.w	r3, r3, #2
   1e46e:	9207      	str	r2, [sp, #28]
   1e470:	9304      	str	r3, [sp, #16]
   1e472:	f898 3000 	ldrb.w	r3, [r8]
   1e476:	2b2e      	cmp	r3, #46	; 0x2e
   1e478:	d110      	bne.n	1e49c <_vfiprintf_r+0x154>
   1e47a:	f898 3001 	ldrb.w	r3, [r8, #1]
   1e47e:	f108 0101 	add.w	r1, r8, #1
   1e482:	2b2a      	cmp	r3, #42	; 0x2a
   1e484:	d137      	bne.n	1e4f6 <_vfiprintf_r+0x1ae>
   1e486:	9b03      	ldr	r3, [sp, #12]
   1e488:	f108 0802 	add.w	r8, r8, #2
   1e48c:	1d1a      	adds	r2, r3, #4
   1e48e:	681b      	ldr	r3, [r3, #0]
   1e490:	9203      	str	r2, [sp, #12]
   1e492:	2b00      	cmp	r3, #0
   1e494:	bfb8      	it	lt
   1e496:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1e49a:	9305      	str	r3, [sp, #20]
   1e49c:	4d31      	ldr	r5, [pc, #196]	; (1e564 <_vfiprintf_r+0x21c>)
   1e49e:	2203      	movs	r2, #3
   1e4a0:	f898 1000 	ldrb.w	r1, [r8]
   1e4a4:	4628      	mov	r0, r5
   1e4a6:	f7fa fe63 	bl	19170 <memchr>
   1e4aa:	b140      	cbz	r0, 1e4be <_vfiprintf_r+0x176>
   1e4ac:	2340      	movs	r3, #64	; 0x40
   1e4ae:	1b40      	subs	r0, r0, r5
   1e4b0:	fa03 f000 	lsl.w	r0, r3, r0
   1e4b4:	9b04      	ldr	r3, [sp, #16]
   1e4b6:	f108 0801 	add.w	r8, r8, #1
   1e4ba:	4303      	orrs	r3, r0
   1e4bc:	9304      	str	r3, [sp, #16]
   1e4be:	f898 1000 	ldrb.w	r1, [r8]
   1e4c2:	2206      	movs	r2, #6
   1e4c4:	4828      	ldr	r0, [pc, #160]	; (1e568 <_vfiprintf_r+0x220>)
   1e4c6:	f108 0701 	add.w	r7, r8, #1
   1e4ca:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1e4ce:	f7fa fe4f 	bl	19170 <memchr>
   1e4d2:	2800      	cmp	r0, #0
   1e4d4:	d034      	beq.n	1e540 <_vfiprintf_r+0x1f8>
   1e4d6:	4b25      	ldr	r3, [pc, #148]	; (1e56c <_vfiprintf_r+0x224>)
   1e4d8:	bb03      	cbnz	r3, 1e51c <_vfiprintf_r+0x1d4>
   1e4da:	9b03      	ldr	r3, [sp, #12]
   1e4dc:	3307      	adds	r3, #7
   1e4de:	f023 0307 	bic.w	r3, r3, #7
   1e4e2:	3308      	adds	r3, #8
   1e4e4:	9303      	str	r3, [sp, #12]
   1e4e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e4e8:	444b      	add	r3, r9
   1e4ea:	9309      	str	r3, [sp, #36]	; 0x24
   1e4ec:	e74c      	b.n	1e388 <_vfiprintf_r+0x40>
   1e4ee:	fb00 3202 	mla	r2, r0, r2, r3
   1e4f2:	2101      	movs	r1, #1
   1e4f4:	e786      	b.n	1e404 <_vfiprintf_r+0xbc>
   1e4f6:	2300      	movs	r3, #0
   1e4f8:	250a      	movs	r5, #10
   1e4fa:	4618      	mov	r0, r3
   1e4fc:	9305      	str	r3, [sp, #20]
   1e4fe:	4688      	mov	r8, r1
   1e500:	f898 2000 	ldrb.w	r2, [r8]
   1e504:	3101      	adds	r1, #1
   1e506:	3a30      	subs	r2, #48	; 0x30
   1e508:	2a09      	cmp	r2, #9
   1e50a:	d903      	bls.n	1e514 <_vfiprintf_r+0x1cc>
   1e50c:	2b00      	cmp	r3, #0
   1e50e:	d0c5      	beq.n	1e49c <_vfiprintf_r+0x154>
   1e510:	9005      	str	r0, [sp, #20]
   1e512:	e7c3      	b.n	1e49c <_vfiprintf_r+0x154>
   1e514:	fb05 2000 	mla	r0, r5, r0, r2
   1e518:	2301      	movs	r3, #1
   1e51a:	e7f0      	b.n	1e4fe <_vfiprintf_r+0x1b6>
   1e51c:	ab03      	add	r3, sp, #12
   1e51e:	9300      	str	r3, [sp, #0]
   1e520:	4622      	mov	r2, r4
   1e522:	4b13      	ldr	r3, [pc, #76]	; (1e570 <_vfiprintf_r+0x228>)
   1e524:	a904      	add	r1, sp, #16
   1e526:	4630      	mov	r0, r6
   1e528:	f7fb fa4e 	bl	199c8 <_printf_float>
   1e52c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1e530:	4681      	mov	r9, r0
   1e532:	d1d8      	bne.n	1e4e6 <_vfiprintf_r+0x19e>
   1e534:	89a3      	ldrh	r3, [r4, #12]
   1e536:	065b      	lsls	r3, r3, #25
   1e538:	f53f af7d 	bmi.w	1e436 <_vfiprintf_r+0xee>
   1e53c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1e53e:	e77c      	b.n	1e43a <_vfiprintf_r+0xf2>
   1e540:	ab03      	add	r3, sp, #12
   1e542:	9300      	str	r3, [sp, #0]
   1e544:	4622      	mov	r2, r4
   1e546:	4b0a      	ldr	r3, [pc, #40]	; (1e570 <_vfiprintf_r+0x228>)
   1e548:	a904      	add	r1, sp, #16
   1e54a:	4630      	mov	r0, r6
   1e54c:	f7fb fcec 	bl	19f28 <_printf_i>
   1e550:	e7ec      	b.n	1e52c <_vfiprintf_r+0x1e4>
   1e552:	bf00      	nop
   1e554:	00020634 	.word	0x00020634
   1e558:	00020a14 	.word	0x00020a14
   1e55c:	00020654 	.word	0x00020654
   1e560:	00020614 	.word	0x00020614
   1e564:	00020a1a 	.word	0x00020a1a
   1e568:	00020a1e 	.word	0x00020a1e
   1e56c:	000199c9 	.word	0x000199c9
   1e570:	0001e325 	.word	0x0001e325

0001e574 <__svfiscanf_r>:
__svfscanf_r():
   1e574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e578:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1e57c:	9301      	str	r3, [sp, #4]
   1e57e:	2300      	movs	r3, #0
   1e580:	4606      	mov	r6, r0
   1e582:	460c      	mov	r4, r1
   1e584:	4692      	mov	sl, r2
   1e586:	270a      	movs	r7, #10
   1e588:	9346      	str	r3, [sp, #280]	; 0x118
   1e58a:	9347      	str	r3, [sp, #284]	; 0x11c
   1e58c:	4b9f      	ldr	r3, [pc, #636]	; (1e80c <__svfiscanf_r+0x298>)
   1e58e:	f10d 080c 	add.w	r8, sp, #12
   1e592:	93a2      	str	r3, [sp, #648]	; 0x288
   1e594:	4b9e      	ldr	r3, [pc, #632]	; (1e810 <__svfiscanf_r+0x29c>)
   1e596:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1e814 <__svfiscanf_r+0x2a0>
   1e59a:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1e59e:	93a3      	str	r3, [sp, #652]	; 0x28c
   1e5a0:	f89a 3000 	ldrb.w	r3, [sl]
   1e5a4:	2b00      	cmp	r3, #0
   1e5a6:	f000 812f 	beq.w	1e808 <__svfiscanf_r+0x294>
   1e5aa:	f7fa fd4d 	bl	19048 <__locale_ctype_ptr>
   1e5ae:	f89a b000 	ldrb.w	fp, [sl]
   1e5b2:	4458      	add	r0, fp
   1e5b4:	7843      	ldrb	r3, [r0, #1]
   1e5b6:	f013 0308 	ands.w	r3, r3, #8
   1e5ba:	d143      	bne.n	1e644 <__svfiscanf_r+0xd0>
   1e5bc:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1e5c0:	f10a 0501 	add.w	r5, sl, #1
   1e5c4:	f040 8099 	bne.w	1e6fa <__svfiscanf_r+0x186>
   1e5c8:	9345      	str	r3, [sp, #276]	; 0x114
   1e5ca:	9343      	str	r3, [sp, #268]	; 0x10c
   1e5cc:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1e5d0:	2b2a      	cmp	r3, #42	; 0x2a
   1e5d2:	d103      	bne.n	1e5dc <__svfiscanf_r+0x68>
   1e5d4:	2310      	movs	r3, #16
   1e5d6:	f10a 0502 	add.w	r5, sl, #2
   1e5da:	9343      	str	r3, [sp, #268]	; 0x10c
   1e5dc:	7829      	ldrb	r1, [r5, #0]
   1e5de:	46aa      	mov	sl, r5
   1e5e0:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1e5e4:	2a09      	cmp	r2, #9
   1e5e6:	f105 0501 	add.w	r5, r5, #1
   1e5ea:	d941      	bls.n	1e670 <__svfiscanf_r+0xfc>
   1e5ec:	2203      	movs	r2, #3
   1e5ee:	4889      	ldr	r0, [pc, #548]	; (1e814 <__svfiscanf_r+0x2a0>)
   1e5f0:	f7fa fdbe 	bl	19170 <memchr>
   1e5f4:	b138      	cbz	r0, 1e606 <__svfiscanf_r+0x92>
   1e5f6:	eba0 0309 	sub.w	r3, r0, r9
   1e5fa:	2001      	movs	r0, #1
   1e5fc:	46aa      	mov	sl, r5
   1e5fe:	4098      	lsls	r0, r3
   1e600:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e602:	4318      	orrs	r0, r3
   1e604:	9043      	str	r0, [sp, #268]	; 0x10c
   1e606:	f89a 3000 	ldrb.w	r3, [sl]
   1e60a:	f10a 0501 	add.w	r5, sl, #1
   1e60e:	2b67      	cmp	r3, #103	; 0x67
   1e610:	d84a      	bhi.n	1e6a8 <__svfiscanf_r+0x134>
   1e612:	2b65      	cmp	r3, #101	; 0x65
   1e614:	f080 80b7 	bcs.w	1e786 <__svfiscanf_r+0x212>
   1e618:	2b47      	cmp	r3, #71	; 0x47
   1e61a:	d82f      	bhi.n	1e67c <__svfiscanf_r+0x108>
   1e61c:	2b45      	cmp	r3, #69	; 0x45
   1e61e:	f080 80b2 	bcs.w	1e786 <__svfiscanf_r+0x212>
   1e622:	2b00      	cmp	r3, #0
   1e624:	f000 8082 	beq.w	1e72c <__svfiscanf_r+0x1b8>
   1e628:	2b25      	cmp	r3, #37	; 0x25
   1e62a:	d066      	beq.n	1e6fa <__svfiscanf_r+0x186>
   1e62c:	2303      	movs	r3, #3
   1e62e:	9744      	str	r7, [sp, #272]	; 0x110
   1e630:	9349      	str	r3, [sp, #292]	; 0x124
   1e632:	e045      	b.n	1e6c0 <__svfiscanf_r+0x14c>
   1e634:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1e636:	3301      	adds	r3, #1
   1e638:	3101      	adds	r1, #1
   1e63a:	9147      	str	r1, [sp, #284]	; 0x11c
   1e63c:	6861      	ldr	r1, [r4, #4]
   1e63e:	6023      	str	r3, [r4, #0]
   1e640:	3901      	subs	r1, #1
   1e642:	6061      	str	r1, [r4, #4]
   1e644:	6863      	ldr	r3, [r4, #4]
   1e646:	2b00      	cmp	r3, #0
   1e648:	dd0b      	ble.n	1e662 <__svfiscanf_r+0xee>
   1e64a:	f7fa fcfd 	bl	19048 <__locale_ctype_ptr>
   1e64e:	6823      	ldr	r3, [r4, #0]
   1e650:	7819      	ldrb	r1, [r3, #0]
   1e652:	4408      	add	r0, r1
   1e654:	7841      	ldrb	r1, [r0, #1]
   1e656:	070d      	lsls	r5, r1, #28
   1e658:	d4ec      	bmi.n	1e634 <__svfiscanf_r+0xc0>
   1e65a:	f10a 0501 	add.w	r5, sl, #1
   1e65e:	46aa      	mov	sl, r5
   1e660:	e79e      	b.n	1e5a0 <__svfiscanf_r+0x2c>
   1e662:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e664:	4621      	mov	r1, r4
   1e666:	4630      	mov	r0, r6
   1e668:	4798      	blx	r3
   1e66a:	2800      	cmp	r0, #0
   1e66c:	d0ed      	beq.n	1e64a <__svfiscanf_r+0xd6>
   1e66e:	e7f4      	b.n	1e65a <__svfiscanf_r+0xe6>
   1e670:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1e672:	fb07 1303 	mla	r3, r7, r3, r1
   1e676:	3b30      	subs	r3, #48	; 0x30
   1e678:	9345      	str	r3, [sp, #276]	; 0x114
   1e67a:	e7af      	b.n	1e5dc <__svfiscanf_r+0x68>
   1e67c:	2b5b      	cmp	r3, #91	; 0x5b
   1e67e:	d061      	beq.n	1e744 <__svfiscanf_r+0x1d0>
   1e680:	d80c      	bhi.n	1e69c <__svfiscanf_r+0x128>
   1e682:	2b58      	cmp	r3, #88	; 0x58
   1e684:	d1d2      	bne.n	1e62c <__svfiscanf_r+0xb8>
   1e686:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e688:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1e68c:	9243      	str	r2, [sp, #268]	; 0x10c
   1e68e:	2210      	movs	r2, #16
   1e690:	9244      	str	r2, [sp, #272]	; 0x110
   1e692:	2b6f      	cmp	r3, #111	; 0x6f
   1e694:	bfb4      	ite	lt
   1e696:	2303      	movlt	r3, #3
   1e698:	2304      	movge	r3, #4
   1e69a:	e010      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e69c:	2b63      	cmp	r3, #99	; 0x63
   1e69e:	d05c      	beq.n	1e75a <__svfiscanf_r+0x1e6>
   1e6a0:	2b64      	cmp	r3, #100	; 0x64
   1e6a2:	d1c3      	bne.n	1e62c <__svfiscanf_r+0xb8>
   1e6a4:	9744      	str	r7, [sp, #272]	; 0x110
   1e6a6:	e7f4      	b.n	1e692 <__svfiscanf_r+0x11e>
   1e6a8:	2b70      	cmp	r3, #112	; 0x70
   1e6aa:	d042      	beq.n	1e732 <__svfiscanf_r+0x1be>
   1e6ac:	d81d      	bhi.n	1e6ea <__svfiscanf_r+0x176>
   1e6ae:	2b6e      	cmp	r3, #110	; 0x6e
   1e6b0:	d059      	beq.n	1e766 <__svfiscanf_r+0x1f2>
   1e6b2:	d843      	bhi.n	1e73c <__svfiscanf_r+0x1c8>
   1e6b4:	2b69      	cmp	r3, #105	; 0x69
   1e6b6:	d1b9      	bne.n	1e62c <__svfiscanf_r+0xb8>
   1e6b8:	2300      	movs	r3, #0
   1e6ba:	9344      	str	r3, [sp, #272]	; 0x110
   1e6bc:	2303      	movs	r3, #3
   1e6be:	9349      	str	r3, [sp, #292]	; 0x124
   1e6c0:	6863      	ldr	r3, [r4, #4]
   1e6c2:	2b00      	cmp	r3, #0
   1e6c4:	dd61      	ble.n	1e78a <__svfiscanf_r+0x216>
   1e6c6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e6c8:	0659      	lsls	r1, r3, #25
   1e6ca:	d56f      	bpl.n	1e7ac <__svfiscanf_r+0x238>
   1e6cc:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1e6ce:	2b02      	cmp	r3, #2
   1e6d0:	dc7c      	bgt.n	1e7cc <__svfiscanf_r+0x258>
   1e6d2:	ab01      	add	r3, sp, #4
   1e6d4:	4622      	mov	r2, r4
   1e6d6:	a943      	add	r1, sp, #268	; 0x10c
   1e6d8:	4630      	mov	r0, r6
   1e6da:	f000 f8c7 	bl	1e86c <_scanf_chars>
   1e6de:	2801      	cmp	r0, #1
   1e6e0:	f000 8092 	beq.w	1e808 <__svfiscanf_r+0x294>
   1e6e4:	2802      	cmp	r0, #2
   1e6e6:	d1ba      	bne.n	1e65e <__svfiscanf_r+0xea>
   1e6e8:	e01d      	b.n	1e726 <__svfiscanf_r+0x1b2>
   1e6ea:	2b75      	cmp	r3, #117	; 0x75
   1e6ec:	d0da      	beq.n	1e6a4 <__svfiscanf_r+0x130>
   1e6ee:	2b78      	cmp	r3, #120	; 0x78
   1e6f0:	d0c9      	beq.n	1e686 <__svfiscanf_r+0x112>
   1e6f2:	2b73      	cmp	r3, #115	; 0x73
   1e6f4:	d19a      	bne.n	1e62c <__svfiscanf_r+0xb8>
   1e6f6:	2302      	movs	r3, #2
   1e6f8:	e7e1      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e6fa:	6863      	ldr	r3, [r4, #4]
   1e6fc:	2b00      	cmp	r3, #0
   1e6fe:	dd0c      	ble.n	1e71a <__svfiscanf_r+0x1a6>
   1e700:	6823      	ldr	r3, [r4, #0]
   1e702:	781a      	ldrb	r2, [r3, #0]
   1e704:	4593      	cmp	fp, r2
   1e706:	d17f      	bne.n	1e808 <__svfiscanf_r+0x294>
   1e708:	3301      	adds	r3, #1
   1e70a:	6862      	ldr	r2, [r4, #4]
   1e70c:	6023      	str	r3, [r4, #0]
   1e70e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e710:	3a01      	subs	r2, #1
   1e712:	3301      	adds	r3, #1
   1e714:	6062      	str	r2, [r4, #4]
   1e716:	9347      	str	r3, [sp, #284]	; 0x11c
   1e718:	e7a1      	b.n	1e65e <__svfiscanf_r+0xea>
   1e71a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e71c:	4621      	mov	r1, r4
   1e71e:	4630      	mov	r0, r6
   1e720:	4798      	blx	r3
   1e722:	2800      	cmp	r0, #0
   1e724:	d0ec      	beq.n	1e700 <__svfiscanf_r+0x18c>
   1e726:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e728:	2800      	cmp	r0, #0
   1e72a:	d163      	bne.n	1e7f4 <__svfiscanf_r+0x280>
   1e72c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e730:	e066      	b.n	1e800 <__svfiscanf_r+0x28c>
   1e732:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e734:	f042 0220 	orr.w	r2, r2, #32
   1e738:	9243      	str	r2, [sp, #268]	; 0x10c
   1e73a:	e7a4      	b.n	1e686 <__svfiscanf_r+0x112>
   1e73c:	2308      	movs	r3, #8
   1e73e:	9344      	str	r3, [sp, #272]	; 0x110
   1e740:	2304      	movs	r3, #4
   1e742:	e7bc      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e744:	4629      	mov	r1, r5
   1e746:	4640      	mov	r0, r8
   1e748:	f000 f9fc 	bl	1eb44 <__sccl>
   1e74c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e74e:	4605      	mov	r5, r0
   1e750:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e754:	9343      	str	r3, [sp, #268]	; 0x10c
   1e756:	2301      	movs	r3, #1
   1e758:	e7b1      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e75a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1e75c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e760:	9343      	str	r3, [sp, #268]	; 0x10c
   1e762:	2300      	movs	r3, #0
   1e764:	e7ab      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e766:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1e768:	06d0      	lsls	r0, r2, #27
   1e76a:	f53f af78 	bmi.w	1e65e <__svfiscanf_r+0xea>
   1e76e:	f012 0f01 	tst.w	r2, #1
   1e772:	9a01      	ldr	r2, [sp, #4]
   1e774:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1e776:	f102 0104 	add.w	r1, r2, #4
   1e77a:	9101      	str	r1, [sp, #4]
   1e77c:	6812      	ldr	r2, [r2, #0]
   1e77e:	bf14      	ite	ne
   1e780:	8013      	strhne	r3, [r2, #0]
   1e782:	6013      	streq	r3, [r2, #0]
   1e784:	e76b      	b.n	1e65e <__svfiscanf_r+0xea>
   1e786:	2305      	movs	r3, #5
   1e788:	e799      	b.n	1e6be <__svfiscanf_r+0x14a>
   1e78a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e78c:	4621      	mov	r1, r4
   1e78e:	4630      	mov	r0, r6
   1e790:	4798      	blx	r3
   1e792:	2800      	cmp	r0, #0
   1e794:	d097      	beq.n	1e6c6 <__svfiscanf_r+0x152>
   1e796:	e7c6      	b.n	1e726 <__svfiscanf_r+0x1b2>
   1e798:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1e79a:	3201      	adds	r2, #1
   1e79c:	9247      	str	r2, [sp, #284]	; 0x11c
   1e79e:	6862      	ldr	r2, [r4, #4]
   1e7a0:	3a01      	subs	r2, #1
   1e7a2:	2a00      	cmp	r2, #0
   1e7a4:	6062      	str	r2, [r4, #4]
   1e7a6:	dd0a      	ble.n	1e7be <__svfiscanf_r+0x24a>
   1e7a8:	3301      	adds	r3, #1
   1e7aa:	6023      	str	r3, [r4, #0]
   1e7ac:	f7fa fc4c 	bl	19048 <__locale_ctype_ptr>
   1e7b0:	6823      	ldr	r3, [r4, #0]
   1e7b2:	781a      	ldrb	r2, [r3, #0]
   1e7b4:	4410      	add	r0, r2
   1e7b6:	7842      	ldrb	r2, [r0, #1]
   1e7b8:	0712      	lsls	r2, r2, #28
   1e7ba:	d4ed      	bmi.n	1e798 <__svfiscanf_r+0x224>
   1e7bc:	e786      	b.n	1e6cc <__svfiscanf_r+0x158>
   1e7be:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1e7c0:	4621      	mov	r1, r4
   1e7c2:	4630      	mov	r0, r6
   1e7c4:	4798      	blx	r3
   1e7c6:	2800      	cmp	r0, #0
   1e7c8:	d0f0      	beq.n	1e7ac <__svfiscanf_r+0x238>
   1e7ca:	e7ac      	b.n	1e726 <__svfiscanf_r+0x1b2>
   1e7cc:	2b04      	cmp	r3, #4
   1e7ce:	dc06      	bgt.n	1e7de <__svfiscanf_r+0x26a>
   1e7d0:	ab01      	add	r3, sp, #4
   1e7d2:	4622      	mov	r2, r4
   1e7d4:	a943      	add	r1, sp, #268	; 0x10c
   1e7d6:	4630      	mov	r0, r6
   1e7d8:	f000 f8ac 	bl	1e934 <_scanf_i>
   1e7dc:	e77f      	b.n	1e6de <__svfiscanf_r+0x16a>
   1e7de:	4b0e      	ldr	r3, [pc, #56]	; (1e818 <__svfiscanf_r+0x2a4>)
   1e7e0:	2b00      	cmp	r3, #0
   1e7e2:	f43f af3c 	beq.w	1e65e <__svfiscanf_r+0xea>
   1e7e6:	ab01      	add	r3, sp, #4
   1e7e8:	4622      	mov	r2, r4
   1e7ea:	a943      	add	r1, sp, #268	; 0x10c
   1e7ec:	4630      	mov	r0, r6
   1e7ee:	f7fb fcbb 	bl	1a168 <_scanf_float>
   1e7f2:	e774      	b.n	1e6de <__svfiscanf_r+0x16a>
   1e7f4:	89a3      	ldrh	r3, [r4, #12]
   1e7f6:	f013 0f40 	tst.w	r3, #64	; 0x40
   1e7fa:	bf18      	it	ne
   1e7fc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1e800:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1e804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e808:	9846      	ldr	r0, [sp, #280]	; 0x118
   1e80a:	e7f9      	b.n	1e800 <__svfiscanf_r+0x28c>
   1e80c:	0001ed61 	.word	0x0001ed61
   1e810:	0001a6f9 	.word	0x0001a6f9
   1e814:	00020a1a 	.word	0x00020a1a
   1e818:	0001a169 	.word	0x0001a169

0001e81c <_vfiscanf_r>:
_vfscanf_r():
   1e81c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e820:	460c      	mov	r4, r1
   1e822:	4616      	mov	r6, r2
   1e824:	461f      	mov	r7, r3
   1e826:	4605      	mov	r5, r0
   1e828:	b118      	cbz	r0, 1e832 <_vfiscanf_r+0x16>
   1e82a:	6983      	ldr	r3, [r0, #24]
   1e82c:	b90b      	cbnz	r3, 1e832 <_vfiscanf_r+0x16>
   1e82e:	f7fa fb3d 	bl	18eac <__sinit>
   1e832:	4b0b      	ldr	r3, [pc, #44]	; (1e860 <_vfiscanf_r+0x44>)
   1e834:	429c      	cmp	r4, r3
   1e836:	d108      	bne.n	1e84a <_vfiscanf_r+0x2e>
   1e838:	686c      	ldr	r4, [r5, #4]
   1e83a:	463b      	mov	r3, r7
   1e83c:	4632      	mov	r2, r6
   1e83e:	4621      	mov	r1, r4
   1e840:	4628      	mov	r0, r5
   1e842:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1e846:	f7ff be95 	b.w	1e574 <__svfiscanf_r>
   1e84a:	4b06      	ldr	r3, [pc, #24]	; (1e864 <_vfiscanf_r+0x48>)
   1e84c:	429c      	cmp	r4, r3
   1e84e:	d101      	bne.n	1e854 <_vfiscanf_r+0x38>
   1e850:	68ac      	ldr	r4, [r5, #8]
   1e852:	e7f2      	b.n	1e83a <_vfiscanf_r+0x1e>
   1e854:	4b04      	ldr	r3, [pc, #16]	; (1e868 <_vfiscanf_r+0x4c>)
   1e856:	429c      	cmp	r4, r3
   1e858:	bf08      	it	eq
   1e85a:	68ec      	ldreq	r4, [r5, #12]
   1e85c:	e7ed      	b.n	1e83a <_vfiscanf_r+0x1e>
   1e85e:	bf00      	nop
   1e860:	00020634 	.word	0x00020634
   1e864:	00020654 	.word	0x00020654
   1e868:	00020614 	.word	0x00020614

0001e86c <_scanf_chars>:
_scanf_chars():
   1e86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e870:	4615      	mov	r5, r2
   1e872:	688a      	ldr	r2, [r1, #8]
   1e874:	4680      	mov	r8, r0
   1e876:	460c      	mov	r4, r1
   1e878:	b932      	cbnz	r2, 1e888 <_scanf_chars+0x1c>
   1e87a:	698a      	ldr	r2, [r1, #24]
   1e87c:	2a00      	cmp	r2, #0
   1e87e:	bf0c      	ite	eq
   1e880:	2201      	moveq	r2, #1
   1e882:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   1e886:	608a      	str	r2, [r1, #8]
   1e888:	2600      	movs	r6, #0
   1e88a:	6822      	ldr	r2, [r4, #0]
   1e88c:	06d1      	lsls	r1, r2, #27
   1e88e:	bf5f      	itttt	pl
   1e890:	681a      	ldrpl	r2, [r3, #0]
   1e892:	1d11      	addpl	r1, r2, #4
   1e894:	6019      	strpl	r1, [r3, #0]
   1e896:	6817      	ldrpl	r7, [r2, #0]
   1e898:	69a3      	ldr	r3, [r4, #24]
   1e89a:	b1db      	cbz	r3, 1e8d4 <_scanf_chars+0x68>
   1e89c:	2b01      	cmp	r3, #1
   1e89e:	d107      	bne.n	1e8b0 <_scanf_chars+0x44>
   1e8a0:	682b      	ldr	r3, [r5, #0]
   1e8a2:	6962      	ldr	r2, [r4, #20]
   1e8a4:	781b      	ldrb	r3, [r3, #0]
   1e8a6:	5cd3      	ldrb	r3, [r2, r3]
   1e8a8:	b9a3      	cbnz	r3, 1e8d4 <_scanf_chars+0x68>
   1e8aa:	2e00      	cmp	r6, #0
   1e8ac:	d131      	bne.n	1e912 <_scanf_chars+0xa6>
   1e8ae:	e006      	b.n	1e8be <_scanf_chars+0x52>
   1e8b0:	2b02      	cmp	r3, #2
   1e8b2:	d007      	beq.n	1e8c4 <_scanf_chars+0x58>
   1e8b4:	2e00      	cmp	r6, #0
   1e8b6:	d12c      	bne.n	1e912 <_scanf_chars+0xa6>
   1e8b8:	69a3      	ldr	r3, [r4, #24]
   1e8ba:	2b01      	cmp	r3, #1
   1e8bc:	d129      	bne.n	1e912 <_scanf_chars+0xa6>
   1e8be:	2001      	movs	r0, #1
   1e8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e8c4:	f7fa fbc0 	bl	19048 <__locale_ctype_ptr>
   1e8c8:	682b      	ldr	r3, [r5, #0]
   1e8ca:	781b      	ldrb	r3, [r3, #0]
   1e8cc:	4418      	add	r0, r3
   1e8ce:	7843      	ldrb	r3, [r0, #1]
   1e8d0:	071b      	lsls	r3, r3, #28
   1e8d2:	d4ef      	bmi.n	1e8b4 <_scanf_chars+0x48>
   1e8d4:	6823      	ldr	r3, [r4, #0]
   1e8d6:	3601      	adds	r6, #1
   1e8d8:	06da      	lsls	r2, r3, #27
   1e8da:	bf5e      	ittt	pl
   1e8dc:	682b      	ldrpl	r3, [r5, #0]
   1e8de:	781b      	ldrbpl	r3, [r3, #0]
   1e8e0:	703b      	strbpl	r3, [r7, #0]
   1e8e2:	682a      	ldr	r2, [r5, #0]
   1e8e4:	686b      	ldr	r3, [r5, #4]
   1e8e6:	f102 0201 	add.w	r2, r2, #1
   1e8ea:	602a      	str	r2, [r5, #0]
   1e8ec:	68a2      	ldr	r2, [r4, #8]
   1e8ee:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1e8f2:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   1e8f6:	606b      	str	r3, [r5, #4]
   1e8f8:	bf58      	it	pl
   1e8fa:	3701      	addpl	r7, #1
   1e8fc:	60a2      	str	r2, [r4, #8]
   1e8fe:	b142      	cbz	r2, 1e912 <_scanf_chars+0xa6>
   1e900:	2b00      	cmp	r3, #0
   1e902:	dcc9      	bgt.n	1e898 <_scanf_chars+0x2c>
   1e904:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e908:	4629      	mov	r1, r5
   1e90a:	4640      	mov	r0, r8
   1e90c:	4798      	blx	r3
   1e90e:	2800      	cmp	r0, #0
   1e910:	d0c2      	beq.n	1e898 <_scanf_chars+0x2c>
   1e912:	6823      	ldr	r3, [r4, #0]
   1e914:	f013 0310 	ands.w	r3, r3, #16
   1e918:	d105      	bne.n	1e926 <_scanf_chars+0xba>
   1e91a:	68e2      	ldr	r2, [r4, #12]
   1e91c:	3201      	adds	r2, #1
   1e91e:	60e2      	str	r2, [r4, #12]
   1e920:	69a2      	ldr	r2, [r4, #24]
   1e922:	b102      	cbz	r2, 1e926 <_scanf_chars+0xba>
   1e924:	703b      	strb	r3, [r7, #0]
   1e926:	6923      	ldr	r3, [r4, #16]
   1e928:	2000      	movs	r0, #0
   1e92a:	441e      	add	r6, r3
   1e92c:	6126      	str	r6, [r4, #16]
   1e92e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e932:	Address 0x000000000001e932 is out of bounds.


0001e934 <_scanf_i>:
_scanf_i():
   1e934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e938:	460c      	mov	r4, r1
   1e93a:	469a      	mov	sl, r3
   1e93c:	4b74      	ldr	r3, [pc, #464]	; (1eb10 <_scanf_i+0x1dc>)
   1e93e:	b087      	sub	sp, #28
   1e940:	4683      	mov	fp, r0
   1e942:	4616      	mov	r6, r2
   1e944:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1e948:	ab03      	add	r3, sp, #12
   1e94a:	68a7      	ldr	r7, [r4, #8]
   1e94c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   1e950:	4b70      	ldr	r3, [pc, #448]	; (1eb14 <_scanf_i+0x1e0>)
   1e952:	69a1      	ldr	r1, [r4, #24]
   1e954:	4a70      	ldr	r2, [pc, #448]	; (1eb18 <_scanf_i+0x1e4>)
   1e956:	f104 091c 	add.w	r9, r4, #28
   1e95a:	2903      	cmp	r1, #3
   1e95c:	bf18      	it	ne
   1e95e:	461a      	movne	r2, r3
   1e960:	1e7b      	subs	r3, r7, #1
   1e962:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   1e966:	bf84      	itt	hi
   1e968:	f240 135d 	movwhi	r3, #349	; 0x15d
   1e96c:	60a3      	strhi	r3, [r4, #8]
   1e96e:	6823      	ldr	r3, [r4, #0]
   1e970:	bf88      	it	hi
   1e972:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   1e976:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   1e97a:	6023      	str	r3, [r4, #0]
   1e97c:	bf98      	it	ls
   1e97e:	2700      	movls	r7, #0
   1e980:	464b      	mov	r3, r9
   1e982:	f04f 0800 	mov.w	r8, #0
   1e986:	9200      	str	r2, [sp, #0]
   1e988:	bf88      	it	hi
   1e98a:	197f      	addhi	r7, r7, r5
   1e98c:	6831      	ldr	r1, [r6, #0]
   1e98e:	9301      	str	r3, [sp, #4]
   1e990:	ab03      	add	r3, sp, #12
   1e992:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   1e996:	2202      	movs	r2, #2
   1e998:	7809      	ldrb	r1, [r1, #0]
   1e99a:	f7fa fbe9 	bl	19170 <memchr>
   1e99e:	9b01      	ldr	r3, [sp, #4]
   1e9a0:	b328      	cbz	r0, 1e9ee <_scanf_i+0xba>
   1e9a2:	f1b8 0f01 	cmp.w	r8, #1
   1e9a6:	d156      	bne.n	1ea56 <_scanf_i+0x122>
   1e9a8:	6862      	ldr	r2, [r4, #4]
   1e9aa:	b92a      	cbnz	r2, 1e9b8 <_scanf_i+0x84>
   1e9ac:	2208      	movs	r2, #8
   1e9ae:	6062      	str	r2, [r4, #4]
   1e9b0:	6822      	ldr	r2, [r4, #0]
   1e9b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1e9b6:	6022      	str	r2, [r4, #0]
   1e9b8:	6822      	ldr	r2, [r4, #0]
   1e9ba:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   1e9be:	6022      	str	r2, [r4, #0]
   1e9c0:	68a2      	ldr	r2, [r4, #8]
   1e9c2:	1e51      	subs	r1, r2, #1
   1e9c4:	60a1      	str	r1, [r4, #8]
   1e9c6:	b192      	cbz	r2, 1e9ee <_scanf_i+0xba>
   1e9c8:	6832      	ldr	r2, [r6, #0]
   1e9ca:	1c5d      	adds	r5, r3, #1
   1e9cc:	1c51      	adds	r1, r2, #1
   1e9ce:	6031      	str	r1, [r6, #0]
   1e9d0:	7812      	ldrb	r2, [r2, #0]
   1e9d2:	701a      	strb	r2, [r3, #0]
   1e9d4:	6873      	ldr	r3, [r6, #4]
   1e9d6:	3b01      	subs	r3, #1
   1e9d8:	2b00      	cmp	r3, #0
   1e9da:	6073      	str	r3, [r6, #4]
   1e9dc:	dc06      	bgt.n	1e9ec <_scanf_i+0xb8>
   1e9de:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1e9e2:	4631      	mov	r1, r6
   1e9e4:	4658      	mov	r0, fp
   1e9e6:	4798      	blx	r3
   1e9e8:	2800      	cmp	r0, #0
   1e9ea:	d177      	bne.n	1eadc <_scanf_i+0x1a8>
   1e9ec:	462b      	mov	r3, r5
   1e9ee:	f108 0801 	add.w	r8, r8, #1
   1e9f2:	f1b8 0f03 	cmp.w	r8, #3
   1e9f6:	d1c9      	bne.n	1e98c <_scanf_i+0x58>
   1e9f8:	6862      	ldr	r2, [r4, #4]
   1e9fa:	b90a      	cbnz	r2, 1ea00 <_scanf_i+0xcc>
   1e9fc:	220a      	movs	r2, #10
   1e9fe:	6062      	str	r2, [r4, #4]
   1ea00:	6862      	ldr	r2, [r4, #4]
   1ea02:	4946      	ldr	r1, [pc, #280]	; (1eb1c <_scanf_i+0x1e8>)
   1ea04:	6960      	ldr	r0, [r4, #20]
   1ea06:	1a89      	subs	r1, r1, r2
   1ea08:	9301      	str	r3, [sp, #4]
   1ea0a:	f000 f89b 	bl	1eb44 <__sccl>
   1ea0e:	9b01      	ldr	r3, [sp, #4]
   1ea10:	f04f 0800 	mov.w	r8, #0
   1ea14:	461d      	mov	r5, r3
   1ea16:	68a3      	ldr	r3, [r4, #8]
   1ea18:	2b00      	cmp	r3, #0
   1ea1a:	d039      	beq.n	1ea90 <_scanf_i+0x15c>
   1ea1c:	6831      	ldr	r1, [r6, #0]
   1ea1e:	6960      	ldr	r0, [r4, #20]
   1ea20:	780a      	ldrb	r2, [r1, #0]
   1ea22:	5c80      	ldrb	r0, [r0, r2]
   1ea24:	2800      	cmp	r0, #0
   1ea26:	d033      	beq.n	1ea90 <_scanf_i+0x15c>
   1ea28:	2a30      	cmp	r2, #48	; 0x30
   1ea2a:	6822      	ldr	r2, [r4, #0]
   1ea2c:	d121      	bne.n	1ea72 <_scanf_i+0x13e>
   1ea2e:	0510      	lsls	r0, r2, #20
   1ea30:	d51f      	bpl.n	1ea72 <_scanf_i+0x13e>
   1ea32:	f108 0801 	add.w	r8, r8, #1
   1ea36:	b117      	cbz	r7, 1ea3e <_scanf_i+0x10a>
   1ea38:	3301      	adds	r3, #1
   1ea3a:	3f01      	subs	r7, #1
   1ea3c:	60a3      	str	r3, [r4, #8]
   1ea3e:	6873      	ldr	r3, [r6, #4]
   1ea40:	3b01      	subs	r3, #1
   1ea42:	2b00      	cmp	r3, #0
   1ea44:	6073      	str	r3, [r6, #4]
   1ea46:	dd1c      	ble.n	1ea82 <_scanf_i+0x14e>
   1ea48:	6833      	ldr	r3, [r6, #0]
   1ea4a:	3301      	adds	r3, #1
   1ea4c:	6033      	str	r3, [r6, #0]
   1ea4e:	68a3      	ldr	r3, [r4, #8]
   1ea50:	3b01      	subs	r3, #1
   1ea52:	60a3      	str	r3, [r4, #8]
   1ea54:	e7df      	b.n	1ea16 <_scanf_i+0xe2>
   1ea56:	f1b8 0f02 	cmp.w	r8, #2
   1ea5a:	d1b1      	bne.n	1e9c0 <_scanf_i+0x8c>
   1ea5c:	6822      	ldr	r2, [r4, #0]
   1ea5e:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   1ea62:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   1ea66:	d1c2      	bne.n	1e9ee <_scanf_i+0xba>
   1ea68:	2110      	movs	r1, #16
   1ea6a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   1ea6e:	6061      	str	r1, [r4, #4]
   1ea70:	e7a5      	b.n	1e9be <_scanf_i+0x8a>
   1ea72:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   1ea76:	6022      	str	r2, [r4, #0]
   1ea78:	780b      	ldrb	r3, [r1, #0]
   1ea7a:	3501      	adds	r5, #1
   1ea7c:	f805 3c01 	strb.w	r3, [r5, #-1]
   1ea80:	e7dd      	b.n	1ea3e <_scanf_i+0x10a>
   1ea82:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1ea86:	4631      	mov	r1, r6
   1ea88:	4658      	mov	r0, fp
   1ea8a:	4798      	blx	r3
   1ea8c:	2800      	cmp	r0, #0
   1ea8e:	d0de      	beq.n	1ea4e <_scanf_i+0x11a>
   1ea90:	6823      	ldr	r3, [r4, #0]
   1ea92:	05d9      	lsls	r1, r3, #23
   1ea94:	d50c      	bpl.n	1eab0 <_scanf_i+0x17c>
   1ea96:	454d      	cmp	r5, r9
   1ea98:	d908      	bls.n	1eaac <_scanf_i+0x178>
   1ea9a:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1ea9e:	1e6f      	subs	r7, r5, #1
   1eaa0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1eaa4:	4632      	mov	r2, r6
   1eaa6:	4658      	mov	r0, fp
   1eaa8:	4798      	blx	r3
   1eaaa:	463d      	mov	r5, r7
   1eaac:	454d      	cmp	r5, r9
   1eaae:	d02c      	beq.n	1eb0a <_scanf_i+0x1d6>
   1eab0:	6822      	ldr	r2, [r4, #0]
   1eab2:	f012 0210 	ands.w	r2, r2, #16
   1eab6:	d11e      	bne.n	1eaf6 <_scanf_i+0x1c2>
   1eab8:	702a      	strb	r2, [r5, #0]
   1eaba:	6863      	ldr	r3, [r4, #4]
   1eabc:	4649      	mov	r1, r9
   1eabe:	4658      	mov	r0, fp
   1eac0:	9e00      	ldr	r6, [sp, #0]
   1eac2:	47b0      	blx	r6
   1eac4:	6822      	ldr	r2, [r4, #0]
   1eac6:	f8da 3000 	ldr.w	r3, [sl]
   1eaca:	f012 0f20 	tst.w	r2, #32
   1eace:	d008      	beq.n	1eae2 <_scanf_i+0x1ae>
   1ead0:	1d1a      	adds	r2, r3, #4
   1ead2:	f8ca 2000 	str.w	r2, [sl]
   1ead6:	681b      	ldr	r3, [r3, #0]
   1ead8:	6018      	str	r0, [r3, #0]
   1eada:	e009      	b.n	1eaf0 <_scanf_i+0x1bc>
   1eadc:	f04f 0800 	mov.w	r8, #0
   1eae0:	e7d6      	b.n	1ea90 <_scanf_i+0x15c>
   1eae2:	07d2      	lsls	r2, r2, #31
   1eae4:	d5f4      	bpl.n	1ead0 <_scanf_i+0x19c>
   1eae6:	1d1a      	adds	r2, r3, #4
   1eae8:	f8ca 2000 	str.w	r2, [sl]
   1eaec:	681b      	ldr	r3, [r3, #0]
   1eaee:	8018      	strh	r0, [r3, #0]
   1eaf0:	68e3      	ldr	r3, [r4, #12]
   1eaf2:	3301      	adds	r3, #1
   1eaf4:	60e3      	str	r3, [r4, #12]
   1eaf6:	2000      	movs	r0, #0
   1eaf8:	eba5 0509 	sub.w	r5, r5, r9
   1eafc:	44a8      	add	r8, r5
   1eafe:	6925      	ldr	r5, [r4, #16]
   1eb00:	4445      	add	r5, r8
   1eb02:	6125      	str	r5, [r4, #16]
   1eb04:	b007      	add	sp, #28
   1eb06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb0a:	2001      	movs	r0, #1
   1eb0c:	e7fa      	b.n	1eb04 <_scanf_i+0x1d0>
   1eb0e:	bf00      	nop
   1eb10:	00020a28 	.word	0x00020a28
   1eb14:	0001ec9d 	.word	0x0001ec9d
   1eb18:	0001b949 	.word	0x0001b949
   1eb1c:	00020a44 	.word	0x00020a44

0001eb20 <_read_r>:
_read_r():
   1eb20:	b538      	push	{r3, r4, r5, lr}
   1eb22:	4605      	mov	r5, r0
   1eb24:	4608      	mov	r0, r1
   1eb26:	4611      	mov	r1, r2
   1eb28:	2200      	movs	r2, #0
   1eb2a:	4c05      	ldr	r4, [pc, #20]	; (1eb40 <_read_r+0x20>)
   1eb2c:	6022      	str	r2, [r4, #0]
   1eb2e:	461a      	mov	r2, r3
   1eb30:	f7f6 f9ce 	bl	14ed0 <_read>
   1eb34:	1c43      	adds	r3, r0, #1
   1eb36:	d102      	bne.n	1eb3e <_read_r+0x1e>
   1eb38:	6823      	ldr	r3, [r4, #0]
   1eb3a:	b103      	cbz	r3, 1eb3e <_read_r+0x1e>
   1eb3c:	602b      	str	r3, [r5, #0]
   1eb3e:	bd38      	pop	{r3, r4, r5, pc}
   1eb40:	2007c7d8 	.word	0x2007c7d8

0001eb44 <__sccl>:
__sccl():
   1eb44:	b570      	push	{r4, r5, r6, lr}
   1eb46:	780b      	ldrb	r3, [r1, #0]
   1eb48:	1e44      	subs	r4, r0, #1
   1eb4a:	2b5e      	cmp	r3, #94	; 0x5e
   1eb4c:	bf13      	iteet	ne
   1eb4e:	1c4a      	addne	r2, r1, #1
   1eb50:	1c8a      	addeq	r2, r1, #2
   1eb52:	784b      	ldrbeq	r3, [r1, #1]
   1eb54:	2100      	movne	r1, #0
   1eb56:	bf08      	it	eq
   1eb58:	2101      	moveq	r1, #1
   1eb5a:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   1eb5e:	f804 1f01 	strb.w	r1, [r4, #1]!
   1eb62:	42a5      	cmp	r5, r4
   1eb64:	d1fb      	bne.n	1eb5e <__sccl+0x1a>
   1eb66:	b913      	cbnz	r3, 1eb6e <__sccl+0x2a>
   1eb68:	3a01      	subs	r2, #1
   1eb6a:	4610      	mov	r0, r2
   1eb6c:	bd70      	pop	{r4, r5, r6, pc}
   1eb6e:	f081 0401 	eor.w	r4, r1, #1
   1eb72:	4611      	mov	r1, r2
   1eb74:	54c4      	strb	r4, [r0, r3]
   1eb76:	780d      	ldrb	r5, [r1, #0]
   1eb78:	1c4a      	adds	r2, r1, #1
   1eb7a:	2d2d      	cmp	r5, #45	; 0x2d
   1eb7c:	d006      	beq.n	1eb8c <__sccl+0x48>
   1eb7e:	2d5d      	cmp	r5, #93	; 0x5d
   1eb80:	d0f3      	beq.n	1eb6a <__sccl+0x26>
   1eb82:	b90d      	cbnz	r5, 1eb88 <__sccl+0x44>
   1eb84:	460a      	mov	r2, r1
   1eb86:	e7f0      	b.n	1eb6a <__sccl+0x26>
   1eb88:	462b      	mov	r3, r5
   1eb8a:	e7f2      	b.n	1eb72 <__sccl+0x2e>
   1eb8c:	784e      	ldrb	r6, [r1, #1]
   1eb8e:	2e5d      	cmp	r6, #93	; 0x5d
   1eb90:	d0fa      	beq.n	1eb88 <__sccl+0x44>
   1eb92:	42b3      	cmp	r3, r6
   1eb94:	dcf8      	bgt.n	1eb88 <__sccl+0x44>
   1eb96:	3102      	adds	r1, #2
   1eb98:	3301      	adds	r3, #1
   1eb9a:	429e      	cmp	r6, r3
   1eb9c:	54c4      	strb	r4, [r0, r3]
   1eb9e:	dcfb      	bgt.n	1eb98 <__sccl+0x54>
   1eba0:	e7e9      	b.n	1eb76 <__sccl+0x32>

0001eba2 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   1eba2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1eba6:	4680      	mov	r8, r0
   1eba8:	4689      	mov	r9, r1
   1ebaa:	4692      	mov	sl, r2
   1ebac:	461e      	mov	r6, r3
   1ebae:	460f      	mov	r7, r1
   1ebb0:	463d      	mov	r5, r7
   1ebb2:	9808      	ldr	r0, [sp, #32]
   1ebb4:	f815 4b01 	ldrb.w	r4, [r5], #1
   1ebb8:	f7fa fa42 	bl	19040 <__locale_ctype_ptr_l>
   1ebbc:	4420      	add	r0, r4
   1ebbe:	7843      	ldrb	r3, [r0, #1]
   1ebc0:	f013 0308 	ands.w	r3, r3, #8
   1ebc4:	d10a      	bne.n	1ebdc <_strtoul_l.isra.0+0x3a>
   1ebc6:	2c2d      	cmp	r4, #45	; 0x2d
   1ebc8:	d10a      	bne.n	1ebe0 <_strtoul_l.isra.0+0x3e>
   1ebca:	2301      	movs	r3, #1
   1ebcc:	782c      	ldrb	r4, [r5, #0]
   1ebce:	1cbd      	adds	r5, r7, #2
   1ebd0:	b15e      	cbz	r6, 1ebea <_strtoul_l.isra.0+0x48>
   1ebd2:	2e10      	cmp	r6, #16
   1ebd4:	d113      	bne.n	1ebfe <_strtoul_l.isra.0+0x5c>
   1ebd6:	2c30      	cmp	r4, #48	; 0x30
   1ebd8:	d009      	beq.n	1ebee <_strtoul_l.isra.0+0x4c>
   1ebda:	e010      	b.n	1ebfe <_strtoul_l.isra.0+0x5c>
   1ebdc:	462f      	mov	r7, r5
   1ebde:	e7e7      	b.n	1ebb0 <_strtoul_l.isra.0+0xe>
   1ebe0:	2c2b      	cmp	r4, #43	; 0x2b
   1ebe2:	bf04      	itt	eq
   1ebe4:	782c      	ldrbeq	r4, [r5, #0]
   1ebe6:	1cbd      	addeq	r5, r7, #2
   1ebe8:	e7f2      	b.n	1ebd0 <_strtoul_l.isra.0+0x2e>
   1ebea:	2c30      	cmp	r4, #48	; 0x30
   1ebec:	d125      	bne.n	1ec3a <_strtoul_l.isra.0+0x98>
   1ebee:	782a      	ldrb	r2, [r5, #0]
   1ebf0:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   1ebf4:	2a58      	cmp	r2, #88	; 0x58
   1ebf6:	d14a      	bne.n	1ec8e <_strtoul_l.isra.0+0xec>
   1ebf8:	2610      	movs	r6, #16
   1ebfa:	786c      	ldrb	r4, [r5, #1]
   1ebfc:	3502      	adds	r5, #2
   1ebfe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1ec02:	fbb1 f1f6 	udiv	r1, r1, r6
   1ec06:	2700      	movs	r7, #0
   1ec08:	fb06 fe01 	mul.w	lr, r6, r1
   1ec0c:	4638      	mov	r0, r7
   1ec0e:	ea6f 0e0e 	mvn.w	lr, lr
   1ec12:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   1ec16:	2a09      	cmp	r2, #9
   1ec18:	d811      	bhi.n	1ec3e <_strtoul_l.isra.0+0x9c>
   1ec1a:	4614      	mov	r4, r2
   1ec1c:	42a6      	cmp	r6, r4
   1ec1e:	dd1d      	ble.n	1ec5c <_strtoul_l.isra.0+0xba>
   1ec20:	2f00      	cmp	r7, #0
   1ec22:	db18      	blt.n	1ec56 <_strtoul_l.isra.0+0xb4>
   1ec24:	4281      	cmp	r1, r0
   1ec26:	d316      	bcc.n	1ec56 <_strtoul_l.isra.0+0xb4>
   1ec28:	d101      	bne.n	1ec2e <_strtoul_l.isra.0+0x8c>
   1ec2a:	45a6      	cmp	lr, r4
   1ec2c:	db13      	blt.n	1ec56 <_strtoul_l.isra.0+0xb4>
   1ec2e:	2701      	movs	r7, #1
   1ec30:	fb00 4006 	mla	r0, r0, r6, r4
   1ec34:	f815 4b01 	ldrb.w	r4, [r5], #1
   1ec38:	e7eb      	b.n	1ec12 <_strtoul_l.isra.0+0x70>
   1ec3a:	260a      	movs	r6, #10
   1ec3c:	e7df      	b.n	1ebfe <_strtoul_l.isra.0+0x5c>
   1ec3e:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   1ec42:	2a19      	cmp	r2, #25
   1ec44:	d801      	bhi.n	1ec4a <_strtoul_l.isra.0+0xa8>
   1ec46:	3c37      	subs	r4, #55	; 0x37
   1ec48:	e7e8      	b.n	1ec1c <_strtoul_l.isra.0+0x7a>
   1ec4a:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   1ec4e:	2a19      	cmp	r2, #25
   1ec50:	d804      	bhi.n	1ec5c <_strtoul_l.isra.0+0xba>
   1ec52:	3c57      	subs	r4, #87	; 0x57
   1ec54:	e7e2      	b.n	1ec1c <_strtoul_l.isra.0+0x7a>
   1ec56:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1ec5a:	e7eb      	b.n	1ec34 <_strtoul_l.isra.0+0x92>
   1ec5c:	2f00      	cmp	r7, #0
   1ec5e:	da09      	bge.n	1ec74 <_strtoul_l.isra.0+0xd2>
   1ec60:	2322      	movs	r3, #34	; 0x22
   1ec62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ec66:	f8c8 3000 	str.w	r3, [r8]
   1ec6a:	f1ba 0f00 	cmp.w	sl, #0
   1ec6e:	d107      	bne.n	1ec80 <_strtoul_l.isra.0+0xde>
   1ec70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ec74:	b103      	cbz	r3, 1ec78 <_strtoul_l.isra.0+0xd6>
   1ec76:	4240      	negs	r0, r0
   1ec78:	f1ba 0f00 	cmp.w	sl, #0
   1ec7c:	d00c      	beq.n	1ec98 <_strtoul_l.isra.0+0xf6>
   1ec7e:	b127      	cbz	r7, 1ec8a <_strtoul_l.isra.0+0xe8>
   1ec80:	3d01      	subs	r5, #1
   1ec82:	f8ca 5000 	str.w	r5, [sl]
   1ec86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ec8a:	464d      	mov	r5, r9
   1ec8c:	e7f9      	b.n	1ec82 <_strtoul_l.isra.0+0xe0>
   1ec8e:	2430      	movs	r4, #48	; 0x30
   1ec90:	2e00      	cmp	r6, #0
   1ec92:	d1b4      	bne.n	1ebfe <_strtoul_l.isra.0+0x5c>
   1ec94:	2608      	movs	r6, #8
   1ec96:	e7b2      	b.n	1ebfe <_strtoul_l.isra.0+0x5c>
   1ec98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001ec9c <_strtoul_r>:
_strtoul_r():
   1ec9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1ec9e:	4c06      	ldr	r4, [pc, #24]	; (1ecb8 <_strtoul_r+0x1c>)
   1eca0:	4d06      	ldr	r5, [pc, #24]	; (1ecbc <_strtoul_r+0x20>)
   1eca2:	6824      	ldr	r4, [r4, #0]
   1eca4:	6a24      	ldr	r4, [r4, #32]
   1eca6:	2c00      	cmp	r4, #0
   1eca8:	bf08      	it	eq
   1ecaa:	462c      	moveq	r4, r5
   1ecac:	9400      	str	r4, [sp, #0]
   1ecae:	f7ff ff78 	bl	1eba2 <_strtoul_l.isra.0>
   1ecb2:	b003      	add	sp, #12
   1ecb4:	bd30      	pop	{r4, r5, pc}
   1ecb6:	bf00      	nop
   1ecb8:	2007c0e0 	.word	0x2007c0e0
   1ecbc:	2007c144 	.word	0x2007c144

0001ecc0 <strtoul>:
strtoul():
   1ecc0:	4b08      	ldr	r3, [pc, #32]	; (1ece4 <strtoul+0x24>)
   1ecc2:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1ecc4:	681c      	ldr	r4, [r3, #0]
   1ecc6:	4d08      	ldr	r5, [pc, #32]	; (1ece8 <strtoul+0x28>)
   1ecc8:	6a23      	ldr	r3, [r4, #32]
   1ecca:	2b00      	cmp	r3, #0
   1eccc:	bf08      	it	eq
   1ecce:	462b      	moveq	r3, r5
   1ecd0:	9300      	str	r3, [sp, #0]
   1ecd2:	4613      	mov	r3, r2
   1ecd4:	460a      	mov	r2, r1
   1ecd6:	4601      	mov	r1, r0
   1ecd8:	4620      	mov	r0, r4
   1ecda:	f7ff ff62 	bl	1eba2 <_strtoul_l.isra.0>
   1ecde:	b003      	add	sp, #12
   1ece0:	bd30      	pop	{r4, r5, pc}
   1ece2:	bf00      	nop
   1ece4:	2007c0e0 	.word	0x2007c0e0
   1ece8:	2007c144 	.word	0x2007c144

0001ecec <__submore>:
__submore():
   1ecec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ecf0:	460c      	mov	r4, r1
   1ecf2:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1ecf4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ecf8:	4299      	cmp	r1, r3
   1ecfa:	d11c      	bne.n	1ed36 <__submore+0x4a>
   1ecfc:	f44f 6180 	mov.w	r1, #1024	; 0x400
   1ed00:	f7fa fd72 	bl	197e8 <_malloc_r>
   1ed04:	b918      	cbnz	r0, 1ed0e <__submore+0x22>
   1ed06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ed0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ed0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1ed12:	63a3      	str	r3, [r4, #56]	; 0x38
   1ed14:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   1ed18:	6360      	str	r0, [r4, #52]	; 0x34
   1ed1a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   1ed1e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   1ed22:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   1ed26:	7043      	strb	r3, [r0, #1]
   1ed28:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1ed2c:	7003      	strb	r3, [r0, #0]
   1ed2e:	6020      	str	r0, [r4, #0]
   1ed30:	2000      	movs	r0, #0
   1ed32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ed36:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   1ed38:	0077      	lsls	r7, r6, #1
   1ed3a:	463a      	mov	r2, r7
   1ed3c:	f7fe ffb8 	bl	1dcb0 <_realloc_r>
   1ed40:	4605      	mov	r5, r0
   1ed42:	2800      	cmp	r0, #0
   1ed44:	d0df      	beq.n	1ed06 <__submore+0x1a>
   1ed46:	eb00 0806 	add.w	r8, r0, r6
   1ed4a:	4601      	mov	r1, r0
   1ed4c:	4632      	mov	r2, r6
   1ed4e:	4640      	mov	r0, r8
   1ed50:	f7fa fa2b 	bl	191aa <memcpy>
   1ed54:	f8c4 8000 	str.w	r8, [r4]
   1ed58:	6365      	str	r5, [r4, #52]	; 0x34
   1ed5a:	63a7      	str	r7, [r4, #56]	; 0x38
   1ed5c:	e7e8      	b.n	1ed30 <__submore+0x44>
   1ed5e:	Address 0x000000000001ed5e is out of bounds.


0001ed60 <_ungetc_r>:
_ungetc_r():
   1ed60:	1c4b      	adds	r3, r1, #1
   1ed62:	b570      	push	{r4, r5, r6, lr}
   1ed64:	4606      	mov	r6, r0
   1ed66:	460d      	mov	r5, r1
   1ed68:	4614      	mov	r4, r2
   1ed6a:	d103      	bne.n	1ed74 <_ungetc_r+0x14>
   1ed6c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1ed70:	4628      	mov	r0, r5
   1ed72:	bd70      	pop	{r4, r5, r6, pc}
   1ed74:	b118      	cbz	r0, 1ed7e <_ungetc_r+0x1e>
   1ed76:	6983      	ldr	r3, [r0, #24]
   1ed78:	b90b      	cbnz	r3, 1ed7e <_ungetc_r+0x1e>
   1ed7a:	f7fa f897 	bl	18eac <__sinit>
   1ed7e:	4b2e      	ldr	r3, [pc, #184]	; (1ee38 <_ungetc_r+0xd8>)
   1ed80:	429c      	cmp	r4, r3
   1ed82:	d12c      	bne.n	1edde <_ungetc_r+0x7e>
   1ed84:	6874      	ldr	r4, [r6, #4]
   1ed86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1ed8a:	f023 0320 	bic.w	r3, r3, #32
   1ed8e:	81a3      	strh	r3, [r4, #12]
   1ed90:	b29b      	uxth	r3, r3
   1ed92:	0759      	lsls	r1, r3, #29
   1ed94:	d413      	bmi.n	1edbe <_ungetc_r+0x5e>
   1ed96:	06da      	lsls	r2, r3, #27
   1ed98:	d5e8      	bpl.n	1ed6c <_ungetc_r+0xc>
   1ed9a:	071b      	lsls	r3, r3, #28
   1ed9c:	d50b      	bpl.n	1edb6 <_ungetc_r+0x56>
   1ed9e:	4621      	mov	r1, r4
   1eda0:	4630      	mov	r0, r6
   1eda2:	f7fa f807 	bl	18db4 <_fflush_r>
   1eda6:	2800      	cmp	r0, #0
   1eda8:	d1e0      	bne.n	1ed6c <_ungetc_r+0xc>
   1edaa:	89a3      	ldrh	r3, [r4, #12]
   1edac:	60a0      	str	r0, [r4, #8]
   1edae:	f023 0308 	bic.w	r3, r3, #8
   1edb2:	81a3      	strh	r3, [r4, #12]
   1edb4:	61a0      	str	r0, [r4, #24]
   1edb6:	89a3      	ldrh	r3, [r4, #12]
   1edb8:	f043 0304 	orr.w	r3, r3, #4
   1edbc:	81a3      	strh	r3, [r4, #12]
   1edbe:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1edc0:	b2ed      	uxtb	r5, r5
   1edc2:	6862      	ldr	r2, [r4, #4]
   1edc4:	b1e3      	cbz	r3, 1ee00 <_ungetc_r+0xa0>
   1edc6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1edc8:	429a      	cmp	r2, r3
   1edca:	da12      	bge.n	1edf2 <_ungetc_r+0x92>
   1edcc:	6823      	ldr	r3, [r4, #0]
   1edce:	1e5a      	subs	r2, r3, #1
   1edd0:	6022      	str	r2, [r4, #0]
   1edd2:	f803 5c01 	strb.w	r5, [r3, #-1]
   1edd6:	6863      	ldr	r3, [r4, #4]
   1edd8:	3301      	adds	r3, #1
   1edda:	6063      	str	r3, [r4, #4]
   1eddc:	e7c8      	b.n	1ed70 <_ungetc_r+0x10>
   1edde:	4b17      	ldr	r3, [pc, #92]	; (1ee3c <_ungetc_r+0xdc>)
   1ede0:	429c      	cmp	r4, r3
   1ede2:	d101      	bne.n	1ede8 <_ungetc_r+0x88>
   1ede4:	68b4      	ldr	r4, [r6, #8]
   1ede6:	e7ce      	b.n	1ed86 <_ungetc_r+0x26>
   1ede8:	4b15      	ldr	r3, [pc, #84]	; (1ee40 <_ungetc_r+0xe0>)
   1edea:	429c      	cmp	r4, r3
   1edec:	bf08      	it	eq
   1edee:	68f4      	ldreq	r4, [r6, #12]
   1edf0:	e7c9      	b.n	1ed86 <_ungetc_r+0x26>
   1edf2:	4621      	mov	r1, r4
   1edf4:	4630      	mov	r0, r6
   1edf6:	f7ff ff79 	bl	1ecec <__submore>
   1edfa:	2800      	cmp	r0, #0
   1edfc:	d0e6      	beq.n	1edcc <_ungetc_r+0x6c>
   1edfe:	e7b5      	b.n	1ed6c <_ungetc_r+0xc>
   1ee00:	6921      	ldr	r1, [r4, #16]
   1ee02:	6823      	ldr	r3, [r4, #0]
   1ee04:	b151      	cbz	r1, 1ee1c <_ungetc_r+0xbc>
   1ee06:	4299      	cmp	r1, r3
   1ee08:	d208      	bcs.n	1ee1c <_ungetc_r+0xbc>
   1ee0a:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1ee0e:	428d      	cmp	r5, r1
   1ee10:	d104      	bne.n	1ee1c <_ungetc_r+0xbc>
   1ee12:	3b01      	subs	r3, #1
   1ee14:	3201      	adds	r2, #1
   1ee16:	6023      	str	r3, [r4, #0]
   1ee18:	6062      	str	r2, [r4, #4]
   1ee1a:	e7a9      	b.n	1ed70 <_ungetc_r+0x10>
   1ee1c:	63e3      	str	r3, [r4, #60]	; 0x3c
   1ee1e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ee22:	6363      	str	r3, [r4, #52]	; 0x34
   1ee24:	2303      	movs	r3, #3
   1ee26:	63a3      	str	r3, [r4, #56]	; 0x38
   1ee28:	4623      	mov	r3, r4
   1ee2a:	6422      	str	r2, [r4, #64]	; 0x40
   1ee2c:	f803 5f46 	strb.w	r5, [r3, #70]!
   1ee30:	6023      	str	r3, [r4, #0]
   1ee32:	2301      	movs	r3, #1
   1ee34:	e7d1      	b.n	1edda <_ungetc_r+0x7a>
   1ee36:	bf00      	nop
   1ee38:	00020634 	.word	0x00020634
   1ee3c:	00020654 	.word	0x00020654
   1ee40:	00020614 	.word	0x00020614

0001ee44 <__env_lock>:
__env_lock():
   1ee44:	4770      	bx	lr

0001ee46 <__env_unlock>:
__env_unlock():
   1ee46:	4770      	bx	lr

0001ee48 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   1ee48:	f851 0c04 	ldr.w	r0, [r1, #-4]
   1ee4c:	2800      	cmp	r0, #0
   1ee4e:	f1a0 0004 	sub.w	r0, r0, #4
   1ee52:	bfbc      	itt	lt
   1ee54:	580b      	ldrlt	r3, [r1, r0]
   1ee56:	18c0      	addlt	r0, r0, r3
   1ee58:	4770      	bx	lr
   1ee5a:	Address 0x000000000001ee5a is out of bounds.


0001ee5c <__aeabi_dmul>:
__muldf3():
   1ee5c:	b570      	push	{r4, r5, r6, lr}
   1ee5e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1ee62:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1ee66:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1ee6a:	bf1d      	ittte	ne
   1ee6c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1ee70:	ea94 0f0c 	teqne	r4, ip
   1ee74:	ea95 0f0c 	teqne	r5, ip
   1ee78:	f000 f8de 	bleq	1f038 <__aeabi_dmul+0x1dc>
   1ee7c:	442c      	add	r4, r5
   1ee7e:	ea81 0603 	eor.w	r6, r1, r3
   1ee82:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1ee86:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1ee8a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1ee8e:	bf18      	it	ne
   1ee90:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1ee94:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ee98:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1ee9c:	d038      	beq.n	1ef10 <__aeabi_dmul+0xb4>
   1ee9e:	fba0 ce02 	umull	ip, lr, r0, r2
   1eea2:	f04f 0500 	mov.w	r5, #0
   1eea6:	fbe1 e502 	umlal	lr, r5, r1, r2
   1eeaa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1eeae:	fbe0 e503 	umlal	lr, r5, r0, r3
   1eeb2:	f04f 0600 	mov.w	r6, #0
   1eeb6:	fbe1 5603 	umlal	r5, r6, r1, r3
   1eeba:	f09c 0f00 	teq	ip, #0
   1eebe:	bf18      	it	ne
   1eec0:	f04e 0e01 	orrne.w	lr, lr, #1
   1eec4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1eec8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1eecc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1eed0:	d204      	bcs.n	1eedc <__aeabi_dmul+0x80>
   1eed2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1eed6:	416d      	adcs	r5, r5
   1eed8:	eb46 0606 	adc.w	r6, r6, r6
   1eedc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1eee0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1eee4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1eee8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1eeec:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1eef0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1eef4:	bf88      	it	hi
   1eef6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1eefa:	d81e      	bhi.n	1ef3a <__aeabi_dmul+0xde>
   1eefc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1ef00:	bf08      	it	eq
   1ef02:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1ef06:	f150 0000 	adcs.w	r0, r0, #0
   1ef0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1ef0e:	bd70      	pop	{r4, r5, r6, pc}
   1ef10:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1ef14:	ea46 0101 	orr.w	r1, r6, r1
   1ef18:	ea40 0002 	orr.w	r0, r0, r2
   1ef1c:	ea81 0103 	eor.w	r1, r1, r3
   1ef20:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1ef24:	bfc2      	ittt	gt
   1ef26:	ebd4 050c 	rsbsgt	r5, r4, ip
   1ef2a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1ef2e:	bd70      	popgt	{r4, r5, r6, pc}
   1ef30:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1ef34:	f04f 0e00 	mov.w	lr, #0
   1ef38:	3c01      	subs	r4, #1
   1ef3a:	f300 80ab 	bgt.w	1f094 <__aeabi_dmul+0x238>
   1ef3e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1ef42:	bfde      	ittt	le
   1ef44:	2000      	movle	r0, #0
   1ef46:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1ef4a:	bd70      	pople	{r4, r5, r6, pc}
   1ef4c:	f1c4 0400 	rsb	r4, r4, #0
   1ef50:	3c20      	subs	r4, #32
   1ef52:	da35      	bge.n	1efc0 <__aeabi_dmul+0x164>
   1ef54:	340c      	adds	r4, #12
   1ef56:	dc1b      	bgt.n	1ef90 <__aeabi_dmul+0x134>
   1ef58:	f104 0414 	add.w	r4, r4, #20
   1ef5c:	f1c4 0520 	rsb	r5, r4, #32
   1ef60:	fa00 f305 	lsl.w	r3, r0, r5
   1ef64:	fa20 f004 	lsr.w	r0, r0, r4
   1ef68:	fa01 f205 	lsl.w	r2, r1, r5
   1ef6c:	ea40 0002 	orr.w	r0, r0, r2
   1ef70:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1ef74:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1ef78:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1ef7c:	fa21 f604 	lsr.w	r6, r1, r4
   1ef80:	eb42 0106 	adc.w	r1, r2, r6
   1ef84:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1ef88:	bf08      	it	eq
   1ef8a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1ef8e:	bd70      	pop	{r4, r5, r6, pc}
   1ef90:	f1c4 040c 	rsb	r4, r4, #12
   1ef94:	f1c4 0520 	rsb	r5, r4, #32
   1ef98:	fa00 f304 	lsl.w	r3, r0, r4
   1ef9c:	fa20 f005 	lsr.w	r0, r0, r5
   1efa0:	fa01 f204 	lsl.w	r2, r1, r4
   1efa4:	ea40 0002 	orr.w	r0, r0, r2
   1efa8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1efac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1efb0:	f141 0100 	adc.w	r1, r1, #0
   1efb4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1efb8:	bf08      	it	eq
   1efba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1efbe:	bd70      	pop	{r4, r5, r6, pc}
   1efc0:	f1c4 0520 	rsb	r5, r4, #32
   1efc4:	fa00 f205 	lsl.w	r2, r0, r5
   1efc8:	ea4e 0e02 	orr.w	lr, lr, r2
   1efcc:	fa20 f304 	lsr.w	r3, r0, r4
   1efd0:	fa01 f205 	lsl.w	r2, r1, r5
   1efd4:	ea43 0302 	orr.w	r3, r3, r2
   1efd8:	fa21 f004 	lsr.w	r0, r1, r4
   1efdc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1efe0:	fa21 f204 	lsr.w	r2, r1, r4
   1efe4:	ea20 0002 	bic.w	r0, r0, r2
   1efe8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1efec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1eff0:	bf08      	it	eq
   1eff2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1eff6:	bd70      	pop	{r4, r5, r6, pc}
   1eff8:	f094 0f00 	teq	r4, #0
   1effc:	d10f      	bne.n	1f01e <__aeabi_dmul+0x1c2>
   1effe:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1f002:	0040      	lsls	r0, r0, #1
   1f004:	eb41 0101 	adc.w	r1, r1, r1
   1f008:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1f00c:	bf08      	it	eq
   1f00e:	3c01      	subeq	r4, #1
   1f010:	d0f7      	beq.n	1f002 <__aeabi_dmul+0x1a6>
   1f012:	ea41 0106 	orr.w	r1, r1, r6
   1f016:	f095 0f00 	teq	r5, #0
   1f01a:	bf18      	it	ne
   1f01c:	4770      	bxne	lr
   1f01e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1f022:	0052      	lsls	r2, r2, #1
   1f024:	eb43 0303 	adc.w	r3, r3, r3
   1f028:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1f02c:	bf08      	it	eq
   1f02e:	3d01      	subeq	r5, #1
   1f030:	d0f7      	beq.n	1f022 <__aeabi_dmul+0x1c6>
   1f032:	ea43 0306 	orr.w	r3, r3, r6
   1f036:	4770      	bx	lr
   1f038:	ea94 0f0c 	teq	r4, ip
   1f03c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1f040:	bf18      	it	ne
   1f042:	ea95 0f0c 	teqne	r5, ip
   1f046:	d00c      	beq.n	1f062 <__aeabi_dmul+0x206>
   1f048:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1f04c:	bf18      	it	ne
   1f04e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1f052:	d1d1      	bne.n	1eff8 <__aeabi_dmul+0x19c>
   1f054:	ea81 0103 	eor.w	r1, r1, r3
   1f058:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1f05c:	f04f 0000 	mov.w	r0, #0
   1f060:	bd70      	pop	{r4, r5, r6, pc}
   1f062:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1f066:	bf06      	itte	eq
   1f068:	4610      	moveq	r0, r2
   1f06a:	4619      	moveq	r1, r3
   1f06c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1f070:	d019      	beq.n	1f0a6 <__aeabi_dmul+0x24a>
   1f072:	ea94 0f0c 	teq	r4, ip
   1f076:	d102      	bne.n	1f07e <__aeabi_dmul+0x222>
   1f078:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1f07c:	d113      	bne.n	1f0a6 <__aeabi_dmul+0x24a>
   1f07e:	ea95 0f0c 	teq	r5, ip
   1f082:	d105      	bne.n	1f090 <__aeabi_dmul+0x234>
   1f084:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1f088:	bf1c      	itt	ne
   1f08a:	4610      	movne	r0, r2
   1f08c:	4619      	movne	r1, r3
   1f08e:	d10a      	bne.n	1f0a6 <__aeabi_dmul+0x24a>
   1f090:	ea81 0103 	eor.w	r1, r1, r3
   1f094:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1f098:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1f09c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1f0a0:	f04f 0000 	mov.w	r0, #0
   1f0a4:	bd70      	pop	{r4, r5, r6, pc}
   1f0a6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1f0aa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1f0ae:	bd70      	pop	{r4, r5, r6, pc}

0001f0b0 <__aeabi_ddiv>:
__divdf3():
   1f0b0:	b570      	push	{r4, r5, r6, lr}
   1f0b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1f0b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1f0ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1f0be:	bf1d      	ittte	ne
   1f0c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1f0c4:	ea94 0f0c 	teqne	r4, ip
   1f0c8:	ea95 0f0c 	teqne	r5, ip
   1f0cc:	f000 f8a7 	bleq	1f21e <__aeabi_ddiv+0x16e>
   1f0d0:	eba4 0405 	sub.w	r4, r4, r5
   1f0d4:	ea81 0e03 	eor.w	lr, r1, r3
   1f0d8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1f0dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1f0e0:	f000 8088 	beq.w	1f1f4 <__aeabi_ddiv+0x144>
   1f0e4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1f0e8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1f0ec:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1f0f0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1f0f4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1f0f8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1f0fc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1f100:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1f104:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1f108:	429d      	cmp	r5, r3
   1f10a:	bf08      	it	eq
   1f10c:	4296      	cmpeq	r6, r2
   1f10e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1f112:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1f116:	d202      	bcs.n	1f11e <__aeabi_ddiv+0x6e>
   1f118:	085b      	lsrs	r3, r3, #1
   1f11a:	ea4f 0232 	mov.w	r2, r2, rrx
   1f11e:	1ab6      	subs	r6, r6, r2
   1f120:	eb65 0503 	sbc.w	r5, r5, r3
   1f124:	085b      	lsrs	r3, r3, #1
   1f126:	ea4f 0232 	mov.w	r2, r2, rrx
   1f12a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1f12e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1f132:	ebb6 0e02 	subs.w	lr, r6, r2
   1f136:	eb75 0e03 	sbcs.w	lr, r5, r3
   1f13a:	bf22      	ittt	cs
   1f13c:	1ab6      	subcs	r6, r6, r2
   1f13e:	4675      	movcs	r5, lr
   1f140:	ea40 000c 	orrcs.w	r0, r0, ip
   1f144:	085b      	lsrs	r3, r3, #1
   1f146:	ea4f 0232 	mov.w	r2, r2, rrx
   1f14a:	ebb6 0e02 	subs.w	lr, r6, r2
   1f14e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1f152:	bf22      	ittt	cs
   1f154:	1ab6      	subcs	r6, r6, r2
   1f156:	4675      	movcs	r5, lr
   1f158:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1f15c:	085b      	lsrs	r3, r3, #1
   1f15e:	ea4f 0232 	mov.w	r2, r2, rrx
   1f162:	ebb6 0e02 	subs.w	lr, r6, r2
   1f166:	eb75 0e03 	sbcs.w	lr, r5, r3
   1f16a:	bf22      	ittt	cs
   1f16c:	1ab6      	subcs	r6, r6, r2
   1f16e:	4675      	movcs	r5, lr
   1f170:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1f174:	085b      	lsrs	r3, r3, #1
   1f176:	ea4f 0232 	mov.w	r2, r2, rrx
   1f17a:	ebb6 0e02 	subs.w	lr, r6, r2
   1f17e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1f182:	bf22      	ittt	cs
   1f184:	1ab6      	subcs	r6, r6, r2
   1f186:	4675      	movcs	r5, lr
   1f188:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1f18c:	ea55 0e06 	orrs.w	lr, r5, r6
   1f190:	d018      	beq.n	1f1c4 <__aeabi_ddiv+0x114>
   1f192:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1f196:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1f19a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1f19e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1f1a2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1f1a6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1f1aa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1f1ae:	d1c0      	bne.n	1f132 <__aeabi_ddiv+0x82>
   1f1b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1f1b4:	d10b      	bne.n	1f1ce <__aeabi_ddiv+0x11e>
   1f1b6:	ea41 0100 	orr.w	r1, r1, r0
   1f1ba:	f04f 0000 	mov.w	r0, #0
   1f1be:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1f1c2:	e7b6      	b.n	1f132 <__aeabi_ddiv+0x82>
   1f1c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1f1c8:	bf04      	itt	eq
   1f1ca:	4301      	orreq	r1, r0
   1f1cc:	2000      	moveq	r0, #0
   1f1ce:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1f1d2:	bf88      	it	hi
   1f1d4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1f1d8:	f63f aeaf 	bhi.w	1ef3a <__aeabi_dmul+0xde>
   1f1dc:	ebb5 0c03 	subs.w	ip, r5, r3
   1f1e0:	bf04      	itt	eq
   1f1e2:	ebb6 0c02 	subseq.w	ip, r6, r2
   1f1e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1f1ea:	f150 0000 	adcs.w	r0, r0, #0
   1f1ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1f1f2:	bd70      	pop	{r4, r5, r6, pc}
   1f1f4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1f1f8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1f1fc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1f200:	bfc2      	ittt	gt
   1f202:	ebd4 050c 	rsbsgt	r5, r4, ip
   1f206:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1f20a:	bd70      	popgt	{r4, r5, r6, pc}
   1f20c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1f210:	f04f 0e00 	mov.w	lr, #0
   1f214:	3c01      	subs	r4, #1
   1f216:	e690      	b.n	1ef3a <__aeabi_dmul+0xde>
   1f218:	ea45 0e06 	orr.w	lr, r5, r6
   1f21c:	e68d      	b.n	1ef3a <__aeabi_dmul+0xde>
   1f21e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1f222:	ea94 0f0c 	teq	r4, ip
   1f226:	bf08      	it	eq
   1f228:	ea95 0f0c 	teqeq	r5, ip
   1f22c:	f43f af3b 	beq.w	1f0a6 <__aeabi_dmul+0x24a>
   1f230:	ea94 0f0c 	teq	r4, ip
   1f234:	d10a      	bne.n	1f24c <__aeabi_ddiv+0x19c>
   1f236:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1f23a:	f47f af34 	bne.w	1f0a6 <__aeabi_dmul+0x24a>
   1f23e:	ea95 0f0c 	teq	r5, ip
   1f242:	f47f af25 	bne.w	1f090 <__aeabi_dmul+0x234>
   1f246:	4610      	mov	r0, r2
   1f248:	4619      	mov	r1, r3
   1f24a:	e72c      	b.n	1f0a6 <__aeabi_dmul+0x24a>
   1f24c:	ea95 0f0c 	teq	r5, ip
   1f250:	d106      	bne.n	1f260 <__aeabi_ddiv+0x1b0>
   1f252:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1f256:	f43f aefd 	beq.w	1f054 <__aeabi_dmul+0x1f8>
   1f25a:	4610      	mov	r0, r2
   1f25c:	4619      	mov	r1, r3
   1f25e:	e722      	b.n	1f0a6 <__aeabi_dmul+0x24a>
   1f260:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1f264:	bf18      	it	ne
   1f266:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1f26a:	f47f aec5 	bne.w	1eff8 <__aeabi_dmul+0x19c>
   1f26e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1f272:	f47f af0d 	bne.w	1f090 <__aeabi_dmul+0x234>
   1f276:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1f27a:	f47f aeeb 	bne.w	1f054 <__aeabi_dmul+0x1f8>
   1f27e:	e712      	b.n	1f0a6 <__aeabi_dmul+0x24a>

0001f280 <__gedf2>:
__gedf2():
   1f280:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   1f284:	e006      	b.n	1f294 <__cmpdf2+0x4>
   1f286:	bf00      	nop

0001f288 <__ledf2>:
__ledf2():
   1f288:	f04f 0c01 	mov.w	ip, #1
   1f28c:	e002      	b.n	1f294 <__cmpdf2+0x4>
   1f28e:	bf00      	nop

0001f290 <__cmpdf2>:
__nedf2():
   1f290:	f04f 0c01 	mov.w	ip, #1
   1f294:	f84d cd04 	str.w	ip, [sp, #-4]!
   1f298:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1f29c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f2a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1f2a4:	bf18      	it	ne
   1f2a6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   1f2aa:	d01b      	beq.n	1f2e4 <__cmpdf2+0x54>
   1f2ac:	b001      	add	sp, #4
   1f2ae:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   1f2b2:	bf0c      	ite	eq
   1f2b4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   1f2b8:	ea91 0f03 	teqne	r1, r3
   1f2bc:	bf02      	ittt	eq
   1f2be:	ea90 0f02 	teqeq	r0, r2
   1f2c2:	2000      	moveq	r0, #0
   1f2c4:	4770      	bxeq	lr
   1f2c6:	f110 0f00 	cmn.w	r0, #0
   1f2ca:	ea91 0f03 	teq	r1, r3
   1f2ce:	bf58      	it	pl
   1f2d0:	4299      	cmppl	r1, r3
   1f2d2:	bf08      	it	eq
   1f2d4:	4290      	cmpeq	r0, r2
   1f2d6:	bf2c      	ite	cs
   1f2d8:	17d8      	asrcs	r0, r3, #31
   1f2da:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   1f2de:	f040 0001 	orr.w	r0, r0, #1
   1f2e2:	4770      	bx	lr
   1f2e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1f2e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f2ec:	d102      	bne.n	1f2f4 <__cmpdf2+0x64>
   1f2ee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1f2f2:	d107      	bne.n	1f304 <__cmpdf2+0x74>
   1f2f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1f2f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f2fc:	d1d6      	bne.n	1f2ac <__cmpdf2+0x1c>
   1f2fe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1f302:	d0d3      	beq.n	1f2ac <__cmpdf2+0x1c>
   1f304:	f85d 0b04 	ldr.w	r0, [sp], #4
   1f308:	4770      	bx	lr
   1f30a:	bf00      	nop

0001f30c <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   1f30c:	4684      	mov	ip, r0
   1f30e:	4610      	mov	r0, r2
   1f310:	4662      	mov	r2, ip
   1f312:	468c      	mov	ip, r1
   1f314:	4619      	mov	r1, r3
   1f316:	4663      	mov	r3, ip
   1f318:	e000      	b.n	1f31c <__aeabi_cdcmpeq>
   1f31a:	bf00      	nop

0001f31c <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   1f31c:	b501      	push	{r0, lr}
   1f31e:	f7ff ffb7 	bl	1f290 <__cmpdf2>
   1f322:	2800      	cmp	r0, #0
   1f324:	bf48      	it	mi
   1f326:	f110 0f00 	cmnmi.w	r0, #0
   1f32a:	bd01      	pop	{r0, pc}

0001f32c <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   1f32c:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f330:	f7ff fff4 	bl	1f31c <__aeabi_cdcmpeq>
   1f334:	bf0c      	ite	eq
   1f336:	2001      	moveq	r0, #1
   1f338:	2000      	movne	r0, #0
   1f33a:	f85d fb08 	ldr.w	pc, [sp], #8
   1f33e:	bf00      	nop

0001f340 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   1f340:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f344:	f7ff ffea 	bl	1f31c <__aeabi_cdcmpeq>
   1f348:	bf34      	ite	cc
   1f34a:	2001      	movcc	r0, #1
   1f34c:	2000      	movcs	r0, #0
   1f34e:	f85d fb08 	ldr.w	pc, [sp], #8
   1f352:	bf00      	nop

0001f354 <__aeabi_dcmple>:
__aeabi_dcmple():
   1f354:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f358:	f7ff ffe0 	bl	1f31c <__aeabi_cdcmpeq>
   1f35c:	bf94      	ite	ls
   1f35e:	2001      	movls	r0, #1
   1f360:	2000      	movhi	r0, #0
   1f362:	f85d fb08 	ldr.w	pc, [sp], #8
   1f366:	bf00      	nop

0001f368 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   1f368:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f36c:	f7ff ffce 	bl	1f30c <__aeabi_cdrcmple>
   1f370:	bf94      	ite	ls
   1f372:	2001      	movls	r0, #1
   1f374:	2000      	movhi	r0, #0
   1f376:	f85d fb08 	ldr.w	pc, [sp], #8
   1f37a:	bf00      	nop

0001f37c <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   1f37c:	f84d ed08 	str.w	lr, [sp, #-8]!
   1f380:	f7ff ffc4 	bl	1f30c <__aeabi_cdrcmple>
   1f384:	bf34      	ite	cc
   1f386:	2001      	movcc	r0, #1
   1f388:	2000      	movcs	r0, #0
   1f38a:	f85d fb08 	ldr.w	pc, [sp], #8
   1f38e:	bf00      	nop

0001f390 <__aeabi_dcmpun>:
__unorddf2():
   1f390:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1f394:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f398:	d102      	bne.n	1f3a0 <__aeabi_dcmpun+0x10>
   1f39a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1f39e:	d10a      	bne.n	1f3b6 <__aeabi_dcmpun+0x26>
   1f3a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1f3a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1f3a8:	d102      	bne.n	1f3b0 <__aeabi_dcmpun+0x20>
   1f3aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1f3ae:	d102      	bne.n	1f3b6 <__aeabi_dcmpun+0x26>
   1f3b0:	f04f 0000 	mov.w	r0, #0
   1f3b4:	4770      	bx	lr
   1f3b6:	f04f 0001 	mov.w	r0, #1
   1f3ba:	4770      	bx	lr

0001f3bc <__aeabi_d2iz>:
__aeabi_d2iz():
   1f3bc:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1f3c0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1f3c4:	d215      	bcs.n	1f3f2 <__aeabi_d2iz+0x36>
   1f3c6:	d511      	bpl.n	1f3ec <__aeabi_d2iz+0x30>
   1f3c8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1f3cc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1f3d0:	d912      	bls.n	1f3f8 <__aeabi_d2iz+0x3c>
   1f3d2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1f3d6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1f3da:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1f3de:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1f3e2:	fa23 f002 	lsr.w	r0, r3, r2
   1f3e6:	bf18      	it	ne
   1f3e8:	4240      	negne	r0, r0
   1f3ea:	4770      	bx	lr
   1f3ec:	f04f 0000 	mov.w	r0, #0
   1f3f0:	4770      	bx	lr
   1f3f2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1f3f6:	d105      	bne.n	1f404 <__aeabi_d2iz+0x48>
   1f3f8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   1f3fc:	bf08      	it	eq
   1f3fe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1f402:	4770      	bx	lr
   1f404:	f04f 0000 	mov.w	r0, #0
   1f408:	4770      	bx	lr
   1f40a:	bf00      	nop
   1f40c:	74737953 	.word	0x74737953
   1f410:	50206d65 	.word	0x50206d65
   1f414:	7265776f 	.word	0x7265776f
   1f418:	3a6e6f2d 	.word	0x3a6e6f2d
   1f41c:	6f6f4220 	.word	0x6f6f4220
   1f420:	676e6974 	.word	0x676e6974
   1f424:	2e2e2e20 	.word	0x2e2e2e20
   1f428:	73795300 	.word	0x73795300
   1f42c:	206d6574 	.word	0x206d6574
   1f430:	73617243 	.word	0x73617243
   1f434:	52203a68 	.word	0x52203a68
   1f438:	6f622d65 	.word	0x6f622d65
   1f43c:	6e69746f 	.word	0x6e69746f
   1f440:	2e2e2067 	.word	0x2e2e2067
   1f444:	6157002e 	.word	0x6157002e
   1f448:	64686374 	.word	0x64686374
   1f44c:	5320676f 	.word	0x5320676f
   1f450:	65747379 	.word	0x65747379
   1f454:	6552206d 	.word	0x6552206d
   1f458:	3a746573 	.word	0x3a746573
   1f45c:	6f6f4220 	.word	0x6f6f4220
   1f460:	676e6974 	.word	0x676e6974
   1f464:	2e2e2e20 	.word	0x2e2e2e20
   1f468:	00          	.byte	0x00
   1f469:	55          	.byte	0x55
   1f46a:	656e      	.short	0x656e
   1f46c:	63657078 	.word	0x63657078
   1f470:	20646574 	.word	0x20646574
   1f474:	20525349 	.word	0x20525349
   1f478:	6c6c6163 	.word	0x6c6c6163
   1f47c:	20746120 	.word	0x20746120
   1f480:	5f63706c 	.word	0x5f63706c
   1f484:	2e737973 	.word	0x2e737973
   1f488:	0063      	.short	0x0063
   1f48a:	654d      	.short	0x654d
   1f48c:	79726f6d 	.word	0x79726f6d
   1f490:	666e4920 	.word	0x666e4920
   1f494:	616d726f 	.word	0x616d726f
   1f498:	6e6f6974 	.word	0x6e6f6974
   1f49c:	6c470a3a 	.word	0x6c470a3a
   1f4a0:	6c61626f 	.word	0x6c61626f
   1f4a4:	65735520 	.word	0x65735520
   1f4a8:	20202064 	.word	0x20202064
   1f4ac:	3525203a 	.word	0x3525203a
   1f4b0:	616d0a64 	.word	0x616d0a64
   1f4b4:	636f6c6c 	.word	0x636f6c6c
   1f4b8:	65735520 	.word	0x65735520
   1f4bc:	20202064 	.word	0x20202064
   1f4c0:	3525203a 	.word	0x3525203a
   1f4c4:	616d0a64 	.word	0x616d0a64
   1f4c8:	636f6c6c 	.word	0x636f6c6c
   1f4cc:	61764120 	.word	0x61764120
   1f4d0:	202e6c69 	.word	0x202e6c69
   1f4d4:	3525203a 	.word	0x3525203a
   1f4d8:	79530a64 	.word	0x79530a64
   1f4dc:	6d657473 	.word	0x6d657473
   1f4e0:	61764120 	.word	0x61764120
   1f4e4:	202e6c69 	.word	0x202e6c69
   1f4e8:	3525203a 	.word	0x3525203a
   1f4ec:	654e0a64 	.word	0x654e0a64
   1f4f0:	48207478 	.word	0x48207478
   1f4f4:	20706165 	.word	0x20706165
   1f4f8:	20727470 	.word	0x20727470
   1f4fc:	3a202020 	.word	0x3a202020
   1f500:	25783020 	.word	0x25783020
   1f504:	0a583830 	.word	0x0a583830
   1f508:	7473614c 	.word	0x7473614c
   1f50c:	72627320 	.word	0x72627320
   1f510:	2029286b 	.word	0x2029286b
   1f514:	20727470 	.word	0x20727470
   1f518:	30203a20 	.word	0x30203a20
   1f51c:	38302578 	.word	0x38302578
   1f520:	614c0a58 	.word	0x614c0a58
   1f524:	73207473 	.word	0x73207473
   1f528:	286b7262 	.word	0x286b7262
   1f52c:	69732029 	.word	0x69732029
   1f530:	3a20657a 	.word	0x3a20657a
   1f534:	0a752520 	.word	0x0a752520
   1f538:	206d754e 	.word	0x206d754e
   1f53c:	72627320 	.word	0x72627320
   1f540:	2029286b 	.word	0x2029286b
   1f544:	6c6c6163 	.word	0x6c6c6163
   1f548:	25203a73 	.word	0x25203a73
   1f54c:	0a75      	.short	0x0a75
   1f54e:	00          	.byte	0x00
   1f54f:	25          	.byte	0x25
   1f550:	52492075 	.word	0x52492075
   1f554:	61772051 	.word	0x61772051
   1f558:	72742073 	.word	0x72742073
   1f55c:	65676769 	.word	0x65676769
   1f560:	2c646572 	.word	0x2c646572
   1f564:	74756220 	.word	0x74756220
   1f568:	206f6e20 	.word	0x206f6e20
   1f56c:	20515249 	.word	0x20515249
   1f570:	76726573 	.word	0x76726573
   1f574:	20656369 	.word	0x20656369
   1f578:	20736177 	.word	0x20736177
   1f57c:	69666564 	.word	0x69666564
   1f580:	2164656e 	.word	0x2164656e
   1f584:	000a      	.short	0x000a
   1f586:	4d4e      	.short	0x4d4e
   1f588:	61462049 	.word	0x61462049
   1f58c:	0a746c75 	.word	0x0a746c75
   1f590:	6d654d00 	.word	0x6d654d00
   1f594:	75614620 	.word	0x75614620
   1f598:	000a746c 	.word	0x000a746c
   1f59c:	20535542 	.word	0x20535542
   1f5a0:	6c756146 	.word	0x6c756146
   1f5a4:	55000a74 	.word	0x55000a74
   1f5a8:	65676173 	.word	0x65676173
   1f5ac:	75614620 	.word	0x75614620
   1f5b0:	000a746c 	.word	0x000a746c
   1f5b4:	4d474244 	.word	0x4d474244
   1f5b8:	46204e4f 	.word	0x46204e4f
   1f5bc:	746c7561 	.word	0x746c7561
   1f5c0:	5249000a 	.word	0x5249000a
   1f5c4:	6f6e2051 	.word	0x6f6e2051
   1f5c8:	65722074 	.word	0x65722074
   1f5cc:	74736967 	.word	0x74736967
   1f5d0:	64657265 	.word	0x64657265
   1f5d4:	616d0021 	.word	0x616d0021
   1f5d8:	29286e69 	.word	0x29286e69
   1f5dc:	6f687320 	.word	0x6f687320
   1f5e0:	20646c75 	.word	0x20646c75
   1f5e4:	6576656e 	.word	0x6576656e
   1f5e8:	78652072 	.word	0x78652072
   1f5ec:	6f207469 	.word	0x6f207469
   1f5f0:	6874206e 	.word	0x6874206e
   1f5f4:	73207369 	.word	0x73207369
   1f5f8:	65747379 	.word	0x65747379
   1f5fc:	0a6d      	.short	0x0a6d
   1f5fe:	00          	.byte	0x00
   1f5ff:	e7          	.byte	0xe7
   1f600:	e7e7adde 	.word	0xe7e7adde
   1f604:	65646f6e 	.word	0x65646f6e
   1f608:	00          	.byte	0x00
   1f609:	48          	.byte	0x48
   1f60a:	4c45      	.short	0x4c45
   1f60c:	000a4f4c 	.word	0x000a4f4c

0001f610 <ExCvt>:
   1f610:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   1f620:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   1f630:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   1f640:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   1f650:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   1f660:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   1f670:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   1f680:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

0001f690 <LfnOfs>:
   1f690:	07050301 12100e09 1c181614 8000ff1e              ..............

0001f69e <cst.6423>:
   1f69e:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   1f6ae:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   1f6be:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   1f6ce:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   1f6de:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   1f6ee:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

0001f6f8 <vst.6422>:
   1f6f8:	02000400 00800100 00200040 00080010     ........@. .....
   1f708:	00020004 00c70000                                ......

0001f70e <Tbl>:
   1f70e:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   1f71e:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   1f72e:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   1f73e:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   1f74e:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   1f75e:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   1f76e:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   1f77e:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   1f78e:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   1f79e:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   1f7ae:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   1f7be:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   1f7ce:	00df03b1 03c00393 03c303a3 03c400b5     ................
   1f7de:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   1f7ee:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   1f7fe:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

0001f80e <tbl_lower.5776>:
   1f80e:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   1f81e:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   1f82e:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   1f83e:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   1f84e:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   1f85e:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   1f86e:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   1f87e:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   1f88e:	01050103 01090107 010d010b 0111010f     ................
   1f89e:	01150113 01190117 011d011b 0121011f     ..............!.
   1f8ae:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   1f8be:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   1f8ce:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   1f8de:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   1f8ee:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   1f8fe:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   1f90e:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   1f91e:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   1f92e:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   1f93e:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   1f94e:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   1f95e:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   1f96e:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   1f97e:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   1f98e:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   1f99e:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   1f9ae:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   1f9be:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   1f9ce:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   1f9de:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

0001f9ee <tbl_upper.5777>:
   1f9ee:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   1f9fe:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   1fa0e:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   1fa1e:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   1fa2e:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   1fa3e:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   1fa4e:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   1fa5e:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   1fa6e:	01040102 01080106 010c010a 0110010e     ................
   1fa7e:	01140112 01180116 011c011a 0120011e     .............. .
   1fa8e:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   1fa9e:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   1faae:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   1fabe:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   1face:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   1fade:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   1faee:	03940393 03960395 03980397 039a0399     ................
   1fafe:	039c039b 039e039d 03a0039f 03a303a1     ................
   1fb0e:	03a503a4 03a703a6 03a903a8 041003aa     ................
   1fb1e:	04120411 04140413 04160415 04180417     ................
   1fb2e:	041a0419 041c041b 041e041d 0420041f     .............. .
   1fb3e:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   1fb4e:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   1fb5e:	04030402 04050404 04070406 04090408     ................
   1fb6e:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   1fb7e:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   1fb8e:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   1fb9e:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   1fbae:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   1fbbe:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   1fbce:	c7ffff9f ff9a8094 0000ffff                       ..........

0001fbd8 <CSWTCH.70>:
   1fbd8:	00100000 00200000 00400000 00800000     ...... ...@.....
   1fbe8:	2009c000 2009c020 2009c040 2009c060     ...  .. @.. `.. 
   1fbf8:	2009c080                                ... 

0001fbfc <LED_DISPLAY_CHARMAP>:
	...
   1fc1c:	00008600 00000000 00000000 00804000     .............@..
   1fc2c:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   1fc3c:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   1fc4c:	6d000073 00003f00 00000000 00000000     s..m.?..........
   1fc5c:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   1fc6c:	6d000073 00003f00 00000000 00000000     s..m.?..........
   1fc7c:	67676f6c 45007265 524f5252 6f6c203a     logger.ERROR: lo
   1fc8c:	72656767 696e6920 6c616974 74617a69     gger initializat
   1fc9c:	206e6f69 6c696166 00657275 6f6c3a30     ion failure.0:lo
   1fcac:	73632e67 61460076 64656c69 6c696620     g.csv.Failed fil
   1fcbc:	72772065 3a657469 72450020 20726f72     e write: .Error 
   1fccc:	77207525 69746972 6c20676e 6966676f     %u writing logfi
   1fcdc:	202e656c 252f7525 72772075 65747469     le. %u/%u writte
   1fcec:	46202e6e 3a727470 0a752520 656e5500     n. Fptr: %u..Une
   1fcfc:	63657078 20646574 6c6c6163 206f7420     xpected call to 
   1fd0c:	74697865 55002928 7078656e 65746365     exit().Unexpecte
   1fd1c:	61632064 74206c6c 696b206f 29286c6c     d call to kill()
   1fd2c:	ffffff00                                ....

0001fd30 <typeinfo for UartDev>:
   1fd30:	00020578 0001fd3c 0001fd64              x...<...d...

0001fd3c <typeinfo name for UartDev>:
   1fd3c:	72615537 76654474 ffffff00              7UartDev....

0001fd48 <vtable for UartDev>:
   1fd48:	00000000 0001fd30 0001555d 000154b9     ....0...]U...T..
   1fd58:	0001553d 00015515 00015529              =U...U..)U..

0001fd64 <typeinfo for CharDev>:
   1fd64:	00020518 0001fd6c                       ....l...

0001fd6c <typeinfo name for CharDev>:
   1fd6c:	61684337 76654472 ffffff00              7CharDev....

0001fd78 <vtable for CharDev>:
   1fd78:	00000000 0001fd64 00017a25 00017a25     ....d...%z..%z..
   1fd88:	000156b1 00000000 00000000              .V..........

0001fd94 <typeinfo name for SingletonTemplate<Uart3>>:
   1fd94:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1fda4:	49657461 72615535 00453374              ateI5Uart3E.

0001fdb0 <typeinfo for SingletonTemplate<Uart3>>:
   1fdb0:	00020518 0001fd94                       ........

0001fdb8 <typeinfo name for Uart3>:
   1fdb8:	72615535 ff003374                       5Uart3..

0001fdc0 <typeinfo for Uart3>:
   1fdc0:	000205f0 0001fdb8 00000000 00000002     ................
   1fdd0:	0001fd30 00000002 0001fdb0 00000002     0...............

0001fde0 <vtable for Uart3>:
   1fde0:	00000000 0001fdc0 0001555d 000154b9     ........]U...T..
   1fdf0:	0001553d 00015af1 00015b05              =U...Z...[..

0001fdfc <typeinfo name for SingletonTemplate<Uart2>>:
   1fdfc:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1fe0c:	49657461 72615535 00453274              ateI5Uart2E.

0001fe18 <typeinfo for SingletonTemplate<Uart2>>:
   1fe18:	00020518 0001fdfc                       ........

0001fe20 <typeinfo name for Uart2>:
   1fe20:	72615535 ff003274                       5Uart2..

0001fe28 <typeinfo for Uart2>:
   1fe28:	000205f0 0001fe20 00000000 00000002     .... ...........
   1fe38:	0001fd30 00000002 0001fe18 00000002     0...............

0001fe48 <vtable for Uart2>:
   1fe48:	00000000 0001fe28 0001555d 000154b9     ....(...]U...T..
   1fe58:	0001553d 00015b59 00015b6d              =U..Y[..m[..

0001fe64 <typeinfo name for SingletonTemplate<Uart0>>:
   1fe64:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   1fe74:	49657461 72615535 00453074              ateI5Uart0E.

0001fe80 <typeinfo for SingletonTemplate<Uart0>>:
   1fe80:	00020518 0001fe64                       ....d...

0001fe88 <typeinfo name for Uart0>:
   1fe88:	72615535 ff003074                       5Uart0..

0001fe90 <typeinfo for Uart0>:
   1fe90:	000205f0 0001fe88 00000000 00000002     ................
   1fea0:	0001fd30 00000002 0001fe80 00000002     0...............

0001feb0 <vtable for Uart0>:
   1feb0:	00000000 0001fe90 0001555d 000154b9     ........]U...T..
   1fec0:	0001553d 00015bc1 00015bd5 40004000     =U...[...[...@.@
   1fed0:	40008000 40090000 40094000 544c4148     ...@...@.@.@HALT
   1fee0:	20474e49 54535953 203a4d45 72756f59     ING SYSTEM: Your
   1fef0:	73797320 206d6574 206e6172 2074756f      system ran out 
   1ff00:	6d20666f 726f6d65 52282079 21294d41     of memory (RAM)!
   1ff10:	4148000a 4e49544c 59532047 4d455453     ..HALTING SYSTEM
   1ff20:	7453203a 206b6361 7265766f 776f6c66     : Stack overflow
   1ff30:	20796220 6b736174 0a00203a 20797254      by task: ..Try 
   1ff40:	72636e69 69736165 7320676e 6b636174     increasing stack
   1ff50:	6d656d20 2079726f 7420666f 20736968      memory of this 
   1ff60:	6b736174 44000a2e 00656e6f 6f727245     task...Done.Erro
   1ff70:	6f440072 0021656e 4c494146 45004445     r.Done!.FAILED.E
   1ff80:	524f5252 6f50203a 62697373 7320656c     RROR: Possible s
   1ff90:	74726f68 206e6f20 20414453 5320726f     hort on SDA or S
   1ffa0:	77204c43 20657269 43324928 00212932     CL wire (I2C2)!.
   1ffb0:	4f525245 46203a52 656c6961 6f742064     ERROR: Failed to
   1ffc0:	696e6920 6c616974 20657a69 65726977      initialize wire
   1ffd0:	7373656c 73696400 6564006b 00677562     less.disk.debug.
   1ffe0:	74737953 42206d65 20746f6f 2e252040     System Boot @ %.
   1fff0:	4d206633 000a7a68 74737953 72206d65     3f Mhz..System r
   20000:	6f6f6265 20646574 65746661 72632072     ebooted after cr
   20010:	2e687361 65522020 6176656c 6920746e     ash.  Relevant i
   20020:	3a6f666e 3a43500a 25783020 2e583830     nfo:.PC: 0x%08X.
   20030:	524c2020 7830203a 58383025 5020202e       LR: 0x%08X.  P
   20040:	203a5253 30257830 500a5838 6973736f     SR: 0x%08X.Possi
   20050:	20656c62 7473616c 6e757220 676e696e     ble last running
   20060:	20534f20 6b736154 2527203a 000a2773      OS Task: '%s'..
   20070:	616c4620 00206873 73617245 20676e69      Flash .Erasing 
   20080:	20646e61 6d726f66 69747461 5320676e     and formatting S
   20090:	66204950 6873616c 6874202c 63207369     PI flash, this c
   200a0:	74206e61 20656b61 68772061 20656c69     an take a while 
   200b0:	202e2e2e 49505300 414c4620 69204853     ... .SPI FLASH i
   200c0:	6f702073 62697373 6420796c 67616d61     s possibly damag
   200d0:	00216465 65676150 7a697320 25203a65     ed!.Page size: %
   200e0:	4d000a75 20206d65 657a6973 7525203a     u..Mem  size: %u
   200f0:	61722820 79622077 29736574 4453000a      (raw bytes)..SD
   20100:	72614320 52450064 3a524f52 63634120      Card.ERROR: Acc
   20110:	72656c65 6f697461 6553206e 726f736e     eleration Sensor
   20120:	52524500 203a524f 706d6554 74617265     .ERROR: Temperat
   20130:	20657275 736e6553 4500726f 524f5252     ure Sensor.ERROR
   20140:	2d37203a 6d676553 20746e65 70736944     : 7-Segment Disp
   20150:	0079616c 6464616e 65530072 69772074     lay.naddr.Set wi
   20160:	656c6572 6e207373 2065646f 72646461     reless node addr
   20170:	20737365 25206f74 72662069 27206d6f     ess to %i from '
   20180:	20277325 656c6966 7325203a 7325000a     %s' file: %s..%s
   20190:	616f4200 49206472 73692044 2527203a     .Board ID is: '%
   201a0:	28202773 30257830 0a295832 746e4500     s' (0x%02X)..Ent
   201b0:	61207265 616f6220 49206472 36282044     er a board ID (6
   201c0:	68632034 20737261 2978616d 2500203a     4 chars max): .%
   201d0:	00733436 72616f42 44492064 206f7420     64s.Board ID to 
   201e0:	676f7270 3a6d6172 73252720 45000a27     program: '%s'..E
   201f0:	7265746e 27592720 206f7420 666e6f63     nter 'Y' to conf
   20200:	2e6d7269 4f422020 20445241 43204449     irm.  BOARD ID C
   20210:	4f4e4e41 45422054 41484320 4445474e     ANNOT BE CHANGED
   20220:	444e4120 20534920 4d524550 4e454e41      AND IS PERMANEN
   20230:	33250054 6f420073 20647261 6e204449     T.%3s.Board ID n
   20240:	7020746f 72676f72 656d6d61 6f590064     ot programmed.Yo
   20250:	61632075 7270206e 6172676f 2061206d     u can program a 
   20260:	4d524550 4e454e41 44492054 20666f20     PERMANENT ID of 
   20270:	72756f79 616f6220 002e6472 64206f54     your board..To d
   20280:	6874206f 202c7369 646c6f68 31575320     o this, hold SW1
   20290:	646e6120 34575320 646e6120 73657220      and SW4 and res
   202a0:	74207465 62206568 6472616f 5043002e     et the board..CP
   202b0:	6c662055 20687361 65746c61 2f646572     U flash altered/
   202c0:	676f7270 6d6d6172 63206465 746e756f     programmed count
   202d0:	25203a73 75252f75 5043000a 72702055     s: %u/%u..CPU pr
   202e0:	6172676f 64656d6d 616c6620 28206873     ogrammed flash (
   202f0:	2f6e696d 2978616d 7525203a 2d20624b     min/max): %uKb -
   20300:	4b752520 4c000a62 20747361 676f7270      %uKb..Last prog
   20310:	6d6d6172 20676e69 6b6f6f74 20752520     ramming took %u 
   20320:	000a736d 6c6c6143 20676e69 72756f79     ms..Calling your
   20330:	69616d20 0029286e 2d2d2d2d 2d2d2d2d      main().--------
   20340:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20350:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20360:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20370:	4b002d2d 424d0042 73655900 006f4e00     --.KB.MB.Yes.No.
   20380:	203a7325 2d204b4f 6143202d 69636170     %s: OK -- Capaci
   20390:	25207974 2564352d 41202c73 6c696176     ty %-5d%s, Avail
   203a0:	656c6261 2d25203a 73257535 7325000a     able: %-5u%s..%s
   203b0:	7245203a 20726f72 6e20726f 7020746f     : Error or not p
   203c0:	65736572 202e746e 72724520 2320726f     resent.  Error #
   203d0:	202c6925 6e756f4d 3a646574 0a732520     %i, Mounted: %s.
   203e0:	69725700 43536574 49203a49 64616d20     .WriteSCI: I mad
   203f0:	74692065 746e6920 6874206f 75662065     e it into the fu
   20400:	6974636e 25206e6f 78252078 7257000a     nction %x %x..Wr
   20410:	53657469 203a4943 61682069 6d206576     iteSCI: i have m
   20420:	20656461 70207469 20747361 20656874     ade it past the 
   20430:	64726168 72617020 54000a74 206e7275     hard part..Turn 
   20440:	20656874 756c6f76 7520656d 6f622070     the volume up bo
   20450:	0a696969 6f626100 74207475 7375206f     iii..about to us
   20460:	72572065 53657469 66204943 74636e75     e WriteSCI funct
   20470:	006e6f69 6f636573 6420646e 79616c65     ion.second delay
   20480:	63636f20 64657275 66656220 2065726f      occured before 
   20490:	72617473 666f2074 6f727020 6d617267     start of program
   204a0:	206f4400 73726966 61642074 74206174     .Do first data t
   204b0:	736e6172 2e726566 65742d20 20737473     ransfer. -tests 
   204c0:	0a383531 206f4400 616e6966 6164206c     158..Do final da
   204d0:	74206174 736e6172 0a726566 ffffff00     ta transfer.....

000204e0 <typeinfo for __cxxabiv1::__class_type_info>:
   204e0:	00020578 000204ec 0002059c              x...........

000204ec <typeinfo name for __cxxabiv1::__class_type_info>:
   204ec:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   204fc:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   2050c:	ffff0045                                E...

00020510 <vtable for __cxxabiv1::__class_type_info>:
   20510:	00000000 000204e0 00017961 00017975     ........ay..uy..
   20520:	00017b35 00017b35 000179a1 00017921     5{..5{...y..!y..
   20530:	00017989 000179cb 00017955              .y...y..Uy..

0002053c <typeinfo for __cxxabiv1::__si_class_type_info>:
   2053c:	00020578 00020548 000204e0              x...H.......

00020548 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   20548:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   20558:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   20568:	456f666e ffffff00                       nfoE....

00020570 <vtable for __cxxabiv1::__si_class_type_info>:
   20570:	00000000 0002053c 00017a2d 00017a41     ....<...-z..Az..
   20580:	00017b35 00017b35 000179a1 00017921     5{..5{...y..!y..
   20590:	00017b09 00017a8d 00017a55              .{...z..Uz..

0002059c <typeinfo for std::type_info>:
   2059c:	00020518 000205a4                       ........

000205a4 <typeinfo name for std::type_info>:
   205a4:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

000205b4 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   205b4:	00020578 000205c0 000204e0              x...........

000205c0 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   205c0:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   205d0:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   205e0:	6f666e69 ffff0045                       infoE...

000205e8 <vtable for __cxxabiv1::__vmi_class_type_info>:
   205e8:	00000000 000205b4 00017b65 00017b79     ........e{..y{..
   205f8:	00017b35 00017b35 000179a1 00017921     5{..5{...y..!y..
   20608:	00017ebd 00017c2b 00017b8d              .~..+|...{..

00020614 <__sf_fake_stderr>:
	...

00020634 <__sf_fake_stdin>:
	...

00020654 <__sf_fake_stdout>:
	...

00020674 <_global_impure_ptr>:
   20674:	2007c0e4 4f500043 00584953              ... C.POSIX.

00020680 <DAYS_IN_MONTH>:
   20680:	0000001f 0000001c 0000001f 0000001e     ................
   20690:	0000001f 0000001e 0000001f 0000001f     ................
   206a0:	0000001e 0000001f 0000001e 0000001f     ................

000206b0 <_DAYS_BEFORE_MONTH>:
   206b0:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   206c0:	00000078 00000097 000000b5 000000d4     x...............
   206d0:	000000f3 00000111 00000130 0000014e     ........0...N...

000206e0 <__month_lengths>:
   206e0:	0000001f 0000001c 0000001f 0000001e     ................
   206f0:	0000001f 0000001e 0000001f 0000001f     ................
   20700:	0000001e 0000001f 0000001e 0000001f     ................
   20710:	0000001f 0000001d 0000001f 0000001e     ................
   20720:	0000001f 0000001e 0000001f 0000001f     ................
   20730:	0000001e 0000001f 0000001e 0000001f     ................
   20740:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   20750:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   20760:	32313000 36353433 61393837 65646362     .0123456789abcde
   20770:	25650066 ff00646c                       f.e%ld..

00020778 <fpi.6129>:
   20778:	00000035 fffffbce 000003cb 00000001     5...............
   20788:	00000000                                ....

0002078c <fpinan.6165>:
   2078c:	00000034 fffffbce 000003cb 00000001     4...............
   2079c:	00000000                                ....

000207a0 <tinytens>:
   207a0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   207b0:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   207c0:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   207d0:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   207e0:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   207f0:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   20800:	006e2575                                u%n.

00020804 <_ctype_>:
   20804:	20202000 20202020 28282020 20282828     .         ((((( 
   20814:	20202020 20202020 20202020 20202020                     
   20824:	10108820 10101010 10101010 10101010      ...............
   20834:	04040410 04040404 10040404 10101010     ................
   20844:	41411010 41414141 01010101 01010101     ..AAAAAA........
   20854:	01010101 01010101 01010101 10101010     ................
   20864:	42421010 42424242 02020202 02020202     ..BBBBBB........
   20874:	02020202 02020202 02020202 10101010     ................
   20884:	00000020 00000000 00000000 00000000      ...............
	...
   20904:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   20914:	ffffffff                                ....

00020918 <__mprec_bigtens>:
   20918:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   20928:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   20938:	7f73bf3c 75154fdd                       <.s..O.u

00020940 <__mprec_tens>:
   20940:	00000000 3ff00000 00000000 40240000     .......?......$@
   20950:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   20960:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   20970:	00000000 412e8480 00000000 416312d0     .......A......cA
   20980:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   20990:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   209a0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   209b0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   209c0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   209d0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   209e0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   209f0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   20a00:	79d99db4 44ea7843                       ...yCx.D

00020a08 <p05.6047>:
   20a08:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   20a18:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   20a28:	00020a46 00020a49 00020a4c 61462d41     F...I...L...A-Fa
   20a38:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   20a48:	00303000 ff005878                       .00.xX..

00020a50 <__init_array_start>:
__preinit_array_start():
   20a50:	000178ad 	.word	0x000178ad

00020a54 <APP_SYM_TABLE>:
__symbol_table_start():
   20a54:	31303030 30633935 41205420 495f4344     000159c0 T ADC_I
   20a64:	61485152 656c646e 30300a72 66353130     RQHandler.00015f
   20a74:	54206335 4e414320 5152495f 646e6148     5c T CAN_IRQHand
   20a84:	0a72656c 31303030 63653835 45205420     ler.000158ec T E
   20a94:	33544e49 5152495f 646e6148 0a72656c     INT3_IRQHandler.
   20aa4:	31303030 30366535 49205420 5f324332     00015e60 T I2C2_
   20ab4:	48515249 6c646e61 300a7265 35313030     IRQHandler.00015
   20ac4:	20636536 49522054 52495f54 6e614851     6ec T RIT_IRQHan
   20ad4:	72656c64 3030300a 65613431 20542063     dler.00014aec T 
   20ae4:	5f435452 48515249 6c646e61 300a7265     RTC_IRQHandler.0
   20af4:	30313030 20343035 49542054 3152454d     0010504 T TIMER1
   20b04:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   20b14:	34306335 55205420 30545241 5152495f     5c04 T UART0_IRQ
   20b24:	646e6148 0a72656c 31303030 63396235     Handler.00015b9c
   20b34:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   20b44:	0a72656c 31303030 34336235 55205420     ler.00015b34 T U
   20b54:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   20b64:	31303030 63303230 6c205420 6c5f776f     0001020c T low_l
   20b74:	6c657665 696e695f 0a292874 31303030     evel_init().0001
   20b84:	34303137 68205420 5f686769 6576656c     7104 T high_leve
   20b94:	6e695f6c 29287469 3030300a 65363031     l_init().000106e
   20ba4:	20542030 5f737973 636f6c63 6f635f6b     0 T sys_clock_co
   20bb4:	6769666e 28657275 30300a29 31303130     nfigure().000101
   20bc4:	54203038 73736220 696e695f 6e752874     80 T bss_init(un
   20bd4:	6e676973 69206465 202c746e 69736e75     signed int, unsi
   20be4:	64656e67 746e6920 30300a29 36373130     gned int).000176
   20bf4:	54203837 69727720 43536574 6e752849     78 T writeSCI(un
   20c04:	6e676973 63206465 2c726168 736e7520     signed char, uns
   20c14:	656e6769 68732064 2974726f 3030300a     igned short).000
   20c24:	36313031 20542061 61746164 696e695f     1016a T data_ini
   20c34:	6e752874 6e676973 69206465 202c746e     t(unsigned int, 
   20c44:	69736e75 64656e67 746e6920 6e75202c     unsigned int, un
   20c54:	6e676973 69206465 0a29746e 31303030     signed int).0001
   20c64:	38643637 73205420 6f567465 656d756c     76d8 T setVolume
   20c74:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   20c84:	69736e75 64656e67 61686320 300a2972     unsigned char).0
   20c94:	34313030 20386534 454c2054 69445f44     00144e8 T LED_Di
   20ca4:	616c7073 733a3a79 654c7465 69447466     splay::setLeftDi
   20cb4:	28746967 72616863 30300a29 35343130     git(char).000145
   20cc4:	54203030 44454c20 7369445f 79616c70     00 T LED_Display
   20cd4:	65733a3a 67695274 69447468 28746967     ::setRightDigit(
   20ce4:	72616863 30300a29 35343130 54203831     char).00014518 T
   20cf4:	44454c20 7369445f 79616c70 6e693a3a      LED_Display::in
   20d04:	29287469 3030300a 35353431 20542030     it().00014550 T 
   20d14:	5f44454c 70736944 3a79616c 7465733a     LED_Display::set
   20d24:	626d754e 63287265 29726168 3030300a     Number(char).000
   20d34:	65353431 20542034 6867694c 65535f74     145e4 T Light_Se
   20d44:	726f736e 65673a3a 77615274 756c6156     nsor::getRawValu
   20d54:	0a292865 31303030 30653534 4c205420     e().000145e0 T L
   20d64:	74686769 6e65535f 3a726f73 696e693a     ight_Sensor::ini
   20d74:	0a292874 31303030 34313434 41205420     t().00014414 T A
   20d84:	6c656363 74617265 5f6e6f69 736e6553     cceleration_Sens
   20d94:	3a3a726f 74696e69 300a2928 34313030     or::init().00014
   20da4:	20613835 454c2054 693a3a44 2874696e     58a T LED::init(
   20db4:	30300a29 35343130 54203039 44454c20     ).00014590 T LED
   20dc4:	65733a3a 6c6c4174 736e7528 656e6769     ::setAll(unsigne
   20dd4:	68632064 0a297261 31303030 34653234     d char).000142e4
   20de4:	47205420 3a4f4950 7465733a 6e497341      T GPIO::setAsIn
   20df4:	28747570 30300a29 32343130 54203666     put().000142f6 T
   20e04:	49504720 733a3a4f 73417465 7074754f      GPIO::setAsOutp
   20e14:	29287475 3030300a 33333431 20542034     ut().00014334 T 
   20e24:	4f495047 6e653a3a 656c6261 6c6c7550     GPIO::enablePull
   20e34:	29287055 3030300a 35333431 20542034     Up().00014354 T 
   20e44:	4f495047 6e653a3a 656c6261 6e65704f     GPIO::enableOpen
   20e54:	69617244 646f4d6e 6f622865 0a296c6f     DrainMode(bool).
   20e64:	31303030 36323334 47205420 3a4f4950     00014326 T GPIO:
   20e74:	7465733a 28776f4c 30300a29 33343130     :setLow().000143
   20e84:	54206131 49504720 733a3a4f 69487465     1a T GPIO::setHi
   20e94:	29286867 3030300a 39323431 20542034     gh().00014294 T 
   20ea4:	4f495047 50473a3a 4c284f49 37314350     GPIO::GPIO(LPC17
   20eb4:	475f3835 5f4f4950 65707954 30300a29     58_GPIO_Type).00
   20ec4:	32343130 54203439 49504720 473a3a4f     014294 T GPIO::G
   20ed4:	284f4950 3143504c 5f383537 4f495047     PIO(LPC1758_GPIO
   20ee4:	7079545f 300a2965 34313030 20303833     _Type).00014380 
   20ef4:	50472054 3a3a4f49 4950477e 0a29284f     T GPIO::~GPIO().
   20f04:	31303030 30383334 47205420 3a4f4950     00014380 T GPIO:
   20f14:	50477e3a 29284f49 3030300a 65643531     :~GPIO().00015de
   20f24:	20542034 32433249 6e693a3a 75287469     4 T I2C2::init(u
   20f34:	6769736e 2064656e 29746e69 3030300a     nsigned int).000
   20f44:	34653531 20542063 32433249 32493a3a     15e4c T I2C2::I2
   20f54:	29283243 3030300a 34653531 20542063     C2().00015e4c T 
   20f64:	32433249 32493a3a 29283243 3030300a     I2C2::I2C2().000
   20f74:	65623531 20542038 74726155 553a3a30     15be8 T Uart0::U
   20f84:	30747261 300a2928 35313030 20386562     art0().00015be8 
   20f94:	61552054 3a307472 7261553a 29283074     T Uart0::Uart0()
   20fa4:	3030300a 38623531 20542030 74726155     .00015b80 T Uart
   20fb4:	553a3a32 32747261 300a2928 35313030     2::Uart2().00015
   20fc4:	20303862 61552054 3a327472 7261553a     b80 T Uart2::Uar
   20fd4:	29283274 3030300a 31623531 20542038     t2().00015b18 T 
   20fe4:	74726155 553a3a33 33747261 300a2928     Uart3::Uart3().0
   20ff4:	35313030 20383162 61552054 3a337472     0015b18 T Uart3:
   21004:	7261553a 29283374 3030300a 62363531     :Uart3().000156b
   21014:	20542034 72616843 3a766544 6168433a     4 T CharDev::Cha
   21024:	76654472 300a2928 35313030 20346236     rDev().000156b4 
   21034:	68432054 65447261 433a3a76 44726168     T CharDev::CharD
   21044:	29287665 3030300a 64363531 20542034     ev().000156d4 T 
   21054:	72616843 3a766544 68437e3a 65447261     CharDev::~CharDe
   21064:	0a292876 31303030 34643635 43205420     v().000156d4 T C
   21074:	44726168 3a3a7665 6168437e 76654472     harDev::~CharDev
   21084:	300a2928 34313030 20613933 74532054     ().0001439a T St
   21094:	6761726f 723a3a65 28646165 72616863     orage::read(char
   210a4:	6e6f6320 2c2a7473 696f7620 202c2a64      const*, void*, 
   210b4:	69736e75 64656e67 746e6920 6e75202c     unsigned int, un
   210c4:	6e676973 69206465 0a29746e 31303030     signed int).0001
   210d4:	38633535 55205420 44747261 3a3a7665     55c8 T UartDev::
   210e4:	646e6168 6e49656c 72726574 28747075     handleInterrupt(
   210f4:	30300a29 35353130 54206333 72615520     ).0001553c T Uar
   21104:	76654474 6c663a3a 28687375 30300a29     tDev::flush().00
   21114:	35353130 54206335 72615520 76654474     01555c T UartDev
   21124:	65673a3a 61684374 68632872 2c2a7261     ::getChar(char*,
   21134:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   21144:	35313030 20386234 61552054 65447472     00154b8 T UartDe
   21154:	703a3a76 68437475 63287261 2c726168     v::putChar(char,
   21164:	736e7520 656e6769 6e692064 300a2974      unsigned int).0
   21174:	35313030 20383836 61552054 65447472     0015688 T UartDe
   21184:	553a3a76 44747261 75287665 6769736e     v::UartDev(unsig
   21194:	2064656e 2a746e69 30300a29 36353130     ned int*).000156
   211a4:	54203838 72615520 76654474 61553a3a     88 T UartDev::Ua
   211b4:	65447472 6e752876 6e676973 69206465     rtDev(unsigned i
   211c4:	292a746e 3030300a 64313531 20542030     nt*).000151d0 T 
   211d4:	5f433249 65736142 65723a3a 65526461     I2C_Base::readRe
   211e4:	74736967 28737265 69736e75 64656e67     gisters(unsigned
   211f4:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   21204:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   21214:	2a726168 6e75202c 6e676973 6c206465     har*, unsigned l
   21224:	29676e6f 3030300a 66313531 20542032     ong).000151f2 T 
   21234:	5f433249 65736142 72773a3a 52657469     I2C_Base::writeR
   21244:	73696765 73726574 736e7528 656e6769     egisters(unsigne
   21254:	68632064 202c7261 69736e75 64656e67     d char, unsigned
   21264:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   21274:	72616863 75202c2a 6769736e 2064656e     char*, unsigned 
   21284:	676e6f6c 30300a29 34353130 54203438     long).00015484 T
   21294:	43324920 7361425f 683a3a65 6c646e61      I2C_Base::handl
   212a4:	746e4965 75727265 29287470 3030300a     eInterrupt().000
   212b4:	30333531 20542063 5f433249 65736142     1530c T I2C_Base
   212c4:	32693a3a 61745363 614d6574 6e696863     ::i2cStateMachin
   212d4:	0a292865 31303030 30313235 49205420     e().00015210 T I
   212e4:	425f4332 3a657361 6568633a 65446b63     2C_Base::checkDe
   212f4:	65636976 70736552 65736e6f 736e7528     viceResponse(uns
   21304:	656e6769 68632064 0a297261 31303030     igned char).0001
   21314:	38373235 49205420 425f4332 3a657361     5278 T I2C_Base:
   21324:	696e693a 6e752874 6e676973 6c206465     :init(unsigned l
   21334:	2c676e6f 736e7520 656e6769 6f6c2064     ong, unsigned lo
   21344:	0a29676e 31303030 38643135 49205420     ng).000151d8 T I
   21354:	425f4332 3a657361 6165723a 67655264     2C_Base::readReg
   21364:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   21374:	69736e75 64656e67 61686320 300a2972     unsigned char).0
   21384:	35313030 20386630 32492054 61425f43     00150f8 T I2C_Ba
   21394:	3a3a6573 6e617274 72656673 736e7528     se::transfer(uns
   213a4:	656e6769 68632064 202c7261 69736e75     igned char, unsi
   213b4:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   213c4:	2064656e 72616863 75202c2a 6769736e     ned char*, unsig
   213d4:	2064656e 676e6f6c 30300a29 31353130     ned long).000151
   213e4:	54206166 43324920 7361425f 773a3a65     fa T I2C_Base::w
   213f4:	65746972 28676552 69736e75 64656e67     riteReg(unsigned
   21404:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   21414:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   21424:	29726168 3030300a 32323531 20542038     har).00015228 T 
   21434:	5f433249 65736142 32493a3a 61425f43     I2C_Base::I2C_Ba
   21444:	4c286573 495f4350 545f4332 44657079     se(LPC_I2C_TypeD
   21454:	292a6665 3030300a 32323531 20542038     ef*).00015228 T 
   21464:	5f433249 65736142 32493a3a 61425f43     I2C_Base::I2C_Ba
   21474:	4c286573 495f4350 545f4332 44657079     se(LPC_I2C_TypeD
   21484:	292a6665 3030300a 32363431 20542061     ef*).0001462a T 
   21494:	5f433249 706d6554 65673a3a 6c654374     I2C_Temp::getCel
   214a4:	73756973 300a2928 34313030 20633536     sius().0001465c 
   214b4:	32492054 65545f43 3a3a706d 46746567     T I2C_Temp::getF
   214c4:	6e657261 74696568 300a2928 34313030     arenheit().00014
   214d4:	20383036 32492054 65545f43 3a3a706d     608 T I2C_Temp::
   214e4:	74696e69 300a2928 34313030 20306635     init().000145f0 
   214f4:	77532054 68637469 3a3a7365 53746567     T Switches::getS
   21504:	63746977 6c615668 28736575 30300a29     witchValues().00
   21514:	35343130 54206165 69775320 65686374     0145ea T Switche
   21524:	693a3a73 2874696e 30300a29 34343130     s::init().000144
   21534:	54203433 5f524920 736e6553 3a3a726f     34 T IR_Sensor::
   21544:	726f7473 43724965 2865646f 69736e75     storeIrCode(unsi
   21554:	64656e67 6e6f6c20 300a2967 34313030     gned long).00014
   21564:	20303534 52492054 6e65535f 3a726f73     450 T IR_Sensor:
   21574:	6365643a 4965646f 646f4372 0a292865     :decodeIrCode().
   21584:	31303030 34623434 49205420 65535f52     000144b4 T IR_Se
   21594:	726f736e 6e693a3a 29287469 3030300a     nsor::init().000
   215a4:	30333431 20542036 4f495047 65723a3a     14306 T GPIO::re
   215b4:	29286461 6e6f6320 300a7473 37313030     ad() const.00017
   215c4:	20343362 74732054 743a3a64 5f657079     b34 T std::type_
   215d4:	6f666e69 5f5f3a3a 705f7369 746e696f     info::__is_point
   215e4:	705f7265 63202928 74736e6f 3030300a     er_p() const.000
   215f4:	33623731 20542034 3a647473 7079743a     17b34 T std::typ
   21604:	6e695f65 3a3a6f66 73695f5f 6e75665f     e_info::__is_fun
   21614:	6f697463 28705f6e 6f632029 0a74736e     ction_p() const.
   21624:	31303030 38336237 73205420 3a3a6474     00017b38 T std::
   21634:	65707974 666e695f 6f3a3a6f 61726570     type_info::opera
   21644:	3d726f74 7473283d 743a3a64 5f657079     tor==(std::type_
   21654:	6f666e69 6e6f6320 29267473 6e6f6320     info const&) con
   21664:	300a7473 37313030 20323362 74732054     st.00017b32 T st
   21674:	743a3a64 5f657079 6f666e69 747e3a3a     d::type_info::~t
   21684:	5f657079 6f666e69 300a2928 37313030     ype_info().00017
   21694:	20323362 74732054 743a3a64 5f657079     b32 T std::type_
   216a4:	6f666e69 747e3a3a 5f657079 6f666e69     info::~type_info
   216b4:	300a2928 37313030 20306666 74732054     ().00017ff0 T st
   216c4:	673a3a64 745f7465 696d7265 6574616e     d::get_terminate
   216d4:	300a2928 38313030 20303030 74732054     ().00018000 T st
   216e4:	743a3a64 696d7265 6574616e 300a2928     d::terminate().0
   216f4:	38313030 20303863 62612054 0a74726f     0018c80 T abort.
   21704:	31303030 63376135 61205420 5f306364     00015a7c T adc0_
   21714:	5f746567 64616572 0a676e69 31303030     get_reading.0001
   21724:	38306135 61205420 5f306364 74696e69     5a08 T adc0_init
   21734:	3030300a 38633831 20542065 696f7461     .00018c8e T atoi
   21744:	3030300a 32373431 20542030 696c5f63     .00014720 T c_li
   21754:	635f7473 74616572 30300a65 37343130     st_create.000147
   21764:	54206336 6c5f6320 5f747369 646e6966     6c T c_list_find
   21774:	6d6c655f 3030300a 39373431 20542038     _elm.00014798 T 
   21784:	696c5f63 665f7473 655f726f 5f686361     c_list_for_each_
   21794:	0a6d6c65 31303030 34333734 63205420     elm.00014734 T c
   217a4:	73696c5f 6e695f74 74726573 6d6c655f     _list_insert_elm
   217b4:	646e655f 3030300a 33653131 20542063     _end.00011e3c T 
   217c4:	73756c63 65733274 300a7463 34313030     clust2sect.00014
   217d4:	20326362 65642054 5f79616c 300a736d     bc2 T delay_ms.0
   217e4:	34313030 20383962 65642054 5f79616c     0014b98 T delay_
   217f4:	300a7375 33313030 20306263 69642054     us.00013cb0 T di
   21804:	695f6b73 6974696e 7a696c61 30300a65     sk_initialize.00
   21814:	64333130 54203635 73696420 6f695f6b     013d56 T disk_io
   21824:	0a6c7463 31303030 36656333 64205420     ctl.00013ce6 T d
   21834:	5f6b7369 64616572 3030300a 64633331     isk_read.00013cd
   21844:	20542036 6b736964 6174735f 0a737574     6 T disk_status.
   21854:	31303030 65316433 64205420 5f6b7369     00013d1e T disk_
   21864:	74697277 30300a65 30633130 54203837     write.0001c078 T
   21874:	76696420 3030300a 36393531 20542063      div.0001596c T 
   21884:	746e6965 6e655f33 656c6261 726f705f     eint3_enable_por
   21894:	300a3074 32313030 20636164 5f662054     t0.00012dac T f_
   218a4:	736f6c63 30300a65 66323130 54206531     close.00012f1e T
   218b4:	675f6620 72667465 300a6565 32313030      f_getfree.00012
   218c4:	20306464 5f662054 6565736c 30300a6b     dd0 T f_lseek.00
   218d4:	66323130 54203865 6d5f6620 0a73666b     012fe8 T f_mkfs.
   218e4:	31303030 63353832 66205420 756f6d5f     0001285c T f_mou
   218f4:	300a746e 32313030 20386438 5f662054     nt.000128d8 T f_
   21904:	6e65706f 3030300a 30613231 20542036     open.00012a06 T 
   21914:	65725f66 300a6461 32313030 20323264     f_read.00012d22 
   21924:	5f662054 636e7973 3030300a 37623231     T f_sync.00012b7
   21934:	20542036 72775f66 0a657469 31303030     6 T f_write.0001
   21944:	38333533 66205420 6f635f66 7265766e     3538 T ff_conver
   21954:	30300a74 34333130 54206364 5f666620     t.000134dc T ff_
   21964:	5f657263 636e7973 0a6a626f 31303030     cre_syncobj.0001
   21974:	30663433 66205420 65645f66 79735f6c     34f0 T ff_del_sy
   21984:	626f636e 30300a6a 35333130 54206131     ncobj.0001351a T
   21994:	5f666620 5f6c6572 6e617267 30300a74      ff_rel_grant.00
   219a4:	34333130 54203466 5f666620 5f716572     0134f4 T ff_req_
   219b4:	6e617267 30300a74 35333130 54203437     grant.00013574 T
   219c4:	5f666620 756f7477 72657070 3030300a      ff_wtoupper.000
   219d4:	30653831 20542038 756c6666 300a6873     18e08 T fflush.0
   219e4:	34313030 20343132 6c662054 5f687361     0014214 T flash_
   219f4:	70696863 6172655f 300a6573 34313030     chip_erase.00014
   21a04:	20633431 6c662054 5f687361 5f746567     14c T flash_get_
   21a14:	65676170 756f635f 300a746e 34313030     page_count.00014
   21a24:	20633631 6c662054 5f687361 5f746567     16c T flash_get_
   21a34:	65676170 7a69735f 30300a65 66333130     page_size.00013f
   21a44:	54203437 616c6620 695f6873 6974696e     74 T flash_initi
   21a54:	7a696c61 30300a65 30343130 54203861     alize.000140a8 T
   21a64:	616c6620 695f6873 6c74636f 3030300a      flash_ioctl.000
   21a74:	32313431 20542034 73616c66 65725f68     14124 T flash_re
   21a84:	705f6461 616d7265 746e656e 0a64695f     ad_permanent_id.
   21a94:	31303030 63303034 66205420 6873616c     0001400c T flash
   21aa4:	6165725f 65735f64 726f7463 30300a73     _read_sectors.00
   21ab4:	31343130 54203837 616c6620 735f6873     014178 T flash_s
   21ac4:	6f707075 5f737472 6174656d 61746164     upports_metadata
   21ad4:	3030300a 65303431 20542030 73616c66     .000140e0 T flas
   21ae4:	72775f68 5f657469 6d726570 6e656e61     h_write_permanen
   21af4:	64695f74 3030300a 35303431 20542063     t_id.0001405c T 
   21b04:	73616c66 72775f68 5f657469 74636573     flash_write_sect
   21b14:	0a73726f 31303030 63333139 66205420     ors.0001913c T f
   21b24:	0a656572 31303030 30303030 67205420     ree.00010000 T g
   21b34:	6e66705f 74636556 0a73726f 31303030     _pfnVectors.0001
   21b44:	32356531 67205420 665f7465 300a7461     1e52 T get_fat.0
   21b54:	34313030 20303432 65672054 61665f74     0014240 T get_fa
   21b64:	6d697474 30300a65 35613130 54203832     ttime.0001a528 T
   21b74:	72706920 66746e69 3030300a 62623431      iprintf.00014bb
   21b84:	20542034 665f7369 72656572 5f736f74     4 T is_freertos_
   21b94:	6e6e7572 0a676e69 31303030 30333861     running.0001a830
   21ba4:	69205420 6e616373 30300a66 31303130      T iscanf.000101
   21bb4:	54203834 72736920 6665645f 746c7561     48 T isr_default
   21bc4:	6e61685f 72656c64 3030300a 66353031     _handler.000105f
   21bd4:	20542063 5f727369 64726168 7561665f     c T isr_hard_fau
   21be4:	685f746c 6c646e61 300a7265 30313030     lt_handler.00010
   21bf4:	20343931 73692054 65725f72 0a746573     194 T isr_reset.
   21c04:	31303030 38343934 6c205420 6567676f     00014948 T logge
   21c14:	6e695f72 300a7469 30313030 20633239     r_init.0001092c 
   21c24:	706c2054 63705f63 300a6b6c 30313030     T lpc_pclk.00010
   21c34:	20386638 706c2054 63705f63 0a706e6f     8f8 T lpc_pconp.
   21c44:	31303030 34333430 6c205420 735f6370     00010434 T lpc_s
   21c54:	735f7379 70757465 7379735f 5f6d6574     ys_setup_system_
   21c64:	656d6974 30300a72 64353130 54203837     timer.00015d78 T
   21c74:	63706c20 6d69745f 655f7265 6c62616e      lpc_timer_enabl
   21c84:	30300a65 37373130 54203430 69616d20     e.00017704 T mai
   21c94:	30300a6e 36393130 54206362 6c616d20     n.000196bc T mal
   21ca4:	666e696c 30300a6f 31393130 54206332     linfo.0001912c T
   21cb4:	6c616d20 0a636f6c 31303030 30373139      malloc.00019170
   21cc4:	6d205420 68636d65 30300a72 31393130      T memchr.000191
   21cd4:	54206338 6d656d20 0a706d63 31303030     8c T memcmp.0001
   21ce4:	61613139 6d205420 70636d65 30300a79     91aa T memcpy.00
   21cf4:	31393130 54203063 6d656d20 65766f6d     0191c0 T memmove
   21d04:	3030300a 66313931 20542034 736d656d     .000191f4 T mems
   21d14:	300a7465 31313030 20343134 656d2054     et.00011414 T me
   21d24:	665f6873 5f6d726f 0a746b70 31303030     sh_form_pkt.0001
   21d34:	38303431 6d205420 5f687365 5f746567     1408 T mesh_get_
   21d44:	65646f6e 6464615f 73736572 3030300a     node_address.000
   21d54:	62363131 20542063 6873656d 7465675f     116bc T mesh_get
   21d64:	6d756e5f 756f725f 676e6974 746e655f     _num_routing_ent
   21d74:	73656972 3030300a 61393131 20542038     ries.000119a8 T 
   21d84:	6873656d 7465675f 646e705f 746b705f     mesh_get_pnd_pkt
   21d94:	756f635f 300a746e 31313030 20343635     _count.00011564 
   21da4:	656d2054 695f6873 0a74696e 31303030     T mesh_init.0001
   21db4:	34363631 6d205420 5f687365 646e6573     1664 T mesh_send
   21dc4:	3030300a 30353131 20542063 6873656d     .0001150c T mesh
   21dd4:	6e65735f 6f665f64 64656d72 746b705f     _send_formed_pkt
   21de4:	3030300a 64363131 20542038 6873656d     .000116d8 T mesh
   21df4:	7265735f 65636976 3030300a 66333131     _service.000113f
   21e04:	20542030 6873656d 7465735f 646f6e5f     0 T mesh_set_nod
   21e14:	64615f65 73657264 30300a73 33393130     e_address.000193
   21e24:	54203463 746b6d20 0a656d69 31303030     c4 T mktime.0001
   21e34:	63623961 6e205420 0a666e61 31303030     a9bc T nanf.0001
   21e44:	38616130 6e205420 6964726f 6c635f63     0aa8 T nordic_cl
   21e54:	5f726165 5f6c6c61 72746e69 616c665f     ear_all_intr_fla
   21e64:	300a7367 30313030 20383762 6f6e2054     gs.00010b78 T no
   21e74:	63696472 656c635f 705f7261 656b6361     rdic_clear_packe
   21e84:	76615f74 616c6961 5f656c62 67616c66     t_available_flag
   21e94:	3030300a 30623031 20542038 64726f6e     .00010b08 T nord
   21ea4:	635f6369 7261656c 6361705f 5f74656b     ic_clear_packet_
   21eb4:	746e6573 616c665f 30300a67 62303130     sent_flag.00010b
   21ec4:	54203439 726f6e20 5f636964 73756c66     94 T nordic_flus
   21ed4:	78725f68 6669665f 30300a6f 62303130     h_rx_fifo.00010b
   21ee4:	54203031 726f6e20 5f636964 73756c66     10 T nordic_flus
   21ef4:	78745f68 6669665f 30300a6f 64303130     h_tx_fifo.00010d
   21f04:	54203832 726f6e20 5f636964 74696e69     28 T nordic_init
   21f14:	3030300a 36623031 20542038 64726f6e     .00010b68 T nord
   21f24:	695f6369 61705f73 74656b63 6176615f     ic_is_packet_ava
   21f34:	62616c69 300a656c 30313030 20613961     ilable.00010a9a 
   21f44:	6f6e2054 63696472 5f73695f 665f7874     T nordic_is_tx_f
   21f54:	5f6f6669 74706d65 30300a79 62303130     ifo_empty.00010b
   21f64:	54206331 726f6e20 5f636964 65646f6d     1c T nordic_mode
   21f74:	65735f31 735f646e 6c676e69 61705f65     1_send_single_pa
   21f84:	74656b63 3030300a 32633031 20542065     cket.00010c2e T 
   21f94:	64726f6e 705f6369 7265776f 776f645f     nordic_power_dow
   21fa4:	30300a6e 63303130 54203631 726f6e20     n.00010c16 T nor
   21fb4:	5f636964 65776f70 70755f72 3030300a     dic_power_up.000
   21fc4:	62613031 20542030 64726f6e 715f6369     10ab0 T nordic_q
   21fd4:	65756575 5f78745f 6f666966 3030300a     ueue_tx_fifo.000
   21fe4:	38623031 20542030 64726f6e 725f6369     10b80 T nordic_r
   21ff4:	5f646165 665f7872 0a6f6669 31303030     ead_rx_fifo.0001
   22004:	34646130 6e205420 6964726f 78725f63     0ad4 T nordic_rx
   22014:	5f6f745f 6e617453 0a317962 31303030     _to_Stanby1.0001
   22024:	38666330 6e205420 6964726f 65735f63     0cf8 T nordic_se
   22034:	64615f74 775f7264 68746469 3030300a     t_addr_width.000
   22044:	36633031 20542038 64726f6e 735f6369     10c68 T nordic_s
   22054:	615f7465 645f7269 5f617461 65746172     et_air_data_rate
   22064:	3030300a 62633031 20542038 64726f6e     .00010cb8 T nord
   22074:	735f6369 615f7465 5f6f7475 6e617274     ic_set_auto_tran
   22084:	74696d73 74706f5f 736e6f69 3030300a     smit_options.000
   22094:	34633031 20542034 64726f6e 735f6369     10c44 T nordic_s
   220a4:	635f7465 6e6e6168 300a6c65 30313030     et_channel.00010
   220b4:	20656462 6f6e2054 63696472 7465735f     bde T nordic_set
   220c4:	6372635f 3030300a 61623031 20542030     _crc.00010ba0 T 
   220d4:	64726f6e 735f6369 695f7465 5f72746e     nordic_set_intr_
   220e4:	6e676973 0a736c61 31303030 34656330     signals.00010ce4
   220f4:	6e205420 6964726f 65735f63 61705f74      T nordic_set_pa
   22104:	616f6c79 6f665f64 69705f72 300a6570     yload_for_pipe.0
   22114:	30313030 20343963 6f6e2054 63696472     0010c94 T nordic
   22124:	7465735f 776f705f 6c5f7265 6c657665     _set_power_level
   22134:	3030300a 31643031 20542061 64726f6e     .00010d1a T nord
   22144:	735f6369 725f7465 69705f78 5f306570     ic_set_rx_pipe0_
   22154:	72646461 3030300a 30643031 20542065     addr.00010d0e T 
   22164:	64726f6e 735f6369 745f7465 64615f78     nordic_set_tx_ad
   22174:	73657264 30300a73 61303130 54203465     dress.00010ae4 T
   22184:	726f6e20 5f636964 6e617473 31796264      nordic_standby1
   22194:	5f6f745f 300a7872 30313030 20636261     _to_rx.00010abc 
   221a4:	6f6e2054 63696472 6174735f 7962646e     T nordic_standby
   221b4:	6f745f31 5f78745f 65646f6d 30300a31     1_to_tx_mode1.00
   221c4:	36333130 54203032 776f7020 6f5f7265     013620 T power_o
   221d4:	300a6666 61313030 20383235 72702054     ff.0001a528 T pr
   221e4:	66746e69 3030300a 37663131 20542038     intf.00011f78 T 
   221f4:	5f747570 0a746166 31303030 30313661     put_fat.0001a610
   22204:	70205420 0a737475 31303030 30303136      T puts.00016100
   22214:	70205420 726f5076 6c614d74 0a636f6c      T pvPortMalloc.
   22224:	31303030 30646536 70205420 73615476     00016ed0 T pvTas
   22234:	636e496b 656d6572 754d746e 48786574     kIncrementMutexH
   22244:	43646c65 746e756f 3030300a 39663531     eldCount.00015f9
   22254:	20542038 6f507870 6e497472 61697469     8 T pxPortInitia
   22264:	6573696c 63617453 30300a6b 61613130     liseStack.0001aa
   22274:	54203431 69617220 300a6573 61313030     14 T raise.0001a
   22284:	20303736 61722054 300a646e 33313030     670 T rand.00013
   22294:	20343436 63722054 645f7276 62617461     644 T rcvr_datab
   222a4:	6b636f6c 3030300a 30373531 20542038     lock.00015708 T 
   222b4:	5f637472 74746567 0a656d69 31303030     rtc_gettime.0001
   222c4:	38623735 72205420 695f6374 0a74696e     57b8 T rtc_init.
   222d4:	31303030 30353735 72205420 735f6374     00015750 T rtc_s
   222e4:	69747465 300a656d 36313030 20303930     ettime.00016090 
   222f4:	74722054 6f6e5f73 75665f74 745f6c6c     T rts_not_full_t
   22304:	65636172 7465675f 3030300a 33386131     race_get.0001a83
   22314:	20542030 6e616373 30300a66 37333130     0 T scanf.000137
   22324:	54206363 5f647320 74696e69 696c6169     cc T sd_initiali
   22334:	300a657a 33313030 20343961 64732054     ze.00013a94 T sd
   22344:	636f695f 300a6c74 33313030 20383439     _ioctl.00013948 
   22354:	64732054 6165725f 30300a64 39333130     T sd_read.000139
   22364:	54203833 5f647320 74617473 300a7375     38 T sd_status.0
   22374:	33313030 20386137 64732054 6470755f     00137a8 T sd_upd
   22384:	5f657461 64726163 6174735f 0a737574     ate_card_status.
   22394:	31303030 30653933 73205420 72775f64     000139e0 T sd_wr
   223a4:	0a657469 31303030 63313733 73205420     ite.0001371c T s
   223b4:	5f646e65 0a646d63 31303030 30363861     end_cmd.0001a860
   223c4:	73205420 62767465 300a6675 61313030      T setvbuf.0001a
   223d4:	20633461 69732054 6e697270 300a6674     a4c T siprintf.0
   223e4:	61313030 20343961 69732054 6e616373     001aa94 T siscan
   223f4:	30300a66 64353130 54203430 69707320     f.00015d04 T spi
   22404:	6f6c5f31 300a6b63 35313030 20343364     1_lock.00015d34 
   22414:	70732054 755f3169 636f6c6e 30300a6b     T spi1_unlock.00
   22424:	61613130 54206334 72707320 66746e69     01aa4c T sprintf
   22434:	3030300a 32366131 20542030 6e617273     .0001a620 T sran
   22444:	30300a64 61613130 54203439 63737320     d.0001aa94 T ssc
   22454:	0a666e61 31303030 38326335 73205420     anf.00015c28 T s
   22464:	5f317073 5f616d64 74696e69 3030300a     sp1_dma_init.000
   22474:	34633531 20542034 31707373 616d645f     15c44 T ssp1_dma
   22484:	6172745f 6566736e 6c625f72 0a6b636f     _transfer_block.
   22494:	31303030 32376261 73205420 6d637274     0001ab72 T strcm
   224a4:	30300a70 62613130 54203638 72747320     p.0001ab86 T str
   224b4:	0a797063 31303030 36396261 73205420     cpy.0001ab96 T s
   224c4:	656c7274 30300a6e 62613130 54203661     trlen.0001aba6 T
   224d4:	72747320 706d636e 3030300a 63626131      strncmp.0001abc
   224e4:	20542061 6e727473 0a797063 31303030     a T strncpy.0001
   224f4:	63363962 73205420 6f747274 30300a6c     b96c T strtol.00
   22504:	63653130 54203063 72747320 6c756f74     01ecc0 T strtoul
   22514:	3030300a 30323031 20542030 5f737973     .00010200 T sys_
   22524:	5f746567 746f6f62 7079745f 30300a65     get_boot_type.00
   22534:	37303130 54203439 73797320 7465675f     010794 T sys_get
   22544:	7570635f 6f6c635f 300a6b63 34313030     _cpu_clock.00014
   22554:	20383563 79732054 65675f73 656d5f74     c58 T sys_get_me
   22564:	6e695f6d 300a6f66 30313030 20346234     m_info.000104b4 
   22574:	79732054 65675f73 656d5f74 6e695f6d     T sys_get_mem_in
   22584:	735f6f66 300a7274 30313030 20383834     fo_str.00010488 
   22594:	79732054 65675f73 70755f74 656d6974     T sys_get_uptime
   225a4:	0a73755f 31303030 38366534 73205420     _us.00014e68 T s
   225b4:	735f7379 695f7465 6168636e 75665f72     ys_set_inchar_fu
   225c4:	300a636e 34313030 20633565 79732054     nc.00014e5c T sy
   225d4:	65735f73 756f5f74 61686374 75665f72     s_set_outchar_fu
   225e4:	300a636e 34313030 20633965 79732054     nc.00014e9c T sy
   225f4:	6c616373 695f736c 0a74696e 31303030     scalls_init.0001
   22604:	38393962 74205420 0a656d69 31303030     b998 T time.0001
   22614:	34623634 74205420 635f6d6c 6f706d6f     46b4 T tlm_compo
   22624:	746e656e 6464615f 3030300a 39363431     nent_add.0001469
   22634:	20542030 5f6d6c74 706d6f63 6e656e6f     0 T tlm_componen
   22644:	65675f74 79625f74 6d616e5f 30300a65     t_get_by_name.00
   22654:	61343130 54203233 5f307520 5f676264     014a32 T u0_dbg_
   22664:	6e697270 300a6674 34313030 20343161     printf.00014a14 
   22674:	30752054 6762645f 7475705f 3030300a     T u0_dbg_put.000
   22684:	39383031 20542063 74726175 65675f30     1089c T uart0_ge
   22694:	61686374 30300a72 38303130 54206333     tchar.0001083c T
   226a4:	72617520 695f3074 0a74696e 31303030      uart0_init.0001
   226b4:	34623830 75205420 30747261 7475705f     08b4 T uart0_put
   226c4:	72616863 3030300a 63383031 20542063     char.000108cc T 
   226d4:	74726175 75705f30 300a7374 36313030     uart0_puts.00016
   226e4:	20613931 78752054 7473694c 6f6d6552     19a T uxListRemo
   226f4:	300a6576 36313030 20633537 78752054     ve.0001675c T ux
   22704:	75657551 73654d65 65676173 69615773     QueueMessagesWai
   22714:	676e6974 3030300a 36373631 20542065     ting.0001676e T 
   22724:	75517875 4d657565 61737365 57736567     uxQueueMessagesW
   22734:	69746961 7246676e 53496d6f 30300a52     aitingFromISR.00
   22744:	30363130 54206364 70417620 63696c70     0160dc T vApplic
   22754:	6f697461 6c614d6e 46636f6c 656c6961     ationMallocFaile
   22764:	6f6f4864 30300a6b 30363130 54203461     dHook.000160a4 T
   22774:	70417620 63696c70 6f697461 6174536e      vApplicationSta
   22784:	764f6b63 6c667265 6f48776f 300a6b6f     ckOverflowHook.0
   22794:	36313030 20383331 4c762054 49747369     0016138 T vListI
   227a4:	6974696e 73696c61 30300a65 31363130     nitialise.000161
   227b4:	54206534 694c7620 6e497473 61697469     4e T vListInitia
   227c4:	6573696c 6d657449 3030300a 36313631     liseItem.0001616
   227d4:	20542063 73694c76 736e4974 0a747265     c T vListInsert.
   227e4:	31303030 34353136 76205420 7473694c     00016154 T vList
   227f4:	65736e49 6e457472 30300a64 66353130     InsertEnd.00015f
   22804:	54203465 6f507620 6e457472 43726574     e4 T vPortEnterC
   22814:	69746972 0a6c6163 31303030 34303036     ritical.00016004
   22824:	76205420 74726f50 74697845 74697243      T vPortExitCrit
   22834:	6c616369 3030300a 31313631 20542065     ical.0001611e T 
   22844:	726f5076 65724674 30300a65 66353130     vPortFree.00015f
   22854:	54203063 6f507620 56537472 6e614843     c0 T vPortSVCHan
   22864:	72656c64 3030300a 65653631 20542038     dler.00016ee8 T 
   22874:	6e755276 656d6954 74617453 45727349     vRunTimeStatIsrE
   22884:	7972746e 3030300a 31663631 20542030     ntry.00016f10 T 
   22894:	6e755276 656d6954 74617453 45727349     vRunTimeStatIsrE
   228a4:	0a746978 31303030 38636236 76205420     xit.00016bc8 T v
   228b4:	6b736154 616c6544 30300a79 64363130     TaskDelay.00016d
   228c4:	54203461 61547620 694d6b73 64657373     a4 T vTaskMissed
   228d4:	6c656959 30300a64 63363130 54203062     Yield.00016cb0 T
   228e4:	61547620 6c506b73 4f656361 6576456e      vTaskPlaceOnEve
   228f4:	694c746e 300a7473 36313030 20306464     ntList.00016dd0 
   22904:	54762054 506b7361 726f6972 49797469     T vTaskPriorityI
   22914:	7265686e 300a7469 36313030 20303464     nherit.00016d40 
   22924:	54762054 536b7361 69547465 754f656d     T vTaskSetTimeOu
   22934:	61745374 300a6574 36313030 20386339     tState.000169c8 
   22944:	54762054 536b7361 65707375 6c41646e     T vTaskSuspendAl
   22954:	30300a6c 62363130 54203866 61547620     l.00016bf8 T vTa
   22964:	77536b73 68637469 746e6f43 0a747865     skSwitchContext.
   22974:	31303030 63376562 76205420 70696e73     0001be7c T vsnip
   22984:	746e6972 30300a66 65623130 54206337     rintf.0001be7c T
   22994:	6e737620 6e697270 300a6674 33313030      vsnprintf.00013
   229a4:	20306635 61772054 725f7469 79646165     5f0 T wait_ready
   229b4:	3030300a 38663031 20542038 65726977     .00010f88 T wire
   229c4:	7373656c 696e695f 30300a74 66303130     less_init.00010f
   229d4:	54203464 72697720 73656c65 65735f73     d4 T wireless_se
   229e4:	63697672 30300a65 30363130 54203032     rvice.00016020 T
   229f4:	6f507820 65507472 5653646e 646e6148      xPortPendSVHand
   22a04:	0a72656c 31303030 34363036 78205420     ler.00016064 T x
   22a14:	74726f50 54737953 486b6369 6c646e61     PortSysTickHandl
   22a24:	300a7265 36313030 20346234 51782054     er.000164b4 T xQ
   22a34:	65756575 61657243 754d6574 0a786574     ueueCreateMutex.
   22a44:	31303030 63373336 78205420 75657551     0001637c T xQueu
   22a54:	6e654765 63697265 61657243 300a6574     eGenericCreate.0
   22a64:	36313030 20306335 51782054 65756575     00165c0 T xQueue
   22a74:	656e6547 52636972 69656365 300a6576     GenericReceive.0
   22a84:	36313030 20303133 51782054 65756575     0016310 T xQueue
   22a94:	656e6547 52636972 74657365 3030300a     GenericReset.000
   22aa4:	62333631 20542030 65755178 65476575     163b0 T xQueueGe
   22ab4:	6972656e 6e655363 30300a64 34363130     nericSend.000164
   22ac4:	54203864 75517820 47657565 72656e65     d8 T xQueueGener
   22ad4:	65536369 7246646e 53496d6f 30300a52     icSendFromISR.00
   22ae4:	35363130 54203835 75517820 47657565     016558 T xQueueG
   22af4:	46657669 496d6f72 300a5253 36313030     iveFromISR.00016
   22b04:	20346636 51782054 65756575 65636552     6f4 T xQueueRece
   22b14:	46657669 496d6f72 300a5253 36313030     iveFromISR.00016
   22b24:	20383564 54782054 436b7361 6b636568     d58 T xTaskCheck
   22b34:	54726f46 4f656d69 300a7475 36313030     ForTimeOut.00016
   22b44:	20343238 54782054 436b7361 74616572     824 T xTaskCreat
   22b54:	30300a65 64363130 54203062 61547820     e.00016db0 T xTa
   22b64:	65476b73 68635374 6c756465 74537265     skGetSchedulerSt
   22b74:	0a657461 31303030 38643936 78205420     ate.000169d8 T x
   22b84:	6b736154 54746547 436b6369 746e756f     TaskGetTickCount
   22b94:	6d6f7246 0a525349 31303030 34653936     FromISR.000169e4
   22ba4:	78205420 6b736154 72636e49 6e656d65      T xTaskIncremen
   22bb4:	63695474 30300a6b 65363130 54203036     tTick.00016e60 T
   22bc4:	61547820 72506b73 69726f69 69447974      xTaskPriorityDi
   22bd4:	686e6973 74697265 3030300a 64633631     sinherit.00016cd
   22be4:	20542030 73615478 6d65526b 4665766f     0 T xTaskRemoveF
   22bf4:	456d6f72 746e6576 7473694c 3030300a     romEventList.000
   22c04:	66613631 20542030 73615478 7365526b     16af0 T xTaskRes
   22c14:	41656d75 300a6c6c 33313030 20306436     umeAll.000136d0 
   22c24:	6d782054 645f7469 62617461 6b636f6c     T xmit_datablock
   22c34:	0000000a                                         ..
