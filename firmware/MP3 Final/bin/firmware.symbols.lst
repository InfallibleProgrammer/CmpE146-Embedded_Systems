
bin/firmware.symbols.elf:     file format elf32-littlearm
bin/firmware.symbols.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x0002d568 vaddr 0x0002d568 paddr 0x0002d568 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x0001d570 memsz 0x0001d570 flags r-x
    LOAD off    0x0003c000 vaddr 0x2007c000 paddr 0x0002d570 align 2**16
         filesz 0x000002fc memsz 0x000002fc flags rw-
    LOAD off    0x0003c300 vaddr 0x2007c300 paddr 0x0002d86c align 2**16
         filesz 0x00000000 memsz 0x00000688 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         0001d565  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002fc  2007c000  0002d570  0003c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000688  2007c300  0002d86c  0003c300  2**3  ALLOC
  3 .ARM.exidx    00000008  0002d568  0002d568  0002d568  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   0006b3d3  00000000  00000000  0003c2fc  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00010aef  00000000  00000000  000a76cf  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 000021b8  00000000  00000000  000b81be  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00019d5d  00000000  00000000  000ba376  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000fe2e  00000000  00000000  000d40d3  2**0  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000007f  00000000  00000000  000e3f01  2**0  CONTENTS, READONLY
 10 .ARM.attributes 00000031  00000000  00000000  000e3f80  2**0  CONTENTS, READONLY
 11 .debug_loc    0001cd8c  00000000  00000000  000e3fb1  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00003968  00000000  00000000  00100d3d  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00008854  00000000  00000000  001046a8  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
0002d568 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
000105d4 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
00010678 l     F .text	00000014 sys_clock_pll0_feed()
0001068c l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00010998 l     F .text	000000e8 nordic_transfer
00010a80 l     F .text	00000020 nordic_readRegister
00010aa0 l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00010e14 l     F .text	00000070 nrf_driver_init
00010f2c l     F .text	00000034 nrf_irq_callback
00010e84 l     F .text	00000050 nrf_driver_app_recv
00010ed4 l     F .text	00000058 nrf_driver_send
00010f60 l     F .text	00000022 nrf_driver_receive
00010f82 l     F .text	00000066 wireless_get_queued_pkt
00010fe8 l     F .text	00000028 nrf_driver_get_timer
2007c31c l     O .bss	00000004 g_ack_queue
2007c320 l     O .bss	00000004 g_nrf_activity_sem
2007c324 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 mesh.c
000110c8 l     F .text	00000026 mesh_incr_soft_timers_for_arr
000110f0 l     F .text	0000004c mesh_update_soft_timers
0001113c l     F .text	0000003c mesh_send_packet
00011178 l     F .text	00000034 mesh_send_retry_packet
000111ac l     F .text	00000024 mesh_find_rte_tbl_entry
000111d0 l     F .text	00000028 mesh_update_rte_scores
000111f8 l     F .text	00000040 mesh_get_pnd_pkt_slot
00011238 l     F .text	00000090 mesh_pending_packets_add
000112c8 l     F .text	00000058 mesh_get_rte_to_modify
00011320 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
0001175a l     F .text	0000001a mesh_send_ack
2007c328 l     O .bss	00000014 g_driver
2007c33c l     O .bss	00000001 g_error_mask
2007c33d l     O .bss	00000001 g_locked
2007c33e l     O .bss	00000090 g_mesh_pnd_pkts
2007c3ce l     O .bss	0000000c g_mesh_stats
2007c3da l     O .bss	00000018 g_our_name
2007c3f2 l     O .bss	00000048 g_our_pnd_pkts
2007c43a l     O .bss	0000000c g_pkt_hist
2007c446 l     O .bss	00000001 g_rpt_node
2007c447 l     O .bss	00000010 g_rte_table
2007c457 l     O .bss	00000001 s_next_packet_id.5115
2007c458 l     O .bss	00000004 s_prev_time_ms.5129
2007c08c l     O .data	00000001 g_our_node_id
2007c090 l     O .data	00000004 g_pkt_hist_wptr
2007c094 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 ff.c
00011af8 l     F .text	00000038 mem_cpy
00011b30 l     F .text	0000000e mem_set
00011b3e l     F .text	0000001e sum_sfn
00011b5c l     F .text	00000040 get_ldnumber
00011b9c l     F .text	000000c4 get_fileinfo
00011c60 l     F .text	00000046 sync_window.part.1
00011ca6 l     F .text	0000000c sync_window
00011cb4 l     F .text	00000074 sync_fs
00011d28 l     F .text	00000034 move_window
00011d5c l     F .text	0000004c check_fs
00011da8 l     F .text	00000220 find_volume
00011fc8 l     F .text	0000003a validate
00012002 l     F .text	0000001a unlock_fs
000120d8 l     F .text	00000080 dir_sdi
0001222a l     F .text	000000a0 create_chain
000122ca l     F .text	000000ec dir_next
000123b8 l     F .text	00000120 dir_find.part.9
000124d8 l     F .text	000002c0 follow_path
00012798 l     F .text	00000042 dir_alloc
000127dc l     F .text	00000208 dir_register
000129e4 l     F .text	000000fc dir_read
00012ae0 l     F .text	0000005a dir_remove
00012b3a l     F .text	00000058 remove_chain
2007c45c l     O .bss	00000001 CurrVol
2007c460 l     O .bss	00000008 FatFs
2007c468 l     O .bss	00000002 Fsid
00025e04 l     O .text	00000080 ExCvt
00025e84 l     O .text	0000000d LfnOfs
00025e92 l     O .text	00000016 cst.6423
00025eec l     O .text	00000016 vst.6422
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 ccsbcs.c
00025f02 l     O .text	00000100 Tbl
00026002 l     O .text	000001e0 tbl_lower.5776
000261e2 l     O .text	000001e0 tbl_upper.5777
00000000 l    df *ABS*	00000000 sd.c
00013db8 l     F .text	00000012 sys_get_uptime_ms
00013dcc l     F .text	00000030 ssp1_set_max_clock
00013dfc l     F .text	00000014 ssp1_exchange_byte
2007c46a l     O .bss	00000001 g_card_type
2007c095 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 spi_flash.cpp
000145a8 l     F .text	00000020 flash_get_mem_size_bytes()
000145c8 l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
0001463c l     F .text	000000ac ssp1_exchange_data
000146e8 l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
00014710 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00014754 l     F .text	00000040 flash_wait_for_ready()
000149a8 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c46c l     O .bss	00000004 g_sector_count
2007c470 l     O .bss	00000001 g_flash_capacity
2007c472 l     O .bss	00000002 g_flash_pagesize
000263cc l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 gpio.cpp
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 io_source.cpp
2007c474 l     O .bss	00000080 g_ir_timings
2007c4f4 l     O .bss	00000002 g_signal_count
2007c4f8 l     O .bss	00000004 g_last_decoded_signal
000263f0 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 c_tlm_stream.c
00015088 l     F .text	000000d0 tlm_stream_for_each_component_var
00015158 l     F .text	0000001a tlm_stream_file_ptr
000151f4 l     F .text	0000000a tlm_stream_all_args
00000000 l    df *ABS*	00000000 c_tlm_comp.c
000153e8 l     F .text	0000000e tlm_component_for_each_callback
000153f6 l     F .text	00000010 tlm_component_find_by_name
2007c4fc l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 c_tlm_var.c
000154bc l     F .text	0000001e tlm_variable_check_dup
000154da l     F .text	00000014 tlm_component_find_callback
00000000 l    df *ABS*	00000000 c_tlm_binary.c
00015bda l     F .text	00000052 get_tlm_one_comp
00015c2c l     F .text	00000050 cmp_tlm_one_comp
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 scheduler_task.cpp
000160d4 l     F .text	0000002c __sputc_r
00016100 l     F .text	00000034 dbg_print(char const*, char const*)
00016134 l     F .text	00000038 printline(char const*, char const*)
2007c500 l     O .bss	00000004 gpTaskList
2007c504 l     O .bss	00000001 g_dbg_print
2007c508 l     O .bss	00000008 gEnumObjects
2007c510 l     O .bss	00000004 gRunTaskSemaphore
2007c514 l     O .bss	00000004 gTaskEntryTaskHandle
00000000 l    df *ABS*	00000000 file_logger.c
000164e8 l     F .text	00000048 logger_get_buffer_ptr
00016530 l     F .text	000000b4 logger_write_to_file
000165e4 l     F .text	000000d0 logger_task
000166b4 l     F .text	00000048 logger_write_log_message
2007c518 l     O .bss	00000002 g_blocked_calls
2007c51a l     O .bss	00000002 g_buffer_watermark
2007c51c l     O .bss	00000004 g_empty_buffer_queue
2007c520 l     O .bss	00000002 g_highest_file_write_time
2007c524 l     O .bss	00000010 g_logger_calls
2007c534 l     O .bss	00000004 g_write_buffer_queue
2007c538 l     O .bss	00000004 gp_file_buffer
2007c096 l     O .data	00000001 g_logger_printf_mask
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
00016a22 l     F .text	00000024 for_each_recur_alarm_callback
00016a46 l     F .text	0000005a for_each_alarm_callback
2007c53c l     O .bss	00000010 g_list_recur_alarms
2007c54c l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 memory.cpp
2007c550 l     O .bss	00000004 g_sbrk_calls
2007c554 l     O .bss	00000004 g_last_sbrk_ptr
2007c558 l     O .bss	00000004 g_next_heap_ptr
2007c55c l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 newlib_syscalls.c
00017236 l     F .text	00000056 remap_fatfs_errors
0001728c l     F .text	0000004c findslot
000172d8 l     F .text	00000028 remap_handle
2007c564 l     O .bss	00000004 g_input_dev_fptr
2007c568 l     O .bss	00000004 g_output_dev_fptr
2007c56c l     O .bss	00000001 initialized.8353
2007c570 l     O .bss	00000060 openfiles
2007c5d0 l     O .bss	00000004 slot.8319
2007c098 l     O .data	00000004 lastfh.8320
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c5d4 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 eint.c
00018078 l     F .text	0000002c handle_eint_list
000180a4 l     F .text	00000038 eint3_enable.isra.0
2007c5d8 l     O .bss	00000004 gp_port0_falling_list
2007c5dc l     O .bss	00000004 gp_port0_rising_list
2007c5e0 l     O .bss	00000004 gp_port2_falling_list
2007c5e4 l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 adc.c
0001818c l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c5fc l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 lpc_timers.c
000186f4 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 can.c
00018820 l     F .text	00000032 CAN_tx_now
00018854 l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 port.c
00018920 l     F .text	00000012 prvTaskExitError
00018934 l     F .text	0000001a prvPortStartFirstTask
000189a0 l       .text	00000000 pxCurrentTCBConst2
00018a20 l       .text	00000000 pxCurrentTCBConst
2007c604 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c608 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00018bea l     F .text	00000066 prvCopyDataToQueue
00018c50 l     F .text	0000004a prvNotifyQueueSetContainer
00018c9a l     F .text	00000028 prvCopyDataFromQueue
00018cc2 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000191ca l     F .text	0000002e prvResetRunTimeStatsInList
000191f8 l     F .text	00000028 prvIdleTask
00019220 l     F .text	00000024 prvResetNextTaskUnblockTime
00019244 l     F .text	0000008c prvAddCurrentTaskToDelayedList
00019ad4 l     F .text	0000005c prvListTasksWithinSingleList
2007c614 l     O .bss	00000004 pxDelayedTaskList
2007c618 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c61c l     O .bss	000000c8 pxReadyTasksLists
2007c6e4 l     O .bss	00000004 ulTaskSwitchedInTime
2007c6e8 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c6ec l     O .bss	00000004 uxPendedTicks
2007c6f0 l     O .bss	00000004 uxSchedulerSuspended
2007c6f4 l     O .bss	00000004 uxTaskNumber
2007c6f8 l     O .bss	00000004 uxTopReadyPriority
2007c6fc l     O .bss	00000014 xDelayedTaskList1
2007c710 l     O .bss	00000014 xDelayedTaskList2
2007c724 l     O .bss	00000004 xIdleTaskHandle
2007c728 l     O .bss	00000004 xNextTaskUnblockTime
2007c72c l     O .bss	00000004 xNumOfOverflows
2007c730 l     O .bss	00000014 xPendingReadyList
2007c744 l     O .bss	00000004 xSchedulerRunning
2007c748 l     O .bss	00000014 xSuspendedTaskList
2007c75c l     O .bss	00000004 xTickCount
2007c760 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 handlers.cpp
00019dc0 l     F .text	0000001c stream_tlm(char const*, void*)
000274fe l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
0001ad78 l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)
0001adb4 l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
0001add4 l     F .text	00000114 wsTxHandler(str&, CharDev&, void*)
0001aee8 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
0001af90 l     F .text	00000084 wsRxHandler(str&, CharDev&, void*)
0001b3c0 l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
0001b194 l     F .text	0000022c wsFileTxHandler(str&, CharDev&, void*)
2007c780 l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c784 l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
2007c788 l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 terminal.cpp
0001b774 l     F .text	00000040 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
0001bec0 l     F .text	0000000c hl_print_line()
0001becc l     F .text	0000002c ssp_set_max_clock
0001bef8 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 mp3_decoder.cpp
0001c55c l     F .text	00000014 ssp0_exchange_byte
00000000 l    df *ABS*	00000000 song_database.cpp
00000000 l    df *ABS*	00000000 labgpiointerrupt.cpp
00000000 l    df *ABS*	00000000 labgpio0.cpp
00000000 l    df *ABS*	00000000 LCDComms.cpp
0001cda8 l     F .text	00000028 _GLOBAL__sub_I_lcdComms
00000000 l    df *ABS*	00000000 main.cpp
0001d484 l     F .text	000000c0 _GLOBAL__sub_I_song_database
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
0001ecbc l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001f4e4 l     F .text	000001c0 validate_structure
00028d74 l     O .text	00000030 DAYS_IN_MONTH
00028da4 l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
000209f8 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
000210e8 l     F .text	00000042 sulp
00028e6c l     O .text	00000014 fpi.6129
00028e80 l     O .text	00000014 fpinan.6165
00028e98 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00021d98 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c95c l     O .bss	0000000b __tzname_dst
2007c967 l     O .bss	0000000b __tzname_std
2007c974 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
00028f1c l     O .text	00000015 day_name.4714
00028f31 l     O .text	00000024 mon_name.4715
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
000226f8 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00023448 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0002391a l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2b8 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 gmtime_r.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00029158 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00024aec l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
00025396 l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 symbol-table.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c980 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00018348 g     F .text	0000001c Uart3::Uart3()
0001645c g     F .text	00000040 scheduler_start(bool, bool)
0002563c g     F .text	00000012 _malloc_usable_size_r
0001a864 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
0001fb84 g     F .text	000000b8 __cvt
00016d28 g     F .text	0000002e str::beginsWith(char const*) const
00010448 g     F .text	00000054 lpc_sys_setup_system_timer
00025060 g     F .text	000000c6 _scanf_chars
0001d758 g     F .text	00000004 std::type_info::__is_function_p() const
00025b84 g     F .text	0000002c .hidden __aeabi_dcmpun
00017f94 g     F .text	000000d0 rtc_init
00024462 g     F .text	00000042 __any_on
00023c70 g     F .text	00000020 _isatty_r
00025b48 g     F .text	00000012 .hidden __aeabi_dcmple
00016f0e g     F .text	00000006 str::operator int() const
00020fd0 g     F .text	00000010 strcpy
00022638 g     F .text	0000002c asctime
0001dc30 g     F .text	00000018 .hidden __ashldi3
00017338 g     F .text	00000004 _getpid
0002085c g     F .text	000000b8 _puts_r
00010148  w    F .text	00000010 TIMER2_IRQHandler
00015cac g     F .text	0000001c tlm_binary_compare_one
00016440 g     F .text	0000001c scheduler_add_task(scheduler_task*)
00025a84 g     F .text	0000007a .hidden __cmpdf2
000170f0 g     F .text	00000004 operator new[](unsigned int)
00023cb0 g     F .text	00000024 _lseek_r
00012032 g     F .text	000000a6 get_fat
00017ec8 g     F .text	0000001c RIT_IRQHandler
000114cc g     F .text	000000f8 mesh_form_pkt
00016dbc g     F .text	00000028 str::eraseFirst(int)
00016f06 g     F .text	00000004 str::operator==(char const*) const
00015c92 g     F .text	0000001a tlm_binary_get_one
000233b8 g     F .text	0000006a __sflags
00025a84 g     F .text	0000007a .hidden __eqdf2
00014998 g     F .text	00000010 flash_supports_metadata
000269f4 g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
00023b14 g     F .text	00000024 _gettimeofday_r
000189c8 g     F .text	00000014 vPortExitCritical
00021d92 g     F .text	00000006 strtok_r
0001df5c g     F .text	0000005a .hidden __floatdidf
00018460  w    F .text	00000014 NordicStream::~NordicStream()
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c794  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
00020d90 g     F .text	00000024 _kill_r
0002082c g     F .text	00000030 printf
0001049c g     F .text	0000002c sys_get_uptime_us
00020f1a g     F .text	00000024 __sseek
0001ed30 g     F .text	00000060 __sinit
000182e0  w    F .text	00000014 Uart3::~Uart3()
00019a54 g     F .text	00000080 vTaskGetInfo
00022478 g     F .text	000000a4 __swbuf_r
2007c978 g     O .bss	00000004 _daylight
00019f5c g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c8d4 g     O .bss	00000004 lcd
2007c778  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001d650 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00028c3c g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
0001a894 g     F .text	00000144 telemetryHandler(str&, CharDev&, void*)
00026a98  w    O .text	0000001c vtable for Uart3
0001ed04 g     F .text	0000002c __sfmoreglue
0002241c g     F .text	00000048 _vsiscanf_r
000171b8 g     F .text	00000004 __malloc_unlock
0001c8fe g     F .text	0000000a SONG_DATABASE::SONG_DATABASE()
00016850 g     F .text	00000138 logger_log
00015032 g     F .text	00000030 I2C_Temp::getCelsius()
0001dae0 g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001af1c g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
00021d20 g     F .text	00000020 _strtod_r
0001e41c g     F .text	00000136 .hidden __divsf3
00014168 g     F .text	00000098 sd_read
00026a4c  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
000234b2 g     F .text	0000002a __hexdig_fun
0002663c  w    O .text	00000020 vtable for scheduler_task
00017b4c g     F .text	0000006c UartDev::getChar(char*, unsigned int)
00026a68  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00018714 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
0001f4a0 g     F .text	00000034 memmove
00010b2c g     F .text	00000008 nordic_clear_packet_sent_flag
00020db8 g     F .text	00000068 snprintf
2007c600  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001f328 g     F .text	0000001c __locale_ctype_ptr
00018f18 g     F .text	00000080 xQueueGenericSendFromISR
00023cd4 g     F .text	00000068 _Balloc
00016c14 g     F .text	0000004c str::tokenize(char const*, int, ...)
0002d570 g       .ARM.exidx	00000000 __exidx_end
00021d40 g     F .text	00000052 __strtok_r
00017ee4 g     F .text	00000048 rtc_gettime
0001e554 g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
0001b8e8 g     F .text	00000070 terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
0001815c g     F .text	00000030 eint3_enable_port0
2007c8dc g     O .bss	00000028 mp3
00010148  w    F .text	00000010 I2C1_IRQHandler
00026b1c  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
00016b68 g     F .text	0000000e is_freertos_running
00014b7a g     F .text	00000014 GPIO::read() const
00015d46 g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
00025a74 g     F .text	0000008a .hidden __gtdf2
0001cde4 g     F .text	0000011c vPlaySong(void*)
0001e928 g     F .text	0000000c __errno
0001649c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
2007c7d4 g     O .bss	00000100 interrupts
000269e8 g     O .text	0000000c typeinfo for UartDev
00026b48 g     O .text	00000020 typeinfo for NordicStream
00010704 g     F .text	000000b4 sys_clock_configure()
0001fa64 g     F .text	00000064 _mallinfo_r
000191b2 g     F .text	00000018 xQueueSelectFromSet
0001cd7a g     F .text	00000002 LCDCOMMS::~LCDCOMMS()
00019db0 g     F .text	00000010 vRunTimeStatIsrExit
00023c90 g     F .text	00000004 __localeconv_l
00014b9a g     F .text	0000000c GPIO::setLow()
0001bfa4  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c610 g     O .bss	00000004 pxCurrentTCB
0001a9d8 g     F .text	00000038 learnIrHandler(str&, CharDev&, void*)
00013e10 g     F .text	0000002e wait_ready
000180dc g     F .text	00000080 EINT3_IRQHandler
00014e40 g     F .text	00000064 IR_Sensor::decodeIrCode()
00010ae0 g     F .text	00000016 nordic_standby1_to_tx_mode1
00016bf0 g     F .text	00000008 str::clear()
00018544 g     F .text	00000040 Uart0::init(unsigned int, int, int)
000114b0 g     F .text	0000000c mesh_get_node_address
00014ea4 g     F .text	00000034 IR_Sensor::init()
00023424 g     F .text	00000024 _fstat_r
00016e8c g     F .text	00000040 str::trimStart(char const*)
00011774 g     F .text	0000002c mesh_get_routing_entry
2007c984 g     O .bss	00000004 errno
00025128 g     F .text	000001ec _scanf_i
00020ede g     F .text	00000004 __seofread
0002d570 g       .ARM.exidx	00000000 _etext
00019e74 g     F .text	000000e8 taskListHandler(str&, CharDev&, void*)
00010bc4 g     F .text	0000003e nordic_set_intr_signals
00025b10 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c5f4  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
00010acc g     F .text	00000008 nordic_clear_all_intr_flags
000164d0 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
00014b08 g     F .text	00000050 GPIO::GPIO(LPC1758_GPIO_Type)
000177ea g     F .text	00000016 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
0001e0a4 g     F .text	00000160 .hidden __aeabi_fadd
0001c828 g     F .text	000000a8 SONG_NODE::SONG_NODE()
00016bc0 g     F .text	00000026 str::~str()
0001e0a0 g     F .text	00000164 .hidden __subsf3
00013d94 g     F .text	00000024 ff_wtoupper
00028358 g     O .text	00000020 vtable for terminalTask
00026b78 g     O .text	0000001c vtable for NordicStream
0001c8f6 g     F .text	00000006 SONG_NODE::get_prev()
00016f84 g     F .text	0000000c str::str(int)
00022464 g     F .text	00000014 vsscanf
00025010 g     F .text	00000050 _vfiscanf_r
000160d0  w    F .text	00000004 scheduler_task::taskEntry()
0001c81c g     F .text	0000000c MP3_DECODER::setVolume(unsigned char, unsigned char)
00010950 g     F .text	00000048 lpc_pclk
0001ec9c g     F .text	00000014 fgets
00010148  w    F .text	00000010 TIMER3_IRQHandler
000187e8 g     F .text	00000014 I2C2::I2C2()
00010d3e g     F .text	0000000c nordic_set_rx_pipe0_addr
00014bc8 g     F .text	0000002c GPIO::enableOpenDrainMode(bool)
000185a0 g     F .text	00000024 UART0_IRQHandler
2007c79c g     O .bss	00000004 lcdComms
00019e28  w    F .text	0000004c Storage::getSDDrive()
00018a64 g     F .text	00000030 xPortStartScheduler
0001952c g     F .text	00000020 vTaskEndScheduler
0001f48a g     F .text	00000016 memcpy
00019954 g     F .text	00000020 vTaskPlaceOnEventList
00023964 g     F .text	00000120 __hexnan
000185e0 g     F .text	000000c0 ssp1_dma_transfer_block
00025b00 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
00020bcc g     F .text	0000015c setvbuf
00019ddc  w    F .text	0000004c Storage::getFlashDrive()
00026ab4  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
0001ecb0 g     F .text	0000000c _cleanup_r
0001d578 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000245a8 g     F .text	000001e8 _svfprintf_r
0001deec g     F .text	00000022 .hidden __floatsidf
00018a50  w    F .text	00000014 vPortSetupTimerInterrupt
00026b68 g     O .text	0000000f typeinfo name for NordicStream
00010bb8 g     F .text	0000000c nordic_flush_rx_fifo
00025a7c g     F .text	00000082 .hidden __ltdf2
2007c90c g     O .bss	0000000c song_database
00018a24 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
000144d0 g     F .text	00000026 disk_initialize
000114bc g     F .text	00000010 mesh_set_retry_count
0001d584 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001e5e0 g     F .text	00000000 .hidden __aeabi_uldivmod
000178fc g     F .text	00000176 I2C_Base::i2cStateMachine()
00020914 g     F .text	00000010 puts
00028ca8 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
00018b4e g     F .text	0000001a vPortFree
0001b4e0 g     F .text	000000b4 flashProgHandler(str&, CharDev&, void*)
00021f10 g     F .text	0000001a tolower
00025010 g     F .text	00000050 _vfscanf_r
000243de g     F .text	00000050 __ratio
00020b9c g     F .text	00000030 iscanf
00013654 g     F .text	00000128 f_rename
00014f7a g     F .text	00000004 LED::init()
0001b6cc  w    F .text	0000004c terminalTask::~terminalTask()
000154f0 g     F .text	0000007c tlm_variable_register
00013d10 g     F .text	00000004 ff_del_syncobj
00026bb8  w    O .text	00000007 typeinfo name for Uart0
0001f40c g     F .text	00000010 malloc
00017d80  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
00014ed8 g     F .text	00000018 LED_Display::setLeftDigit(char)
00020d30 g     F .text	00000050 _raise_r
000176b4 g     F .text	00000010 _fstat
000186a0 g     F .text	00000030 spi1_lock
0001e20c g     F .text	0000001c .hidden __aeabi_i2f
00029090 g     O .text	000000c8 __mprec_tens
00019bc8 g     F .text	00000020 uxTaskGetStackHighWaterMark
0001a5b4 g     F .text	000000b8 newFileHandler(str&, CharDev&, void*)
0001cb88 g     F .text	00000010 LabGPIOInterrupts::init()
0001a66c g     F .text	0000013c dcpHandler(str&, CharDev&, void*)
00022400 g     F .text	0000001c vsnprintf
000189e0 g     F .text	00000044 xPortPendSVHandler
0001dfb8 g     F .text	00000040 .hidden __fixunsdfsi
00018b84 g     F .text	00000018 vListInsertEnd
00013fec g     F .text	0000016c sd_initialize
00010d1c g     F .text	00000016 nordic_set_addr_width
000176e8 g     F .text	000000d8 I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)
0002480a g     F .text	0000003a __ssrefill_r
00010d4c g     F .text	000000c8 nordic_init
00020db4 g     F .text	00000004 _getpid_r
0002d565 g       .text	00000000 __symbol_table_end
000144f6 g     F .text	00000010 disk_status
00011010 g     F .text	0000004c wireless_init
000254b4 g     F .text	0000002c strtoul
2007c560 g     O .bss	00000004 .hidden __dso_handle
0001decc g     F .text	0000001e .hidden __aeabi_ui2d
00018780 g     F .text	00000068 I2C2::init(unsigned int)
00023c94 g     F .text	0000001c _localeconv_r
0001d788 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
2007c8d8 g     O .bss	00000001 lcd_display
00023ef8 g     F .text	00000012 __i2b
0001d5c4 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001e610 g     F .text	000002dc .hidden __udivmoddi4
00010c68 g     F .text	00000024 nordic_set_channel
0001dc48 g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
00020b7c g     F .text	00000020 _sbrk_r
0001171c g     F .text	0000003e mesh_send
0001a044 g     F .text	00000198 logHandler(str&, CharDev&, void*)
00026ad0  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
000132dc g     F .text	0000001a f_closedir
00014bf4 g     F .text	0000001a GPIO::~GPIO()
00025314 g     F .text	00000024 _read_r
00028348 g     O .text	0000000f typeinfo name for terminalTask
00018b7e g     F .text	00000006 vListInitialiseItem
00015bc0 g     F .text	0000001a tlm_variable_get_value
00014576 g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
00025b34 g     F .text	00000012 .hidden __aeabi_dcmplt
00018496 g     F .text	00000044 NordicStream::getChar(char*, unsigned int)
0001e934 g     F .text	000000a4 _fclose_r
000188f8 g     F .text	00000028 CAN_IRQHandler
0001eb4c g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
00016750 g     F .text	0000000c logger_get_highest_file_write_time_ms
00010148  w    F .text	00000010 PLL1_IRQHandler
00026a24 g     O .text	00000009 typeinfo name for CharDev
0001c7a4 g     F .text	00000060 MP3_DECODER::sendSDI(unsigned char*, unsigned int)
00018a94 g     F .text	00000014 rts_not_full_trace_init
00014f08 g     F .text	00000038 LED_Display::init()
0001df10 g     F .text	0000003a .hidden __extendsfdf2
0001c908 g     F .text	00000004 SONG_DATABASE::get_head()
00024844 g     F .text	000002a8 __ssvfscanf_r
000258a4 g     F .text	000001d0 .hidden __aeabi_ddiv
0001eb70 g     F .text	00000058 _fgetc_r
00010148  w    F .text	00000010 SSP0_IRQHandler
00010c8c g     F .text	0000002c nordic_set_air_data_rate
0001dc54 g     F .text	00000276 .hidden __adddf3
0001a4e0 g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
00010148  w    F .text	00000010 CANAct_IRQHandler
00028c64 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
00016988 g     F .text	00000040 logger_log_raw
00011ac0 g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
0002429c g     F .text	000000a4 __b2d
0002d565 g       .text	00000000 __exidx_start
00025650 g     F .text	00000254 .hidden __aeabi_dmul
00010200 g     F .text	0000000c sys_get_boot_type
000176c4 g     F .text	00000024 _isatty
0001d5ac g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00010d32 g     F .text	0000000c nordic_set_tx_address
000170f4 g     F .text	00000004 operator delete(void*)
0001cd78 g     F .text	00000002 LCDCOMMS::LCDCOMMS()
00028d68 g     O .text	00000004 _global_impure_ptr
0001d79c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
000244a4 g     F .text	0000004c _realloc_r
00020ff0 g     F .text	0000004e strncasecmp
0001f0ec g     F .text	00000048 __libc_init_array
00015f64 g     F .text	00000164 CommandProcessor::handleCommand(str&, CharDev&)
00013ef0 g     F .text	0000004c xmit_datablock
00017aa8 g     F .text	0000005c UartDev::putChar(char, unsigned int)
0001542c g     F .text	0000006c tlm_component_add
00010ba4 g     F .text	00000014 nordic_read_rx_fifo
0001abd8 g     F .text	000001a0 i2cIoHandler(str&, CharDev&, void*)
0001675c g     F .text	0000000c logger_get_num_buffers_watermark
00029068 g     O .text	00000028 __mprec_bigtens
00023de0 g     F .text	0000007c __s2b
0001e8f0 g     F .text	0000000e abort
00017514 g     F .text	0000014c _open
0001decc g     F .text	0000001e .hidden __floatunsidf
00014794 g     F .text	00000098 flash_initialize
00017080 g     F .text	0000006c _sbrk
0001844c  w    F .text	00000014 NordicStream::~NordicStream()
00024162 g     F .text	00000034 __mcmp
00018b30 g     F .text	0000001e pvPortMalloc
00023b40 g     F .text	00000130 gmtime_r
00026ad8  w    O .text	00000007 typeinfo name for Uart2
0001341e g     F .text	000000d6 f_unlink
00018530  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
0001733c g     F .text	00000004 _init
00010500  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
000189a4 g     F .text	00000002 vPortEndScheduler
000187fc g     F .text	00000024 I2C2_IRQHandler
00018b68 g     F .text	00000016 vListInitialise
00017340 g     F .text	00000034 syscalls_init
000182e0  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
00015498 g     F .text	00000024 tlm_component_for_each
00021ebc g     F .text	0000002c strtol
00018388  w    F .text	00000014 Uart2::~Uart2()
0001eea0 g     F .text	00000120 _fseeko_r
0001dc24 g     F .text	0000000a std::terminate()
0001dff8 g     F .text	0000009e .hidden __aeabi_d2f
00017e18 g     F .text	00000078 CharDev::printf(char const*, ...)
0001955c g     F .text	0000000c xTaskGetTickCount
00018df0 g     F .text	00000104 xQueueGenericSend
0001e0a0 g     F .text	00000164 .hidden __aeabi_fsub
00016aa0 g     F .text	000000ac RTC_IRQHandler
00021130 g     F .text	00000bf0 _strtod_l
0002393e g     F .text	00000026 __match
0001b864 g     F .text	00000084 terminalTask::saveDiskTlm()
2007c988 g       .bss	00000000 _ebss
0001616c g     F .text	00000124 scheduler_c_task_private(void*)
0001d7b0 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
00014bf4 g     F .text	0000001a GPIO::~GPIO()
0001090a g     F .text	00000006 __set_PSP
0001b7b4 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00017dc8 g     F .text	00000050 CharDev::gets(char*, int, unsigned int)
00017b2c g     F .text	00000020 UartDev::flush()
00022400 g     F .text	0000001c vsniprintf
00028be0 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
00022096 g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0002108c g     F .text	00000026 strrchr
00023e5c g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00010d08 g     F .text	00000014 nordic_set_payload_for_pipe
2007c7a4 g     O .bss	0000001e current_directory
00019b30 g     F .text	00000098 uxTaskGetSystemState
00025bb0 g     F .text	0000004e .hidden __fixdfsi
0001e908 g     F .text	00000010 calloc
00019c98 g     F .text	00000070 xTaskPriorityDisinherit
0001a51c g     F .text	0000003c rmHandler(str&, CharDev&, void*)
000184dc g     F .text	00000040 NordicStream::NordicStream()
00014900 g     F .text	00000044 flash_write_permanent_id
2007c5ec g     O .bss	00000004 g_adc_result_queue
0001cf54 g     F .text	00000028 selectButton()
0001cf00 g     F .text	00000048 audioDecoderTask(void*)
0001e238 g     F .text	0000007c .hidden __floatdisf
00026b00  w    O .text	0000001c vtable for Uart2
0001bffc g     F .text	00000560 high_level_init()
00017cac g     F .text	00000028 UartDev::UartDev(unsigned int*)
00019d20 g     F .text	00000068 vTaskResetRunTimeStats
00016b98 g     F .text	00000028 str::str(char*, int)
0001d756 g     F .text	00000002 std::type_info::~type_info()
0001a25c g     F .text	00000100 catHandler(str&, CharDev&, void*)
000107b8 g     F .text	000000a8 sys_get_cpu_clock
00014dda  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
00010220 g     F .text	00000228 low_level_init()
2007c2b0 g     O .data	00000008 _tzname
0001be84  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
00016834 g     F .text	0000001c logger_set_printf
00019974 g     F .text	00000070 xTaskRemoveFromEventList
00018b0c g     F .text	00000024 vApplicationMallocFailedHook
2007c2f8 g     O .data	00000004 environ
00018584 g     F .text	0000001c Uart0::Uart0()
00010620 g     F .text	00000058 isr_hard_fault_handler
0001d626 g     F .text	00000004 operator delete(void*, unsigned int)
00016f14 g     F .text	00000014 str::operator[](int)
0001dc54 g     F .text	00000276 .hidden __aeabi_dadd
00025a7c g     F .text	00000082 .hidden __ledf2
0001e918 g     F .text	0000000e ctime
2007c798  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
000177c8 g     F .text	0000001a I2C_Base::readReg(unsigned char, unsigned char)
00015d72 g     F .text	0000002a c_list_for_each_elm
00020f82 g     F .text	0000001e strcat
0001d370 g     F .text	00000024 nextButton()
00015ce2 g     F .text	00000038 c_list_insert_elm_end
00024024 g     F .text	0000009c __pow5mult
00014ba8 g     F .text	00000020 GPIO::enablePullUp()
0001df4c g     F .text	0000006a .hidden __aeabi_ul2d
00010b08 g     F .text	00000024 nordic_standby1_to_rx
000155c4 g     F .text	000001ec tlm_variable_set_value
00010148  w    F .text	00000010 EINT1_IRQHandler
0001ccf8 g     F .text	00000040 LabGPIO::LabGPIO(unsigned char, unsigned char)
00010518 g     F .text	000000bc TIMER1_IRQHandler
00014fe0 g     F .text	00000018 Switches::getSwitchValues()
00028d08 g     O .text	00000020 __sf_fake_stderr
00026ae0  w    O .text	00000020 typeinfo for Uart2
00020db8 g     F .text	00000068 sniprintf
00015d9c g     F .text	0000007c CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
0001dc14 g     F .text	00000010 std::get_terminate()
00017026 g     F .text	0000001a str::operator+=(char)
0001bba4  w    F .text	00000022 Uart0::getcharIntrDriven(char)
00016d56 g     F .text	0000002e str::beginsWithIgnoreCase(char const*) const
00010b40 g     F .text	0000004c nordic_mode1_send_single_packet
0001a7a8 g     F .text	000000bc storageHandler(str&, CharDev&, void*)
00013e64 g     F .text	0000008c rcvr_datablock
0001cb74 g     F .text	00000012 LabGPIOInterrupts::LabGPIOInterrupts()
000183cc g     F .text	00000024 UART2_IRQHandler
00017b04  w    F .text	00000014 UartDev::~UartDev()
00015594 g     F .text	00000030 tlm_variable_get_by_comp_and_name
00018aa8 g     F .text	00000014 rts_not_full_trace_get
000117a0 g     F .text	0000001c mesh_get_num_routing_entries
000244f0 g     F .text	000000b6 __ssputs_r
00011498 g     F .text	00000018 mesh_set_node_address
00019d08 g     F .text	00000018 pvTaskIncrementMutexHeldCount
0001851c  w    F .text	00000014 Uart0::~Uart0()
0001d5ee g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001d788 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001c8fc g     F .text	00000002 SONG_NODE::get_file_name()
000160c8  w    F .text	00000004 scheduler_task::init()
00016de4 g     F .text	0000001e str::eraseLast(int)
00025b70 g     F .text	00000012 .hidden __aeabi_dcmpgt
0001d544 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c764  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
00024b18 g     F .text	00000024 __sfputs_r
00014fd4 g     F .text	00000006 Light_Sensor::getRawValue()
0001ee08 g     F .text	00000002 __sfp_lock_acquire
0001f450 g     F .text	0000001c memchr
0001fca8  w    F .text	00000470 _printf_float
000186d0 g     F .text	00000024 spi1_unlock
000199fc g     F .text	0000004c xTaskCheckForTimeOut
0001c8fe g     F .text	0000000a SONG_DATABASE::SONG_DATABASE()
0001f9cc g     F .text	00000098 _free_r
00015230 g     F .text	000001b8 tlm_stream_decode_file
00015e18 g     F .text	000000a0 CommandProcessor::getRegisteredCommandList(CharDev&)
00025b5c g     F .text	00000012 .hidden __aeabi_dcmpge
000183b0 g     F .text	0000001c Uart2::Uart2()
00020b24 g     F .text	00000058 __srget_r
00016d12 g     F .text	00000016 str::firstIndexOf(char const*) const
0001aa10  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
00010860 g     F .text	00000060 uart0_init
0001c828 g     F .text	000000a8 SONG_NODE::SONG_NODE()
2007c300 g       .bss	00000000 _bss
0001c8f0 g     F .text	00000006 SONG_NODE::get_next()
00016fe0 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
00024790 g     F .text	0000007a _sungetc_r
0001bfe4  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
000130e4 g     F .text	00000024 f_close
00014158 g     F .text	00000010 sd_status
0001dc50 g     F .text	0000027a .hidden __aeabi_dsub
0001f6a4 g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
00010b9c g     F .text	00000008 nordic_clear_packet_available_flag
00026bb0  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
0001954c g     F .text	00000010 vTaskSuspendAll
00019474 g     F .text	00000054 eTaskGetState
000210b2 g     F .text	00000036 strstr
2007c5f0  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
00028c98 g     O .text	0000000d typeinfo name for std::type_info
00019568 g     F .text	0000000c xTaskGetTickCountFromISR
00015d1a g     F .text	0000002c c_list_get_elm_at
0001c90c g     F .text	000000a0 print_fresult_msg(FRESULT)
0001df4c g     F .text	0000006a .hidden __floatundidf
0001498c g     F .text	0000000c flash_get_page_size
00020974 g     F .text	00000074 rand
00017410 g     F .text	00000060 _lseek
0001d648 g     F .text	00000006 __cxa_pure_virtual
000240c0 g     F .text	000000a2 __lshift
0001b958 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
0001e20c g     F .text	0000001c .hidden __floatsisf
2007c904 g     O .bss	00000008 rst
00018bca g     F .text	00000020 uxListRemove
00020808 g     F .text	00000024 _open_r
00015cdc g     F .text	00000006 c_list_node_count
00014dce  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
0001cb74 g     F .text	00000012 LabGPIOInterrupts::LabGPIOInterrupts()
00014cfe g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00012d3e g     F .text	00000170 f_read
000184dc g     F .text	00000040 NordicStream::NordicStream()
0002103e g     F .text	00000024 strncmp
000181b0 g     F .text	00000048 ADC_IRQHandler
0001d6b0 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000108c0 g     F .text	00000018 uart0_getchar
0001cd78 g     F .text	00000002 LCDCOMMS::LCDCOMMS()
00016f9e g     F .text	00000042 str::printf(char const*, ...)
00016c60 g     F .text	00000014 str::compareTo(char const*) const
0001a35c g     F .text	00000184 lsHandler(str&, CharDev&, void*)
00023f0a g     F .text	00000118 __multiply
000132f6 g     F .text	00000060 f_readdir
00010610 g     F .text	00000010 isr_register
0001b174  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
00019c08 g     F .text	00000090 vTaskPriorityInherit
00013cfc g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
0001e554 g     F .text	0000004c .hidden __aeabi_f2iz
00028dd4 g     O .text	00000060 __month_lengths
00016bc0 g     F .text	00000026 str::~str()
00016be6 g     F .text	00000006 str::getLen() const
00021062 g     F .text	0000002a strncpy
2007c92c g     O .bss	00000028 __malloc_current_mallinfo
00016ecc g     F .text	0000003a str::trimEnd(char const*)
2007c7c8 g     O .bss	00000004 cursor_song
00024340 g     F .text	0000009e __d2b
00020f46 g     F .text	0000003c strcasecmp
2007c770  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
000197ec g     F .text	000000b8 vTaskSwitchContext
0001d756 g     F .text	00000002 std::type_info::~type_info()
00018584 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
00026a30 g     O .text	0000001c vtable for CharDev
000177e2 g     F .text	00000008 I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001d72c g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001b718  w    F .text	00000014 terminalTask::~terminalTask()
000209e8 g     F .text	00000010 realloc
00017d84 g     F .text	00000028 CharDev::put(char const*, unsigned int)
00028cb4 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
0001107c g     F .text	0000004c wireless_service
00025490 g     F .text	00000024 _strtoul_r
0001482c g     F .text	00000050 flash_read_sectors
00010b8c g     F .text	00000010 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
00016730 g     F .text	00000014 logger_get_logged_call_count
00016bec g     F .text	00000004 str::getCapacity() const
0001e41c g     F .text	00000136 .hidden __aeabi_fdiv
000226b0 g     F .text	00000020 _close_r
2007c5f8  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001deec g     F .text	00000022 .hidden __aeabi_i2d
0001a1dc g     F .text	00000080 cpHandler(str&, CharDev&, void*)
0001c630 g     F .text	00000174 MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)
0001161c g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00017a74 g     F .text	00000034 I2C_Base::handleInterrupt()
0001f46c g     F .text	0000001e memcmp
2007c77c  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
0001707c g     F .text	00000004 str::operator=(char const*)
0001f034 g     F .text	0000009c _fwrite_r
2007c7a0 g     O .bss	00000004 audio_data
00010148  w    F .text	00000010 USB_IRQHandler
0001e228 g     F .text	0000008c .hidden __floatundisf
0001d650 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00014b8e g     F .text	0000000c GPIO::setHigh()
00020e68 g     F .text	00000054 sscanf
0002255c g     F .text	000000dc __swsetup_r
0001b998 g     F .text	00000124 terminalTask::getCommand()
2007c5e8 g     O .bss	00000004 g_adc_mutex
00018ad4 g     F .text	00000038 vApplicationStackOverflowHook
0001e8ec  w    F .text	00000002 .hidden __aeabi_ldiv0
000198a4 g     F .text	000000b0 vTaskSuspend
000258a4 g     F .text	000001d0 .hidden __divdf3
0001ed90 g     F .text	00000078 __sfp
0002442e g     F .text	00000034 __copybits
0001d758 g     F .text	00000004 std::type_info::__is_pointer_p() const
00019574 g     F .text	0000000c uxTaskGetNumberOfTasks
0001b594 g     F .text	00000138 getFileHandler(str&, CharDev&, void*)
0001bf88  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
0001e204 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c09c g     O .data	00000040 g_can_structs
000223a8 g     F .text	00000058 _vsnprintf_r
00025650 g     F .text	00000254 .hidden __muldf3
0001d138 g     F .text	000001fc update_display()
00020ebc g     F .text	00000022 __sread
00015f28 g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
00014ab4 g     F .text	00000052 get_fattime
00016b4c g     F .text	0000001c delay_us
00017b18  w    F .text	00000014 UartDev::~UartDev()
00010c02 g     F .text	00000038 nordic_set_crc
000291a8 g     O .text	000043bd APP_SYM_TABLE
000108f0 g     F .text	0000001a uart0_puts
00018388  w    F .text	00000014 Uart2::~Uart2()
00017e90 g     F .text	00000020 CharDev::CharDev()
000171b4 g     F .text	00000004 __malloc_lock
00028c04 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
0001c8d0 g     F .text	00000020 SONG_NODE::get_song_title()
0001eaf8 g     F .text	00000054 _fflush_r
0001106c g     F .text	00000010 wireless_get_ack_pkt
00017002 g     F .text	00000024 str::insertAtEnd(char const*)
0001f9b0 g     F .text	0000001c _calloc_r
00017868 g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
0001020c g     F .text	00000014 sys_get_boot_time
00028d28 g     O .text	00000020 __sf_fake_stdin
00022094 g     F .text	00000002 __tz_lock
00011ae4 g     F .text	00000014 mesh_get_stats
0001ee8c g     F .text	00000010 fopen
00022664 g     F .text	0000004c asctime_r
0001105c g     F .text	00000010 wireless_get_rx_pkt
0001f134 g     F .text	00000024 localtime
0001f4d4 g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
0001cf7c g     F .text	000001bc main
00026b94  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00016b76 g     F .text	00000022 delay_ms
00016f90 g     F .text	0000000e str::reserve(int)
00010abe g     F .text	0000000e nordic_is_tx_fifo_empty
00014fda g     F .text	00000004 Switches::init()
00014c0e g     F .text	000000f0 Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
000170fc g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
0001c9ac g     F .text	00000090 SONG_NODE::import_song_info()
00010b34 g     F .text	0000000c nordic_flush_tx_fifo
0001e238 g     F .text	0000007c .hidden __aeabi_l2f
00020924 g     F .text	00000050 srand
0001649c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00017cac g     F .text	00000028 UartDev::UartDev(unsigned int*)
00017818 g     F .text	00000050 I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
0001305a g     F .text	0000008a f_sync
00010148  w    F .text	00000010 WDT_IRQHandler
00014ef0 g     F .text	00000018 LED_Display::setRightDigit(char)
000117bc g     F .text	000002d0 mesh_service
00018b9c g     F .text	0000002e vListInsert
0001d394 g     F .text	00000024 prevButton()
0001bb6c  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
00020f3e g     F .text	00000008 __sclose
000170f8 g     F .text	00000004 operator delete[](void*)
00016d04 g     F .text	0000000e str::containsIgnoreCase(char const*) const
0001e9d8 g     F .text	00000010 fclose
2007c76c  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
00021e98 g     F .text	00000024 _strtol_r
0001dff8 g     F .text	0000009e .hidden __truncdfsf2
000181f8 g     F .text	00000074 adc0_init
00023a84 g     F .text	00000080 _findenv_r
000291a8 g       .text	00000000 __init_array_end
00018980 g     F .text	00000024 vPortSVCHandler
00022810 g     F .text	00000ba8 _dtoa_r
0001fac8 g     F .text	000000bc _malloc_r
0002251c g     F .text	0000001a __ascii_wctomb
0001ca3c g     F .text	0000001c SONG_NODE::import_song_info(char*)
00021ee8 g     F .text	00000028 time
000115c4 g     F .text	00000058 mesh_send_formed_pkt
00013808 g     F .text	000004f4 f_mkfs
0001df5c g     F .text	0000005a .hidden __aeabi_l2d
00014f80 g     F .text	00000050 LED::setAll(unsigned char)
00016d84 g     F .text	00000038 str::beginsWithWholeWordIgnoreCase(char const*, char) const
00012b94 g     F .text	0000007c f_mount
00019764 g     F .text	00000058 vTaskDelayUntil
000254e0 g     F .text	00000072 __submore
0002563a g     F .text	00000002 __env_unlock
00028bd4 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00014e24 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001efc0 g     F .text	00000038 _fwalk
0001babc g     F .text	000000b0 terminalTask::run(void*)
00014d86 g     F .text	00000048 Storage::append(char const*, void const*, unsigned int, unsigned int)
00013256 g     F .text	00000086 f_opendir
00014ff8 g     F .text	00000018 Switches::getSwitch(int)
0001ebd8 g     F .text	000000c4 _fgets_r
00019134 g     F .text	00000068 xQueueReceiveFromISR
0001e228 g     F .text	0000008c .hidden __aeabi_ul2f
0001cc74 g     F .text	00000084 LabGPIOInterrupts::handle_interrupt()
00014200 g     F .text	000000b4 sd_write
00018dac g     F .text	00000032 xQueueGenericCreate
00026a78  w    O .text	00000020 typeinfo for Uart3
0001e2b4 g     F .text	00000168 .hidden __mulsf3
000166fc g     F .text	00000034 logger_send_flush_request
00010108  w    F .text	00000010 isr_mem_fault
000177c0 g     F .text	00000008 I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001cd7c g     F .text	0000002c LCDCOMMS::write(unsigned char, unsigned char, char*)
00022098 g     F .text	0000000c _tzset_unlocked
00020fbc g     F .text	00000014 strcmp
00020e68 g     F .text	00000054 siscanf
00018dde g     F .text	00000012 xQueueCreateCountingSemaphore
0001aa30 g     F .text	000001a8 healthHandler(str&, CharDev&, void*)
0001b7b4 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00015eb8 g     F .text	00000070 CommandProcessor::getHelpText(str&, CharDev&)
00010c3a g     F .text	00000018 nordic_power_up
0001730c g     F .text	0000000c sys_set_inchar_func
00012158 g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
00025a84 g     F .text	0000007a .hidden __nedf2
00026a1c g     O .text	00000008 typeinfo for CharDev
0001b6cc  w    F .text	0000004c terminalTask::~terminalTask()
2007c918 g     O .bss	00000004 song_selected
0001bfcc  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001ccf8 g     F .text	00000040 LabGPIO::LabGPIO(unsigned char, unsigned char)
0002082c g     F .text	00000030 iprintf
00013d3a g     F .text	0000001e ff_rel_grant
00018348 g     F .text	0000001c Uart3::Uart3()
0001d664 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001968c g     F .text	000000d8 xTaskResumeAll
0001cd7a g     F .text	00000002 LCDCOMMS::~LCDCOMMS()
00024d68 g     F .text	000002a8 __svfiscanf_r
00013108 g     F .text	0000014e f_lseek
0001ebc8 g     F .text	00000010 fgetc
00020e20 g     F .text	00000048 sprintf
00017b04  w    F .text	00000014 UartDev::~UartDev()
000194c8 g     F .text	00000064 vTaskStartScheduler
0001fc3c g     F .text	0000006a __exponent
00026a70  w    O .text	00000007 typeinfo name for Uart3
00014b6a g     F .text	00000010 GPIO::setAsOutput()
0001c570 g     F .text	00000038 MP3_DECODER::MP3_DECODER()
00014e04 g     F .text	00000020 Acceleration_Sensor::init()
0001d642 g     F .text	00000006 __cxa_guard_release
00017e90 g     F .text	00000020 CharDev::CharDev()
00022538 g     F .text	00000024 _write_r
00026a00 g     O .text	0000001c vtable for UartDev
00017bb8 g     F .text	00000034 UartDev::setBaudRate(unsigned int)
00014b08 g     F .text	00000050 GPIO::GPIO(LPC1758_GPIO_Type)
00020b9c g     F .text	00000030 scanf
2007c768  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001e098 g     F .text	0000016c .hidden __aeabi_frsub
00028cdc g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00017300 g     F .text	0000000c sys_set_outchar_func
00014a88 g     F .text	0000002c flash_chip_erase
00020d28 g     F .text	00000008 nanf
00020118 g     F .text	000000ee _printf_common
0001826c g     F .text	00000074 adc0_get_reading
2007c0e0 g     O .data	00000004 _impure_ptr
2007c7c4 g     O .bss	00000004 current_playing_song
000169e6 g     F .text	0000003c u0_dbg_printf
0001e9e8 g     F .text	00000110 __sflush_r
0001e2b4 g     F .text	00000168 .hidden __aeabi_fmul
00026be0  w    O .text	0000001c vtable for Uart0
0001ee9c g     F .text	00000004 _fseek_r
000291a0 g       .text	00000000 __preinit_array_end
000245a8 g     F .text	000001e8 _svfiprintf_r
00020a0c g     F .text	00000118 __srefill_r
00013e40 g     F .text	00000024 power_off
0001c570 g     F .text	00000038 MP3_DECODER::MP3_DECODER()
00015064 g     F .text	00000024 I2C_Temp::getFarenheit()
0001f42c g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
000187e8 g     F .text	00000014 I2C2::I2C2()
00010910 g     F .text	00000006 __set_MSP
00024254 g     F .text	00000048 __ulp
000157b0 g     F .text	00000410 tlm_variable_print_value
0001bbc8 g     F .text	000002bc terminalTask::taskEntry()
00016b98 g     F .text	00000028 str::str(char*, int)
000182f4  w    F .text	00000014 Uart3::~Uart3()
0001839c  w    F .text	00000014 Uart2::~Uart2()
00019a48 g     F .text	0000000c vTaskMissedYield
00010ad4 g     F .text	0000000c nordic_queue_tx_fifo
0001844c  w    F .text	00000014 NordicStream::~NordicStream()
0002833c g     O .text	0000000c typeinfo for terminalTask
2007c988 g       .bss	00000000 _pvHeapStart
000108d8 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001f99c g     F .text	00000014 mallinfo
00018308 g     F .text	00000040 Uart3::init(unsigned int, int, int)
000169c8 g     F .text	0000001e u0_dbg_put
00016c74 g     F .text	00000010 str::compareToIgnoreCase(char const*) const
00017bec g     F .text	000000c0 UartDev::handleInterrupt()
00017800 g     F .text	00000016 I2C_Base::checkDeviceResponse(unsigned char)
000223a8 g     F .text	00000058 _vsniprintf_r
00015200 g     F .text	0000001c tlm_stream_all
0001919c g     F .text	00000012 uxQueueMessagesWaiting
00019000 g     F .text	00000134 xQueueGenericReceive
0001dfb8 g     F .text	00000040 .hidden __aeabi_d2uiz
00017818 g     F .text	00000050 I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c97c g     O .bss	00000004 _timezone
0001f158 g     F .text	000001c8 localtime_r
00013f3c g     F .text	0000008c send_cmd
0001d584 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001851c  w    F .text	00000014 Uart0::~Uart0()
00019580 g     F .text	0000010c xTaskIncrementTick
00024844 g     F .text	000002a8 __ssvfiscanf_r
00010c52 g     F .text	00000016 nordic_power_down
00017f2c g     F .text	00000068 rtc_settime
00016e02 g     F .text	00000038 str::eraseAfter(int, int)
2007c774  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
0001201c g     F .text	00000016 clust2sect
2007c924 g     O .bss	00000008 xdcs
0001dc30 g     F .text	00000018 .hidden __aeabi_llsl
000104c8 g     F .text	00000038 sys_get_mem_info_str
00026b40  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
0001f344 g     F .text	00000048 __swhatbuf_r
2007c0dc g     O .data	00000004 __cxxabiv1::__terminate_handler
00016744 g     F .text	0000000c logger_get_blocked_call_count
00010916 g     F .text	00000006 __set_BASEPRI
00025b20 g     F .text	00000012 .hidden __aeabi_dcmpeq
000185c4 g     F .text	0000001c ssp1_dma_init
0001f0d0 g     F .text	0000001c fwrite
000183b0 g     F .text	0000001c Uart2::Uart2()
00028c30 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00018d40 g     F .text	0000006c xQueueGenericReset
00017470 g     F .text	000000a4 _write
2007c2fc g       .data	00000000 _edata
0001d84e g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014f40 g     F .text	0000003a LED_Display::setNumber(char)
00011a8c g     F .text	00000034 mesh_get_pnd_pkt_count
00014d42 g     F .text	00000044 Storage::write(char const*, void*, unsigned int, unsigned int)
0001496c g     F .text	00000020 flash_get_page_count
00012eae g     F .text	000001ac f_write
00016f0a g     F .text	00000004 str::operator()() const
00015010 g     F .text	00000022 I2C_Temp::init()
0001487c g     F .text	0000004c flash_write_sectors
000220a4 g     F .text	00000304 _tzset_unlocked_r
000192d0 g     F .text	000001a4 xTaskCreate
0002241c g     F .text	00000048 _vsscanf_r
0001e5a0 g     F .text	0000003e .hidden __aeabi_f2uiz
00017eb0 g     F .text	00000018 CharDev::~CharDev()
00016c84 g     F .text	00000080 str::firstIndexOfIgnoreCase(char const*) const
00018474 g     F .text	00000022 NordicStream::putChar(char, unsigned int)
000183f0 g     F .text	0000005c NordicStream::flush()
00020ee2 g     F .text	00000038 __swrite
000170ec g     F .text	00000004 operator new(unsigned int)
2007c91c g     O .bss	00000008 xcs
00012c10 g     F .text	0000012e f_open
00016e3a g     F .text	00000028 str::erase(char const*)
0001d824  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001453e g     F .text	00000038 disk_write
000148c8 g     F .text	00000036 flash_ioctl
00010cdc g     F .text	0000002c nordic_set_auto_transmit_options
00015cc8 g     F .text	00000014 c_list_create
00024b3c g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
000160cc  w    F .text	00000004 scheduler_task::regTlm()
0001a558 g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001eff8 g     F .text	0000003c _fwalk_reent
0001d678 g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001e204 g     F .text	00000024 .hidden __floatunsisf
00024196 g     F .text	000000be __mdiff
00017eb0 g     F .text	00000018 CharDev::~CharDev()
00025bb0 g     F .text	0000004e .hidden __aeabi_d2iz
0001dc0a g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00013d14 g     F .text	00000026 ff_req_grant
00022464 g     F .text	00000014 vsiscanf
2007c790  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
0001cf48 g     F .text	0000000c c_eint3_handler()
00017318 g     F .text	00000010 _kill
00016f28 g     F .text	0000004c str::reAllocateMem(int)
00010148  w    F .text	00000010 DMA_IRQHandler
0001b72c g     F .text	00000048 terminalTask::regTlm()
00015408 g     F .text	00000024 tlm_component_get_by_name
000197bc g     F .text	00000030 vTaskDelay
0001bb8c  w    F .text	00000018 Uart0::putcharIntrDriven(char)
0001ee0a g     F .text	00000002 __sfp_lock_release
0001c5a8 g     F .text	00000088 MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)
00016290 g     F .text	000001b0 scheduler_init_all(bool)
00028d48 g     O .text	00000020 __sf_fake_stdout
00020e20 g     F .text	00000048 siprintf
00025338 g     F .text	0000005e __sccl
0001e8fe g     F .text	00000008 atoi
000171bc g     F .text	0000007a _gettimeofday
00019be8 g     F .text	00000020 xTaskGetSchedulerState
00028f55 g     O .text	00000101 _ctype_
00017374 g     F .text	0000009c _read
000291a0 g       .text	00000000 __init_array_start
0001e8ec  w    F .text	00000002 .hidden __aeabi_idiv0
00019f80 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
00025b84 g     F .text	0000002c .hidden __unorddf2
0001cdd0 g     F .text	00000014 playButton()
00026634  w    O .text	00000008 typeinfo for scheduler_task
00016768 g     F .text	000000cc logger_init
000134f4 g     F .text	00000160 f_mkdir
0001cb98 g     F .text	000000dc LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)
0001e5a0 g     F .text	0000003e .hidden __fixunssfsi
0001521c g     F .text	00000014 tlm_stream_one_file
00016bf8 g     F .text	0000001c str::scanf(char const*, ...)
0001ee0c g     F .text	00000080 _fopen_r
00017328 g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
00014fd0 g     F .text	00000004 Light_Sensor::init()
0001ca58 g     F .text	0000011c SONG_DATABASE::import_songs(char*)
0001f38c g     F .text	00000080 __smakebuf_r
00016f84 g     F .text	0000000c str::str(int)
0001d334 g     F .text	0000003c vlcd_display(void*)
00020fe0 g     F .text	00000010 strlen
00014506 g     F .text	00000038 disk_read
00018954 g     F .text	00000024 pxPortInitialiseStack
00020208 g     F .text	00000240 _printf_i
0001f320 g     F .text	00000006 __locale_ctype_ptr_l
00028c90 g     O .text	00000008 typeinfo for std::type_info
00017dac g     F .text	0000001c CharDev::putline(char const*, unsigned int)
00021f2a g     F .text	0000001a toupper
00025b10 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00025a74 g     F .text	0000008a .hidden __gedf2
00018364 g     F .text	00000024 UART3_IRQHandler
000234dc g     F .text	0000043e __gethex
2007c958 g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001d3b8 g     F .text	000000cc vbuttonTask(void*)
0001377c g     F .text	0000008c f_getlabel
0001b014 g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
00014b58 g     F .text	00000012 GPIO::setAsInput()
000226d0 g     F .text	00000028 div
00020fa0 g     F .text	0000001c strchr
00013356 g     F .text	000000c8 f_getfree
000199e4 g     F .text	00000018 vTaskSetTimeOutState
00013d58 g     F .text	0000003c ff_convert
0001df10 g     F .text	0000003a .hidden __aeabi_f2d
00017040 g     F .text	0000003c str::copyFrom(char const*)
000189a8 g     F .text	00000020 vPortEnterCritical
00015c7c g     F .text	00000016 tlm_binary_get_size_one
00016e62 g     F .text	0000002a str::eraseFirstWords(int, char)
000291a8 g       .text	00000000 __symbol_table_start
00013fc8 g     F .text	00000024 sd_update_card_status
00014944 g     F .text	00000028 flash_read_permanent_id
00014a34 g     F .text	00000054 flash_get_page_write_count
2007c954 g     O .bss	00000004 __malloc_free_list
0001556c g     F .text	00000028 tlm_variable_get_by_name
00016f74  w    F .text	00000010 str::init(int)
2007c78c  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00010af8 g     F .text	00000010 nordic_rx_to_Stanby1
000191ae g     F .text	00000004 uxQueueMessagesWaitingFromISR
00025638 g     F .text	00000002 __env_lock
00018064 g     F .text	00000014 rtc_get_date_time_str
0001c804 g     F .text	00000018 d_req_int_handler()
00015174 g     F .text	00000080 tlm_stream_one
0001dc50 g     F .text	0000027a .hidden __subdf3
00024b3c g     F .text	0000022c _vfprintf_r
000291a0 g       .text	00000000 __preinit_array_start
2007c7cc g     O .bss	00000008 dreq
00026621  w    O .text	00000011 typeinfo name for scheduler_task
00023e9a g     F .text	0000005e __lo0bits
00024d68 g     F .text	000002a8 __svfscanf_r
00021f44 g     F .text	00000150 __tzcalc_limits
00019d88 g     F .text	00000028 vRunTimeStatIsrEntry
00025554 g     F .text	000000e4 _ungetc_r
000171b0 g     F .text	00000004 __aeabi_atexit
0001d75c g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
0001d62a g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
00018ef4 g     F .text	00000024 xQueueCreateMutex
0001e0a4 g     F .text	00000160 .hidden __addsf3
0001cd38 g     F .text	00000040 LabGPIO::setAsInput()
2007c144 g     O .data	0000016c __global_locale
00010cb8 g     F .text	00000024 nordic_set_power_level
00010138  w    F .text	00000010 isr_debug_mon
00018f98 g     F .text	00000068 xQueueGiveFromISR
00023b38 g     F .text	00000008 __gettzinfo
00020d80 g     F .text	00000010 raise
00017660 g     F .text	00000054 _close
0001f41c g     F .text	00000010 free
00026bc0  w    O .text	00000020 typeinfo for Uart0
00020448  w    F .text	000003c0 _scanf_float
000142b4 g     F .text	0000021c sd_ioctl
00023d6a g     F .text	00000076 __multadd
0001d598 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00023d3c g     F .text	0000002e _Bfree
00018abc g     F .text	00000014 rts_not_full_trace_reset
00017cd4 g     F .text	000000ac UartDev::init(unsigned int, unsigned int, int, int)
00023b04 g     F .text	0000000e _getenv_r
0001091c g     F .text	00000034 lpc_pconp
00018ad0 g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	81 89 01 00 39 01 01 00 00 00 00 00 e1 89 01 00     ....9...........
   1003c:	59 01 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     Y...............
   1004c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1005c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1006c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1007c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1008c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   1009c:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100ac:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................
   100bc:	d5 05 01 00 d5 05 01 00 d5 05 01 00 d5 05 01 00     ................

000100cc <__data_section_table>:
__data_section_table():
   100cc:	0002d570 	.word	0x0002d570
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000002fc 	.word	0x000002fc

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	00000688 	.word	0x00000688

000100e0 <isr_hard_fault>:
isr_hard_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 ba98 	b.w	10620 <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 ba94 	b.w	10620 <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f006 fc63 	bl	169c8 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	00025d7a 	.word	0x00025d7a

00010108 <isr_mem_fault>:
isr_mem_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f006 fc5c 	bl	169c8 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	00025d85 	.word	0x00025d85

00010118 <isr_bus_fault>:
isr_bus_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f006 fc54 	bl	169c8 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	00025d90 	.word	0x00025d90

00010128 <isr_usage_fault>:
isr_usage_fault():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f006 fc4c 	bl	169c8 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	00025d9b 	.word	0x00025d9b

00010138 <isr_debug_mon>:
isr_debug_mon():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f006 fc44 	bl	169c8 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	00025da8 	.word	0x00025da8

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f006 fc3c 	bl	169c8 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	00025db6 	.word	0x00025db6

00010158 <isr_sys_tick>:
isr_sys_tick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f009 fe15 	bl	19d88 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f008 fc61 	bl	18a24 <xPortSysTickHandler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f009 be23 	b.w	19db0 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 fbb8 	bl	1090a <__set_PSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 fbb8 	bl	10910 <__set_MSP>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f00e ff8e 	bl	1f0ec <__libc_init_array>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f826 	bl	10220 <low_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f00b ff12 	bl	1bffc <high_level_init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f00c fed0 	bl	1cf7c <main>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb3e 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f006 fbef 	bl	169c8 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	00025dca 	.word	0x00025dca

00010200 <sys_get_boot_type>:
sys_get_boot_type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10200:	4b01      	ldr	r3, [pc, #4]	; (10208 <sys_get_boot_type+0x8>)
   10202:	7818      	ldrb	r0, [r3, #0]
   10204:	4770      	bx	lr
   10206:	bf00      	nop
   10208:	2007c30c 	.word	0x2007c30c

0001020c <sys_get_boot_time>:
sys_get_boot_time():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:127
rtc_t sys_get_boot_time()
{
    return g_rtc_boot_time;
   1020c:	4903      	ldr	r1, [pc, #12]	; (1021c <sys_get_boot_time+0x10>)
   1020e:	680b      	ldr	r3, [r1, #0]
   10210:	6003      	str	r3, [r0, #0]
   10212:	684b      	ldr	r3, [r1, #4]
   10214:	6043      	str	r3, [r0, #4]
   10216:	688b      	ldr	r3, [r1, #8]
   10218:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:128
}
   1021a:	4770      	bx	lr
   1021c:	2007c300 	.word	0x2007c300

00010220 <low_level_init()>:
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   10220:	b530      	push	{r4, r5, lr}
   10222:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10224:	f007 feb6 	bl	17f94 <rtc_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10228:	4668      	mov	r0, sp
   1022a:	f007 fe5b 	bl	17ee4 <rtc_gettime>
   1022e:	4c77      	ldr	r4, [pc, #476]	; (1040c <low_level_init()+0x1ec>)
   10230:	9b00      	ldr	r3, [sp, #0]
   10232:	6023      	str	r3, [r4, #0]
   10234:	9b01      	ldr	r3, [sp, #4]
   10236:	6063      	str	r3, [r4, #4]
   10238:	9b02      	ldr	r3, [sp, #8]
   1023a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   1023c:	f000 fa62 	bl	10704 <sys_clock_configure()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   10240:	f000 faba 	bl	107b8 <sys_get_cpu_clock>
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10244:	4b72      	ldr	r3, [pc, #456]	; (10410 <low_level_init()+0x1f0>)
   10246:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   1024a:	283c      	cmp	r0, #60	; 0x3c
   1024c:	4b71      	ldr	r3, [pc, #452]	; (10414 <low_level_init()+0x1f4>)
   1024e:	f200 809a 	bhi.w	10386 <low_level_init()+0x166>
   10252:	2829      	cmp	r0, #41	; 0x29
   10254:	f080 80a1 	bcs.w	1039a <low_level_init()+0x17a>
   10258:	2814      	cmp	r0, #20
   1025a:	f200 809b 	bhi.w	10394 <low_level_init()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1025e:	223a      	movs	r2, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   10260:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10262:	2308      	movs	r3, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10264:	2298      	movs	r2, #152	; 0x98
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10266:	496c      	ldr	r1, [pc, #432]	; (10418 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10268:	2000      	movs	r0, #0
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1574
   1026a:	760b      	strb	r3, [r1, #24]
   1026c:	764b      	strb	r3, [r1, #25]
   1026e:	768b      	strb	r3, [r1, #26]
   10270:	f881 3020 	strb.w	r3, [r1, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10274:	4b69      	ldr	r3, [pc, #420]	; (1041c <low_level_init()+0x1fc>)
   10276:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1027a:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1027e:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   10282:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10286:	2290      	movs	r2, #144	; 0x90
   10288:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1028c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   10290:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10294:	2270      	movs	r2, #112	; 0x70
   10296:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1029a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1029e:	2258      	movs	r2, #88	; 0x58
   102a0:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   102a4:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   102a8:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   102ac:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   102b0:	2278      	movs	r2, #120	; 0x78
   102b2:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102b6:	22a0      	movs	r2, #160	; 0xa0
   102b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102bc:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102c0:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102c4:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102c8:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102cc:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102d0:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102d4:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102d8:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102dc:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102e0:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102e4:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102e8:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102ec:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102f0:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102f4:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102f8:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102fc:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   10300:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   10304:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   10308:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   1030c:	68cb      	ldr	r3, [r1, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   1030e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   10312:	041b      	lsls	r3, r3, #16
   10314:	0c1b      	lsrs	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10316:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1031a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1031e:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   10320:	f000 faf9 	bl	10916 <__set_BASEPRI>
__enable_fault_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10324:	b661      	cpsie	f
__enable_irq():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10326:	b662      	cpsie	i
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10328:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1032c:	f000 fa98 	bl	10860 <uart0_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   10330:	483b      	ldr	r0, [pc, #236]	; (10420 <low_level_init()+0x200>)
   10332:	f006 ffe5 	bl	17300 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10336:	483b      	ldr	r0, [pc, #236]	; (10424 <low_level_init()+0x204>)
   10338:	f006 ffe8 	bl	1730c <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   1033c:	2300      	movs	r3, #0
   1033e:	4c3a      	ldr	r4, [pc, #232]	; (10428 <low_level_init()+0x208>)
   10340:	4619      	mov	r1, r3
   10342:	6820      	ldr	r0, [r4, #0]
   10344:	2202      	movs	r2, #2
   10346:	6880      	ldr	r0, [r0, #8]
   10348:	f010 fc40 	bl	20bcc <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1034c:	2300      	movs	r3, #0
   1034e:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10350:	4c30      	ldr	r4, [pc, #192]	; (10414 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10352:	4619      	mov	r1, r3
   10354:	2202      	movs	r2, #2
   10356:	6840      	ldr	r0, [r0, #4]
   10358:	f010 fc38 	bl	20bcc <setvbuf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   1035c:	f006 fff0 	bl	17340 <syscalls_init>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10360:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10364:	4d31      	ldr	r5, [pc, #196]	; (1042c <low_level_init()+0x20c>)
   10366:	f013 0f01 	tst.w	r3, #1
   1036a:	d01f      	beq.n	103ac <low_level_init()+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   1036c:	4830      	ldr	r0, [pc, #192]	; (10430 <low_level_init()+0x210>)
   1036e:	f000 fabf 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   10372:	2301      	movs	r3, #1
   10374:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10376:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1037a:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1037e:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   10382:	b005      	add	sp, #20
   10384:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10386:	2850      	cmp	r0, #80	; 0x50
   10388:	d90a      	bls.n	103a0 <low_level_init()+0x180>
   1038a:	2864      	cmp	r0, #100	; 0x64
   1038c:	d90b      	bls.n	103a6 <low_level_init()+0x186>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1038e:	f245 023a 	movw	r2, #20538	; 0x503a
   10392:	e765      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10394:	f241 023a 	movw	r2, #4154	; 0x103a
   10398:	e762      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   1039a:	f242 023a 	movw	r2, #8250	; 0x203a
   1039e:	e75f      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   103a0:	f243 023a 	movw	r2, #12346	; 0x303a
   103a4:	e75c      	b.n	10260 <low_level_init()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   103a6:	f244 023a 	movw	r2, #16442	; 0x403a
   103aa:	e759      	b.n	10260 <low_level_init()+0x40>
print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   103ac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b0:	079b      	lsls	r3, r3, #30
   103b2:	d509      	bpl.n	103c8 <low_level_init()+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103b4:	481f      	ldr	r0, [pc, #124]	; (10434 <low_level_init()+0x214>)
   103b6:	f000 fa9b 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103ba:	2302      	movs	r3, #2
   103bc:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103be:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103c2:	f043 0302 	orr.w	r3, r3, #2
   103c6:	e7da      	b.n	1037e <low_level_init()+0x15e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103cc:	f013 0304 	ands.w	r3, r3, #4
   103d0:	d019      	beq.n	10406 <low_level_init()+0x1e6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103d2:	4b19      	ldr	r3, [pc, #100]	; (10438 <low_level_init()+0x218>)
   103d4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103d6:	4b19      	ldr	r3, [pc, #100]	; (1043c <low_level_init()+0x21c>)
   103d8:	429a      	cmp	r2, r3
   103da:	d108      	bne.n	103ee <low_level_init()+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103dc:	2305      	movs	r3, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103de:	4818      	ldr	r0, [pc, #96]	; (10440 <low_level_init()+0x220>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103e0:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103e2:	f000 fa85 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103e6:	2200      	movs	r2, #0
   103e8:	4b13      	ldr	r3, [pc, #76]	; (10438 <low_level_init()+0x218>)
   103ea:	649a      	str	r2, [r3, #72]	; 0x48
   103ec:	e7c9      	b.n	10382 <low_level_init()+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103ee:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f0:	4814      	ldr	r0, [pc, #80]	; (10444 <low_level_init()+0x224>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103f2:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f4:	f000 fa7c 	bl	108f0 <uart0_puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103fc:	f043 0304 	orr.w	r3, r3, #4
   10400:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   10404:	e7ef      	b.n	103e6 <low_level_init()+0x1c6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   10406:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   10408:	e7bb      	b.n	10382 <low_level_init()+0x162>
   1040a:	bf00      	nop
   1040c:	2007c300 	.word	0x2007c300
   10410:	000f4240 	.word	0x000f4240
   10414:	400fc000 	.word	0x400fc000
   10418:	e000ed00 	.word	0xe000ed00
   1041c:	e000e100 	.word	0xe000e100
   10420:	000108d9 	.word	0x000108d9
   10424:	000108c1 	.word	0x000108c1
   10428:	2007c0e0 	.word	0x2007c0e0
   1042c:	2007c30c 	.word	0x2007c30c
   10430:	00025c00 	.word	0x00025c00
   10434:	00025c43 	.word	0x00025c43
   10438:	40024000 	.word	0x40024000
   1043c:	deadbeef 	.word	0xdeadbeef
   10440:	00025c1d 	.word	0x00025c1d
   10444:	00025c3a 	.word	0x00025c3a

00010448 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10448:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   1044a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   1044c:	4b0f      	ldr	r3, [pc, #60]	; (1048c <lpc_sys_setup_system_timer+0x44>)
   1044e:	4c10      	ldr	r4, [pc, #64]	; (10490 <lpc_sys_setup_system_timer+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10450:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   10452:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   10454:	f008 f95e 	bl	18714 <lpc_timer_enable>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   10458:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1045c:	6823      	ldr	r3, [r4, #0]
   1045e:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10460:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10464:	61da      	str	r2, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   10466:	2200      	movs	r2, #0
   10468:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   1046a:	4a0a      	ldr	r2, [pc, #40]	; (10494 <lpc_sys_setup_system_timer+0x4c>)
   1046c:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   1046e:	f240 2209 	movw	r2, #521	; 0x209
   10472:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   10474:	695a      	ldr	r2, [r3, #20]
   10476:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1047a:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   1047c:	2218      	movs	r2, #24
   1047e:	4b06      	ldr	r3, [pc, #24]	; (10498 <lpc_sys_setup_system_timer+0x50>)
   10480:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10484:	2204      	movs	r2, #4
   10486:	601a      	str	r2, [r3, #0]
   10488:	bd10      	pop	{r4, pc}
   1048a:	bf00      	nop
   1048c:	40008000 	.word	0x40008000
   10490:	2007c318 	.word	0x2007c318
   10494:	0016e360 	.word	0x0016e360
   10498:	e000e100 	.word	0xe000e100

0001049c <sys_get_uptime_us>:
sys_get_uptime_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   1049c:	4b08      	ldr	r3, [pc, #32]	; (104c0 <sys_get_uptime_us+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1049e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a0:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a2:	4c08      	ldr	r4, [pc, #32]	; (104c4 <sys_get_uptime_us+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   104a4:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104a6:	8821      	ldrh	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   104a8:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   104aa:	b289      	uxth	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   104ac:	4282      	cmp	r2, r0
   104ae:	d8f9      	bhi.n	104a4 <sys_get_uptime_us+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   104b0:	460b      	mov	r3, r1
   104b2:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   104b4:	ea42 0200 	orr.w	r2, r2, r0
   104b8:	4610      	mov	r0, r2
   104ba:	4619      	mov	r1, r3
   104bc:	bd10      	pop	{r4, pc}
   104be:	bf00      	nop
   104c0:	2007c318 	.word	0x2007c318
   104c4:	2007c314 	.word	0x2007c314

000104c8 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   104c8:	b510      	push	{r4, lr}
   104ca:	4604      	mov	r4, r0
   104cc:	b08e      	sub	sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   104ce:	a806      	add	r0, sp, #24
   104d0:	f006 fe14 	bl	170fc <sys_get_mem_info>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   104d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   104d6:	9a06      	ldr	r2, [sp, #24]
   104d8:	9305      	str	r3, [sp, #20]
   104da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   104dc:	4907      	ldr	r1, [pc, #28]	; (104fc <sys_get_mem_info_str+0x34>)
   104de:	9304      	str	r3, [sp, #16]
   104e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   104e2:	4620      	mov	r0, r4
   104e4:	9303      	str	r3, [sp, #12]
   104e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   104e8:	9302      	str	r3, [sp, #8]
   104ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
   104ec:	9301      	str	r3, [sp, #4]
   104ee:	9b08      	ldr	r3, [sp, #32]
   104f0:	9300      	str	r3, [sp, #0]
   104f2:	9b07      	ldr	r3, [sp, #28]
   104f4:	f010 fc94 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   104f8:	b00e      	add	sp, #56	; 0x38
   104fa:	bd10      	pop	{r4, pc}
   104fc:	00025c7e 	.word	0x00025c7e

00010500 <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   10500:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   10502:	4c04      	ldr	r4, [pc, #16]	; (10514 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   10504:	6823      	ldr	r3, [r4, #0]
   10506:	b91b      	cbnz	r3, 10510 <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   10508:	2001      	movs	r0, #1
   1050a:	f006 fdef 	bl	170ec <operator new(unsigned int)>
   1050e:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   10510:	6820      	ldr	r0, [r4, #0]
   10512:	bd10      	pop	{r4, pc}
   10514:	2007c310 	.word	0x2007c310

00010518 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10518:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   1051a:	4c2b      	ldr	r4, [pc, #172]	; (105c8 <TIMER1_IRQHandler+0xb0>)
   1051c:	6823      	ldr	r3, [r4, #0]
   1051e:	4625      	mov	r5, r4
   10520:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   10522:	f012 0f10 	tst.w	r2, #16
   10526:	d00e      	beq.n	10546 <TIMER1_IRQHandler+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   10528:	2210      	movs	r2, #16
   1052a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   1052c:	f7ff ffe8 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
   10530:	6823      	ldr	r3, [r4, #0]
   10532:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   10534:	f004 fc76 	bl	14e24 <IR_Sensor::storeIrCode(unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   10538:	6822      	ldr	r2, [r4, #0]
   1053a:	6893      	ldr	r3, [r2, #8]
   1053c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   10540:	3310      	adds	r3, #16
   10542:	6213      	str	r3, [r2, #32]
   10544:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   10546:	0754      	lsls	r4, r2, #29
   10548:	d507      	bpl.n	1055a <TIMER1_IRQHandler+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   1054a:	2204      	movs	r2, #4
   1054c:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   1054e:	f7ff ffd7 	bl	10500 <SingletonTemplate<IR_Sensor>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   10552:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   10556:	f004 bc73 	b.w	14e40 <IR_Sensor::decodeIrCode()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   1055a:	07d0      	lsls	r0, r2, #31
   1055c:	d507      	bpl.n	1056e <TIMER1_IRQHandler+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   1055e:	2201      	movs	r2, #1
   10560:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   10562:	4a1a      	ldr	r2, [pc, #104]	; (105cc <TIMER1_IRQHandler+0xb4>)
   10564:	8813      	ldrh	r3, [r2, #0]
   10566:	3301      	adds	r3, #1
   10568:	b29b      	uxth	r3, r3
   1056a:	8013      	strh	r3, [r2, #0]
   1056c:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   1056e:	0791      	lsls	r1, r2, #30
   10570:	d515      	bpl.n	1059e <TIMER1_IRQHandler+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   10572:	2202      	movs	r2, #2
   10574:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   10576:	f009 fb37 	bl	19be8 <xTaskGetSchedulerState>
   1057a:	2802      	cmp	r0, #2
   1057c:	d009      	beq.n	10592 <TIMER1_IRQHandler+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   1057e:	f000 fd7d 	bl	1107c <wireless_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   10582:	682a      	ldr	r2, [r5, #0]
   10584:	6893      	ldr	r3, [r2, #8]
   10586:	69d1      	ldr	r1, [r2, #28]
   10588:	440b      	add	r3, r1
   1058a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1058e:	61d3      	str	r3, [r2, #28]
   10590:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   10592:	682a      	ldr	r2, [r5, #0]
   10594:	6953      	ldr	r3, [r2, #20]
   10596:	f023 0308 	bic.w	r3, r3, #8
   1059a:	6153      	str	r3, [r2, #20]
   1059c:	e7f1      	b.n	10582 <TIMER1_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1059e:	0712      	lsls	r2, r2, #28
   105a0:	d50e      	bpl.n	105c0 <TIMER1_IRQHandler+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   105a2:	2208      	movs	r2, #8
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   105a4:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   105a6:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:143
   105a8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   105ac:	7211      	strb	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   105ae:	2155      	movs	r1, #85	; 0x55
   105b0:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   105b2:	689a      	ldr	r2, [r3, #8]
   105b4:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   105b8:	f502 7258 	add.w	r2, r2, #864	; 0x360
   105bc:	625a      	str	r2, [r3, #36]	; 0x24
   105be:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   105c0:	4803      	ldr	r0, [pc, #12]	; (105d0 <TIMER1_IRQHandler+0xb8>)
   105c2:	f010 f9a7 	bl	20914 <puts>
   105c6:	e7fe      	b.n	105c6 <TIMER1_IRQHandler+0xae>
   105c8:	2007c318 	.word	0x2007c318
   105cc:	2007c314 	.word	0x2007c314
   105d0:	00025c5d 	.word	0x00025c5d

000105d4 <isr_forwarder_routine>:
isr_forwarder_routine():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   105d4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   105d6:	f009 fbd7 	bl	19d88 <vRunTimeStatIsrEntry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105da:	4b09      	ldr	r3, [pc, #36]	; (10600 <isr_forwarder_routine+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105dc:	4a09      	ldr	r2, [pc, #36]	; (10604 <isr_forwarder_routine+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105de:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e0:	4b09      	ldr	r3, [pc, #36]	; (10608 <isr_forwarder_routine+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   105e2:	3910      	subs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   105e4:	b2c9      	uxtb	r1, r1
   105e6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   105ea:	4293      	cmp	r3, r2
   105ec:	d103      	bne.n	105f6 <isr_forwarder_routine+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   105ee:	4807      	ldr	r0, [pc, #28]	; (1060c <isr_forwarder_routine+0x38>)
   105f0:	f006 f9f9 	bl	169e6 <u0_dbg_printf>
   105f4:	e7fe      	b.n	105f4 <isr_forwarder_routine+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   105f6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   105f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   105fc:	f009 bbd8 	b.w	19db0 <vRunTimeStatIsrExit>
   10600:	e000ed04 	.word	0xe000ed04
   10604:	00010149 	.word	0x00010149
   10608:	2007c000 	.word	0x2007c000
   1060c:	00025d43 	.word	0x00025d43

00010610 <isr_register>:
isr_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:338
    if (num >= 0) {
   10610:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:339
        g_isr_array[num] = isr_func_ptr;
   10612:	bfa4      	itt	ge
   10614:	4b01      	ldrge	r3, [pc, #4]	; (1061c <isr_register+0xc>)
   10616:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
   1061a:	4770      	bx	lr
   1061c:	2007c000 	.word	0x2007c000

00010620 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10620:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   10622:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   10624:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   10626:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10628:	4a11      	ldr	r2, [pc, #68]	; (10670 <isr_hard_fault_handler+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   1062a:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   1062c:	6883      	ldr	r3, [r0, #8]
   1062e:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   10630:	68c3      	ldr	r3, [r0, #12]
   10632:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   10634:	6903      	ldr	r3, [r0, #16]
   10636:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   10638:	6943      	ldr	r3, [r0, #20]
   1063a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   1063c:	6983      	ldr	r3, [r0, #24]
   1063e:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   10640:	69c3      	ldr	r3, [r0, #28]
   10642:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   10644:	4b0b      	ldr	r3, [pc, #44]	; (10674 <isr_hard_fault_handler+0x54>)
   10646:	649a      	str	r2, [r3, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   10648:	9a06      	ldr	r2, [sp, #24]
   1064a:	64da      	str	r2, [r3, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   1064c:	9a05      	ldr	r2, [sp, #20]
   1064e:	3a01      	subs	r2, #1
   10650:	651a      	str	r2, [r3, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   10652:	9a07      	ldr	r2, [sp, #28]
   10654:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   10656:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1065a:	22aa      	movs	r2, #170	; 0xaa
   1065c:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1065e:	2200      	movs	r2, #0
   10660:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   10662:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   10664:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   10666:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   10668:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   1066a:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   1066c:	b008      	add	sp, #32
   1066e:	4770      	bx	lr
   10670:	deadbeef 	.word	0xdeadbeef
   10674:	40024000 	.word	0x40024000

00010678 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   10678:	22aa      	movs	r2, #170	; 0xaa
   1067a:	4b03      	ldr	r3, [pc, #12]	; (10688 <sys_clock_pll0_feed()+0x10>)
   1067c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   10680:	2255      	movs	r2, #85	; 0x55
   10682:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10686:	4770      	bx	lr
   10688:	400fc000 	.word	0x400fc000

0001068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   1068c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   10690:	2400      	movs	r4, #0
   10692:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10694:	6014      	str	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10696:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10698:	f240 14ff 	movw	r4, #511	; 0x1ff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   1069c:	f8df a060 	ldr.w	sl, [pc, #96]	; 10700 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   106a0:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106a4:	2600      	movs	r6, #0
   106a6:	fb04 5b05 	mla	fp, r4, r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   106aa:	f106 0c01 	add.w	ip, r6, #1
   106ae:	fbbb f8fc 	udiv	r8, fp, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106b2:	4f12      	ldr	r7, [pc, #72]	; (106fc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   106b4:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   106b8:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   106bc:	42bd      	cmp	r5, r7
   106be:	d91a      	bls.n	106f6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   106c0:	4666      	mov	r6, ip
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   106c2:	2e20      	cmp	r6, #32
   106c4:	d1f1      	bne.n	106aa <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   106c6:	3c01      	subs	r4, #1
   106c8:	2c05      	cmp	r4, #5
   106ca:	d1e9      	bne.n	106a0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   106cc:	2000      	movs	r0, #0
   106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   106d2:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   106d6:	464d      	mov	r5, r9
   106d8:	d0f2      	beq.n	106c0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   106da:	f105 0901 	add.w	r9, r5, #1
   106de:	fbb8 fef9 	udiv	lr, r8, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   106e2:	45d6      	cmp	lr, sl
   106e4:	d8f5      	bhi.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106e6:	4586      	cmp	lr, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   106e8:	600c      	str	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   106ea:	6016      	str	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   106ec:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   106ee:	d1f0      	bne.n	106d2 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   106f0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   106f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   106f6:	2503      	movs	r5, #3
   106f8:	e7ef      	b.n	106da <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   106fa:	bf00      	nop
   106fc:	00043238 	.word	0x00043238
   10700:	000186a0 	.word	0x000186a0

00010704 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   10704:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   10706:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10708:	492a      	ldr	r1, [pc, #168]	; (107b4 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   1070a:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1070c:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   10710:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10712:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   10716:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   1071a:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   1071c:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1071e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   10722:	f7ff ffa9 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   10726:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   1072a:	f023 0301 	bic.w	r3, r3, #1
   1072e:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   10732:	f7ff ffa1 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   10736:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   1073a:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   1073e:	f7ff ff9b 	bl	10678 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10742:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   10744:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   10748:	aa02      	add	r2, sp, #8
   1074a:	a901      	add	r1, sp, #4
   1074c:	f64b 3080 	movw	r0, #48000	; 0xbb80
   10750:	f7ff ff9c 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   10754:	b930      	cbnz	r0, 10764 <sys_clock_configure()+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   10756:	462b      	mov	r3, r5
   10758:	aa02      	add	r2, sp, #8
   1075a:	a901      	add	r1, sp, #4
   1075c:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   10760:	f7ff ff94 	bl	1068c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   10764:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10766:	4913      	ldr	r1, [pc, #76]	; (107b4 <sys_clock_configure()+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   10768:	f363 040f 	bfi	r4, r3, #0, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   1076c:	9b02      	ldr	r3, [sp, #8]
   1076e:	f363 4417 	bfi	r4, r3, #16, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   10772:	2300      	movs	r3, #0
   10774:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   10778:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   1077c:	f7ff ff7c 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   10780:	2301      	movs	r3, #1
   10782:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10786:	f7ff ff77 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   1078a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1078e:	015b      	lsls	r3, r3, #5
   10790:	d5fb      	bpl.n	1078a <sys_clock_configure()+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   10792:	9b03      	ldr	r3, [sp, #12]
   10794:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10798:	2303      	movs	r3, #3
   1079a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1079e:	f7ff ff6b 	bl	10678 <sys_clock_pll0_feed()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   107a2:	4a04      	ldr	r2, [pc, #16]	; (107b4 <sys_clock_configure()+0xb0>)
   107a4:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   107a8:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   107ac:	d0fa      	beq.n	107a4 <sys_clock_configure()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   107ae:	b005      	add	sp, #20
   107b0:	bd30      	pop	{r4, r5, pc}
   107b2:	bf00      	nop
   107b4:	400fc000 	.word	0x400fc000

000107b8 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107b8:	4b24      	ldr	r3, [pc, #144]	; (1084c <sys_get_cpu_clock+0x94>)
   107ba:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   107be:	f3c2 6201 	ubfx	r2, r2, #24, #2
   107c2:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107c4:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   107c8:	f002 0203 	and.w	r2, r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   107cc:	d12d      	bne.n	1082a <sys_get_cpu_clock+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   107ce:	2a01      	cmp	r2, #1
   107d0:	d016      	beq.n	10800 <sys_get_cpu_clock+0x48>
   107d2:	2a02      	cmp	r2, #2
   107d4:	d01e      	beq.n	10814 <sys_get_cpu_clock+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107d6:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107da:	481d      	ldr	r0, [pc, #116]	; (10850 <sys_get_cpu_clock+0x98>)
   107dc:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107e0:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   107e4:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107e8:	fb01 0000 	mla	r0, r1, r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   107ec:	f3c2 4207 	ubfx	r2, r2, #16, #8
   107f0:	3201      	adds	r2, #1
   107f2:	fbb0 f0f2 	udiv	r0, r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   107f6:	b2db      	uxtb	r3, r3
   107f8:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   107fa:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   107fe:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10800:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10804:	4813      	ldr	r0, [pc, #76]	; (10854 <sys_get_cpu_clock+0x9c>)
   10806:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1080a:	f3c1 010e 	ubfx	r1, r1, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1080e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   10812:	e7e9      	b.n	107e8 <sys_get_cpu_clock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10814:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10818:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1081c:	f3c0 000e 	ubfx	r0, r0, #0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10820:	3001      	adds	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10822:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10826:	0400      	lsls	r0, r0, #16
   10828:	e7e0      	b.n	107ec <sys_get_cpu_clock+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1082a:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1082e:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10830:	b2c0      	uxtb	r0, r0
   10832:	f100 0301 	add.w	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10836:	d003      	beq.n	10840 <sys_get_cpu_clock+0x88>
   10838:	2a02      	cmp	r2, #2
   1083a:	d003      	beq.n	10844 <sys_get_cpu_clock+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   1083c:	4806      	ldr	r0, [pc, #24]	; (10858 <sys_get_cpu_clock+0xa0>)
   1083e:	e7dc      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10840:	4806      	ldr	r0, [pc, #24]	; (1085c <sys_get_cpu_clock+0xa4>)
   10842:	e7da      	b.n	107fa <sys_get_cpu_clock+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10844:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   10848:	e7d7      	b.n	107fa <sys_get_cpu_clock+0x42>
   1084a:	bf00      	nop
   1084c:	400fc000 	.word	0x400fc000
   10850:	007a1200 	.word	0x007a1200
   10854:	016e3600 	.word	0x016e3600
   10858:	003d0900 	.word	0x003d0900
   1085c:	00b71b00 	.word	0x00b71b00

00010860 <uart0_init>:
uart0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   10860:	b510      	push	{r4, lr}
   10862:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10864:	f7ff ffa8 	bl	107b8 <sys_get_cpu_clock>
   10868:	0124      	lsls	r4, r4, #4
   1086a:	fbb0 f0f4 	udiv	r0, r0, r4
   1086e:	f00d fb2d 	bl	1decc <__aeabi_ui2d>
   10872:	2200      	movs	r2, #0
   10874:	4b10      	ldr	r3, [pc, #64]	; (108b8 <uart0_init+0x58>)
   10876:	f00d f9ed 	bl	1dc54 <__adddf3>
   1087a:	f00d fb9d 	bl	1dfb8 <__aeabi_d2uiz>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   1087e:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   10880:	b284      	uxth	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   10882:	2003      	movs	r0, #3
   10884:	f000 f84a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10888:	2101      	movs	r1, #1
   1088a:	2003      	movs	r0, #3
   1088c:	f000 f860 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   10890:	4b0a      	ldr	r3, [pc, #40]	; (108bc <uart0_init+0x5c>)
   10892:	681a      	ldr	r2, [r3, #0]
   10894:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10898:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   1089a:	681a      	ldr	r2, [r3, #0]
   1089c:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   108a0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   108a2:	2280      	movs	r2, #128	; 0x80
   108a4:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   108a8:	731a      	strb	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   108aa:	0a22      	lsrs	r2, r4, #8
   108ac:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108ae:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   108b0:	b2e4      	uxtb	r4, r4
   108b2:	701c      	strb	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   108b4:	731a      	strb	r2, [r3, #12]
   108b6:	bd10      	pop	{r4, pc}
   108b8:	3fe00000 	.word	0x3fe00000
   108bc:	4002c000 	.word	0x4002c000

000108c0 <uart0_getchar>:
uart0_getchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   108c0:	4a03      	ldr	r2, [pc, #12]	; (108d0 <uart0_getchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   108c2:	6813      	ldr	r3, [r2, #0]
   108c4:	07db      	lsls	r3, r3, #31
   108c6:	d5fc      	bpl.n	108c2 <uart0_getchar+0x2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   108c8:	4b02      	ldr	r3, [pc, #8]	; (108d4 <uart0_getchar+0x14>)
   108ca:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   108cc:	4770      	bx	lr
   108ce:	bf00      	nop
   108d0:	4000c014 	.word	0x4000c014
   108d4:	4000c000 	.word	0x4000c000

000108d8 <uart0_putchar>:
uart0_putchar():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   108d8:	4b03      	ldr	r3, [pc, #12]	; (108e8 <uart0_putchar+0x10>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   108da:	4a04      	ldr	r2, [pc, #16]	; (108ec <uart0_putchar+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   108dc:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   108de:	6813      	ldr	r3, [r2, #0]
   108e0:	065b      	lsls	r3, r3, #25
   108e2:	d5fc      	bpl.n	108de <uart0_putchar+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   108e4:	2001      	movs	r0, #1
   108e6:	4770      	bx	lr
   108e8:	4000c000 	.word	0x4000c000
   108ec:	4000c014 	.word	0x4000c014

000108f0 <uart0_puts>:
uart0_puts():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   108f0:	b508      	push	{r3, lr}
   108f2:	1e41      	subs	r1, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   108f4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   108f8:	b920      	cbnz	r0, 10904 <uart0_puts+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   108fa:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   108fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   10900:	f7ff bfea 	b.w	108d8 <uart0_putchar>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   10904:	f7ff ffe8 	bl	108d8 <uart0_putchar>
   10908:	e7f4      	b.n	108f4 <uart0_puts+0x4>

0001090a <__set_PSP>:
__set_PSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   1090a:	f380 8809 	msr	PSP, r0
   1090e:	4770      	bx	lr

00010910 <__set_MSP>:
__set_MSP():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   10910:	f380 8808 	msr	MSP, r0
   10914:	4770      	bx	lr

00010916 <__set_BASEPRI>:
__set_BASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   10916:	f380 8811 	msr	BASEPRI, r0
   1091a:	4770      	bx	lr

0001091c <lpc_pconp>:
lpc_pconp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   1091c:	b538      	push	{r3, r4, r5, lr}
   1091e:	460d      	mov	r5, r1
   10920:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   10922:	f008 f841 	bl	189a8 <vPortEnterCritical>
   10926:	4a09      	ldr	r2, [pc, #36]	; (1094c <lpc_pconp+0x30>)
   10928:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   1092a:	b14d      	cbz	r5, 10940 <lpc_pconp+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   1092c:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   10930:	40a3      	lsls	r3, r4
   10932:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10934:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10938:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   1093c:	f008 b844 	b.w	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10940:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10944:	40a3      	lsls	r3, r4
   10946:	ea21 0303 	bic.w	r3, r1, r3
   1094a:	e7f3      	b.n	10934 <lpc_pconp+0x18>
   1094c:	400fc000 	.word	0x400fc000

00010950 <lpc_pclk>:
lpc_pclk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   10950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10954:	ea4f 0840 	mov.w	r8, r0, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10958:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   1095a:	f008 f825 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1095e:	4642      	mov	r2, r8
   10960:	2003      	movs	r0, #3
   10962:	2100      	movs	r1, #0
   10964:	f00d f964 	bl	1dc30 <__aeabi_llsl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10968:	4f0a      	ldr	r7, [pc, #40]	; (10994 <lpc_pclk+0x44>)
   1096a:	4642      	mov	r2, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1096c:	e9d7 4500 	ldrd	r4, r5, [r7]
   10970:	ea24 0400 	bic.w	r4, r4, r0
   10974:	ea25 0501 	bic.w	r5, r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10978:	f006 0003 	and.w	r0, r6, #3
   1097c:	2100      	movs	r1, #0
   1097e:	f00d f957 	bl	1dc30 <__aeabi_llsl>
   10982:	4320      	orrs	r0, r4
   10984:	4329      	orrs	r1, r5
   10986:	e9c7 0100 	strd	r0, r1, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   1098a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   1098e:	f008 b81b 	b.w	189c8 <vPortExitCritical>
   10992:	bf00      	nop
   10994:	400fc1a8 	.word	0x400fc1a8

00010998 <nordic_transfer>:
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   10998:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:57
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   1099a:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1099e:	4c36      	ldr	r4, [pc, #216]	; (10a78 <nordic_transfer+0xe0>)
   109a0:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   109a2:	4c36      	ldr	r4, [pc, #216]	; (10a7c <nordic_transfer+0xe4>)
   109a4:	60a0      	str	r0, [r4, #8]
   109a6:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109a8:	68c4      	ldr	r4, [r0, #12]
   109aa:	06e4      	lsls	r4, r4, #27
   109ac:	d4fc      	bmi.n	109a8 <nordic_transfer+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ae:	6880      	ldr	r0, [r0, #8]
   109b0:	b2c0      	uxtb	r0, r0
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   109b2:	b963      	cbnz	r3, 109ce <nordic_transfer+0x36>
   109b4:	460b      	mov	r3, r1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   109b6:	4c31      	ldr	r4, [pc, #196]	; (10a7c <nordic_transfer+0xe4>)
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   109b8:	1a5d      	subs	r5, r3, r1
   109ba:	4295      	cmp	r5, r2
   109bc:	da09      	bge.n	109d2 <nordic_transfer+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   109be:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   109c2:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   109c4:	68e5      	ldr	r5, [r4, #12]
   109c6:	06ed      	lsls	r5, r5, #27
   109c8:	d4fc      	bmi.n	109c4 <nordic_transfer+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   109ca:	68a5      	ldr	r5, [r4, #8]
   109cc:	e7f4      	b.n	109b8 <nordic_transfer+0x20>
   109ce:	4b2b      	ldr	r3, [pc, #172]	; (10a7c <nordic_transfer+0xe4>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   109d0:	b922      	cbnz	r2, 109dc <nordic_transfer+0x44>
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   109d2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   109d6:	4b28      	ldr	r3, [pc, #160]	; (10a78 <nordic_transfer+0xe0>)
   109d8:	619a      	str	r2, [r3, #24]
nordic_transfer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   109da:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   109dc:	2a07      	cmp	r2, #7
   109de:	780c      	ldrb	r4, [r1, #0]
   109e0:	dd29      	ble.n	10a36 <nordic_transfer+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e2:	609c      	str	r4, [r3, #8]
   109e4:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   109e6:	3a08      	subs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109e8:	609c      	str	r4, [r3, #8]
   109ea:	788c      	ldrb	r4, [r1, #2]
   109ec:	609c      	str	r4, [r3, #8]
   109ee:	78cc      	ldrb	r4, [r1, #3]
   109f0:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   109f2:	790c      	ldrb	r4, [r1, #4]
   109f4:	609c      	str	r4, [r3, #8]
   109f6:	794c      	ldrb	r4, [r1, #5]
   109f8:	609c      	str	r4, [r3, #8]
   109fa:	798c      	ldrb	r4, [r1, #6]
   109fc:	609c      	str	r4, [r3, #8]
   109fe:	79cd      	ldrb	r5, [r1, #7]
   10a00:	f101 0408 	add.w	r4, r1, #8
   10a04:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   10a06:	699d      	ldr	r5, [r3, #24]
   10a08:	076d      	lsls	r5, r5, #29
   10a0a:	d5fc      	bpl.n	10a06 <nordic_transfer+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a0c:	689d      	ldr	r5, [r3, #8]
   10a0e:	700d      	strb	r5, [r1, #0]
   10a10:	689d      	ldr	r5, [r3, #8]
   10a12:	704d      	strb	r5, [r1, #1]
   10a14:	689d      	ldr	r5, [r3, #8]
   10a16:	708d      	strb	r5, [r1, #2]
   10a18:	689d      	ldr	r5, [r3, #8]
   10a1a:	70cd      	strb	r5, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   10a1c:	68dd      	ldr	r5, [r3, #12]
   10a1e:	06ed      	lsls	r5, r5, #27
   10a20:	d4fc      	bmi.n	10a1c <nordic_transfer+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a22:	689d      	ldr	r5, [r3, #8]
   10a24:	710d      	strb	r5, [r1, #4]
   10a26:	689d      	ldr	r5, [r3, #8]
   10a28:	714d      	strb	r5, [r1, #5]
   10a2a:	689d      	ldr	r5, [r3, #8]
   10a2c:	718d      	strb	r5, [r1, #6]
   10a2e:	689d      	ldr	r5, [r3, #8]
   10a30:	71cd      	strb	r5, [r1, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a32:	4621      	mov	r1, r4
   10a34:	e7cc      	b.n	109d0 <nordic_transfer+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   10a36:	2a03      	cmp	r2, #3
   10a38:	dd14      	ble.n	10a64 <nordic_transfer+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a3a:	609c      	str	r4, [r3, #8]
   10a3c:	784c      	ldrb	r4, [r1, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   10a3e:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   10a40:	609c      	str	r4, [r3, #8]
   10a42:	788c      	ldrb	r4, [r1, #2]
   10a44:	609c      	str	r4, [r3, #8]
   10a46:	78cd      	ldrb	r5, [r1, #3]
   10a48:	1d0c      	adds	r4, r1, #4
   10a4a:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   10a4c:	68dd      	ldr	r5, [r3, #12]
   10a4e:	06ed      	lsls	r5, r5, #27
   10a50:	d4fc      	bmi.n	10a4c <nordic_transfer+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   10a52:	689d      	ldr	r5, [r3, #8]
   10a54:	700d      	strb	r5, [r1, #0]
   10a56:	689d      	ldr	r5, [r3, #8]
   10a58:	704d      	strb	r5, [r1, #1]
   10a5a:	689d      	ldr	r5, [r3, #8]
   10a5c:	708d      	strb	r5, [r1, #2]
   10a5e:	689d      	ldr	r5, [r3, #8]
   10a60:	70cd      	strb	r5, [r1, #3]
   10a62:	e7e6      	b.n	10a32 <nordic_transfer+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   10a64:	1c4d      	adds	r5, r1, #1
   10a66:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   10a68:	3a01      	subs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   10a6a:	68dc      	ldr	r4, [r3, #12]
   10a6c:	06e4      	lsls	r4, r4, #27
   10a6e:	d4fc      	bmi.n	10a6a <nordic_transfer+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   10a70:	689c      	ldr	r4, [r3, #8]
   10a72:	700c      	strb	r4, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   10a74:	4629      	mov	r1, r5
   10a76:	e7ab      	b.n	109d0 <nordic_transfer+0x38>
   10a78:	2009c000 	.word	0x2009c000
   10a7c:	40088000 	.word	0x40088000

00010a80 <nordic_readRegister>:
nordic_readRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   10a80:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   10a82:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   10a84:	a902      	add	r1, sp, #8
   10a86:	f801 3d01 	strb.w	r3, [r1, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   10a8a:	2301      	movs	r3, #1
   10a8c:	f000 001f 	and.w	r0, r0, #31
   10a90:	461a      	mov	r2, r3
   10a92:	f7ff ff81 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   10a96:	f89d 0007 	ldrb.w	r0, [sp, #7]
   10a9a:	b003      	add	sp, #12
   10a9c:	f85d fb04 	ldr.w	pc, [sp], #4

00010aa0 <nordic_writeRegister>:
nordic_writeRegister():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   10aa0:	b513      	push	{r0, r1, r4, lr}
   10aa2:	ac02      	add	r4, sp, #8
   10aa4:	f804 1d01 	strb.w	r1, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   10aa8:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   10aac:	2300      	movs	r3, #0
   10aae:	2201      	movs	r2, #1
   10ab0:	4621      	mov	r1, r4
   10ab2:	f040 0020 	orr.w	r0, r0, #32
   10ab6:	f7ff ff6f 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   10aba:	b002      	add	sp, #8
   10abc:	bd10      	pop	{r4, pc}

00010abe <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   10abe:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   10ac0:	2017      	movs	r0, #23
   10ac2:	f7ff ffdd 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   10ac6:	f3c0 1000 	ubfx	r0, r0, #4, #1
   10aca:	bd08      	pop	{r3, pc}

00010acc <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   10acc:	2170      	movs	r1, #112	; 0x70
   10ace:	2007      	movs	r0, #7
   10ad0:	f7ff bfe6 	b.w	10aa0 <nordic_writeRegister>

00010ad4 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   10ad4:	460a      	mov	r2, r1
   10ad6:	2300      	movs	r3, #0
   10ad8:	4601      	mov	r1, r0
   10ada:	20a0      	movs	r0, #160	; 0xa0
   10adc:	f7ff bf5c 	b.w	10998 <nordic_transfer>

00010ae0 <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   10ae0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10ae2:	2000      	movs	r0, #0
   10ae4:	f7ff ffcc 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   10ae8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   10aec:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   10af0:	2000      	movs	r0, #0
   10af2:	f7ff bfd5 	b.w	10aa0 <nordic_writeRegister>
   10af6:	Address 0x0000000000010af6 is out of bounds.


00010af8 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10af8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10afc:	4b01      	ldr	r3, [pc, #4]	; (10b04 <nordic_rx_to_Stanby1+0xc>)
   10afe:	61da      	str	r2, [r3, #28]
   10b00:	4770      	bx	lr
   10b02:	bf00      	nop
   10b04:	2009c020 	.word	0x2009c020

00010b08 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   10b08:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   10b0a:	2000      	movs	r0, #0
   10b0c:	f7ff ffb8 	bl	10a80 <nordic_readRegister>
   10b10:	f040 0101 	orr.w	r1, r0, #1
   10b14:	b2c9      	uxtb	r1, r1
   10b16:	2000      	movs	r0, #0
   10b18:	f7ff ffc2 	bl	10aa0 <nordic_writeRegister>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   10b1c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b20:	4b01      	ldr	r3, [pc, #4]	; (10b28 <nordic_standby1_to_rx+0x20>)
   10b22:	619a      	str	r2, [r3, #24]
   10b24:	bd08      	pop	{r3, pc}
   10b26:	bf00      	nop
   10b28:	2009c020 	.word	0x2009c020

00010b2c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   10b2c:	2120      	movs	r1, #32
   10b2e:	2007      	movs	r0, #7
   10b30:	f7ff bfb6 	b.w	10aa0 <nordic_writeRegister>

00010b34 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   10b34:	2300      	movs	r3, #0
   10b36:	20e1      	movs	r0, #225	; 0xe1
   10b38:	461a      	mov	r2, r3
   10b3a:	4619      	mov	r1, r3
   10b3c:	f7ff bf2c 	b.w	10998 <nordic_transfer>

00010b40 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   10b40:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10b42:	4604      	mov	r4, r0
   10b44:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   10b46:	f7ff fff5 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   10b4a:	4620      	mov	r0, r4
   10b4c:	4629      	mov	r1, r5
   10b4e:	f7ff ffc1 	bl	10ad4 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:61
   10b52:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10b56:	4c0c      	ldr	r4, [pc, #48]	; (10b88 <nordic_mode1_send_single_packet+0x48>)
   10b58:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   10b5a:	2200      	movs	r2, #0
   10b5c:	f8ad 2006 	strh.w	r2, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b60:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10b64:	3301      	adds	r3, #1
   10b66:	b29b      	uxth	r3, r3
   10b68:	f8ad 3006 	strh.w	r3, [sp, #6]
   10b6c:	b933      	cbnz	r3, 10b7c <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   10b6e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10b72:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   10b74:	f7ff ffde 	bl	10b34 <nordic_flush_tx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   10b78:	b003      	add	sp, #12
   10b7a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   10b7c:	f7ff ff9f 	bl	10abe <nordic_is_tx_fifo_empty>
   10b80:	2800      	cmp	r0, #0
   10b82:	d0ed      	beq.n	10b60 <nordic_mode1_send_single_packet+0x20>
   10b84:	e7f3      	b.n	10b6e <nordic_mode1_send_single_packet+0x2e>
   10b86:	bf00      	nop
   10b88:	2009c020 	.word	0x2009c020

00010b8c <nordic_is_packet_available>:
nordic_is_packet_available():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   10b8c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   10b8e:	2017      	movs	r0, #23
   10b90:	f7ff ff76 	bl	10a80 <nordic_readRegister>
   10b94:	43c0      	mvns	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   10b96:	f000 0001 	and.w	r0, r0, #1
   10b9a:	bd08      	pop	{r3, pc}

00010b9c <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   10b9c:	2140      	movs	r1, #64	; 0x40
   10b9e:	2007      	movs	r0, #7
   10ba0:	f7ff bf7e 	b.w	10aa0 <nordic_writeRegister>

00010ba4 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   10ba4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   10ba6:	460a      	mov	r2, r1
   10ba8:	2301      	movs	r3, #1
   10baa:	4601      	mov	r1, r0
   10bac:	2061      	movs	r0, #97	; 0x61
   10bae:	f7ff fef3 	bl	10998 <nordic_transfer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   10bb2:	f3c0 0042 	ubfx	r0, r0, #1, #3
   10bb6:	bd08      	pop	{r3, pc}

00010bb8 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   10bb8:	2300      	movs	r3, #0
   10bba:	20e2      	movs	r0, #226	; 0xe2
   10bbc:	461a      	mov	r2, r3
   10bbe:	4619      	mov	r1, r3
   10bc0:	f7ff beea 	b.w	10998 <nordic_transfer>

00010bc4 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   10bc4:	b570      	push	{r4, r5, r6, lr}
   10bc6:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bc8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   10bca:	460d      	mov	r5, r1
   10bcc:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   10bce:	f7ff ff57 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bd2:	b166      	cbz	r6, 10bee <nordic_set_intr_signals+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   10bd4:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bd8:	b16d      	cbz	r5, 10bf6 <nordic_set_intr_signals+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   10bda:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bde:	b16c      	cbz	r4, 10bfc <nordic_set_intr_signals+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   10be0:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   10be4:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   10be6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   10bea:	f7ff bf59 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   10bee:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   10bf2:	b2c0      	uxtb	r0, r0
   10bf4:	e7f0      	b.n	10bd8 <nordic_set_intr_signals+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   10bf6:	f040 0120 	orr.w	r1, r0, #32
   10bfa:	e7f0      	b.n	10bde <nordic_set_intr_signals+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   10bfc:	f041 0110 	orr.w	r1, r1, #16
   10c00:	e7f0      	b.n	10be4 <nordic_set_intr_signals+0x20>

00010c02 <nordic_set_crc>:
nordic_set_crc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   10c02:	b510      	push	{r4, lr}
   10c04:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   10c06:	2000      	movs	r0, #0
   10c08:	f7ff ff3a 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   10c0c:	b934      	cbnz	r4, 10c1c <nordic_set_crc+0x1a>
   10c0e:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   10c12:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   10c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   10c18:	f7ff bf42 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   10c1c:	2c01      	cmp	r4, #1
   10c1e:	d104      	bne.n	10c2a <nordic_set_crc+0x28>
   10c20:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   10c24:	f041 0108 	orr.w	r1, r1, #8
   10c28:	e7f3      	b.n	10c12 <nordic_set_crc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c2a:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   10c2c:	bf14      	ite	ne
   10c2e:	f040 0108 	orrne.w	r1, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   10c32:	f040 010c 	orreq.w	r1, r0, #12
   10c36:	b2c9      	uxtb	r1, r1
   10c38:	e7eb      	b.n	10c12 <nordic_set_crc+0x10>

00010c3a <nordic_power_up>:
nordic_power_up():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   10c3a:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c3c:	2000      	movs	r0, #0
   10c3e:	f7ff ff1f 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   10c42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   10c46:	f040 0102 	orr.w	r1, r0, #2
   10c4a:	b2c9      	uxtb	r1, r1
   10c4c:	2000      	movs	r0, #0
   10c4e:	f7ff bf27 	b.w	10aa0 <nordic_writeRegister>

00010c52 <nordic_power_down>:
nordic_power_down():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   10c52:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c54:	2000      	movs	r0, #0
   10c56:	f7ff ff13 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   10c5a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   10c5e:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   10c62:	2000      	movs	r0, #0
   10c64:	f7ff bf1c 	b.w	10aa0 <nordic_writeRegister>

00010c68 <nordic_set_channel>:
nordic_set_channel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c68:	f640 13dd 	movw	r3, #2525	; 0x9dd
   10c6c:	4298      	cmp	r0, r3
   10c6e:	d80b      	bhi.n	10c88 <nordic_set_channel+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   10c70:	f640 1362 	movw	r3, #2402	; 0x962
   10c74:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   10c78:	bf38      	it	cc
   10c7a:	4618      	movcc	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   10c7c:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   10c80:	b2c9      	uxtb	r1, r1
   10c82:	2005      	movs	r0, #5
   10c84:	f7ff bf0c 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   10c88:	4618      	mov	r0, r3
   10c8a:	e7f7      	b.n	10c7c <nordic_set_channel+0x14>

00010c8c <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   10c8c:	b510      	push	{r4, lr}
   10c8e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   10c90:	2006      	movs	r0, #6
   10c92:	f7ff fef5 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   10c96:	2cfa      	cmp	r4, #250	; 0xfa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   10c98:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   10c9c:	d106      	bne.n	10cac <nordic_set_air_data_rate+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   10c9e:	f041 0120 	orr.w	r1, r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   10ca2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   10ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   10ca8:	f7ff befa 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   10cac:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   10cb0:	bf08      	it	eq
   10cb2:	f041 0108 	orreq.w	r1, r1, #8
   10cb6:	e7f4      	b.n	10ca2 <nordic_set_air_data_rate+0x16>

00010cb8 <nordic_set_power_level>:
nordic_set_power_level():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   10cb8:	b510      	push	{r4, lr}
   10cba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cbc:	2006      	movs	r0, #6
   10cbe:	f7ff fedf 	bl	10a80 <nordic_readRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10cc2:	2c03      	cmp	r4, #3
   10cc4:	bf28      	it	cs
   10cc6:	2403      	movcs	r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   10cc8:	f020 0106 	bic.w	r1, r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   10ccc:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   10cd0:	b2c9      	uxtb	r1, r1
   10cd2:	2006      	movs	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   10cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   10cd8:	f7ff bee2 	b.w	10aa0 <nordic_writeRegister>

00010cdc <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   10cdc:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   10ce0:	bf28      	it	cs
   10ce2:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   10ce6:	28fa      	cmp	r0, #250	; 0xfa
   10ce8:	bf38      	it	cc
   10cea:	20fa      	movcc	r0, #250	; 0xfa
   10cec:	23fa      	movs	r3, #250	; 0xfa
   10cee:	fbb0 f3f3 	udiv	r3, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   10cf2:	290f      	cmp	r1, #15
   10cf4:	bf28      	it	cs
   10cf6:	210f      	movcs	r1, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   10cf8:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   10cfa:	b2db      	uxtb	r3, r3
   10cfc:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   10d00:	b2c9      	uxtb	r1, r1
   10d02:	2004      	movs	r0, #4
   10d04:	f7ff becc 	b.w	10aa0 <nordic_writeRegister>

00010d08 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   10d08:	3011      	adds	r0, #17
   10d0a:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   10d0c:	2816      	cmp	r0, #22
   10d0e:	d804      	bhi.n	10d1a <nordic_set_payload_for_pipe+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   10d10:	2920      	cmp	r1, #32
   10d12:	bf28      	it	cs
   10d14:	2120      	movcs	r1, #32
   10d16:	f7ff bec3 	b.w	10aa0 <nordic_writeRegister>
   10d1a:	4770      	bx	lr

00010d1c <nordic_set_addr_width>:
nordic_set_addr_width():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   10d1c:	2803      	cmp	r0, #3
   10d1e:	d006      	beq.n	10d2e <nordic_set_addr_width+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   10d20:	2804      	cmp	r0, #4
   10d22:	bf14      	ite	ne
   10d24:	2103      	movne	r1, #3
   10d26:	2102      	moveq	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   10d28:	2003      	movs	r0, #3
   10d2a:	f7ff beb9 	b.w	10aa0 <nordic_writeRegister>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   10d2e:	2101      	movs	r1, #1
   10d30:	e7fa      	b.n	10d28 <nordic_set_addr_width+0xc>

00010d32 <nordic_set_tx_address>:
nordic_set_tx_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   10d32:	460a      	mov	r2, r1
   10d34:	2300      	movs	r3, #0
   10d36:	4601      	mov	r1, r0
   10d38:	2030      	movs	r0, #48	; 0x30
   10d3a:	f7ff be2d 	b.w	10998 <nordic_transfer>

00010d3e <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   10d3e:	460a      	mov	r2, r1
   10d40:	2300      	movs	r3, #0
   10d42:	4601      	mov	r1, r0
   10d44:	202a      	movs	r0, #42	; 0x2a
   10d46:	f7ff be27 	b.w	10998 <nordic_transfer>
   10d4a:	Address 0x0000000000010d4a is out of bounds.


00010d4c <nordic_init>:
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   10d4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   10d4e:	4604      	mov	r4, r0
   10d50:	460e      	mov	r6, r1
   10d52:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   10d54:	f7ff ff30 	bl	10bb8 <nordic_flush_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   10d58:	f7ff feec 	bl	10b34 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:62
   10d5c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   10d60:	4b2a      	ldr	r3, [pc, #168]	; (10e0c <nordic_init+0xc0>)
   10d62:	61da      	str	r2, [r3, #28]
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   10d64:	f7ff ff75 	bl	10c52 <nordic_power_down>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   10d68:	2200      	movs	r2, #0
   10d6a:	2001      	movs	r0, #1
   10d6c:	4611      	mov	r1, r2
   10d6e:	f7ff ff29 	bl	10bc4 <nordic_set_intr_signals>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   10d72:	f7ff feab 	bl	10acc <nordic_clear_all_intr_flags>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   10d76:	2002      	movs	r0, #2
   10d78:	f7ff ff43 	bl	10c02 <nordic_set_crc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   10d7c:	4630      	mov	r0, r6
   10d7e:	f7ff ff73 	bl	10c68 <nordic_set_channel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   10d82:	4628      	mov	r0, r5
   10d84:	f7ff ff82 	bl	10c8c <nordic_set_air_data_rate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   10d88:	2003      	movs	r0, #3
   10d8a:	f7ff ff95 	bl	10cb8 <nordic_set_power_level>
nordic_enable_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   10d8e:	2103      	movs	r1, #3
   10d90:	2002      	movs	r0, #2
   10d92:	f7ff fe85 	bl	10aa0 <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   10d96:	2100      	movs	r1, #0
   10d98:	2001      	movs	r0, #1
   10d9a:	f7ff fe81 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   10d9e:	2103      	movs	r1, #3
   10da0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   10da4:	f7ff ff9a 	bl	10cdc <nordic_set_auto_transmit_options>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   10da8:	4621      	mov	r1, r4
   10daa:	2000      	movs	r0, #0
   10dac:	f7ff ffac 	bl	10d08 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   10db0:	2100      	movs	r1, #0
   10db2:	2012      	movs	r0, #18
   10db4:	f7ff fe74 	bl	10aa0 <nordic_writeRegister>
   10db8:	2100      	movs	r1, #0
   10dba:	2013      	movs	r0, #19
   10dbc:	f7ff fe70 	bl	10aa0 <nordic_writeRegister>
   10dc0:	2100      	movs	r1, #0
   10dc2:	2014      	movs	r0, #20
   10dc4:	f7ff fe6c 	bl	10aa0 <nordic_writeRegister>
   10dc8:	2100      	movs	r1, #0
   10dca:	2015      	movs	r0, #21
   10dcc:	f7ff fe68 	bl	10aa0 <nordic_writeRegister>
   10dd0:	2100      	movs	r1, #0
   10dd2:	2016      	movs	r0, #22
   10dd4:	f7ff fe64 	bl	10aa0 <nordic_writeRegister>
nordic_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10dd8:	4b0d      	ldr	r3, [pc, #52]	; (10e10 <nordic_init+0xc4>)
   10dda:	6818      	ldr	r0, [r3, #0]
   10ddc:	791b      	ldrb	r3, [r3, #4]
   10dde:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de0:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   10de2:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   10de6:	f7ff ff99 	bl	10d1c <nordic_set_addr_width>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   10dea:	4668      	mov	r0, sp
   10dec:	2105      	movs	r1, #5
   10dee:	f7ff ffa0 	bl	10d32 <nordic_set_tx_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   10df2:	2105      	movs	r1, #5
   10df4:	4668      	mov	r0, sp
   10df6:	f7ff ffa2 	bl	10d3e <nordic_set_rx_pipe0_addr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   10dfa:	f7ff ff1e 	bl	10c3a <nordic_power_up>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   10dfe:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10e02:	f005 fea3 	bl	16b4c <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   10e06:	b002      	add	sp, #8
   10e08:	bd70      	pop	{r4, r5, r6, pc}
   10e0a:	bf00      	nop
   10e0c:	2009c020 	.word	0x2009c020
   10e10:	00025df3 	.word	0x00025df3

00010e14 <nrf_driver_init>:
nrf_driver_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   10e14:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   10e16:	4e17      	ldr	r6, [pc, #92]	; (10e74 <nrf_driver_init+0x60>)
   10e18:	6832      	ldr	r2, [r6, #0]
   10e1a:	b922      	cbnz	r2, 10e26 <nrf_driver_init+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   10e1c:	2120      	movs	r1, #32
   10e1e:	2003      	movs	r0, #3
   10e20:	f007 ffc4 	bl	18dac <xQueueGenericCreate>
   10e24:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   10e26:	4d14      	ldr	r5, [pc, #80]	; (10e78 <nrf_driver_init+0x64>)
   10e28:	682a      	ldr	r2, [r5, #0]
   10e2a:	b922      	cbnz	r2, 10e36 <nrf_driver_init+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   10e2c:	2120      	movs	r1, #32
   10e2e:	2001      	movs	r0, #1
   10e30:	f007 ffbc 	bl	18dac <xQueueGenericCreate>
   10e34:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   10e36:	4c11      	ldr	r4, [pc, #68]	; (10e7c <nrf_driver_init+0x68>)
   10e38:	6821      	ldr	r1, [r4, #0]
   10e3a:	b921      	cbnz	r1, 10e46 <nrf_driver_init+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   10e3c:	2203      	movs	r2, #3
   10e3e:	2001      	movs	r0, #1
   10e40:	f007 ffb4 	bl	18dac <xQueueGenericCreate>
   10e44:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   10e46:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   10e4a:	f640 11c3 	movw	r1, #2499	; 0x9c3
   10e4e:	2020      	movs	r0, #32
   10e50:	f7ff ff7c 	bl	10d4c <nordic_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   10e54:	f7ff fe58 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   10e58:	2016      	movs	r0, #22
   10e5a:	4a09      	ldr	r2, [pc, #36]	; (10e80 <nrf_driver_init+0x6c>)
   10e5c:	2101      	movs	r1, #1
   10e5e:	f007 f97d 	bl	1815c <eint3_enable_port0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   10e62:	6830      	ldr	r0, [r6, #0]
   10e64:	b128      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   10e66:	6828      	ldr	r0, [r5, #0]
   10e68:	b118      	cbz	r0, 10e72 <nrf_driver_init+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   10e6a:	6820      	ldr	r0, [r4, #0]
   10e6c:	3000      	adds	r0, #0
   10e6e:	bf18      	it	ne
   10e70:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   10e72:	bd70      	pop	{r4, r5, r6, pc}
   10e74:	2007c324 	.word	0x2007c324
   10e78:	2007c31c 	.word	0x2007c31c
   10e7c:	2007c320 	.word	0x2007c320
   10e80:	00010f2d 	.word	0x00010f2d

00010e84 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e84:	7903      	ldrb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e86:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e88:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10e8c:	2bc0      	cmp	r3, #192	; 0xc0
   10e8e:	bf0c      	ite	eq
   10e90:	4b0e      	ldreq	r3, [pc, #56]	; (10ecc <nrf_driver_app_recv+0x48>)
   10e92:	4b0f      	ldrne	r3, [pc, #60]	; (10ed0 <nrf_driver_app_recv+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   10e94:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   10e96:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e98:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   10e9a:	b088      	sub	sp, #32
   10e9c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   10e9e:	461a      	mov	r2, r3
   10ea0:	4628      	mov	r0, r5
   10ea2:	f007 ffa5 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   10ea6:	4604      	mov	r4, r0
   10ea8:	b960      	cbnz	r0, 10ec4 <nrf_driver_app_recv+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   10eaa:	4603      	mov	r3, r0
   10eac:	4602      	mov	r2, r0
   10eae:	4669      	mov	r1, sp
   10eb0:	4628      	mov	r0, r5
   10eb2:	f008 f8a5 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   10eb6:	4623      	mov	r3, r4
   10eb8:	4622      	mov	r2, r4
   10eba:	4631      	mov	r1, r6
   10ebc:	4628      	mov	r0, r5
   10ebe:	f007 ff97 	bl	18df0 <xQueueGenericSend>
   10ec2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   10ec4:	4620      	mov	r0, r4
   10ec6:	b008      	add	sp, #32
   10ec8:	bd70      	pop	{r4, r5, r6, pc}
   10eca:	bf00      	nop
   10ecc:	2007c31c 	.word	0x2007c31c
   10ed0:	2007c324 	.word	0x2007c324

00010ed4 <nrf_driver_send>:
nrf_driver_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   10ed4:	b538      	push	{r3, r4, r5, lr}
   10ed6:	4604      	mov	r4, r0
   10ed8:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   10eda:	f000 fae9 	bl	114b0 <mesh_get_node_address>
   10ede:	7823      	ldrb	r3, [r4, #0]
   10ee0:	4283      	cmp	r3, r0
   10ee2:	d00a      	beq.n	10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   10ee4:	78e3      	ldrb	r3, [r4, #3]
   10ee6:	b943      	cbnz	r3, 10efa <nrf_driver_send+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   10ee8:	f00f fd44 	bl	20974 <rand>
   10eec:	23bd      	movs	r3, #189	; 0xbd
   10eee:	f000 0003 	and.w	r0, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   10ef2:	fb00 3003 	mla	r0, r0, r3, r3
   10ef6:	f005 fe29 	bl	16b4c <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   10efa:	f7ff fdfd 	bl	10af8 <nordic_rx_to_Stanby1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   10efe:	f7ff fdef 	bl	10ae0 <nordic_standby1_to_tx_mode1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   10f02:	b2a9      	uxth	r1, r5
   10f04:	4620      	mov	r0, r4
   10f06:	f7ff fe1b 	bl	10b40 <nordic_mode1_send_single_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   10f0a:	f7ff fe0f 	bl	10b2c <nordic_clear_packet_sent_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   10f0e:	f7ff fdfb 	bl	10b08 <nordic_standby1_to_rx>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f12:	f008 fe69 	bl	19be8 <xTaskGetSchedulerState>
   10f16:	2802      	cmp	r0, #2
   10f18:	d104      	bne.n	10f24 <nrf_driver_send+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   10f1a:	4b03      	ldr	r3, [pc, #12]	; (10f28 <nrf_driver_send+0x54>)
   10f1c:	2100      	movs	r1, #0
   10f1e:	6818      	ldr	r0, [r3, #0]
   10f20:	f008 f83a 	bl	18f98 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   10f24:	2001      	movs	r0, #1
   10f26:	bd38      	pop	{r3, r4, r5, pc}
   10f28:	2007c320 	.word	0x2007c320

00010f2c <nrf_irq_callback>:
nrf_irq_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f2c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   10f2e:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   10f30:	a902      	add	r1, sp, #8
   10f32:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   10f36:	4b08      	ldr	r3, [pc, #32]	; (10f58 <nrf_irq_callback+0x2c>)
   10f38:	6818      	ldr	r0, [r3, #0]
   10f3a:	f008 f82d 	bl	18f98 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   10f3e:	9b01      	ldr	r3, [sp, #4]
   10f40:	b13b      	cbz	r3, 10f52 <nrf_irq_callback+0x26>
   10f42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10f46:	4b05      	ldr	r3, [pc, #20]	; (10f5c <nrf_irq_callback+0x30>)
   10f48:	601a      	str	r2, [r3, #0]
   10f4a:	f3bf 8f4f 	dsb	sy
   10f4e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   10f52:	b003      	add	sp, #12
   10f54:	f85d fb04 	ldr.w	pc, [sp], #4
   10f58:	2007c320 	.word	0x2007c320
   10f5c:	e000ed04 	.word	0xe000ed04

00010f60 <nrf_driver_receive>:
nrf_driver_receive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   10f60:	b538      	push	{r3, r4, r5, lr}
   10f62:	4604      	mov	r4, r0
   10f64:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   10f66:	f7ff fe11 	bl	10b8c <nordic_is_packet_available>
   10f6a:	b148      	cbz	r0, 10f80 <nrf_driver_receive+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   10f6c:	b2a9      	uxth	r1, r5
   10f6e:	4620      	mov	r0, r4
   10f70:	f7ff fe18 	bl	10ba4 <nordic_read_rx_fifo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f74:	f7ff fe0a 	bl	10b8c <nordic_is_packet_available>
   10f78:	b908      	cbnz	r0, 10f7e <nrf_driver_receive+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   10f7a:	f7ff fe0f 	bl	10b9c <nordic_clear_packet_available_flag>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   10f7e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   10f80:	bd38      	pop	{r3, r4, r5, pc}

00010f82 <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:52
{
   10f82:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   10f86:	4605      	mov	r5, r0
   10f88:	460e      	mov	r6, r1
   10f8a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:55
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   10f8c:	f008 fe2c 	bl	19be8 <xTaskGetSchedulerState>
   10f90:	2802      	cmp	r0, #2
   10f92:	d109      	bne.n	10fa8 <wireless_get_queued_pkt+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:56
        ok = xQueueReceive(qhandle, pkt, OS_MS(timeout_ms));
   10f94:	4622      	mov	r2, r4
   10f96:	2300      	movs	r3, #0
   10f98:	4631      	mov	r1, r6
   10f9a:	4628      	mov	r0, r5
   10f9c:	f008 f830 	bl	19000 <xQueueGenericReceive>
   10fa0:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:68
}
   10fa2:	4620      	mov	r0, r4
   10fa4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   10fa8:	f7ff fa78 	bl	1049c <sys_get_uptime_us>
   10fac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fb0:	2300      	movs	r3, #0
   10fb2:	f00d fb15 	bl	1e5e0 <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:59
        uint64_t timeout_of_char = sys_get_uptime_ms() + timeout_ms;
   10fb6:	eb10 0804 	adds.w	r8, r0, r4
   10fba:	f141 0900 	adc.w	r9, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:60
        while (! (ok = xQueueReceive(qhandle, pkt, 0))) {
   10fbe:	2300      	movs	r3, #0
   10fc0:	4631      	mov	r1, r6
   10fc2:	461a      	mov	r2, r3
   10fc4:	4628      	mov	r0, r5
   10fc6:	f008 f81b 	bl	19000 <xQueueGenericReceive>
   10fca:	b2c4      	uxtb	r4, r0
   10fcc:	2c00      	cmp	r4, #0
   10fce:	d1e8      	bne.n	10fa2 <wireless_get_queued_pkt+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10fd0:	f7ff fa64 	bl	1049c <sys_get_uptime_us>
   10fd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10fd8:	2300      	movs	r3, #0
   10fda:	f00d fb01 	bl	1e5e0 <__aeabi_uldivmod>
wireless_get_queued_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:61
            if (sys_get_uptime_ms() > timeout_of_char) {
   10fde:	4589      	cmp	r9, r1
   10fe0:	bf08      	it	eq
   10fe2:	4580      	cmpeq	r8, r0
   10fe4:	d2eb      	bcs.n	10fbe <wireless_get_queued_pkt+0x3c>
   10fe6:	e7dc      	b.n	10fa2 <wireless_get_queued_pkt+0x20>

00010fe8 <nrf_driver_get_timer>:
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fe8:	2904      	cmp	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   10fea:	b538      	push	{r3, r4, r5, lr}
   10fec:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   10fee:	d10d      	bne.n	1100c <nrf_driver_get_timer+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   10ff0:	1c04      	adds	r4, r0, #0
   10ff2:	bf18      	it	ne
   10ff4:	2401      	movne	r4, #1
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
   10ff6:	f7ff fa51 	bl	1049c <sys_get_uptime_us>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   10ffa:	b12c      	cbz	r4, 11008 <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   10ffc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11000:	2300      	movs	r3, #0
   11002:	f00d faed 	bl	1e5e0 <__aeabi_uldivmod>
nrf_driver_get_timer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   11006:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   11008:	4620      	mov	r0, r4
   1100a:	bd38      	pop	{r3, r4, r5, pc}
   1100c:	2400      	movs	r4, #0
   1100e:	e7f2      	b.n	10ff6 <nrf_driver_get_timer+0xe>

00011010 <wireless_init>:
wireless_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11010:	b500      	push	{lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11012:	4b0c      	ldr	r3, [pc, #48]	; (11044 <wireless_init+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   11014:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   11016:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   11018:	4b0b      	ldr	r3, [pc, #44]	; (11048 <wireless_init+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   1101a:	4a0c      	ldr	r2, [pc, #48]	; (1104c <wireless_init+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   1101c:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   1101e:	4b0c      	ldr	r3, [pc, #48]	; (11050 <wireless_init+0x40>)
   11020:	930a      	str	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   11022:	ab0c      	add	r3, sp, #48	; 0x30
   11024:	f843 2d10 	str.w	r2, [r3, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   11028:	2200      	movs	r2, #0
   1102a:	9204      	str	r2, [sp, #16]
   1102c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1102e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   11032:	4b08      	ldr	r3, [pc, #32]	; (11054 <wireless_init+0x44>)
   11034:	4a08      	ldr	r2, [pc, #32]	; (11058 <wireless_init+0x48>)
   11036:	2101      	movs	r1, #1
   11038:	206a      	movs	r0, #106	; 0x6a
   1103a:	f000 faef 	bl	1161c <mesh_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   1103e:	b00d      	add	sp, #52	; 0x34
   11040:	f85d fb04 	ldr.w	pc, [sp], #4
   11044:	00010e15 	.word	0x00010e15
   11048:	00010f61 	.word	0x00010f61
   1104c:	00010fe9 	.word	0x00010fe9
   11050:	00010ed5 	.word	0x00010ed5
   11054:	00010e85 	.word	0x00010e85
   11058:	00025df8 	.word	0x00025df8

0001105c <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:93
    return wireless_get_queued_pkt(g_rx_queue, pkt, timeout_ms);
   1105c:	4b02      	ldr	r3, [pc, #8]	; (11068 <wireless_get_rx_pkt+0xc>)
   1105e:	460a      	mov	r2, r1
   11060:	4601      	mov	r1, r0
   11062:	6818      	ldr	r0, [r3, #0]
   11064:	f7ff bf8d 	b.w	10f82 <wireless_get_queued_pkt>
   11068:	2007c324 	.word	0x2007c324

0001106c <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:98
    return wireless_get_queued_pkt(g_ack_queue, pkt, timeout_ms);
   1106c:	4b02      	ldr	r3, [pc, #8]	; (11078 <wireless_get_ack_pkt+0xc>)
   1106e:	460a      	mov	r2, r1
   11070:	4601      	mov	r1, r0
   11072:	6818      	ldr	r0, [r3, #0]
   11074:	f7ff bf85 	b.w	10f82 <wireless_get_queued_pkt>
   11078:	2007c31c 	.word	0x2007c31c

0001107c <wireless_service>:
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   1107c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1107e:	f008 fdb3 	bl	19be8 <xTaskGetSchedulerState>
   11082:	4b0f      	ldr	r3, [pc, #60]	; (110c0 <wireless_service+0x44>)
   11084:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   11086:	695b      	ldr	r3, [r3, #20]
wireless_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:125
   11088:	d112      	bne.n	110b0 <wireless_service+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   1108a:	025a      	lsls	r2, r3, #9
   1108c:	d50c      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   1108e:	f000 fcfd 	bl	11a8c <mesh_get_pnd_pkt_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11092:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   11094:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   11096:	480b      	ldr	r0, [pc, #44]	; (110c4 <wireless_service+0x48>)
   11098:	bf14      	ite	ne
   1109a:	2201      	movne	r2, #1
   1109c:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   110a0:	4619      	mov	r1, r3
   110a2:	6800      	ldr	r0, [r0, #0]
   110a4:	f007 ffac 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   110ac:	f000 bb86 	b.w	117bc <mesh_service>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   110b0:	025b      	lsls	r3, r3, #9
   110b2:	d5f9      	bpl.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   110b4:	f000 fcea 	bl	11a8c <mesh_get_pnd_pkt_count>
   110b8:	2800      	cmp	r0, #0
   110ba:	d1f5      	bne.n	110a8 <wireless_service+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   110bc:	bd08      	pop	{r3, pc}
   110be:	bf00      	nop
   110c0:	2009c000 	.word	0x2009c000
   110c4:	2007c320 	.word	0x2007c320

000110c8 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   110c8:	2324      	movs	r3, #36	; 0x24
   110ca:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110cc:	f64f 74ff 	movw	r4, #65535	; 0xffff
   110d0:	fb03 0101 	mla	r1, r3, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   110d4:	4288      	cmp	r0, r1
   110d6:	d100      	bne.n	110da <mesh_incr_soft_timers_for_arr+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   110d8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   110da:	7843      	ldrb	r3, [r0, #1]
   110dc:	b12b      	cbz	r3, 110ea <mesh_incr_soft_timers_for_arr+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   110de:	8c03      	ldrh	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   110e0:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   110e2:	42a3      	cmp	r3, r4
   110e4:	bf28      	it	cs
   110e6:	4623      	movcs	r3, r4
   110e8:	8403      	strh	r3, [r0, #32]
   110ea:	3024      	adds	r0, #36	; 0x24
   110ec:	e7f2      	b.n	110d4 <mesh_incr_soft_timers_for_arr+0xc>
   110ee:	Address 0x00000000000110ee is out of bounds.


000110f0 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   110f0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   110f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   110f4:	a802      	add	r0, sp, #8
   110f6:	f840 3d04 	str.w	r3, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   110fa:	4b0c      	ldr	r3, [pc, #48]	; (1112c <mesh_update_soft_timers+0x3c>)
   110fc:	2104      	movs	r1, #4
   110fe:	685b      	ldr	r3, [r3, #4]
   11100:	4798      	blx	r3
   11102:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   11104:	4b0a      	ldr	r3, [pc, #40]	; (11130 <mesh_update_soft_timers+0x40>)
   11106:	9a01      	ldr	r2, [sp, #4]
   11108:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   1110a:	2104      	movs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   1110c:	1b14      	subs	r4, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   1110e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   11110:	4808      	ldr	r0, [pc, #32]	; (11134 <mesh_update_soft_timers+0x44>)
   11112:	4622      	mov	r2, r4
   11114:	f7ff ffd8 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   11118:	4622      	mov	r2, r4
   1111a:	2102      	movs	r1, #2
   1111c:	4806      	ldr	r0, [pc, #24]	; (11138 <mesh_update_soft_timers+0x48>)
   1111e:	f7ff ffd3 	bl	110c8 <mesh_incr_soft_timers_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   11122:	1c28      	adds	r0, r5, #0
   11124:	bf18      	it	ne
   11126:	2001      	movne	r0, #1
   11128:	b003      	add	sp, #12
   1112a:	bd30      	pop	{r4, r5, pc}
   1112c:	2007c328 	.word	0x2007c328
   11130:	2007c458 	.word	0x2007c458
   11134:	2007c33e 	.word	0x2007c33e
   11138:	2007c3f2 	.word	0x2007c3f2

0001113c <mesh_send_packet>:
mesh_send_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   1113c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   1113e:	4b0b      	ldr	r3, [pc, #44]	; (1116c <mesh_send_packet+0x30>)
   11140:	7819      	ldrb	r1, [r3, #0]
   11142:	7803      	ldrb	r3, [r0, #0]
   11144:	428b      	cmp	r3, r1
   11146:	4b0a      	ldr	r3, [pc, #40]	; (11170 <mesh_send_packet+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11148:	bf0b      	itete	eq
   1114a:	881a      	ldrheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   1114c:	889a      	ldrhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   1114e:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   11150:	3201      	addne	r2, #1
   11152:	bf14      	ite	ne
   11154:	809a      	strhne	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   11156:	801a      	strheq	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   11158:	4b06      	ldr	r3, [pc, #24]	; (11174 <mesh_send_packet+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   1115a:	7081      	strb	r1, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   1115c:	68db      	ldr	r3, [r3, #12]
   1115e:	2120      	movs	r1, #32
   11160:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   11162:	3000      	adds	r0, #0
   11164:	bf18      	it	ne
   11166:	2001      	movne	r0, #1
   11168:	bd08      	pop	{r3, pc}
   1116a:	bf00      	nop
   1116c:	2007c08c 	.word	0x2007c08c
   11170:	2007c3ce 	.word	0x2007c3ce
   11174:	2007c328 	.word	0x2007c328

00011178 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   11178:	4b0a      	ldr	r3, [pc, #40]	; (111a4 <mesh_send_retry_packet+0x2c>)
   1117a:	7802      	ldrb	r2, [r0, #0]
   1117c:	781b      	ldrb	r3, [r3, #0]
   1117e:	429a      	cmp	r2, r3
   11180:	4b09      	ldr	r3, [pc, #36]	; (111a8 <mesh_send_retry_packet+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11182:	bf0b      	itete	eq
   11184:	88da      	ldrheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   11186:	891a      	ldrhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   11188:	3201      	addeq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   1118a:	3201      	addne	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   1118c:	bf0c      	ite	eq
   1118e:	80da      	strheq	r2, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   11190:	811a      	strhne	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   11192:	7903      	ldrb	r3, [r0, #4]
   11194:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   11198:	3207      	adds	r2, #7
   1119a:	f362 03c5 	bfi	r3, r2, #3, #3
   1119e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   111a0:	f7ff bfcc 	b.w	1113c <mesh_send_packet>
   111a4:	2007c08c 	.word	0x2007c08c
   111a8:	2007c3ce 	.word	0x2007c3ce

000111ac <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   111ac:	2200      	movs	r2, #0
   111ae:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   111b0:	4b06      	ldr	r3, [pc, #24]	; (111cc <mesh_find_rte_tbl_entry+0x20>)
   111b2:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   111b6:	0091      	lsls	r1, r2, #2
   111b8:	4284      	cmp	r4, r0
   111ba:	d101      	bne.n	111c0 <mesh_find_rte_tbl_entry+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   111bc:	1858      	adds	r0, r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   111be:	bd10      	pop	{r4, pc}
   111c0:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   111c2:	2a04      	cmp	r2, #4
   111c4:	d1f5      	bne.n	111b2 <mesh_find_rte_tbl_entry+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   111c6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   111c8:	bd10      	pop	{r4, pc}
   111ca:	bf00      	nop
   111cc:	2007c447 	.word	0x2007c447

000111d0 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   111d0:	b170      	cbz	r0, 111f0 <mesh_update_rte_scores+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   111d2:	78c3      	ldrb	r3, [r0, #3]
   111d4:	3301      	adds	r3, #1
   111d6:	b2db      	uxtb	r3, r3
   111d8:	2bff      	cmp	r3, #255	; 0xff
   111da:	70c3      	strb	r3, [r0, #3]
   111dc:	d108      	bne.n	111f0 <mesh_update_rte_scores+0x20>
   111de:	2300      	movs	r3, #0
   111e0:	4804      	ldr	r0, [pc, #16]	; (111f4 <mesh_update_rte_scores+0x24>)
   111e2:	18c1      	adds	r1, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   111e4:	78ca      	ldrb	r2, [r1, #3]
   111e6:	3304      	adds	r3, #4
   111e8:	0852      	lsrs	r2, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ea:	2b10      	cmp	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   111ec:	70ca      	strb	r2, [r1, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   111ee:	d1f8      	bne.n	111e2 <mesh_update_rte_scores+0x12>
   111f0:	4770      	bx	lr
   111f2:	bf00      	nop
   111f4:	2007c447 	.word	0x2007c447

000111f8 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   111f8:	2224      	movs	r2, #36	; 0x24
   111fa:	4603      	mov	r3, r0
   111fc:	fb02 0101 	mla	r1, r2, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   11200:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   11202:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   11204:	4291      	cmp	r1, r2
   11206:	d10f      	bne.n	11228 <mesh_get_pnd_pkt_slot+0x30>
   11208:	4604      	mov	r4, r0
   1120a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   1120c:	429a      	cmp	r2, r3
   1120e:	d011      	beq.n	11234 <mesh_get_pnd_pkt_slot+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   11210:	7919      	ldrb	r1, [r3, #4]
   11212:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   11216:	8c19      	ldrh	r1, [r3, #32]
   11218:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   1121c:	42a9      	cmp	r1, r5
   1121e:	bf84      	itt	hi
   11220:	461c      	movhi	r4, r3
   11222:	460d      	movhi	r5, r1
   11224:	3324      	adds	r3, #36	; 0x24
   11226:	e7f1      	b.n	1120c <mesh_get_pnd_pkt_slot+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   11228:	4614      	mov	r4, r2
   1122a:	3224      	adds	r2, #36	; 0x24
   1122c:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   11230:	2d00      	cmp	r5, #0
   11232:	d1e7      	bne.n	11204 <mesh_get_pnd_pkt_slot+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   11234:	4620      	mov	r0, r4
   11236:	bd30      	pop	{r4, r5, pc}

00011238 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   11238:	b538      	push	{r3, r4, r5, lr}
   1123a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   1123c:	00c9      	lsls	r1, r1, #3
   1123e:	f101 0508 	add.w	r5, r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   11242:	f7ff ff55 	bl	110f0 <mesh_update_soft_timers>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   11246:	4b1c      	ldr	r3, [pc, #112]	; (112b8 <mesh_pending_packets_add+0x80>)
   11248:	7822      	ldrb	r2, [r4, #0]
   1124a:	781b      	ldrb	r3, [r3, #0]
   1124c:	429a      	cmp	r2, r3
   1124e:	d124      	bne.n	1129a <mesh_pending_packets_add+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   11250:	2102      	movs	r1, #2
   11252:	481a      	ldr	r0, [pc, #104]	; (112bc <mesh_pending_packets_add+0x84>)
   11254:	f7ff ffd0 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   11258:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   1125a:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   1125c:	f880 3020 	strb.w	r3, [r0, #32]
   11260:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   11264:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   11266:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   1126a:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   1126e:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   11272:	f3c5 2506 	ubfx	r5, r5, #8, #7
   11276:	430d      	orrs	r5, r1
   11278:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   1127c:	f104 0120 	add.w	r1, r4, #32
   11280:	f853 4b04 	ldr.w	r4, [r3], #4
   11284:	428b      	cmp	r3, r1
   11286:	f842 4b04 	str.w	r4, [r2], #4
   1128a:	d1f9      	bne.n	11280 <mesh_pending_packets_add+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   1128c:	4a0c      	ldr	r2, [pc, #48]	; (112c0 <mesh_pending_packets_add+0x88>)
   1128e:	7903      	ldrb	r3, [r0, #4]
   11290:	7812      	ldrb	r2, [r2, #0]
   11292:	f362 03c5 	bfi	r3, r2, #3, #3
   11296:	7103      	strb	r3, [r0, #4]
   11298:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1129a:	2104      	movs	r1, #4
   1129c:	4809      	ldr	r0, [pc, #36]	; (112c4 <mesh_pending_packets_add+0x8c>)
   1129e:	f7ff ffab 	bl	111f8 <mesh_get_pnd_pkt_slot>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   112a2:	78e3      	ldrb	r3, [r4, #3]
   112a4:	2b00      	cmp	r3, #0
   112a6:	d1d7      	bne.n	11258 <mesh_pending_packets_add+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112a8:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   112ac:	2504      	movs	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   112ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   112b2:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   112b6:	e7cf      	b.n	11258 <mesh_pending_packets_add+0x20>
   112b8:	2007c08c 	.word	0x2007c08c
   112bc:	2007c3f2 	.word	0x2007c3f2
   112c0:	2007c094 	.word	0x2007c094
   112c4:	2007c33e 	.word	0x2007c33e

000112c8 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   112c8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   112ca:	f7ff ff6f 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   112ce:	4603      	mov	r3, r0
   112d0:	b9d8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   112d2:	f7ff ff6b 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   112d6:	4603      	mov	r3, r0
   112d8:	b9b8      	cbnz	r0, 1130a <mesh_get_rte_to_modify+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   112da:	4a0d      	ldr	r2, [pc, #52]	; (11310 <mesh_get_rte_to_modify+0x48>)
   112dc:	78d3      	ldrb	r3, [r2, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112de:	79d1      	ldrb	r1, [r2, #7]
   112e0:	7ad0      	ldrb	r0, [r2, #11]
   112e2:	428b      	cmp	r3, r1
   112e4:	bf96      	itet	ls
   112e6:	4619      	movls	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112e8:	1d13      	addhi	r3, r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   112ea:	4613      	movls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112ec:	4281      	cmp	r1, r0
   112ee:	bf94      	ite	ls
   112f0:	4608      	movls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f2:	4b08      	ldrhi	r3, [pc, #32]	; (11314 <mesh_get_rte_to_modify+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   112f4:	7bd1      	ldrb	r1, [r2, #15]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   112f6:	4a08      	ldr	r2, [pc, #32]	; (11318 <mesh_get_rte_to_modify+0x50>)
   112f8:	4281      	cmp	r1, r0
   112fa:	bf38      	it	cc
   112fc:	4613      	movcc	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   112fe:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11300:	4906      	ldr	r1, [pc, #24]	; (1131c <mesh_get_rte_to_modify+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   11302:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   11304:	7aca      	ldrb	r2, [r1, #11]
   11306:	3201      	adds	r2, #1
   11308:	72ca      	strb	r2, [r1, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   1130a:	4618      	mov	r0, r3
   1130c:	bd08      	pop	{r3, pc}
   1130e:	bf00      	nop
   11310:	2007c447 	.word	0x2007c447
   11314:	2007c44f 	.word	0x2007c44f
   11318:	2007c453 	.word	0x2007c453
   1131c:	2007c3ce 	.word	0x2007c3ce

00011320 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   11320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11324:	f04f 0824 	mov.w	r8, #36	; 0x24
   11328:	4605      	mov	r5, r0
   1132a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   1132c:	2700      	movs	r7, #0
   1132e:	fb08 1802 	mla	r8, r8, r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11332:	f8df 915c 	ldr.w	r9, [pc, #348]	; 11490 <mesh_handle_pnd_pkts_for_arr+0x170>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   11336:	f8df a15c 	ldr.w	sl, [pc, #348]	; 11494 <mesh_handle_pnd_pkts_for_arr+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   1133a:	45a0      	cmp	r8, r4
   1133c:	d101      	bne.n	11342 <mesh_handle_pnd_pkts_for_arr+0x22>
   1133e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   11342:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   11346:	2b00      	cmp	r3, #0
   11348:	da29      	bge.n	1139e <mesh_handle_pnd_pkts_for_arr+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   1134a:	b1cd      	cbz	r5, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   1134c:	782b      	ldrb	r3, [r5, #0]
   1134e:	7862      	ldrb	r2, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   11350:	4293      	cmp	r3, r2
   11352:	d109      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   11354:	7868      	ldrb	r0, [r5, #1]
   11356:	7821      	ldrb	r1, [r4, #0]
   11358:	4288      	cmp	r0, r1
   1135a:	d105      	bne.n	11368 <mesh_handle_pnd_pkts_for_arr+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   1135c:	2224      	movs	r2, #36	; 0x24
   1135e:	2100      	movs	r1, #0
   11360:	4620      	mov	r0, r4
   11362:	f00e f8b7 	bl	1f4d4 <memset>
   11366:	e069      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   11368:	78e9      	ldrb	r1, [r5, #3]
   1136a:	b149      	cbz	r1, 11380 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   1136c:	7869      	ldrb	r1, [r5, #1]
   1136e:	4291      	cmp	r1, r2
   11370:	d106      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   11372:	7822      	ldrb	r2, [r4, #0]
   11374:	429a      	cmp	r2, r3
   11376:	d103      	bne.n	11380 <mesh_handle_pnd_pkts_for_arr+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   11378:	79aa      	ldrb	r2, [r5, #6]
   1137a:	79a3      	ldrb	r3, [r4, #6]
   1137c:	429a      	cmp	r2, r3
   1137e:	d0ed      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   11380:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   11384:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   11388:	8c21      	ldrh	r1, [r4, #32]
   1138a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   1138e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   11392:	4299      	cmp	r1, r3
   11394:	db52      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   11396:	4620      	mov	r0, r4
   11398:	f7ff fed0 	bl	1113c <mesh_send_packet>
   1139c:	e7de      	b.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   1139e:	7863      	ldrb	r3, [r4, #1]
   113a0:	2b00      	cmp	r3, #0
   113a2:	d04b      	beq.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   113a4:	2d00      	cmp	r5, #0
   113a6:	d032      	beq.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113a8:	792a      	ldrb	r2, [r5, #4]
   113aa:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   113ae:	2ac0      	cmp	r2, #192	; 0xc0
   113b0:	d12b      	bne.n	1140a <mesh_handle_pnd_pkts_for_arr+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113b2:	7822      	ldrb	r2, [r4, #0]
   113b4:	7869      	ldrb	r1, [r5, #1]
   113b6:	428a      	cmp	r2, r1
   113b8:	d102      	bne.n	113c0 <mesh_handle_pnd_pkts_for_arr+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   113ba:	7828      	ldrb	r0, [r5, #0]
   113bc:	4298      	cmp	r0, r3
   113be:	d0cd      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   113c0:	78e6      	ldrb	r6, [r4, #3]
   113c2:	78a8      	ldrb	r0, [r5, #2]
   113c4:	4286      	cmp	r6, r0
   113c6:	d108      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113c8:	4299      	cmp	r1, r3
   113ca:	d106      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113cc:	7829      	ldrb	r1, [r5, #0]
   113ce:	428a      	cmp	r2, r1
   113d0:	d103      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113d2:	79a1      	ldrb	r1, [r4, #6]
   113d4:	79aa      	ldrb	r2, [r5, #6]
   113d6:	4291      	cmp	r1, r2
   113d8:	d0c0      	beq.n	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   113da:	78a9      	ldrb	r1, [r5, #2]
   113dc:	78e2      	ldrb	r2, [r4, #3]
   113de:	4291      	cmp	r1, r2
   113e0:	d115      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113e2:	786a      	ldrb	r2, [r5, #1]
   113e4:	429a      	cmp	r2, r3
   113e6:	d112      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   113e8:	7821      	ldrb	r1, [r4, #0]
   113ea:	782a      	ldrb	r2, [r5, #0]
   113ec:	4291      	cmp	r1, r2
   113ee:	d10e      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   113f0:	79a1      	ldrb	r1, [r4, #6]
   113f2:	79aa      	ldrb	r2, [r5, #6]
   113f4:	4291      	cmp	r1, r2
   113f6:	d10a      	bne.n	1140e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113f8:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   113fa:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   113fe:	f367 03c5 	bfi	r3, r7, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   11402:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   11406:	7123      	strb	r3, [r4, #4]
   11408:	e018      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   1140a:	2a00      	cmp	r2, #0
   1140c:	d1e5      	bne.n	113da <mesh_handle_pnd_pkts_for_arr+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   1140e:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   11412:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   11416:	8c20      	ldrh	r0, [r4, #32]
   11418:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1141c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   11420:	4290      	cmp	r0, r2
   11422:	db0b      	blt.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11424:	7922      	ldrb	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11426:	f884 7020 	strb.w	r7, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   1142a:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   1142e:	b2ce      	uxtb	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   11430:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   11434:	b126      	cbz	r6, 11440 <mesh_handle_pnd_pkts_for_arr+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   11436:	4620      	mov	r0, r4
   11438:	f7ff fe9e 	bl	11178 <mesh_send_retry_packet>
   1143c:	3424      	adds	r4, #36	; 0x24
   1143e:	e77c      	b.n	1133a <mesh_handle_pnd_pkts_for_arr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   11440:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   11444:	2ac0      	cmp	r2, #192	; 0xc0
   11446:	d020      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   11448:	7820      	ldrb	r0, [r4, #0]
   1144a:	f899 2000 	ldrb.w	r2, [r9]
   1144e:	4290      	cmp	r0, r2
   11450:	d11b      	bne.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11452:	78e2      	ldrb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   11454:	4293      	cmp	r3, r2
   11456:	d018      	beq.n	1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   11458:	b1ba      	cbz	r2, 1148a <mesh_handle_pnd_pkts_for_arr+0x16a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   1145a:	2203      	movs	r2, #3
   1145c:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   1145e:	70e1      	strb	r1, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   11460:	f362 1307 	bfi	r3, r2, #4, #4
   11464:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   11466:	4620      	mov	r0, r4
   11468:	f7ff fe86 	bl	11178 <mesh_send_retry_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   1146c:	7923      	ldrb	r3, [r4, #4]
   1146e:	f89a 2000 	ldrb.w	r2, [sl]
   11472:	f362 03c5 	bfi	r3, r2, #3, #3
   11476:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   11478:	7860      	ldrb	r0, [r4, #1]
   1147a:	f7ff fe97 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   1147e:	b100      	cbz	r0, 11482 <mesh_handle_pnd_pkts_for_arr+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   11480:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   11482:	2e00      	cmp	r6, #0
   11484:	f47f af6a 	bne.w	1135c <mesh_handle_pnd_pkts_for_arr+0x3c>
   11488:	e7d8      	b.n	1143c <mesh_handle_pnd_pkts_for_arr+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   1148a:	2601      	movs	r6, #1
   1148c:	e7f4      	b.n	11478 <mesh_handle_pnd_pkts_for_arr+0x158>
   1148e:	bf00      	nop
   11490:	2007c08c 	.word	0x2007c08c
   11494:	2007c094 	.word	0x2007c094

00011498 <mesh_set_node_address>:
mesh_set_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   11498:	1e43      	subs	r3, r0, #1
   1149a:	b2db      	uxtb	r3, r3
   1149c:	2bfd      	cmp	r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   1149e:	bf9d      	ittte	ls
   114a0:	4b02      	ldrls	r3, [pc, #8]	; (114ac <mesh_set_node_address+0x14>)
   114a2:	7018      	strbls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   114a4:	2001      	movls	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   114a6:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   114a8:	4770      	bx	lr
   114aa:	bf00      	nop
   114ac:	2007c08c 	.word	0x2007c08c

000114b0 <mesh_get_node_address>:
mesh_get_node_address():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   114b0:	4b01      	ldr	r3, [pc, #4]	; (114b8 <mesh_get_node_address+0x8>)
   114b2:	7818      	ldrb	r0, [r3, #0]
   114b4:	4770      	bx	lr
   114b6:	bf00      	nop
   114b8:	2007c08c 	.word	0x2007c08c

000114bc <mesh_set_retry_count>:
mesh_set_retry_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:812

void mesh_set_retry_count(const uint8_t count)
{
    if (count <= MESH_RETRY_COUNT_MAX) {
   114bc:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:813
        g_retry_count = count;
   114be:	bf9c      	itt	ls
   114c0:	4b01      	ldrls	r3, [pc, #4]	; (114c8 <mesh_set_retry_count+0xc>)
   114c2:	7018      	strbls	r0, [r3, #0]
   114c4:	4770      	bx	lr
   114c6:	bf00      	nop
   114c8:	2007c094 	.word	0x2007c094

000114cc <mesh_form_pkt>:
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   114cc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   114d0:	4604      	mov	r4, r0
   114d2:	4691      	mov	r9, r2
   114d4:	461e      	mov	r6, r3
   114d6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   114da:	460f      	mov	r7, r1
   114dc:	2900      	cmp	r1, #0
   114de:	d065      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   114e0:	4b34      	ldr	r3, [pc, #208]	; (115b4 <mesh_form_pkt+0xe8>)
   114e2:	f893 8000 	ldrb.w	r8, [r3]
   114e6:	4541      	cmp	r1, r8
   114e8:	d060      	beq.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   114ea:	2e0f      	cmp	r6, #15
   114ec:	d85e      	bhi.n	115ac <mesh_form_pkt+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   114ee:	2800      	cmp	r0, #0
   114f0:	d05e      	beq.n	115b0 <mesh_form_pkt+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   114f2:	2220      	movs	r2, #32
   114f4:	2100      	movs	r1, #0
   114f6:	f00d ffed 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   114fa:	2fff      	cmp	r7, #255	; 0xff
   114fc:	bf08      	it	eq
   114fe:	f04f 0900 	moveq.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   11502:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11504:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   11506:	7067      	strb	r7, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   11508:	f369 1387 	bfi	r3, r9, #6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   1150c:	f362 0302 	bfi	r3, r2, #0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11510:	4a29      	ldr	r2, [pc, #164]	; (115b8 <mesh_form_pkt+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   11512:	f884 8000 	strb.w	r8, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11516:	7812      	ldrb	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   11518:	f884 8002 	strb.w	r8, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   1151c:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11520:	4a26      	ldr	r2, [pc, #152]	; (115bc <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   11522:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   11524:	7813      	ldrb	r3, [r2, #0]
   11526:	3301      	adds	r3, #1
   11528:	b2db      	uxtb	r3, r3
   1152a:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   1152c:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   1152e:	ab0b      	add	r3, sp, #44	; 0x2c
   11530:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   11532:	b9c5      	cbnz	r5, 11566 <mesh_form_pkt+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   11534:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   11536:	2301      	movs	r3, #1
   11538:	f8df 8084 	ldr.w	r8, [pc, #132]	; 115c0 <mesh_form_pkt+0xf4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   1153c:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   1153e:	f888 3000 	strb.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   11542:	f7ff fe33 	bl	111ac <mesh_find_rte_tbl_entry>
   11546:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   11548:	f7ff fe42 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   1154c:	2300      	movs	r3, #0
   1154e:	f888 3000 	strb.w	r3, [r8]
   11552:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   11554:	bb1f      	cbnz	r7, 1159e <mesh_form_pkt+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   11556:	f366 1307 	bfi	r3, r6, #4, #4
   1155a:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   1155c:	70e7      	strb	r7, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   1155e:	4628      	mov	r0, r5
   11560:	b003      	add	sp, #12
   11562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   11566:	f104 0908 	add.w	r9, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   1156c:	79e0      	ldrb	r0, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   1156e:	4613      	mov	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11570:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   11572:	f853 1b08 	ldr.w	r1, [r3], #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   11576:	eb00 0802 	add.w	r8, r0, r2
   1157a:	fa5f f888 	uxtb.w	r8, r8
   1157e:	3d01      	subs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11580:	f1b8 0f18 	cmp.w	r8, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   11584:	9301      	str	r3, [sp, #4]
   11586:	b2ed      	uxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   11588:	d807      	bhi.n	1159a <mesh_form_pkt+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   1158a:	4448      	add	r0, r9
   1158c:	f00d ff7d 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   11590:	f884 8007 	strb.w	r8, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   11594:	2d00      	cmp	r5, #0
   11596:	d1e8      	bne.n	1156a <mesh_form_pkt+0x9e>
   11598:	e7cc      	b.n	11534 <mesh_form_pkt+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   1159a:	2500      	movs	r5, #0
   1159c:	e7cb      	b.n	11536 <mesh_form_pkt+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   1159e:	78ba      	ldrb	r2, [r7, #2]
   115a0:	f362 1307 	bfi	r3, r2, #4, #4
   115a4:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   115a6:	787b      	ldrb	r3, [r7, #1]
   115a8:	70e3      	strb	r3, [r4, #3]
   115aa:	e7d8      	b.n	1155e <mesh_form_pkt+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   115ac:	2500      	movs	r5, #0
   115ae:	e7d6      	b.n	1155e <mesh_form_pkt+0x92>
   115b0:	4605      	mov	r5, r0
   115b2:	e7d4      	b.n	1155e <mesh_form_pkt+0x92>
   115b4:	2007c08c 	.word	0x2007c08c
   115b8:	2007c094 	.word	0x2007c094
   115bc:	2007c457 	.word	0x2007c457
   115c0:	2007c33d 	.word	0x2007c33d

000115c4 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   115c4:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   115c6:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115c8:	4e13      	ldr	r6, [pc, #76]	; (11618 <mesh_send_formed_pkt+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ca:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   115cc:	7032      	strb	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115ce:	b920      	cbnz	r0, 115da <mesh_send_formed_pkt+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   115d0:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   115d2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   115d4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   115d6:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   115d8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   115da:	f7ff fdaf 	bl	1113c <mesh_send_packet>
   115de:	4605      	mov	r5, r0
   115e0:	2800      	cmp	r0, #0
   115e2:	d0f5      	beq.n	115d0 <mesh_send_formed_pkt+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   115e4:	7923      	ldrb	r3, [r4, #4]
   115e6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   115ea:	2b40      	cmp	r3, #64	; 0x40
   115ec:	d010      	beq.n	11610 <mesh_send_formed_pkt+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   115ee:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   115f2:	424a      	negs	r2, r1
   115f4:	414a      	adcs	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115f6:	2bc0      	cmp	r3, #192	; 0xc0
   115f8:	d10b      	bne.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   115fa:	78e3      	ldrb	r3, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   115fc:	b14b      	cbz	r3, 11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   115fe:	7861      	ldrb	r1, [r4, #1]
   11600:	4299      	cmp	r1, r3
   11602:	d006      	beq.n	11612 <mesh_send_formed_pkt+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   11604:	7961      	ldrb	r1, [r4, #5]
   11606:	4620      	mov	r0, r4
   11608:	0909      	lsrs	r1, r1, #4
   1160a:	f7ff fe15 	bl	11238 <mesh_pending_packets_add>
   1160e:	e7e0      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11610:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   11612:	2a00      	cmp	r2, #0
   11614:	d1f6      	bne.n	11604 <mesh_send_formed_pkt+0x40>
   11616:	e7dc      	b.n	115d2 <mesh_send_formed_pkt+0xe>
   11618:	2007c33d 	.word	0x2007c33d

0001161c <mesh_init>:
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1161c:	b082      	sub	sp, #8
   1161e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11622:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11624:	1e42      	subs	r2, r0, #1
   11626:	b2d2      	uxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   11628:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   1162a:	2afd      	cmp	r2, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   1162c:	4605      	mov	r5, r0
   1162e:	460e      	mov	r6, r1
   11630:	9315      	str	r3, [sp, #84]	; 0x54
   11632:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   11636:	d905      	bls.n	11644 <mesh_init+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   11638:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   1163a:	b00d      	add	sp, #52	; 0x34
   1163c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11640:	b002      	add	sp, #8
   11642:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   11644:	2b00      	cmp	r3, #0
   11646:	d0f7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   11648:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   1164a:	2f00      	cmp	r7, #0
   1164c:	d0f4      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   1164e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   11650:	2b00      	cmp	r3, #0
   11652:	d0f1      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   11654:	9b18      	ldr	r3, [sp, #96]	; 0x60
   11656:	2b00      	cmp	r3, #0
   11658:	d0ee      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   1165a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1165c:	2b00      	cmp	r3, #0
   1165e:	d0eb      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11660:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   11662:	2248      	movs	r2, #72	; 0x48
   11664:	2100      	movs	r1, #0
   11666:	4823      	ldr	r0, [pc, #140]	; (116f4 <mesh_init+0xd8>)
   11668:	f00d ff34 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   1166c:	2290      	movs	r2, #144	; 0x90
   1166e:	2100      	movs	r1, #0
   11670:	4821      	ldr	r0, [pc, #132]	; (116f8 <mesh_init+0xdc>)
   11672:	f00d ff2f 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   11676:	2210      	movs	r2, #16
   11678:	2100      	movs	r1, #0
   1167a:	4820      	ldr	r0, [pc, #128]	; (116fc <mesh_init+0xe0>)
   1167c:	f00d ff2a 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   11680:	4b1f      	ldr	r3, [pc, #124]	; (11700 <mesh_init+0xe4>)
   11682:	601c      	str	r4, [r3, #0]
   11684:	605c      	str	r4, [r3, #4]
   11686:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   11688:	4b1e      	ldr	r3, [pc, #120]	; (11704 <mesh_init+0xe8>)
   1168a:	601c      	str	r4, [r3, #0]
   1168c:	605c      	str	r4, [r3, #4]
   1168e:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   11690:	4b1d      	ldr	r3, [pc, #116]	; (11708 <mesh_init+0xec>)
   11692:	701d      	strb	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11694:	4b1d      	ldr	r3, [pc, #116]	; (1170c <mesh_init+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   11696:	4d1e      	ldr	r5, [pc, #120]	; (11710 <mesh_init+0xf4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   11698:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   1169a:	ae15      	add	r6, sp, #84	; 0x54
   1169c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   1169e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   116a0:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116a2:	2218      	movs	r2, #24
   116a4:	4621      	mov	r1, r4
   116a6:	481b      	ldr	r0, [pc, #108]	; (11714 <mesh_init+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   116a8:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   116aa:	f00d ff13 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   116ae:	4649      	mov	r1, r9
   116b0:	2217      	movs	r2, #23
   116b2:	4818      	ldr	r0, [pc, #96]	; (11714 <mesh_init+0xf8>)
   116b4:	f00f fcd5 	bl	21062 <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   116b8:	4621      	mov	r1, r4
   116ba:	4620      	mov	r0, r4
   116bc:	47b8      	blx	r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   116be:	2800      	cmp	r0, #0
   116c0:	d0ba      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   116c2:	f1b8 0f00 	cmp.w	r8, #0
   116c6:	d102      	bne.n	116ce <mesh_init+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   116c8:	f7ff fd12 	bl	110f0 <mesh_update_soft_timers>
   116cc:	e7b5      	b.n	1163a <mesh_init+0x1e>
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   116ce:	2306      	movs	r3, #6
   116d0:	9302      	str	r3, [sp, #8]
   116d2:	4b11      	ldr	r3, [pc, #68]	; (11718 <mesh_init+0xfc>)
   116d4:	4622      	mov	r2, r4
   116d6:	9301      	str	r3, [sp, #4]
   116d8:	2301      	movs	r3, #1
   116da:	21ff      	movs	r1, #255	; 0xff
   116dc:	9300      	str	r3, [sp, #0]
   116de:	a804      	add	r0, sp, #16
   116e0:	f7ff fef4 	bl	114cc <mesh_form_pkt>
   116e4:	2800      	cmp	r0, #0
   116e6:	d0a7      	beq.n	11638 <mesh_init+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   116e8:	a804      	add	r0, sp, #16
   116ea:	f7ff ff6b 	bl	115c4 <mesh_send_formed_pkt>
mesh_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   116ee:	2800      	cmp	r0, #0
   116f0:	d0a2      	beq.n	11638 <mesh_init+0x1c>
   116f2:	e7e9      	b.n	116c8 <mesh_init+0xac>
   116f4:	2007c3f2 	.word	0x2007c3f2
   116f8:	2007c33e 	.word	0x2007c33e
   116fc:	2007c447 	.word	0x2007c447
   11700:	2007c43a 	.word	0x2007c43a
   11704:	2007c3ce 	.word	0x2007c3ce
   11708:	2007c08c 	.word	0x2007c08c
   1170c:	2007c446 	.word	0x2007c446
   11710:	2007c328 	.word	0x2007c328
   11714:	2007c3da 	.word	0x2007c3da
   11718:	00025dfd 	.word	0x00025dfd

0001171c <mesh_send>:
mesh_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   1171c:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1171e:	2b18      	cmp	r3, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   11720:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   11722:	d807      	bhi.n	11734 <mesh_send+0x18>
   11724:	1c1d      	adds	r5, r3, #0
   11726:	fab2 f482 	clz	r4, r2
   1172a:	bf18      	it	ne
   1172c:	2501      	movne	r5, #1
   1172e:	0964      	lsrs	r4, r4, #5
   11730:	42ac      	cmp	r4, r5
   11732:	d101      	bne.n	11738 <mesh_send+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   11734:	2000      	movs	r0, #0
   11736:	e00e      	b.n	11756 <mesh_send+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   11738:	9302      	str	r3, [sp, #8]
   1173a:	9201      	str	r2, [sp, #4]
   1173c:	9500      	str	r5, [sp, #0]
   1173e:	460a      	mov	r2, r1
   11740:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   11744:	4601      	mov	r1, r0
   11746:	a804      	add	r0, sp, #16
   11748:	f7ff fec0 	bl	114cc <mesh_form_pkt>
   1174c:	2800      	cmp	r0, #0
   1174e:	d0f1      	beq.n	11734 <mesh_send+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   11750:	a804      	add	r0, sp, #16
   11752:	f7ff ff37 	bl	115c4 <mesh_send_formed_pkt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   11756:	b00d      	add	sp, #52	; 0x34
   11758:	bd30      	pop	{r4, r5, pc}

0001175a <mesh_send_ack>:
mesh_send_ack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   1175a:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   1175c:	7953      	ldrb	r3, [r2, #5]
   1175e:	7814      	ldrb	r4, [r2, #0]
   11760:	091b      	lsrs	r3, r3, #4
   11762:	9300      	str	r3, [sp, #0]
   11764:	4602      	mov	r2, r0
   11766:	460b      	mov	r3, r1
   11768:	4620      	mov	r0, r4
   1176a:	2103      	movs	r1, #3
   1176c:	f7ff ffd6 	bl	1171c <mesh_send>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   11770:	b002      	add	sp, #8
   11772:	bd10      	pop	{r4, pc}

00011774 <mesh_get_routing_entry>:
mesh_get_routing_entry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081

const mesh_rte_table_t* mesh_get_routing_entry(const uint8_t route_num)
{
   11774:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1083
    mesh_rte_table_t *entry = NULL;
    uint8_t idx = 0, found_entries = 0;
   11776:	4619      	mov	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1081
{
   11778:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1087

    // Routing table may have blank entries which do not account for route_num
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   1177a:	4a08      	ldr	r2, [pc, #32]	; (1179c <mesh_get_routing_entry+0x28>)
   1177c:	f812 5023 	ldrb.w	r5, [r2, r3, lsl #2]
   11780:	009c      	lsls	r4, r3, #2
   11782:	b12d      	cbz	r5, 11790 <mesh_get_routing_entry+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1088
            if (route_num == found_entries) {
   11784:	4288      	cmp	r0, r1
   11786:	d101      	bne.n	1178c <mesh_get_routing_entry+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1089
                entry = &g_rte_table[idx];
   11788:	1910      	adds	r0, r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1090
                break;
   1178a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1092
            }
            ++found_entries;
   1178c:	3101      	adds	r1, #1
   1178e:	b2c9      	uxtb	r1, r1
   11790:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1086 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   11792:	2b04      	cmp	r3, #4
   11794:	d1f2      	bne.n	1177c <mesh_get_routing_entry+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1082
    mesh_rte_table_t *entry = NULL;
   11796:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1097
        }
    }

    return entry;
}
   11798:	bd30      	pop	{r4, r5, pc}
   1179a:	bf00      	nop
   1179c:	2007c447 	.word	0x2007c447

000117a0 <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1100

uint8_t mesh_get_num_routing_entries(void)
{
   117a0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   117a2:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   117a4:	4a04      	ldr	r2, [pc, #16]	; (117b8 <mesh_get_num_routing_entries+0x18>)
   117a6:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   117aa:	b109      	cbz	r1, 117b0 <mesh_get_num_routing_entries+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   117ac:	3001      	adds	r0, #1
   117ae:	b2c0      	uxtb	r0, r0
   117b0:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   117b2:	2b04      	cmp	r3, #4
   117b4:	d1f7      	bne.n	117a6 <mesh_get_num_routing_entries+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   117b6:	4770      	bx	lr
   117b8:	2007c447 	.word	0x2007c447

000117bc <mesh_service>:
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   117bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   117c0:	b088      	sub	sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   117c2:	2220      	movs	r2, #32
   117c4:	2100      	movs	r1, #0
   117c6:	4668      	mov	r0, sp
   117c8:	f00d fe84 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   117cc:	4ba3      	ldr	r3, [pc, #652]	; (11a5c <mesh_service+0x2a0>)
   117ce:	781b      	ldrb	r3, [r3, #0]
   117d0:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   117d4:	bb2b      	cbnz	r3, 11822 <mesh_service+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   117d6:	4fa2      	ldr	r7, [pc, #648]	; (11a60 <mesh_service+0x2a4>)
   117d8:	2120      	movs	r1, #32
   117da:	693b      	ldr	r3, [r7, #16]
   117dc:	4668      	mov	r0, sp
   117de:	4798      	blx	r3
   117e0:	b908      	cbnz	r0, 117e6 <mesh_service+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   117e2:	2400      	movs	r4, #0
   117e4:	e011      	b.n	1180a <mesh_service+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   117e6:	4d9f      	ldr	r5, [pc, #636]	; (11a64 <mesh_service+0x2a8>)
   117e8:	886b      	ldrh	r3, [r5, #2]
   117ea:	3301      	adds	r3, #1
   117ec:	806b      	strh	r3, [r5, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117ee:	f7ff ffd7 	bl	117a0 <mesh_get_num_routing_entries>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f2:	f89d 2004 	ldrb.w	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   117f6:	72a8      	strb	r0, [r5, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   117f8:	f002 0307 	and.w	r3, r2, #7
   117fc:	2b03      	cmp	r3, #3
   117fe:	d013      	beq.n	11828 <mesh_service+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   11800:	4a99      	ldr	r2, [pc, #612]	; (11a68 <mesh_service+0x2ac>)
   11802:	7813      	ldrb	r3, [r2, #0]
   11804:	f043 0301 	orr.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11808:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   1180a:	f7ff fc71 	bl	110f0 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   1180e:	2204      	movs	r2, #4
   11810:	4996      	ldr	r1, [pc, #600]	; (11a6c <mesh_service+0x2b0>)
   11812:	4620      	mov	r0, r4
   11814:	f7ff fd84 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   11818:	2202      	movs	r2, #2
   1181a:	4995      	ldr	r1, [pc, #596]	; (11a70 <mesh_service+0x2b4>)
   1181c:	4620      	mov	r0, r4
   1181e:	f7ff fd7f 	bl	11320 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   11822:	b008      	add	sp, #32
   11824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   11828:	4b92      	ldr	r3, [pc, #584]	; (11a74 <mesh_service+0x2b8>)
   1182a:	f89d e002 	ldrb.w	lr, [sp, #2]
   1182e:	781e      	ldrb	r6, [r3, #0]
   11830:	45b6      	cmp	lr, r6
   11832:	d104      	bne.n	1183e <mesh_service+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   11834:	4a8c      	ldr	r2, [pc, #560]	; (11a68 <mesh_service+0x2ac>)
   11836:	7813      	ldrb	r3, [r2, #0]
   11838:	f043 0302 	orr.w	r3, r3, #2
   1183c:	e7e4      	b.n	11808 <mesh_service+0x4c>
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1183e:	4d8e      	ldr	r5, [pc, #568]	; (11a78 <mesh_service+0x2bc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11840:	4621      	mov	r1, r4
   11842:	46a8      	mov	r8, r5
   11844:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   11848:	f89d 0000 	ldrb.w	r0, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   1184c:	f89d c006 	ldrb.w	ip, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   11850:	fa5f f982 	uxtb.w	r9, r2
   11854:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   11858:	f813 a005 	ldrb.w	sl, [r3, r5]
   1185c:	4582      	cmp	sl, r0
   1185e:	d123      	bne.n	118a8 <mesh_service+0xec>
   11860:	442b      	add	r3, r5
   11862:	f893 a001 	ldrb.w	sl, [r3, #1]
   11866:	45e2      	cmp	sl, ip
   11868:	d11e      	bne.n	118a8 <mesh_service+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186a:	789d      	ldrb	r5, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   1186c:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1186e:	ebb5 0509 	subs.w	r5, r5, r9
   11872:	bf18      	it	ne
   11874:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   11876:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   1187a:	f89d 0002 	ldrb.w	r0, [sp, #2]
   1187e:	f7ff fd23 	bl	112c8 <mesh_get_rte_to_modify>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   11882:	f89d 2002 	ldrb.w	r2, [sp, #2]
   11886:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   11888:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   1188a:	2200      	movs	r2, #0
   1188c:	7082      	strb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   1188e:	f7ff fc9f 	bl	111d0 <mesh_update_rte_scores>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   11892:	f1b9 0f00 	cmp.w	r9, #0
   11896:	d001      	beq.n	1189c <mesh_service+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   11898:	2d00      	cmp	r5, #0
   1189a:	d0a2      	beq.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   1189c:	f89d 3000 	ldrb.w	r3, [sp]
   118a0:	42b3      	cmp	r3, r6
   118a2:	d133      	bne.n	1190c <mesh_service+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   118a4:	466c      	mov	r4, sp
   118a6:	e7b0      	b.n	1180a <mesh_service+0x4e>
   118a8:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   118aa:	2904      	cmp	r1, #4
   118ac:	d1d2      	bne.n	11854 <mesh_service+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ae:	4973      	ldr	r1, [pc, #460]	; (11a7c <mesh_service+0x2c0>)
   118b0:	680b      	ldr	r3, [r1, #0]
   118b2:	709a      	strb	r2, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b4:	4a72      	ldr	r2, [pc, #456]	; (11a80 <mesh_service+0x2c4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118b6:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118b8:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   118ba:	f883 c001 	strb.w	ip, [r3, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   118be:	d106      	bne.n	118ce <mesh_service+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   118c0:	f8c1 8000 	str.w	r8, [r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118c4:	4586      	cmp	lr, r0
   118c6:	d105      	bne.n	118d4 <mesh_service+0x118>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   118c8:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   118ca:	46a9      	mov	r9, r5
   118cc:	e7d5      	b.n	1187a <mesh_service+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   118ce:	3303      	adds	r3, #3
   118d0:	600b      	str	r3, [r1, #0]
   118d2:	e7f7      	b.n	118c4 <mesh_service+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   118d4:	4286      	cmp	r6, r0
   118d6:	d0f7      	beq.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   118d8:	f7ff fcf6 	bl	112c8 <mesh_get_rte_to_modify>
   118dc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   118de:	f7ff fc77 	bl	111d0 <mesh_update_rte_scores>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   118e2:	782b      	ldrb	r3, [r5, #0]
   118e4:	b133      	cbz	r3, 118f4 <mesh_service+0x138>
   118e6:	f89d 3005 	ldrb.w	r3, [sp, #5]
   118ea:	78aa      	ldrb	r2, [r5, #2]
   118ec:	f003 030f 	and.w	r3, r3, #15
   118f0:	4293      	cmp	r3, r2
   118f2:	dce9      	bgt.n	118c8 <mesh_service+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   118f4:	f89d 3000 	ldrb.w	r3, [sp]
   118f8:	702b      	strb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   118fa:	f89d 3002 	ldrb.w	r3, [sp, #2]
   118fe:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   11900:	f89d 3005 	ldrb.w	r3, [sp, #5]
   11904:	f3c3 0303 	ubfx	r3, r3, #0, #4
   11908:	70ab      	strb	r3, [r5, #2]
   1190a:	e7dd      	b.n	118c8 <mesh_service+0x10c>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   1190c:	f89d 8001 	ldrb.w	r8, [sp, #1]
   11910:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   11914:	d11b      	bne.n	1194e <mesh_service+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   11916:	683b      	ldr	r3, [r7, #0]
   11918:	2120      	movs	r1, #32
   1191a:	4668      	mov	r0, sp
   1191c:	4798      	blx	r3
   1191e:	b920      	cbnz	r0, 1192a <mesh_service+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   11920:	4a51      	ldr	r2, [pc, #324]	; (11a68 <mesh_service+0x2ac>)
   11922:	7813      	ldrb	r3, [r2, #0]
   11924:	f043 0304 	orr.w	r3, r3, #4
   11928:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   1192a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1192e:	f003 020f 	and.w	r2, r3, #15
   11932:	1c51      	adds	r1, r2, #1
   11934:	f361 0303 	bfi	r3, r1, #0, #4
   11938:	f88d 3005 	strb.w	r3, [sp, #5]
   1193c:	f3c3 1303 	ubfx	r3, r3, #4, #4
   11940:	429a      	cmp	r2, r3
   11942:	f6bf af4e 	bge.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   11946:	4668      	mov	r0, sp
   11948:	f7ff fbf8 	bl	1113c <mesh_send_packet>
   1194c:	e749      	b.n	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   1194e:	4546      	cmp	r6, r8
   11950:	d12e      	bne.n	119b0 <mesh_service+0x1f4>
mesh_handle_our_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   11952:	f1b9 0f00 	cmp.w	r9, #0
   11956:	d10c      	bne.n	11972 <mesh_service+0x1b6>
   11958:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1195c:	b14b      	cbz	r3, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   1195e:	683b      	ldr	r3, [r7, #0]
   11960:	2120      	movs	r1, #32
   11962:	4668      	mov	r0, sp
   11964:	4798      	blx	r3
   11966:	b920      	cbnz	r0, 11972 <mesh_service+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   11968:	4a3f      	ldr	r2, [pc, #252]	; (11a68 <mesh_service+0x2ac>)
   1196a:	7813      	ldrb	r3, [r2, #0]
   1196c:	f043 0304 	orr.w	r3, r3, #4
   11970:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   11972:	f89d 3004 	ldrb.w	r3, [sp, #4]
   11976:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1197a:	2b40      	cmp	r3, #64	; 0x40
   1197c:	d112      	bne.n	119a4 <mesh_service+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   1197e:	f89d 3007 	ldrb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11982:	466a      	mov	r2, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   11984:	b923      	cbnz	r3, 11990 <mesh_service+0x1d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   11986:	2118      	movs	r1, #24
   11988:	483e      	ldr	r0, [pc, #248]	; (11a84 <mesh_service+0x2c8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1198a:	f7ff fee6 	bl	1175a <mesh_send_ack>
   1198e:	e789      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   11990:	210c      	movs	r1, #12
   11992:	4834      	ldr	r0, [pc, #208]	; (11a64 <mesh_service+0x2a8>)
   11994:	f7ff fee1 	bl	1175a <mesh_send_ack>
   11998:	2800      	cmp	r0, #0
   1199a:	d183      	bne.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1199c:	2100      	movs	r1, #0
   1199e:	466a      	mov	r2, sp
   119a0:	4608      	mov	r0, r1
   119a2:	e7f2      	b.n	1198a <mesh_service+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   119a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
   119a8:	2b00      	cmp	r3, #0
   119aa:	f47f af7b 	bne.w	118a4 <mesh_service+0xe8>
   119ae:	e7f5      	b.n	1199c <mesh_service+0x1e0>
mesh_service():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   119b0:	4b35      	ldr	r3, [pc, #212]	; (11a88 <mesh_service+0x2cc>)
   119b2:	781f      	ldrb	r7, [r3, #0]
   119b4:	2f00      	cmp	r7, #0
   119b6:	f43f af14 	beq.w	117e2 <mesh_service+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   119ba:	f89d 5005 	ldrb.w	r5, [sp, #5]
   119be:	f005 090f 	and.w	r9, r5, #15
   119c2:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   119c6:	45d1      	cmp	r9, sl
   119c8:	f6bf af0b 	bge.w	117e2 <mesh_service+0x26>
mesh_handle_mesh_packet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   119cc:	4640      	mov	r0, r8
   119ce:	f7ff fbed 	bl	111ac <mesh_find_rte_tbl_entry>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119d2:	f89d 3003 	ldrb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119d6:	f109 0901 	add.w	r9, r9, #1
   119da:	f369 0503 	bfi	r5, r9, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119de:	429e      	cmp	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   119e0:	f88d 5005 	strb.w	r5, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   119e4:	d124      	bne.n	11a30 <mesh_service+0x274>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   119e6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   119ea:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   119ee:	2b40      	cmp	r3, #64	; 0x40
   119f0:	d003      	beq.n	119fa <mesh_service+0x23e>
   119f2:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   119f6:	4257      	negs	r7, r2
   119f8:	4157      	adcs	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fa:	b350      	cbz	r0, 11a52 <mesh_service+0x296>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   119fc:	2bc0      	cmp	r3, #192	; 0xc0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   119fe:	7844      	ldrb	r4, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a00:	d120      	bne.n	11a44 <mesh_service+0x288>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   11a02:	45a0      	cmp	r8, r4
   11a04:	d012      	beq.n	11a2c <mesh_service+0x270>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a06:	3400      	adds	r4, #0
   11a08:	bf18      	it	ne
   11a0a:	2401      	movne	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a0c:	433c      	orrs	r4, r7
   11a0e:	f004 0401 	and.w	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   11a12:	b1d0      	cbz	r0, 11a4a <mesh_service+0x28e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   11a14:	7843      	ldrb	r3, [r0, #1]
   11a16:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   11a1a:	7885      	ldrb	r5, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   11a1c:	4668      	mov	r0, sp
   11a1e:	f7ff fb8d 	bl	1113c <mesh_send_packet>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   11a22:	2c00      	cmp	r4, #0
   11a24:	f43f af3e 	beq.w	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a28:	4629      	mov	r1, r5
   11a2a:	e007      	b.n	11a3c <mesh_service+0x280>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a2c:	2400      	movs	r4, #0
   11a2e:	e7ed      	b.n	11a0c <mesh_service+0x250>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   11a30:	2b00      	cmp	r3, #0
   11a32:	f47f af37 	bne.w	118a4 <mesh_service+0xe8>
   11a36:	2800      	cmp	r0, #0
   11a38:	d1ec      	bne.n	11a14 <mesh_service+0x258>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   11a3a:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   11a3c:	4668      	mov	r0, sp
   11a3e:	f7ff fbfb 	bl	11238 <mesh_pending_packets_add>
   11a42:	e72f      	b.n	118a4 <mesh_service+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   11a44:	463c      	mov	r4, r7
   11a46:	e7e5      	b.n	11a14 <mesh_service+0x258>
   11a48:	463c      	mov	r4, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   11a4a:	2500      	movs	r5, #0
   11a4c:	f88d 5003 	strb.w	r5, [sp, #3]
   11a50:	e7e4      	b.n	11a1c <mesh_service+0x260>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   11a52:	2bc0      	cmp	r3, #192	; 0xc0
   11a54:	d1f8      	bne.n	11a48 <mesh_service+0x28c>
   11a56:	4604      	mov	r4, r0
   11a58:	e7d8      	b.n	11a0c <mesh_service+0x250>
   11a5a:	bf00      	nop
   11a5c:	2007c33d 	.word	0x2007c33d
   11a60:	2007c328 	.word	0x2007c328
   11a64:	2007c3ce 	.word	0x2007c3ce
   11a68:	2007c33c 	.word	0x2007c33c
   11a6c:	2007c33e 	.word	0x2007c33e
   11a70:	2007c3f2 	.word	0x2007c3f2
   11a74:	2007c08c 	.word	0x2007c08c
   11a78:	2007c43a 	.word	0x2007c43a
   11a7c:	2007c090 	.word	0x2007c090
   11a80:	2007c443 	.word	0x2007c443
   11a84:	2007c3da 	.word	0x2007c3da
   11a88:	2007c446 	.word	0x2007c446

00011a8c <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   11a8c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   11a8e:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   11a90:	4a09      	ldr	r2, [pc, #36]	; (11ab8 <mesh_get_pnd_pkt_count+0x2c>)
   11a92:	18d1      	adds	r1, r2, r3
   11a94:	7849      	ldrb	r1, [r1, #1]
   11a96:	b109      	cbz	r1, 11a9c <mesh_get_pnd_pkt_count+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   11a98:	3001      	adds	r0, #1
   11a9a:	b2c0      	uxtb	r0, r0
   11a9c:	3324      	adds	r3, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   11a9e:	2b90      	cmp	r3, #144	; 0x90
   11aa0:	d1f7      	bne.n	11a92 <mesh_get_pnd_pkt_count+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aa2:	4b06      	ldr	r3, [pc, #24]	; (11abc <mesh_get_pnd_pkt_count+0x30>)
   11aa4:	785a      	ldrb	r2, [r3, #1]
   11aa6:	b10a      	cbz	r2, 11aac <mesh_get_pnd_pkt_count+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11aa8:	3001      	adds	r0, #1
   11aaa:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   11aac:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   11ab0:	b10b      	cbz	r3, 11ab6 <mesh_get_pnd_pkt_count+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   11ab2:	3001      	adds	r0, #1
   11ab4:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   11ab6:	4770      	bx	lr
   11ab8:	2007c33e 	.word	0x2007c33e
   11abc:	2007c3f2 	.word	0x2007c3f2

00011ac0 <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1153
                           (MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
    return timeout;
}

uint32_t mesh_get_max_timeout_before_packet_fails(uint8_t node_addr)
{
   11ac0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1154
    mesh_rte_table_t *e =  mesh_find_rte_tbl_entry(node_addr);
   11ac2:	f7ff fb73 	bl	111ac <mesh_find_rte_tbl_entry>
   11ac6:	4b06      	ldr	r3, [pc, #24]	; (11ae0 <mesh_get_max_timeout_before_packet_fails+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155
    uint32_t timeout = e ? (1 + e->num_hops) * g_retry_count * MESH_ACK_TIMEOUT_MS :
   11ac8:	b128      	cbz	r0, 11ad6 <mesh_get_max_timeout_before_packet_fails+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1155 (discriminator 1)
   11aca:	7882      	ldrb	r2, [r0, #2]
   11acc:	7818      	ldrb	r0, [r3, #0]
   11ace:	fb02 0000 	mla	r0, r2, r0, r0
   11ad2:	00c0      	lsls	r0, r0, #3
   11ad4:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1156 (discriminator 2)
                           (g_retry_count * MESH_ACK_TIMEOUT_MS * MESH_RTE_DISCOVERY_HOPS);
   11ad6:	2018      	movs	r0, #24
   11ad8:	781b      	ldrb	r3, [r3, #0]
   11ada:	4358      	muls	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1158 (discriminator 2)
    return timeout;
}
   11adc:	bd08      	pop	{r3, pc}
   11ade:	bf00      	nop
   11ae0:	2007c094 	.word	0x2007c094

00011ae4 <mesh_get_stats>:
mesh_get_stats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1163

#if MESH_USE_STATISTICS
mesh_stats_t mesh_get_stats(void)
{
    return g_mesh_stats;
   11ae4:	4903      	ldr	r1, [pc, #12]	; (11af4 <mesh_get_stats+0x10>)
   11ae6:	680b      	ldr	r3, [r1, #0]
   11ae8:	6003      	str	r3, [r0, #0]
   11aea:	684b      	ldr	r3, [r1, #4]
   11aec:	6043      	str	r3, [r0, #4]
   11aee:	688b      	ldr	r3, [r1, #8]
   11af0:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.c:1164
}
   11af2:	4770      	bx	lr
   11af4:	2007c3ce 	.word	0x2007c3ce

00011af8 <mem_cpy>:
mem_cpy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   11af8:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   11afa:	4604      	mov	r4, r0
   11afc:	1f0d      	subs	r5, r1, #4
   11afe:	1b13      	subs	r3, r2, r4
   11b00:	4403      	add	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   11b02:	2b03      	cmp	r3, #3
   11b04:	d80a      	bhi.n	11b1c <mem_cpy+0x24>
   11b06:	f022 0303 	bic.w	r3, r2, #3
   11b0a:	4419      	add	r1, r3
   11b0c:	f002 0203 	and.w	r2, r2, #3
   11b10:	3b01      	subs	r3, #1
   11b12:	4418      	add	r0, r3
   11b14:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   11b16:	4291      	cmp	r1, r2
   11b18:	d105      	bne.n	11b26 <mem_cpy+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   11b1a:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   11b1c:	f855 3f04 	ldr.w	r3, [r5, #4]!
   11b20:	f844 3b04 	str.w	r3, [r4], #4
   11b24:	e7eb      	b.n	11afe <mem_cpy+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   11b26:	f811 3b01 	ldrb.w	r3, [r1], #1
   11b2a:	f800 3f01 	strb.w	r3, [r0, #1]!
   11b2e:	e7f2      	b.n	11b16 <mem_cpy+0x1e>

00011b30 <mem_set>:
mem_set():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   11b30:	4402      	add	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   11b32:	4290      	cmp	r0, r2
   11b34:	d100      	bne.n	11b38 <mem_set+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   11b36:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   11b38:	f800 1b01 	strb.w	r1, [r0], #1
   11b3c:	e7f9      	b.n	11b32 <mem_set+0x2>

00011b3e <sum_sfn>:
sum_sfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   11b3e:	4602      	mov	r2, r0
   11b40:	f100 010b 	add.w	r1, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   11b44:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   11b46:	01c3      	lsls	r3, r0, #7
   11b48:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   11b4c:	f812 0b01 	ldrb.w	r0, [r2], #1
   11b50:	4403      	add	r3, r0
   11b52:	428a      	cmp	r2, r1
   11b54:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   11b58:	d1f5      	bne.n	11b46 <sum_sfn+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   11b5a:	4770      	bx	lr

00011b5c <get_ldnumber>:
get_ldnumber():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   11b5c:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2080
{
   11b5e:	b510      	push	{r4, lr}
   11b60:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   11b62:	b153      	cbz	r3, 11b7a <get_ldnumber+0x1e>
   11b64:	4619      	mov	r1, r3
   11b66:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   11b68:	f811 0b01 	ldrb.w	r0, [r1], #1
   11b6c:	281f      	cmp	r0, #31
   11b6e:	d910      	bls.n	11b92 <get_ldnumber+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   11b70:	283a      	cmp	r0, #58	; 0x3a
   11b72:	d1f8      	bne.n	11b66 <get_ldnumber+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   11b74:	1c59      	adds	r1, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   11b76:	428a      	cmp	r2, r1
   11b78:	d002      	beq.n	11b80 <get_ldnumber+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   11b7a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   11b7e:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b80:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   11b82:	3b30      	subs	r3, #48	; 0x30
   11b84:	b2d9      	uxtb	r1, r3
   11b86:	2901      	cmp	r1, #1
   11b88:	d8f7      	bhi.n	11b7a <get_ldnumber+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					vol = (int)i;
					*path = ++tt;
   11b8a:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   11b8c:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   11b8e:	6022      	str	r2, [r4, #0]
   11b90:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2120
#endif
			}
			return vol;
		}
#if _FS_RPATH && _VOLUMES >= 2
		vol = CurrVol;	/* Current drive */
   11b92:	4b01      	ldr	r3, [pc, #4]	; (11b98 <get_ldnumber+0x3c>)
   11b94:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   11b96:	bd10      	pop	{r4, pc}
   11b98:	2007c45c 	.word	0x2007c45c

00011b9c <get_fileinfo>:
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11b9c:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11b9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1744
	p = fno->fname;
   11ba2:	f101 0209 	add.w	r2, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1739
{
   11ba6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1745
	if (dp->sect) {		/* Get SFN */
   11ba8:	b363      	cbz	r3, 11c04 <get_fileinfo+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1748
		i = 0;
   11baa:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11bac:	272e      	movs	r7, #46	; 0x2e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1746
		BYTE *dir = dp->dir;
   11bae:	6941      	ldr	r1, [r0, #20]
   11bb0:	1e4e      	subs	r6, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1750
			c = (TCHAR)dir[i++];
   11bb2:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   11bb6:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1751
			if (c == ' ') continue;			/* Skip padding spaces */
   11bb8:	2b20      	cmp	r3, #32
   11bba:	d019      	beq.n	11bf0 <get_fileinfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11bbc:	2b05      	cmp	r3, #5
   11bbe:	d048      	beq.n	11c52 <get_fileinfo+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11bc0:	2c09      	cmp	r4, #9
   11bc2:	d101      	bne.n	11bc8 <get_fileinfo+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753 (discriminator 1)
   11bc4:	7017      	strb	r7, [r2, #0]
   11bc6:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755
			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
   11bc8:	f1a3 0e41 	sub.w	lr, r3, #65	; 0x41
   11bcc:	f1be 0f19 	cmp.w	lr, #25
   11bd0:	d80c      	bhi.n	11bec <get_fileinfo+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1755 (discriminator 1)
   11bd2:	2c08      	cmp	r4, #8
   11bd4:	bf8c      	ite	hi
   11bd6:	f04f 0c10 	movhi.w	ip, #16
   11bda:	f04f 0c08 	movls.w	ip, #8
   11bde:	f891 e00c 	ldrb.w	lr, [r1, #12]
   11be2:	ea1c 0f0e 	tst.w	ip, lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1756 (discriminator 1)
				c += 0x20;			/* To lower */
   11be6:	bf1c      	itt	ne
   11be8:	3320      	addne	r3, #32
   11bea:	b2db      	uxtbne	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1764
			*p++ = c;
   11bec:	7013      	strb	r3, [r2, #0]
   11bee:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1749
		while (i < 11) {		/* Copy name body and extension */
   11bf0:	2c0b      	cmp	r4, #11
   11bf2:	d1de      	bne.n	11bb2 <get_fileinfo+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1766
		fno->fattrib = dir[DIR_Attr];				/* Attribute */
   11bf4:	7acb      	ldrb	r3, [r1, #11]
   11bf6:	722b      	strb	r3, [r5, #8]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
#define	ST_WORD(ptr,val)	*(WORD*)(BYTE*)(ptr)=(WORD)(val)
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11bf8:	69cb      	ldr	r3, [r1, #28]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1767
		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
   11bfa:	602b      	str	r3, [r5, #0]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11bfc:	8b0b      	ldrh	r3, [r1, #24]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1768
		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
   11bfe:	80ab      	strh	r3, [r5, #4]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   11c00:	8acb      	ldrh	r3, [r1, #22]
get_fileinfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1769
		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
   11c02:	80eb      	strh	r3, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1771
	*p = 0;		/* Terminate SFN string by a \0 */
   11c04:	2400      	movs	r4, #0
   11c06:	7014      	strb	r4, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1774
	if (fno->lfname) {
   11c08:	69ae      	ldr	r6, [r5, #24]
   11c0a:	b33e      	cbz	r6, 11c5c <get_fileinfo+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c0c:	6903      	ldr	r3, [r0, #16]
   11c0e:	b923      	cbnz	r3, 11c1a <get_fileinfo+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1777
		i = 0; p = fno->lfname;
   11c10:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1791
		p[i] = 0;	/* Terminate LFN string by a \0 */
   11c12:	2300      	movs	r3, #0
   11c14:	5533      	strb	r3, [r6, r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1794
}
   11c16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 1)
		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
   11c1a:	69eb      	ldr	r3, [r5, #28]
   11c1c:	2b00      	cmp	r3, #0
   11c1e:	d0f7      	beq.n	11c10 <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1778 (discriminator 2)
   11c20:	f64f 73ff 	movw	r3, #65535	; 0xffff
   11c24:	8c02      	ldrh	r2, [r0, #32]
   11c26:	429a      	cmp	r2, r3
   11c28:	d0f2      	beq.n	11c10 <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1779
			lfn = dp->lfn;
   11c2a:	f8d0 801c 	ldr.w	r8, [r0, #28]
   11c2e:	1e77      	subs	r7, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1780
			while ((w = *lfn++) != 0) {		/* Get an LFN character */
   11c30:	f838 0014 	ldrh.w	r0, [r8, r4, lsl #1]
   11c34:	2800      	cmp	r0, #0
   11c36:	d0ec      	beq.n	11c12 <get_fileinfo+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1782
				w = ff_convert(w, 0);		/* Unicode -> OEM */
   11c38:	2100      	movs	r1, #0
   11c3a:	f002 f88d 	bl	13d58 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1783
				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
   11c3e:	2800      	cmp	r0, #0
   11c40:	d0e6      	beq.n	11c10 <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1787
				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
   11c42:	69eb      	ldr	r3, [r5, #28]
   11c44:	3b01      	subs	r3, #1
   11c46:	429c      	cmp	r4, r3
   11c48:	d2e2      	bcs.n	11c10 <get_fileinfo+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1788
				p[i++] = (TCHAR)w;
   11c4a:	3401      	adds	r4, #1
   11c4c:	f807 0f01 	strb.w	r0, [r7, #1]!
   11c50:	e7ee      	b.n	11c30 <get_fileinfo+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c52:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1752
			if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
   11c54:	f04f 03e5 	mov.w	r3, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1753
			if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
   11c58:	d1c8      	bne.n	11bec <get_fileinfo+0x50>
   11c5a:	e7b3      	b.n	11bc4 <get_fileinfo+0x28>
   11c5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00011c60 <sync_window.part.1>:
sync_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   11c62:	6b45      	ldr	r5, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c64:	f100 0738 	add.w	r7, r0, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   11c68:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   11c6a:	2301      	movs	r3, #1
   11c6c:	462a      	mov	r2, r5
   11c6e:	4639      	mov	r1, r7
   11c70:	7840      	ldrb	r0, [r0, #1]
   11c72:	f002 fc64 	bl	1453e <disk_write>
   11c76:	b9a0      	cbnz	r0, 11ca2 <sync_window.part.1+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c78:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   11c7a:	6a22      	ldr	r2, [r4, #32]
   11c7c:	1aeb      	subs	r3, r5, r3
   11c7e:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   11c80:	7120      	strb	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   11c82:	d301      	bcc.n	11c88 <sync_window.part.1+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   11c84:	2000      	movs	r0, #0
   11c86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c88:	78e6      	ldrb	r6, [r4, #3]
   11c8a:	2e01      	cmp	r6, #1
   11c8c:	d9fa      	bls.n	11c84 <sync_window.part.1+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c8e:	6a23      	ldr	r3, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c90:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   11c92:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   11c94:	462a      	mov	r2, r5
   11c96:	2301      	movs	r3, #1
   11c98:	7860      	ldrb	r0, [r4, #1]
   11c9a:	f002 fc50 	bl	1453e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   11c9e:	3e01      	subs	r6, #1
   11ca0:	e7f3      	b.n	11c8a <sync_window.part.1+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   11ca2:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011ca6 <sync_window>:
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   11ca6:	7903      	ldrb	r3, [r0, #4]
   11ca8:	b10b      	cbz	r3, 11cae <sync_window+0x8>
   11caa:	f7ff bfd9 	b.w	11c60 <sync_window.part.1>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:776
}
   11cae:	4618      	mov	r0, r3
   11cb0:	4770      	bx	lr
   11cb2:	Address 0x0000000000011cb2 is out of bounds.


00011cb4 <sync_fs>:
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:810
{
   11cb4:	b570      	push	{r4, r5, r6, lr}
   11cb6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   11cb8:	f7ff fff5 	bl	11ca6 <sync_window>
   11cbc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   11cbe:	bb80      	cbnz	r0, 11d22 <sync_fs+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   11cc0:	7823      	ldrb	r3, [r4, #0]
   11cc2:	2b03      	cmp	r3, #3
   11cc4:	d125      	bne.n	11d12 <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   11cc6:	7963      	ldrb	r3, [r4, #5]
   11cc8:	2b01      	cmp	r3, #1
   11cca:	d122      	bne.n	11d12 <sync_fs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   11ccc:	f104 0638 	add.w	r6, r4, #56	; 0x38
   11cd0:	4601      	mov	r1, r0
   11cd2:	f44f 7200 	mov.w	r2, #512	; 0x200
   11cd6:	4630      	mov	r0, r6
   11cd8:	f7ff ff2a 	bl	11b30 <mem_set>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   11cdc:	f64a 2255 	movw	r2, #43605	; 0xaa55
   11ce0:	f8a4 2236 	strh.w	r2, [r4, #566]	; 0x236
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   11ce4:	4a0f      	ldr	r2, [pc, #60]	; (11d24 <sync_fs+0x70>)
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11ce6:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11ce8:	63a2      	str	r2, [r4, #56]	; 0x38
   11cea:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   11cee:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   11cf2:	3220      	adds	r2, #32
   11cf4:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   11cf8:	6962      	ldr	r2, [r4, #20]
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
   11cfa:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   11cfc:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
   11d00:	6922      	ldr	r2, [r4, #16]
   11d02:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
sync_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   11d06:	6a62      	ldr	r2, [r4, #36]	; 0x24
   11d08:	3201      	adds	r2, #1
   11d0a:	6362      	str	r2, [r4, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   11d0c:	f002 fc17 	bl	1453e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   11d10:	7165      	strb	r5, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   11d12:	2200      	movs	r2, #0
   11d14:	7860      	ldrb	r0, [r4, #1]
   11d16:	4611      	mov	r1, r2
   11d18:	f002 fc2d 	bl	14576 <disk_ioctl>
   11d1c:	3000      	adds	r0, #0
   11d1e:	bf18      	it	ne
   11d20:	2001      	movne	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:836
}
   11d22:	bd70      	pop	{r4, r5, r6, pc}
   11d24:	41615252 	.word	0x41615252

00011d28 <move_window>:
move_window():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d28:	6b43      	ldr	r3, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d2a:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d2c:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:785
{
   11d2e:	4605      	mov	r5, r0
   11d30:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   11d32:	d011      	beq.n	11d58 <move_window+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   11d34:	f7ff ffb7 	bl	11ca6 <sync_window>
   11d38:	4604      	mov	r4, r0
   11d3a:	b110      	cbz	r0, 11d42 <move_window+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   11d3c:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:797
}
   11d3e:	4620      	mov	r0, r4
   11d40:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   11d42:	2301      	movs	r3, #1
   11d44:	4632      	mov	r2, r6
   11d46:	f105 0138 	add.w	r1, r5, #56	; 0x38
   11d4a:	7868      	ldrb	r0, [r5, #1]
   11d4c:	f002 fbdb 	bl	14506 <disk_read>
   11d50:	2800      	cmp	r0, #0
   11d52:	d1f3      	bne.n	11d3c <move_window+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   11d54:	636e      	str	r6, [r5, #52]	; 0x34
   11d56:	e7f2      	b.n	11d3e <move_window+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   11d58:	2400      	movs	r4, #0
   11d5a:	e7f0      	b.n	11d3e <move_window+0x16>

00011d5c <check_fs>:
check_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d5c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d5e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   11d60:	7103      	strb	r3, [r0, #4]
   11d62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11d66:	6343      	str	r3, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2140
{
   11d68:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   11d6a:	f7ff ffdd 	bl	11d28 <move_window>
   11d6e:	b9a0      	cbnz	r0, 11d9a <check_fs+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   11d70:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11d74:	f8b4 2236 	ldrh.w	r2, [r4, #566]	; 0x236
   11d78:	429a      	cmp	r2, r3
   11d7a:	d110      	bne.n	11d9e <check_fs+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   11d7c:	f8d4 306e 	ldr.w	r3, [r4, #110]	; 0x6e
   11d80:	4a08      	ldr	r2, [pc, #32]	; (11da4 <check_fs+0x48>)
   11d82:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   11d86:	4293      	cmp	r3, r2
   11d88:	d00a      	beq.n	11da0 <check_fs+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   11d8a:	f8d4 008a 	ldr.w	r0, [r4, #138]	; 0x8a
   11d8e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   11d92:	1a80      	subs	r0, r0, r2
   11d94:	bf18      	it	ne
   11d96:	2001      	movne	r0, #1
   11d98:	bd10      	pop	{r4, pc}
   11d9a:	2003      	movs	r0, #3
   11d9c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   11d9e:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   11da0:	bd10      	pop	{r4, pc}
   11da2:	bf00      	nop
   11da4:	00544146 	.word	0x00544146

00011da8 <find_volume>:
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   11da8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11daa:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   11dac:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11dae:	b085      	sub	sp, #20
   11db0:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11db2:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2169
{
   11db4:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   11db6:	f7ff fed1 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11dba:	1e06      	subs	r6, r0, #0
   11dbc:	f2c0 80f2 	blt.w	11fa4 <find_volume+0x1fc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   11dc0:	4b7e      	ldr	r3, [pc, #504]	; (11fbc <find_volume+0x214>)
   11dc2:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11dc6:	2c00      	cmp	r4, #0
   11dc8:	f000 80ee 	beq.w	11fa8 <find_volume+0x200>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11dcc:	68e0      	ldr	r0, [r4, #12]
   11dce:	f001 ffa1 	bl	13d14 <ff_req_grant>
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   11dd2:	2800      	cmp	r0, #0
   11dd4:	f000 80ea 	beq.w	11fac <find_volume+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   11dd8:	603c      	str	r4, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   11dda:	7823      	ldrb	r3, [r4, #0]
   11ddc:	b16b      	cbz	r3, 11dfa <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   11dde:	7860      	ldrb	r0, [r4, #1]
   11de0:	f002 fb89 	bl	144f6 <disk_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   11de4:	07c1      	lsls	r1, r0, #31
   11de6:	d408      	bmi.n	11dfa <find_volume+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   11de8:	2d00      	cmp	r5, #0
   11dea:	f000 80e1 	beq.w	11fb0 <find_volume+0x208>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   11dee:	f010 0004 	ands.w	r0, r0, #4
   11df2:	d000      	beq.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   11df4:	200a      	movs	r0, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   11df6:	b005      	add	sp, #20
   11df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11dfa:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11dfc:	b2f0      	uxtb	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   11dfe:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   11e00:	7060      	strb	r0, [r4, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   11e02:	f002 fb65 	bl	144d0 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   11e06:	07c2      	lsls	r2, r0, #31
   11e08:	f100 80d4 	bmi.w	11fb4 <find_volume+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   11e0c:	b10d      	cbz	r5, 11e12 <find_volume+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   11e0e:	0743      	lsls	r3, r0, #29
   11e10:	d4f0      	bmi.n	11df4 <find_volume+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   11e12:	2100      	movs	r1, #0
   11e14:	4620      	mov	r0, r4
   11e16:	f7ff ffa1 	bl	11d5c <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   11e1a:	2801      	cmp	r0, #1
   11e1c:	f040 80ad 	bne.w	11f7a <find_volume+0x1d2>
   11e20:	4621      	mov	r1, r4
   11e22:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   11e24:	f891 31fa 	ldrb.w	r3, [r1, #506]	; 0x1fa
   11e28:	b10b      	cbz	r3, 11e2e <find_volume+0x86>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e2a:	f8d1 31fe 	ldr.w	r3, [r1, #510]	; 0x1fe
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   11e2e:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   11e32:	3201      	adds	r2, #1
   11e34:	2a04      	cmp	r2, #4
   11e36:	f101 0110 	add.w	r1, r1, #16
   11e3a:	d1f3      	bne.n	11e24 <find_volume+0x7c>
   11e3c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   11e3e:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11e42:	2d00      	cmp	r5, #0
   11e44:	f000 808d 	beq.w	11f62 <find_volume+0x1ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   11e48:	4629      	mov	r1, r5
   11e4a:	4620      	mov	r0, r4
   11e4c:	f7ff ff86 	bl	11d5c <check_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11e50:	2800      	cmp	r0, #0
   11e52:	f040 8087 	bne.w	11f64 <find_volume+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   11e56:	f8b4 3043 	ldrh.w	r3, [r4, #67]	; 0x43
   11e5a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   11e5e:	f040 808a 	bne.w	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   11e62:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   11e66:	b901      	cbnz	r1, 11e6a <find_volume+0xc2>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   11e68:	6de1      	ldr	r1, [r4, #92]	; 0x5c
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e6a:	f894 2048 	ldrb.w	r2, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   11e6e:	6221      	str	r1, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e70:	1e53      	subs	r3, r2, #1
   11e72:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   11e74:	70e2      	strb	r2, [r4, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   11e76:	d87e      	bhi.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   11e78:	f894 6045 	ldrb.w	r6, [r4, #69]	; 0x45
   11e7c:	70a6      	strb	r6, [r4, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   11e7e:	2e00      	cmp	r6, #0
   11e80:	d079      	beq.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   11e82:	1e73      	subs	r3, r6, #1
   11e84:	4233      	tst	r3, r6
   11e86:	d176      	bne.n	11f76 <find_volume+0x1ce>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e88:	f8b4 e049 	ldrh.w	lr, [r4, #73]	; 0x49
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e8c:	f01e 0f0f 	tst.w	lr, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   11e90:	f8a4 e008 	strh.w	lr, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   11e94:	d16f      	bne.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   11e96:	f8b4 304b 	ldrh.w	r3, [r4, #75]	; 0x4b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   11e9a:	b903      	cbnz	r3, 11e9e <find_volume+0xf6>
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   11e9c:	6da3      	ldr	r3, [r4, #88]	; 0x58
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   11e9e:	f8b4 7046 	ldrh.w	r7, [r4, #70]	; 0x46
find_volume():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   11ea2:	2f00      	cmp	r7, #0
   11ea4:	d067      	beq.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   11ea6:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   11ea8:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   11eac:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   11eae:	4283      	cmp	r3, r0
   11eb0:	d361      	bcc.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   11eb2:	1a1b      	subs	r3, r3, r0
   11eb4:	fbb3 f3f6 	udiv	r3, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   11eb8:	2b00      	cmp	r3, #0
   11eba:	d05c      	beq.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   11ebc:	f640 76f5 	movw	r6, #4085	; 0xff5
   11ec0:	42b3      	cmp	r3, r6
   11ec2:	d95c      	bls.n	11f7e <find_volume+0x1d6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   11ec4:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   11ec8:	42b3      	cmp	r3, r6
   11eca:	bf94      	ite	ls
   11ecc:	2602      	movls	r6, #2
   11ece:	2603      	movhi	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ed0:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11ed2:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ed4:	4428      	add	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ed6:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   11ed8:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   11eda:	6265      	str	r5, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   11edc:	62a7      	str	r7, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   11ede:	6320      	str	r0, [r4, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   11ee0:	d14f      	bne.n	11f82 <find_volume+0x1da>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   11ee2:	f1be 0f00 	cmp.w	lr, #0
   11ee6:	d146      	bne.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11ee8:	6e62      	ldr	r2, [r4, #100]	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   11eea:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   11eec:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   11eee:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   11ef2:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   11ef6:	d33e      	bcc.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   11ef8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   11efc:	6163      	str	r3, [r4, #20]
   11efe:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11f00:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11f02:	2e03      	cmp	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   11f04:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   11f06:	d122      	bne.n	11f4e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   11f08:	f8b4 3068 	ldrh.w	r3, [r4, #104]	; 0x68
   11f0c:	2b01      	cmp	r3, #1
   11f0e:	d11e      	bne.n	11f4e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   11f10:	1c69      	adds	r1, r5, #1
   11f12:	4620      	mov	r0, r4
   11f14:	f7ff ff08 	bl	11d28 <move_window>
   11f18:	b9c8      	cbnz	r0, 11f4e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f1a:	f64a 2355 	movw	r3, #43605	; 0xaa55
   11f1e:	f8b4 2236 	ldrh.w	r2, [r4, #566]	; 0x236
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   11f22:	7160      	strb	r0, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   11f24:	429a      	cmp	r2, r3
   11f26:	d112      	bne.n	11f4e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   11f28:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   11f2a:	4b25      	ldr	r3, [pc, #148]	; (11fc0 <find_volume+0x218>)
   11f2c:	429a      	cmp	r2, r3
   11f2e:	d10e      	bne.n	11f4e <find_volume+0x1a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   11f30:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   11f34:	f8d4 221c 	ldr.w	r2, [r4, #540]	; 0x21c
   11f38:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   11f3c:	3320      	adds	r3, #32
   11f3e:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   11f40:	bf01      	itttt	eq
   11f42:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   11f46:	6163      	streq	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   11f48:	f8d4 3224 	ldreq.w	r3, [r4, #548]	; 0x224
   11f4c:	6123      	streq	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2318
	fs->cdir = 0;		/* Set current directory to root */
   11f4e:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f50:	4a1c      	ldr	r2, [pc, #112]	; (11fc4 <find_volume+0x21c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   11f52:	7026      	strb	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f54:	8813      	ldrh	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2318
	fs->cdir = 0;		/* Set current directory to root */
   11f56:	61a0      	str	r0, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   11f58:	3301      	adds	r3, #1
   11f5a:	b29b      	uxth	r3, r3
   11f5c:	8013      	strh	r3, [r2, #0]
   11f5e:	80e3      	strh	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   11f60:	e749      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   11f62:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   11f64:	3601      	adds	r6, #1
   11f66:	2e04      	cmp	r6, #4
   11f68:	f47f af69 	bne.w	11e3e <find_volume+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11f6c:	2803      	cmp	r0, #3
   11f6e:	d023      	beq.n	11fb8 <find_volume+0x210>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   11f70:	2800      	cmp	r0, #0
   11f72:	f43f af70 	beq.w	11e56 <find_volume+0xae>
   11f76:	200d      	movs	r0, #13
   11f78:	e73d      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   11f7a:	2500      	movs	r5, #0
   11f7c:	e7f6      	b.n	11f6c <find_volume+0x1c4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   11f7e:	2601      	movs	r6, #1
   11f80:	e7a6      	b.n	11ed0 <find_volume+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   11f82:	f1be 0f00 	cmp.w	lr, #0
   11f86:	d0f6      	beq.n	11f76 <find_volume+0x1ce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f88:	2e02      	cmp	r6, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f8a:	4417      	add	r7, r2
   11f8c:	ea4f 0243 	mov.w	r2, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f90:	bf1c      	itt	ne
   11f92:	18d2      	addne	r2, r2, r3
   11f94:	f003 0301 	andne.w	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   11f98:	62e7      	str	r7, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   11f9a:	bf0c      	ite	eq
   11f9c:	4613      	moveq	r3, r2
   11f9e:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   11fa2:	e7a4      	b.n	11eee <find_volume+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   11fa4:	200b      	movs	r0, #11
   11fa6:	e726      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   11fa8:	200c      	movs	r0, #12
   11faa:	e724      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   11fac:	200f      	movs	r0, #15
   11fae:	e722      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2195
			return FR_OK;				/* The file system object is valid */
   11fb0:	4628      	mov	r0, r5
   11fb2:	e720      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   11fb4:	2003      	movs	r0, #3
   11fb6:	e71e      	b.n	11df6 <find_volume+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   11fb8:	2001      	movs	r0, #1
   11fba:	e71c      	b.n	11df6 <find_volume+0x4e>
   11fbc:	2007c460 	.word	0x2007c460
   11fc0:	41615252 	.word	0x41615252
   11fc4:	2007c468 	.word	0x2007c468

00011fc8 <validate>:
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   11fc8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   11fca:	4604      	mov	r4, r0
   11fcc:	b1a8      	cbz	r0, 11ffa <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   11fce:	6803      	ldr	r3, [r0, #0]
   11fd0:	b19b      	cbz	r3, 11ffa <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   11fd2:	781a      	ldrb	r2, [r3, #0]
   11fd4:	b18a      	cbz	r2, 11ffa <validate+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   11fd6:	88d9      	ldrh	r1, [r3, #6]
   11fd8:	8882      	ldrh	r2, [r0, #4]
   11fda:	4291      	cmp	r1, r2
   11fdc:	d10d      	bne.n	11ffa <validate+0x32>
lock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   11fde:	68d8      	ldr	r0, [r3, #12]
   11fe0:	f001 fe98 	bl	13d14 <ff_req_grant>
validate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   11fe4:	b158      	cbz	r0, 11ffe <validate+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   11fe6:	6823      	ldr	r3, [r4, #0]
   11fe8:	7858      	ldrb	r0, [r3, #1]
   11fea:	f002 fa84 	bl	144f6 <disk_status>
   11fee:	f010 0f01 	tst.w	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   11ff2:	bf14      	ite	ne
   11ff4:	2003      	movne	r0, #3
   11ff6:	2000      	moveq	r0, #0
   11ff8:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   11ffa:	2009      	movs	r0, #9
   11ffc:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   11ffe:	200f      	movs	r0, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2351
}
   12000:	bd10      	pop	{r4, pc}

00012002 <unlock_fs>:
unlock_fs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   12002:	b150      	cbz	r0, 1201a <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   12004:	290f      	cmp	r1, #15
   12006:	d805      	bhi.n	12014 <unlock_fs+0x12>
   12008:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   1200c:	fa23 f101 	lsr.w	r1, r3, r1
   12010:	07cb      	lsls	r3, r1, #31
   12012:	d402      	bmi.n	1201a <unlock_fs+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   12014:	68c0      	ldr	r0, [r0, #12]
   12016:	f001 be90 	b.w	13d3a <ff_rel_grant>
   1201a:	4770      	bx	lr

0001201c <clust2sect>:
clust2sect():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   1201c:	69c3      	ldr	r3, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   1201e:	3902      	subs	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   12020:	3b02      	subs	r3, #2
   12022:	4299      	cmp	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   12024:	bf3d      	ittte	cc
   12026:	7883      	ldrbcc	r3, [r0, #2]
   12028:	6b00      	ldrcc	r0, [r0, #48]	; 0x30
   1202a:	fb01 0003 	mlacc	r0, r1, r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   1202e:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:855
}
   12030:	4770      	bx	lr

00012032 <get_fat>:
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   12032:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:869
{
   12034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12036:	4607      	mov	r7, r0
   12038:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   1203a:	d94b      	bls.n	120d4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   1203c:	69c3      	ldr	r3, [r0, #28]
   1203e:	4299      	cmp	r1, r3
   12040:	d248      	bcs.n	120d4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   12042:	7803      	ldrb	r3, [r0, #0]
   12044:	2b02      	cmp	r3, #2
   12046:	d029      	beq.n	1209c <get_fat+0x6a>
   12048:	2b03      	cmp	r3, #3
   1204a:	d034      	beq.n	120b6 <get_fat+0x84>
   1204c:	2b01      	cmp	r3, #1
   1204e:	d141      	bne.n	120d4 <get_fat+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   12050:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12054:	6a81      	ldr	r1, [r0, #40]	; 0x28
   12056:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   1205a:	f7ff fe65 	bl	11d28 <move_window>
   1205e:	b110      	cbz	r0, 12066 <get_fat+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   12060:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   12064:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12066:	6ab9      	ldr	r1, [r7, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   12068:	f3c6 0308 	ubfx	r3, r6, #0, #9
   1206c:	3601      	adds	r6, #1
   1206e:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   12070:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   12074:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   12076:	f893 5038 	ldrb.w	r5, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1207a:	f7ff fe55 	bl	11d28 <move_window>
   1207e:	2800      	cmp	r0, #0
   12080:	d1ee      	bne.n	12060 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   12082:	f3c6 0608 	ubfx	r6, r6, #0, #9
   12086:	443e      	add	r6, r7
   12088:	f896 0038 	ldrb.w	r0, [r6, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   1208c:	07e3      	lsls	r3, r4, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   1208e:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   12092:	bf4c      	ite	mi
   12094:	0900      	lsrmi	r0, r0, #4
   12096:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   1209a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   1209c:	6a81      	ldr	r1, [r0, #40]	; 0x28
   1209e:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   120a2:	f7ff fe41 	bl	11d28 <move_window>
   120a6:	2800      	cmp	r0, #0
   120a8:	d1da      	bne.n	12060 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   120aa:	0066      	lsls	r6, r4, #1
   120ac:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   120b0:	443e      	add	r6, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   120b2:	8f30      	ldrh	r0, [r6, #56]	; 0x38
   120b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   120b6:	6a81      	ldr	r1, [r0, #40]	; 0x28
   120b8:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   120bc:	f7ff fe34 	bl	11d28 <move_window>
   120c0:	2800      	cmp	r0, #0
   120c2:	d1cd      	bne.n	12060 <get_fat+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   120c4:	00a4      	lsls	r4, r4, #2
   120c6:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   120ca:	443c      	add	r4, r7
get_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   120cc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
   120ce:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   120d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   120d4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:901
}
   120d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000120d8 <dir_sdi>:
dir_sdi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120d8:	b570      	push	{r4, r5, r6, lr}
   120da:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   120dc:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1121
{
   120de:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120e0:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   120e2:	80e1      	strh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120e4:	d101      	bne.n	120ea <dir_sdi+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   120e6:	2002      	movs	r0, #2
   120e8:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   120ea:	6803      	ldr	r3, [r0, #0]
   120ec:	69d9      	ldr	r1, [r3, #28]
   120ee:	428a      	cmp	r2, r1
   120f0:	d2f9      	bcs.n	120e6 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   120f2:	b9ba      	cbnz	r2, 12124 <dir_sdi+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   120f4:	7819      	ldrb	r1, [r3, #0]
   120f6:	2903      	cmp	r1, #3
   120f8:	d101      	bne.n	120fe <dir_sdi+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   120fa:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   120fc:	b999      	cbnz	r1, 12126 <dir_sdi+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   120fe:	8919      	ldrh	r1, [r3, #8]
   12100:	428d      	cmp	r5, r1
   12102:	d2f0      	bcs.n	120e6 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   12104:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   12106:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   12108:	2800      	cmp	r0, #0
   1210a:	d0ec      	beq.n	120e6 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   1210c:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   1210e:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   12112:	3338      	adds	r3, #56	; 0x38
   12114:	f005 050f 	and.w	r5, r5, #15
   12118:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   1211c:	6120      	str	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   1211e:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   12120:	2000      	movs	r0, #0
   12122:	bd70      	pop	{r4, r5, r6, pc}
   12124:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12126:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   12128:	789e      	ldrb	r6, [r3, #2]
   1212a:	0136      	lsls	r6, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   1212c:	42b5      	cmp	r5, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1212e:	4611      	mov	r1, r2
   12130:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   12132:	d202      	bcs.n	1213a <dir_sdi+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   12134:	f7ff ff72 	bl	1201c <clust2sect>
   12138:	e7e5      	b.n	12106 <dir_sdi+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1213a:	f7ff ff7a 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   1213e:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   12140:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12142:	d007      	beq.n	12154 <dir_sdi+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   12144:	2801      	cmp	r0, #1
   12146:	d9ce      	bls.n	120e6 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   12148:	6823      	ldr	r3, [r4, #0]
   1214a:	69db      	ldr	r3, [r3, #28]
   1214c:	4298      	cmp	r0, r3
   1214e:	d2ca      	bcs.n	120e6 <dir_sdi+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   12150:	1bad      	subs	r5, r5, r6
   12152:	e7eb      	b.n	1212c <dir_sdi+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   12154:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1155
}
   12156:	bd70      	pop	{r4, r5, r6, pc}

00012158 <put_fat>:
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12158:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:916
{
   1215a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1215c:	4605      	mov	r5, r0
   1215e:	460c      	mov	r4, r1
   12160:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12162:	d960      	bls.n	12226 <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   12164:	69c3      	ldr	r3, [r0, #28]
   12166:	4299      	cmp	r1, r3
   12168:	d25d      	bcs.n	12226 <put_fat+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   1216a:	7803      	ldrb	r3, [r0, #0]
   1216c:	2b02      	cmp	r3, #2
   1216e:	d03a      	beq.n	121e6 <put_fat+0x8e>
   12170:	2b03      	cmp	r3, #3
   12172:	d045      	beq.n	12200 <put_fat+0xa8>
   12174:	2b01      	cmp	r3, #1
   12176:	d154      	bne.n	12222 <put_fat+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   12178:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   1217c:	6a81      	ldr	r1, [r0, #40]	; 0x28
   1217e:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   12182:	f7ff fdd1 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   12186:	bb18      	cbnz	r0, 121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   12188:	f3c7 0308 	ubfx	r3, r7, #0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   1218c:	f014 0401 	ands.w	r4, r4, #1
   12190:	442b      	add	r3, r5
   12192:	bf17      	itett	ne
   12194:	f893 2038 	ldrbne.w	r2, [r3, #56]	; 0x38
   12198:	b2f2      	uxtbeq	r2, r6
   1219a:	f002 010f 	andne.w	r1, r2, #15
   1219e:	0132      	lslne	r2, r6, #4
   121a0:	bf1c      	itt	ne
   121a2:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   121a6:	430a      	orrne	r2, r1
   121a8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121ac:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121ae:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   121b0:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   121b2:	712b      	strb	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   121b4:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   121b8:	4628      	mov	r0, r5
   121ba:	f7ff fdb5 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   121be:	b938      	cbnz	r0, 121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   121c0:	f3c7 0708 	ubfx	r7, r7, #0, #9
   121c4:	442f      	add	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121c6:	b134      	cbz	r4, 121d6 <put_fat+0x7e>
   121c8:	f3c6 1607 	ubfx	r6, r6, #4, #8
   121cc:	f887 6038 	strb.w	r6, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   121d0:	2301      	movs	r3, #1
   121d2:	712b      	strb	r3, [r5, #4]
   121d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   121d6:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
   121da:	f3c6 2603 	ubfx	r6, r6, #8, #4
   121de:	f023 030f 	bic.w	r3, r3, #15
   121e2:	431e      	orrs	r6, r3
   121e4:	e7f2      	b.n	121cc <put_fat+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   121e6:	6a81      	ldr	r1, [r0, #40]	; 0x28
   121e8:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   121ec:	f7ff fd9c 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   121f0:	2800      	cmp	r0, #0
   121f2:	d1ed      	bne.n	121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   121f4:	0064      	lsls	r4, r4, #1
   121f6:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   121fa:	442c      	add	r4, r5
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   121fc:	8726      	strh	r6, [r4, #56]	; 0x38
   121fe:	e7e7      	b.n	121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   12200:	6a81      	ldr	r1, [r0, #40]	; 0x28
   12202:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   12206:	f7ff fd8f 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   1220a:	2800      	cmp	r0, #0
   1220c:	d1e0      	bne.n	121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   1220e:	00a4      	lsls	r4, r4, #2
   12210:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   12214:	3438      	adds	r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   12216:	592b      	ldr	r3, [r5, r4]
   12218:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   1221c:	431e      	orrs	r6, r3
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1221e:	512e      	str	r6, [r5, r4]
   12220:	e7d6      	b.n	121d0 <put_fat+0x78>
put_fat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   12222:	2002      	movs	r0, #2
   12224:	e7d4      	b.n	121d0 <put_fat+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   12226:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:963
}
   12228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001222a <create_chain>:
create_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1031
{
   1222a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1222c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   1222e:	460f      	mov	r7, r1
   12230:	b971      	cbnz	r1, 12250 <create_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   12232:	6906      	ldr	r6, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12234:	b1e6      	cbz	r6, 12270 <create_chain+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   12236:	69c3      	ldr	r3, [r0, #28]
   12238:	429e      	cmp	r6, r3
   1223a:	bf28      	it	cs
   1223c:	2601      	movcs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
   1223e:	4634      	mov	r4, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12240:	69eb      	ldr	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   12242:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   12244:	429c      	cmp	r4, r3
   12246:	d316      	bcc.n	12276 <create_chain+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   12248:	2e01      	cmp	r6, #1
   1224a:	d813      	bhi.n	12274 <create_chain+0x4a>
   1224c:	2400      	movs	r4, #0
   1224e:	e008      	b.n	12262 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12250:	f7ff feef 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12254:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   12256:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   12258:	d935      	bls.n	122c6 <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   1225a:	3001      	adds	r0, #1
   1225c:	d103      	bne.n	12266 <create_chain+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   1225e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1077
}
   12262:	4620      	mov	r0, r4
   12264:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   12266:	69eb      	ldr	r3, [r5, #28]
   12268:	429c      	cmp	r4, r3
   1226a:	d3fa      	bcc.n	12262 <create_chain+0x38>
   1226c:	463e      	mov	r6, r7
   1226e:	e7e6      	b.n	1223e <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   12270:	2601      	movs	r6, #1
   12272:	e7e4      	b.n	1223e <create_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   12274:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   12276:	4621      	mov	r1, r4
   12278:	4628      	mov	r0, r5
   1227a:	f7ff feda 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   1227e:	b130      	cbz	r0, 1228e <create_chain+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   12280:	1c41      	adds	r1, r0, #1
   12282:	d0ec      	beq.n	1225e <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   12284:	2801      	cmp	r0, #1
   12286:	d01e      	beq.n	122c6 <create_chain+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   12288:	42b4      	cmp	r4, r6
   1228a:	d1d9      	bne.n	12240 <create_chain+0x16>
   1228c:	e7de      	b.n	1224c <create_chain+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   1228e:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   12292:	4621      	mov	r1, r4
   12294:	4628      	mov	r0, r5
   12296:	f7ff ff5f 	bl	12158 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   1229a:	b990      	cbnz	r0, 122c2 <create_chain+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   1229c:	b957      	cbnz	r7, 122b4 <create_chain+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   1229e:	696b      	ldr	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   122a0:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   122a2:	1c5a      	adds	r2, r3, #1
   122a4:	d0dd      	beq.n	12262 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   122a6:	3b01      	subs	r3, #1
   122a8:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   122aa:	796b      	ldrb	r3, [r5, #5]
   122ac:	f043 0301 	orr.w	r3, r3, #1
   122b0:	716b      	strb	r3, [r5, #5]
   122b2:	e7d6      	b.n	12262 <create_chain+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   122b4:	4622      	mov	r2, r4
   122b6:	4639      	mov	r1, r7
   122b8:	4628      	mov	r0, r5
   122ba:	f7ff ff4d 	bl	12158 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   122be:	2800      	cmp	r0, #0
   122c0:	d0ed      	beq.n	1229e <create_chain+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   122c2:	2801      	cmp	r0, #1
   122c4:	d0cb      	beq.n	1225e <create_chain+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   122c6:	2401      	movs	r4, #1
   122c8:	e7cb      	b.n	12262 <create_chain+0x38>

000122ca <dir_next>:
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122ca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122ce:	88c6      	ldrh	r6, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122d0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   122d2:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122d4:	b2b3      	uxth	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1169
{
   122d6:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122d8:	b913      	cbnz	r3, 122e0 <dir_next+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   122da:	2004      	movs	r0, #4
   122dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   122e0:	6903      	ldr	r3, [r0, #16]
   122e2:	2b00      	cmp	r3, #0
   122e4:	d0f9      	beq.n	122da <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   122e6:	f016 080f 	ands.w	r8, r6, #15
   122ea:	d107      	bne.n	122fc <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122ec:	68c1      	ldr	r1, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   122ee:	3301      	adds	r3, #1
   122f0:	6103      	str	r3, [r0, #16]
   122f2:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   122f4:	b959      	cbnz	r1, 1230e <dir_next+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   122f6:	8903      	ldrh	r3, [r0, #8]
   122f8:	429e      	cmp	r6, r3
   122fa:	d2ee      	bcs.n	122da <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   122fc:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   122fe:	80e6      	strh	r6, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   12300:	3338      	adds	r3, #56	; 0x38
   12302:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   12306:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   12308:	2000      	movs	r0, #0
   1230a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   1230e:	7887      	ldrb	r7, [r0, #2]
   12310:	3f01      	subs	r7, #1
   12312:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   12316:	d1f1      	bne.n	122fc <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   12318:	f7ff fe8b 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   1231c:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1231e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   12320:	d802      	bhi.n	12328 <dir_next+0x5e>
   12322:	2002      	movs	r0, #2
   12324:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12328:	1c42      	adds	r2, r0, #1
   1232a:	d102      	bne.n	12332 <dir_next+0x68>
   1232c:	2001      	movs	r0, #1
   1232e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   12332:	6820      	ldr	r0, [r4, #0]
   12334:	69c3      	ldr	r3, [r0, #28]
   12336:	429d      	cmp	r5, r3
   12338:	d327      	bcc.n	1238a <dir_next+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   1233a:	f1b9 0f00 	cmp.w	r9, #0
   1233e:	d0cc      	beq.n	122da <dir_next+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   12340:	68e1      	ldr	r1, [r4, #12]
   12342:	f7ff ff72 	bl	1222a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   12346:	4605      	mov	r5, r0
   12348:	2800      	cmp	r0, #0
   1234a:	d031      	beq.n	123b0 <dir_next+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   1234c:	2801      	cmp	r0, #1
   1234e:	d0e8      	beq.n	12322 <dir_next+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   12350:	1c43      	adds	r3, r0, #1
   12352:	d0eb      	beq.n	1232c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   12354:	6820      	ldr	r0, [r4, #0]
   12356:	f7ff fca6 	bl	11ca6 <sync_window>
   1235a:	4601      	mov	r1, r0
   1235c:	2800      	cmp	r0, #0
   1235e:	d1e5      	bne.n	1232c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   12360:	6820      	ldr	r0, [r4, #0]
   12362:	f44f 7200 	mov.w	r2, #512	; 0x200
   12366:	3038      	adds	r0, #56	; 0x38
   12368:	f7ff fbe2 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1236c:	6822      	ldr	r2, [r4, #0]
   1236e:	4629      	mov	r1, r5
   12370:	4610      	mov	r0, r2
   12372:	f7ff fe53 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   12376:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   1237a:	6350      	str	r0, [r2, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   1237c:	6820      	ldr	r0, [r4, #0]
   1237e:	7883      	ldrb	r3, [r0, #2]
   12380:	429f      	cmp	r7, r3
   12382:	d309      	bcc.n	12398 <dir_next+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   12384:	6b43      	ldr	r3, [r0, #52]	; 0x34
   12386:	1bdf      	subs	r7, r3, r7
   12388:	6347      	str	r7, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   1238a:	60e5      	str	r5, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   1238c:	4629      	mov	r1, r5
   1238e:	6820      	ldr	r0, [r4, #0]
   12390:	f7ff fe44 	bl	1201c <clust2sect>
   12394:	6120      	str	r0, [r4, #16]
   12396:	e7b1      	b.n	122fc <dir_next+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   12398:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   1239c:	f7ff fc60 	bl	11c60 <sync_window.part.1>
dir_next():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   123a0:	2800      	cmp	r0, #0
   123a2:	d1c3      	bne.n	1232c <dir_next+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   123a4:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   123a6:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   123a8:	6b53      	ldr	r3, [r2, #52]	; 0x34
   123aa:	3301      	adds	r3, #1
   123ac:	6353      	str	r3, [r2, #52]	; 0x34
   123ae:	e7e5      	b.n	1237c <dir_next+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   123b0:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1223
}
   123b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   123b6:	Address 0x00000000000123b6 is out of bounds.


000123b8 <dir_find.part.9>:
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123bc:	f04f 08ff 	mov.w	r8, #255	; 0xff
   123c0:	f64f 77ff 	movw	r7, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   123c4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123c6:	4644      	mov	r4, r8
   123c8:	8407      	strh	r7, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   123ca:	6931      	ldr	r1, [r6, #16]
   123cc:	6830      	ldr	r0, [r6, #0]
   123ce:	f7ff fcab 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   123d2:	4682      	mov	sl, r0
   123d4:	2800      	cmp	r0, #0
   123d6:	d15e      	bne.n	12496 <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   123d8:	6975      	ldr	r5, [r6, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   123da:	782b      	ldrb	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   123dc:	2b00      	cmp	r3, #0
   123de:	d076      	beq.n	124ce <dir_find.part.9+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123e0:	2be5      	cmp	r3, #229	; 0xe5
   123e2:	d006      	beq.n	123f2 <dir_find.part.9+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   123e4:	7ae9      	ldrb	r1, [r5, #11]
   123e6:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   123ea:	0709      	lsls	r1, r1, #28
   123ec:	d503      	bpl.n	123f6 <dir_find.part.9+0x3e>
   123ee:	2a0f      	cmp	r2, #15
   123f0:	d003      	beq.n	123fa <dir_find.part.9+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   123f2:	8437      	strh	r7, [r6, #32]
   123f4:	e047      	b.n	12486 <dir_find.part.9+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   123f6:	2a0f      	cmp	r2, #15
   123f8:	d154      	bne.n	124a4 <dir_find.part.9+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   123fa:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   123fe:	f1bb 0f00 	cmp.w	fp, #0
   12402:	d041      	beq.n	12488 <dir_find.part.9+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   12404:	0658      	lsls	r0, r3, #25
   12406:	d53c      	bpl.n	12482 <dir_find.part.9+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   12408:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   1240c:	88f3      	ldrh	r3, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   1240e:	f895 800d 	ldrb.w	r8, [r5, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   12412:	8433      	strh	r3, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12414:	7b6b      	ldrb	r3, [r5, #13]
   12416:	4543      	cmp	r3, r8
   12418:	d135      	bne.n	12486 <dir_find.part.9+0xce>
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1241a:	f895 a000 	ldrb.w	sl, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   1241e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12420:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   12424:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   12428:	f04f 0a0d 	mov.w	sl, #13
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   1242c:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   12430:	fb0a fa03 	mul.w	sl, sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   12434:	4b27      	ldr	r3, [pc, #156]	; (124d4 <dir_find.part.9+0x11c>)
   12436:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   1243a:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   1243c:	b378      	cbz	r0, 1249e <dir_find.part.9+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1243e:	4610      	mov	r0, r2
   12440:	f001 fca8 	bl	13d94 <ff_wtoupper>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   12444:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   12448:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   1244a:	d81c      	bhi.n	12486 <dir_find.part.9+0xce>
   1244c:	f10a 0201 	add.w	r2, sl, #1
   12450:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   12454:	9200      	str	r2, [sp, #0]
   12456:	f001 fc9d 	bl	13d94 <ff_wtoupper>
   1245a:	9901      	ldr	r1, [sp, #4]
   1245c:	4281      	cmp	r1, r0
   1245e:	d112      	bne.n	12486 <dir_find.part.9+0xce>
   12460:	9a00      	ldr	r2, [sp, #0]
   12462:	4692      	mov	sl, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   12464:	f109 0901 	add.w	r9, r9, #1
   12468:	f1b9 0f0d 	cmp.w	r9, #13
   1246c:	d1e2      	bne.n	12434 <dir_find.part.9+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   1246e:	782b      	ldrb	r3, [r5, #0]
   12470:	0659      	lsls	r1, r3, #25
   12472:	d503      	bpl.n	1247c <dir_find.part.9+0xc4>
   12474:	b110      	cbz	r0, 1247c <dir_find.part.9+0xc4>
   12476:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   1247a:	b923      	cbnz	r3, 12486 <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   1247c:	3c01      	subs	r4, #1
   1247e:	b2e4      	uxtb	r4, r4
   12480:	e002      	b.n	12488 <dir_find.part.9+0xd0>
   12482:	42a3      	cmp	r3, r4
   12484:	d0c6      	beq.n	12414 <dir_find.part.9+0x5c>
   12486:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   12488:	2100      	movs	r1, #0
   1248a:	4630      	mov	r0, r6
   1248c:	f7ff ff1d 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   12490:	4682      	mov	sl, r0
   12492:	2800      	cmp	r0, #0
   12494:	d099      	beq.n	123ca <dir_find.part.9+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1541
}
   12496:	4650      	mov	r0, sl
   12498:	b003      	add	sp, #12
   1249a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   1249e:	42ba      	cmp	r2, r7
   124a0:	d0e0      	beq.n	12464 <dir_find.part.9+0xac>
   124a2:	e7f0      	b.n	12486 <dir_find.part.9+0xce>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   124a4:	b924      	cbnz	r4, 124b0 <dir_find.part.9+0xf8>
   124a6:	4628      	mov	r0, r5
   124a8:	f7ff fb49 	bl	11b3e <sum_sfn>
   124ac:	4540      	cmp	r0, r8
   124ae:	d0f2      	beq.n	12496 <dir_find.part.9+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   124b0:	69b3      	ldr	r3, [r6, #24]
   124b2:	7ada      	ldrb	r2, [r3, #11]
   124b4:	07d2      	lsls	r2, r2, #31
   124b6:	d49c      	bmi.n	123f2 <dir_find.part.9+0x3a>
   124b8:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   124bc:	4298      	cmp	r0, r3
   124be:	d0ea      	beq.n	12496 <dir_find.part.9+0xde>
   124c0:	f815 1b01 	ldrb.w	r1, [r5], #1
   124c4:	f813 2b01 	ldrb.w	r2, [r3], #1
   124c8:	4291      	cmp	r1, r2
   124ca:	d0f7      	beq.n	124bc <dir_find.part.9+0x104>
   124cc:	e791      	b.n	123f2 <dir_find.part.9+0x3a>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   124ce:	f04f 0a04 	mov.w	sl, #4
   124d2:	e7e0      	b.n	12496 <dir_find.part.9+0xde>
   124d4:	00025e84 	.word	0x00025e84

000124d8 <follow_path>:
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   124dc:	780b      	ldrb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124de:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   124e0:	2b2f      	cmp	r3, #47	; 0x2f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2019
{
   124e2:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025
	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
   124e4:	d001      	beq.n	124ea <follow_path+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2025 (discriminator 1)
   124e6:	2b5c      	cmp	r3, #92	; 0x5c
   124e8:	d111      	bne.n	1250e <follow_path+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2026
		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
   124ea:	2300      	movs	r3, #0
   124ec:	f108 0801 	add.w	r8, r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2028
		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
   124f0:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   124f2:	f898 3000 	ldrb.w	r3, [r8]
   124f6:	2b1f      	cmp	r3, #31
   124f8:	f200 80cf 	bhi.w	1269a <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   124fc:	2100      	movs	r1, #0
   124fe:	4628      	mov	r0, r5
   12500:	f7ff fdea 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   12504:	2300      	movs	r3, #0
   12506:	616b      	str	r3, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2067
}
   12508:	b003      	add	sp, #12
   1250a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2028
		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
   1250e:	6803      	ldr	r3, [r0, #0]
   12510:	699b      	ldr	r3, [r3, #24]
   12512:	e7ed      	b.n	124f0 <follow_path+0x18>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   12514:	f827 0f02 	strh.w	r0, [r7, #2]!
   12518:	4646      	mov	r6, r8
   1251a:	e0ce      	b.n	126ba <follow_path+0x1e2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   1251c:	2820      	cmp	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   1251e:	44a0      	add	r8, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   12520:	bf34      	ite	cc
   12522:	2404      	movcc	r4, #4
   12524:	2400      	movcs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1843
	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
   12526:	2e01      	cmp	r6, #1
   12528:	d111      	bne.n	1254e <follow_path+0x76>
   1252a:	f8b9 3000 	ldrh.w	r3, [r9]
   1252e:	2b2e      	cmp	r3, #46	; 0x2e
   12530:	d014      	beq.n	1255c <follow_path+0x84>
   12532:	eb09 0346 	add.w	r3, r9, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   12536:	2e00      	cmp	r6, #0
   12538:	f000 80de 	beq.w	126f8 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   1253c:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   12540:	2a20      	cmp	r2, #32
   12542:	d002      	beq.n	1254a <follow_path+0x72>
   12544:	2a2e      	cmp	r2, #46	; 0x2e
   12546:	f040 80db 	bne.w	12700 <follow_path+0x228>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   1254a:	3e01      	subs	r6, #1
   1254c:	e7f3      	b.n	12536 <follow_path+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1843
	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
   1254e:	2e02      	cmp	r6, #2
   12550:	d1ef      	bne.n	12532 <follow_path+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1844
		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
   12552:	f8b9 3002 	ldrh.w	r3, [r9, #2]
   12556:	2b2e      	cmp	r3, #46	; 0x2e
   12558:	d1eb      	bne.n	12532 <follow_path+0x5a>
   1255a:	e7e6      	b.n	1252a <follow_path+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1845
		lfn[di] = 0;
   1255c:	2300      	movs	r3, #0
   1255e:	f829 3016 	strh.w	r3, [r9, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1847
			dp->fn[i] = (i < di) ? '.' : ' ';
   12562:	429e      	cmp	r6, r3
   12564:	bf8c      	ite	hi
   12566:	212e      	movhi	r1, #46	; 0x2e
   12568:	2120      	movls	r1, #32
   1256a:	69aa      	ldr	r2, [r5, #24]
   1256c:	54d1      	strb	r1, [r2, r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1846
		for (i = 0; i < 11; i++)
   1256e:	3301      	adds	r3, #1
   12570:	2b0b      	cmp	r3, #11
   12572:	d1f6      	bne.n	12562 <follow_path+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1848
		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
   12574:	69ab      	ldr	r3, [r5, #24]
   12576:	f044 0420 	orr.w	r4, r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1257a:	72dc      	strb	r4, [r3, #11]
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   1257c:	2100      	movs	r1, #0
   1257e:	4628      	mov	r0, r5
   12580:	f7ff fdaa 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   12584:	2800      	cmp	r0, #0
   12586:	d071      	beq.n	1266c <follow_path+0x194>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   12588:	69ab      	ldr	r3, [r5, #24]
   1258a:	7adb      	ldrb	r3, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   1258c:	2800      	cmp	r0, #0
   1258e:	d075      	beq.n	1267c <follow_path+0x1a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   12590:	2804      	cmp	r0, #4
   12592:	d1b9      	bne.n	12508 <follow_path+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2047
					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
   12594:	f013 0f20 	tst.w	r3, #32
   12598:	f003 0304 	and.w	r3, r3, #4
   1259c:	d06a      	beq.n	12674 <follow_path+0x19c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2048
						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
   1259e:	2200      	movs	r2, #0
   125a0:	60aa      	str	r2, [r5, #8]
   125a2:	616a      	str	r2, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2049
						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
   125a4:	2b00      	cmp	r3, #0
   125a6:	d078      	beq.n	1269a <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2050
						res = FR_OK;					/* Ended at the root directroy. Function completed. */
   125a8:	2000      	movs	r0, #0
   125aa:	e7ad      	b.n	12508 <follow_path+0x30>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   125ac:	3101      	adds	r1, #1
   125ae:	f839 3011 	ldrh.w	r3, [r9, r1, lsl #1]
   125b2:	2b20      	cmp	r3, #32
   125b4:	d0fa      	beq.n	125ac <follow_path+0xd4>
   125b6:	2b2e      	cmp	r3, #46	; 0x2e
   125b8:	d0f8      	beq.n	125ac <follow_path+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   125ba:	b109      	cbz	r1, 125c0 <follow_path+0xe8>
   125bc:	f044 0403 	orr.w	r4, r4, #3
   125c0:	463b      	mov	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   125c2:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
   125c6:	2a2e      	cmp	r2, #46	; 0x2e
   125c8:	d001      	beq.n	125ce <follow_path+0xf6>
   125ca:	3e01      	subs	r6, #1
   125cc:	d1f9      	bne.n	125c2 <follow_path+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   125ce:	f04f 0a00 	mov.w	sl, #0
   125d2:	2308      	movs	r3, #8
   125d4:	4657      	mov	r7, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   125d6:	f839 0011 	ldrh.w	r0, [r9, r1, lsl #1]
   125da:	f101 0b01 	add.w	fp, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   125de:	2800      	cmp	r0, #0
   125e0:	f000 80a3 	beq.w	1272a <follow_path+0x252>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   125e4:	2820      	cmp	r0, #32
   125e6:	d004      	beq.n	125f2 <follow_path+0x11a>
   125e8:	282e      	cmp	r0, #46	; 0x2e
   125ea:	d106      	bne.n	125fa <follow_path+0x122>
   125ec:	45b3      	cmp	fp, r6
   125ee:	f000 8093 	beq.w	12718 <follow_path+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   125f2:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   125f6:	4659      	mov	r1, fp
   125f8:	e7ed      	b.n	125d6 <follow_path+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   125fa:	459a      	cmp	sl, r3
   125fc:	f080 808f 	bcs.w	1271e <follow_path+0x246>
   12600:	45b3      	cmp	fp, r6
   12602:	d10f      	bne.n	12624 <follow_path+0x14c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   12604:	2b0b      	cmp	r3, #11
   12606:	d106      	bne.n	12616 <follow_path+0x13e>
   12608:	e08c      	b.n	12724 <follow_path+0x24c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   1260a:	45b3      	cmp	fp, r6
   1260c:	d003      	beq.n	12616 <follow_path+0x13e>
   1260e:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   12612:	f200 808a 	bhi.w	1272a <follow_path+0x252>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   12616:	00bf      	lsls	r7, r7, #2
   12618:	b2ff      	uxtb	r7, r7
   1261a:	46b3      	mov	fp, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   1261c:	230b      	movs	r3, #11
   1261e:	f04f 0a08 	mov.w	sl, #8
   12622:	e7e8      	b.n	125f6 <follow_path+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   12624:	287f      	cmp	r0, #127	; 0x7f
   12626:	d90d      	bls.n	12644 <follow_path+0x16c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   12628:	2100      	movs	r1, #0
   1262a:	9301      	str	r3, [sp, #4]
   1262c:	f001 fb94 	bl	13d58 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   12630:	9b01      	ldr	r3, [sp, #4]
   12632:	b118      	cbz	r0, 1263c <follow_path+0x164>
   12634:	4a55      	ldr	r2, [pc, #340]	; (1278c <follow_path+0x2b4>)
   12636:	4410      	add	r0, r2
   12638:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   1263c:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   1263e:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   12642:	b138      	cbz	r0, 12654 <follow_path+0x17c>
   12644:	4a52      	ldr	r2, [pc, #328]	; (12790 <follow_path+0x2b8>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   12646:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   1264a:	2900      	cmp	r1, #0
   1264c:	f000 808f 	beq.w	1276e <follow_path+0x296>
   12650:	4281      	cmp	r1, r0
   12652:	d1f8      	bne.n	12646 <follow_path+0x16e>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   12654:	205f      	movs	r0, #95	; 0x5f
   12656:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   1265a:	69a9      	ldr	r1, [r5, #24]
   1265c:	f801 000a 	strb.w	r0, [r1, sl]
   12660:	f10a 0a01 	add.w	sl, sl, #1
   12664:	e7c7      	b.n	125f6 <follow_path+0x11e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   12666:	f047 0702 	orr.w	r7, r7, #2
   1266a:	e7f6      	b.n	1265a <follow_path+0x182>
dir_find():
   1266c:	4628      	mov	r0, r5
   1266e:	f7ff fea3 	bl	123b8 <dir_find.part.9>
   12672:	e789      	b.n	12588 <follow_path+0xb0>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   12674:	2b00      	cmp	r3, #0
   12676:	bf08      	it	eq
   12678:	2005      	moveq	r0, #5
   1267a:	e745      	b.n	12508 <follow_path+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   1267c:	075a      	lsls	r2, r3, #29
   1267e:	d493      	bmi.n	125a8 <follow_path+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   12680:	696a      	ldr	r2, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   12682:	7ad3      	ldrb	r3, [r2, #11]
   12684:	06db      	lsls	r3, r3, #27
   12686:	d539      	bpl.n	126fc <follow_path+0x224>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12688:	6829      	ldr	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   1268a:	8b53      	ldrh	r3, [r2, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1268c:	7809      	ldrb	r1, [r1, #0]
   1268e:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12690:	bf04      	itt	eq
   12692:	8a92      	ldrheq	r2, [r2, #20]
   12694:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   12698:	60ab      	str	r3, [r5, #8]
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   1269a:	f898 3000 	ldrb.w	r3, [r8]
   1269e:	4644      	mov	r4, r8
   126a0:	2b2f      	cmp	r3, #47	; 0x2f
   126a2:	f108 0801 	add.w	r8, r8, #1
   126a6:	d0f8      	beq.n	1269a <follow_path+0x1c2>
   126a8:	2b5c      	cmp	r3, #92	; 0x5c
   126aa:	d0f6      	beq.n	1269a <follow_path+0x1c2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   126ac:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   126ae:	f8d5 901c 	ldr.w	r9, [r5, #28]
   126b2:	f104 3aff 	add.w	sl, r4, #4294967295	; 0xffffffff
   126b6:	f1a9 0702 	sub.w	r7, r9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   126ba:	f81a 0f01 	ldrb.w	r0, [sl, #1]!
   126be:	f106 0801 	add.w	r8, r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   126c2:	281f      	cmp	r0, #31
   126c4:	f67f af2a 	bls.w	1251c <follow_path+0x44>
   126c8:	282f      	cmp	r0, #47	; 0x2f
   126ca:	f43f af27 	beq.w	1251c <follow_path+0x44>
   126ce:	285c      	cmp	r0, #92	; 0x5c
   126d0:	f43f af24 	beq.w	1251c <follow_path+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   126d4:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   126d8:	d00e      	beq.n	126f8 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   126da:	2101      	movs	r1, #1
   126dc:	f001 fb3c 	bl	13d58 <ff_convert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   126e0:	b150      	cbz	r0, 126f8 <follow_path+0x220>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   126e2:	287f      	cmp	r0, #127	; 0x7f
   126e4:	f63f af16 	bhi.w	12514 <follow_path+0x3c>
   126e8:	4a2a      	ldr	r2, [pc, #168]	; (12794 <follow_path+0x2bc>)
chk_chr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   126ea:	f812 3f01 	ldrb.w	r3, [r2, #1]!
   126ee:	2b00      	cmp	r3, #0
   126f0:	f43f af10 	beq.w	12514 <follow_path+0x3c>
   126f4:	4298      	cmp	r0, r3
   126f6:	d1f8      	bne.n	126ea <follow_path+0x212>
follow_path():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   126f8:	2006      	movs	r0, #6
   126fa:	e705      	b.n	12508 <follow_path+0x30>
   126fc:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   126fe:	e703      	b.n	12508 <follow_path+0x30>
create_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12700:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12702:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12704:	f829 3016 	strh.w	r3, [r9, r6, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   12708:	220b      	movs	r2, #11
   1270a:	69a8      	ldr	r0, [r5, #24]
   1270c:	f7ff fa10 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   12710:	eb09 0746 	add.w	r7, r9, r6, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   12714:	4619      	mov	r1, r3
   12716:	e74a      	b.n	125ae <follow_path+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   12718:	459a      	cmp	sl, r3
   1271a:	f4ff af73 	bcc.w	12604 <follow_path+0x12c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   1271e:	2b0b      	cmp	r3, #11
   12720:	f47f af73 	bne.w	1260a <follow_path+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   12724:	230b      	movs	r3, #11
   12726:	f044 0403 	orr.w	r4, r4, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   1272a:	69aa      	ldr	r2, [r5, #24]
   1272c:	7811      	ldrb	r1, [r2, #0]
   1272e:	29e5      	cmp	r1, #229	; 0xe5
   12730:	bf04      	itt	eq
   12732:	2105      	moveq	r1, #5
   12734:	7011      	strbeq	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   12736:	2b08      	cmp	r3, #8
   12738:	bf04      	itt	eq
   1273a:	00bf      	lsleq	r7, r7, #2
   1273c:	b2ff      	uxtbeq	r7, r7
   1273e:	f007 030c 	and.w	r3, r7, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   12742:	2b0c      	cmp	r3, #12
   12744:	d003      	beq.n	1274e <follow_path+0x276>
   12746:	f007 0203 	and.w	r2, r7, #3
   1274a:	2a03      	cmp	r2, #3
   1274c:	d101      	bne.n	12752 <follow_path+0x27a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   1274e:	f044 0402 	orr.w	r4, r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   12752:	07a1      	lsls	r1, r4, #30
   12754:	d409      	bmi.n	1276a <follow_path+0x292>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   12756:	f007 0703 	and.w	r7, r7, #3
   1275a:	2f01      	cmp	r7, #1
   1275c:	bf08      	it	eq
   1275e:	f044 0410 	orreq.w	r4, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   12762:	2b04      	cmp	r3, #4
   12764:	bf08      	it	eq
   12766:	f044 0408 	orreq.w	r4, r4, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   1276a:	69ab      	ldr	r3, [r5, #24]
   1276c:	e705      	b.n	1257a <follow_path+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   1276e:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   12772:	2919      	cmp	r1, #25
   12774:	f67f af77 	bls.w	12666 <follow_path+0x18e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   12778:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   1277c:	2919      	cmp	r1, #25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   1277e:	bf9e      	ittt	ls
   12780:	3820      	subls	r0, #32
   12782:	f047 0701 	orrls.w	r7, r7, #1
   12786:	b280      	uxthls	r0, r0
   12788:	e767      	b.n	1265a <follow_path+0x182>
   1278a:	bf00      	nop
   1278c:	00025e04 	.word	0x00025e04
   12790:	00025ee4 	.word	0x00025ee4
   12794:	00025edb 	.word	0x00025edb

00012798 <dir_alloc>:
dir_alloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1238
{
   12798:	b570      	push	{r4, r5, r6, lr}
   1279a:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   1279c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1238
{
   1279e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   127a0:	f7ff fc9a 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   127a4:	b9a8      	cbnz	r0, 127d2 <dir_alloc+0x3a>
   127a6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   127a8:	6921      	ldr	r1, [r4, #16]
   127aa:	6820      	ldr	r0, [r4, #0]
   127ac:	f7ff fabc 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   127b0:	b978      	cbnz	r0, 127d2 <dir_alloc+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   127b2:	6963      	ldr	r3, [r4, #20]
   127b4:	781b      	ldrb	r3, [r3, #0]
   127b6:	2be5      	cmp	r3, #229	; 0xe5
   127b8:	d000      	beq.n	127bc <dir_alloc+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1249 (discriminator 1)
   127ba:	b91b      	cbnz	r3, 127c4 <dir_alloc+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   127bc:	3501      	adds	r5, #1
   127be:	42b5      	cmp	r5, r6
   127c0:	d101      	bne.n	127c6 <dir_alloc+0x2e>
   127c2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   127c4:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   127c6:	2101      	movs	r1, #1
   127c8:	4620      	mov	r0, r4
   127ca:	f7ff fd7e 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   127ce:	2800      	cmp	r0, #0
   127d0:	d0ea      	beq.n	127a8 <dir_alloc+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   127d2:	2804      	cmp	r0, #4
   127d4:	bf08      	it	eq
   127d6:	2007      	moveq	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1259
}
   127d8:	bd70      	pop	{r4, r5, r6, pc}
   127da:	Address 0x00000000000127da is out of bounds.


000127dc <dir_register>:
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   127dc:	220c      	movs	r2, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   127de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   127e2:	6986      	ldr	r6, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   127e4:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   127e6:	69c7      	ldr	r7, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1613
{
   127e8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   127ea:	4631      	mov	r1, r6
   127ec:	eb0d 0002 	add.w	r0, sp, r2
   127f0:	f7ff f982 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1624
	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
   127f4:	f89d 3017 	ldrb.w	r3, [sp, #23]
   127f8:	f013 0220 	ands.w	r2, r3, #32
   127fc:	d16a      	bne.n	128d4 <dir_register+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   127fe:	07db      	lsls	r3, r3, #31
   12800:	d570      	bpl.n	128e4 <dir_register+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   12802:	f04f 0901 	mov.w	r9, #1
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   12806:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 129dc <dir_register+0x200>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1280a:	72f2      	strb	r2, [r6, #11]
   1280c:	61e2      	str	r2, [r4, #28]
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   1280e:	220b      	movs	r2, #11
   12810:	a903      	add	r1, sp, #12
   12812:	4630      	mov	r0, r6
   12814:	f7ff f970 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   12818:	f1b9 0f05 	cmp.w	r9, #5
   1281c:	d84f      	bhi.n	128be <dir_register+0xe2>
   1281e:	464b      	mov	r3, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   12820:	2207      	movs	r2, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   12822:	f003 000f 	and.w	r0, r3, #15
   12826:	f100 0130 	add.w	r1, r0, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   1282a:	2939      	cmp	r1, #57	; 0x39
   1282c:	bf88      	it	hi
   1282e:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   12832:	3a01      	subs	r2, #1
   12834:	a801      	add	r0, sp, #4
   12836:	4410      	add	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   12838:	091b      	lsrs	r3, r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   1283a:	7041      	strb	r1, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   1283c:	d1f1      	bne.n	12822 <dir_register+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   1283e:	207e      	movs	r0, #126	; 0x7e
   12840:	a906      	add	r1, sp, #24
   12842:	4411      	add	r1, r2
   12844:	f801 0c14 	strb.w	r0, [r1, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   12848:	429a      	cmp	r2, r3
   1284a:	d03d      	beq.n	128c8 <dir_register+0xec>
   1284c:	5cf1      	ldrb	r1, [r6, r3]
   1284e:	2920      	cmp	r1, #32
   12850:	d138      	bne.n	128c4 <dir_register+0xe8>
   12852:	4433      	add	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   12854:	2a07      	cmp	r2, #7
   12856:	bf8f      	iteee	hi
   12858:	2120      	movhi	r1, #32
   1285a:	a906      	addls	r1, sp, #24
   1285c:	1889      	addls	r1, r1, r2
   1285e:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   12862:	bf98      	it	ls
   12864:	3201      	addls	r2, #1
   12866:	f803 1b01 	strb.w	r1, [r3], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   1286a:	1b99      	subs	r1, r3, r6
   1286c:	2907      	cmp	r1, #7
   1286e:	d9f1      	bls.n	12854 <dir_register+0x78>
dir_find():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   12870:	2100      	movs	r1, #0
   12872:	4620      	mov	r0, r4
   12874:	f7ff fc30 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   12878:	4605      	mov	r5, r0
   1287a:	bb68      	cbnz	r0, 128d8 <dir_register+0xfc>
   1287c:	4620      	mov	r0, r4
   1287e:	f7ff fd9b 	bl	123b8 <dir_find.part.9>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   12882:	4605      	mov	r5, r0
   12884:	bb40      	cbnz	r0, 128d8 <dir_register+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   12886:	f109 0901 	add.w	r9, r9, #1
   1288a:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   1288e:	d1be      	bne.n	1280e <dir_register+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   12890:	2507      	movs	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1677
}
   12892:	4628      	mov	r0, r5
   12894:	b007      	add	sp, #28
   12896:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1289a:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   1289c:	f002 0501 	and.w	r5, r2, #1
   128a0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   128a4:	03dd      	lsls	r5, r3, #15
   128a6:	bf48      	it	mi
   128a8:	ea83 0308 	eormi.w	r3, r3, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   128ac:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   128ae:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   128b2:	d1f3      	bne.n	1289c <dir_register+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   128b4:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   128b8:	2a00      	cmp	r2, #0
   128ba:	d1ee      	bne.n	1289a <dir_register+0xbe>
   128bc:	e7b0      	b.n	12820 <dir_register+0x44>
   128be:	1eb8      	subs	r0, r7, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   128c0:	464b      	mov	r3, r9
   128c2:	e7f7      	b.n	128b4 <dir_register+0xd8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   128c4:	3301      	adds	r3, #1
   128c6:	e7bf      	b.n	12848 <dir_register+0x6c>
   128c8:	4613      	mov	r3, r2
   128ca:	e7c2      	b.n	12852 <dir_register+0x76>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   128cc:	3601      	adds	r6, #1
   128ce:	e00e      	b.n	128ee <dir_register+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   128d0:	2601      	movs	r6, #1
   128d2:	e014      	b.n	128fe <dir_register+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1625
		return FR_INVALID_NAME;
   128d4:	2506      	movs	r5, #6
   128d6:	e7dc      	b.n	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   128d8:	2d04      	cmp	r5, #4
   128da:	d1da      	bne.n	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   128dc:	f89d 3017 	ldrb.w	r3, [sp, #23]
   128e0:	72f3      	strb	r3, [r6, #11]
   128e2:	61e7      	str	r7, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   128e4:	f89d 3017 	ldrb.w	r3, [sp, #23]
   128e8:	079b      	lsls	r3, r3, #30
   128ea:	d5f1      	bpl.n	128d0 <dir_register+0xf4>
   128ec:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   128ee:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   128f2:	2b00      	cmp	r3, #0
   128f4:	d1ea      	bne.n	128cc <dir_register+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   128f6:	230d      	movs	r3, #13
   128f8:	3619      	adds	r6, #25
   128fa:	fbb6 f6f3 	udiv	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1645
	res = dir_alloc(dp, nent);		/* Allocate entries */
   128fe:	4631      	mov	r1, r6
   12900:	4620      	mov	r0, r4
   12902:	f7ff ff49 	bl	12798 <dir_alloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   12906:	4605      	mov	r5, r0
   12908:	2800      	cmp	r0, #0
   1290a:	d1c2      	bne.n	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1647 (discriminator 1)
   1290c:	3e01      	subs	r6, #1
   1290e:	d049      	beq.n	129a4 <dir_register+0x1c8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   12910:	88e1      	ldrh	r1, [r4, #6]
   12912:	4620      	mov	r0, r4
   12914:	1b89      	subs	r1, r1, r6
   12916:	f7ff fbdf 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   1291a:	4605      	mov	r5, r0
   1291c:	2800      	cmp	r0, #0
   1291e:	d1b8      	bne.n	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   12920:	69a0      	ldr	r0, [r4, #24]
   12922:	f7ff f90c 	bl	11b3e <sum_sfn>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12926:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   1292a:	4607      	mov	r7, r0
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   1292c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 129e0 <dir_register+0x204>
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   12930:	6921      	ldr	r1, [r4, #16]
   12932:	6820      	ldr	r0, [r4, #0]
   12934:	f7ff f9f8 	bl	11d28 <move_window>
   12938:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   1293a:	2800      	cmp	r0, #0
   1293c:	d1a9      	bne.n	12892 <dir_register+0xb6>
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   1293e:	220f      	movs	r2, #15
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   12940:	6963      	ldr	r3, [r4, #20]
   12942:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   12946:	72da      	strb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   12948:	220d      	movs	r2, #13
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   1294a:	b2f1      	uxtb	r1, r6
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   1294c:	1e4d      	subs	r5, r1, #1
   1294e:	436a      	muls	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   12950:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   12952:	735f      	strb	r7, [r3, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   12954:	7318      	strb	r0, [r3, #12]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12956:	8358      	strh	r0, [r3, #26]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12958:	4548      	cmp	r0, r9
   1295a:	bf18      	it	ne
   1295c:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   12960:	f815 c008 	ldrb.w	ip, [r5, r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12964:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   12968:	bf18      	it	ne
   1296a:	3201      	addne	r2, #1
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   1296c:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   12970:	2800      	cmp	r0, #0
   12972:	bf08      	it	eq
   12974:	4648      	moveq	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   12976:	2d0d      	cmp	r5, #13
   12978:	d1ee      	bne.n	12958 <dir_register+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   1297a:	4548      	cmp	r0, r9
   1297c:	d002      	beq.n	12984 <dir_register+0x1a8>
   1297e:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   12982:	b90a      	cbnz	r2, 12988 <dir_register+0x1ac>
   12984:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   12988:	2201      	movs	r2, #1
fit_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   1298a:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1298c:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   1298e:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   12990:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   12992:	4620      	mov	r0, r4
   12994:	f7ff fc99 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   12998:	4605      	mov	r5, r0
   1299a:	2800      	cmp	r0, #0
   1299c:	f47f af79 	bne.w	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   129a0:	3e01      	subs	r6, #1
   129a2:	d1c5      	bne.n	12930 <dir_register+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   129a4:	6921      	ldr	r1, [r4, #16]
   129a6:	6820      	ldr	r0, [r4, #0]
   129a8:	f7ff f9be 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   129ac:	4605      	mov	r5, r0
   129ae:	2800      	cmp	r0, #0
   129b0:	f47f af6f 	bne.w	12892 <dir_register+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   129b4:	2220      	movs	r2, #32
   129b6:	4629      	mov	r1, r5
   129b8:	6960      	ldr	r0, [r4, #20]
   129ba:	f7ff f8b9 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   129be:	220b      	movs	r2, #11
   129c0:	69a1      	ldr	r1, [r4, #24]
   129c2:	6960      	ldr	r0, [r4, #20]
   129c4:	f7ff f898 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   129c8:	69a3      	ldr	r3, [r4, #24]
   129ca:	6962      	ldr	r2, [r4, #20]
   129cc:	7adb      	ldrb	r3, [r3, #11]
   129ce:	f003 0318 	and.w	r3, r3, #24
   129d2:	7313      	strb	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   129d4:	2201      	movs	r2, #1
   129d6:	6823      	ldr	r3, [r4, #0]
   129d8:	711a      	strb	r2, [r3, #4]
   129da:	e75a      	b.n	12892 <dir_register+0xb6>
   129dc:	00011021 	.word	0x00011021
   129e0:	00025e84 	.word	0x00025e84

000129e4 <dir_read>:
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1555
{
   129e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129e8:	f04f 0aff 	mov.w	sl, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1555
{
   129ec:	4605      	mov	r5, r0
   129ee:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1559
	BYTE ord = 0xFF, sum = 0xFF;
   129f0:	4654      	mov	r4, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1562
	res = FR_NO_FILE;
   129f2:	2604      	movs	r6, #4
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   129f4:	f64f 79ff 	movw	r9, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   129f8:	f8df 80e0 	ldr.w	r8, [pc, #224]	; 12adc <dir_read+0xf8>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1563
	while (dp->sect) {
   129fc:	6929      	ldr	r1, [r5, #16]
   129fe:	b911      	cbnz	r1, 12a06 <dir_read+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596
	if (res != FR_OK) dp->sect = 0;
   12a00:	2e00      	cmp	r6, #0
   12a02:	d05e      	beq.n	12ac2 <dir_read+0xde>
   12a04:	e055      	b.n	12ab2 <dir_read+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1564
		res = move_window(dp->fs, dp->sect);
   12a06:	6828      	ldr	r0, [r5, #0]
   12a08:	f7ff f98e 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1565
		if (res != FR_OK) break;
   12a0c:	4606      	mov	r6, r0
   12a0e:	2800      	cmp	r0, #0
   12a10:	d14f      	bne.n	12ab2 <dir_read+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1566
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   12a12:	6968      	ldr	r0, [r5, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1567
		c = dir[DIR_Name];
   12a14:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12a16:	2b00      	cmp	r3, #0
   12a18:	d05d      	beq.n	12ad6 <dir_read+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1569
		a = dir[DIR_Attr] & AM_MASK;
   12a1a:	7ac2      	ldrb	r2, [r0, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a1c:	2be5      	cmp	r3, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1569
		a = dir[DIR_Attr] & AM_MASK;
   12a1e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571
		if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
   12a22:	d03e      	beq.n	12aa2 <dir_read+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1571 (discriminator 1)
   12a24:	f1a2 0c08 	sub.w	ip, r2, #8
   12a28:	f1dc 0100 	rsbs	r1, ip, #0
   12a2c:	eb41 010c 	adc.w	r1, r1, ip
   12a30:	42b9      	cmp	r1, r7
   12a32:	d136      	bne.n	12aa2 <dir_read+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1574
			if (a == AM_LFN) {			/* An LFN entry is found */
   12a34:	2a0f      	cmp	r2, #15
   12a36:	d13f      	bne.n	12ab8 <dir_read+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1575
				if (c & LLE) {			/* Is it start of LFN sequence? */
   12a38:	065e      	lsls	r6, r3, #25
   12a3a:	d52c      	bpl.n	12a96 <dir_read+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a3c:	88e9      	ldrh	r1, [r5, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1576
					sum = dir[LDIR_Chksum];
   12a3e:	7b42      	ldrb	r2, [r0, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1577
					c &= ~LLE; ord = c;
   12a40:	f003 03bf 	and.w	r3, r3, #191	; 0xbf
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1578
					dp->lfn_idx = dp->index;
   12a44:	8429      	strh	r1, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581 (discriminator 1)
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a46:	f890 a00d 	ldrb.w	sl, [r0, #13]
   12a4a:	4592      	cmp	sl, r2
   12a4c:	d141      	bne.n	12ad2 <dir_read+0xee>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349 (discriminator 3)
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a4e:	210d      	movs	r1, #13
   12a50:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351 (discriminator 3)
	s = 0; wc = 1;
   12a52:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1349 (discriminator 3)
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
   12a56:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   12a5a:	3a01      	subs	r2, #1
   12a5c:	434a      	muls	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1351 (discriminator 3)
	s = 0; wc = 1;
   12a5e:	2100      	movs	r1, #0
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581 (discriminator 3)
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a60:	69ee      	ldr	r6, [r5, #28]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1353
		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
   12a62:	f811 4008 	ldrb.w	r4, [r1, r8]
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   12a66:	5b04      	ldrh	r4, [r0, r4]
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1354
		if (wc) {	/* Last character has not been processed */
   12a68:	f1be 0f00 	cmp.w	lr, #0
   12a6c:	d017      	beq.n	12a9e <dir_read+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1355
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
   12a6e:	2a7f      	cmp	r2, #127	; 0x7f
   12a70:	d817      	bhi.n	12aa2 <dir_read+0xbe>
LD_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:335
   12a72:	46a6      	mov	lr, r4
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1356
			lfnbuf[i++] = wc = uc;			/* Store it */
   12a74:	f826 4012 	strh.w	r4, [r6, r2, lsl #1]
   12a78:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1360
	} while (++s < 13);						/* Read all character in the entry */
   12a7a:	3101      	adds	r1, #1
   12a7c:	290d      	cmp	r1, #13
   12a7e:	d1f0      	bne.n	12a62 <dir_read+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1362
	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
   12a80:	7801      	ldrb	r1, [r0, #0]
   12a82:	0649      	lsls	r1, r1, #25
   12a84:	d504      	bpl.n	12a90 <dir_read+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1363
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
   12a86:	2a7f      	cmp	r2, #127	; 0x7f
   12a88:	d80b      	bhi.n	12aa2 <dir_read+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1364
		lfnbuf[i] = 0;
   12a8a:	2100      	movs	r1, #0
   12a8c:	f826 1012 	strh.w	r1, [r6, r2, lsl #1]
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12a90:	1e5c      	subs	r4, r3, #1
   12a92:	b2e4      	uxtb	r4, r4
   12a94:	e006      	b.n	12aa4 <dir_read+0xc0>
   12a96:	429c      	cmp	r4, r3
   12a98:	d103      	bne.n	12aa2 <dir_read+0xbe>
   12a9a:	4652      	mov	r2, sl
   12a9c:	e7d3      	b.n	12a46 <dir_read+0x62>
pick_lfn():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1358
			if (uc != 0xFFFF) return 0;		/* Check filler */
   12a9e:	454c      	cmp	r4, r9
   12aa0:	d0eb      	beq.n	12a7a <dir_read+0x96>
dir_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1581
				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   12aa2:	24ff      	movs	r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1592
		res = dir_next(dp, 0);				/* Next entry */
   12aa4:	2100      	movs	r1, #0
   12aa6:	4628      	mov	r0, r5
   12aa8:	f7ff fc0f 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1593
		if (res != FR_OK) break;
   12aac:	4606      	mov	r6, r0
   12aae:	2800      	cmp	r0, #0
   12ab0:	d0a4      	beq.n	129fc <dir_read+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1596 (discriminator 1)
	if (res != FR_OK) dp->sect = 0;
   12ab2:	2300      	movs	r3, #0
   12ab4:	612b      	str	r3, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1598 (discriminator 1)
	return res;
   12ab6:	e005      	b.n	12ac4 <dir_read+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1583
				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
   12ab8:	b93c      	cbnz	r4, 12aca <dir_read+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1583 (discriminator 1)
   12aba:	f7ff f840 	bl	11b3e <sum_sfn>
   12abe:	4582      	cmp	sl, r0
   12ac0:	d103      	bne.n	12aca <dir_read+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12ac2:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1599
}
   12ac4:	4630      	mov	r0, r6
   12ac6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1584
					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
   12aca:	f64f 73ff 	movw	r3, #65535	; 0xffff
   12ace:	842b      	strh	r3, [r5, #32]
   12ad0:	e7f8      	b.n	12ac4 <dir_read+0xe0>
   12ad2:	4692      	mov	sl, r2
   12ad4:	e7e5      	b.n	12aa2 <dir_read+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1568
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   12ad6:	2604      	movs	r6, #4
   12ad8:	e7eb      	b.n	12ab2 <dir_read+0xce>
   12ada:	bf00      	nop
   12adc:	00025e84 	.word	0x00025e84

00012ae0 <dir_remove>:
dir_remove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12ae0:	f64f 73ff 	movw	r3, #65535	; 0xffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   12ae4:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12ae6:	8c01      	ldrh	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1696
	i = dp->index;	/* SFN index */
   12ae8:	88c5      	ldrh	r5, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1691
{
   12aea:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1697
	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN entries */
   12aec:	4299      	cmp	r1, r3
   12aee:	bf08      	it	eq
   12af0:	4629      	moveq	r1, r5
   12af2:	f7ff faf1 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1698
	if (res == FR_OK) {
   12af6:	4603      	mov	r3, r0
   12af8:	b9e8      	cbnz	r0, 12b36 <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   12afa:	26e5      	movs	r6, #229	; 0xe5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1700
			res = move_window(dp->fs, dp->sect);
   12afc:	6921      	ldr	r1, [r4, #16]
   12afe:	6820      	ldr	r0, [r4, #0]
   12b00:	f7ff f912 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1701
			if (res != FR_OK) break;
   12b04:	4603      	mov	r3, r0
   12b06:	b998      	cbnz	r0, 12b30 <dir_remove+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1702
			mem_set(dp->dir, 0, SZ_DIR);	/* Clear and mark the entry "deleted" */
   12b08:	4601      	mov	r1, r0
   12b0a:	2220      	movs	r2, #32
   12b0c:	6960      	ldr	r0, [r4, #20]
   12b0e:	f7ff f80f 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   12b12:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1703
			*dp->dir = DDE;
   12b14:	6962      	ldr	r2, [r4, #20]
   12b16:	7016      	strb	r6, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1704
			dp->fs->wflag = 1;
   12b18:	6822      	ldr	r2, [r4, #0]
   12b1a:	7111      	strb	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1705
			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
   12b1c:	88e2      	ldrh	r2, [r4, #6]
   12b1e:	4295      	cmp	r5, r2
   12b20:	d909      	bls.n	12b36 <dir_remove+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1706
			res = dir_next(dp, 0);		/* Next entry */
   12b22:	4619      	mov	r1, r3
   12b24:	4620      	mov	r0, r4
   12b26:	f7ff fbd0 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1707
		} while (res == FR_OK);
   12b2a:	4603      	mov	r3, r0
   12b2c:	2800      	cmp	r0, #0
   12b2e:	d0e5      	beq.n	12afc <dir_remove+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1708
		if (res == FR_NO_FILE) res = FR_INT_ERR;
   12b30:	2b04      	cmp	r3, #4
   12b32:	bf08      	it	eq
   12b34:	2302      	moveq	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1724
}
   12b36:	4618      	mov	r0, r3
   12b38:	bd70      	pop	{r4, r5, r6, pc}

00012b3a <remove_chain>:
remove_chain():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12b3a:	2901      	cmp	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12b3c:	b570      	push	{r4, r5, r6, lr}
   12b3e:	4604      	mov	r4, r0
   12b40:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12b42:	d801      	bhi.n	12b48 <remove_chain+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12b44:	2002      	movs	r0, #2
   12b46:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   12b48:	69c3      	ldr	r3, [r0, #28]
   12b4a:	4299      	cmp	r1, r3
   12b4c:	d2fa      	bcs.n	12b44 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   12b4e:	69e3      	ldr	r3, [r4, #28]
   12b50:	429d      	cmp	r5, r3
   12b52:	d205      	bcs.n	12b60 <remove_chain+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   12b54:	4629      	mov	r1, r5
   12b56:	4620      	mov	r0, r4
   12b58:	f7ff fa6b 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   12b5c:	4606      	mov	r6, r0
   12b5e:	b908      	cbnz	r0, 12b64 <remove_chain+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   12b60:	2000      	movs	r0, #0
   12b62:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   12b64:	2801      	cmp	r0, #1
   12b66:	d0ed      	beq.n	12b44 <remove_chain+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12b68:	1c41      	adds	r1, r0, #1
   12b6a:	d010      	beq.n	12b8e <remove_chain+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   12b6c:	2200      	movs	r2, #0
   12b6e:	4629      	mov	r1, r5
   12b70:	4620      	mov	r0, r4
   12b72:	f7ff faf1 	bl	12158 <put_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   12b76:	b958      	cbnz	r0, 12b90 <remove_chain+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   12b78:	6963      	ldr	r3, [r4, #20]
   12b7a:	1c5a      	adds	r2, r3, #1
   12b7c:	d005      	beq.n	12b8a <remove_chain+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   12b7e:	3301      	adds	r3, #1
   12b80:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   12b82:	7963      	ldrb	r3, [r4, #5]
   12b84:	f043 0301 	orr.w	r3, r3, #1
   12b88:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:978
{
   12b8a:	4635      	mov	r5, r6
   12b8c:	e7df      	b.n	12b4e <remove_chain+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   12b8e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1016
}
   12b90:	bd70      	pop	{r4, r5, r6, pc}
   12b92:	Address 0x0000000000012b92 is out of bounds.


00012b94 <f_mount>:
f_mount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   12b94:	b5f0      	push	{r4, r5, r6, r7, lr}
   12b96:	b085      	sub	sp, #20
   12b98:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   12b9a:	a804      	add	r0, sp, #16
   12b9c:	f840 1d04 	str.w	r1, [r0, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2373
{
   12ba0:	9100      	str	r1, [sp, #0]
   12ba2:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   12ba4:	f7fe ffda 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12ba8:	1e05      	subs	r5, r0, #0
   12baa:	db2a      	blt.n	12c02 <f_mount+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   12bac:	4f17      	ldr	r7, [pc, #92]	; (12c0c <f_mount+0x78>)
   12bae:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   12bb2:	b14c      	cbz	r4, 12bc8 <f_mount+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   12bb4:	68e0      	ldr	r0, [r4, #12]
   12bb6:	f001 f8ab 	bl	13d10 <ff_del_syncobj>
   12bba:	b918      	cbnz	r0, 12bc4 <f_mount+0x30>
   12bbc:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   12bbe:	4620      	mov	r0, r4
   12bc0:	b005      	add	sp, #20
   12bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   12bc4:	2300      	movs	r3, #0
   12bc6:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   12bc8:	9901      	ldr	r1, [sp, #4]
   12bca:	b989      	cbnz	r1, 12bf0 <f_mount+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   12bcc:	9c01      	ldr	r4, [sp, #4]
   12bce:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12bd2:	2c00      	cmp	r4, #0
   12bd4:	d0f3      	beq.n	12bbe <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   12bd6:	2e01      	cmp	r6, #1
   12bd8:	d115      	bne.n	12c06 <f_mount+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   12bda:	4669      	mov	r1, sp
   12bdc:	2200      	movs	r2, #0
   12bde:	a801      	add	r0, sp, #4
   12be0:	f7ff f8e2 	bl	11da8 <find_volume>
   12be4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   12be6:	4601      	mov	r1, r0
   12be8:	9801      	ldr	r0, [sp, #4]
   12bea:	f7ff fa0a 	bl	12002 <unlock_fs>
   12bee:	e7e6      	b.n	12bbe <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12bf0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12bf2:	b2e8      	uxtb	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   12bf4:	f801 3b0c 	strb.w	r3, [r1], #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   12bf8:	f001 f880 	bl	13cfc <ff_cre_syncobj>
   12bfc:	2800      	cmp	r0, #0
   12bfe:	d0dd      	beq.n	12bbc <f_mount+0x28>
   12c00:	e7e4      	b.n	12bcc <f_mount+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   12c02:	240b      	movs	r4, #11
   12c04:	e7db      	b.n	12bbe <f_mount+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   12c06:	2400      	movs	r4, #0
   12c08:	e7d9      	b.n	12bbe <f_mount+0x2a>
   12c0a:	bf00      	nop
   12c0c:	2007c460 	.word	0x2007c460

00012c10 <f_open>:
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   12c10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12c14:	b0d1      	sub	sp, #324	; 0x144
   12c16:	9101      	str	r1, [sp, #4]
   12c18:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   12c1a:	4606      	mov	r6, r0
   12c1c:	2800      	cmp	r0, #0
   12c1e:	f000 808c 	beq.w	12d3a <f_open+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12c22:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12c24:	f002 021e 	and.w	r2, r2, #30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   12c28:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   12c2a:	a901      	add	r1, sp, #4
   12c2c:	a806      	add	r0, sp, #24
   12c2e:	f7ff f8bb 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   12c32:	4605      	mov	r5, r0
   12c34:	2800      	cmp	r0, #0
   12c36:	d174      	bne.n	12d22 <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12c38:	ab03      	add	r3, sp, #12
   12c3a:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12c3c:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12c3e:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12c40:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   12c42:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   12c44:	f7ff fc48 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   12c48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   12c4a:	b910      	cbnz	r0, 12c52 <f_open+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   12c4c:	2c00      	cmp	r4, #0
   12c4e:	bf08      	it	eq
   12c50:	2006      	moveq	r0, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12c52:	f018 0f1c 	tst.w	r8, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   12c56:	f008 071f 	and.w	r7, r8, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   12c5a:	d03d      	beq.n	12cd8 <f_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   12c5c:	b398      	cbz	r0, 12cc6 <f_open+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   12c5e:	2804      	cmp	r0, #4
   12c60:	d102      	bne.n	12c68 <f_open+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   12c62:	a806      	add	r0, sp, #24
   12c64:	f7ff fdba 	bl	127dc <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   12c68:	f047 0708 	orr.w	r7, r7, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12c6c:	bb48      	cbnz	r0, 12cc2 <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   12c6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   12c70:	0738      	lsls	r0, r7, #28
   12c72:	d53b      	bpl.n	12cec <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   12c74:	f001 ff1e 	bl	14ab4 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12c78:	2300      	movs	r3, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   12c7a:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   12c7e:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   12c80:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   12c82:	61e3      	str	r3, [r4, #28]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c84:	7802      	ldrb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12c86:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12c8a:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c8c:	bf08      	it	eq
   12c8e:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   12c90:	8363      	strh	r3, [r4, #26]
   12c92:	82a3      	strh	r3, [r4, #20]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   12c94:	f04f 0301 	mov.w	r3, #1
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12c98:	bf08      	it	eq
   12c9a:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   12c9e:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   12ca0:	f1b8 0f00 	cmp.w	r8, #0
   12ca4:	d022      	beq.n	12cec <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   12ca6:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   12ca8:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   12cac:	f7ff ff45 	bl	12b3a <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   12cb0:	b938      	cbnz	r0, 12cc2 <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   12cb2:	9806      	ldr	r0, [sp, #24]
   12cb4:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   12cb8:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   12cba:	4649      	mov	r1, r9
   12cbc:	f7ff f834 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   12cc0:	b1a0      	cbz	r0, 12cec <f_open+0xdc>
   12cc2:	4605      	mov	r5, r0
   12cc4:	e02d      	b.n	12d22 <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   12cc6:	7ae3      	ldrb	r3, [r4, #11]
   12cc8:	f013 0f11 	tst.w	r3, #17
   12ccc:	d133      	bne.n	12d36 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   12cce:	f018 0f04 	tst.w	r8, #4
   12cd2:	d0cd      	beq.n	12c70 <f_open+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   12cd4:	2508      	movs	r5, #8
   12cd6:	e024      	b.n	12d22 <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   12cd8:	2800      	cmp	r0, #0
   12cda:	d1f2      	bne.n	12cc2 <f_open+0xb2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   12cdc:	7ae3      	ldrb	r3, [r4, #11]
   12cde:	06d9      	lsls	r1, r3, #27
   12ce0:	d427      	bmi.n	12d32 <f_open+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   12ce2:	f018 0f02 	tst.w	r8, #2
   12ce6:	d001      	beq.n	12cec <f_open+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   12ce8:	07da      	lsls	r2, r3, #31
   12cea:	d424      	bmi.n	12d36 <f_open+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   12cec:	073b      	lsls	r3, r7, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12cee:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   12cf0:	bf48      	it	mi
   12cf2:	f047 0720 	orrmi.w	r7, r7, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12cf6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   12cf8:	71b7      	strb	r7, [r6, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   12cfa:	61f2      	str	r2, [r6, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12cfc:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   12cfe:	6234      	str	r4, [r6, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   12d00:	71f2      	strb	r2, [r6, #7]
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12d02:	7819      	ldrb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   12d04:	8b62      	ldrh	r2, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   12d06:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   12d08:	bf04      	itt	eq
   12d0a:	8aa1      	ldrheq	r1, [r4, #20]
   12d0c:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   12d10:	6132      	str	r2, [r6, #16]
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   12d12:	69e2      	ldr	r2, [r4, #28]
f_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   12d14:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   12d16:	60f2      	str	r2, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12d18:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12d1a:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   12d1c:	60b2      	str	r2, [r6, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   12d1e:	61b2      	str	r2, [r6, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   12d20:	80b3      	strh	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   12d22:	4629      	mov	r1, r5
   12d24:	9806      	ldr	r0, [sp, #24]
   12d26:	f7ff f96c 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2541
}
   12d2a:	4628      	mov	r0, r5
   12d2c:	b051      	add	sp, #324	; 0x144
   12d2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   12d32:	2504      	movs	r5, #4
   12d34:	e7f5      	b.n	12d22 <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   12d36:	2507      	movs	r5, #7
   12d38:	e7f3      	b.n	12d22 <f_open+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   12d3a:	2509      	movs	r5, #9
   12d3c:	e7f5      	b.n	12d2a <f_open+0x11a>

00012d3e <f_read>:
f_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   12d3e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d42:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   12d44:	2300      	movs	r3, #0
   12d46:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2556
{
   12d4a:	4604      	mov	r4, r0
   12d4c:	4689      	mov	r9, r1
   12d4e:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   12d50:	f7ff f93a 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12d54:	4605      	mov	r5, r0
   12d56:	b110      	cbz	r0, 12d5e <f_read+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   12d58:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   12d5a:	6820      	ldr	r0, [r4, #0]
   12d5c:	e04a      	b.n	12df4 <f_read+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   12d5e:	79e1      	ldrb	r1, [r4, #7]
   12d60:	b139      	cbz	r1, 12d72 <f_read+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12d62:	6820      	ldr	r0, [r4, #0]
   12d64:	f7ff f94d 	bl	12002 <unlock_fs>
   12d68:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2641
}
   12d6a:	4628      	mov	r0, r5
   12d6c:	b003      	add	sp, #12
   12d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   12d72:	79a3      	ldrb	r3, [r4, #6]
   12d74:	07d8      	lsls	r0, r3, #31
   12d76:	d405      	bmi.n	12d84 <f_read+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   12d78:	2107      	movs	r1, #7
   12d7a:	6820      	ldr	r0, [r4, #0]
   12d7c:	f7ff f941 	bl	12002 <unlock_fs>
   12d80:	2507      	movs	r5, #7
   12d82:	e7f2      	b.n	12d6a <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   12d84:	68e3      	ldr	r3, [r4, #12]
   12d86:	68a7      	ldr	r7, [r4, #8]
   12d88:	1bdf      	subs	r7, r3, r7
   12d8a:	42b7      	cmp	r7, r6
   12d8c:	bf28      	it	cs
   12d8e:	4637      	movcs	r7, r6
   12d90:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12d94:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   12d96:	b90f      	cbnz	r7, 12d9c <f_read+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12d98:	4639      	mov	r1, r7
   12d9a:	e7de      	b.n	12d5a <f_read+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   12d9c:	68a2      	ldr	r2, [r4, #8]
   12d9e:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12da2:	2b00      	cmp	r3, #0
   12da4:	d174      	bne.n	12e90 <f_read+0x152>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12da6:	6820      	ldr	r0, [r4, #0]
   12da8:	7883      	ldrb	r3, [r0, #2]
   12daa:	3b01      	subs	r3, #1
   12dac:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   12db0:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12db4:	d111      	bne.n	12dda <f_read+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   12db6:	b92a      	cbnz	r2, 12dc4 <f_read+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   12db8:	6920      	ldr	r0, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   12dba:	2801      	cmp	r0, #1
   12dbc:	d808      	bhi.n	12dd0 <f_read+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   12dbe:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12dc0:	71e5      	strb	r5, [r4, #7]
   12dc2:	e7c9      	b.n	12d58 <f_read+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   12dc4:	6961      	ldr	r1, [r4, #20]
   12dc6:	9301      	str	r3, [sp, #4]
   12dc8:	f7ff f933 	bl	12032 <get_fat>
   12dcc:	9b01      	ldr	r3, [sp, #4]
   12dce:	e7f4      	b.n	12dba <f_read+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12dd0:	1c41      	adds	r1, r0, #1
   12dd2:	d101      	bne.n	12dd8 <f_read+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   12dd4:	2501      	movs	r5, #1
   12dd6:	e7f3      	b.n	12dc0 <f_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   12dd8:	6160      	str	r0, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12dda:	f8d4 a000 	ldr.w	sl, [r4]
   12dde:	6961      	ldr	r1, [r4, #20]
   12de0:	4650      	mov	r0, sl
   12de2:	9301      	str	r3, [sp, #4]
   12de4:	f7ff f91a 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12de8:	9b01      	ldr	r3, [sp, #4]
   12dea:	b930      	cbnz	r0, 12dfa <f_read+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   12dec:	2502      	movs	r5, #2
   12dee:	4650      	mov	r0, sl
   12df0:	4629      	mov	r1, r5
   12df2:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   12df4:	f7ff f905 	bl	12002 <unlock_fs>
   12df8:	e7b7      	b.n	12d6a <f_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12dfa:	0a7e      	lsrs	r6, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   12dfc:	eb00 0803 	add.w	r8, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   12e00:	d029      	beq.n	12e56 <f_read+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12e02:	f89a 2002 	ldrb.w	r2, [sl, #2]
   12e06:	1999      	adds	r1, r3, r6
   12e08:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   12e0a:	bf88      	it	hi
   12e0c:	1ad6      	subhi	r6, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   12e0e:	b2f3      	uxtb	r3, r6
   12e10:	4642      	mov	r2, r8
   12e12:	4649      	mov	r1, r9
   12e14:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12e18:	f001 fb75 	bl	14506 <disk_read>
   12e1c:	2800      	cmp	r0, #0
   12e1e:	d1d9      	bne.n	12dd4 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   12e20:	79a3      	ldrb	r3, [r4, #6]
   12e22:	065a      	lsls	r2, r3, #25
   12e24:	d50b      	bpl.n	12e3e <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   12e26:	69a0      	ldr	r0, [r4, #24]
   12e28:	eba0 0008 	sub.w	r0, r0, r8
   12e2c:	4286      	cmp	r6, r0
   12e2e:	d906      	bls.n	12e3e <f_read+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   12e30:	f44f 7200 	mov.w	r2, #512	; 0x200
   12e34:	9900      	ldr	r1, [sp, #0]
   12e36:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   12e3a:	f7fe fe5d 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   12e3e:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   12e40:	68a3      	ldr	r3, [r4, #8]
   12e42:	44b1      	add	r9, r6
   12e44:	4433      	add	r3, r6
   12e46:	60a3      	str	r3, [r4, #8]
   12e48:	f8db 3000 	ldr.w	r3, [fp]
   12e4c:	1bbf      	subs	r7, r7, r6
   12e4e:	4433      	add	r3, r6
   12e50:	f8cb 3000 	str.w	r3, [fp]
   12e54:	e79f      	b.n	12d96 <f_read+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   12e56:	69a2      	ldr	r2, [r4, #24]
   12e58:	4590      	cmp	r8, r2
   12e5a:	d017      	beq.n	12e8c <f_read+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   12e5c:	79a3      	ldrb	r3, [r4, #6]
   12e5e:	065b      	lsls	r3, r3, #25
   12e60:	d50b      	bpl.n	12e7a <f_read+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12e62:	2301      	movs	r3, #1
   12e64:	9900      	ldr	r1, [sp, #0]
   12e66:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12e6a:	f001 fb68 	bl	1453e <disk_write>
   12e6e:	2800      	cmp	r0, #0
   12e70:	d1b0      	bne.n	12dd4 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   12e72:	79a3      	ldrb	r3, [r4, #6]
   12e74:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12e78:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   12e7a:	6820      	ldr	r0, [r4, #0]
   12e7c:	2301      	movs	r3, #1
   12e7e:	4642      	mov	r2, r8
   12e80:	9900      	ldr	r1, [sp, #0]
   12e82:	7840      	ldrb	r0, [r0, #1]
   12e84:	f001 fb3f 	bl	14506 <disk_read>
   12e88:	2800      	cmp	r0, #0
   12e8a:	d1a3      	bne.n	12dd4 <f_read+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   12e8c:	f8c4 8018 	str.w	r8, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e90:	68a1      	ldr	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12e92:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   12e94:	f3c1 0108 	ubfx	r1, r1, #0, #9
   12e98:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   12e9c:	42be      	cmp	r6, r7
   12e9e:	bf28      	it	cs
   12ea0:	463e      	movcs	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   12ea2:	3124      	adds	r1, #36	; 0x24
   12ea4:	4632      	mov	r2, r6
   12ea6:	4421      	add	r1, r4
   12ea8:	f7fe fe26 	bl	11af8 <mem_cpy>
   12eac:	e7c8      	b.n	12e40 <f_read+0x102>

00012eae <f_write>:
f_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   12eae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eb2:	469b      	mov	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   12eb4:	2300      	movs	r3, #0
   12eb6:	f8cb 3000 	str.w	r3, [fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2657
{
   12eba:	4604      	mov	r4, r0
   12ebc:	4689      	mov	r9, r1
   12ebe:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   12ec0:	f7ff f882 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   12ec4:	4605      	mov	r5, r0
   12ec6:	b110      	cbz	r0, 12ece <f_write+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   12ec8:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   12eca:	6820      	ldr	r0, [r4, #0]
   12ecc:	e068      	b.n	12fa0 <f_write+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   12ece:	79e1      	ldrb	r1, [r4, #7]
   12ed0:	b139      	cbz	r1, 12ee2 <f_write+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   12ed2:	6820      	ldr	r0, [r4, #0]
   12ed4:	f7ff f895 	bl	12002 <unlock_fs>
   12ed8:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2764
}
   12eda:	4628      	mov	r0, r5
   12edc:	b003      	add	sp, #12
   12ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   12ee2:	79a3      	ldrb	r3, [r4, #6]
   12ee4:	0799      	lsls	r1, r3, #30
   12ee6:	d405      	bmi.n	12ef4 <f_write+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   12ee8:	2107      	movs	r1, #7
   12eea:	6820      	ldr	r0, [r4, #0]
   12eec:	f7ff f889 	bl	12002 <unlock_fs>
   12ef0:	2507      	movs	r5, #7
   12ef2:	e7f2      	b.n	12eda <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   12ef4:	68a3      	ldr	r3, [r4, #8]
   12ef6:	eb13 0f08 	cmn.w	r3, r8
   12efa:	d205      	bcs.n	12f08 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   12efc:	f104 0324 	add.w	r3, r4, #36	; 0x24
   12f00:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   12f02:	f1b8 0f00 	cmp.w	r8, #0
   12f06:	d10a      	bne.n	12f1e <f_write+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   12f08:	68a3      	ldr	r3, [r4, #8]
   12f0a:	68e2      	ldr	r2, [r4, #12]
   12f0c:	4293      	cmp	r3, r2
   12f0e:	f200 80a2 	bhi.w	13056 <f_write+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12f12:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12f14:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   12f16:	f043 0320 	orr.w	r3, r3, #32
   12f1a:	71a3      	strb	r3, [r4, #6]
   12f1c:	e7d5      	b.n	12eca <f_write+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   12f1e:	68a2      	ldr	r2, [r4, #8]
   12f20:	f3c2 0308 	ubfx	r3, r2, #0, #9
   12f24:	2b00      	cmp	r3, #0
   12f26:	f040 8083 	bne.w	13030 <f_write+0x182>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   12f2a:	6820      	ldr	r0, [r4, #0]
   12f2c:	7883      	ldrb	r3, [r0, #2]
   12f2e:	3b01      	subs	r3, #1
   12f30:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   12f34:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   12f38:	9300      	str	r3, [sp, #0]
   12f3a:	d116      	bne.n	12f6a <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   12f3c:	b95a      	cbnz	r2, 12f56 <f_write+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   12f3e:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   12f40:	b921      	cbnz	r1, 12f4c <f_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12f42:	f7ff f972 	bl	1222a <create_chain>
   12f46:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   12f48:	2800      	cmp	r0, #0
   12f4a:	d0dd      	beq.n	12f08 <f_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   12f4c:	2901      	cmp	r1, #1
   12f4e:	d104      	bne.n	12f5a <f_write+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   12f50:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12f52:	71e5      	strb	r5, [r4, #7]
   12f54:	e7b8      	b.n	12ec8 <f_write+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   12f56:	6961      	ldr	r1, [r4, #20]
   12f58:	e7f3      	b.n	12f42 <f_write+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   12f5a:	1c4a      	adds	r2, r1, #1
   12f5c:	d101      	bne.n	12f62 <f_write+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   12f5e:	2501      	movs	r5, #1
   12f60:	e7f7      	b.n	12f52 <f_write+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12f62:	6923      	ldr	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   12f64:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   12f66:	b903      	cbnz	r3, 12f6a <f_write+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   12f68:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   12f6a:	79a3      	ldrb	r3, [r4, #6]
   12f6c:	065b      	lsls	r3, r3, #25
   12f6e:	d50c      	bpl.n	12f8a <f_write+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   12f70:	6820      	ldr	r0, [r4, #0]
   12f72:	2301      	movs	r3, #1
   12f74:	69a2      	ldr	r2, [r4, #24]
   12f76:	9901      	ldr	r1, [sp, #4]
   12f78:	7840      	ldrb	r0, [r0, #1]
   12f7a:	f001 fae0 	bl	1453e <disk_write>
   12f7e:	2800      	cmp	r0, #0
   12f80:	d1ed      	bne.n	12f5e <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   12f82:	79a3      	ldrb	r3, [r4, #6]
   12f84:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12f88:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   12f8a:	f8d4 a000 	ldr.w	sl, [r4]
   12f8e:	6961      	ldr	r1, [r4, #20]
   12f90:	4650      	mov	r0, sl
   12f92:	f7ff f843 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   12f96:	b930      	cbnz	r0, 12fa6 <f_write+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   12f98:	2502      	movs	r5, #2
   12f9a:	4650      	mov	r0, sl
   12f9c:	4629      	mov	r1, r5
   12f9e:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   12fa0:	f7ff f82f 	bl	12002 <unlock_fs>
   12fa4:	e799      	b.n	12eda <f_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12fa6:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12fa8:	ea5f 2658 	movs.w	r6, r8, lsr #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   12fac:	eb00 0703 	add.w	r7, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   12fb0:	d02d      	beq.n	1300e <f_write+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   12fb2:	9a00      	ldr	r2, [sp, #0]
   12fb4:	f89a 3002 	ldrb.w	r3, [sl, #2]
   12fb8:	4432      	add	r2, r6
   12fba:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12fbc:	bf88      	it	hi
   12fbe:	9a00      	ldrhi	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12fc0:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   12fc2:	bf88      	it	hi
   12fc4:	1a9e      	subhi	r6, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   12fc6:	b2f3      	uxtb	r3, r6
   12fc8:	463a      	mov	r2, r7
   12fca:	f89a 0001 	ldrb.w	r0, [sl, #1]
   12fce:	f001 fab6 	bl	1453e <disk_write>
   12fd2:	2800      	cmp	r0, #0
   12fd4:	d1c3      	bne.n	12f5e <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   12fd6:	69a1      	ldr	r1, [r4, #24]
   12fd8:	1bc9      	subs	r1, r1, r7
   12fda:	428e      	cmp	r6, r1
   12fdc:	d90a      	bls.n	12ff4 <f_write+0x146>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   12fde:	f44f 7200 	mov.w	r2, #512	; 0x200
   12fe2:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   12fe6:	9801      	ldr	r0, [sp, #4]
   12fe8:	f7fe fd86 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   12fec:	79a3      	ldrb	r3, [r4, #6]
   12fee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   12ff2:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   12ff4:	0276      	lsls	r6, r6, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   12ff6:	68a3      	ldr	r3, [r4, #8]
   12ff8:	44b1      	add	r9, r6
   12ffa:	4433      	add	r3, r6
   12ffc:	60a3      	str	r3, [r4, #8]
   12ffe:	f8db 3000 	ldr.w	r3, [fp]
   13002:	eba8 0806 	sub.w	r8, r8, r6
   13006:	4433      	add	r3, r6
   13008:	f8cb 3000 	str.w	r3, [fp]
   1300c:	e779      	b.n	12f02 <f_write+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   1300e:	69a3      	ldr	r3, [r4, #24]
   13010:	429f      	cmp	r7, r3
   13012:	d00c      	beq.n	1302e <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   13014:	68a2      	ldr	r2, [r4, #8]
   13016:	68e3      	ldr	r3, [r4, #12]
   13018:	429a      	cmp	r2, r3
   1301a:	d208      	bcs.n	1302e <f_write+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   1301c:	2301      	movs	r3, #1
   1301e:	463a      	mov	r2, r7
   13020:	9901      	ldr	r1, [sp, #4]
   13022:	f89a 0001 	ldrb.w	r0, [sl, #1]
   13026:	f001 fa6e 	bl	14506 <disk_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   1302a:	2800      	cmp	r0, #0
   1302c:	d197      	bne.n	12f5e <f_write+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   1302e:	61a7      	str	r7, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   13030:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   13032:	4649      	mov	r1, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   13034:	f3c0 0008 	ubfx	r0, r0, #0, #9
   13038:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   1303c:	4546      	cmp	r6, r8
   1303e:	bf28      	it	cs
   13040:	4646      	movcs	r6, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   13042:	3024      	adds	r0, #36	; 0x24
   13044:	4632      	mov	r2, r6
   13046:	4420      	add	r0, r4
   13048:	f7fe fd56 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   1304c:	79a3      	ldrb	r3, [r4, #6]
   1304e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   13052:	71a3      	strb	r3, [r4, #6]
   13054:	e7cf      	b.n	12ff6 <f_write+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   13056:	60e3      	str	r3, [r4, #12]
   13058:	e75b      	b.n	12f12 <f_write+0x64>

0001305a <f_sync>:
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   1305a:	b570      	push	{r4, r5, r6, lr}
   1305c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   1305e:	f7fe ffb3 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   13062:	4605      	mov	r5, r0
   13064:	2800      	cmp	r0, #0
   13066:	d138      	bne.n	130da <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   13068:	79a3      	ldrb	r3, [r4, #6]
   1306a:	069a      	lsls	r2, r3, #26
   1306c:	d535      	bpl.n	130da <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   1306e:	065b      	lsls	r3, r3, #25
   13070:	d513      	bpl.n	1309a <f_sync+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   13072:	6820      	ldr	r0, [r4, #0]
   13074:	2301      	movs	r3, #1
   13076:	69a2      	ldr	r2, [r4, #24]
   13078:	f104 0124 	add.w	r1, r4, #36	; 0x24
   1307c:	7840      	ldrb	r0, [r0, #1]
   1307e:	f001 fa5e 	bl	1453e <disk_write>
   13082:	b130      	cbz	r0, 13092 <f_sync+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   13084:	2101      	movs	r1, #1
   13086:	6820      	ldr	r0, [r4, #0]
   13088:	f7fe ffbb 	bl	12002 <unlock_fs>
   1308c:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   1308e:	4628      	mov	r0, r5
   13090:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   13092:	79a3      	ldrb	r3, [r4, #6]
   13094:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13098:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   1309a:	69e1      	ldr	r1, [r4, #28]
   1309c:	6820      	ldr	r0, [r4, #0]
   1309e:	f7fe fe43 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   130a2:	4605      	mov	r5, r0
   130a4:	b9c8      	cbnz	r0, 130da <f_sync+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   130a6:	6a26      	ldr	r6, [r4, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   130a8:	7af3      	ldrb	r3, [r6, #11]
   130aa:	f043 0320 	orr.w	r3, r3, #32
   130ae:	72f3      	strb	r3, [r6, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   130b0:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   130b2:	61f3      	str	r3, [r6, #28]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   130b4:	6923      	ldr	r3, [r4, #16]
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   130b6:	8373      	strh	r3, [r6, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   130b8:	0c1b      	lsrs	r3, r3, #16
   130ba:	82b3      	strh	r3, [r6, #20]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   130bc:	f001 fcfa 	bl	14ab4 <get_fattime>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   130c0:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   130c2:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   130c6:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   130c8:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   130ca:	f023 0320 	bic.w	r3, r3, #32
   130ce:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   130d0:	2301      	movs	r3, #1
   130d2:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   130d4:	f7fe fdee 	bl	11cb4 <sync_fs>
   130d8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   130da:	4629      	mov	r1, r5
   130dc:	6820      	ldr	r0, [r4, #0]
   130de:	f7fe ff90 	bl	12002 <unlock_fs>
   130e2:	e7d4      	b.n	1308e <f_sync+0x34>

000130e4 <f_close>:
f_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   130e4:	b538      	push	{r3, r4, r5, lr}
   130e6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   130e8:	f7ff ffb7 	bl	1305a <f_sync>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   130ec:	4604      	mov	r4, r0
   130ee:	b948      	cbnz	r0, 13104 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   130f0:	4628      	mov	r0, r5
   130f2:	f7fe ff69 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   130f6:	4604      	mov	r4, r0
   130f8:	b920      	cbnz	r0, 13104 <f_close+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   130fa:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   130fc:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   130fe:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   13100:	f7fe ff7f 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   13104:	4620      	mov	r0, r4
   13106:	bd38      	pop	{r3, r4, r5, pc}

00013108 <f_lseek>:
f_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   13108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1310a:	4604      	mov	r4, r0
   1310c:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   1310e:	f7fe ff5b 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   13112:	4605      	mov	r5, r0
   13114:	b110      	cbz	r0, 1311c <f_lseek+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   13116:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   13118:	6820      	ldr	r0, [r4, #0]
   1311a:	e06a      	b.n	131f2 <f_lseek+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   1311c:	79e1      	ldrb	r1, [r4, #7]
   1311e:	b129      	cbz	r1, 1312c <f_lseek+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   13120:	6820      	ldr	r0, [r4, #0]
   13122:	f7fe ff6e 	bl	12002 <unlock_fs>
   13126:	79e5      	ldrb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3143
}
   13128:	4628      	mov	r0, r5
   1312a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   1312c:	68e3      	ldr	r3, [r4, #12]
   1312e:	42b3      	cmp	r3, r6
   13130:	d204      	bcs.n	1313c <f_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   13132:	79a2      	ldrb	r2, [r4, #6]
   13134:	f012 0f02 	tst.w	r2, #2
   13138:	bf08      	it	eq
   1313a:	461e      	moveq	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   1313c:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   1313e:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   13140:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   13142:	2e00      	cmp	r6, #0
   13144:	d130      	bne.n	131a8 <f_lseek+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   13146:	68a3      	ldr	r3, [r4, #8]
   13148:	68e2      	ldr	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   1314a:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   1314c:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   1314e:	bf81      	itttt	hi
   13150:	60e3      	strhi	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   13152:	79a3      	ldrbhi	r3, [r4, #6]
   13154:	f043 0320 	orrhi.w	r3, r3, #32
   13158:	71a3      	strbhi	r3, [r4, #6]
   1315a:	e7dd      	b.n	13118 <f_lseek+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   1315c:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   1315e:	68a3      	ldr	r3, [r4, #8]
   13160:	f3c3 0308 	ubfx	r3, r3, #0, #9
   13164:	2b00      	cmp	r3, #0
   13166:	d0ee      	beq.n	13146 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   13168:	69a2      	ldr	r2, [r4, #24]
   1316a:	4296      	cmp	r6, r2
   1316c:	d0eb      	beq.n	13146 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   1316e:	79a3      	ldrb	r3, [r4, #6]
   13170:	f104 0724 	add.w	r7, r4, #36	; 0x24
   13174:	f013 0f40 	tst.w	r3, #64	; 0x40
   13178:	d00b      	beq.n	13192 <f_lseek+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   1317a:	6820      	ldr	r0, [r4, #0]
   1317c:	2301      	movs	r3, #1
   1317e:	4639      	mov	r1, r7
   13180:	7840      	ldrb	r0, [r0, #1]
   13182:	f001 f9dc 	bl	1453e <disk_write>
   13186:	2800      	cmp	r0, #0
   13188:	d142      	bne.n	13210 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   1318a:	79a3      	ldrb	r3, [r4, #6]
   1318c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   13190:	71a3      	strb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   13192:	6820      	ldr	r0, [r4, #0]
   13194:	2301      	movs	r3, #1
   13196:	4632      	mov	r2, r6
   13198:	4639      	mov	r1, r7
   1319a:	7840      	ldrb	r0, [r0, #1]
   1319c:	f001 f9b3 	bl	14506 <disk_read>
   131a0:	2800      	cmp	r0, #0
   131a2:	d135      	bne.n	13210 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   131a4:	61a6      	str	r6, [r4, #24]
   131a6:	e7ce      	b.n	13146 <f_lseek+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   131a8:	6820      	ldr	r0, [r4, #0]
   131aa:	7887      	ldrb	r7, [r0, #2]
   131ac:	027f      	lsls	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   131ae:	b31b      	cbz	r3, 131f8 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   131b0:	3b01      	subs	r3, #1
   131b2:	1e72      	subs	r2, r6, #1
   131b4:	fbb2 f2f7 	udiv	r2, r2, r7
   131b8:	fbb3 f1f7 	udiv	r1, r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   131bc:	428a      	cmp	r2, r1
   131be:	d31b      	bcc.n	131f8 <f_lseek+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   131c0:	427a      	negs	r2, r7
   131c2:	4013      	ands	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   131c4:	6961      	ldr	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   131c6:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   131c8:	1af6      	subs	r6, r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   131ca:	2900      	cmp	r1, #0
   131cc:	d0c6      	beq.n	1315c <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   131ce:	42be      	cmp	r6, r7
   131d0:	d823      	bhi.n	1321a <f_lseek+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   131d2:	68a3      	ldr	r3, [r4, #8]
   131d4:	4433      	add	r3, r6
   131d6:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   131d8:	f3c6 0308 	ubfx	r3, r6, #0, #9
   131dc:	2b00      	cmp	r3, #0
   131de:	d0bd      	beq.n	1315c <f_lseek+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   131e0:	6822      	ldr	r2, [r4, #0]
   131e2:	4610      	mov	r0, r2
   131e4:	f7fe ff1a 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   131e8:	bb90      	cbnz	r0, 13250 <f_lseek+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   131ea:	2502      	movs	r5, #2
   131ec:	4610      	mov	r0, r2
   131ee:	4629      	mov	r1, r5
   131f0:	71e5      	strb	r5, [r4, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   131f2:	f7fe ff06 	bl	12002 <unlock_fs>
   131f6:	e797      	b.n	13128 <f_lseek+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   131f8:	6921      	ldr	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   131fa:	b961      	cbnz	r1, 13216 <f_lseek+0x10e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   131fc:	f7ff f815 	bl	1222a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   13200:	2801      	cmp	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   13202:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   13204:	d102      	bne.n	1320c <f_lseek+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   13206:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   13208:	71e5      	strb	r5, [r4, #7]
   1320a:	e784      	b.n	13116 <f_lseek+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   1320c:	3001      	adds	r0, #1
   1320e:	d101      	bne.n	13214 <f_lseek+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   13210:	2501      	movs	r5, #1
   13212:	e7f9      	b.n	13208 <f_lseek+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   13214:	6121      	str	r1, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   13216:	6161      	str	r1, [r4, #20]
   13218:	e7d7      	b.n	131ca <f_lseek+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1321a:	79a3      	ldrb	r3, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   1321c:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1321e:	079a      	lsls	r2, r3, #30
   13220:	d505      	bpl.n	1322e <f_lseek+0x126>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   13222:	f7ff f802 	bl	1222a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   13226:	4601      	mov	r1, r0
   13228:	b920      	cbnz	r0, 13234 <f_lseek+0x12c>
   1322a:	463e      	mov	r6, r7
   1322c:	e7d1      	b.n	131d2 <f_lseek+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   1322e:	f7fe ff00 	bl	12032 <get_fat>
   13232:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   13234:	1c4b      	adds	r3, r1, #1
   13236:	d0eb      	beq.n	13210 <f_lseek+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   13238:	2901      	cmp	r1, #1
   1323a:	d9e4      	bls.n	13206 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   1323c:	6823      	ldr	r3, [r4, #0]
   1323e:	69db      	ldr	r3, [r3, #28]
   13240:	4299      	cmp	r1, r3
   13242:	d2e0      	bcs.n	13206 <f_lseek+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   13244:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   13246:	6161      	str	r1, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   13248:	443b      	add	r3, r7
   1324a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   1324c:	1bf6      	subs	r6, r6, r7
   1324e:	e7be      	b.n	131ce <f_lseek+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   13250:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   13254:	e783      	b.n	1315e <f_lseek+0x56>

00013256 <f_opendir>:
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3156

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
   13256:	b530      	push	{r4, r5, lr}
   13258:	b0c9      	sub	sp, #292	; 0x124
   1325a:	9101      	str	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	FRESULT res;
	FATFS* fs;
	DEF_NAMEBUF;


	if (!dp) return FR_INVALID_OBJECT;
   1325c:	4605      	mov	r5, r0
   1325e:	2800      	cmp	r0, #0
   13260:	d037      	beq.n	132d2 <f_opendir+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3165

	/* Get logical drive number */
	res = find_volume(&fs, &path, 0);
   13262:	2200      	movs	r2, #0
   13264:	a901      	add	r1, sp, #4
   13266:	a803      	add	r0, sp, #12
   13268:	f7fe fd9e 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3166
	if (res == FR_OK) {
   1326c:	4604      	mov	r4, r0
   1326e:	b988      	cbnz	r0, 13294 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   13270:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		INIT_BUF(*dp);
		res = follow_path(dp, path);			/* Follow the path to the directory */
   13272:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3167
		dp->fs = fs;
   13274:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3168
		INIT_BUF(*dp);
   13276:	ab04      	add	r3, sp, #16
   13278:	61ab      	str	r3, [r5, #24]
   1327a:	ab07      	add	r3, sp, #28
   1327c:	61eb      	str	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3169
		res = follow_path(dp, path);			/* Follow the path to the directory */
   1327e:	4628      	mov	r0, r5
   13280:	f7ff f92a 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3171
		FREE_BUF();
		if (res == FR_OK) {						/* Follow completed */
   13284:	4604      	mov	r4, r0
   13286:	bb30      	cbnz	r0, 132d6 <f_opendir+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3172
			if (dp->dir) {						/* It is not the origin directory itself */
   13288:	696b      	ldr	r3, [r5, #20]
   1328a:	b17b      	cbz	r3, 132ac <f_opendir+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3173
				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
   1328c:	7ada      	ldrb	r2, [r3, #11]
   1328e:	06d2      	lsls	r2, r2, #27
   13290:	d403      	bmi.n	1329a <f_opendir+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3176
					dp->sclust = ld_clust(fs, dp->dir);
				else							/* The object is a file */
					res = FR_NO_PATH;
   13292:	2405      	movs	r4, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196 (discriminator 1)
#endif
			}
		}
		if (res == FR_NO_FILE) res = FR_NO_PATH;
	}
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   13294:	2300      	movs	r3, #0
   13296:	602b      	str	r3, [r5, #0]
   13298:	e014      	b.n	132c4 <f_opendir+0x6e>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1329a:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   1329c:	8b5a      	ldrh	r2, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1329e:	7809      	ldrb	r1, [r1, #0]
   132a0:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   132a2:	bf04      	itt	eq
   132a4:	8a9b      	ldrheq	r3, [r3, #20]
   132a6:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
f_opendir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3174
					dp->sclust = ld_clust(fs, dp->dir);
   132aa:	60aa      	str	r2, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   132ac:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   132ae:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   132b0:	88db      	ldrh	r3, [r3, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   132b2:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3179
				dp->id = fs->id;
   132b4:	80ab      	strh	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   132b6:	f7fe ff0f 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   132ba:	2804      	cmp	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3180
				res = dir_sdi(dp, 0);			/* Rewind directory */
   132bc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   132be:	d0e8      	beq.n	13292 <f_opendir+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3196
	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
   132c0:	2c00      	cmp	r4, #0
   132c2:	d1e7      	bne.n	13294 <f_opendir+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3198

	LEAVE_FF(fs, res);
   132c4:	4621      	mov	r1, r4
   132c6:	9803      	ldr	r0, [sp, #12]
   132c8:	f7fe fe9b 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3199
}
   132cc:	4620      	mov	r0, r4
   132ce:	b049      	add	sp, #292	; 0x124
   132d0:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3162
	if (!dp) return FR_INVALID_OBJECT;
   132d2:	2409      	movs	r4, #9
   132d4:	e7fa      	b.n	132cc <f_opendir+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3194
		if (res == FR_NO_FILE) res = FR_NO_PATH;
   132d6:	2804      	cmp	r0, #4
   132d8:	d0db      	beq.n	13292 <f_opendir+0x3c>
   132da:	e7db      	b.n	13294 <f_opendir+0x3e>

000132dc <f_closedir>:
f_closedir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3211
/*-----------------------------------------------------------------------*/

FRESULT f_closedir (
	DIR *dp		/* Pointer to the directory object to be closed */
)
{
   132dc:	b538      	push	{r3, r4, r5, lr}
   132de:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3215
	FRESULT res;


	res = validate(dp);
   132e0:	f7fe fe72 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3216
	if (res == FR_OK) {
   132e4:	4604      	mov	r4, r0
   132e6:	b920      	cbnz	r0, 132f2 <f_closedir+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3218
#if _FS_REENTRANT
		FATFS *fs = dp->fs;
   132e8:	6828      	ldr	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3227
			res = dec_lock(dp->lockid);
		if (res == FR_OK)
#endif
			dp->fs = 0;				/* Invalidate directory object */
#if _FS_REENTRANT
		unlock_fs(fs, FR_OK);		/* Unlock volume */
   132ea:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3225
			dp->fs = 0;				/* Invalidate directory object */
   132ec:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3227
		unlock_fs(fs, FR_OK);		/* Unlock volume */
   132ee:	f7fe fe88 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3231
#endif
	}
	return res;
}
   132f2:	4620      	mov	r0, r4
   132f4:	bd38      	pop	{r3, r4, r5, pc}

000132f6 <f_readdir>:
f_readdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3244

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
   132f6:	b570      	push	{r4, r5, r6, lr}
   132f8:	b0c4      	sub	sp, #272	; 0x110
   132fa:	4605      	mov	r5, r0
   132fc:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3249
	FRESULT res;
	DEF_NAMEBUF;


	res = validate(dp);						/* Check validity of the object */
   132fe:	f7fe fe63 	bl	11fc8 <validate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3250
	if (res == FR_OK) {
   13302:	4604      	mov	r4, r0
   13304:	b9e8      	cbnz	r0, 13342 <f_readdir+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3251
		if (!fno) {
   13306:	b92e      	cbnz	r6, 13314 <f_readdir+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3252
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
   13308:	4601      	mov	r1, r0
   1330a:	4628      	mov	r0, r5
   1330c:	f7fe fee4 	bl	120d8 <dir_sdi>
   13310:	4604      	mov	r4, r0
   13312:	e016      	b.n	13342 <f_readdir+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3254
		} else {
			INIT_BUF(*dp);
   13314:	ab03      	add	r3, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3255
			res = dir_read(dp, 0);			/* Read an item */
   13316:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3254
			INIT_BUF(*dp);
   13318:	f8c5 d018 	str.w	sp, [r5, #24]
   1331c:	61eb      	str	r3, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3255
			res = dir_read(dp, 0);			/* Read an item */
   1331e:	4628      	mov	r0, r5
   13320:	f7ff fb60 	bl	129e4 <dir_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3256
			if (res == FR_NO_FILE) {		/* Reached end of directory */
   13324:	2804      	cmp	r0, #4
   13326:	d113      	bne.n	13350 <f_readdir+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3257
				dp->sect = 0;
   13328:	612c      	str	r4, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3261
				res = FR_OK;
			}
			if (res == FR_OK) {				/* A valid entry is found */
				get_fileinfo(dp, fno);		/* Get the object information */
   1332a:	4631      	mov	r1, r6
   1332c:	4628      	mov	r0, r5
   1332e:	f7fe fc35 	bl	11b9c <get_fileinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3262
				res = dir_next(dp, 0);		/* Increment index for next */
   13332:	2100      	movs	r1, #0
   13334:	4628      	mov	r0, r5
   13336:	f7fe ffc8 	bl	122ca <dir_next>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3263
				if (res == FR_NO_FILE) {
   1333a:	2804      	cmp	r0, #4
   1333c:	d1e8      	bne.n	13310 <f_readdir+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3264
					dp->sect = 0;
   1333e:	2300      	movs	r3, #0
   13340:	612b      	str	r3, [r5, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3272
			}
			FREE_BUF();
		}
	}

	LEAVE_FF(dp->fs, res);
   13342:	6828      	ldr	r0, [r5, #0]
   13344:	4621      	mov	r1, r4
   13346:	f7fe fe5c 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3273
}
   1334a:	4620      	mov	r0, r4
   1334c:	b044      	add	sp, #272	; 0x110
   1334e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3260
			if (res == FR_OK) {				/* A valid entry is found */
   13350:	2800      	cmp	r0, #0
   13352:	d1dd      	bne.n	13310 <f_readdir+0x1a>
   13354:	e7e9      	b.n	1332a <f_readdir+0x34>

00013356 <f_getfree>:
f_getfree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   13356:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1335a:	4614      	mov	r4, r2
   1335c:	ab02      	add	r3, sp, #8
   1335e:	f843 0d04 	str.w	r0, [r3, #-4]!
   13362:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   13364:	4620      	mov	r0, r4
   13366:	2200      	movs	r2, #0
   13368:	4619      	mov	r1, r3
   1336a:	f7fe fd1d 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   1336e:	6824      	ldr	r4, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   13370:	4605      	mov	r5, r0
   13372:	b930      	cbnz	r0, 13382 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   13374:	69e7      	ldr	r7, [r4, #28]
   13376:	6963      	ldr	r3, [r4, #20]
   13378:	1eba      	subs	r2, r7, #2
   1337a:	4293      	cmp	r3, r2
   1337c:	d809      	bhi.n	13392 <f_getfree+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   1337e:	f8c8 3000 	str.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   13382:	4620      	mov	r0, r4
   13384:	4629      	mov	r1, r5
   13386:	f7fe fe3c 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3375
}
   1338a:	4628      	mov	r0, r5
   1338c:	b002      	add	sp, #8
   1338e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   13392:	f894 9000 	ldrb.w	r9, [r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   13396:	f1b9 0f01 	cmp.w	r9, #1
   1339a:	d117      	bne.n	133cc <f_getfree+0x76>
   1339c:	2702      	movs	r7, #2
   1339e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   133a0:	4639      	mov	r1, r7
   133a2:	4620      	mov	r0, r4
   133a4:	f7fe fe45 	bl	12032 <get_fat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   133a8:	1c43      	adds	r3, r0, #1
   133aa:	d032      	beq.n	13412 <f_getfree+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   133ac:	2801      	cmp	r0, #1
   133ae:	d032      	beq.n	13416 <f_getfree+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   133b0:	b900      	cbnz	r0, 133b4 <f_getfree+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   133b2:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   133b4:	69e3      	ldr	r3, [r4, #28]
   133b6:	3701      	adds	r7, #1
   133b8:	429f      	cmp	r7, r3
   133ba:	d3f1      	bcc.n	133a0 <f_getfree+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   133bc:	7963      	ldrb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   133be:	6166      	str	r6, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   133c0:	f043 0301 	orr.w	r3, r3, #1
   133c4:	7163      	strb	r3, [r4, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   133c6:	f8c8 6000 	str.w	r6, [r8]
   133ca:	e7da      	b.n	13382 <f_getfree+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   133cc:	4603      	mov	r3, r0
   133ce:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   133d0:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   133d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   133d4:	b952      	cbnz	r2, 133ec <f_getfree+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   133d6:	4620      	mov	r0, r4
   133d8:	f101 0a01 	add.w	sl, r1, #1
   133dc:	f7fe fca4 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   133e0:	b9d8      	cbnz	r0, 1341a <f_getfree+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   133e2:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   133e4:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   133e8:	f104 0338 	add.w	r3, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   133ec:	f1b9 0f02 	cmp.w	r9, #2
   133f0:	d107      	bne.n	13402 <f_getfree+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   133f2:	8818      	ldrh	r0, [r3, #0]
   133f4:	b900      	cbnz	r0, 133f8 <f_getfree+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   133f6:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   133f8:	3302      	adds	r3, #2
   133fa:	3a02      	subs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   133fc:	3f01      	subs	r7, #1
   133fe:	d1e9      	bne.n	133d4 <f_getfree+0x7e>
   13400:	e7dc      	b.n	133bc <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13402:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   13404:	3a04      	subs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   13406:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   1340a:	bf08      	it	eq
   1340c:	3601      	addeq	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   1340e:	3304      	adds	r3, #4
   13410:	e7f4      	b.n	133fc <f_getfree+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   13412:	2501      	movs	r5, #1
   13414:	e7d2      	b.n	133bc <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   13416:	2502      	movs	r5, #2
   13418:	e7d0      	b.n	133bc <f_getfree+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   1341a:	4605      	mov	r5, r0
   1341c:	e7ce      	b.n	133bc <f_getfree+0x66>

0001341e <f_unlink>:
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3443
/*-----------------------------------------------------------------------*/

FRESULT f_unlink (
	const TCHAR* path		/* Pointer to the file or directory path */
)
{
   1341e:	b530      	push	{r4, r5, lr}
   13420:	b0d9      	sub	sp, #356	; 0x164
   13422:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3452
	DWORD dclst;
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13424:	2201      	movs	r2, #1
   13426:	a901      	add	r1, sp, #4
   13428:	a805      	add	r0, sp, #20
   1342a:	f7fe fcbd 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3453
	if (res == FR_OK) {
   1342e:	4604      	mov	r4, r0
   13430:	2800      	cmp	r0, #0
   13432:	d13d      	bne.n	134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   13434:	ab02      	add	r3, sp, #8
   13436:	930b      	str	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   13438:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1343a:	ab17      	add	r3, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   1343c:	a805      	add	r0, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3454
		INIT_BUF(dj);
   1343e:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3455
		res = follow_path(&dj, path);		/* Follow the file path */
   13440:	f7ff f84a 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3456
		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
   13444:	4604      	mov	r4, r0
   13446:	2800      	cmp	r0, #0
   13448:	d132      	bne.n	134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3456 (discriminator 1)
   1344a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1344c:	7adb      	ldrb	r3, [r3, #11]
   1344e:	069a      	lsls	r2, r3, #26
   13450:	d43d      	bmi.n	134ce <f_unlink+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3462
			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
#endif
		if (res == FR_OK) {					/* The object is accessible */
			dir = dj.dir;
   13452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3463
			if (!dir) {
   13454:	b90b      	cbnz	r3, 1345a <f_unlink+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3464
				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
   13456:	2406      	movs	r4, #6
   13458:	e004      	b.n	13464 <f_unlink+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3466
			} else {
				if (dir[DIR_Attr] & AM_RDO)
   1345a:	7ada      	ldrb	r2, [r3, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3467
					res = FR_DENIED;		/* Cannot remove R/O object */
   1345c:	f012 0f01 	tst.w	r2, #1
   13460:	bf18      	it	ne
   13462:	2407      	movne	r4, #7
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13464:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13466:	8b5d      	ldrh	r5, [r3, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13468:	7812      	ldrb	r2, [r2, #0]
   1346a:	2a03      	cmp	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1346c:	bf04      	itt	eq
   1346e:	8a9a      	ldrheq	r2, [r3, #20]
   13470:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
f_unlink():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470
			}
			dclst = ld_clust(dj.fs, dir);
			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
   13474:	b9e4      	cbnz	r4, 134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3470 (discriminator 1)
   13476:	7adb      	ldrb	r3, [r3, #11]
   13478:	06db      	lsls	r3, r3, #27
   1347a:	d52e      	bpl.n	134da <f_unlink+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3471
				if (dclst < 2) {
   1347c:	2d01      	cmp	r5, #1
   1347e:	d928      	bls.n	134d2 <f_unlink+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3474
					res = FR_INT_ERR;
				} else {
					mem_cpy(&sdj, &dj, sizeof (DIR));	/* Check if the sub-directory is empty or not */
   13480:	2224      	movs	r2, #36	; 0x24
   13482:	a905      	add	r1, sp, #20
   13484:	a80e      	add	r0, sp, #56	; 0x38
   13486:	f7fe fb37 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					sdj.sclust = dclst;
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   1348a:	2102      	movs	r1, #2
   1348c:	a80e      	add	r0, sp, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3475
					sdj.sclust = dclst;
   1348e:	9510      	str	r5, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3476
					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
   13490:	f7fe fe22 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3477
					if (res == FR_OK) {
   13494:	4604      	mov	r4, r0
   13496:	b958      	cbnz	r0, 134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3478
						res = dir_read(&sdj, 0);	/* Read an item */
   13498:	4601      	mov	r1, r0
   1349a:	a80e      	add	r0, sp, #56	; 0x38
   1349c:	f7ff faa2 	bl	129e4 <dir_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3479
						if (res == FR_OK		/* Not empty directory */
   134a0:	4604      	mov	r4, r0
   134a2:	b1c0      	cbz	r0, 134d6 <f_unlink+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3481
#if _FS_RPATH
						|| dclst == dj.fs->cdir	/* Current directory */
   134a4:	9b05      	ldr	r3, [sp, #20]
   134a6:	699b      	ldr	r3, [r3, #24]
   134a8:	42ab      	cmp	r3, r5
   134aa:	d014      	beq.n	134d6 <f_unlink+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3484
#endif
						) res = FR_DENIED;
						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
   134ac:	2804      	cmp	r0, #4
   134ae:	d014      	beq.n	134da <f_unlink+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3500
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   134b0:	9805      	ldr	r0, [sp, #20]
   134b2:	4621      	mov	r1, r4
   134b4:	f7fe fda5 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3501
}
   134b8:	4620      	mov	r0, r4
   134ba:	b059      	add	sp, #356	; 0x164
   134bc:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3492
						res = remove_chain(dj.fs, dclst);
   134be:	4629      	mov	r1, r5
   134c0:	9805      	ldr	r0, [sp, #20]
   134c2:	f7ff fb3a 	bl	12b3a <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   134c6:	4604      	mov	r4, r0
   134c8:	2800      	cmp	r0, #0
   134ca:	d1f1      	bne.n	134b0 <f_unlink+0x92>
   134cc:	e00d      	b.n	134ea <f_unlink+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3457
			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
   134ce:	2406      	movs	r4, #6
   134d0:	e7ee      	b.n	134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3472
					res = FR_INT_ERR;
   134d2:	2402      	movs	r4, #2
   134d4:	e7ec      	b.n	134b0 <f_unlink+0x92>
   134d6:	2407      	movs	r4, #7
   134d8:	e7ea      	b.n	134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3489
				res = dir_remove(&dj);		/* Remove the directory entry */
   134da:	a805      	add	r0, sp, #20
   134dc:	f7ff fb00 	bl	12ae0 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3490
				if (res == FR_OK) {
   134e0:	4604      	mov	r4, r0
   134e2:	2800      	cmp	r0, #0
   134e4:	d1e4      	bne.n	134b0 <f_unlink+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3491
					if (dclst)				/* Remove the cluster chain if exist */
   134e6:	2d00      	cmp	r5, #0
   134e8:	d1e9      	bne.n	134be <f_unlink+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3493
					if (res == FR_OK) res = sync_fs(dj.fs);
   134ea:	9805      	ldr	r0, [sp, #20]
   134ec:	f7fe fbe2 	bl	11cb4 <sync_fs>
   134f0:	4604      	mov	r4, r0
   134f2:	e7dd      	b.n	134b0 <f_unlink+0x92>

000134f4 <f_mkdir>:
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3513
/*-----------------------------------------------------------------------*/

FRESULT f_mkdir (
	const TCHAR* path		/* Pointer to the directory path */
)
{
   134f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134f8:	b0d1      	sub	sp, #324	; 0x144
   134fa:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	FRESULT res;
	DIR dj;
	BYTE *dir, n;
	DWORD dsc, dcl, pcl, tm = get_fattime();
   134fc:	f001 fada 	bl	14ab4 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	DEF_NAMEBUF;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 1);
   13500:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3517
	DWORD dsc, dcl, pcl, tm = get_fattime();
   13502:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3522
	res = find_volume(&dj.fs, &path, 1);
   13504:	a901      	add	r1, sp, #4
   13506:	a806      	add	r0, sp, #24
   13508:	f7fe fc4e 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3523
	if (res == FR_OK) {
   1350c:	4604      	mov	r4, r0
   1350e:	2800      	cmp	r0, #0
   13510:	f040 8090 	bne.w	13634 <f_mkdir+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   13514:	ab03      	add	r3, sp, #12
   13516:	930c      	str	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13518:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   1351a:	ab0f      	add	r3, sp, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   1351c:	a806      	add	r0, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3524
		INIT_BUF(dj);
   1351e:	930d      	str	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3525
		res = follow_path(&dj, path);			/* Follow the file path */
   13520:	f7fe ffda 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   13524:	4604      	mov	r4, r0
   13526:	2800      	cmp	r0, #0
   13528:	f000 8090 	beq.w	1364c <f_mkdir+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3527
		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
   1352c:	2804      	cmp	r0, #4
   1352e:	f040 8081 	bne.w	13634 <f_mkdir+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3527 (discriminator 1)
   13532:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   13534:	7ad9      	ldrb	r1, [r3, #11]
   13536:	f011 0120 	ands.w	r1, r1, #32
   1353a:	f040 8089 	bne.w	13650 <f_mkdir+0x15c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3530
			res = FR_INVALID_NAME;
		if (res == FR_NO_FILE) {				/* Can create a new directory */
			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
   1353e:	9806      	ldr	r0, [sp, #24]
   13540:	f7fe fe73 	bl	1222a <create_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			res = FR_OK;
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13544:	4605      	mov	r5, r0
   13546:	2800      	cmp	r0, #0
   13548:	d07c      	beq.n	13644 <f_mkdir+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   1354a:	2d01      	cmp	r5, #1
   1354c:	d06d      	beq.n	1362a <f_mkdir+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   1354e:	1c6b      	adds	r3, r5, #1
   13550:	d07a      	beq.n	13648 <f_mkdir+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3536
			if (res == FR_OK)					/* Flush FAT */
				res = sync_window(dj.fs);
   13552:	9806      	ldr	r0, [sp, #24]
   13554:	f7fe fba7 	bl	11ca6 <sync_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3537
			if (res == FR_OK) {					/* Initialize the new directory table */
   13558:	4604      	mov	r4, r0
   1355a:	2800      	cmp	r0, #0
   1355c:	d166      	bne.n	1362c <f_mkdir+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   1355e:	9e06      	ldr	r6, [sp, #24]
   13560:	4629      	mov	r1, r5
   13562:	4630      	mov	r0, r6
   13564:	f7fe fd5a 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3539
				dir = dj.fs->win;
   13568:	f106 0738 	add.w	r7, r6, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   1356c:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3538
				dsc = clust2sect(dj.fs, dcl);
   1356e:	9000      	str	r0, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3540
				mem_set(dir, 0, SS(dj.fs));
   13570:	f44f 7200 	mov.w	r2, #512	; 0x200
   13574:	4638      	mov	r0, r7
   13576:	f7fe fadb 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3541
				mem_set(dir+DIR_Name, ' ', 11);	/* Create "." entry */
   1357a:	220b      	movs	r2, #11
   1357c:	2120      	movs	r1, #32
   1357e:	4638      	mov	r0, r7
   13580:	f7fe fad6 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Name] = '.';
				dir[DIR_Attr] = AM_DIR;
   13584:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   13586:	242e      	movs	r4, #46	; 0x2e
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13588:	fa25 fa02 	lsr.w	sl, r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   1358c:	fa1f f985 	uxth.w	r9, r5
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3543
				dir[DIR_Attr] = AM_DIR;
   13590:	f886 2043 	strb.w	r2, [r6, #67]	; 0x43
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				ST_DWORD(dir+DIR_WrtTime, tm);
				st_clust(dir, dcl);
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   13594:	4639      	mov	r1, r7
   13596:	2220      	movs	r2, #32
   13598:	f106 0058 	add.w	r0, r6, #88	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3542
				dir[DIR_Name] = '.';
   1359c:	f886 4038 	strb.w	r4, [r6, #56]	; 0x38
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   135a0:	f8c6 804e 	str.w	r8, [r6, #78]	; 0x4e
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   135a4:	f8a6 9052 	strh.w	r9, [r6, #82]	; 0x52
   135a8:	f8a6 a04c 	strh.w	sl, [r6, #76]	; 0x4c
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3546
				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
   135ac:	f7fe faa4 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   135b0:	9906      	ldr	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   135b2:	f886 4059 	strb.w	r4, [r6, #89]	; 0x59
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   135b6:	7808      	ldrb	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3547
				dir[SZ_DIR+1] = '.'; pcl = dj.sclust;
   135b8:	9a08      	ldr	r2, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548
				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
   135ba:	2803      	cmp	r0, #3
   135bc:	9b00      	ldr	r3, [sp, #0]
   135be:	d103      	bne.n	135c8 <f_mkdir+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3548 (discriminator 1)
   135c0:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3549 (discriminator 1)
					pcl = 0;
   135c2:	4282      	cmp	r2, r0
   135c4:	bf08      	it	eq
   135c6:	2200      	moveq	r2, #0
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   135c8:	f8a6 2072 	strh.w	r2, [r6, #114]	; 0x72
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   135cc:	0c12      	lsrs	r2, r2, #16
   135ce:	f8a6 206c 	strh.w	r2, [r6, #108]	; 0x6c
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551
				st_clust(dir+SZ_DIR, pcl);
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   135d2:	788e      	ldrb	r6, [r1, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 1)
   135d4:	b9a6      	cbnz	r6, 13600 <f_mkdir+0x10c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3559
					res = sync_window(dj.fs);
					if (res != FR_OK) break;
					mem_set(dir, 0, SS(dj.fs));
				}
			}
			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
   135d6:	a806      	add	r0, sp, #24
   135d8:	f7ff f900 	bl	127dc <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3560
			if (res != FR_OK) {
   135dc:	4604      	mov	r4, r0
   135de:	bb28      	cbnz	r0, 1362c <f_mkdir+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
			} else {
				dir = dj.dir;
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   135e0:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3563
				dir = dj.dir;
   135e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				ST_DWORD(dir+DIR_WrtTime, tm);		/* Created time */
				st_clust(dir, dcl);					/* Table start cluster */
				dj.fs->wflag = 1;
   135e4:	9806      	ldr	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3564
				dir[DIR_Attr] = AM_DIR;				/* Attribute */
   135e6:	72da      	strb	r2, [r3, #11]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   135e8:	f8c3 8016 	str.w	r8, [r3, #22]
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   135ec:	f8a3 901a 	strh.w	r9, [r3, #26]
   135f0:	f8a3 a014 	strh.w	sl, [r3, #20]
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3567
				dj.fs->wflag = 1;
   135f4:	2301      	movs	r3, #1
   135f6:	7103      	strb	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3568
				res = sync_fs(dj.fs);
   135f8:	f7fe fb5c 	bl	11cb4 <sync_fs>
   135fc:	4604      	mov	r4, r0
   135fe:	e019      	b.n	13634 <f_mkdir+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552
					dj.fs->winsect = dsc++;
   13600:	9806      	ldr	r0, [sp, #24]
   13602:	f103 0b01 	add.w	fp, r3, #1
   13606:	6343      	str	r3, [r0, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3553
					dj.fs->wflag = 1;
   13608:	f04f 0301 	mov.w	r3, #1
   1360c:	7103      	strb	r3, [r0, #4]
sync_window():
   1360e:	f7fe fb27 	bl	11c60 <sync_window.part.1>
f_mkdir():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3555
					if (res != FR_OK) break;
   13612:	4604      	mov	r4, r0
   13614:	b950      	cbnz	r0, 1362c <f_mkdir+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   13616:	4601      	mov	r1, r0
   13618:	f44f 7200 	mov.w	r2, #512	; 0x200
   1361c:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   1361e:	3e01      	subs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3556 (discriminator 2)
					mem_set(dir, 0, SS(dj.fs));
   13620:	f7fe fa86 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3551 (discriminator 2)
				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
   13624:	b2f6      	uxtb	r6, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3552 (discriminator 2)
					dj.fs->winsect = dsc++;
   13626:	465b      	mov	r3, fp
   13628:	e7d4      	b.n	135d4 <f_mkdir+0xe0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3533
			if (dcl == 1) res = FR_INT_ERR;
   1362a:	2402      	movs	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3561
				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
   1362c:	4629      	mov	r1, r5
   1362e:	9806      	ldr	r0, [sp, #24]
   13630:	f7ff fa83 	bl	12b3a <remove_chain>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3574
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(dj.fs, res);
   13634:	9806      	ldr	r0, [sp, #24]
   13636:	4621      	mov	r1, r4
   13638:	f7fe fce3 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3575
}
   1363c:	4620      	mov	r0, r4
   1363e:	b051      	add	sp, #324	; 0x144
   13640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3532
			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
   13644:	2407      	movs	r4, #7
   13646:	e7f1      	b.n	1362c <f_mkdir+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3534
			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
   13648:	2401      	movs	r4, #1
   1364a:	e7ef      	b.n	1362c <f_mkdir+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3526
		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
   1364c:	2408      	movs	r4, #8
   1364e:	e7f1      	b.n	13634 <f_mkdir+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3528
			res = FR_INVALID_NAME;
   13650:	2406      	movs	r4, #6
   13652:	e7ef      	b.n	13634 <f_mkdir+0x140>

00013654 <f_rename>:
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3673

FRESULT f_rename (
	const TCHAR* path_old,	/* Pointer to the object to be renamed */
	const TCHAR* path_new	/* Pointer to the new name */
)
{
   13654:	b510      	push	{r4, lr}
   13656:	b0de      	sub	sp, #376	; 0x178
   13658:	9001      	str	r0, [sp, #4]
   1365a:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3682
	DWORD dw;
	DEF_NAMEBUF;


	/* Get logical drive number of the source object */
	res = find_volume(&djo.fs, &path_old, 1);
   1365c:	2201      	movs	r2, #1
   1365e:	a901      	add	r1, sp, #4
   13660:	a80b      	add	r0, sp, #44	; 0x2c
   13662:	f7fe fba1 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3683
	if (res == FR_OK) {
   13666:	4604      	mov	r4, r0
   13668:	2800      	cmp	r0, #0
   1366a:	d178      	bne.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   1366c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		INIT_BUF(djo);
		res = follow_path(&djo, path_old);		/* Check old object */
   1366e:	9901      	ldr	r1, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3684
		djn.fs = djo.fs;
   13670:	9314      	str	r3, [sp, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   13672:	ab02      	add	r3, sp, #8
   13674:	9311      	str	r3, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   13676:	a80b      	add	r0, sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3685
		INIT_BUF(djo);
   13678:	ab1d      	add	r3, sp, #116	; 0x74
   1367a:	9312      	str	r3, [sp, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3686
		res = follow_path(&djo, path_old);		/* Check old object */
   1367c:	f7fe ff2c 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3687
		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
   13680:	4604      	mov	r4, r0
   13682:	2800      	cmp	r0, #0
   13684:	d16b      	bne.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3687 (discriminator 1)
   13686:	9b11      	ldr	r3, [sp, #68]	; 0x44
   13688:	7adb      	ldrb	r3, [r3, #11]
   1368a:	069a      	lsls	r2, r3, #26
   1368c:	d46e      	bmi.n	1376c <f_rename+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3693
			res = FR_INVALID_NAME;
#if _FS_LOCK
		if (res == FR_OK) res = chk_lock(&djo, 2);
#endif
		if (res == FR_OK) {						/* Old object is found */
			if (!djo.dir) {						/* Is root dir? */
   1368e:	9910      	ldr	r1, [sp, #64]	; 0x40
   13690:	b909      	cbnz	r1, 13696 <f_rename+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3694
				res = FR_NO_FILE;
   13692:	2404      	movs	r4, #4
   13694:	e063      	b.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3696
			} else {
				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except name */
   13696:	2215      	movs	r2, #21
   13698:	310b      	adds	r1, #11
   1369a:	a805      	add	r0, sp, #20
   1369c:	f7fe fa2c 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3697
				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
   136a0:	2224      	movs	r2, #36	; 0x24
   136a2:	a90b      	add	r1, sp, #44	; 0x2c
   136a4:	a814      	add	r0, sp, #80	; 0x50
   136a6:	f7fe fa27 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3698
				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
   136aa:	4668      	mov	r0, sp
   136ac:	f7fe fa56 	bl	11b5c <get_ldnumber>
   136b0:	2800      	cmp	r0, #0
   136b2:	db5d      	blt.n	13770 <f_rename+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3699
					res = follow_path(&djn, path_new);	/* and check if new object is exist */
   136b4:	9900      	ldr	r1, [sp, #0]
   136b6:	a814      	add	r0, sp, #80	; 0x50
   136b8:	f7fe ff0e 	bl	124d8 <follow_path>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				else
					res = FR_INVALID_DRIVE;
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   136bc:	4604      	mov	r4, r0
   136be:	2800      	cmp	r0, #0
   136c0:	d058      	beq.n	13774 <f_rename+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3703
				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
   136c2:	2804      	cmp	r0, #4
   136c4:	d14b      	bne.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3705
/* Start critical section that any interruption can cause a cross-link */
					res = dir_register(&djn);			/* Register the new entry */
   136c6:	a814      	add	r0, sp, #80	; 0x50
   136c8:	f7ff f888 	bl	127dc <dir_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3706
					if (res == FR_OK) {
   136cc:	4604      	mov	r4, r0
   136ce:	2800      	cmp	r0, #0
   136d0:	d145      	bne.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3707
						dir = djn.dir;					/* Copy object information except name */
   136d2:	9c19      	ldr	r4, [sp, #100]	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3708
						mem_cpy(dir+13, buf+2, 19);
   136d4:	2213      	movs	r2, #19
   136d6:	f10d 0116 	add.w	r1, sp, #22
   136da:	f104 000d 	add.w	r0, r4, #13
   136de:	f7fe fa0b 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   136e2:	f89d 3014 	ldrb.w	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   136e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3709
						dir[DIR_Attr] = buf[0] | AM_ARC;
   136e8:	f043 0320 	orr.w	r3, r3, #32
   136ec:	72e3      	strb	r3, [r4, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3710
						djo.fs->wflag = 1;
   136ee:	2301      	movs	r3, #1
   136f0:	7113      	strb	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711
						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the directory if needed */
   136f2:	990d      	ldr	r1, [sp, #52]	; 0x34
   136f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
   136f6:	4299      	cmp	r1, r3
   136f8:	d028      	beq.n	1374c <f_rename+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3711 (discriminator 1)
   136fa:	7ae3      	ldrb	r3, [r4, #11]
   136fc:	06db      	lsls	r3, r3, #27
   136fe:	d525      	bpl.n	1374c <f_rename+0xf8>
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13700:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   13702:	8b61      	ldrh	r1, [r4, #26]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   13704:	2b03      	cmp	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   13706:	bf08      	it	eq
   13708:	8aa3      	ldrheq	r3, [r4, #20]
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   1370a:	4610      	mov	r0, r2
ld_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1370c:	bf08      	it	eq
   1370e:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3712
							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
   13712:	f7fe fc83 	bl	1201c <clust2sect>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3713
							if (!dw) {
   13716:	4601      	mov	r1, r0
   13718:	b370      	cbz	r0, 13778 <f_rename+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3716
								res = FR_INT_ERR;
							} else {
								res = move_window(djo.fs, dw);
   1371a:	4610      	mov	r0, r2
   1371c:	f7fe fb04 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
								if (res == FR_OK && dir[1] == '.') {
   13720:	4604      	mov	r4, r0
   13722:	b9e0      	cbnz	r0, 1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3717 (discriminator 1)
								dir = djo.fs->win+SZ_DIR;	/* .. entry */
   13724:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3718 (discriminator 1)
								if (res == FR_OK && dir[1] == '.') {
   13726:	f893 2059 	ldrb.w	r2, [r3, #89]	; 0x59
   1372a:	2a2e      	cmp	r2, #46	; 0x2e
   1372c:	d10e      	bne.n	1374c <f_rename+0xf8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719
									dw = (djo.fs->fs_type == FS_FAT32 && djn.sclust == djo.fs->dirbase) ? 0 : djn.sclust;
   1372e:	781a      	ldrb	r2, [r3, #0]
   13730:	2a03      	cmp	r2, #3
   13732:	d103      	bne.n	1373c <f_rename+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 2)
   13734:	9916      	ldr	r1, [sp, #88]	; 0x58
   13736:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   13738:	4291      	cmp	r1, r2
   1373a:	d000      	beq.n	1373e <f_rename+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3719 (discriminator 3)
   1373c:	9c16      	ldr	r4, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									st_clust(dir, dw);
									djo.fs->wflag = 1;
   1373e:	2201      	movs	r2, #1
st_clust():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1292 (discriminator 6)
	ST_WORD(dir+DIR_FstClusLO, cl);
   13740:	f8a3 4072 	strh.w	r4, [r3, #114]	; 0x72
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:1293 (discriminator 6)
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   13744:	0c24      	lsrs	r4, r4, #16
   13746:	f8a3 406c 	strh.w	r4, [r3, #108]	; 0x6c
f_rename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3721 (discriminator 6)
									djo.fs->wflag = 1;
   1374a:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3726
								}
							}
						}
						if (res == FR_OK) {
							res = dir_remove(&djo);		/* Remove old entry */
   1374c:	a80b      	add	r0, sp, #44	; 0x2c
   1374e:	f7ff f9c7 	bl	12ae0 <dir_remove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3727
							if (res == FR_OK)
   13752:	4604      	mov	r4, r0
   13754:	b918      	cbnz	r0, 1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3728
								res = sync_fs(djo.fs);
   13756:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13758:	f7fe faac 	bl	11cb4 <sync_fs>
   1375c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3738
			}
		}
		FREE_BUF();
	}

	LEAVE_FF(djo.fs, res);
   1375e:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13760:	4621      	mov	r1, r4
   13762:	f7fe fc4e 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3739
}
   13766:	4620      	mov	r0, r4
   13768:	b05e      	add	sp, #376	; 0x178
   1376a:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3688
			res = FR_INVALID_NAME;
   1376c:	2406      	movs	r4, #6
   1376e:	e7f6      	b.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3701
					res = FR_INVALID_DRIVE;
   13770:	240b      	movs	r4, #11
   13772:	e7f4      	b.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3702
				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
   13774:	2408      	movs	r4, #8
   13776:	e7f2      	b.n	1375e <f_rename+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3714
								res = FR_INT_ERR;
   13778:	2402      	movs	r4, #2
   1377a:	e7f0      	b.n	1375e <f_rename+0x10a>

0001377c <f_getlabel>:
f_getlabel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3758
FRESULT f_getlabel (
	const TCHAR* path,	/* Path name of the logical drive number */
	TCHAR* label,		/* Pointer to a buffer to return the volume label */
	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
)
{
   1377c:	b570      	push	{r4, r5, r6, lr}
   1377e:	b08c      	sub	sp, #48	; 0x30
   13780:	ab0c      	add	r3, sp, #48	; 0x30
   13782:	f843 0d2c 	str.w	r0, [r3, #-44]!
   13786:	460d      	mov	r5, r1
   13788:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3765
	DIR dj;
	UINT i, j;


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 0);
   1378a:	4619      	mov	r1, r3
   1378c:	2200      	movs	r2, #0
   1378e:	a803      	add	r0, sp, #12
   13790:	f7fe fb0a 	bl	11da8 <find_volume>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3768

	/* Get volume label */
	if (res == FR_OK && label) {
   13794:	4604      	mov	r4, r0
   13796:	bb50      	cbnz	r0, 137ee <f_getlabel+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3768 (discriminator 1)
   13798:	b1cd      	cbz	r5, 137ce <f_getlabel+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3769
		dj.sclust = 0;					/* Open root directory */
   1379a:	9005      	str	r0, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3770
		res = dir_sdi(&dj, 0);
   1379c:	4601      	mov	r1, r0
   1379e:	a803      	add	r0, sp, #12
   137a0:	f7fe fc9a 	bl	120d8 <dir_sdi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3771
		if (res == FR_OK) {
   137a4:	bb70      	cbnz	r0, 13804 <f_getlabel+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3772
			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
   137a6:	2101      	movs	r1, #1
   137a8:	a803      	add	r0, sp, #12
   137aa:	f7ff f91b 	bl	129e4 <dir_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3773
			if (res == FR_OK) {			/* A volume label is exist */
   137ae:	bb28      	cbnz	r0, 137fc <f_getlabel+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3784
					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
						w = w << 8 | dj.dir[i++];
					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
				} while (j < 11);
#else
				mem_cpy(label, dj.dir, 11);
   137b0:	9908      	ldr	r1, [sp, #32]
   137b2:	220b      	movs	r2, #11
   137b4:	4628      	mov	r0, r5
   137b6:	f7fe f99f 	bl	11af8 <mem_cpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3788
#endif
				j = 11;
				do {
					label[j] = 0;
   137ba:	4621      	mov	r1, r4
   137bc:	f105 030b 	add.w	r3, r5, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3789
					if (!j) break;
   137c0:	42ab      	cmp	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3788
					label[j] = 0;
   137c2:	7019      	strb	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3789
					if (!j) break;
   137c4:	d003      	beq.n	137ce <f_getlabel+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3790
				} while (label[--j] == ' ');
   137c6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   137ca:	2a20      	cmp	r2, #32
   137cc:	d0f8      	beq.n	137c0 <f_getlabel+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3800 (discriminator 1)
			}
		}
	}

	/* Get volume serial number */
	if (res == FR_OK && vsn) {
   137ce:	b176      	cbz	r6, 137ee <f_getlabel+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3801
		res = move_window(dj.fs, dj.fs->volbase);
   137d0:	9803      	ldr	r0, [sp, #12]
   137d2:	6a41      	ldr	r1, [r0, #36]	; 0x24
   137d4:	f7fe faa8 	bl	11d28 <move_window>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3802
		if (res == FR_OK) {
   137d8:	4604      	mov	r4, r0
   137da:	b940      	cbnz	r0, 137ee <f_getlabel+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3803
			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
   137dc:	9b03      	ldr	r3, [sp, #12]
   137de:	781a      	ldrb	r2, [r3, #0]
   137e0:	2a03      	cmp	r2, #3
   137e2:	bf0c      	ite	eq
   137e4:	2243      	moveq	r2, #67	; 0x43
   137e6:	2227      	movne	r2, #39	; 0x27
LD_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   137e8:	4413      	add	r3, r2
   137ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
f_getlabel():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3804
			*vsn = LD_DWORD(&dj.fs->win[i]);
   137ec:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3808
		}
	}

	LEAVE_FF(dj.fs, res);
   137ee:	9803      	ldr	r0, [sp, #12]
   137f0:	4621      	mov	r1, r4
   137f2:	f7fe fc06 	bl	12002 <unlock_fs>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3809
}
   137f6:	4620      	mov	r0, r4
   137f8:	b00c      	add	sp, #48	; 0x30
   137fa:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3792
			if (res == FR_NO_FILE) {	/* No label, return nul string */
   137fc:	2804      	cmp	r0, #4
   137fe:	d101      	bne.n	13804 <f_getlabel+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3793
				label[0] = 0;
   13800:	702c      	strb	r4, [r5, #0]
   13802:	e7e4      	b.n	137ce <f_getlabel+0x52>
   13804:	4604      	mov	r4, r0
   13806:	e7f2      	b.n	137ee <f_getlabel+0x72>

00013808 <f_mkfs>:
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   13808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1380c:	b089      	sub	sp, #36	; 0x24
   1380e:	ab08      	add	r3, sp, #32
   13810:	f843 0d0c 	str.w	r0, [r3, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   13814:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3981
{
   13816:	460e      	mov	r6, r1
   13818:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   1381a:	f7fe f99f 	bl	11b5c <get_ldnumber>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   1381e:	2800      	cmp	r0, #0
   13820:	f2c0 81f7 	blt.w	13c12 <f_mkfs+0x40a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13824:	2e01      	cmp	r6, #1
   13826:	f200 81f6 	bhi.w	13c16 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   1382a:	1e6b      	subs	r3, r5, #1
   1382c:	402b      	ands	r3, r5
   1382e:	9302      	str	r3, [sp, #8]
   13830:	f040 81f1 	bne.w	13c16 <f_mkfs+0x40e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   13834:	4b50      	ldr	r3, [pc, #320]	; (13978 <f_mkfs+0x170>)
   13836:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   1383a:	2c00      	cmp	r4, #0
   1383c:	f000 81ed 	beq.w	13c1a <f_mkfs+0x412>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   13840:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   13844:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   13846:	7023      	strb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   13848:	4638      	mov	r0, r7
   1384a:	f000 fe41 	bl	144d0 <disk_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   1384e:	07c2      	lsls	r2, r0, #31
   13850:	f100 81e5 	bmi.w	13c1e <f_mkfs+0x416>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13854:	0743      	lsls	r3, r0, #29
   13856:	f100 81e4 	bmi.w	13c22 <f_mkfs+0x41a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   1385a:	aa07      	add	r2, sp, #28
   1385c:	2101      	movs	r1, #1
   1385e:	4638      	mov	r0, r7
   13860:	f000 fe89 	bl	14576 <disk_ioctl>
   13864:	b118      	cbz	r0, 1386e <f_mkfs+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   13866:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   13868:	b009      	add	sp, #36	; 0x24
   1386a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   1386e:	9907      	ldr	r1, [sp, #28]
   13870:	297f      	cmp	r1, #127	; 0x7f
   13872:	d9f8      	bls.n	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   13874:	2e00      	cmp	r6, #0
   13876:	bf14      	ite	ne
   13878:	f04f 0a00 	movne.w	sl, #0
   1387c:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   13880:	eba1 010a 	sub.w	r1, r1, sl
   13884:	9107      	str	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   13886:	b95d      	cbnz	r5, 138a0 <f_mkfs+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   13888:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   1388c:	fbb1 f3f3 	udiv	r3, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   13890:	483a      	ldr	r0, [pc, #232]	; (1397c <f_mkfs+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   13892:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   13896:	4293      	cmp	r3, r2
   13898:	d318      	bcc.n	138cc <f_mkfs+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   1389a:	4b39      	ldr	r3, [pc, #228]	; (13980 <f_mkfs+0x178>)
   1389c:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   138a0:	0a6d      	lsrs	r5, r5, #9
   138a2:	d015      	beq.n	138d0 <f_mkfs+0xc8>
   138a4:	2d80      	cmp	r5, #128	; 0x80
   138a6:	bf28      	it	cs
   138a8:	2580      	movcs	r5, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   138aa:	fbb1 f3f5 	udiv	r3, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   138ae:	f640 72f5 	movw	r2, #4085	; 0xff5
   138b2:	4293      	cmp	r3, r2
   138b4:	f240 81f8 	bls.w	13ca8 <f_mkfs+0x4a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   138b8:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   138bc:	4293      	cmp	r3, r2
   138be:	f200 81b2 	bhi.w	13c26 <f_mkfs+0x41e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   138c2:	3302      	adds	r3, #2
   138c4:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   138c6:	f04f 0802 	mov.w	r8, #2
   138ca:	e1f4      	b.n	13cb6 <f_mkfs+0x4ae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   138cc:	3501      	adds	r5, #1
   138ce:	e7e0      	b.n	13892 <f_mkfs+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   138d0:	2501      	movs	r5, #1
   138d2:	e7ea      	b.n	138aa <f_mkfs+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   138d4:	aa06      	add	r2, sp, #24
   138d6:	2103      	movs	r1, #3
   138d8:	4638      	mov	r0, r7
   138da:	f000 fe4c 	bl	14576 <disk_ioctl>
   138de:	b920      	cbnz	r0, 138ea <f_mkfs+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   138e0:	9b06      	ldr	r3, [sp, #24]
   138e2:	3b01      	subs	r3, #1
   138e4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   138e8:	d301      	bcc.n	138ee <f_mkfs+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   138ea:	2301      	movs	r3, #1
   138ec:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   138ee:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   138f0:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   138f4:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   138f8:	444b      	add	r3, r9
   138fa:	f1c2 0200 	rsb	r2, r2, #0
   138fe:	ea03 0302 	and.w	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   13902:	eba3 0309 	sub.w	r3, r3, r9
   13906:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   13908:	d122      	bne.n	13950 <f_mkfs+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   1390a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   1390c:	449b      	add	fp, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   1390e:	441a      	add	r2, r3
   13910:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   13912:	9a07      	ldr	r2, [sp, #28]
   13914:	9900      	ldr	r1, [sp, #0]
   13916:	eba2 030b 	sub.w	r3, r2, fp
   1391a:	1a5b      	subs	r3, r3, r1
   1391c:	9903      	ldr	r1, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   1391e:	f1b8 0f02 	cmp.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   13922:	eba3 0301 	sub.w	r3, r3, r1
   13926:	fbb3 f3f5 	udiv	r3, r3, r5
   1392a:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   1392c:	d114      	bne.n	13958 <f_mkfs+0x150>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   1392e:	f640 73f5 	movw	r3, #4085	; 0xff5
   13932:	9904      	ldr	r1, [sp, #16]
   13934:	4299      	cmp	r1, r3
   13936:	f240 81d5 	bls.w	13ce4 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1393a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   1393e:	bf34      	ite	cc
   13940:	f04f 0904 	movcc.w	r9, #4
   13944:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   13948:	b34e      	cbz	r6, 1399e <f_mkfs+0x196>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   1394a:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   1394e:	e05d      	b.n	13a0c <f_mkfs+0x204>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   13950:	9a00      	ldr	r2, [sp, #0]
   13952:	441a      	add	r2, r3
   13954:	9200      	str	r2, [sp, #0]
   13956:	e7dc      	b.n	13912 <f_mkfs+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   13958:	f1b8 0f03 	cmp.w	r8, #3
   1395c:	d112      	bne.n	13984 <f_mkfs+0x17c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   1395e:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   13962:	9a04      	ldr	r2, [sp, #16]
   13964:	429a      	cmp	r2, r3
   13966:	f240 81bd 	bls.w	13ce4 <f_mkfs+0x4dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   1396a:	2e00      	cmp	r6, #0
   1396c:	f040 8167 	bne.w	13c3e <f_mkfs+0x436>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   13970:	f04f 090c 	mov.w	r9, #12
   13974:	e013      	b.n	1399e <f_mkfs+0x196>
   13976:	bf00      	nop
   13978:	2007c460 	.word	0x2007c460
   1397c:	00025eec 	.word	0x00025eec
   13980:	00025e92 	.word	0x00025e92
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   13984:	f1b8 0f01 	cmp.w	r8, #1
   13988:	d1d7      	bne.n	1393a <f_mkfs+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   1398a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   1398e:	bf34      	ite	cc
   13990:	f04f 0901 	movcc.w	r9, #1
   13994:	f04f 0906 	movcs.w	r9, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   13998:	2e00      	cmp	r6, #0
   1399a:	f040 816b 	bne.w	13c74 <f_mkfs+0x46c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   1399e:	f104 0638 	add.w	r6, r4, #56	; 0x38
   139a2:	f44f 7200 	mov.w	r2, #512	; 0x200
   139a6:	2100      	movs	r1, #0
   139a8:	4630      	mov	r0, r6
   139aa:	f7fe f8c1 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   139ae:	21fe      	movs	r1, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   139b0:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   139b4:	f8dd e01c 	ldr.w	lr, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   139b8:	f884 11fb 	strb.w	r1, [r4, #507]	; 0x1fb
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   139bc:	eb0a 010e 	add.w	r1, sl, lr
   139c0:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   139c4:	0888      	lsrs	r0, r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   139c6:	9106      	str	r1, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   139c8:	f884 11fd 	strb.w	r1, [r4, #509]	; 0x1fd
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   139cc:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   139ce:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   139d0:	2200      	movs	r2, #0
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   139d2:	f8c4 11fe 	str.w	r1, [r4, #510]	; 0x1fe
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   139d6:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   139da:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   139de:	f884 01fc 	strb.w	r0, [r4, #508]	; 0x1fc
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   139e2:	f8a4 1236 	strh.w	r1, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   139e6:	f884 31f7 	strb.w	r3, [r4, #503]	; 0x1f7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   139ea:	f884 31f8 	strb.w	r3, [r4, #504]	; 0x1f8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   139ee:	f884 21f9 	strb.w	r2, [r4, #505]	; 0x1f9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   139f2:	f884 91fa 	strb.w	r9, [r4, #506]	; 0x1fa
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   139f6:	f8c4 e202 	str.w	lr, [r4, #514]	; 0x202
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   139fa:	4631      	mov	r1, r6
   139fc:	4638      	mov	r0, r7
   139fe:	f000 fd9e 	bl	1453e <disk_write>
   13a02:	2800      	cmp	r0, #0
   13a04:	f47f af2f 	bne.w	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   13a08:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13a0c:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13a10:	f44f 7200 	mov.w	r2, #512	; 0x200
   13a14:	2100      	movs	r1, #0
   13a16:	4630      	mov	r0, r6
   13a18:	f7fe f88a 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13a1c:	220b      	movs	r2, #11
   13a1e:	49b2      	ldr	r1, [pc, #712]	; (13ce8 <f_mkfs+0x4e0>)
   13a20:	4630      	mov	r0, r6
   13a22:	f7fe f869 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13a26:	f44f 7300 	mov.w	r3, #512	; 0x200
   13a2a:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13a2e:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13a30:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13a34:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13a38:	9b02      	ldr	r3, [sp, #8]
   13a3a:	bf18      	it	ne
   13a3c:	f44f 7300 	movne.w	r3, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13a40:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13a44:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   13a48:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   13a4a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   13a4e:	f884 904d 	strb.w	r9, [r4, #77]	; 0x4d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   13a52:	f8a4 3049 	strh.w	r3, [r4, #73]	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   13a56:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13a58:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   13a5c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   13a60:	bf34      	ite	cc
   13a62:	f8a4 304b 	strhcc.w	r3, [r4, #75]	; 0x4b
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   13a66:	65a3      	strcs	r3, [r4, #88]	; 0x58
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13a68:	233f      	movs	r3, #63	; 0x3f
   13a6a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
   13a6e:	23ff      	movs	r3, #255	; 0xff
   13a70:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13a74:	f001 f81e 	bl	14ab4 <get_fattime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   13a78:	f1b8 0f03 	cmp.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   13a7c:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   13a7e:	f040 809c 	bne.w	13bba <f_mkfs+0x3b2>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13a82:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13a84:	2213      	movs	r2, #19
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13a86:	65e3      	str	r3, [r4, #92]	; 0x5c
   13a88:	2302      	movs	r3, #2
   13a8a:	6663      	str	r3, [r4, #100]	; 0x64
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13a8c:	2301      	movs	r3, #1
   13a8e:	f8a4 3068 	strh.w	r3, [r4, #104]	; 0x68
   13a92:	2306      	movs	r3, #6
   13a94:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   13a98:	2380      	movs	r3, #128	; 0x80
   13a9a:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13a9e:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13aa0:	4992      	ldr	r1, [pc, #584]	; (13cec <f_mkfs+0x4e4>)
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13aa2:	f8c4 007b 	str.w	r0, [r4, #123]	; 0x7b
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   13aa6:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   13aaa:	f104 007f 	add.w	r0, r4, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13aae:	f7fe f823 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13ab2:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   13ab6:	4652      	mov	r2, sl
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13ab8:	f8a4 3236 	strh.w	r3, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4156
   13abc:	4631      	mov	r1, r6
   13abe:	2301      	movs	r3, #1
   13ac0:	4638      	mov	r0, r7
   13ac2:	f000 fd3c 	bl	1453e <disk_write>
   13ac6:	2800      	cmp	r0, #0
   13ac8:	f47f aecd 	bne.w	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   13acc:	f1b8 0f03 	cmp.w	r8, #3
   13ad0:	d106      	bne.n	13ae0 <f_mkfs+0x2d8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   13ad2:	2301      	movs	r3, #1
   13ad4:	f10a 0206 	add.w	r2, sl, #6
   13ad8:	4631      	mov	r1, r6
   13ada:	4638      	mov	r0, r7
   13adc:	f000 fd2f 	bl	1453e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   13ae0:	f44f 7200 	mov.w	r2, #512	; 0x200
   13ae4:	2100      	movs	r1, #0
   13ae6:	4630      	mov	r0, r6
   13ae8:	f7fe f822 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   13aec:	f1b8 0f03 	cmp.w	r8, #3
   13af0:	d074      	beq.n	13bdc <f_mkfs+0x3d4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   13af2:	f1b8 0f01 	cmp.w	r8, #1
   13af6:	4b7e      	ldr	r3, [pc, #504]	; (13cf0 <f_mkfs+0x4e8>)
   13af8:	bf18      	it	ne
   13afa:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   13afe:	ea43 0309 	orr.w	r3, r3, r9
   13b02:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13b04:	63a3      	str	r3, [r4, #56]	; 0x38
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   13b06:	9b01      	ldr	r3, [sp, #4]
   13b08:	4631      	mov	r1, r6
   13b0a:	f103 0901 	add.w	r9, r3, #1
   13b0e:	9a01      	ldr	r2, [sp, #4]
   13b10:	2301      	movs	r3, #1
   13b12:	4638      	mov	r0, r7
   13b14:	f000 fd13 	bl	1453e <disk_write>
   13b18:	4601      	mov	r1, r0
   13b1a:	2800      	cmp	r0, #0
   13b1c:	f47f aea3 	bne.w	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   13b20:	f44f 7200 	mov.w	r2, #512	; 0x200
   13b24:	4630      	mov	r0, r6
   13b26:	f7fe f803 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13b2a:	2301      	movs	r3, #1
   13b2c:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   13b2e:	9b06      	ldr	r3, [sp, #24]
   13b30:	9a00      	ldr	r2, [sp, #0]
   13b32:	429a      	cmp	r2, r3
   13b34:	d85d      	bhi.n	13bf2 <f_mkfs+0x3ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   13b36:	9b03      	ldr	r3, [sp, #12]
   13b38:	464a      	mov	r2, r9
   13b3a:	f1b8 0f03 	cmp.w	r8, #3
   13b3e:	bf18      	it	ne
   13b40:	461d      	movne	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   13b42:	444d      	add	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   13b44:	2301      	movs	r3, #1
   13b46:	4631      	mov	r1, r6
   13b48:	4638      	mov	r0, r7
   13b4a:	f102 0b01 	add.w	fp, r2, #1
   13b4e:	f000 fcf6 	bl	1453e <disk_write>
   13b52:	2800      	cmp	r0, #0
   13b54:	f47f ae87 	bne.w	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   13b58:	45ab      	cmp	fp, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   13b5a:	465a      	mov	r2, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   13b5c:	d1f2      	bne.n	13b44 <f_mkfs+0x33c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   13b5e:	f1b8 0f03 	cmp.w	r8, #3
   13b62:	d121      	bne.n	13ba8 <f_mkfs+0x3a0>
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13b64:	4b63      	ldr	r3, [pc, #396]	; (13cf4 <f_mkfs+0x4ec>)
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13b66:	4631      	mov	r1, r6
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13b68:	63a3      	str	r3, [r4, #56]	; 0x38
   13b6a:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   13b6e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   13b72:	3320      	adds	r3, #32
   13b74:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13b78:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13b7a:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   13b7c:	3b01      	subs	r3, #1
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13b7e:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   13b82:	2302      	movs	r3, #2
   13b84:	f8c4 3224 	str.w	r3, [r4, #548]	; 0x224
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13b88:	f64a 2355 	movw	r3, #43605	; 0xaa55
   13b8c:	f8a4 3236 	strh.w	r3, [r4, #566]	; 0x236
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   13b90:	2301      	movs	r3, #1
   13b92:	eb0a 0203 	add.w	r2, sl, r3
   13b96:	f000 fcd2 	bl	1453e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   13b9a:	2301      	movs	r3, #1
   13b9c:	f10a 0207 	add.w	r2, sl, #7
   13ba0:	4631      	mov	r1, r6
   13ba2:	4638      	mov	r0, r7
   13ba4:	f000 fccb 	bl	1453e <disk_write>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   13ba8:	2200      	movs	r2, #0
   13baa:	4638      	mov	r0, r7
   13bac:	4611      	mov	r1, r2
   13bae:	f000 fce2 	bl	14576 <disk_ioctl>
   13bb2:	3000      	adds	r0, #0
   13bb4:	bf18      	it	ne
   13bb6:	2001      	movne	r0, #1
   13bb8:	e656      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   13bba:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13bbe:	f8c4 005f 	str.w	r0, [r4, #95]	; 0x5f
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4150
   13bc2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   13bc6:	2380      	movs	r3, #128	; 0x80
   13bc8:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13bcc:	2329      	movs	r3, #41	; 0x29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13bce:	2213      	movs	r2, #19
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   13bd0:	f884 305e 	strb.w	r3, [r4, #94]	; 0x5e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   13bd4:	4948      	ldr	r1, [pc, #288]	; (13cf8 <f_mkfs+0x4f0>)
   13bd6:	f104 0063 	add.w	r0, r4, #99	; 0x63
   13bda:	e768      	b.n	13aae <f_mkfs+0x2a6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   13bdc:	f069 03ff 	orn	r3, r9, #255	; 0xff
   13be0:	9306      	str	r3, [sp, #24]
ST_DWORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:338
   13be2:	63a3      	str	r3, [r4, #56]	; 0x38
   13be4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13be8:	63e3      	str	r3, [r4, #60]	; 0x3c
   13bea:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   13bee:	6423      	str	r3, [r4, #64]	; 0x40
   13bf0:	e789      	b.n	13b06 <f_mkfs+0x2fe>
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   13bf2:	2301      	movs	r3, #1
   13bf4:	464a      	mov	r2, r9
   13bf6:	4631      	mov	r1, r6
   13bf8:	4638      	mov	r0, r7
   13bfa:	f109 0b01 	add.w	fp, r9, #1
   13bfe:	f000 fc9e 	bl	1453e <disk_write>
   13c02:	2800      	cmp	r0, #0
   13c04:	f47f ae2f 	bne.w	13866 <f_mkfs+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13c08:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   13c0a:	46d9      	mov	r9, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   13c0c:	3301      	adds	r3, #1
   13c0e:	9306      	str	r3, [sp, #24]
   13c10:	e78d      	b.n	13b2e <f_mkfs+0x326>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   13c12:	200b      	movs	r0, #11
   13c14:	e628      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   13c16:	2013      	movs	r0, #19
   13c18:	e626      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   13c1a:	200c      	movs	r0, #12
   13c1c:	e624      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   13c1e:	2003      	movs	r0, #3
   13c20:	e622      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   13c22:	200a      	movs	r0, #10
   13c24:	e620      	b.n	13868 <f_mkfs+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   13c26:	009b      	lsls	r3, r3, #2
   13c28:	f203 2307 	addw	r3, r3, #519	; 0x207
   13c2c:	0a5b      	lsrs	r3, r3, #9
   13c2e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13c30:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   13c32:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   13c36:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   13c38:	f04f 0b20 	mov.w	fp, #32
   13c3c:	e043      	b.n	13cc6 <f_mkfs+0x4be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13c3e:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13c42:	f44f 7200 	mov.w	r2, #512	; 0x200
   13c46:	2100      	movs	r1, #0
   13c48:	4630      	mov	r0, r6
   13c4a:	f7fd ff71 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13c4e:	220b      	movs	r2, #11
   13c50:	4925      	ldr	r1, [pc, #148]	; (13ce8 <f_mkfs+0x4e0>)
   13c52:	4630      	mov	r0, r6
   13c54:	f7fd ff50 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13c58:	f44f 7300 	mov.w	r3, #512	; 0x200
   13c5c:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13c60:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13c62:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13c66:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13c6a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13c6e:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13c72:	e6ea      	b.n	13a4a <f_mkfs+0x242>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   13c74:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   13c78:	f44f 7200 	mov.w	r2, #512	; 0x200
   13c7c:	2100      	movs	r1, #0
   13c7e:	4630      	mov	r0, r6
   13c80:	f7fd ff56 	bl	11b30 <mem_set>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   13c84:	220b      	movs	r2, #11
   13c86:	4918      	ldr	r1, [pc, #96]	; (13ce8 <f_mkfs+0x4e0>)
   13c88:	4630      	mov	r0, r6
   13c8a:	f7fd ff35 	bl	11af8 <mem_cpy>
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13c8e:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   13c92:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
ST_WORD():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.h:337
   13c96:	f8a4 3043 	strh.w	r3, [r4, #67]	; 0x43
f_mkfs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   13c9a:	f8a4 b046 	strh.w	fp, [r4, #70]	; 0x46
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   13c9e:	f884 8048 	strb.w	r8, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   13ca2:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   13ca6:	e6cf      	b.n	13a48 <f_mkfs+0x240>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   13ca8:	f04f 0801 	mov.w	r8, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   13cac:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   13cb0:	3301      	adds	r3, #1
   13cb2:	085b      	lsrs	r3, r3, #1
   13cb4:	3303      	adds	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   13cb6:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   13cba:	0a5b      	lsrs	r3, r3, #9
   13cbc:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13cbe:	2320      	movs	r3, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   13cc0:	f04f 0b01 	mov.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   13cc4:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   13cc6:	eb0b 030a 	add.w	r3, fp, sl
   13cca:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   13ccc:	9a03      	ldr	r2, [sp, #12]
   13cce:	9b00      	ldr	r3, [sp, #0]
   13cd0:	eb03 0902 	add.w	r9, r3, r2
   13cd4:	9b01      	ldr	r3, [sp, #4]
   13cd6:	4499      	add	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   13cd8:	eba5 030a 	sub.w	r3, r5, sl
   13cdc:	444b      	add	r3, r9
   13cde:	4299      	cmp	r1, r3
   13ce0:	f4bf adf8 	bcs.w	138d4 <f_mkfs+0xcc>
   13ce4:	200e      	movs	r0, #14
   13ce6:	e5bf      	b.n	13868 <f_mkfs+0x60>
   13ce8:	00025ea8 	.word	0x00025ea8
   13cec:	00025eb4 	.word	0x00025eb4
   13cf0:	00ffff00 	.word	0x00ffff00
   13cf4:	41615252 	.word	0x41615252
   13cf8:	00025ec8 	.word	0x00025ec8

00013cfc <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   13cfc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13cfe:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   13d00:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   13d02:	f005 f8f7 	bl	18ef4 <xQueueCreateMutex>
   13d06:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   13d08:	3000      	adds	r0, #0
   13d0a:	bf18      	it	ne
   13d0c:	2001      	movne	r0, #1
   13d0e:	bd10      	pop	{r4, pc}

00013d10 <ff_del_syncobj>:
ff_del_syncobj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   13d10:	2001      	movs	r0, #1
   13d12:	4770      	bx	lr

00013d14 <ff_req_grant>:
ff_req_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   13d14:	b510      	push	{r4, lr}
   13d16:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13d18:	f005 ff66 	bl	19be8 <xTaskGetSchedulerState>
   13d1c:	2802      	cmp	r0, #2
   13d1e:	d10a      	bne.n	13d36 <ff_req_grant+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   13d20:	2300      	movs	r3, #0
   13d22:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13d26:	4619      	mov	r1, r3
   13d28:	4620      	mov	r0, r4
   13d2a:	f005 f969 	bl	19000 <xQueueGenericReceive>
   13d2e:	1e43      	subs	r3, r0, #1
   13d30:	4258      	negs	r0, r3
   13d32:	4158      	adcs	r0, r3
   13d34:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   13d36:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   13d38:	bd10      	pop	{r4, pc}

00013d3a <ff_rel_grant>:
ff_rel_grant():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   13d3a:	b510      	push	{r4, lr}
   13d3c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   13d3e:	f005 ff53 	bl	19be8 <xTaskGetSchedulerState>
   13d42:	2802      	cmp	r0, #2
   13d44:	d107      	bne.n	13d56 <ff_rel_grant+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13d46:	2300      	movs	r3, #0
   13d48:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   13d4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   13d4e:	461a      	mov	r2, r3
   13d50:	4619      	mov	r1, r3
   13d52:	f005 b84d 	b.w	18df0 <xQueueGenericSend>
   13d56:	bd10      	pop	{r4, pc}

00013d58 <ff_convert>:
ff_convert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   13d58:	287f      	cmp	r0, #127	; 0x7f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   13d5a:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   13d5c:	d916      	bls.n	13d8c <ff_convert+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   13d5e:	b131      	cbz	r1, 13d6e <ff_convert+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13d60:	28ff      	cmp	r0, #255	; 0xff
   13d62:	d812      	bhi.n	13d8a <ff_convert+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   13d64:	4b0a      	ldr	r3, [pc, #40]	; (13d90 <ff_convert+0x38>)
   13d66:	3880      	subs	r0, #128	; 0x80
   13d68:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   13d6c:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   13d6e:	4a08      	ldr	r2, [pc, #32]	; (13d90 <ff_convert+0x38>)
   13d70:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   13d74:	b28b      	uxth	r3, r1
   13d76:	4284      	cmp	r4, r0
   13d78:	d003      	beq.n	13d82 <ff_convert+0x2a>
   13d7a:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   13d7c:	2980      	cmp	r1, #128	; 0x80
   13d7e:	d1f7      	bne.n	13d70 <ff_convert+0x18>
   13d80:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   13d82:	f103 0080 	add.w	r0, r3, #128	; 0x80
   13d86:	b2c0      	uxtb	r0, r0
   13d88:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   13d8a:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   13d8c:	bd10      	pop	{r4, pc}
   13d8e:	bf00      	nop
   13d90:	00025f02 	.word	0x00025f02

00013d94 <ff_wtoupper>:
ff_wtoupper():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13d94:	2300      	movs	r3, #0
   13d96:	4906      	ldr	r1, [pc, #24]	; (13db0 <ff_wtoupper+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   13d98:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   13d9c:	b122      	cbz	r2, 13da8 <ff_wtoupper+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   13d9e:	4282      	cmp	r2, r0
   13da0:	d103      	bne.n	13daa <ff_wtoupper+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   13da2:	4a04      	ldr	r2, [pc, #16]	; (13db4 <ff_wtoupper+0x20>)
   13da4:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   13da8:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   13daa:	3301      	adds	r3, #1
   13dac:	e7f4      	b.n	13d98 <ff_wtoupper+0x4>
   13dae:	bf00      	nop
   13db0:	00026002 	.word	0x00026002
   13db4:	000261e2 	.word	0x000261e2

00013db8 <sys_get_uptime_ms>:
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   13db8:	b508      	push	{r3, lr}
   13dba:	f7fc fb6f 	bl	1049c <sys_get_uptime_us>
   13dbe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13dc2:	2300      	movs	r3, #0
   13dc4:	f00a fc0c 	bl	1e5e0 <__aeabi_uldivmod>
   13dc8:	bd08      	pop	{r3, pc}
   13dca:	Address 0x0000000000013dca is out of bounds.


00013dcc <ssp1_set_max_clock>:
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   13dcc:	b510      	push	{r4, lr}
   13dce:	4604      	mov	r4, r0
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   13dd0:	f7fc fcf2 	bl	107b8 <sys_get_cpu_clock>
   13dd4:	4b07      	ldr	r3, [pc, #28]	; (13df4 <ssp1_set_max_clock+0x28>)
   13dd6:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   13dda:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13ddc:	fbb0 f2f3 	udiv	r2, r0, r3
   13de0:	4294      	cmp	r4, r2
   13de2:	d302      	bcc.n	13dea <ssp1_set_max_clock+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   13de4:	4a04      	ldr	r2, [pc, #16]	; (13df8 <ssp1_set_max_clock+0x2c>)
   13de6:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   13de8:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   13dea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   13dee:	d0f9      	beq.n	13de4 <ssp1_set_max_clock+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   13df0:	3302      	adds	r3, #2
   13df2:	e7f3      	b.n	13ddc <ssp1_set_max_clock+0x10>
   13df4:	000f4240 	.word	0x000f4240
   13df8:	40030000 	.word	0x40030000

00013dfc <ssp1_exchange_byte>:
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13dfc:	4b03      	ldr	r3, [pc, #12]	; (13e0c <ssp1_exchange_byte+0x10>)
   13dfe:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13e00:	68da      	ldr	r2, [r3, #12]
   13e02:	06d2      	lsls	r2, r2, #27
   13e04:	d4fc      	bmi.n	13e00 <ssp1_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13e06:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   13e08:	b2c0      	uxtb	r0, r0
   13e0a:	4770      	bx	lr
   13e0c:	40030000 	.word	0x40030000

00013e10 <wait_ready>:
wait_ready():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   13e10:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   13e12:	f7ff ffd1 	bl	13db8 <sys_get_uptime_ms>
   13e16:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   13e1a:	20ff      	movs	r0, #255	; 0xff
   13e1c:	f7ff ffee 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13e20:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13e22:	20ff      	movs	r0, #255	; 0xff
   13e24:	f7ff ffea 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13e28:	28ff      	cmp	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13e2a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13e2c:	d005      	beq.n	13e3a <wait_ready+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   13e2e:	f7ff ffc3 	bl	13db8 <sys_get_uptime_ms>
   13e32:	42a9      	cmp	r1, r5
   13e34:	bf08      	it	eq
   13e36:	42a0      	cmpeq	r0, r4
   13e38:	d3f3      	bcc.n	13e22 <wait_ready+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   13e3a:	4630      	mov	r0, r6
   13e3c:	bd70      	pop	{r4, r5, r6, pc}
   13e3e:	Address 0x0000000000013e3e is out of bounds.


00013e40 <power_off>:
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   13e40:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13e42:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   13e46:	4c05      	ldr	r4, [pc, #20]	; (13e5c <power_off+0x1c>)
   13e48:	61e5      	str	r5, [r4, #28]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   13e4a:	f7ff ffe1 	bl	13e10 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   13e4e:	4a04      	ldr	r2, [pc, #16]	; (13e60 <power_off+0x20>)
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13e50:	61a5      	str	r5, [r4, #24]
power_off():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:88
   13e52:	7813      	ldrb	r3, [r2, #0]
   13e54:	f043 0301 	orr.w	r3, r3, #1
   13e58:	7013      	strb	r3, [r2, #0]
   13e5a:	bd38      	pop	{r3, r4, r5, pc}
   13e5c:	2009c020 	.word	0x2009c020
   13e60:	2007c095 	.word	0x2007c095

00013e64 <rcvr_datablock>:
rcvr_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   13e64:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   13e68:	4606      	mov	r6, r0
   13e6a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   13e6c:	f7ff ffa4 	bl	13db8 <sys_get_uptime_ms>
   13e70:	3064      	adds	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13e72:	4680      	mov	r8, r0
   13e74:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   13e78:	20ff      	movs	r0, #255	; 0xff
   13e7a:	f7ff ffbf 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13e7e:	28ff      	cmp	r0, #255	; 0xff
   13e80:	d108      	bne.n	13e94 <rcvr_datablock+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   13e82:	f7ff ff99 	bl	13db8 <sys_get_uptime_ms>
   13e86:	4549      	cmp	r1, r9
   13e88:	bf08      	it	eq
   13e8a:	4540      	cmpeq	r0, r8
   13e8c:	d3f4      	bcc.n	13e78 <rcvr_datablock+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   13e8e:	2000      	movs	r0, #0
   13e90:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   13e94:	28fe      	cmp	r0, #254	; 0xfe
   13e96:	d1fa      	bne.n	13e8e <rcvr_datablock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13e98:	2d10      	cmp	r5, #16
   13e9a:	d90e      	bls.n	13eba <rcvr_datablock+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   13e9c:	2200      	movs	r2, #0
   13e9e:	f44f 7100 	mov.w	r1, #512	; 0x200
   13ea2:	4630      	mov	r0, r6
   13ea4:	f004 fb9c 	bl	185e0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   13ea8:	20ff      	movs	r0, #255	; 0xff
   13eaa:	f7ff ffa7 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   13eae:	20ff      	movs	r0, #255	; 0xff
   13eb0:	f7ff ffa4 	bl	13dfc <ssp1_exchange_byte>
   13eb4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   13eb6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   13eba:	1d34      	adds	r4, r6, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13ebc:	3504      	adds	r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   13ebe:	20ff      	movs	r0, #255	; 0xff
   13ec0:	f7ff ff9c 	bl	13dfc <ssp1_exchange_byte>
   13ec4:	f804 0c04 	strb.w	r0, [r4, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   13ec8:	20ff      	movs	r0, #255	; 0xff
   13eca:	f7ff ff97 	bl	13dfc <ssp1_exchange_byte>
   13ece:	f804 0c03 	strb.w	r0, [r4, #-3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   13ed2:	20ff      	movs	r0, #255	; 0xff
   13ed4:	f7ff ff92 	bl	13dfc <ssp1_exchange_byte>
   13ed8:	f804 0c02 	strb.w	r0, [r4, #-2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   13edc:	20ff      	movs	r0, #255	; 0xff
   13ede:	f7ff ff8d 	bl	13dfc <ssp1_exchange_byte>
   13ee2:	3404      	adds	r4, #4
   13ee4:	f804 0c05 	strb.w	r0, [r4, #-5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   13ee8:	1b2b      	subs	r3, r5, r4
   13eea:	42de      	cmn	r6, r3
   13eec:	d1e7      	bne.n	13ebe <rcvr_datablock+0x5a>
   13eee:	e7db      	b.n	13ea8 <rcvr_datablock+0x44>

00013ef0 <xmit_datablock>:
xmit_datablock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   13ef0:	b570      	push	{r4, r5, r6, lr}
   13ef2:	4606      	mov	r6, r0
   13ef4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   13ef6:	f7ff ff8b 	bl	13e10 <wait_ready>
   13efa:	28ff      	cmp	r0, #255	; 0xff
   13efc:	4604      	mov	r4, r0
   13efe:	d119      	bne.n	13f34 <xmit_datablock+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   13f00:	4628      	mov	r0, r5
   13f02:	f7ff ff7b 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   13f06:	2dfd      	cmp	r5, #253	; 0xfd
   13f08:	d016      	beq.n	13f38 <xmit_datablock+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   13f0a:	4622      	mov	r2, r4
   13f0c:	f44f 7100 	mov.w	r1, #512	; 0x200
   13f10:	4630      	mov	r0, r6
   13f12:	f004 fb65 	bl	185e0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   13f16:	4620      	mov	r0, r4
   13f18:	f7ff ff70 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   13f1c:	4620      	mov	r0, r4
   13f1e:	f7ff ff6d 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   13f22:	4620      	mov	r0, r4
   13f24:	f7ff ff6a 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13f28:	f000 001f 	and.w	r0, r0, #31
   13f2c:	1f43      	subs	r3, r0, #5
   13f2e:	4258      	negs	r0, r3
   13f30:	4158      	adcs	r0, r3
   13f32:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   13f34:	2000      	movs	r0, #0
   13f36:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   13f38:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   13f3a:	bd70      	pop	{r4, r5, r6, pc}

00013f3c <send_cmd>:
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   13f3c:	0602      	lsls	r2, r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   13f3e:	b538      	push	{r3, r4, r5, lr}
   13f40:	4604      	mov	r4, r0
   13f42:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   13f44:	d507      	bpl.n	13f56 <send_cmd+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   13f46:	2100      	movs	r1, #0
   13f48:	2077      	movs	r0, #119	; 0x77
   13f4a:	f7ff fff7 	bl	13f3c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   13f4e:	2801      	cmp	r0, #1
   13f50:	d836      	bhi.n	13fc0 <send_cmd+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   13f52:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   13f56:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13f5a:	4b1a      	ldr	r3, [pc, #104]	; (13fc4 <send_cmd+0x88>)
   13f5c:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13f5e:	61da      	str	r2, [r3, #28]
send_cmd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   13f60:	f7ff ff56 	bl	13e10 <wait_ready>
   13f64:	28ff      	cmp	r0, #255	; 0xff
   13f66:	d12a      	bne.n	13fbe <send_cmd+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   13f68:	4620      	mov	r0, r4
   13f6a:	f7ff ff47 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   13f6e:	0e28      	lsrs	r0, r5, #24
   13f70:	f7ff ff44 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   13f74:	f3c5 4007 	ubfx	r0, r5, #16, #8
   13f78:	f7ff ff40 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   13f7c:	f3c5 2007 	ubfx	r0, r5, #8, #8
   13f80:	f7ff ff3c 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   13f84:	b2e8      	uxtb	r0, r5
   13f86:	f7ff ff39 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   13f8a:	2c40      	cmp	r4, #64	; 0x40
   13f8c:	d015      	beq.n	13fba <send_cmd+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   13f8e:	2c48      	cmp	r4, #72	; 0x48
   13f90:	bf14      	ite	ne
   13f92:	2001      	movne	r0, #1
   13f94:	2087      	moveq	r0, #135	; 0x87
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   13f96:	f7ff ff31 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   13f9a:	2c4c      	cmp	r4, #76	; 0x4c
   13f9c:	d102      	bne.n	13fa4 <send_cmd+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   13f9e:	20ff      	movs	r0, #255	; 0xff
   13fa0:	f7ff ff2c 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   13fa4:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   13fa6:	20ff      	movs	r0, #255	; 0xff
   13fa8:	f7ff ff28 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   13fac:	0603      	lsls	r3, r0, #24
   13fae:	d507      	bpl.n	13fc0 <send_cmd+0x84>
   13fb0:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   13fb2:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   13fb6:	d1f6      	bne.n	13fa6 <send_cmd+0x6a>
   13fb8:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   13fba:	2095      	movs	r0, #149	; 0x95
   13fbc:	e7eb      	b.n	13f96 <send_cmd+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   13fbe:	20ff      	movs	r0, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   13fc0:	bd38      	pop	{r3, r4, r5, pc}
   13fc2:	bf00      	nop
   13fc4:	2009c020 	.word	0x2009c020

00013fc8 <sd_update_card_status>:
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   13fc8:	4a06      	ldr	r2, [pc, #24]	; (13fe4 <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   13fca:	4907      	ldr	r1, [pc, #28]	; (13fe8 <sd_update_card_status+0x20>)
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13fcc:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   13fce:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:587
   13fd0:	b2db      	uxtb	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   13fd2:	0149      	lsls	r1, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   13fd4:	bf54      	ite	pl
   13fd6:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   13fda:	f043 0303 	orrmi.w	r3, r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   13fde:	7013      	strb	r3, [r2, #0]
   13fe0:	4770      	bx	lr
   13fe2:	bf00      	nop
   13fe4:	2007c095 	.word	0x2007c095
   13fe8:	2009c020 	.word	0x2009c020

00013fec <sd_initialize>:
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   13fec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   13ff0:	f7ff ffea 	bl	13fc8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   13ff4:	4b55      	ldr	r3, [pc, #340]	; (1414c <sd_initialize+0x160>)
   13ff6:	781a      	ldrb	r2, [r3, #0]
   13ff8:	461e      	mov	r6, r3
   13ffa:	f012 0f02 	tst.w	r2, #2
   13ffe:	d004      	beq.n	1400a <sd_initialize+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   14000:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   14002:	b2c0      	uxtb	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   14004:	b003      	add	sp, #12
   14006:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   1400a:	2001      	movs	r0, #1
   1400c:	f7ff fede 	bl	13dcc <ssp1_set_max_clock>
   14010:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   14012:	20ff      	movs	r0, #255	; 0xff
   14014:	3c01      	subs	r4, #1
   14016:	f7ff fef1 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   1401a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   1401e:	d1f8      	bne.n	14012 <sd_initialize+0x26>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   14020:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   14024:	4f4a      	ldr	r7, [pc, #296]	; (14150 <sd_initialize+0x164>)
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   14026:	4621      	mov	r1, r4
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
   14028:	61fb      	str	r3, [r7, #28]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:245
   1402a:	2040      	movs	r0, #64	; 0x40
   1402c:	f7ff ff86 	bl	13f3c <send_cmd>
   14030:	2801      	cmp	r0, #1
   14032:	4680      	mov	r8, r0
   14034:	d013      	beq.n	1405e <sd_initialize+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   14036:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   1403a:	4b46      	ldr	r3, [pc, #280]	; (14154 <sd_initialize+0x168>)
   1403c:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   14040:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   14044:	61bb      	str	r3, [r7, #24]
sd_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   14046:	f1b8 0f00 	cmp.w	r8, #0
   1404a:	d07b      	beq.n	14144 <sd_initialize+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   1404c:	7833      	ldrb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   1404e:	2018      	movs	r0, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   14050:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   14054:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   14056:	f7ff feb9 	bl	13dcc <ssp1_set_max_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   1405a:	7830      	ldrb	r0, [r6, #0]
   1405c:	e7d1      	b.n	14002 <sd_initialize+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   1405e:	f7ff feab 	bl	13db8 <sys_get_uptime_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   14062:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   14066:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   1406a:	2048      	movs	r0, #72	; 0x48
   1406c:	f7ff ff66 	bl	13f3c <send_cmd>
   14070:	2801      	cmp	r0, #1
   14072:	d140      	bne.n	140f6 <sd_initialize+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   14074:	f10d 0804 	add.w	r8, sp, #4
   14078:	20ff      	movs	r0, #255	; 0xff
   1407a:	f7ff febf 	bl	13dfc <ssp1_exchange_byte>
   1407e:	f808 0004 	strb.w	r0, [r8, r4]
   14082:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   14084:	2c04      	cmp	r4, #4
   14086:	d1f7      	bne.n	14078 <sd_initialize+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   14088:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1408c:	2b01      	cmp	r3, #1
   1408e:	d1d2      	bne.n	14036 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   14090:	f89d 3007 	ldrb.w	r3, [sp, #7]
   14094:	2baa      	cmp	r3, #170	; 0xaa
   14096:	d1ce      	bne.n	14036 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   14098:	462c      	mov	r4, r5
   1409a:	2500      	movs	r5, #0
   1409c:	f7ff fe8c 	bl	13db8 <sys_get_uptime_ms>
   140a0:	42a9      	cmp	r1, r5
   140a2:	bf08      	it	eq
   140a4:	42a0      	cmpeq	r0, r4
   140a6:	d31e      	bcc.n	140e6 <sd_initialize+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   140a8:	f7ff fe86 	bl	13db8 <sys_get_uptime_ms>
   140ac:	42a9      	cmp	r1, r5
   140ae:	bf08      	it	eq
   140b0:	42a0      	cmpeq	r0, r4
   140b2:	d2c0      	bcs.n	14036 <sd_initialize+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   140b4:	2100      	movs	r1, #0
   140b6:	207a      	movs	r0, #122	; 0x7a
   140b8:	f7ff ff40 	bl	13f3c <send_cmd>
   140bc:	2800      	cmp	r0, #0
   140be:	d1ba      	bne.n	14036 <sd_initialize+0x4a>
   140c0:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   140c2:	20ff      	movs	r0, #255	; 0xff
   140c4:	f7ff fe9a 	bl	13dfc <ssp1_exchange_byte>
   140c8:	f808 0001 	strb.w	r0, [r8, r1]
   140cc:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   140ce:	2904      	cmp	r1, #4
   140d0:	d1f7      	bne.n	140c2 <sd_initialize+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   140d2:	f89d 3004 	ldrb.w	r3, [sp, #4]
   140d6:	f013 0f40 	tst.w	r3, #64	; 0x40
   140da:	bf14      	ite	ne
   140dc:	f04f 080c 	movne.w	r8, #12
   140e0:	f04f 0804 	moveq.w	r8, #4
   140e4:	e7a9      	b.n	1403a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   140e6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   140ea:	20e9      	movs	r0, #233	; 0xe9
   140ec:	f7ff ff26 	bl	13f3c <send_cmd>
   140f0:	2800      	cmp	r0, #0
   140f2:	d1d3      	bne.n	1409c <sd_initialize+0xb0>
   140f4:	e7d8      	b.n	140a8 <sd_initialize+0xbc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   140f6:	4621      	mov	r1, r4
   140f8:	20e9      	movs	r0, #233	; 0xe9
   140fa:	f7ff ff1f 	bl	13f3c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   140fe:	2802      	cmp	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   14100:	462c      	mov	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   14102:	bf36      	itet	cc
   14104:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   14108:	f04f 0941 	movcs.w	r9, #65	; 0x41
   1410c:	f04f 0802 	movcc.w	r8, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   14110:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   14112:	f7ff fe51 	bl	13db8 <sys_get_uptime_ms>
   14116:	42a9      	cmp	r1, r5
   14118:	bf08      	it	eq
   1411a:	42a0      	cmpeq	r0, r4
   1411c:	d30b      	bcc.n	14136 <sd_initialize+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   1411e:	f7ff fe4b 	bl	13db8 <sys_get_uptime_ms>
   14122:	42a9      	cmp	r1, r5
   14124:	bf08      	it	eq
   14126:	42a0      	cmpeq	r0, r4
   14128:	d387      	bcc.n	1403a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   1412a:	f44f 7100 	mov.w	r1, #512	; 0x200
   1412e:	2050      	movs	r0, #80	; 0x50
   14130:	f7ff ff04 	bl	13f3c <send_cmd>
   14134:	e781      	b.n	1403a <sd_initialize+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   14136:	2100      	movs	r1, #0
   14138:	4648      	mov	r0, r9
   1413a:	f7ff feff 	bl	13f3c <send_cmd>
   1413e:	2800      	cmp	r0, #0
   14140:	d1e7      	bne.n	14112 <sd_initialize+0x126>
   14142:	e7ec      	b.n	1411e <sd_initialize+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   14144:	f7ff fe7c 	bl	13e40 <power_off>
   14148:	e787      	b.n	1405a <sd_initialize+0x6e>
   1414a:	bf00      	nop
   1414c:	2007c095 	.word	0x2007c095
   14150:	2009c020 	.word	0x2009c020
   14154:	2007c46a 	.word	0x2007c46a

00014158 <sd_status>:
sd_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   14158:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   1415a:	f7ff ff35 	bl	13fc8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   1415e:	4b01      	ldr	r3, [pc, #4]	; (14164 <sd_status+0xc>)
   14160:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   14162:	bd08      	pop	{r3, pc}
   14164:	2007c095 	.word	0x2007c095

00014168 <sd_read>:
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   14168:	b570      	push	{r4, r5, r6, lr}
   1416a:	4614      	mov	r4, r2
   1416c:	4606      	mov	r6, r0
   1416e:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   14170:	f7ff ff2a 	bl	13fc8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   14174:	2c00      	cmp	r4, #0
   14176:	d038      	beq.n	141ea <sd_read+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   14178:	4b1e      	ldr	r3, [pc, #120]	; (141f4 <sd_read+0x8c>)
   1417a:	781b      	ldrb	r3, [r3, #0]
   1417c:	07da      	lsls	r2, r3, #31
   1417e:	d436      	bmi.n	141ee <sd_read+0x86>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   14180:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   14184:	4d1c      	ldr	r5, [pc, #112]	; (141f8 <sd_read+0x90>)
   14186:	61ea      	str	r2, [r5, #28]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   14188:	4a1c      	ldr	r2, [pc, #112]	; (141fc <sd_read+0x94>)
   1418a:	7812      	ldrb	r2, [r2, #0]
   1418c:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   1418e:	bf58      	it	pl
   14190:	0240      	lslpl	r0, r0, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   14192:	2c01      	cmp	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   14194:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   14196:	d112      	bne.n	141be <sd_read+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   14198:	2051      	movs	r0, #81	; 0x51
   1419a:	f7ff fecf 	bl	13f3c <send_cmd>
   1419e:	b938      	cbnz	r0, 141b0 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   141a0:	f44f 7100 	mov.w	r1, #512	; 0x200
   141a4:	4630      	mov	r0, r6
   141a6:	f7ff fe5d 	bl	13e64 <rcvr_datablock>
   141aa:	fab0 f480 	clz	r4, r0
   141ae:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   141b0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   141b4:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   141b6:	61ab      	str	r3, [r5, #24]
sd_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:374
   141b8:	bf18      	it	ne
   141ba:	2001      	movne	r0, #1
   141bc:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   141be:	2052      	movs	r0, #82	; 0x52
   141c0:	f7ff febc 	bl	13f3c <send_cmd>
   141c4:	2800      	cmp	r0, #0
   141c6:	d1f3      	bne.n	141b0 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   141c8:	f44f 7100 	mov.w	r1, #512	; 0x200
   141cc:	4630      	mov	r0, r6
   141ce:	f7ff fe49 	bl	13e64 <rcvr_datablock>
   141d2:	b128      	cbz	r0, 141e0 <sd_read+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   141d4:	3c01      	subs	r4, #1
   141d6:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   141da:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   141de:	d1f3      	bne.n	141c8 <sd_read+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   141e0:	2100      	movs	r1, #0
   141e2:	204c      	movs	r0, #76	; 0x4c
   141e4:	f7ff feaa 	bl	13f3c <send_cmd>
   141e8:	e7e2      	b.n	141b0 <sd_read+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   141ea:	2004      	movs	r0, #4
   141ec:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   141ee:	2003      	movs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   141f0:	bd70      	pop	{r4, r5, r6, pc}
   141f2:	bf00      	nop
   141f4:	2007c095 	.word	0x2007c095
   141f8:	2009c020 	.word	0x2009c020
   141fc:	2007c46a 	.word	0x2007c46a

00014200 <sd_write>:
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   14200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14202:	4614      	mov	r4, r2
   14204:	4606      	mov	r6, r0
   14206:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   14208:	f7ff fede 	bl	13fc8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   1420c:	2c00      	cmp	r4, #0
   1420e:	d044      	beq.n	1429a <sd_write+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   14210:	4b25      	ldr	r3, [pc, #148]	; (142a8 <sd_write+0xa8>)
   14212:	781a      	ldrb	r2, [r3, #0]
   14214:	07d1      	lsls	r1, r2, #31
   14216:	d442      	bmi.n	1429e <sd_write+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   14218:	781b      	ldrb	r3, [r3, #0]
   1421a:	075a      	lsls	r2, r3, #29
   1421c:	d441      	bmi.n	142a2 <sd_write+0xa2>
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1421e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   14222:	4d22      	ldr	r5, [pc, #136]	; (142ac <sd_write+0xac>)
   14224:	61ea      	str	r2, [r5, #28]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   14226:	4a22      	ldr	r2, [pc, #136]	; (142b0 <sd_write+0xb0>)
   14228:	7812      	ldrb	r2, [r2, #0]
   1422a:	0713      	lsls	r3, r2, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   1422c:	bf58      	it	pl
   1422e:	027f      	lslpl	r7, r7, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   14230:	2c01      	cmp	r4, #1
   14232:	d112      	bne.n	1425a <sd_write+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   14234:	4639      	mov	r1, r7
   14236:	2058      	movs	r0, #88	; 0x58
   14238:	f7ff fe80 	bl	13f3c <send_cmd>
   1423c:	bb58      	cbnz	r0, 14296 <sd_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   1423e:	21fe      	movs	r1, #254	; 0xfe
   14240:	4630      	mov	r0, r6
   14242:	f7ff fe55 	bl	13ef0 <xmit_datablock>
   14246:	fab0 f480 	clz	r4, r0
   1424a:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1424c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   14250:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   14252:	61ab      	str	r3, [r5, #24]
sd_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:424
   14254:	bf18      	it	ne
   14256:	2001      	movne	r0, #1
   14258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   1425a:	f012 0f06 	tst.w	r2, #6
   1425e:	d003      	beq.n	14268 <sd_write+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   14260:	4621      	mov	r1, r4
   14262:	20d7      	movs	r0, #215	; 0xd7
   14264:	f7ff fe6a 	bl	13f3c <send_cmd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   14268:	4639      	mov	r1, r7
   1426a:	2059      	movs	r0, #89	; 0x59
   1426c:	f7ff fe66 	bl	13f3c <send_cmd>
   14270:	2800      	cmp	r0, #0
   14272:	d1eb      	bne.n	1424c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   14274:	21fc      	movs	r1, #252	; 0xfc
   14276:	4630      	mov	r0, r6
   14278:	f7ff fe3a 	bl	13ef0 <xmit_datablock>
   1427c:	b128      	cbz	r0, 1428a <sd_write+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   1427e:	3c01      	subs	r4, #1
   14280:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   14284:	f506 7600 	add.w	r6, r6, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   14288:	d1f4      	bne.n	14274 <sd_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   1428a:	21fd      	movs	r1, #253	; 0xfd
   1428c:	2000      	movs	r0, #0
   1428e:	f7ff fe2f 	bl	13ef0 <xmit_datablock>
   14292:	2800      	cmp	r0, #0
   14294:	d1da      	bne.n	1424c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   14296:	2401      	movs	r4, #1
   14298:	e7d8      	b.n	1424c <sd_write+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   1429a:	2004      	movs	r0, #4
   1429c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   1429e:	2003      	movs	r0, #3
   142a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   142a2:	2002      	movs	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   142a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   142a6:	bf00      	nop
   142a8:	2007c095 	.word	0x2007c095
   142ac:	2009c020 	.word	0x2009c020
   142b0:	2007c46a 	.word	0x2007c46a

000142b4 <sd_ioctl>:
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   142b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   142b6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   142b8:	f7ff fe86 	bl	13fc8 <sd_update_card_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   142bc:	2805      	cmp	r0, #5
   142be:	d11a      	bne.n	142f6 <sd_ioctl+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   142c0:	782b      	ldrb	r3, [r5, #0]
   142c2:	2b01      	cmp	r3, #1
   142c4:	d015      	beq.n	142f2 <sd_ioctl+0x3e>
   142c6:	d305      	bcc.n	142d4 <sd_ioctl+0x20>
   142c8:	2b02      	cmp	r3, #2
   142ca:	d00b      	beq.n	142e4 <sd_ioctl+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   142cc:	2404      	movs	r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   142ce:	4620      	mov	r0, r4
   142d0:	b004      	add	sp, #16
   142d2:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   142d4:	4b7b      	ldr	r3, [pc, #492]	; (144c4 <sd_ioctl+0x210>)
   142d6:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   142d8:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   142dc:	d109      	bne.n	142f2 <sd_ioctl+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   142de:	f7ff fdaf 	bl	13e40 <power_off>
   142e2:	e7f4      	b.n	142ce <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:60
   142e4:	4b77      	ldr	r3, [pc, #476]	; (144c4 <sd_ioctl+0x210>)
   142e6:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   142e8:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   142ec:	f3c3 6380 	ubfx	r3, r3, #26, #1
   142f0:	706b      	strb	r3, [r5, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   142f2:	2400      	movs	r4, #0
   142f4:	e7eb      	b.n	142ce <sd_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   142f6:	4b74      	ldr	r3, [pc, #464]	; (144c8 <sd_ioctl+0x214>)
   142f8:	781b      	ldrb	r3, [r3, #0]
   142fa:	07db      	lsls	r3, r3, #31
   142fc:	f100 80e0 	bmi.w	144c0 <sd_ioctl+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   14300:	280e      	cmp	r0, #14
   14302:	f200 80db 	bhi.w	144bc <sd_ioctl+0x208>
   14306:	e8df f000 	tbb	[pc, r0]
   1430a:	1708      	.short	0x1708
   1430c:	d9d95a55 	.word	0xd9d95a55
   14310:	d9d9d9d9 	.word	0xd9d9d9d9
   14314:	bdbaaba7 	.word	0xbdbaaba7
   14318:	cd          	.byte	0xcd
   14319:	00          	.byte	0x00
board_io_sd_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1431a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1431e:	4b69      	ldr	r3, [pc, #420]	; (144c4 <sd_ioctl+0x210>)
   14320:	61da      	str	r2, [r3, #28]
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   14322:	f7ff fd75 	bl	13e10 <wait_ready>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   14326:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   1432a:	bf18      	it	ne
   1432c:	2401      	movne	r4, #1
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1432e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   14332:	4b64      	ldr	r3, [pc, #400]	; (144c4 <sd_ioctl+0x210>)
   14334:	619a      	str	r2, [r3, #24]
   14336:	e7ca      	b.n	142ce <sd_ioctl+0x1a>
sd_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   14338:	2100      	movs	r1, #0
   1433a:	2049      	movs	r0, #73	; 0x49
   1433c:	f7ff fdfe 	bl	13f3c <send_cmd>
   14340:	4604      	mov	r4, r0
   14342:	b108      	cbz	r0, 14348 <sd_ioctl+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   14344:	2401      	movs	r4, #1
   14346:	e7f2      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   14348:	2110      	movs	r1, #16
   1434a:	4668      	mov	r0, sp
   1434c:	f7ff fd8a 	bl	13e64 <rcvr_datablock>
   14350:	2800      	cmp	r0, #0
   14352:	d0f7      	beq.n	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   14354:	f89d 3000 	ldrb.w	r3, [sp]
   14358:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1435c:	099b      	lsrs	r3, r3, #6
   1435e:	2b01      	cmp	r3, #1
   14360:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14364:	d106      	bne.n	14374 <sd_ioctl+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   14366:	1c5a      	adds	r2, r3, #1
   14368:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   1436c:	b292      	uxth	r2, r2
   1436e:	0292      	lsls	r2, r2, #10
   14370:	602a      	str	r2, [r5, #0]
   14372:	e7dc      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14374:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14378:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1437c:	0092      	lsls	r2, r2, #2
   1437e:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   14382:	f89d 1006 	ldrb.w	r1, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   14386:	3201      	adds	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   14388:	0289      	lsls	r1, r1, #10
   1438a:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1438e:	440a      	add	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14390:	f89d 1005 	ldrb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   14394:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   14396:	f001 010f 	and.w	r1, r1, #15
   1439a:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   1439e:	3102      	adds	r1, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   143a0:	f003 0306 	and.w	r3, r3, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   143a4:	440b      	add	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   143a6:	b2db      	uxtb	r3, r3
   143a8:	b292      	uxth	r2, r2
   143aa:	3b09      	subs	r3, #9
   143ac:	fa02 f303 	lsl.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   143b0:	602b      	str	r3, [r5, #0]
   143b2:	e7bc      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   143b4:	f44f 7300 	mov.w	r3, #512	; 0x200
   143b8:	802b      	strh	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   143ba:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   143bc:	e7b7      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   143be:	4e43      	ldr	r6, [pc, #268]	; (144cc <sd_ioctl+0x218>)
   143c0:	7831      	ldrb	r1, [r6, #0]
   143c2:	f011 0104 	ands.w	r1, r1, #4
   143c6:	d01c      	beq.n	14402 <sd_ioctl+0x14e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   143c8:	2100      	movs	r1, #0
   143ca:	20cd      	movs	r0, #205	; 0xcd
   143cc:	f7ff fdb6 	bl	13f3c <send_cmd>
   143d0:	2800      	cmp	r0, #0
   143d2:	d1b7      	bne.n	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   143d4:	20ff      	movs	r0, #255	; 0xff
   143d6:	f7ff fd11 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   143da:	2110      	movs	r1, #16
   143dc:	4668      	mov	r0, sp
   143de:	f7ff fd41 	bl	13e64 <rcvr_datablock>
   143e2:	2800      	cmp	r0, #0
   143e4:	d0ae      	beq.n	14344 <sd_ioctl+0x90>
   143e6:	2430      	movs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   143e8:	20ff      	movs	r0, #255	; 0xff
   143ea:	f7ff fd07 	bl	13dfc <ssp1_exchange_byte>
   143ee:	1e60      	subs	r0, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   143f0:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   143f4:	d1f8      	bne.n	143e8 <sd_ioctl+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   143f6:	f89d 300a 	ldrb.w	r3, [sp, #10]
   143fa:	091a      	lsrs	r2, r3, #4
   143fc:	2310      	movs	r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   143fe:	4093      	lsls	r3, r2
   14400:	e7d6      	b.n	143b0 <sd_ioctl+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   14402:	2049      	movs	r0, #73	; 0x49
   14404:	f7ff fd9a 	bl	13f3c <send_cmd>
   14408:	4604      	mov	r4, r0
   1440a:	2800      	cmp	r0, #0
   1440c:	d19a      	bne.n	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   1440e:	2110      	movs	r1, #16
   14410:	4668      	mov	r0, sp
   14412:	f7ff fd27 	bl	13e64 <rcvr_datablock>
   14416:	2800      	cmp	r0, #0
   14418:	d094      	beq.n	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   1441a:	7830      	ldrb	r0, [r6, #0]
   1441c:	f89d 300a 	ldrb.w	r3, [sp, #10]
   14420:	f010 0002 	ands.w	r0, r0, #2
   14424:	f89d 100b 	ldrb.w	r1, [sp, #11]
   14428:	d00a      	beq.n	14440 <sd_ioctl+0x18c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   1442a:	005b      	lsls	r3, r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   1442c:	f89d 200d 	ldrb.w	r2, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   14430:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   14434:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   14438:	0992      	lsrs	r2, r2, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   1443a:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   1443c:	3a01      	subs	r2, #1
   1443e:	e7de      	b.n	143fe <sd_ioctl+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   14440:	00ca      	lsls	r2, r1, #3
   14442:	f002 0218 	and.w	r2, r2, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   14446:	f3c3 0384 	ubfx	r3, r3, #2, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   1444a:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   1444e:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   14450:	fb02 3303 	mla	r3, r2, r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   14454:	602b      	str	r3, [r5, #0]
   14456:	e7b0      	b.n	143ba <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   14458:	4b1c      	ldr	r3, [pc, #112]	; (144cc <sd_ioctl+0x218>)
   1445a:	781b      	ldrb	r3, [r3, #0]
   1445c:	702b      	strb	r3, [r5, #0]
   1445e:	e7ac      	b.n	143ba <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   14460:	2100      	movs	r1, #0
   14462:	2049      	movs	r0, #73	; 0x49
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   14464:	f7ff fd6a 	bl	13f3c <send_cmd>
   14468:	2800      	cmp	r0, #0
   1446a:	f47f af6b 	bne.w	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   1446e:	2110      	movs	r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   14470:	4628      	mov	r0, r5
   14472:	f7ff fcf7 	bl	13e64 <rcvr_datablock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   14476:	fab0 f480 	clz	r4, r0
   1447a:	0964      	lsrs	r4, r4, #5
   1447c:	e757      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   1447e:	2100      	movs	r1, #0
   14480:	204a      	movs	r0, #74	; 0x4a
   14482:	e7ef      	b.n	14464 <sd_ioctl+0x1b0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   14484:	2100      	movs	r1, #0
   14486:	207a      	movs	r0, #122	; 0x7a
   14488:	f7ff fd58 	bl	13f3c <send_cmd>
   1448c:	2800      	cmp	r0, #0
   1448e:	f47f af59 	bne.w	14344 <sd_ioctl+0x90>
   14492:	1d29      	adds	r1, r5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   14494:	20ff      	movs	r0, #255	; 0xff
   14496:	f7ff fcb1 	bl	13dfc <ssp1_exchange_byte>
   1449a:	f805 0b01 	strb.w	r0, [r5], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   1449e:	428d      	cmp	r5, r1
   144a0:	d1f8      	bne.n	14494 <sd_ioctl+0x1e0>
   144a2:	e78a      	b.n	143ba <sd_ioctl+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   144a4:	2100      	movs	r1, #0
   144a6:	20cd      	movs	r0, #205	; 0xcd
   144a8:	f7ff fd48 	bl	13f3c <send_cmd>
   144ac:	2800      	cmp	r0, #0
   144ae:	f47f af49 	bne.w	14344 <sd_ioctl+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   144b2:	20ff      	movs	r0, #255	; 0xff
   144b4:	f7ff fca2 	bl	13dfc <ssp1_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   144b8:	2140      	movs	r1, #64	; 0x40
   144ba:	e7d9      	b.n	14470 <sd_ioctl+0x1bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   144bc:	2404      	movs	r4, #4
   144be:	e736      	b.n	1432e <sd_ioctl+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   144c0:	2403      	movs	r4, #3
   144c2:	e704      	b.n	142ce <sd_ioctl+0x1a>
   144c4:	2009c020 	.word	0x2009c020
   144c8:	2007c095 	.word	0x2007c095
   144cc:	2007c46a 	.word	0x2007c46a

000144d0 <disk_initialize>:
disk_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   144d0:	b510      	push	{r4, lr}
   144d2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   144d4:	f004 f8e4 	bl	186a0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   144d8:	b11c      	cbz	r4, 144e2 <disk_initialize+0x12>
   144da:	2c01      	cmp	r4, #1
   144dc:	d008      	beq.n	144f0 <disk_initialize+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   144de:	2404      	movs	r4, #4
   144e0:	e002      	b.n	144e8 <disk_initialize+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   144e2:	f000 f957 	bl	14794 <flash_initialize>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   144e6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   144e8:	f004 f8f2 	bl	186d0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   144ec:	4620      	mov	r0, r4
   144ee:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   144f0:	f7ff fd7c 	bl	13fec <sd_initialize>
   144f4:	e7f7      	b.n	144e6 <disk_initialize+0x16>

000144f6 <disk_status>:
disk_status():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   144f6:	b128      	cbz	r0, 14504 <disk_status+0xe>
   144f8:	2801      	cmp	r0, #1
   144fa:	d001      	beq.n	14500 <disk_status+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   144fc:	2004      	movs	r0, #4
   144fe:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   14500:	f7ff be2a 	b.w	14158 <sd_status>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   14504:	4770      	bx	lr

00014506 <disk_read>:
disk_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   14506:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14508:	4607      	mov	r7, r0
   1450a:	460c      	mov	r4, r1
   1450c:	4615      	mov	r5, r2
   1450e:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14510:	f004 f8c6 	bl	186a0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   14514:	b11f      	cbz	r7, 1451e <disk_read+0x18>
   14516:	2f01      	cmp	r7, #1
   14518:	d00b      	beq.n	14532 <disk_read+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   1451a:	2404      	movs	r4, #4
   1451c:	e005      	b.n	1452a <disk_read+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   1451e:	4632      	mov	r2, r6
   14520:	4629      	mov	r1, r5
   14522:	4620      	mov	r0, r4
   14524:	f000 f982 	bl	1482c <flash_read_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   14528:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   1452a:	f004 f8d1 	bl	186d0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   1452e:	4620      	mov	r0, r4
   14530:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   14532:	4632      	mov	r2, r6
   14534:	4629      	mov	r1, r5
   14536:	4620      	mov	r0, r4
   14538:	f7ff fe16 	bl	14168 <sd_read>
   1453c:	e7f4      	b.n	14528 <disk_read+0x22>

0001453e <disk_write>:
disk_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   1453e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14540:	4607      	mov	r7, r0
   14542:	460c      	mov	r4, r1
   14544:	4615      	mov	r5, r2
   14546:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   14548:	f004 f8aa 	bl	186a0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   1454c:	b11f      	cbz	r7, 14556 <disk_write+0x18>
   1454e:	2f01      	cmp	r7, #1
   14550:	d00b      	beq.n	1456a <disk_write+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   14552:	2404      	movs	r4, #4
   14554:	e005      	b.n	14562 <disk_write+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   14556:	4632      	mov	r2, r6
   14558:	4629      	mov	r1, r5
   1455a:	4620      	mov	r0, r4
   1455c:	f000 f98e 	bl	1487c <flash_write_sectors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   14560:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   14562:	f004 f8b5 	bl	186d0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   14566:	4620      	mov	r0, r4
   14568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   1456a:	4632      	mov	r2, r6
   1456c:	4629      	mov	r1, r5
   1456e:	4620      	mov	r0, r4
   14570:	f7ff fe46 	bl	14200 <sd_write>
   14574:	e7f4      	b.n	14560 <disk_write+0x22>

00014576 <disk_ioctl>:
disk_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   14576:	b570      	push	{r4, r5, r6, lr}
   14578:	4606      	mov	r6, r0
   1457a:	460c      	mov	r4, r1
   1457c:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   1457e:	f004 f88f 	bl	186a0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   14582:	b11e      	cbz	r6, 1458c <disk_ioctl+0x16>
   14584:	2e01      	cmp	r6, #1
   14586:	d00a      	beq.n	1459e <disk_ioctl+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   14588:	2404      	movs	r4, #4
   1458a:	e004      	b.n	14596 <disk_ioctl+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   1458c:	4629      	mov	r1, r5
   1458e:	4620      	mov	r0, r4
   14590:	f000 f99a 	bl	148c8 <flash_ioctl>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   14594:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   14596:	f004 f89b 	bl	186d0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   1459a:	4620      	mov	r0, r4
   1459c:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   1459e:	4629      	mov	r1, r5
   145a0:	4620      	mov	r0, r4
   145a2:	f7ff fe87 	bl	142b4 <sd_ioctl>
   145a6:	e7f5      	b.n	14594 <disk_ioctl+0x1e>

000145a8 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   145a8:	4b05      	ldr	r3, [pc, #20]	; (145c0 <flash_get_mem_size_bytes()+0x18>)
   145aa:	781b      	ldrb	r3, [r3, #0]
   145ac:	3b25      	subs	r3, #37	; 0x25
   145ae:	b2db      	uxtb	r3, r3
   145b0:	2b03      	cmp	r3, #3
   145b2:	bf9a      	itte	ls
   145b4:	4a03      	ldrls	r2, [pc, #12]	; (145c4 <flash_get_mem_size_bytes()+0x1c>)
   145b6:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   145ba:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   145bc:	4770      	bx	lr
   145be:	bf00      	nop
   145c0:	2007c470 	.word	0x2007c470
   145c4:	000263cc 	.word	0x000263cc

000145c8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   145c8:	4b1b      	ldr	r3, [pc, #108]	; (14638 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   145ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   145ce:	881d      	ldrh	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   145d0:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   145d2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   145d6:	460f      	mov	r7, r1
   145d8:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   145da:	d103      	bne.n	145e4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   145dc:	462a      	mov	r2, r5
   145de:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   145e0:	4638      	mov	r0, r7
   145e2:	e00b      	b.n	145fc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   145e4:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   145e8:	d10c      	bne.n	14604 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   145ea:	462a      	mov	r2, r5
   145ec:	4621      	mov	r1, r4
   145ee:	4638      	mov	r0, r7
   145f0:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   145f2:	462a      	mov	r2, r5
   145f4:	f504 7180 	add.w	r1, r4, #256	; 0x100
   145f8:	f507 7080 	add.w	r0, r7, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   145fc:	4633      	mov	r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   145fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   14602:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   14604:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   14608:	d104      	bne.n	14614 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   1460a:	0a51      	lsrs	r1, r2, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   1460c:	0289      	lsls	r1, r1, #10
   1460e:	f44f 7200 	mov.w	r2, #512	; 0x200
   14612:	e7e5      	b.n	145e0 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   14614:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   14618:	d10b      	bne.n	14632 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   1461a:	0a14      	lsrs	r4, r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   1461c:	0261      	lsls	r1, r4, #9
   1461e:	f44f 7280 	mov.w	r2, #256	; 0x100
   14622:	4638      	mov	r0, r7
   14624:	47b0      	blx	r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   14626:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   1462a:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   1462c:	0261      	lsls	r1, r4, #9
   1462e:	18b8      	adds	r0, r7, r2
   14630:	e7e4      	b.n	145fc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   14632:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14636:	bf00      	nop
   14638:	2007c472 	.word	0x2007c472

0001463c <ssp1_exchange_data>:
ssp1_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   1463c:	b510      	push	{r4, lr}
   1463e:	4b29      	ldr	r3, [pc, #164]	; (146e4 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   14640:	2900      	cmp	r1, #0
   14642:	dd4d      	ble.n	146e0 <ssp1_exchange_data+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   14644:	2907      	cmp	r1, #7
   14646:	7802      	ldrb	r2, [r0, #0]
   14648:	dd29      	ble.n	1469e <ssp1_exchange_data+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1464a:	609a      	str	r2, [r3, #8]
   1464c:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   1464e:	3908      	subs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   14650:	609a      	str	r2, [r3, #8]
   14652:	7882      	ldrb	r2, [r0, #2]
   14654:	609a      	str	r2, [r3, #8]
   14656:	78c2      	ldrb	r2, [r0, #3]
   14658:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1465a:	7902      	ldrb	r2, [r0, #4]
   1465c:	609a      	str	r2, [r3, #8]
   1465e:	7942      	ldrb	r2, [r0, #5]
   14660:	609a      	str	r2, [r3, #8]
   14662:	7982      	ldrb	r2, [r0, #6]
   14664:	609a      	str	r2, [r3, #8]
   14666:	79c4      	ldrb	r4, [r0, #7]
   14668:	f100 0208 	add.w	r2, r0, #8
   1466c:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   1466e:	699c      	ldr	r4, [r3, #24]
   14670:	0764      	lsls	r4, r4, #29
   14672:	d5fc      	bpl.n	1466e <ssp1_exchange_data+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   14674:	689c      	ldr	r4, [r3, #8]
   14676:	7004      	strb	r4, [r0, #0]
   14678:	689c      	ldr	r4, [r3, #8]
   1467a:	7044      	strb	r4, [r0, #1]
   1467c:	689c      	ldr	r4, [r3, #8]
   1467e:	7084      	strb	r4, [r0, #2]
   14680:	689c      	ldr	r4, [r3, #8]
   14682:	70c4      	strb	r4, [r0, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   14684:	68dc      	ldr	r4, [r3, #12]
   14686:	06e4      	lsls	r4, r4, #27
   14688:	d4fc      	bmi.n	14684 <ssp1_exchange_data+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1468a:	689c      	ldr	r4, [r3, #8]
   1468c:	7104      	strb	r4, [r0, #4]
   1468e:	689c      	ldr	r4, [r3, #8]
   14690:	7144      	strb	r4, [r0, #5]
   14692:	689c      	ldr	r4, [r3, #8]
   14694:	7184      	strb	r4, [r0, #6]
   14696:	689c      	ldr	r4, [r3, #8]
   14698:	71c4      	strb	r4, [r0, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1469a:	4610      	mov	r0, r2
   1469c:	e7d0      	b.n	14640 <ssp1_exchange_data+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   1469e:	2903      	cmp	r1, #3
   146a0:	dd14      	ble.n	146cc <ssp1_exchange_data+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   146a2:	609a      	str	r2, [r3, #8]
   146a4:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   146a6:	3904      	subs	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   146a8:	609a      	str	r2, [r3, #8]
   146aa:	7882      	ldrb	r2, [r0, #2]
   146ac:	609a      	str	r2, [r3, #8]
   146ae:	78c4      	ldrb	r4, [r0, #3]
   146b0:	1d02      	adds	r2, r0, #4
   146b2:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   146b4:	68dc      	ldr	r4, [r3, #12]
   146b6:	06e4      	lsls	r4, r4, #27
   146b8:	d4fc      	bmi.n	146b4 <ssp1_exchange_data+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   146ba:	689c      	ldr	r4, [r3, #8]
   146bc:	7004      	strb	r4, [r0, #0]
   146be:	689c      	ldr	r4, [r3, #8]
   146c0:	7044      	strb	r4, [r0, #1]
   146c2:	689c      	ldr	r4, [r3, #8]
   146c4:	7084      	strb	r4, [r0, #2]
   146c6:	689c      	ldr	r4, [r3, #8]
   146c8:	70c4      	strb	r4, [r0, #3]
   146ca:	e7e6      	b.n	1469a <ssp1_exchange_data+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   146cc:	1c44      	adds	r4, r0, #1
   146ce:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   146d0:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   146d2:	68da      	ldr	r2, [r3, #12]
   146d4:	06d2      	lsls	r2, r2, #27
   146d6:	d4fc      	bmi.n	146d2 <ssp1_exchange_data+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   146d8:	689a      	ldr	r2, [r3, #8]
   146da:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   146dc:	4620      	mov	r0, r4
   146de:	e7af      	b.n	14640 <ssp1_exchange_data+0x4>
   146e0:	bd10      	pop	{r4, pc}
   146e2:	bf00      	nop
   146e4:	40030000 	.word	0x40030000

000146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   146e8:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   146ea:	0c0b      	lsrs	r3, r1, #16
   146ec:	f88d 3005 	strb.w	r3, [sp, #5]
   146f0:	f88d 1007 	strb.w	r1, [sp, #7]
   146f4:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   146f6:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   146f8:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   146fc:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   14700:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14704:	f7ff ff9a 	bl	1463c <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   14708:	b003      	add	sp, #12
   1470a:	f85d fb04 	ldr.w	pc, [sp], #4
   1470e:	Address 0x000000000001470e is out of bounds.


00014710 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   14710:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   14712:	2303      	movs	r3, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14714:	2540      	movs	r5, #64	; 0x40
   14716:	4c0e      	ldr	r4, [pc, #56]	; (14750 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   14718:	4617      	mov	r7, r2
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1471a:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   1471c:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   14720:	0c0b      	lsrs	r3, r1, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   14722:	f88d 3005 	strb.w	r3, [sp, #5]
   14726:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   1472a:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1472c:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   1472e:	4606      	mov	r6, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14730:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   14734:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14738:	f7ff ff80 	bl	1463c <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   1473c:	2200      	movs	r2, #0
   1473e:	4639      	mov	r1, r7
   14740:	4630      	mov	r0, r6
   14742:	f003 ff4d 	bl	185e0 <ssp1_dma_transfer_block>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14746:	61a5      	str	r5, [r4, #24]
   14748:	61a5      	str	r5, [r4, #24]
   1474a:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   1474c:	b003      	add	sp, #12
   1474e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14750:	2009c000 	.word	0x2009c000

00014754 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14754:	2240      	movs	r2, #64	; 0x40
   14756:	4b0d      	ldr	r3, [pc, #52]	; (1478c <flash_wait_for_ready()+0x38>)
   14758:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1475a:	22d7      	movs	r2, #215	; 0xd7
   1475c:	4b0c      	ldr	r3, [pc, #48]	; (14790 <flash_wait_for_ready()+0x3c>)
   1475e:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14760:	68da      	ldr	r2, [r3, #12]
   14762:	06d2      	lsls	r2, r2, #27
   14764:	d4fc      	bmi.n	14760 <flash_wait_for_ready()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   14766:	4a0a      	ldr	r2, [pc, #40]	; (14790 <flash_wait_for_ready()+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   14768:	689b      	ldr	r3, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1476a:	21ff      	movs	r1, #255	; 0xff
   1476c:	4613      	mov	r3, r2
   1476e:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   14770:	68d8      	ldr	r0, [r3, #12]
   14772:	06c0      	lsls	r0, r0, #27
   14774:	d4fc      	bmi.n	14770 <flash_wait_for_ready()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   14776:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   14778:	f010 0f80 	tst.w	r0, #128	; 0x80
   1477c:	d0f7      	beq.n	1476e <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1477e:	2240      	movs	r2, #64	; 0x40
   14780:	4b02      	ldr	r3, [pc, #8]	; (1478c <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   14782:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   14784:	619a      	str	r2, [r3, #24]
   14786:	619a      	str	r2, [r3, #24]
   14788:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   1478a:	4770      	bx	lr
   1478c:	2009c000 	.word	0x2009c000
   14790:	40030000 	.word	0x40030000

00014794 <flash_initialize>:
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   14794:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   14796:	f7ff ffdd 	bl	14754 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   1479a:	2300      	movs	r3, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   1479c:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   1479e:	4c1e      	ldr	r4, [pc, #120]	; (14818 <flash_initialize+0x84>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147a0:	4e1e      	ldr	r6, [pc, #120]	; (1481c <flash_initialize+0x88>)
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   147a2:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   147a4:	4b1e      	ldr	r3, [pc, #120]	; (14820 <flash_initialize+0x8c>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   147a6:	61f7      	str	r7, [r6, #28]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   147a8:	881a      	ldrh	r2, [r3, #0]
   147aa:	789b      	ldrb	r3, [r3, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   147ac:	4605      	mov	r5, r0
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147ae:	2103      	movs	r1, #3
   147b0:	a801      	add	r0, sp, #4
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   147b2:	f8ad 2004 	strh.w	r2, [sp, #4]
   147b6:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   147ba:	f7ff ff3f 	bl	1463c <ssp1_exchange_data>
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   147be:	f89d 2005 	ldrb.w	r2, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   147c2:	f89d 3006 	ldrb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   147c6:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   147c8:	61b7      	str	r7, [r6, #24]
   147ca:	61b7      	str	r7, [r6, #24]
   147cc:	61b7      	str	r7, [r6, #24]
flash_initialize():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   147ce:	d115      	bne.n	147fc <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   147d0:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   147d4:	2a03      	cmp	r2, #3
   147d6:	d811      	bhi.n	147fc <flash_initialize+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   147d8:	4a12      	ldr	r2, [pc, #72]	; (14824 <flash_initialize+0x90>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   147da:	2b25      	cmp	r3, #37	; 0x25
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   147dc:	7013      	strb	r3, [r2, #0]
   147de:	f005 0001 	and.w	r0, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   147e2:	d111      	bne.n	14808 <flash_initialize+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   147e4:	2800      	cmp	r0, #0
   147e6:	bf14      	ite	ne
   147e8:	f44f 7380 	movne.w	r3, #256	; 0x100
   147ec:	f44f 7384 	moveq.w	r3, #264	; 0x108
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   147f0:	8023      	strh	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   147f2:	f7ff fed9 	bl	145a8 <flash_get_mem_size_bytes()>
   147f6:	4b0c      	ldr	r3, [pc, #48]	; (14828 <flash_initialize+0x94>)
   147f8:	0a40      	lsrs	r0, r0, #9
   147fa:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   147fc:	8820      	ldrh	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   147fe:	fab0 f080 	clz	r0, r0
   14802:	0940      	lsrs	r0, r0, #5
   14804:	b003      	add	sp, #12
   14806:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   14808:	2800      	cmp	r0, #0
   1480a:	bf14      	ite	ne
   1480c:	f44f 7300 	movne.w	r3, #512	; 0x200
   14810:	f44f 7304 	moveq.w	r3, #528	; 0x210
   14814:	e7ec      	b.n	147f0 <flash_initialize+0x5c>
   14816:	bf00      	nop
   14818:	2007c472 	.word	0x2007c472
   1481c:	2009c000 	.word	0x2009c000
   14820:	000263c2 	.word	0x000263c2
   14824:	2007c470 	.word	0x2007c470
   14828:	2007c46c 	.word	0x2007c46c

0001482c <flash_read_sectors>:
flash_read_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   1482c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14830:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   14832:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14834:	4a0f      	ldr	r2, [pc, #60]	; (14874 <flash_read_sectors+0x48>)
   14836:	3b01      	subs	r3, #1
   14838:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   1483a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1483c:	4293      	cmp	r3, r2
   1483e:	d812      	bhi.n	14866 <flash_read_sectors+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   14840:	024d      	lsls	r5, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   14842:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   14844:	f7ff ff86 	bl	14754 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   14848:	f8df 802c 	ldr.w	r8, [pc, #44]	; 14878 <flash_read_sectors+0x4c>
   1484c:	1b2d      	subs	r5, r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1484e:	42be      	cmp	r6, r7
   14850:	eb04 0205 	add.w	r2, r4, r5
   14854:	da0a      	bge.n	1486c <flash_read_sectors+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   14856:	4621      	mov	r1, r4
   14858:	4640      	mov	r0, r8
   1485a:	f7ff feb5 	bl	145c8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1485e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   14862:	3601      	adds	r6, #1
   14864:	e7f3      	b.n	1484e <flash_read_sectors+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   14866:	2001      	movs	r0, #1
   14868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   1486c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   1486e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14872:	bf00      	nop
   14874:	2007c46c 	.word	0x2007c46c
   14878:	00014711 	.word	0x00014711

0001487c <flash_write_sectors>:
flash_write_sectors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1487c:	188b      	adds	r3, r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   1487e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14882:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   14884:	4a0e      	ldr	r2, [pc, #56]	; (148c0 <flash_write_sectors+0x44>)
   14886:	3b01      	subs	r3, #1
   14888:	6812      	ldr	r2, [r2, #0]
   1488a:	4293      	cmp	r3, r2
   1488c:	d811      	bhi.n	148b2 <flash_write_sectors+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   1488e:	4604      	mov	r4, r0
   14890:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   14892:	f8df 8030 	ldr.w	r8, [pc, #48]	; 148c4 <flash_write_sectors+0x48>
   14896:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1489a:	42be      	cmp	r6, r7
   1489c:	eb04 0205 	add.w	r2, r4, r5
   148a0:	da0a      	bge.n	148b8 <flash_write_sectors+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   148a2:	4621      	mov	r1, r4
   148a4:	4640      	mov	r0, r8
   148a6:	f7ff fe8f 	bl	145c8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   148aa:	f504 7400 	add.w	r4, r4, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   148ae:	3601      	adds	r6, #1
   148b0:	e7f3      	b.n	1489a <flash_write_sectors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   148b2:	2001      	movs	r0, #1
   148b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   148b8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   148ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   148be:	bf00      	nop
   148c0:	2007c46c 	.word	0x2007c46c
   148c4:	000149a9 	.word	0x000149a9

000148c8 <flash_ioctl>:
flash_ioctl():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   148c8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   148ca:	2807      	cmp	r0, #7
   148cc:	d805      	bhi.n	148da <flash_ioctl+0x12>
   148ce:	e8df f000 	tbb	[pc, r0]
   148d2:	0a06      	.short	0x0a06
   148d4:	0808130f 	.word	0x0808130f
   148d8:	0808      	.short	0x0808
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   148da:	2004      	movs	r0, #4
   148dc:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   148de:	f7ff ff39 	bl	14754 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   148e2:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   148e4:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   148e6:	f7ff fe5f 	bl	145a8 <flash_get_mem_size_bytes()>
   148ea:	0a40      	lsrs	r0, r0, #9
   148ec:	6008      	str	r0, [r1, #0]
   148ee:	e7f8      	b.n	148e2 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   148f0:	f44f 7300 	mov.w	r3, #512	; 0x200
   148f4:	800b      	strh	r3, [r1, #0]
   148f6:	e7f4      	b.n	148e2 <flash_ioctl+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   148f8:	2301      	movs	r3, #1
   148fa:	600b      	str	r3, [r1, #0]
   148fc:	e7f1      	b.n	148e2 <flash_ioctl+0x1a>
   148fe:	Address 0x00000000000148fe is out of bounds.


00014900 <flash_write_permanent_id>:
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   14900:	b570      	push	{r4, r5, r6, lr}
   14902:	b090      	sub	sp, #64	; 0x40
   14904:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   14906:	466a      	mov	r2, sp
   14908:	466e      	mov	r6, sp
   1490a:	f100 0540 	add.w	r5, r0, #64	; 0x40
   1490e:	4614      	mov	r4, r2
   14910:	6818      	ldr	r0, [r3, #0]
   14912:	6859      	ldr	r1, [r3, #4]
   14914:	3308      	adds	r3, #8
   14916:	c403      	stmia	r4!, {r0, r1}
   14918:	42ab      	cmp	r3, r5
   1491a:	4622      	mov	r2, r4
   1491c:	d1f7      	bne.n	1490e <flash_write_permanent_id+0xe>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   1491e:	2440      	movs	r4, #64	; 0x40
   14920:	4d07      	ldr	r5, [pc, #28]	; (14940 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   14922:	2100      	movs	r1, #0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14924:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   14926:	209b      	movs	r0, #155	; 0x9b
   14928:	f7ff fede 	bl	146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1492c:	4621      	mov	r1, r4
   1492e:	4630      	mov	r0, r6
   14930:	f7ff fe84 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14934:	61ac      	str	r4, [r5, #24]
   14936:	61ac      	str	r4, [r5, #24]
   14938:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   1493a:	b010      	add	sp, #64	; 0x40
   1493c:	bd70      	pop	{r4, r5, r6, pc}
   1493e:	bf00      	nop
   14940:	2009c000 	.word	0x2009c000

00014944 <flash_read_permanent_id>:
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   14944:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14946:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   14948:	4606      	mov	r6, r0
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   1494a:	4d07      	ldr	r5, [pc, #28]	; (14968 <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   1494c:	2100      	movs	r1, #0
   1494e:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14950:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   14952:	f7ff fec9 	bl	146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14956:	4621      	mov	r1, r4
   14958:	4630      	mov	r0, r6
   1495a:	f7ff fe6f 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1495e:	61ac      	str	r4, [r5, #24]
   14960:	61ac      	str	r4, [r5, #24]
   14962:	61ac      	str	r4, [r5, #24]
   14964:	bd70      	pop	{r4, r5, r6, pc}
   14966:	bf00      	nop
   14968:	2009c000 	.word	0x2009c000

0001496c <flash_get_page_count>:
flash_get_page_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   1496c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   1496e:	4b06      	ldr	r3, [pc, #24]	; (14988 <flash_get_page_count+0x1c>)
   14970:	8819      	ldrh	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   14972:	f031 011f 	bics.w	r1, r1, #31
   14976:	d004      	beq.n	14982 <flash_get_page_count+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   14978:	f7ff fe16 	bl	145a8 <flash_get_mem_size_bytes()>
   1497c:	fbb0 f0f1 	udiv	r0, r0, r1
   14980:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   14982:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   14984:	bd08      	pop	{r3, pc}
   14986:	bf00      	nop
   14988:	2007c472 	.word	0x2007c472

0001498c <flash_get_page_size>:
flash_get_page_size():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   1498c:	4b01      	ldr	r3, [pc, #4]	; (14994 <flash_get_page_size+0x8>)
   1498e:	8818      	ldrh	r0, [r3, #0]
   14990:	4770      	bx	lr
   14992:	bf00      	nop
   14994:	2007c472 	.word	0x2007c472

00014998 <flash_supports_metadata>:
flash_supports_metadata():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   14998:	4b02      	ldr	r3, [pc, #8]	; (149a4 <flash_supports_metadata+0xc>)
   1499a:	7818      	ldrb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   1499c:	3000      	adds	r0, #0
   1499e:	bf18      	it	ne
   149a0:	2001      	movne	r0, #1
   149a2:	4770      	bx	lr
   149a4:	2007c472 	.word	0x2007c472

000149a8 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   149a8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   149ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   149b0:	460f      	mov	r7, r1
   149b2:	4691      	mov	r9, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   149b4:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   149b6:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   149b8:	f7ff fecc 	bl	14754 <flash_wait_for_ready()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   149bc:	f7ff ffec 	bl	14998 <flash_supports_metadata>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   149c0:	4606      	mov	r6, r0
   149c2:	b1b8      	cbz	r0, 149f4 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   149c4:	2540      	movs	r5, #64	; 0x40
   149c6:	4c19      	ldr	r4, [pc, #100]	; (14a2c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   149c8:	4b19      	ldr	r3, [pc, #100]	; (14a30 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   149ca:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   149cc:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   149ce:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   149d0:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   149d4:	bf0c      	ite	eq
   149d6:	f44f 7180 	moveq.w	r1, #256	; 0x100
   149da:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   149de:	4339      	orrs	r1, r7
   149e0:	f7ff fe82 	bl	146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   149e4:	2104      	movs	r1, #4
   149e6:	eb0d 0001 	add.w	r0, sp, r1
   149ea:	f7ff fe27 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   149ee:	61a5      	str	r5, [r4, #24]
   149f0:	61a5      	str	r5, [r4, #24]
   149f2:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   149f4:	2340      	movs	r3, #64	; 0x40
   149f6:	4c0d      	ldr	r4, [pc, #52]	; (14a2c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   149f8:	4639      	mov	r1, r7
   149fa:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   149fc:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   149fe:	f7ff fe73 	bl	146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   14a02:	2201      	movs	r2, #1
   14a04:	4649      	mov	r1, r9
   14a06:	4640      	mov	r0, r8
   14a08:	f003 fdea 	bl	185e0 <ssp1_dma_transfer_block>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   14a0c:	b13e      	cbz	r6, 14a1e <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   14a0e:	9b01      	ldr	r3, [sp, #4]
   14a10:	a802      	add	r0, sp, #8
   14a12:	3301      	adds	r3, #1
   14a14:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14a18:	2104      	movs	r1, #4
   14a1a:	f7ff fe0f 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14a1e:	2340      	movs	r3, #64	; 0x40
   14a20:	61a3      	str	r3, [r4, #24]
   14a22:	61a3      	str	r3, [r4, #24]
   14a24:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   14a26:	b003      	add	sp, #12
   14a28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14a2c:	2009c000 	.word	0x2009c000
   14a30:	2007c472 	.word	0x2007c472

00014a34 <flash_get_page_write_count>:
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14a34:	4b12      	ldr	r3, [pc, #72]	; (14a80 <flash_get_page_write_count+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:410

uint32_t flash_get_page_write_count(uint32_t page_number)
{
   14a36:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   14a38:	881b      	ldrh	r3, [r3, #0]
   14a3a:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   14a3e:	bf0c      	ite	eq
   14a40:	f44f 7180 	moveq.w	r1, #256	; 0x100
   14a44:	f44f 7100 	movne.w	r1, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    /* Metadata is at the end of the page */
    const uint32_t page_addr = (page_number << FLASH_PAGENUM_BIT_OFFSET);
    const uint32_t meta_data_addr = flash_get_metadata_addr_from_pageaddr(page_addr);
    uint32_t write_counter = UINT32_MAX;
   14a48:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:136
    return (addr | byte_offset);
   14a4c:	ea41 2140 	orr.w	r1, r1, r0, lsl #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:414
    uint32_t write_counter = UINT32_MAX;
   14a50:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:416

    if (flash_supports_metadata())
   14a52:	f7ff ffa1 	bl	14998 <flash_supports_metadata>
   14a56:	b168      	cbz	r0, 14a74 <flash_get_page_write_count+0x40>
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14a58:	2540      	movs	r5, #64	; 0x40
   14a5a:	4c0a      	ldr	r4, [pc, #40]	; (14a84 <flash_get_page_write_count+0x50>)
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
    {
        CHIP_SELECT_OP()
        {
            flash_send_op_addr(opcode_read_cont_lowfreq, meta_data_addr);
   14a5c:	2003      	movs	r0, #3
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14a5e:	61e5      	str	r5, [r4, #28]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:420
   14a60:	f7ff fe42 	bl	146e8 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14a64:	2104      	movs	r1, #4
   14a66:	eb0d 0001 	add.w	r0, sp, r1
   14a6a:	f7ff fde7 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14a6e:	61a5      	str	r5, [r4, #24]
   14a70:	61a5      	str	r5, [r4, #24]
   14a72:	61a5      	str	r5, [r4, #24]
flash_get_page_write_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:425
            flash_spi_multi_io(&write_counter, sizeof(write_counter));
        }
    }

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
   14a74:	9801      	ldr	r0, [sp, #4]
   14a76:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:426
}
   14a78:	bf08      	it	eq
   14a7a:	2000      	moveq	r0, #0
   14a7c:	b003      	add	sp, #12
   14a7e:	bd30      	pop	{r4, r5, pc}
   14a80:	2007c472 	.word	0x2007c472
   14a84:	2009c000 	.word	0x2009c000

00014a88 <flash_chip_erase>:
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

void flash_chip_erase(void)
{
   14a88:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   14a8a:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14a8c:	2104      	movs	r1, #4
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   14a8e:	4b07      	ldr	r3, [pc, #28]	; (14aac <flash_chip_erase+0x24>)
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14a90:	4c07      	ldr	r4, [pc, #28]	; (14ab0 <flash_chip_erase+0x28>)
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   14a92:	6818      	ldr	r0, [r3, #0]
   14a94:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:52
   14a96:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   14a98:	eb0d 0001 	add.w	r0, sp, r1
   14a9c:	f7ff fdce 	bl	1463c <ssp1_exchange_data>
board_io_flash_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   14aa0:	61a5      	str	r5, [r4, #24]
   14aa2:	61a5      	str	r5, [r4, #24]
   14aa4:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   14aa6:	b003      	add	sp, #12
   14aa8:	bd30      	pop	{r4, r5, pc}
   14aaa:	bf00      	nop
   14aac:	000263c5 	.word	0x000263c5
   14ab0:	2009c000 	.word	0x2009c000

00014ab4 <get_fattime>:
get_fattime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   14ab4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   14ab6:	a801      	add	r0, sp, #4
   14ab8:	f003 fa14 	bl	17ee4 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   14abc:	f89d 3009 	ldrb.w	r3, [sp, #9]
   14ac0:	f003 000f 	and.w	r0, r3, #15
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   14ac4:	f89d 3008 	ldrb.w	r3, [sp, #8]
   14ac8:	f003 031f 	and.w	r3, r3, #31
   14acc:	041b      	lsls	r3, r3, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   14ace:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   14ad2:	f89d 0006 	ldrb.w	r0, [sp, #6]
   14ad6:	f000 001f 	and.w	r0, r0, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   14ada:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   14ade:	f89d 0005 	ldrb.w	r0, [sp, #5]
   14ae2:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   14ae6:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   14aea:	f89d 0004 	ldrb.w	r0, [sp, #4]
   14aee:	f3c0 0044 	ubfx	r0, r0, #1, #5
   14af2:	4303      	orrs	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   14af4:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   14af8:	0640      	lsls	r0, r0, #25
   14afa:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   14afe:	4318      	orrs	r0, r3
   14b00:	b005      	add	sp, #20
   14b02:	f85d fb04 	ldr.w	pc, [sp], #4
   14b06:	Address 0x0000000000014b06 is out of bounds.


00014b08 <GPIO::GPIO(LPC1758_GPIO_Type)>:
_ZN4GPIOC2E17LPC1758_GPIO_Type():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:23
 
#include "gpio.hpp"



GPIO::GPIO(LPC1758_GPIO_Type gpioId) :
   14b08:	b5f0      	push	{r4, r5, r6, r7, lr}
   14b0a:	4686      	mov	lr, r0
   14b0c:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    mPortNum(gpioId >> __PNSB),
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
{
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   14b0e:	4f11      	ldr	r7, [pc, #68]	; (14b54 <GPIO::GPIO(LPC1758_GPIO_Type)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:24
    mPortNum(gpioId >> __PNSB),
   14b10:	114c      	asrs	r4, r1, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:25
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
   14b12:	f001 051f 	and.w	r5, r1, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   14b16:	ae01      	add	r6, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:25
    mPinNum(gpioId & (0xFF >> (8 - __PNSB))) // Should result in (gpioId & 0x1F) if __PNSB is value of 5
   14b18:	7045      	strb	r5, [r0, #1]
   14b1a:	7004      	strb	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   14b1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   14b1e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];

    // Select GPIO configuration
    volatile uint32_t *pinsel = &(LPC_PINCON->PINSEL0);
    pinsel += (2 * mPortNum);
    *pinsel &= ~(3 << (2*mPinNum));
   14b20:	2103      	movs	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:34
}
   14b22:	4670      	mov	r0, lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   14b24:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   14b26:	006d      	lsls	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:27
    uint32_t gpioMemBases[] = { LPC_GPIO0_BASE, LPC_GPIO1_BASE, LPC_GPIO2_BASE, LPC_GPIO3_BASE, LPC_GPIO4_BASE};
   14b28:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:28
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];
   14b2a:	ab06      	add	r3, sp, #24
   14b2c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   14b30:	f853 3c14 	ldr.w	r3, [r3, #-20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   14b34:	fa01 f505 	lsl.w	r5, r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:28
    mpOurGpio = (LPC_GPIO_TypeDef*) gpioMemBases[mPortNum];
   14b38:	f8ce 3004 	str.w	r3, [lr, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:32
    pinsel += (2 * mPortNum);
   14b3c:	00e3      	lsls	r3, r4, #3
   14b3e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
   14b42:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:33
    *pinsel &= ~(3 << (2*mPinNum));
   14b46:	681a      	ldr	r2, [r3, #0]
   14b48:	ea22 0505 	bic.w	r5, r2, r5
   14b4c:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:34
}
   14b4e:	b007      	add	sp, #28
   14b50:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14b52:	bf00      	nop
   14b54:	000263dc 	.word	0x000263dc

00014b58 <GPIO::setAsInput()>:
_ZN4GPIO10setAsInputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:44
    enableOpenDrainMode(false);
    enablePullUp();
}

/** @{ Simple functions*/
void GPIO::setAsInput(void)   {   mpOurGpio->FIODIR &= ~(1 << mPinNum);          }
   14b58:	2201      	movs	r2, #1
   14b5a:	6841      	ldr	r1, [r0, #4]
   14b5c:	7840      	ldrb	r0, [r0, #1]
   14b5e:	680b      	ldr	r3, [r1, #0]
   14b60:	4082      	lsls	r2, r0
   14b62:	ea23 0302 	bic.w	r3, r3, r2
   14b66:	600b      	str	r3, [r1, #0]
   14b68:	4770      	bx	lr

00014b6a <GPIO::setAsOutput()>:
_ZN4GPIO11setAsOutputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:45
void GPIO::setAsOutput(void)  {   mpOurGpio->FIODIR |= (1 << mPinNum);           }
   14b6a:	2301      	movs	r3, #1
   14b6c:	6842      	ldr	r2, [r0, #4]
   14b6e:	7840      	ldrb	r0, [r0, #1]
   14b70:	6811      	ldr	r1, [r2, #0]
   14b72:	4083      	lsls	r3, r0
   14b74:	430b      	orrs	r3, r1
   14b76:	6013      	str	r3, [r2, #0]
   14b78:	4770      	bx	lr

00014b7a <GPIO::read() const>:
_ZNK4GPIO4readEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:46
bool GPIO::read(void) const   {   return !!(mpOurGpio->FIOPIN & (1 << mPinNum)); }
   14b7a:	6843      	ldr	r3, [r0, #4]
   14b7c:	7841      	ldrb	r1, [r0, #1]
   14b7e:	695a      	ldr	r2, [r3, #20]
   14b80:	2301      	movs	r3, #1
   14b82:	408b      	lsls	r3, r1
   14b84:	4213      	tst	r3, r2
   14b86:	bf14      	ite	ne
   14b88:	2001      	movne	r0, #1
   14b8a:	2000      	moveq	r0, #0
   14b8c:	4770      	bx	lr

00014b8e <GPIO::setHigh()>:
_ZN4GPIO7setHighEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:47
void GPIO::setHigh(void)      {   mpOurGpio->FIOSET = (1 << mPinNum);            }
   14b8e:	2301      	movs	r3, #1
   14b90:	7841      	ldrb	r1, [r0, #1]
   14b92:	6842      	ldr	r2, [r0, #4]
   14b94:	408b      	lsls	r3, r1
   14b96:	6193      	str	r3, [r2, #24]
   14b98:	4770      	bx	lr

00014b9a <GPIO::setLow()>:
_ZN4GPIO6setLowEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:48
void GPIO::setLow(void)       {   mpOurGpio->FIOCLR = (1 << mPinNum);            }
   14b9a:	2301      	movs	r3, #1
   14b9c:	7841      	ldrb	r1, [r0, #1]
   14b9e:	6842      	ldr	r2, [r0, #4]
   14ba0:	408b      	lsls	r3, r1
   14ba2:	61d3      	str	r3, [r2, #28]
   14ba4:	4770      	bx	lr
   14ba6:	Address 0x0000000000014ba6 is out of bounds.


00014ba8 <GPIO::enablePullUp()>:
_ZN4GPIO12enablePullUpEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57

void GPIO::enablePullUp()
{
    volatile uint32_t *pinmode = &(LPC_PINCON->PINMODE0);
    pinmode += (2 * mPortNum);
    *pinmode &= ~(3 << (2*mPinNum));
   14ba8:	7842      	ldrb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:54
{
   14baa:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57
    *pinmode &= ~(3 << (2*mPinNum));
   14bac:	0051      	lsls	r1, r2, #1
   14bae:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:56
    pinmode += (2 * mPortNum);
   14bb0:	7805      	ldrb	r5, [r0, #0]
   14bb2:	4c04      	ldr	r4, [pc, #16]	; (14bc4 <GPIO::enablePullUp()+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:57
    *pinmode &= ~(3 << (2*mPinNum));
   14bb4:	408a      	lsls	r2, r1
   14bb6:	f854 3035 	ldr.w	r3, [r4, r5, lsl #3]
   14bba:	ea23 0302 	bic.w	r3, r3, r2
   14bbe:	f844 3035 	str.w	r3, [r4, r5, lsl #3]
   14bc2:	bd30      	pop	{r4, r5, pc}
   14bc4:	4002c040 	.word	0x4002c040

00014bc8 <GPIO::enableOpenDrainMode(bool)>:
_ZN4GPIO19enableOpenDrainModeEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:73
    pinmode += (2 * mPortNum);
    *pinmode &= ~(3 << (2*mPinNum));
    *pinmode |=  (2 << (2*mPinNum));
}
void GPIO::enableOpenDrainMode(bool openDrain)
{
   14bc8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:75
    volatile uint32_t *pinmode_od = &(LPC_PINCON->PINMODE_OD0);
    pinmode_od += mPortNum;
   14bca:	4a09      	ldr	r2, [pc, #36]	; (14bf0 <GPIO::enableOpenDrainMode(bool)+0x28>)
   14bcc:	7804      	ldrb	r4, [r0, #0]
   14bce:	2301      	movs	r3, #1
   14bd0:	7840      	ldrb	r0, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:76
    if(openDrain) {
   14bd2:	b131      	cbz	r1, 14be2 <GPIO::enableOpenDrainMode(bool)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:77
        *pinmode_od |= (1 << mPinNum);
   14bd4:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
   14bd8:	4083      	lsls	r3, r0
   14bda:	430b      	orrs	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:80
    }
    else {
        *pinmode_od &= ~(1 << mPinNum);
   14bdc:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
   14be0:	bd10      	pop	{r4, pc}
   14be2:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
   14be6:	4083      	lsls	r3, r0
   14be8:	ea21 0303 	bic.w	r3, r1, r3
   14bec:	e7f6      	b.n	14bdc <GPIO::enableOpenDrainMode(bool)+0x14>
   14bee:	bf00      	nop
   14bf0:	4002c068 	.word	0x4002c068

00014bf4 <GPIO::~GPIO()>:
_ZN4GPIOD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:36
GPIO::~GPIO()
   14bf4:	b510      	push	{r4, lr}
   14bf6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:38
    setAsInput();
   14bf8:	f7ff ffae 	bl	14b58 <GPIO::setAsInput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:39
    enableOpenDrainMode(false);
   14bfc:	2100      	movs	r1, #0
   14bfe:	4620      	mov	r0, r4
   14c00:	f7ff ffe2 	bl	14bc8 <GPIO::enableOpenDrainMode(bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:40
    enablePullUp();
   14c04:	4620      	mov	r0, r4
   14c06:	f7ff ffcf 	bl	14ba8 <GPIO::enablePullUp()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/gpio.cpp:41
}
   14c0a:	4620      	mov	r0, r4
   14c0c:	bd10      	pop	{r4, pc}

00014c0e <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29

FRESULT Storage::copy(const char* pExistingFile, const char* pNewFile,
                        unsigned int* pReadTime,
                        unsigned int* pWriteTime,
                        unsigned int* pBytesTransferred)
{
   14c0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c12:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   14c16:	460c      	mov	r4, r1
   14c18:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    FIL dstFile;
    unsigned int readTimeMs = 0;
    unsigned int writeTimeMs = 0;

    // Open Existing file
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   14c1a:	4601      	mov	r1, r0
   14c1c:	2201      	movs	r2, #1
   14c1e:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:29
{
   14c20:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:37
    if (FR_OK != (status = f_open(&srcFile, pExistingFile, FA_OPEN_EXISTING | FA_READ))) {
   14c22:	f7fd fff5 	bl	12c10 <f_open>
   14c26:	4682      	mov	sl, r0
   14c28:	b950      	cbnz	r0, 14c40 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:42
        return status;
    }

    // Open new file - overwrite if one exists
    if (FR_OK != (status = f_open(&dstFile, pNewFile, FA_CREATE_ALWAYS | FA_WRITE))) {
   14c2a:	220a      	movs	r2, #10
   14c2c:	4621      	mov	r1, r4
   14c2e:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14c32:	f7fd ffed 	bl	12c10 <f_open>
   14c36:	4682      	mov	sl, r0
   14c38:	b138      	cbz	r0, 14c4a <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:43
        f_close(&srcFile);
   14c3a:	a882      	add	r0, sp, #520	; 0x208
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    if(0 != pBytesTransferred) {
        *pBytesTransferred = totalBytesTransferred;
    }

    f_close(&srcFile);
    f_close(&dstFile);
   14c3c:	f7fe fa52 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:86

    return status;
}
   14c40:	4650      	mov	r0, sl
   14c42:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   14c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   14c4a:	466c      	mov	r4, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:51
    unsigned int totalBytesTransferred = 0;
   14c4c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:34
    unsigned int writeTimeMs = 0;
   14c4e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:33
    unsigned int readTimeMs = 0;
   14c50:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:49
    unsigned int bytesRead = 0;
   14c52:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:50
    unsigned int bytesWritten = 0;
   14c54:	9001      	str	r0, [sp, #4]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14c56:	f7fb fc21 	bl	1049c <sys_get_uptime_us>
   14c5a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14c5e:	2300      	movs	r3, #0
   14c60:	f009 fcbe 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
        if(FR_OK != (status = f_read(&srcFile, buffer, sizeof(buffer), &bytesRead)) ||
   14c64:	4623      	mov	r3, r4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14c66:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56
   14c68:	f44f 7200 	mov.w	r2, #512	; 0x200
   14c6c:	a902      	add	r1, sp, #8
   14c6e:	a882      	add	r0, sp, #520	; 0x208
   14c70:	f7fe f865 	bl	12d3e <f_read>
   14c74:	4682      	mov	sl, r0
   14c76:	b908      	cbnz	r0, 14c7c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:56 (discriminator 2)
   14c78:	6822      	ldr	r2, [r4, #0]
   14c7a:	b99a      	cbnz	r2, 14ca4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:72
    if(0 != pReadTime) {
   14c7c:	f1b8 0f00 	cmp.w	r8, #0
   14c80:	d001      	beq.n	14c86 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:73
        *pReadTime = readTimeMs;
   14c82:	f8c8 7000 	str.w	r7, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:75
    if(0 != pWriteTime) {
   14c86:	f1b9 0f00 	cmp.w	r9, #0
   14c8a:	d001      	beq.n	14c90 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:76
        *pWriteTime = writeTimeMs;
   14c8c:	f8c9 6000 	str.w	r6, [r9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:78
    if(0 != pBytesTransferred) {
   14c90:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   14c94:	b103      	cbz	r3, 14c98 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:79
        *pBytesTransferred = totalBytesTransferred;
   14c96:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:82
    f_close(&srcFile);
   14c98:	a882      	add	r0, sp, #520	; 0x208
   14c9a:	f7fe fa23 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:83
    f_close(&dstFile);
   14c9e:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14ca2:	e7cb      	b.n	14c3c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x2e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14ca4:	f7fb fbfa 	bl	1049c <sys_get_uptime_us>
   14ca8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14cac:	2300      	movs	r3, #0
   14cae:	f009 fc97 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:60
        readTimeMs += sys_get_uptime_ms() - startTime;
   14cb2:	ebb0 000b 	subs.w	r0, r0, fp
   14cb6:	4407      	add	r7, r0
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14cb8:	f7fb fbf0 	bl	1049c <sys_get_uptime_us>
   14cbc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14cc0:	2300      	movs	r3, #0
   14cc2:	f009 fc8d 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
        if(FR_OK != (status = f_write(&dstFile, buffer, bytesRead, &bytesWritten)) ||
   14cc6:	ab01      	add	r3, sp, #4
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14cc8:	4683      	mov	fp, r0
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63
   14cca:	6822      	ldr	r2, [r4, #0]
   14ccc:	a902      	add	r1, sp, #8
   14cce:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   14cd2:	f7fe f8ec 	bl	12eae <f_write>
   14cd6:	4682      	mov	sl, r0
   14cd8:	2800      	cmp	r0, #0
   14cda:	d1cf      	bne.n	14c7c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:63 (discriminator 2)
   14cdc:	9901      	ldr	r1, [sp, #4]
   14cde:	6822      	ldr	r2, [r4, #0]
   14ce0:	4291      	cmp	r1, r2
   14ce2:	d1cb      	bne.n	14c7c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x6e>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   14ce4:	f7fb fbda 	bl	1049c <sys_get_uptime_us>
   14ce8:	2300      	movs	r3, #0
   14cea:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14cee:	f009 fc77 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7Storage4copyEPKcS1_PjS2_S2_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14cf2:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:67
        writeTimeMs += sys_get_uptime_ms() - startTime;
   14cf4:	ebb0 000b 	subs.w	r0, r0, fp
   14cf8:	4406      	add	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:69
        totalBytesTransferred += bytesRead;
   14cfa:	441d      	add	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:70
    }
   14cfc:	e7ab      	b.n	14c56 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x48>

00014cfe <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   14cfe:	b5f0      	push	{r4, r5, r6, r7, lr}
   14d00:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   14d02:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:89
{
   14d04:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14d08:	460e      	mov	r6, r1
   14d0a:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14d0c:	4601      	mov	r1, r0
   14d0e:	2201      	movs	r2, #1
   14d10:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   14d12:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   14d14:	f7fd ff7c 	bl	12c10 <f_open>
   14d18:	4604      	mov	r4, r0
   14d1a:	b970      	cbnz	r0, 14d3a <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   14d1c:	b11d      	cbz	r5, 14d26 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   14d1e:	4629      	mov	r1, r5
   14d20:	a801      	add	r0, sp, #4
   14d22:	f7fe f9f1 	bl	13108 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   14d26:	466b      	mov	r3, sp
   14d28:	463a      	mov	r2, r7
   14d2a:	4631      	mov	r1, r6
   14d2c:	a801      	add	r0, sp, #4
   14d2e:	f7fe f806 	bl	12d3e <f_read>
   14d32:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   14d34:	a801      	add	r0, sp, #4
   14d36:	f7fe f9d5 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   14d3a:	4620      	mov	r0, r4
   14d3c:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14d40:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014d42 <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108

FRESULT Storage::write(const char* pFilename, void* pData, unsigned int bytesToWrite, unsigned int offset)
{
   14d42:	b5f0      	push	{r4, r5, r6, r7, lr}
   14d44:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14d46:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:108
{
   14d48:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14d4c:	460e      	mov	r6, r1
   14d4e:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113

    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14d50:	4601      	mov	r1, r0
   14d52:	220a      	movs	r2, #10
   14d54:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:111
    unsigned int bytesWritten = 0;
   14d56:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:113
    status = f_open(&file, pFilename, FA_CREATE_ALWAYS | FA_WRITE);
   14d58:	f7fd ff5a 	bl	12c10 <f_open>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:114
    if(FR_OK == status)
   14d5c:	4604      	mov	r4, r0
   14d5e:	b970      	cbnz	r0, 14d7e <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:116
    {
        if(offset) {
   14d60:	b11d      	cbz	r5, 14d6a <Storage::write(char const*, void*, unsigned int, unsigned int)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:117
            f_lseek(&file, offset);
   14d62:	4629      	mov	r1, r5
   14d64:	a801      	add	r0, sp, #4
   14d66:	f7fe f9cf 	bl	13108 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:119
        }
        status = f_write(&file, pData, bytesToWrite, &bytesWritten);
   14d6a:	466b      	mov	r3, sp
   14d6c:	463a      	mov	r2, r7
   14d6e:	4631      	mov	r1, r6
   14d70:	a801      	add	r0, sp, #4
   14d72:	f7fe f89c 	bl	12eae <f_write>
   14d76:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:120
        f_close(&file);
   14d78:	a801      	add	r0, sp, #4
   14d7a:	f7fe f9b3 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:124
    }

    return status;
}
   14d7e:	4620      	mov	r0, r4
   14d80:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14d84:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014d86 <Storage::append(char const*, void const*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPKvjj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127

FRESULT Storage::append(const char* pFilename, const void* pData, unsigned int bytesToAppend, unsigned int offset)
{
   14d86:	b5f0      	push	{r4, r5, r6, r7, lr}
   14d88:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesWritten = 0;
   14d8a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:127
{
   14d8c:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   14d90:	460e      	mov	r6, r1
   14d92:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14d94:	4601      	mov	r1, r0
   14d96:	2212      	movs	r2, #18
   14d98:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:130
    unsigned int bytesWritten = 0;
   14d9a:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:133
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_ALWAYS | FA_WRITE)))
   14d9c:	f7fd ff38 	bl	12c10 <f_open>
   14da0:	4604      	mov	r4, r0
   14da2:	b970      	cbnz	r0, 14dc2 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:135
    {
        if(offset > 0) {
   14da4:	b18d      	cbz	r5, 14dca <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:136
            f_lseek(&file, offset);
   14da6:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
        }
        else {
            f_lseek(&file, f_size(&file));
   14da8:	a801      	add	r0, sp, #4
   14daa:	f7fe f9ad 	bl	13108 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:142
        }

        status = f_write(&file, pData, bytesToAppend, &bytesWritten);
   14dae:	466b      	mov	r3, sp
   14db0:	463a      	mov	r2, r7
   14db2:	4631      	mov	r1, r6
   14db4:	a801      	add	r0, sp, #4
   14db6:	f7fe f87a 	bl	12eae <f_write>
   14dba:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:144

        f_close(&file);
   14dbc:	a801      	add	r0, sp, #4
   14dbe:	f7fe f991 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:148
    }

    return status;
}
   14dc2:	4620      	mov	r0, r4
   14dc4:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   14dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/storage.cpp:139
            f_lseek(&file, f_size(&file));
   14dca:	9904      	ldr	r1, [sp, #16]
   14dcc:	e7ec      	b.n	14da8 <Storage::append(char const*, void const*, unsigned int, unsigned int)+0x22>

00014dce <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   14dce:	4613      	mov	r3, r2
   14dd0:	460a      	mov	r2, r1
   14dd2:	7901      	ldrb	r1, [r0, #4]
   14dd4:	6800      	ldr	r0, [r0, #0]
   14dd6:	f002 bd08 	b.w	177ea <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

00014dda <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   14dda:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   14ddc:	2200      	movs	r2, #0
   14dde:	ab04      	add	r3, sp, #16
   14de0:	f823 2d04 	strh.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   14de4:	2202      	movs	r2, #2
   14de6:	7904      	ldrb	r4, [r0, #4]
   14de8:	9200      	str	r2, [sp, #0]
   14dea:	6800      	ldr	r0, [r0, #0]
   14dec:	460a      	mov	r2, r1
   14dee:	4621      	mov	r1, r4
   14df0:	f002 fce6 	bl	177c0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   14df4:	f89d 000c 	ldrb.w	r0, [sp, #12]
   14df8:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   14dfc:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14e00:	b004      	add	sp, #16
   14e02:	bd10      	pop	{r4, pc}

00014e04 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   14e04:	b510      	push	{r4, lr}
   14e06:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   14e08:	2219      	movs	r2, #25
   14e0a:	212a      	movs	r1, #42	; 0x2a
   14e0c:	f7ff ffdf 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   14e10:	220d      	movs	r2, #13
   14e12:	7921      	ldrb	r1, [r4, #4]
   14e14:	6820      	ldr	r0, [r4, #0]
   14e16:	f002 fcd7 	bl	177c8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   14e1a:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   14e1e:	4258      	negs	r0, r3
   14e20:	4158      	adcs	r0, r3
   14e22:	bd10      	pop	{r4, pc}

00014e24 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   14e24:	4a04      	ldr	r2, [pc, #16]	; (14e38 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   14e26:	8813      	ldrh	r3, [r2, #0]
   14e28:	2b1f      	cmp	r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   14e2a:	bfdf      	itttt	le
   14e2c:	1c58      	addle	r0, r3, #1
   14e2e:	8010      	strhle	r0, [r2, #0]
   14e30:	4a02      	ldrle	r2, [pc, #8]	; (14e3c <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   14e32:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   14e36:	4770      	bx	lr
   14e38:	2007c4f4 	.word	0x2007c4f4
   14e3c:	2007c474 	.word	0x2007c474

00014e40 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   14e40:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   14e42:	4e15      	ldr	r6, [pc, #84]	; (14e98 <IR_Sensor::decodeIrCode()+0x58>)
   14e44:	8833      	ldrh	r3, [r6, #0]
   14e46:	2b01      	cmp	r3, #1
   14e48:	dd23      	ble.n	14e92 <IR_Sensor::decodeIrCode()+0x52>
   14e4a:	4a14      	ldr	r2, [pc, #80]	; (14e9c <IR_Sensor::decodeIrCode()+0x5c>)
   14e4c:	2000      	movs	r0, #0
   14e4e:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   14e50:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   14e52:	4298      	cmp	r0, r3
   14e54:	da08      	bge.n	14e68 <IR_Sensor::decodeIrCode()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   14e56:	f852 1f04 	ldr.w	r1, [r2, #4]!
   14e5a:	3001      	adds	r0, #1
   14e5c:	f852 4c04 	ldr.w	r4, [r2, #-4]
   14e60:	1b09      	subs	r1, r1, r4
   14e62:	f842 1c04 	str.w	r1, [r2, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   14e66:	e7f4      	b.n	14e52 <IR_Sensor::decodeIrCode()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14e68:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   14e6a:	f04f 0e01 	mov.w	lr, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   14e6e:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   14e70:	6868      	ldr	r0, [r5, #4]
   14e72:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14e76:	b28a      	uxth	r2, r1
   14e78:	4293      	cmp	r3, r2
   14e7a:	dd08      	ble.n	14e8e <IR_Sensor::decodeIrCode()+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   14e7c:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   14e80:	3101      	adds	r1, #1
   14e82:	42b8      	cmp	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   14e84:	bf3c      	itt	cc
   14e86:	fa0e f202 	lslcc.w	r2, lr, r2
   14e8a:	4314      	orrcc	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   14e8c:	e7f3      	b.n	14e76 <IR_Sensor::decodeIrCode()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   14e8e:	4b04      	ldr	r3, [pc, #16]	; (14ea0 <IR_Sensor::decodeIrCode()+0x60>)
   14e90:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   14e92:	2300      	movs	r3, #0
   14e94:	8033      	strh	r3, [r6, #0]
   14e96:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14e98:	2007c4f4 	.word	0x2007c4f4
   14e9c:	2007c474 	.word	0x2007c474
   14ea0:	2007c4f8 	.word	0x2007c4f8

00014ea4 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   14ea4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   14ea6:	2101      	movs	r1, #1
   14ea8:	2002      	movs	r0, #2
   14eaa:	f7fb fd37 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14eae:	4b08      	ldr	r3, [pc, #32]	; (14ed0 <IR_Sensor::init()+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   14eb0:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   14eb2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14eb4:	f022 0207 	bic.w	r2, r2, #7
   14eb8:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   14eba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14ebc:	f042 0206 	orr.w	r2, r2, #6
   14ec0:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   14ec2:	4a04      	ldr	r2, [pc, #16]	; (14ed4 <IR_Sensor::init()+0x30>)
   14ec4:	68d3      	ldr	r3, [r2, #12]
   14ec6:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   14eca:	60d3      	str	r3, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:211
}
   14ecc:	bd08      	pop	{r3, pc}
   14ece:	bf00      	nop
   14ed0:	40008000 	.word	0x40008000
   14ed4:	4002c000 	.word	0x4002c000

00014ed8 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   14ed8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14eda:	4b04      	ldr	r3, [pc, #16]	; (14eec <LED_Display::setLeftDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   14edc:	7141      	strb	r1, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14ede:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14ee2:	5c5a      	ldrb	r2, [r3, r1]
   14ee4:	2103      	movs	r1, #3
   14ee6:	f7ff ff72 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
   14eea:	bd08      	pop	{r3, pc}
   14eec:	000263f0 	.word	0x000263f0

00014ef0 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   14ef0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14ef2:	4b04      	ldr	r3, [pc, #16]	; (14f04 <LED_Display::setRightDigit(char)+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   14ef4:	7181      	strb	r1, [r0, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   14ef6:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14efa:	5c5a      	ldrb	r2, [r3, r1]
   14efc:	2102      	movs	r1, #2
   14efe:	f7ff ff66 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
   14f02:	bd08      	pop	{r3, pc}
   14f04:	000263f0 	.word	0x000263f0

00014f08 <LED_Display::init()>:
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:225
{
   14f08:	b538      	push	{r3, r4, r5, lr}
   14f0a:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   14f0c:	7901      	ldrb	r1, [r0, #4]
   14f0e:	6800      	ldr	r0, [r0, #0]
   14f10:	f002 fc76 	bl	17800 <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   14f14:	4605      	mov	r5, r0
   14f16:	b188      	cbz	r0, 14f3c <LED_Display::init()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   14f18:	2200      	movs	r2, #0
   14f1a:	2106      	movs	r1, #6
   14f1c:	4620      	mov	r0, r4
   14f1e:	f7ff ff56 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   14f22:	2200      	movs	r2, #0
   14f24:	2107      	movs	r1, #7
   14f26:	4620      	mov	r0, r4
   14f28:	f7ff ff51 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   14f2c:	212e      	movs	r1, #46	; 0x2e
   14f2e:	4620      	mov	r0, r4
   14f30:	f7ff ffd2 	bl	14ed8 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   14f34:	212e      	movs	r1, #46	; 0x2e
   14f36:	4620      	mov	r0, r4
   14f38:	f7ff ffda 	bl	14ef0 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:238
}
   14f3c:	4628      	mov	r0, r5
   14f3e:	bd38      	pop	{r3, r4, r5, pc}

00014f40 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14f40:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14f42:	2464      	movs	r4, #100	; 0x64
   14f44:	fbb1 f3f4 	udiv	r3, r1, r4
   14f48:	fb03 1414 	mls	r4, r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14f4c:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   14f4e:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14f50:	fbb4 f5f1 	udiv	r5, r4, r1
   14f54:	fb01 4115 	mls	r1, r1, r5, r4
   14f58:	3130      	adds	r1, #48	; 0x30
   14f5a:	b2c9      	uxtb	r1, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:245
{
   14f5c:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   14f5e:	f7ff ffc7 	bl	14ef0 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   14f62:	2c09      	cmp	r4, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14f64:	bf88      	it	hi
   14f66:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   14f6a:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:253
}
   14f6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   14f70:	bf94      	ite	ls
   14f72:	2120      	movls	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   14f74:	b2c9      	uxtbhi	r1, r1
   14f76:	f7ff bfaf 	b.w	14ed8 <LED_Display::setLeftDigit(char)>

00014f7a <LED::init()>:
_ZN3LED4initEv():
   14f7a:	2001      	movs	r0, #1
   14f7c:	4770      	bx	lr
   14f7e:	Address 0x0000000000014f7e is out of bounds.


00014f80 <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   14f80:	b538      	push	{r3, r4, r5, lr}
   14f82:	460c      	mov	r4, r1
   14f84:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   14f86:	f003 fd0f 	bl	189a8 <vPortEnterCritical>
   14f8a:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   14f8c:	f004 030f 	and.w	r3, r4, #15
   14f90:	702b      	strb	r3, [r5, #0]
   14f92:	4b0e      	ldr	r3, [pc, #56]	; (14fcc <LED::setAll(unsigned char)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   14f94:	f014 0f01 	tst.w	r4, #1
   14f98:	bf14      	ite	ne
   14f9a:	61da      	strne	r2, [r3, #28]
   14f9c:	619a      	streq	r2, [r3, #24]
   14f9e:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   14fa0:	f014 0f02 	tst.w	r4, #2
   14fa4:	bf14      	ite	ne
   14fa6:	61da      	strne	r2, [r3, #28]
   14fa8:	619a      	streq	r2, [r3, #24]
   14faa:	2210      	movs	r2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   14fac:	f014 0f04 	tst.w	r4, #4
   14fb0:	bf14      	ite	ne
   14fb2:	61da      	strne	r2, [r3, #28]
   14fb4:	619a      	streq	r2, [r3, #24]
   14fb6:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   14fba:	f014 0f08 	tst.w	r4, #8
   14fbe:	bf14      	ite	ne
   14fc0:	61da      	strne	r2, [r3, #28]
   14fc2:	619a      	streq	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   14fc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   14fc8:	f003 bcfe 	b.w	189c8 <vPortExitCritical>
   14fcc:	2009c020 	.word	0x2009c020

00014fd0 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   14fd0:	2001      	movs	r0, #1
   14fd2:	4770      	bx	lr

00014fd4 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   14fd4:	2002      	movs	r0, #2
   14fd6:	f003 b949 	b.w	1826c <adc0_get_reading>

00014fda <Switches::init()>:
_ZN8Switches4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   14fda:	2001      	movs	r0, #1
   14fdc:	4770      	bx	lr
   14fde:	Address 0x0000000000014fde is out of bounds.


00014fe0 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   14fe0:	4b04      	ldr	r3, [pc, #16]	; (14ff4 <Switches::getSwitchValues()+0x14>)
   14fe2:	695b      	ldr	r3, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   14fe4:	0b18      	lsrs	r0, r3, #12
   14fe6:	f000 000c 	and.w	r0, r0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   14fea:	f3c3 2341 	ubfx	r3, r3, #9, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:349
}
   14fee:	4318      	orrs	r0, r3
   14ff0:	4770      	bx	lr
   14ff2:	bf00      	nop
   14ff4:	2009c020 	.word	0x2009c020

00014ff8 <Switches::getSwitch(int)>:
_ZN8Switches9getSwitchEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:352
bool Switches::getSwitch(int num)
{
    if (num >= 1 && num <= 4) {
   14ff8:	3901      	subs	r1, #1
   14ffa:	2903      	cmp	r1, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:351
{
   14ffc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:352
    if (num >= 1 && num <= 4) {
   14ffe:	d805      	bhi.n	1500c <Switches::getSwitch(int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:353
        return getSwitchValues() & (1 << (num-1));
   15000:	f7ff ffee 	bl	14fe0 <Switches::getSwitchValues()>
   15004:	4108      	asrs	r0, r1
   15006:	f000 0001 	and.w	r0, r0, #1
   1500a:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:356
    }
    else {
        return false;
   1500c:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:358
    }
}
   1500e:	bd08      	pop	{r3, pc}

00015010 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:363



bool I2C_Temp::init()
{
   15010:	b510      	push	{r4, lr}
   15012:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   15014:	2281      	movs	r2, #129	; 0x81
   15016:	2101      	movs	r1, #1
   15018:	f7ff fed9 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   1501c:	2201      	movs	r2, #1
   1501e:	7921      	ldrb	r1, [r4, #4]
   15020:	6820      	ldr	r0, [r4, #0]
   15022:	f002 fbd1 	bl	177c8 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   15026:	f010 0f60 	tst.w	r0, #96	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:373
}
   1502a:	bf14      	ite	ne
   1502c:	2001      	movne	r0, #1
   1502e:	2000      	moveq	r0, #0
   15030:	bd10      	pop	{r4, pc}

00015032 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   15032:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   15034:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:375
{
   15036:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   15038:	f7ff fecf 	bl	14dda <i2c2_device::get16BitRegister(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   1503c:	2281      	movs	r2, #129	; 0x81
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   1503e:	b205      	sxth	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   15040:	2101      	movs	r1, #1
   15042:	4620      	mov	r0, r4
   15044:	f7ff fec3 	bl	14dce <i2c2_device::writeReg(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   15048:	2010      	movs	r0, #16
   1504a:	fb95 f0f0 	sdiv	r0, r5, r0
   1504e:	f009 f8dd 	bl	1e20c <__aeabi_i2f>
   15052:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   15056:	f009 f92d 	bl	1e2b4 <__aeabi_fmul>
   1505a:	68a1      	ldr	r1, [r4, #8]
   1505c:	f009 f822 	bl	1e0a4 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:390
}
   15060:	bd38      	pop	{r3, r4, r5, pc}
   15062:	Address 0x0000000000015062 is out of bounds.


00015064 <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   15064:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   15066:	f7ff ffe4 	bl	15032 <I2C_Temp::getCelsius()>
   1506a:	4905      	ldr	r1, [pc, #20]	; (15080 <I2C_Temp::getFarenheit()+0x1c>)
   1506c:	f009 f922 	bl	1e2b4 <__aeabi_fmul>
   15070:	4904      	ldr	r1, [pc, #16]	; (15084 <I2C_Temp::getFarenheit()+0x20>)
   15072:	f009 f9d3 	bl	1e41c <__aeabi_fdiv>
   15076:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   1507a:	f009 f813 	bl	1e0a4 <__addsf3>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/io_source.cpp:395
}
   1507e:	bd08      	pop	{r3, pc}
   15080:	41100000 	.word	0x41100000
   15084:	40a00000 	.word	0x40a00000

00015088 <tlm_stream_for_each_component_var>:
tlm_stream_for_each_component_var():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:56

/**
 * Callback function for each component's variables
 */
static bool tlm_stream_for_each_component_var(void *elm_ptr, void *arg1, void *arg2, void *print_ascii)
{
   15088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1508c:	4606      	mov	r6, r0
   1508e:	b0c1      	sub	sp, #260	; 0x104
   15090:	4615      	mov	r5, r2
   15092:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:64
    stream_callback_type stream = arg1;
    void *stream_arg = arg2;
    char *p = (char*)(var->data_ptr);
    uint32_t i = 0;

    if (NULL == stream || NULL == var) {
   15094:	460c      	mov	r4, r1
   15096:	2900      	cmp	r1, #0
   15098:	d050      	beq.n	1513c <tlm_stream_for_each_component_var+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
        return false;
    }

    stream((var->name), stream_arg);
   1509a:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:61
    char *p = (char*)(var->data_ptr);
   1509c:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:68
    stream((var->name), stream_arg);
   1509e:	6800      	ldr	r0, [r0, #0]
   150a0:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:69
    stream(":", stream_arg);
   150a2:	4629      	mov	r1, r5
   150a4:	4826      	ldr	r0, [pc, #152]	; (15140 <tlm_stream_for_each_component_var+0xb8>)
   150a6:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:70
    sprintf(buff, "%" PRIi32 ":", var->elm_size_bytes);
   150a8:	68b2      	ldr	r2, [r6, #8]
   150aa:	4926      	ldr	r1, [pc, #152]	; (15144 <tlm_stream_for_each_component_var+0xbc>)
   150ac:	4668      	mov	r0, sp
   150ae:	f00b feb7 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:71
    stream(buff, stream_arg);
   150b2:	4629      	mov	r1, r5
   150b4:	4668      	mov	r0, sp
   150b6:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:72
    sprintf(buff, "%" PRIi32 ":", var->elm_arr_size);
   150b8:	68f2      	ldr	r2, [r6, #12]
   150ba:	4922      	ldr	r1, [pc, #136]	; (15144 <tlm_stream_for_each_component_var+0xbc>)
   150bc:	4668      	mov	r0, sp
   150be:	f00b feaf 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:73
    stream(buff, stream_arg);
   150c2:	4629      	mov	r1, r5
   150c4:	4668      	mov	r0, sp
   150c6:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:74
    sprintf(buff, "%i:", var->elm_type);
   150c8:	491f      	ldr	r1, [pc, #124]	; (15148 <tlm_stream_for_each_component_var+0xc0>)
   150ca:	7c32      	ldrb	r2, [r6, #16]
   150cc:	4668      	mov	r0, sp
   150ce:	f00b fea7 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:75
    stream(buff, stream_arg);
   150d2:	4629      	mov	r1, r5
   150d4:	4668      	mov	r0, sp
   150d6:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:77

    if (print_ascii)
   150d8:	f1b8 0f00 	cmp.w	r8, #0
   150dc:	d00f      	beq.n	150fe <tlm_stream_for_each_component_var+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:79
    {
        tlm_variable_print_value(var, buff, sizeof(buff));
   150de:	4669      	mov	r1, sp
   150e0:	f44f 7280 	mov.w	r2, #256	; 0x100
   150e4:	4630      	mov	r0, r6
   150e6:	f000 fb63 	bl	157b0 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:80
        stream(buff, stream_arg);
   150ea:	4629      	mov	r1, r5
   150ec:	4668      	mov	r0, sp
   150ee:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:96
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
            stream(buff, stream_arg);
        }
    }

    stream("\n", stream_arg);
   150f0:	4816      	ldr	r0, [pc, #88]	; (1514c <tlm_stream_for_each_component_var+0xc4>)
   150f2:	4629      	mov	r1, r5
   150f4:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:98

    return true;
   150f6:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:99
}
   150f8:	b041      	add	sp, #260	; 0x104
   150fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   150fe:	783a      	ldrb	r2, [r7, #0]
   15100:	4913      	ldr	r1, [pc, #76]	; (15150 <tlm_stream_for_each_component_var+0xc8>)
   15102:	4668      	mov	r0, sp
   15104:	f00b fe8c 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:86
        stream(buff, stream_arg);
   15108:	4629      	mov	r1, r5
   1510a:	4668      	mov	r0, sp
   1510c:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   1510e:	68b3      	ldr	r3, [r6, #8]
   15110:	68f6      	ldr	r6, [r6, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   15112:	f8df 9040 	ldr.w	r9, [pc, #64]	; 15154 <tlm_stream_for_each_component_var+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   15116:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:85
        sprintf(buff, "%02X", ((*p++) & 0xFF));
   15118:	f107 0801 	add.w	r8, r7, #1
   1511c:	3601      	adds	r6, #1
   1511e:	eba6 0308 	sub.w	r3, r6, r8
   15122:	443b      	add	r3, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:89 (discriminator 1)
        for(i=(var->elm_size_bytes) * (var->elm_arr_size); /* Total bytes */
   15124:	2b01      	cmp	r3, #1
   15126:	d9e3      	bls.n	150f0 <tlm_stream_for_each_component_var+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:91
            sprintf(buff, ",%02X", ((*p++) & 0xFF) );
   15128:	4649      	mov	r1, r9
   1512a:	f818 2b01 	ldrb.w	r2, [r8], #1
   1512e:	4668      	mov	r0, sp
   15130:	f00b fe76 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:92
            stream(buff, stream_arg);
   15134:	4629      	mov	r1, r5
   15136:	4668      	mov	r0, sp
   15138:	47a0      	blx	r4
   1513a:	e7f0      	b.n	1511e <tlm_stream_for_each_component_var+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:65
        return false;
   1513c:	4608      	mov	r0, r1
   1513e:	e7db      	b.n	150f8 <tlm_stream_for_each_component_var+0x70>
   15140:	00027424 	.word	0x00027424
   15144:	00026470 	.word	0x00026470
   15148:	00026475 	.word	0x00026475
   1514c:	00027b83 	.word	0x00027b83
   15150:	0002647a 	.word	0x0002647a
   15154:	00026479 	.word	0x00026479

00015158 <tlm_stream_file_ptr>:
tlm_stream_file_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:48
{
   15158:	b570      	push	{r4, r5, r6, lr}
   1515a:	460d      	mov	r5, r1
   1515c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   1515e:	f00b ff3f 	bl	20fe0 <strlen>
   15162:	462b      	mov	r3, r5
   15164:	4602      	mov	r2, r0
   15166:	2101      	movs	r1, #1
   15168:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:50
}
   1516a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:49
    fwrite(str, sizeof(char), strlen(str), (FILE*)fptr);
   1516e:	f009 bfaf 	b.w	1f0d0 <fwrite>
   15172:	Address 0x0000000000015172 is out of bounds.


00015174 <tlm_stream_one>:
tlm_stream_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:176
/**
 * Callback function for each component
 * @param sca  Stream callback argument
 */
void tlm_stream_one(tlm_component *comp, stream_callback_type stream, void *print_ascii, void *sca)
{
   15174:	b5f0      	push	{r4, r5, r6, r7, lr}
   15176:	460c      	mov	r4, r1
   15178:	b087      	sub	sp, #28
   1517a:	4617      	mov	r7, r2
   1517c:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177
    if (NULL == comp || NULL == stream) {
   1517e:	4606      	mov	r6, r0
   15180:	b348      	cbz	r0, 151d6 <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:177 (discriminator 1)
   15182:	b341      	cbz	r1, 151d6 <tlm_stream_one+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:182
        return;
    }

    /* sca : stream callback argument */
    char buff[16] = { 0 };
   15184:	2210      	movs	r2, #16
   15186:	2100      	movs	r1, #0
   15188:	a802      	add	r0, sp, #8
   1518a:	f00a f9a3 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:183
    sprintf(buff, "%u\n", (unsigned int)c_list_node_count((comp->var_list)));
   1518e:	6870      	ldr	r0, [r6, #4]
   15190:	f000 fda4 	bl	15cdc <c_list_node_count>
   15194:	4911      	ldr	r1, [pc, #68]	; (151dc <tlm_stream_one+0x68>)
   15196:	4602      	mov	r2, r0
   15198:	a802      	add	r0, sp, #8
   1519a:	f00b fe41 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:186

    /* Send: "START:<name>:<#>\n" */
    stream("START:", sca);
   1519e:	4629      	mov	r1, r5
   151a0:	480f      	ldr	r0, [pc, #60]	; (151e0 <tlm_stream_one+0x6c>)
   151a2:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:187
    stream(comp->name, sca);
   151a4:	4629      	mov	r1, r5
   151a6:	6830      	ldr	r0, [r6, #0]
   151a8:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:188
    stream(":", sca);
   151aa:	4629      	mov	r1, r5
   151ac:	480d      	ldr	r0, [pc, #52]	; (151e4 <tlm_stream_one+0x70>)
   151ae:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:189
    stream(buff, sca);
   151b0:	4629      	mov	r1, r5
   151b2:	a802      	add	r0, sp, #8
   151b4:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:194

    /* Now for each variable list of this component, make a call-back to our
     * component for each function that will stream data of each variable
     */
    c_list_for_each_elm((comp->var_list), tlm_stream_for_each_component_var,
   151b6:	9700      	str	r7, [sp, #0]
   151b8:	462b      	mov	r3, r5
   151ba:	4622      	mov	r2, r4
   151bc:	490a      	ldr	r1, [pc, #40]	; (151e8 <tlm_stream_one+0x74>)
   151be:	6870      	ldr	r0, [r6, #4]
   151c0:	f000 fdd7 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:201
                        sca,        /* arg2 */
                        print_ascii /* arg3 */
                        );

    /* Send: "END:<name>\n" */
    stream("END:", sca);
   151c4:	4629      	mov	r1, r5
   151c6:	4809      	ldr	r0, [pc, #36]	; (151ec <tlm_stream_one+0x78>)
   151c8:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:202
    stream((comp->name), sca);
   151ca:	4629      	mov	r1, r5
   151cc:	6830      	ldr	r0, [r6, #0]
   151ce:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:203
    stream("\n", sca);
   151d0:	4629      	mov	r1, r5
   151d2:	4807      	ldr	r0, [pc, #28]	; (151f0 <tlm_stream_one+0x7c>)
   151d4:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:204
}
   151d6:	b007      	add	sp, #28
   151d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   151da:	bf00      	nop
   151dc:	00026ddf 	.word	0x00026ddf
   151e0:	0002647f 	.word	0x0002647f
   151e4:	00027424 	.word	0x00027424
   151e8:	00015089 	.word	0x00015089
   151ec:	00026486 	.word	0x00026486
   151f0:	00027b83 	.word	0x00027b83

000151f4 <tlm_stream_all_args>:
tlm_stream_all_args():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:215
    stream_callback_type stream_func = args[0];
    void *user_arg = args[1];
    void *print_ascii_arg = args[2];

    /* Now pass the arguments to tlm_stream_one() */
    tlm_stream_one(comp_ptr, stream_func, print_ascii_arg, user_arg);
   151f4:	684b      	ldr	r3, [r1, #4]
   151f6:	688a      	ldr	r2, [r1, #8]
   151f8:	6809      	ldr	r1, [r1, #0]
   151fa:	f7ff bfbb 	b.w	15174 <tlm_stream_one>
   151fe:	Address 0x00000000000151fe is out of bounds.


00015200 <tlm_stream_all>:
tlm_stream_all():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:219
}

void tlm_stream_all(stream_callback_type stream_func, void *arg, bool ascii)
{
   15200:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:224
    /* We need to pass 3 args, but only have 2 possible arguments that we can pass to
     * tlm_component_for_each() API, so use a double pointer here.
     */
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
    void *args[] = { (void*) stream_func, arg, print_ascii_arg };
   15202:	9001      	str	r0, [sp, #4]
   15204:	9102      	str	r1, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:223
    void *print_ascii_arg = ascii ? (void*) 1 : (void*) NULL;
   15206:	9203      	str	r2, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:232
     * Simply tell the telemetry component to call our call-back with our
     * stream function as the argument.  We will get the callback function
     * called with pointer to each telemetry component, along with our
     * argument which is the stream function itself
     */
    tlm_component_for_each((tlm_comp_callback)tlm_stream_all_args, args, NULL);
   15208:	a901      	add	r1, sp, #4
   1520a:	2200      	movs	r2, #0
   1520c:	4802      	ldr	r0, [pc, #8]	; (15218 <tlm_stream_all+0x18>)
   1520e:	f000 f943 	bl	15498 <tlm_component_for_each>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:233
}
   15212:	b005      	add	sp, #20
   15214:	f85d fb04 	ldr.w	pc, [sp], #4
   15218:	000151f5 	.word	0x000151f5

0001521c <tlm_stream_one_file>:
tlm_stream_one_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:238

void tlm_stream_one_file(tlm_component *comp_ptr, FILE *file)
{
    void * print_ascii = NULL; /* Do not print ASCII (print hex instead) */
    if(file) {
   1521c:	460b      	mov	r3, r1
   1521e:	b119      	cbz	r1, 15228 <tlm_stream_one_file+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:239
        tlm_stream_one(comp_ptr, tlm_stream_file_ptr, print_ascii, file);
   15220:	2200      	movs	r2, #0
   15222:	4902      	ldr	r1, [pc, #8]	; (1522c <tlm_stream_one_file+0x10>)
   15224:	f7ff bfa6 	b.w	15174 <tlm_stream_one>
   15228:	4770      	bx	lr
   1522a:	bf00      	nop
   1522c:	00015159 	.word	0x00015159

00015230 <tlm_stream_decode_file>:
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
                               );
    }
}

bool tlm_stream_decode_file(FILE *file)
{
   15230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15234:	b0c9      	sub	sp, #292	; 0x124
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
     * A file can contain telemetry of multiple components so it may have
     * START ... END
     * START ... END
     * We will continue to decode till end of file.
     */
    char line[128] = { 0 };
   15236:	ae08      	add	r6, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:267
{
   15238:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:278
    char line[128] = { 0 };
   1523a:	2280      	movs	r2, #128	; 0x80
   1523c:	2100      	movs	r1, #0
   1523e:	4630      	mov	r0, r6
   15240:	f00a f948 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:270
    bool success = false;
   15244:	2400      	movs	r4, #0
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   15246:	f8df a19c 	ldr.w	sl, [pc, #412]	; 153e4 <tlm_stream_decode_file+0x1b4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:279
    while (fgets(line, sizeof(line)-1, file)) {
   1524a:	462a      	mov	r2, r5
   1524c:	217f      	movs	r1, #127	; 0x7f
   1524e:	4630      	mov	r0, r6
   15250:	f009 fd24 	bl	1ec9c <fgets>
   15254:	b918      	cbnz	r0, 1525e <tlm_stream_decode_file+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:310
        }
    } // fgets()

    /* success only changed to true if we got atleast one "START" in the file */
    return success;
}
   15256:	4620      	mov	r0, r4
   15258:	b049      	add	sp, #292	; 0x124
   1525a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:280
        if (line == strstr(line, "START:")) {
   1525e:	4960      	ldr	r1, [pc, #384]	; (153e0 <tlm_stream_decode_file+0x1b0>)
   15260:	4630      	mov	r0, r6
   15262:	f00b ff26 	bl	210b2 <strstr>
   15266:	4286      	cmp	r6, r0
   15268:	d1ef      	bne.n	1524a <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:281
            char *name = strstr(line, ":") + 1;
   1526a:	213a      	movs	r1, #58	; 0x3a
   1526c:	f00b fe98 	bl	20fa0 <strchr>
   15270:	f100 0801 	add.w	r8, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:282
            char *count = strstr(name, ":");
   15274:	213a      	movs	r1, #58	; 0x3a
   15276:	4640      	mov	r0, r8
   15278:	f00b fe92 	bl	20fa0 <strchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:283
            if (NULL != count) {
   1527c:	4607      	mov	r7, r0
   1527e:	2800      	cmp	r0, #0
   15280:	d0e3      	beq.n	1524a <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:284
                *count++ = '\0';
   15282:	2300      	movs	r3, #0
   15284:	7003      	strb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:285
                component = tlm_component_get_by_name(name);
   15286:	4640      	mov	r0, r8
   15288:	f000 f8be 	bl	15408 <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:286
                if (NULL != component) {
   1528c:	9001      	str	r0, [sp, #4]
   1528e:	2800      	cmp	r0, #0
   15290:	d0db      	beq.n	1524a <tlm_stream_decode_file+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:287
                    num_vars_in_stream = atoi(count);
   15292:	1c78      	adds	r0, r7, #1
   15294:	f009 fb33 	bl	1e8fe <atoi>
   15298:	4680      	mov	r8, r0
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   1529a:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:297
        while (num_vars_in_stream > 0) {
   1529e:	f1b8 0f00 	cmp.w	r8, #0
   152a2:	d101      	bne.n	152a8 <tlm_stream_decode_file+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:288
                    success = true;
   152a4:	2401      	movs	r4, #1
   152a6:	e7d0      	b.n	1524a <tlm_stream_decode_file+0x1a>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   152a8:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:107
    char header[128] = { 0 };
   152aa:	2280      	movs	r2, #128	; 0x80
   152ac:	2100      	movs	r1, #0
   152ae:	4648      	mov	r0, r9
   152b0:	f00a f910 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:108
    int i = 0, colon_count = 0;
   152b4:	4627      	mov	r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:111
        int c = fgetc(file);
   152b6:	4628      	mov	r0, r5
   152b8:	f009 fc86 	bl	1ebc8 <fgetc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:112
        if (c == EOF) {
   152bc:	1c43      	adds	r3, r0, #1
   152be:	d019      	beq.n	152f4 <tlm_stream_decode_file+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:115
        if (c == ':' && (++colon_count) >= colon_count_of_hex_data) {
   152c0:	283a      	cmp	r0, #58	; 0x3a
   152c2:	d119      	bne.n	152f8 <tlm_stream_decode_file+0xc8>
   152c4:	3701      	adds	r7, #1
   152c6:	2f03      	cmp	r7, #3
   152c8:	dd16      	ble.n	152f8 <tlm_stream_decode_file+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   152ca:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   152cc:	aa07      	add	r2, sp, #28
   152ce:	4651      	mov	r1, sl
   152d0:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:122
    char *tok_itr = 0;
   152d2:	9407      	str	r4, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   152d4:	f00c fd5d 	bl	21d92 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   152d8:	aa07      	add	r2, sp, #28
   152da:	4651      	mov	r1, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:123
    char *tok_name     = strtok_r(header, ":", &tok_itr);
   152dc:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   152de:	4620      	mov	r0, r4
   152e0:	f00c fd57 	bl	21d92 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   152e4:	aa07      	add	r2, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:124
    char *tok_var_size = strtok_r(NULL, ":", &tok_itr);
   152e6:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:125
    char *tok_arr_size = strtok_r(NULL, ":", &tok_itr);
   152e8:	4651      	mov	r1, sl
   152ea:	4620      	mov	r0, r4
   152ec:	f00c fd51 	bl	21d92 <strtok_r>
   152f0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   152f2:	b93f      	cbnz	r7, 15304 <tlm_stream_decode_file+0xd4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:303
                return success;
   152f4:	2400      	movs	r4, #0
   152f6:	e7ae      	b.n	15256 <tlm_stream_decode_file+0x26>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:118
        header[i] = c;
   152f8:	f809 0004 	strb.w	r0, [r9, r4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:110
    for ( ; i < sizeof(header)-1; i++) {
   152fc:	3401      	adds	r4, #1
   152fe:	2c7f      	cmp	r4, #127	; 0x7f
   15300:	d1d9      	bne.n	152b6 <tlm_stream_decode_file+0x86>
   15302:	e7e2      	b.n	152ca <tlm_stream_decode_file+0x9a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:126
    if (NULL != tok_name && NULL != tok_var_size && NULL != tok_arr_size) {
   15304:	f1bb 0f00 	cmp.w	fp, #0
   15308:	d0f4      	beq.n	152f4 <tlm_stream_decode_file+0xc4>
   1530a:	2800      	cmp	r0, #0
   1530c:	d0f2      	beq.n	152f4 <tlm_stream_decode_file+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   1530e:	4658      	mov	r0, fp
   15310:	f009 faf5 	bl	1e8fe <atoi>
   15314:	4683      	mov	fp, r0
   15316:	4620      	mov	r0, r4
   15318:	f009 faf1 	bl	1e8fe <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   1531c:	4639      	mov	r1, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:127
        exp_byte_cnt = atoi(tok_var_size) * atoi(tok_arr_size);
   1531e:	fb00 fb0b 	mul.w	fp, r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:134
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_name(p_comp, tok_name);
   15322:	9801      	ldr	r0, [sp, #4]
   15324:	f000 f922 	bl	1556c <tlm_variable_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   15328:	b180      	cbz	r0, 1534c <tlm_stream_decode_file+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:136
        (reg_var->elm_size_bytes) * (reg_var->elm_arr_size) == exp_byte_cnt)
   1532a:	6882      	ldr	r2, [r0, #8]
   1532c:	68c3      	ldr	r3, [r0, #12]
   1532e:	4353      	muls	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:135
    if (NULL != reg_var &&
   15330:	459b      	cmp	fp, r3
   15332:	d10b      	bne.n	1534c <tlm_stream_decode_file+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:138
        char *dst = (char*)(reg_var->data_ptr);
   15334:	6847      	ldr	r7, [r0, #4]
   15336:	eb07 030b 	add.w	r3, r7, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:139
        int terminator = EOF;
   1533a:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
   1533e:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:141
        for ( ; exp_byte_cnt != 0; --exp_byte_cnt) {
   15340:	9b03      	ldr	r3, [sp, #12]
   15342:	429f      	cmp	r7, r3
   15344:	d105      	bne.n	15352 <tlm_stream_decode_file+0x122>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:159
        if ('\n' != terminator) {
   15346:	f1bb 0f0a 	cmp.w	fp, #10
   1534a:	d1d3      	bne.n	152f4 <tlm_stream_decode_file+0xc4>
tlm_stream_decode_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:299
                --num_vars_in_stream;
   1534c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   15350:	e7a5      	b.n	1529e <tlm_stream_decode_file+0x6e>
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:142
            char byte1 = fgetc(file);
   15352:	4628      	mov	r0, r5
   15354:	f009 fc38 	bl	1ebc8 <fgetc>
   15358:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:143
            char byte2 = fgetc(file);
   1535a:	4628      	mov	r0, r5
   1535c:	f009 fc34 	bl	1ebc8 <fgetc>
   15360:	9002      	str	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   15362:	4628      	mov	r0, r5
   15364:	f009 fc30 	bl	1ebc8 <fgetc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   15368:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:144
            terminator = fgetc(file); /* could be comma, \n or EOF */
   1536c:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:145
            if (EOF == terminator) {
   1536e:	d0c1      	beq.n	152f4 <tlm_stream_decode_file+0xc4>
hex_to_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:36
    if (isdigit(d1)) value += d1 - '0';
   15370:	f009 ffda 	bl	1f328 <__locale_ctype_ptr>
   15374:	b2e3      	uxtb	r3, r4
   15376:	1c5a      	adds	r2, r3, #1
   15378:	5c81      	ldrb	r1, [r0, r2]
   1537a:	0748      	lsls	r0, r1, #29
   1537c:	d512      	bpl.n	153a4 <tlm_stream_decode_file+0x174>
   1537e:	3c30      	subs	r4, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15380:	f009 ffd2 	bl	1f328 <__locale_ctype_ptr>
   15384:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   15388:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   1538a:	1c5a      	adds	r2, r3, #1
   1538c:	5c81      	ldrb	r1, [r0, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   1538e:	0124      	lsls	r4, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15390:	0749      	lsls	r1, r1, #29
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:39
    value <<= 4;
   15392:	b2e4      	uxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:41
    if (isdigit(d2)) value += d2 - '0';
   15394:	d515      	bpl.n	153c2 <tlm_stream_decode_file+0x192>
   15396:	9b02      	ldr	r3, [sp, #8]
   15398:	3b30      	subs	r3, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   1539a:	441c      	add	r4, r3
   1539c:	b2e4      	uxtb	r4, r4
tlm_stream_decode():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:151
            memcpy(dst, &byte, sizeof(byte));
   1539e:	f807 4b01 	strb.w	r4, [r7], #1
   153a2:	e7cd      	b.n	15340 <tlm_stream_decode_file+0x110>
   153a4:	9305      	str	r3, [sp, #20]
   153a6:	9204      	str	r2, [sp, #16]
hex_to_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:37
    else value += tolower(d1) - 'a' + 10;
   153a8:	f009 ffbe 	bl	1f328 <__locale_ctype_ptr>
   153ac:	9a04      	ldr	r2, [sp, #16]
   153ae:	9b05      	ldr	r3, [sp, #20]
   153b0:	5c82      	ldrb	r2, [r0, r2]
   153b2:	f002 0203 	and.w	r2, r2, #3
   153b6:	2a01      	cmp	r2, #1
   153b8:	bf08      	it	eq
   153ba:	3320      	addeq	r3, #32
   153bc:	f1a3 0457 	sub.w	r4, r3, #87	; 0x57
   153c0:	e7de      	b.n	15380 <tlm_stream_decode_file+0x150>
   153c2:	9204      	str	r2, [sp, #16]
   153c4:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_stream.c:42
    else value += tolower(d2) - 'a' + 10;
   153c6:	f009 ffaf 	bl	1f328 <__locale_ctype_ptr>
   153ca:	9a04      	ldr	r2, [sp, #16]
   153cc:	9b02      	ldr	r3, [sp, #8]
   153ce:	5c82      	ldrb	r2, [r0, r2]
   153d0:	f002 0203 	and.w	r2, r2, #3
   153d4:	2a01      	cmp	r2, #1
   153d6:	bf08      	it	eq
   153d8:	3320      	addeq	r3, #32
   153da:	3b57      	subs	r3, #87	; 0x57
   153dc:	e7dd      	b.n	1539a <tlm_stream_decode_file+0x16a>
   153de:	bf00      	nop
   153e0:	0002647f 	.word	0x0002647f
   153e4:	00027424 	.word	0x00027424

000153e8 <tlm_component_for_each_callback>:
tlm_component_for_each_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:36
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
}

static bool tlm_component_for_each_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   153e8:	b510      	push	{r4, lr}
   153ea:	460c      	mov	r4, r1
   153ec:	4611      	mov	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:38
    tlm_comp_callback callback = arg1;
    callback(elm_ptr, arg2, arg3);
   153ee:	461a      	mov	r2, r3
   153f0:	47a0      	blx	r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:40
    return true;
}
   153f2:	2001      	movs	r0, #1
   153f4:	bd10      	pop	{r4, pc}

000153f6 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29
{
   153f6:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    return (0 != strcmp(comp->name, new_comp_name));
   153f8:	6800      	ldr	r0, [r0, #0]
   153fa:	f00b fddf 	bl	20fbc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   153fe:	3000      	adds	r0, #0
   15400:	bf18      	it	ne
   15402:	2001      	movne	r0, #1
   15404:	bd08      	pop	{r3, pc}
   15406:	Address 0x0000000000015406 is out of bounds.


00015408 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   15408:	b507      	push	{r0, r1, r2, lr}
   1540a:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   1540c:	b130      	cbz	r0, 1541c <tlm_component_get_by_name+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   1540e:	4602      	mov	r2, r0
   15410:	4804      	ldr	r0, [pc, #16]	; (15424 <tlm_component_get_by_name+0x1c>)
   15412:	9300      	str	r3, [sp, #0]
   15414:	4904      	ldr	r1, [pc, #16]	; (15428 <tlm_component_get_by_name+0x20>)
   15416:	6800      	ldr	r0, [r0, #0]
   15418:	f000 fc95 	bl	15d46 <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   1541c:	b003      	add	sp, #12
   1541e:	f85d fb04 	ldr.w	pc, [sp], #4
   15422:	bf00      	nop
   15424:	2007c4fc 	.word	0x2007c4fc
   15428:	000153f7 	.word	0x000153f7

0001542c <tlm_component_add>:
tlm_component_add():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   1542c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   1542e:	4606      	mov	r6, r0
   15430:	b910      	cbnz	r0, 15438 <tlm_component_add+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   15432:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   15434:	4620      	mov	r0, r4
   15436:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   15438:	7803      	ldrb	r3, [r0, #0]
   1543a:	2b00      	cmp	r3, #0
   1543c:	d0f9      	beq.n	15432 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   1543e:	4d15      	ldr	r5, [pc, #84]	; (15494 <tlm_component_add+0x68>)
   15440:	682b      	ldr	r3, [r5, #0]
   15442:	b913      	cbnz	r3, 1544a <tlm_component_add+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   15444:	f000 fc40 	bl	15cc8 <c_list_create>
   15448:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   1544a:	4630      	mov	r0, r6
   1544c:	f7ff ffdc 	bl	15408 <tlm_component_get_by_name>
   15450:	4607      	mov	r7, r0
   15452:	2800      	cmp	r0, #0
   15454:	d1ed      	bne.n	15432 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   15456:	2008      	movs	r0, #8
   15458:	f009 ffd8 	bl	1f40c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   1545c:	4604      	mov	r4, r0
   1545e:	2800      	cmp	r0, #0
   15460:	d0e7      	beq.n	15432 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   15462:	e880 00c0 	stmia.w	r0, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   15466:	f000 fc2f 	bl	15cc8 <c_list_create>
   1546a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   1546c:	b918      	cbnz	r0, 15476 <tlm_component_add+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   1546e:	4620      	mov	r0, r4
   15470:	f009 ffd4 	bl	1f41c <free>
   15474:	e7dd      	b.n	15432 <tlm_component_add+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   15476:	6828      	ldr	r0, [r5, #0]
   15478:	4621      	mov	r1, r4
   1547a:	f000 fc32 	bl	15ce2 <c_list_insert_elm_end>
   1547e:	4605      	mov	r5, r0
   15480:	2800      	cmp	r0, #0
   15482:	d1d7      	bne.n	15434 <tlm_component_add+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   15484:	6860      	ldr	r0, [r4, #4]
   15486:	f009 ffc9 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   1548a:	4620      	mov	r0, r4
   1548c:	f009 ffc6 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   15490:	462c      	mov	r4, r5
   15492:	e7cf      	b.n	15434 <tlm_component_add+0x8>
   15494:	2007c4fc 	.word	0x2007c4fc

00015498 <tlm_component_for_each>:
tlm_component_for_each():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:97

void tlm_component_for_each(tlm_comp_callback callback, void *arg1, void *arg2)
{
   15498:	b507      	push	{r0, r1, r2, lr}
   1549a:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:103
    /*
     * c_list_for_each_elm() callback only has room for 3 arguments:
     * We only take 2 customer arguments because one of the argument is
     * our own callback
     */
    if (NULL != callback) {
   1549c:	b130      	cbz	r0, 154ac <tlm_component_for_each+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:104
        c_list_for_each_elm(mp_tlm_component_list, tlm_component_for_each_callback,
   1549e:	9200      	str	r2, [sp, #0]
   154a0:	4602      	mov	r2, r0
   154a2:	4804      	ldr	r0, [pc, #16]	; (154b4 <tlm_component_for_each+0x1c>)
   154a4:	4904      	ldr	r1, [pc, #16]	; (154b8 <tlm_component_for_each+0x20>)
   154a6:	6800      	ldr	r0, [r0, #0]
   154a8:	f000 fc63 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:107
                            callback, arg1, arg2);
    }
}
   154ac:	b003      	add	sp, #12
   154ae:	f85d fb04 	ldr.w	pc, [sp], #4
   154b2:	bf00      	nop
   154b4:	2007c4fc 	.word	0x2007c4fc
   154b8:	000153e9 	.word	0x000153e9

000154bc <tlm_variable_check_dup>:
tlm_variable_check_dup():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:32


/** Private function of this file */
static bool tlm_variable_check_dup(void *elm_ptr, void *arg1,
                                     void *arg2, void *arg3)
{
   154bc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36
    tlm_reg_var_type *reg_var = elm_ptr;
    tlm_reg_var_type *new_var = arg1;

    return (reg_var->data_ptr != new_var->data_ptr &&
   154be:	6842      	ldr	r2, [r0, #4]
   154c0:	684b      	ldr	r3, [r1, #4]
   154c2:	429a      	cmp	r2, r3
   154c4:	d007      	beq.n	154d6 <tlm_variable_check_dup+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:37 (discriminator 1)
            0 != strcmp(reg_var->name, new_var->name)
   154c6:	6809      	ldr	r1, [r1, #0]
   154c8:	6800      	ldr	r0, [r0, #0]
   154ca:	f00b fd77 	bl	20fbc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:36 (discriminator 1)
    return (reg_var->data_ptr != new_var->data_ptr &&
   154ce:	3000      	adds	r0, #0
   154d0:	bf18      	it	ne
   154d2:	2001      	movne	r0, #1
   154d4:	bd08      	pop	{r3, pc}
   154d6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:39
            );
}
   154d8:	bd08      	pop	{r3, pc}

000154da <tlm_component_find_callback>:
tlm_component_find_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:43

/** Private function of this file */
static bool tlm_component_find_callback(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   154da:	b508      	push	{r3, lr}
   154dc:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:50
    const char *name = arg1;

    /* If we locate the name, make copy of the pointer, and return false
     * to stop iterating further through the list
     */
    return (0 != strcmp(name, reg_var->name));
   154de:	6801      	ldr	r1, [r0, #0]
   154e0:	4618      	mov	r0, r3
   154e2:	f00b fd6b 	bl	20fbc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:51
}
   154e6:	3000      	adds	r0, #0
   154e8:	bf18      	it	ne
   154ea:	2001      	movne	r0, #1
   154ec:	bd08      	pop	{r3, pc}
   154ee:	Address 0x00000000000154ee is out of bounds.


000154f0 <tlm_variable_register>:
tlm_variable_register():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:61
                             const char *name,
                             const void *data_ptr,
                             const uint16_t data_size,
                             const uint16_t arr_size,
                             tlm_type type)
{
   154f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   154f4:	4689      	mov	r9, r1
   154f6:	4690      	mov	r8, r2
   154f8:	461f      	mov	r7, r3
   154fa:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   154fe:	4606      	mov	r6, r0
   15500:	b920      	cbnz	r0, 1550c <tlm_variable_register+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:63
        return false;
   15502:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:92
        free(new_var);
        return false;
    }

    return true;
}
   15504:	4628      	mov	r0, r5
   15506:	b003      	add	sp, #12
   15508:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 1)
    if(NULL == comp_ptr || NULL == name || NULL == data_ptr || 0 == data_size) {
   1550c:	2900      	cmp	r1, #0
   1550e:	d0f8      	beq.n	15502 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 2)
   15510:	2a00      	cmp	r2, #0
   15512:	d0f6      	beq.n	15502 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:62 (discriminator 3)
   15514:	2b00      	cmp	r3, #0
   15516:	d0f4      	beq.n	15502 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:66
    tlm_reg_var_type *new_var = malloc(sizeof(tlm_reg_var_type));
   15518:	2014      	movs	r0, #20
   1551a:	f009 ff77 	bl	1f40c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:67
    if(NULL == new_var) {
   1551e:	4604      	mov	r4, r0
   15520:	2800      	cmp	r0, #0
   15522:	d0ee      	beq.n	15502 <tlm_variable_register+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   15524:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   15528:	2d00      	cmp	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:78
    new_var->elm_type = type;
   1552a:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   1552c:	bf08      	it	eq
   1552e:	2501      	moveq	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   15530:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:77
    new_var->elm_arr_size = 0 == arr_size ? 1 : arr_size;
   15532:	60c5      	str	r5, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:74
    new_var->name = name;
   15534:	f8c0 9000 	str.w	r9, [r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:75
    new_var->data_ptr = data_ptr;
   15538:	f8c0 8004 	str.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:76
    new_var->elm_size_bytes = data_size;
   1553c:	6087      	str	r7, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:80
    if (!c_list_for_each_elm(comp_ptr->var_list, tlm_variable_check_dup,
   1553e:	9300      	str	r3, [sp, #0]
   15540:	4602      	mov	r2, r0
   15542:	4909      	ldr	r1, [pc, #36]	; (15568 <tlm_variable_register+0x78>)
   15544:	6870      	ldr	r0, [r6, #4]
   15546:	f000 fc14 	bl	15d72 <c_list_for_each_elm>
   1554a:	4605      	mov	r5, r0
   1554c:	b918      	cbnz	r0, 15556 <tlm_variable_register+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:87
        free(new_var);
   1554e:	4620      	mov	r0, r4
   15550:	f009 ff64 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:88
        return false;
   15554:	e7d6      	b.n	15504 <tlm_variable_register+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:86
    if (!c_list_insert_elm_end(comp_ptr->var_list, new_var)) {
   15556:	4621      	mov	r1, r4
   15558:	6870      	ldr	r0, [r6, #4]
   1555a:	f000 fbc2 	bl	15ce2 <c_list_insert_elm_end>
   1555e:	4605      	mov	r5, r0
   15560:	2800      	cmp	r0, #0
   15562:	d1cf      	bne.n	15504 <tlm_variable_register+0x14>
   15564:	e7f3      	b.n	1554e <tlm_variable_register+0x5e>
   15566:	bf00      	nop
   15568:	000154bd 	.word	0x000154bd

0001556c <tlm_variable_get_by_name>:
tlm_variable_get_by_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:95

const tlm_reg_var_type* tlm_variable_get_by_name(tlm_component *comp_ptr, const char *name)
{
   1556c:	b513      	push	{r0, r1, r4, lr}
   1556e:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97
    tlm_reg_var_type *reg_var = NULL;
    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   15570:	b140      	cbz	r0, 15584 <tlm_variable_get_by_name+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 1)
   15572:	b149      	cbz	r1, 15588 <tlm_variable_get_by_name+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:97 (discriminator 2)
   15574:	780c      	ldrb	r4, [r1, #0]
   15576:	2300      	movs	r3, #0
   15578:	b144      	cbz	r4, 1558c <tlm_variable_get_by_name+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:98
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   1557a:	9300      	str	r3, [sp, #0]
   1557c:	4904      	ldr	r1, [pc, #16]	; (15590 <tlm_variable_get_by_name+0x24>)
   1557e:	6840      	ldr	r0, [r0, #4]
   15580:	f000 fbe1 	bl	15d46 <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:102
                                  (void*)name, NULL, NULL);
    }
    return reg_var;
}
   15584:	b002      	add	sp, #8
   15586:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:96
    tlm_reg_var_type *reg_var = NULL;
   15588:	4608      	mov	r0, r1
   1558a:	e7fb      	b.n	15584 <tlm_variable_get_by_name+0x18>
   1558c:	4620      	mov	r0, r4
   1558e:	e7f9      	b.n	15584 <tlm_variable_get_by_name+0x18>
   15590:	000154db 	.word	0x000154db

00015594 <tlm_variable_get_by_comp_and_name>:
tlm_variable_get_by_comp_and_name():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:105

const tlm_reg_var_type* tlm_variable_get_by_comp_and_name(const char *comp_name, const char *name)
{
   15594:	b537      	push	{r0, r1, r2, r4, r5, lr}
   15596:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:107
    tlm_reg_var_type *reg_var = NULL;
    tlm_component *comp_ptr = tlm_component_get_by_name(comp_name);
   15598:	f7ff ff36 	bl	15408 <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109

    if (NULL != comp_ptr && NULL != name && '\0' != *name) {
   1559c:	b148      	cbz	r0, 155b2 <tlm_variable_get_by_comp_and_name+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 1)
   1559e:	b155      	cbz	r5, 155b6 <tlm_variable_get_by_comp_and_name+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:109 (discriminator 2)
   155a0:	782c      	ldrb	r4, [r5, #0]
   155a2:	2300      	movs	r3, #0
   155a4:	b14c      	cbz	r4, 155ba <tlm_variable_get_by_comp_and_name+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:110
        reg_var = c_list_find_elm(comp_ptr->var_list, tlm_component_find_callback,
   155a6:	9300      	str	r3, [sp, #0]
   155a8:	462a      	mov	r2, r5
   155aa:	4905      	ldr	r1, [pc, #20]	; (155c0 <tlm_variable_get_by_comp_and_name+0x2c>)
   155ac:	6840      	ldr	r0, [r0, #4]
   155ae:	f000 fbca 	bl	15d46 <c_list_find_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:115
                                  (void*)name, NULL, NULL);
    }

    return reg_var;
}
   155b2:	b003      	add	sp, #12
   155b4:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:106
    tlm_reg_var_type *reg_var = NULL;
   155b6:	4628      	mov	r0, r5
   155b8:	e7fb      	b.n	155b2 <tlm_variable_get_by_comp_and_name+0x1e>
   155ba:	4620      	mov	r0, r4
   155bc:	e7f9      	b.n	155b2 <tlm_variable_get_by_comp_and_name+0x1e>
   155be:	bf00      	nop
   155c0:	000154db 	.word	0x000154db

000155c4 <tlm_variable_set_value>:
tlm_variable_set_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:118

bool tlm_variable_set_value(const char *comp_name, const char *name, const char *value)
{
   155c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   155c8:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:119
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   155ca:	f7ff ffe3 	bl	15594 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:120
    if (NULL == reg_var) {
   155ce:	4680      	mov	r8, r0
   155d0:	2800      	cmp	r0, #0
   155d2:	f000 80df 	beq.w	15794 <tlm_variable_set_value+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
            } else {                \
                ++value;            \
        }   }

    bool success = false;
    switch(reg_var->elm_type) {
   155d6:	f898 3010 	ldrb.w	r3, [r8, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   155da:	3004      	adds	r0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   155dc:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:125
    void *end = (uint8_t*) (reg_var->data_ptr) + (reg_var->elm_arr_size * reg_var->elm_size_bytes);
   155de:	c885      	ldmia	r0, {r0, r2, r7}
   155e0:	fb07 0702 	mla	r7, r7, r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:137
    switch(reg_var->elm_type) {
   155e4:	2b07      	cmp	r3, #7
   155e6:	f200 80d5 	bhi.w	15794 <tlm_variable_set_value+0x1d0>
   155ea:	e8df f003 	tbb	[pc, r3]
   155ee:	4b22      	.short	0x4b22
   155f0:	95d3ab70 	.word	0x95d3ab70
   155f4:	04d3      	.short	0x04d3
   155f6:	4605      	mov	r5, r0
   155f8:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186

        case tlm_bit_or_bool:
            dst = (void*)reg_var->data_ptr;
            while (dst < end) {
                success = true;
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   155fc:	4e67      	ldr	r6, [pc, #412]	; (1579c <tlm_variable_set_value+0x1d8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:184
            while (dst < end) {
   155fe:	42bd      	cmp	r5, r7
   15600:	d228      	bcs.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:186
                memset((void*)reg_var->data_ptr, (value == strstr("true", value)), 1);
   15602:	4621      	mov	r1, r4
   15604:	4630      	mov	r0, r6
   15606:	f00b fd54 	bl	210b2 <strstr>
   1560a:	1a22      	subs	r2, r4, r0
   1560c:	f8d8 3004 	ldr.w	r3, [r8, #4]
   15610:	4250      	negs	r0, r2
   15612:	4150      	adcs	r0, r2
   15614:	7018      	strb	r0, [r3, #0]
   15616:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   15618:	781a      	ldrb	r2, [r3, #0]
   1561a:	461c      	mov	r4, r3
   1561c:	3301      	adds	r3, #1
   1561e:	b112      	cbz	r2, 15626 <tlm_variable_set_value+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 4)
   15620:	2a2c      	cmp	r2, #44	; 0x2c
   15622:	d1f9      	bne.n	15618 <tlm_variable_set_value+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:187 (discriminator 1)
   15624:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   15626:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:185
                success = true;
   1562a:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:188
                dst += reg_var->elm_size_bytes;
   1562e:	441d      	add	r5, r3
   15630:	e7e5      	b.n	155fe <tlm_variable_set_value+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   15632:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:141
            dst = (void*)reg_var->data_ptr;
   15634:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   15636:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   15638:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   1563a:	f8df a164 	ldr.w	sl, [pc, #356]	; 157a0 <tlm_variable_set_value+0x1dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:140
            long int temp = 0;
   1563e:	f845 3d04 	str.w	r3, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142
            while (dst < end && 1 == sscanf(value, "%li", &temp)) {
   15642:	42be      	cmp	r6, r7
   15644:	d206      	bcs.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:142 (discriminator 1)
   15646:	462a      	mov	r2, r5
   15648:	4651      	mov	r1, sl
   1564a:	4620      	mov	r0, r4
   1564c:	f00b fc0c 	bl	20e68 <siscanf>
   15650:	2801      	cmp	r0, #1
   15652:	d003      	beq.n	1565c <tlm_variable_set_value+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:216
            success = false;
            break;
    }

    return success;
}
   15654:	4648      	mov	r0, r9
   15656:	b002      	add	sp, #8
   15658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:143
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   1565c:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15660:	4629      	mov	r1, r5
   15662:	4630      	mov	r0, r6
   15664:	f009 ff11 	bl	1f48a <memcpy>
   15668:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   1566a:	781a      	ldrb	r2, [r3, #0]
   1566c:	461c      	mov	r4, r3
   1566e:	3301      	adds	r3, #1
   15670:	b112      	cbz	r2, 15678 <tlm_variable_set_value+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 4)
   15672:	2a2c      	cmp	r2, #44	; 0x2c
   15674:	d1f9      	bne.n	1566a <tlm_variable_set_value+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:145 (discriminator 1)
   15676:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   15678:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:144
                success = true;
   1567c:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:146
                dst += reg_var->elm_size_bytes;
   15680:	441e      	add	r6, r3
   15682:	e7de      	b.n	15642 <tlm_variable_set_value+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15684:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:153
            dst = (void*)reg_var->data_ptr;
   15686:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   15688:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   1568a:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   1568c:	f8df a114 	ldr.w	sl, [pc, #276]	; 157a4 <tlm_variable_set_value+0x1e0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:152
            long unsigned temp = 0;
   15690:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154
            while (dst < end && 1 == sscanf(value, "%lu", &temp)) {
   15694:	42bd      	cmp	r5, r7
   15696:	d2dd      	bcs.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:154 (discriminator 1)
   15698:	4632      	mov	r2, r6
   1569a:	4651      	mov	r1, sl
   1569c:	4620      	mov	r0, r4
   1569e:	f00b fbe3 	bl	20e68 <siscanf>
   156a2:	2801      	cmp	r0, #1
   156a4:	d1d6      	bne.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:155
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   156a6:	f8d8 2008 	ldr.w	r2, [r8, #8]
   156aa:	4631      	mov	r1, r6
   156ac:	4628      	mov	r0, r5
   156ae:	f009 feec 	bl	1f48a <memcpy>
   156b2:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   156b4:	781a      	ldrb	r2, [r3, #0]
   156b6:	461c      	mov	r4, r3
   156b8:	3301      	adds	r3, #1
   156ba:	b112      	cbz	r2, 156c2 <tlm_variable_set_value+0xfe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 4)
   156bc:	2a2c      	cmp	r2, #44	; 0x2c
   156be:	d1f9      	bne.n	156b4 <tlm_variable_set_value+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:157 (discriminator 1)
   156c0:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   156c2:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:156
                success = true;
   156c6:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:158
                dst += reg_var->elm_size_bytes;
   156ca:	441d      	add	r5, r3
   156cc:	e7e2      	b.n	15694 <tlm_variable_set_value+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   156ce:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:165
            dst = (void*)reg_var->data_ptr;
   156d2:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   156d4:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   156d6:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 157a8 <tlm_variable_set_value+0x1e4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:164
            char temp = 0;
   156da:	f806 9d04 	strb.w	r9, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166
            while (dst < end && 1 == sscanf(value, "%c", &temp)) {
   156de:	42bd      	cmp	r5, r7
   156e0:	d2b8      	bcs.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:166 (discriminator 1)
   156e2:	4632      	mov	r2, r6
   156e4:	4651      	mov	r1, sl
   156e6:	4620      	mov	r0, r4
   156e8:	f00b fbbe 	bl	20e68 <siscanf>
   156ec:	2801      	cmp	r0, #1
   156ee:	d1b1      	bne.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:167
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   156f0:	f8d8 2008 	ldr.w	r2, [r8, #8]
   156f4:	4631      	mov	r1, r6
   156f6:	4628      	mov	r0, r5
   156f8:	f009 fec7 	bl	1f48a <memcpy>
   156fc:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   156fe:	781a      	ldrb	r2, [r3, #0]
   15700:	461c      	mov	r4, r3
   15702:	3301      	adds	r3, #1
   15704:	b112      	cbz	r2, 1570c <tlm_variable_set_value+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 4)
   15706:	2a2c      	cmp	r2, #44	; 0x2c
   15708:	d1f9      	bne.n	156fe <tlm_variable_set_value+0x13a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:169 (discriminator 1)
   1570a:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   1570c:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:168
                success = true;
   15710:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:170
                dst += reg_var->elm_size_bytes;
   15714:	441d      	add	r5, r3
   15716:	e7e2      	b.n	156de <tlm_variable_set_value+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:176
            memset((void*)reg_var->data_ptr, 0, reg_var->elm_size_bytes);
   15718:	2100      	movs	r1, #0
   1571a:	f009 fedb 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   1571e:	4620      	mov	r0, r4
   15720:	f00b fc5e 	bl	20fe0 <strlen>
   15724:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   15728:	f8d8 5004 	ldr.w	r5, [r8, #4]
   1572c:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:178
                    strlen(value) < reg_var->elm_size_bytes ? strlen(value) : reg_var->elm_size_bytes - 1);
   1572e:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:177
            memcpy((void*)reg_var->data_ptr, value,
   15730:	4621      	mov	r1, r4
   15732:	bf28      	it	cs
   15734:	f103 32ff 	addcs.w	r2, r3, #4294967295	; 0xffffffff
   15738:	4628      	mov	r0, r5
   1573a:	f009 fea6 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:179
            success = true;
   1573e:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:180
            break;
   15742:	e787      	b.n	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   15744:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:199
            dst = (void*)reg_var->data_ptr;
   15746:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:136
    bool success = false;
   15748:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   1574c:	ae02      	add	r6, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   1574e:	f8df a05c 	ldr.w	sl, [pc, #92]	; 157ac <tlm_variable_set_value+0x1e8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:198
            float temp = 0;
   15752:	f846 3d04 	str.w	r3, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200
            while (dst < end && 1 == sscanf(value, "%f", &temp)) {
   15756:	42bd      	cmp	r5, r7
   15758:	f4bf af7c 	bcs.w	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:200 (discriminator 1)
   1575c:	4632      	mov	r2, r6
   1575e:	4651      	mov	r1, sl
   15760:	4620      	mov	r0, r4
   15762:	f00b fb81 	bl	20e68 <siscanf>
   15766:	2801      	cmp	r0, #1
   15768:	f47f af74 	bne.w	15654 <tlm_variable_set_value+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:201
                memcpy(dst, &temp, reg_var->elm_size_bytes);
   1576c:	f8d8 2008 	ldr.w	r2, [r8, #8]
   15770:	4631      	mov	r1, r6
   15772:	4628      	mov	r0, r5
   15774:	f009 fe89 	bl	1f48a <memcpy>
   15778:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 3)
                tlm_variable_set_value_find_next_token(value);
   1577a:	781a      	ldrb	r2, [r3, #0]
   1577c:	461c      	mov	r4, r3
   1577e:	3301      	adds	r3, #1
   15780:	b112      	cbz	r2, 15788 <tlm_variable_set_value+0x1c4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 4)
   15782:	2a2c      	cmp	r2, #44	; 0x2c
   15784:	d1f9      	bne.n	1577a <tlm_variable_set_value+0x1b6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:203 (discriminator 1)
   15786:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   15788:	f8d8 3008 	ldr.w	r3, [r8, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:202
                success = true;
   1578c:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:204
                dst += reg_var->elm_size_bytes;
   15790:	441d      	add	r5, r3
   15792:	e7e0      	b.n	15756 <tlm_variable_set_value+0x192>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:193
            success = false;
   15794:	f04f 0900 	mov.w	r9, #0
   15798:	e75c      	b.n	15654 <tlm_variable_set_value+0x90>
   1579a:	bf00      	nop
   1579c:	00026542 	.word	0x00026542
   157a0:	000264b1 	.word	0x000264b1
   157a4:	000264e9 	.word	0x000264e9
   157a8:	00026508 	.word	0x00026508
   157ac:	00026535 	.word	0x00026535

000157b0 <tlm_variable_print_value>:
tlm_variable_print_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
            size_t curr_len = strlen(buffer);                       \
            snprintf(buffer+curr_len, len-curr_len, format, *data); \
        } do{ } while(0)

    bool success = false;
    switch(reg_var->elm_type) {
   157b0:	7c03      	ldrb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   157b2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   157b6:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:231
{
   157b8:	4605      	mov	r5, r0
   157ba:	460c      	mov	r4, r1
   157bc:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:242
    switch(reg_var->elm_type) {
   157be:	2b07      	cmp	r3, #7
   157c0:	f200 81f7 	bhi.w	15bb2 <tlm_variable_print_value+0x402>
   157c4:	e8df f013 	tbh	[pc, r3, lsl #1]
   157c8:	008b0008 	.word	0x008b0008
   157cc:	0178010d 	.word	0x0178010d
   157d0:	014701d4 	.word	0x014701d4
   157d4:	014e012a 	.word	0x014e012a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:246
        case tlm_int:
        {
            success = true;
            if (1 == reg_var->elm_size_bytes) {
   157d8:	6883      	ldr	r3, [r0, #8]
   157da:	2b01      	cmp	r3, #1
   157dc:	d120      	bne.n	15820 <tlm_variable_print_value+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:247
                int8_t *data = (int8_t*)(reg_var->data_ptr);
   157de:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:248
                snprintf(buffer, len, "int8:%i", *data);
   157e0:	4aca      	ldr	r2, [pc, #808]	; (15b0c <tlm_variable_print_value+0x35c>)
   157e2:	f997 3000 	ldrsb.w	r3, [r7]
   157e6:	4631      	mov	r1, r6
   157e8:	4620      	mov	r0, r4
   157ea:	f00b fae5 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249
                tlm_variable_print_array(",%i", data, buffer);
   157ee:	f8df 9354 	ldr.w	r9, [pc, #852]	; 15b44 <tlm_variable_print_value+0x394>
   157f2:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 1)
   157f6:	eb07 0308 	add.w	r3, r7, r8
   157fa:	68ea      	ldr	r2, [r5, #12]
   157fc:	b29b      	uxth	r3, r3
   157fe:	4293      	cmp	r3, r2
   15800:	d303      	bcc.n	1580a <tlm_variable_print_value+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:322
        }

        case tlm_string:
        {
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
            success = true;
   15802:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:363
            success = false;
            break;
    }

    return success;
}
   15804:	b003      	add	sp, #12
   15806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:249 (discriminator 3)
                tlm_variable_print_array(",%i", data, buffer);
   1580a:	4620      	mov	r0, r4
   1580c:	f00b fbe8 	bl	20fe0 <strlen>
   15810:	f917 3f01 	ldrsb.w	r3, [r7, #1]!
   15814:	1a31      	subs	r1, r6, r0
   15816:	464a      	mov	r2, r9
   15818:	4420      	add	r0, r4
   1581a:	f00b facd 	bl	20db8 <sniprintf>
   1581e:	e7ea      	b.n	157f6 <tlm_variable_print_value+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:251
            else if (2 == reg_var->elm_size_bytes) {
   15820:	2b02      	cmp	r3, #2
   15822:	d11b      	bne.n	1585c <tlm_variable_print_value+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:252
                int16_t *data = (int16_t*)(reg_var->data_ptr);
   15824:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:253
                snprintf(buffer, len, "int16:%i", *data);
   15828:	4ab9      	ldr	r2, [pc, #740]	; (15b10 <tlm_variable_print_value+0x360>)
   1582a:	f9b8 3000 	ldrsh.w	r3, [r8]
   1582e:	4631      	mov	r1, r6
   15830:	4620      	mov	r0, r4
   15832:	f00b fac1 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254
                tlm_variable_print_array(",%i", data, buffer);
   15836:	2701      	movs	r7, #1
   15838:	f8df 9308 	ldr.w	r9, [pc, #776]	; 15b44 <tlm_variable_print_value+0x394>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 1)
   1583c:	68eb      	ldr	r3, [r5, #12]
   1583e:	429f      	cmp	r7, r3
   15840:	d2df      	bcs.n	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:254 (discriminator 3)
   15842:	4620      	mov	r0, r4
   15844:	f00b fbcc 	bl	20fe0 <strlen>
   15848:	3701      	adds	r7, #1
   1584a:	1a31      	subs	r1, r6, r0
   1584c:	f938 3f02 	ldrsh.w	r3, [r8, #2]!
   15850:	464a      	mov	r2, r9
   15852:	4420      	add	r0, r4
   15854:	f00b fab0 	bl	20db8 <sniprintf>
   15858:	b2bf      	uxth	r7, r7
   1585a:	e7ef      	b.n	1583c <tlm_variable_print_value+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:256
            else if (4 == reg_var->elm_size_bytes) {
   1585c:	2b04      	cmp	r3, #4
   1585e:	d11b      	bne.n	15898 <tlm_variable_print_value+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:257
                int32_t *data = (int32_t*)(reg_var->data_ptr);
   15860:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:258
                snprintf(buffer, len, "int32:%" PRIi32, *data);
   15864:	4aab      	ldr	r2, [pc, #684]	; (15b14 <tlm_variable_print_value+0x364>)
   15866:	f8d8 3000 	ldr.w	r3, [r8]
   1586a:	4631      	mov	r1, r6
   1586c:	4620      	mov	r0, r4
   1586e:	f00b faa3 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259
                tlm_variable_print_array(",%"PRIi32, data, buffer);
   15872:	2701      	movs	r7, #1
   15874:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 15b48 <tlm_variable_print_value+0x398>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 1)
   15878:	68eb      	ldr	r3, [r5, #12]
   1587a:	429f      	cmp	r7, r3
   1587c:	d2c1      	bcs.n	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:259 (discriminator 3)
   1587e:	4620      	mov	r0, r4
   15880:	f00b fbae 	bl	20fe0 <strlen>
   15884:	3701      	adds	r7, #1
   15886:	1a31      	subs	r1, r6, r0
   15888:	f858 3f04 	ldr.w	r3, [r8, #4]!
   1588c:	464a      	mov	r2, r9
   1588e:	4420      	add	r0, r4
   15890:	f00b fa92 	bl	20db8 <sniprintf>
   15894:	b2bf      	uxth	r7, r7
   15896:	e7ef      	b.n	15878 <tlm_variable_print_value+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:261
            else if (8 == reg_var->elm_size_bytes) {
   15898:	2b08      	cmp	r3, #8
   1589a:	f040 818a 	bne.w	15bb2 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:262
                int64_t *data = (int64_t*)(reg_var->data_ptr);
   1589e:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:263
                snprintf(buffer, len, "int64:%"PRIi64, *data);
   158a2:	4631      	mov	r1, r6
   158a4:	e9d8 2300 	ldrd	r2, r3, [r8]
   158a8:	4620      	mov	r0, r4
   158aa:	e9cd 2300 	strd	r2, r3, [sp]
   158ae:	4a9a      	ldr	r2, [pc, #616]	; (15b18 <tlm_variable_print_value+0x368>)
   158b0:	f00b fa82 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264
                tlm_variable_print_array(",%"PRIi64, data, buffer);
   158b4:	2701      	movs	r7, #1
   158b6:	f8df 9294 	ldr.w	r9, [pc, #660]	; 15b4c <tlm_variable_print_value+0x39c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 1)
   158ba:	68eb      	ldr	r3, [r5, #12]
   158bc:	429f      	cmp	r7, r3
   158be:	d2a0      	bcs.n	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:264 (discriminator 3)
   158c0:	4620      	mov	r0, r4
   158c2:	f00b fb8d 	bl	20fe0 <strlen>
   158c6:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   158ca:	1a31      	subs	r1, r6, r0
   158cc:	e9cd 2300 	strd	r2, r3, [sp]
   158d0:	4420      	add	r0, r4
   158d2:	464a      	mov	r2, r9
   158d4:	3701      	adds	r7, #1
   158d6:	f00b fa6f 	bl	20db8 <sniprintf>
   158da:	b2bf      	uxth	r7, r7
   158dc:	e7ed      	b.n	158ba <tlm_variable_print_value+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:275
            if (1 == reg_var->elm_size_bytes) {
   158de:	6883      	ldr	r3, [r0, #8]
   158e0:	2b01      	cmp	r3, #1
   158e2:	d11c      	bne.n	1591e <tlm_variable_print_value+0x16e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:276
                uint8_t *data = (uint8_t*)(reg_var->data_ptr);
   158e4:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:277
                snprintf(buffer, len, "uint8:%u", *data);
   158e6:	4a8d      	ldr	r2, [pc, #564]	; (15b1c <tlm_variable_print_value+0x36c>)
   158e8:	783b      	ldrb	r3, [r7, #0]
   158ea:	4631      	mov	r1, r6
   158ec:	4620      	mov	r0, r4
   158ee:	f00b fa63 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278
                tlm_variable_print_array(",%u", data, buffer);
   158f2:	f8df 925c 	ldr.w	r9, [pc, #604]	; 15b50 <tlm_variable_print_value+0x3a0>
   158f6:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 1)
   158fa:	eb07 0308 	add.w	r3, r7, r8
   158fe:	68ea      	ldr	r2, [r5, #12]
   15900:	b29b      	uxth	r3, r3
   15902:	4293      	cmp	r3, r2
   15904:	f4bf af7d 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:278 (discriminator 3)
   15908:	4620      	mov	r0, r4
   1590a:	f00b fb69 	bl	20fe0 <strlen>
   1590e:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   15912:	1a31      	subs	r1, r6, r0
   15914:	464a      	mov	r2, r9
   15916:	4420      	add	r0, r4
   15918:	f00b fa4e 	bl	20db8 <sniprintf>
   1591c:	e7ed      	b.n	158fa <tlm_variable_print_value+0x14a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:280
            else if (2 == reg_var->elm_size_bytes) {
   1591e:	2b02      	cmp	r3, #2
   15920:	d11c      	bne.n	1595c <tlm_variable_print_value+0x1ac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:281
                uint16_t *data = (uint16_t*)(reg_var->data_ptr);
   15922:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:282
                snprintf(buffer, len, "uint16:%u", *data);
   15926:	4a7e      	ldr	r2, [pc, #504]	; (15b20 <tlm_variable_print_value+0x370>)
   15928:	f8b8 3000 	ldrh.w	r3, [r8]
   1592c:	4631      	mov	r1, r6
   1592e:	4620      	mov	r0, r4
   15930:	f00b fa42 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283
                tlm_variable_print_array(",%u", data, buffer);
   15934:	2701      	movs	r7, #1
   15936:	f8df 9218 	ldr.w	r9, [pc, #536]	; 15b50 <tlm_variable_print_value+0x3a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 1)
   1593a:	68eb      	ldr	r3, [r5, #12]
   1593c:	429f      	cmp	r7, r3
   1593e:	f4bf af60 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:283 (discriminator 3)
   15942:	4620      	mov	r0, r4
   15944:	f00b fb4c 	bl	20fe0 <strlen>
   15948:	3701      	adds	r7, #1
   1594a:	1a31      	subs	r1, r6, r0
   1594c:	f838 3f02 	ldrh.w	r3, [r8, #2]!
   15950:	464a      	mov	r2, r9
   15952:	4420      	add	r0, r4
   15954:	f00b fa30 	bl	20db8 <sniprintf>
   15958:	b2bf      	uxth	r7, r7
   1595a:	e7ee      	b.n	1593a <tlm_variable_print_value+0x18a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:285
            else if (4 == reg_var->elm_size_bytes) {
   1595c:	2b04      	cmp	r3, #4
   1595e:	d11c      	bne.n	1599a <tlm_variable_print_value+0x1ea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:286
                uint32_t *data = (uint32_t*)(reg_var->data_ptr);
   15960:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:287
                snprintf(buffer, len, "uint32:%"PRIu32, *data);
   15964:	4a6f      	ldr	r2, [pc, #444]	; (15b24 <tlm_variable_print_value+0x374>)
   15966:	f8d8 3000 	ldr.w	r3, [r8]
   1596a:	4631      	mov	r1, r6
   1596c:	4620      	mov	r0, r4
   1596e:	f00b fa23 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288
                tlm_variable_print_array(",%"PRIu32, data, buffer);
   15972:	2701      	movs	r7, #1
   15974:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 15b54 <tlm_variable_print_value+0x3a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 1)
   15978:	68eb      	ldr	r3, [r5, #12]
   1597a:	429f      	cmp	r7, r3
   1597c:	f4bf af41 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:288 (discriminator 3)
   15980:	4620      	mov	r0, r4
   15982:	f00b fb2d 	bl	20fe0 <strlen>
   15986:	3701      	adds	r7, #1
   15988:	1a31      	subs	r1, r6, r0
   1598a:	f858 3f04 	ldr.w	r3, [r8, #4]!
   1598e:	464a      	mov	r2, r9
   15990:	4420      	add	r0, r4
   15992:	f00b fa11 	bl	20db8 <sniprintf>
   15996:	b2bf      	uxth	r7, r7
   15998:	e7ee      	b.n	15978 <tlm_variable_print_value+0x1c8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:290
            else if (8 == reg_var->elm_size_bytes) {
   1599a:	2b08      	cmp	r3, #8
   1599c:	f040 8109 	bne.w	15bb2 <tlm_variable_print_value+0x402>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:291
                uint64_t *data = (uint64_t*)(reg_var->data_ptr);
   159a0:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:292
                snprintf(buffer, len, "uint64:%"PRIu64, *data);
   159a4:	4631      	mov	r1, r6
   159a6:	e9d8 2300 	ldrd	r2, r3, [r8]
   159aa:	4620      	mov	r0, r4
   159ac:	e9cd 2300 	strd	r2, r3, [sp]
   159b0:	4a5d      	ldr	r2, [pc, #372]	; (15b28 <tlm_variable_print_value+0x378>)
   159b2:	f00b fa01 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293
                tlm_variable_print_array(",%"PRIu64, data, buffer);
   159b6:	2701      	movs	r7, #1
   159b8:	f8df 919c 	ldr.w	r9, [pc, #412]	; 15b58 <tlm_variable_print_value+0x3a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 1)
   159bc:	68eb      	ldr	r3, [r5, #12]
   159be:	429f      	cmp	r7, r3
   159c0:	f4bf af1f 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:293 (discriminator 3)
   159c4:	4620      	mov	r0, r4
   159c6:	f00b fb0b 	bl	20fe0 <strlen>
   159ca:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   159ce:	1a31      	subs	r1, r6, r0
   159d0:	e9cd 2300 	strd	r2, r3, [sp]
   159d4:	4420      	add	r0, r4
   159d6:	464a      	mov	r2, r9
   159d8:	3701      	adds	r7, #1
   159da:	f00b f9ed 	bl	20db8 <sniprintf>
   159de:	b2bf      	uxth	r7, r7
   159e0:	e7ec      	b.n	159bc <tlm_variable_print_value+0x20c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:303
            char *data = (char*) (reg_var->data_ptr);
   159e2:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:304
            snprintf(buffer, len, "char:%c", *data);
   159e4:	4a51      	ldr	r2, [pc, #324]	; (15b2c <tlm_variable_print_value+0x37c>)
   159e6:	783b      	ldrb	r3, [r7, #0]
   159e8:	4631      	mov	r1, r6
   159ea:	4620      	mov	r0, r4
   159ec:	f00b f9e4 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305
            tlm_variable_print_array(",%c", data, buffer);
   159f0:	f8df 9168 	ldr.w	r9, [pc, #360]	; 15b5c <tlm_variable_print_value+0x3ac>
   159f4:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 1)
   159f8:	eb07 0308 	add.w	r3, r7, r8
   159fc:	68ea      	ldr	r2, [r5, #12]
   159fe:	b29b      	uxth	r3, r3
   15a00:	4293      	cmp	r3, r2
   15a02:	f4bf aefe 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:305 (discriminator 3)
   15a06:	4620      	mov	r0, r4
   15a08:	f00b faea 	bl	20fe0 <strlen>
   15a0c:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   15a10:	1a31      	subs	r1, r6, r0
   15a12:	464a      	mov	r2, r9
   15a14:	4420      	add	r0, r4
   15a16:	f00b f9cf 	bl	20db8 <sniprintf>
   15a1a:	e7ed      	b.n	159f8 <tlm_variable_print_value+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:312
            char *data = (char*) (reg_var->data_ptr);
   15a1c:	6847      	ldr	r7, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:313
            snprintf(buffer, len, "binary:%c", *data);
   15a1e:	4a44      	ldr	r2, [pc, #272]	; (15b30 <tlm_variable_print_value+0x380>)
   15a20:	783b      	ldrb	r3, [r7, #0]
   15a22:	4631      	mov	r1, r6
   15a24:	4620      	mov	r0, r4
   15a26:	f00b f9c7 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314
            tlm_variable_print_array("%c", data, buffer);
   15a2a:	f8df 9134 	ldr.w	r9, [pc, #308]	; 15b60 <tlm_variable_print_value+0x3b0>
   15a2e:	f1c7 0801 	rsb	r8, r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 1)
   15a32:	eb07 0308 	add.w	r3, r7, r8
   15a36:	68ea      	ldr	r2, [r5, #12]
   15a38:	b29b      	uxth	r3, r3
   15a3a:	4293      	cmp	r3, r2
   15a3c:	f4bf aee1 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:314 (discriminator 3)
   15a40:	4620      	mov	r0, r4
   15a42:	f00b facd 	bl	20fe0 <strlen>
   15a46:	f817 3f01 	ldrb.w	r3, [r7, #1]!
   15a4a:	1a31      	subs	r1, r6, r0
   15a4c:	464a      	mov	r2, r9
   15a4e:	4420      	add	r0, r4
   15a50:	f00b f9b2 	bl	20db8 <sniprintf>
   15a54:	e7ed      	b.n	15a32 <tlm_variable_print_value+0x282>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:321
            snprintf(buffer, len, "string:%s", (char*)(reg_var->data_ptr));
   15a56:	6843      	ldr	r3, [r0, #4]
   15a58:	4a36      	ldr	r2, [pc, #216]	; (15b34 <tlm_variable_print_value+0x384>)
   15a5a:	4631      	mov	r1, r6
   15a5c:	4620      	mov	r0, r4
   15a5e:	f00b f9ab 	bl	20db8 <sniprintf>
   15a62:	e6ce      	b.n	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:328
            char *data = (char*) (reg_var->data_ptr);
   15a64:	f8d0 a004 	ldr.w	sl, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:329
            snprintf(buffer, len, "bool:%s", *data ? "true" : "false");
   15a68:	4f33      	ldr	r7, [pc, #204]	; (15b38 <tlm_variable_print_value+0x388>)
   15a6a:	f89a 3000 	ldrb.w	r3, [sl]
   15a6e:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 15b64 <tlm_variable_print_value+0x3b4>
   15a72:	4a32      	ldr	r2, [pc, #200]	; (15b3c <tlm_variable_print_value+0x38c>)
   15a74:	2b00      	cmp	r3, #0
   15a76:	bf14      	ite	ne
   15a78:	463b      	movne	r3, r7
   15a7a:	4643      	moveq	r3, r8
   15a7c:	4631      	mov	r1, r6
   15a7e:	4620      	mov	r0, r4
   15a80:	f00b f99a 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330
            for (i=1; i < reg_var->elm_arr_size; i++) {
   15a84:	46d1      	mov	r9, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   15a86:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 15b68 <tlm_variable_print_value+0x3b8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:330 (discriminator 2)
            for (i=1; i < reg_var->elm_arr_size; i++) {
   15a8a:	f1ca 0301 	rsb	r3, sl, #1
   15a8e:	444b      	add	r3, r9
   15a90:	68ea      	ldr	r2, [r5, #12]
   15a92:	b29b      	uxth	r3, r3
   15a94:	4293      	cmp	r3, r2
   15a96:	f4bf aeb4 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:332
                size_t curr_len = strlen(buffer);
   15a9a:	4620      	mov	r0, r4
   15a9c:	f00b faa0 	bl	20fe0 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:333
                snprintf(buffer+curr_len, len-curr_len, ",%s", *data ? "true" : "false");
   15aa0:	f819 3f01 	ldrb.w	r3, [r9, #1]!
   15aa4:	1a31      	subs	r1, r6, r0
   15aa6:	2b00      	cmp	r3, #0
   15aa8:	bf14      	ite	ne
   15aaa:	463b      	movne	r3, r7
   15aac:	4643      	moveq	r3, r8
   15aae:	465a      	mov	r2, fp
   15ab0:	4420      	add	r0, r4
   15ab2:	f00b f981 	bl	20db8 <sniprintf>
   15ab6:	e7e8      	b.n	15a8a <tlm_variable_print_value+0x2da>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:341
            float *data = (float*) (reg_var->data_ptr);
   15ab8:	f8d0 9004 	ldr.w	r9, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15abc:	2701      	movs	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:342
            snprintf(buffer, len, "float:%f", *data);
   15abe:	f8d9 0000 	ldr.w	r0, [r9]
   15ac2:	f008 fa25 	bl	1df10 <__aeabi_f2d>
   15ac6:	4a1e      	ldr	r2, [pc, #120]	; (15b40 <tlm_variable_print_value+0x390>)
   15ac8:	e9cd 0100 	strd	r0, r1, [sp]
   15acc:	4631      	mov	r1, r6
   15ace:	4620      	mov	r0, r4
   15ad0:	f00b f972 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343
            tlm_variable_print_array(",%f", data, buffer);
   15ad4:	f8df a094 	ldr.w	sl, [pc, #148]	; 15b6c <tlm_variable_print_value+0x3bc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 1)
   15ad8:	68eb      	ldr	r3, [r5, #12]
   15ada:	429f      	cmp	r7, r3
   15adc:	f4bf ae91 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:343 (discriminator 3)
   15ae0:	4620      	mov	r0, r4
   15ae2:	f00b fa7d 	bl	20fe0 <strlen>
   15ae6:	eba6 0b00 	sub.w	fp, r6, r0
   15aea:	eb04 0800 	add.w	r8, r4, r0
   15aee:	f859 0f04 	ldr.w	r0, [r9, #4]!
   15af2:	f008 fa0d 	bl	1df10 <__aeabi_f2d>
   15af6:	3701      	adds	r7, #1
   15af8:	e9cd 0100 	strd	r0, r1, [sp]
   15afc:	4652      	mov	r2, sl
   15afe:	4659      	mov	r1, fp
   15b00:	4640      	mov	r0, r8
   15b02:	f00b f959 	bl	20db8 <sniprintf>
   15b06:	b2bf      	uxth	r7, r7
   15b08:	e7e6      	b.n	15ad8 <tlm_variable_print_value+0x328>
   15b0a:	bf00      	nop
   15b0c:	00026491 	.word	0x00026491
   15b10:	0002649d 	.word	0x0002649d
   15b14:	000264a6 	.word	0x000264a6
   15b18:	000264b5 	.word	0x000264b5
   15b1c:	000264c6 	.word	0x000264c6
   15b20:	000264d3 	.word	0x000264d3
   15b24:	000264dd 	.word	0x000264dd
   15b28:	000264ed 	.word	0x000264ed
   15b2c:	000264ff 	.word	0x000264ff
   15b30:	0002650b 	.word	0x0002650b
   15b34:	00026515 	.word	0x00026515
   15b38:	00026542 	.word	0x00026542
   15b3c:	0002651f 	.word	0x0002651f
   15b40:	0002652b 	.word	0x0002652b
   15b44:	00026499 	.word	0x00026499
   15b48:	000264b0 	.word	0x000264b0
   15b4c:	000264c0 	.word	0x000264c0
   15b50:	000264cf 	.word	0x000264cf
   15b54:	000264e8 	.word	0x000264e8
   15b58:	000264f9 	.word	0x000264f9
   15b5c:	00026507 	.word	0x00026507
   15b60:	00026508 	.word	0x00026508
   15b64:	0002648b 	.word	0x0002648b
   15b68:	00026527 	.word	0x00026527
   15b6c:	00026534 	.word	0x00026534
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:350
            double *data = (double*) (reg_var->data_ptr);
   15b70:	f8d0 8004 	ldr.w	r8, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:351
            snprintf(buffer, len, "double:%f", *data);
   15b74:	4631      	mov	r1, r6
   15b76:	e9d8 2300 	ldrd	r2, r3, [r8]
   15b7a:	4620      	mov	r0, r4
   15b7c:	e9cd 2300 	strd	r2, r3, [sp]
   15b80:	4a0d      	ldr	r2, [pc, #52]	; (15bb8 <tlm_variable_print_value+0x408>)
   15b82:	f00b f919 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352
            tlm_variable_print_array(",%f", data, buffer);
   15b86:	2701      	movs	r7, #1
   15b88:	f8df 9030 	ldr.w	r9, [pc, #48]	; 15bbc <tlm_variable_print_value+0x40c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 1)
   15b8c:	68eb      	ldr	r3, [r5, #12]
   15b8e:	429f      	cmp	r7, r3
   15b90:	f4bf ae37 	bcs.w	15802 <tlm_variable_print_value+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:352 (discriminator 3)
   15b94:	4620      	mov	r0, r4
   15b96:	f00b fa23 	bl	20fe0 <strlen>
   15b9a:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
   15b9e:	1a31      	subs	r1, r6, r0
   15ba0:	e9cd 2300 	strd	r2, r3, [sp]
   15ba4:	4420      	add	r0, r4
   15ba6:	464a      	mov	r2, r9
   15ba8:	3701      	adds	r7, #1
   15baa:	f00b f905 	bl	20db8 <sniprintf>
   15bae:	b2bf      	uxth	r7, r7
   15bb0:	e7ec      	b.n	15b8c <tlm_variable_print_value+0x3dc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:267
                success = false;
   15bb2:	2000      	movs	r0, #0
   15bb4:	e626      	b.n	15804 <tlm_variable_print_value+0x54>
   15bb6:	bf00      	nop
   15bb8:	00026538 	.word	0x00026538
   15bbc:	00026534 	.word	0x00026534

00015bc0 <tlm_variable_get_value>:
tlm_variable_get_value():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:219
{
   15bc0:	b538      	push	{r3, r4, r5, lr}
   15bc2:	4614      	mov	r4, r2
   15bc4:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:220
    const tlm_reg_var_type *reg_var = tlm_variable_get_by_comp_and_name(comp_name, name);
   15bc6:	f7ff fce5 	bl	15594 <tlm_variable_get_by_comp_and_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:223
    if (NULL != reg_var) {
   15bca:	b128      	cbz	r0, 15bd8 <tlm_variable_get_value+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15bcc:	462a      	mov	r2, r5
   15bce:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   15bd0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:224
        success = tlm_variable_print_value(reg_var, buffer, len);
   15bd4:	f7ff bdec 	b.w	157b0 <tlm_variable_print_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_var.c:228
}
   15bd8:	bd38      	pop	{r3, r4, r5, pc}

00015bda <get_tlm_one_comp>:
get_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
 *                  the size of the telemetry in raw bytes
 * @param binary    If null, only the size of telemetry will be obtained.
 *                  If non-null, the telemetry will be saved into this data pointer.
 */
static void get_tlm_one_comp(tlm_component *comp_ptr, void *arg_size, void *binary)
{
   15bda:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15bde:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:33
{
   15be0:	4607      	mov	r7, r0
   15be2:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:34
    void *hint = 0;
   15be4:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39
    tlm_reg_var_type *var = NULL;
    uint32_t *size = arg_size;
    uint32_t i = 0, sizeOfVar = 0;

    if (NULL != size && NULL != comp_ptr) {
   15be6:	460d      	mov	r5, r1
   15be8:	b129      	cbz	r1, 15bf6 <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:39 (discriminator 1)
   15bea:	b120      	cbz	r0, 15bf6 <get_tlm_one_comp+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15bec:	6878      	ldr	r0, [r7, #4]
   15bee:	f000 f875 	bl	15cdc <c_list_node_count>
   15bf2:	4284      	cmp	r4, r0
   15bf4:	d302      	bcc.n	15bfc <get_tlm_one_comp+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:51
                }
                (*size) += sizeOfVar;
            }
        }
    }
}
   15bf6:	b002      	add	sp, #8
   15bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:41
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   15bfc:	aa01      	add	r2, sp, #4
   15bfe:	4621      	mov	r1, r4
   15c00:	6878      	ldr	r0, [r7, #4]
   15c02:	f000 f88a 	bl	15d1a <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:42
            if (NULL != var) {
   15c06:	b178      	cbz	r0, 15c28 <get_tlm_one_comp+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:43
                sizeOfVar = (var->elm_arr_size) * (var->elm_size_bytes);
   15c08:	68c3      	ldr	r3, [r0, #12]
   15c0a:	6886      	ldr	r6, [r0, #8]
   15c0c:	435e      	muls	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:44
                if (binary) {
   15c0e:	f1b8 0f00 	cmp.w	r8, #0
   15c12:	d006      	beq.n	15c22 <get_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:45
                    memcpy(((char*)binary + (*size)), var->data_ptr, sizeOfVar);
   15c14:	682b      	ldr	r3, [r5, #0]
   15c16:	6841      	ldr	r1, [r0, #4]
   15c18:	4632      	mov	r2, r6
   15c1a:	eb08 0003 	add.w	r0, r8, r3
   15c1e:	f009 fc34 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:47
                (*size) += sizeOfVar;
   15c22:	682b      	ldr	r3, [r5, #0]
   15c24:	441e      	add	r6, r3
   15c26:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:40 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15c28:	3401      	adds	r4, #1
   15c2a:	e7df      	b.n	15bec <get_tlm_one_comp+0x12>

00015c2c <cmp_tlm_one_comp>:
cmp_tlm_one_comp():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
 * Compare telemetry
 * @param binary      The binary telemetry to compare
 * @param offset_arg  When non-zero, then telemetry is the same as binary
 */
static void cmp_tlm_one_comp(tlm_component *comp_ptr, void *binary, void *offset_arg)
{
   15c2c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   15c30:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:85
{
   15c32:	4688      	mov	r8, r1
   15c34:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:86
    void *hint = 0;
   15c36:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:91
    tlm_reg_var_type *var = NULL;
    uint32_t size = 0, i = 0;
    uint32_t *offset = offset_arg;

    if (NULL != comp_ptr) {
   15c38:	4606      	mov	r6, r0
   15c3a:	b1c0      	cbz	r0, 15c6e <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 1)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15c3c:	6870      	ldr	r0, [r6, #4]
   15c3e:	f000 f84d 	bl	15cdc <c_list_node_count>
   15c42:	4284      	cmp	r4, r0
   15c44:	d213      	bcs.n	15c6e <cmp_tlm_one_comp+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:93
            var = c_list_get_elm_at(comp_ptr->var_list, i, &hint);
   15c46:	aa01      	add	r2, sp, #4
   15c48:	4621      	mov	r1, r4
   15c4a:	6870      	ldr	r0, [r6, #4]
   15c4c:	f000 f865 	bl	15d1a <c_list_get_elm_at>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:94
            if (NULL != var) {
   15c50:	b190      	cbz	r0, 15c78 <cmp_tlm_one_comp+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   15c52:	68c3      	ldr	r3, [r0, #12]
   15c54:	6885      	ldr	r5, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   15c56:	f8d7 9000 	ldr.w	r9, [r7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:95
                size = (var->elm_arr_size) * (var->elm_size_bytes);
   15c5a:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:96
                if (0 != memcmp(((char*)binary + (*offset)), var->data_ptr, size)) {
   15c5c:	6841      	ldr	r1, [r0, #4]
   15c5e:	462a      	mov	r2, r5
   15c60:	eb08 0009 	add.w	r0, r8, r9
   15c64:	f009 fc02 	bl	1f46c <memcmp>
   15c68:	b120      	cbz	r0, 15c74 <cmp_tlm_one_comp+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:97
                    *offset = 0;
   15c6a:	2300      	movs	r3, #0
   15c6c:	603b      	str	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:106
                    *offset += size;
                }
            }
        }
    }
}
   15c6e:	b003      	add	sp, #12
   15c70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:101
                    *offset += size;
   15c74:	444d      	add	r5, r9
   15c76:	603d      	str	r5, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:92 (discriminator 2)
        for(i=0; i < c_list_node_count(comp_ptr->var_list); i++) {
   15c78:	3401      	adds	r4, #1
   15c7a:	e7df      	b.n	15c3c <cmp_tlm_one_comp+0x10>

00015c7c <tlm_binary_get_size_one>:
tlm_binary_get_size_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:54
{
   15c7c:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:55
    uint32_t size = 0;
   15c7e:	2200      	movs	r2, #0
   15c80:	a902      	add	r1, sp, #8
   15c82:	f841 2d04 	str.w	r2, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:56
    get_tlm_one_comp(comp_ptr, &size, NULL);
   15c86:	f7ff ffa8 	bl	15bda <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:58
}
   15c8a:	9801      	ldr	r0, [sp, #4]
   15c8c:	b003      	add	sp, #12
   15c8e:	f85d fb04 	ldr.w	pc, [sp], #4

00015c92 <tlm_binary_get_one>:
tlm_binary_get_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:67
{
   15c92:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:68
    uint32_t offset = 0;
   15c94:	2200      	movs	r2, #0
   15c96:	ab02      	add	r3, sp, #8
   15c98:	f843 2d04 	str.w	r2, [r3, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:69
    get_tlm_one_comp(comp_ptr, &offset, binary);
   15c9c:	460a      	mov	r2, r1
   15c9e:	4619      	mov	r1, r3
   15ca0:	f7ff ff9b 	bl	15bda <get_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:71
}
   15ca4:	9801      	ldr	r0, [sp, #4]
   15ca6:	b003      	add	sp, #12
   15ca8:	f85d fb04 	ldr.w	pc, [sp], #4

00015cac <tlm_binary_compare_one>:
tlm_binary_compare_one():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110

bool tlm_binary_compare_one(tlm_component *comp_ptr, char *binary)
{
    uint32_t offset = 0;
   15cac:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:109
{
   15cae:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:110
    uint32_t offset = 0;
   15cb0:	aa02      	add	r2, sp, #8
   15cb2:	f842 3d04 	str.w	r3, [r2, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:111
    cmp_tlm_one_comp(comp_ptr, binary, &offset);
   15cb6:	f7ff ffb9 	bl	15c2c <cmp_tlm_one_comp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/tlm/src/c_tlm_binary.c:113
    return (0 != offset);
}
   15cba:	9801      	ldr	r0, [sp, #4]
   15cbc:	3000      	adds	r0, #0
   15cbe:	bf18      	it	ne
   15cc0:	2001      	movne	r0, #1
   15cc2:	b003      	add	sp, #12
   15cc4:	f85d fb04 	ldr.w	pc, [sp], #4

00015cc8 <c_list_create>:
c_list_create():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   15cc8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   15cca:	200c      	movs	r0, #12
   15ccc:	f009 fb9e 	bl	1f40c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   15cd0:	b118      	cbz	r0, 15cda <c_list_create+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   15cd2:	2300      	movs	r3, #0
   15cd4:	6003      	str	r3, [r0, #0]
   15cd6:	6043      	str	r3, [r0, #4]
   15cd8:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   15cda:	bd08      	pop	{r3, pc}

00015cdc <c_list_node_count>:
c_list_node_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83
}

uint32_t c_list_node_count(const c_list_ptr p)
{
    const c_list_type *list = p;
    return list ? list->node_count : 0;
   15cdc:	b100      	cbz	r0, 15ce0 <c_list_node_count+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:83 (discriminator 1)
   15cde:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:84
}
   15ce0:	4770      	bx	lr

00015ce2 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:87

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   15ce2:	b538      	push	{r3, r4, r5, lr}
   15ce4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   15ce6:	4604      	mov	r4, r0
   15ce8:	b908      	cbnz	r0, 15cee <c_list_insert_elm_end+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   15cea:	2000      	movs	r0, #0
   15cec:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   15cee:	2008      	movs	r0, #8
   15cf0:	f009 fb8c 	bl	1f40c <malloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   15cf4:	2800      	cmp	r0, #0
   15cf6:	d0f8      	beq.n	15cea <c_list_insert_elm_end+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   15cf8:	2300      	movs	r3, #0
   15cfa:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   15cfc:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   15cfe:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   15d00:	b933      	cbnz	r3, 15d10 <c_list_insert_elm_end+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   15d02:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   15d04:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   15d06:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   15d08:	3301      	adds	r3, #1
   15d0a:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   15d0c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:114
}
   15d0e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   15d10:	6863      	ldr	r3, [r4, #4]
   15d12:	2b00      	cmp	r3, #0
   15d14:	d0f6      	beq.n	15d04 <c_list_insert_elm_end+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   15d16:	6058      	str	r0, [r3, #4]
   15d18:	e7f4      	b.n	15d04 <c_list_insert_elm_end+0x22>

00015d1a <c_list_get_elm_at>:
c_list_get_elm_at():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:144
}

void* c_list_get_elm_at(c_list_ptr p, uint32_t index, void **hint)
{
    c_list_type *list = p;
    if(!list) {
   15d1a:	b198      	cbz	r0, 15d44 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149
        return false;
    }

    c_data_node_type **hint_node = (c_data_node_type**)hint;
    if (hint_node && 0 != index) {
   15d1c:	b12a      	cbz	r2, 15d2a <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:149 (discriminator 1)
   15d1e:	b121      	cbz	r1, 15d2a <c_list_get_elm_at+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:150
        c_data_node_type *node = *hint_node;
   15d20:	6810      	ldr	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:151
        if (NULL != node) {
   15d22:	b178      	cbz	r0, 15d44 <c_list_get_elm_at+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:169
        if (!iterator || 0 != index) {
            return NULL;
        }
        else {
            if (hint_node) {
                *hint_node = iterator->next;
   15d24:	6843      	ldr	r3, [r0, #4]
   15d26:	6013      	str	r3, [r2, #0]
   15d28:	e008      	b.n	15d3c <c_list_get_elm_at+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:157
        c_data_node_type *iterator = list->head;
   15d2a:	6800      	ldr	r0, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158
        while (index != 0 && NULL != iterator)
   15d2c:	b141      	cbz	r1, 15d40 <c_list_get_elm_at+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:158 (discriminator 1)
   15d2e:	b900      	cbnz	r0, 15d32 <c_list_get_elm_at+0x18>
   15d30:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:160
            iterator = iterator->next;
   15d32:	6840      	ldr	r0, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:161
            --index;
   15d34:	3901      	subs	r1, #1
   15d36:	e7f9      	b.n	15d2c <c_list_get_elm_at+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:168
            if (hint_node) {
   15d38:	2a00      	cmp	r2, #0
   15d3a:	d1f3      	bne.n	15d24 <c_list_get_elm_at+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:171
            }
            return iterator->data_ptr;
   15d3c:	6800      	ldr	r0, [r0, #0]
   15d3e:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:164
        if (!iterator || 0 != index) {
   15d40:	2800      	cmp	r0, #0
   15d42:	d1f9      	bne.n	15d38 <c_list_get_elm_at+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:174
        }
    }
}
   15d44:	4770      	bx	lr

00015d46 <c_list_find_elm>:
c_list_find_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:178

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   15d46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15d48:	460d      	mov	r5, r1
   15d4a:	4616      	mov	r6, r2
   15d4c:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   15d4e:	b908      	cbnz	r0, 15d54 <c_list_find_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   15d50:	2000      	movs	r0, #0
   15d52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   15d54:	2900      	cmp	r1, #0
   15d56:	d0fb      	beq.n	15d50 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   15d58:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   15d5a:	2c00      	cmp	r4, #0
   15d5c:	d0f8      	beq.n	15d50 <c_list_find_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   15d5e:	9b06      	ldr	r3, [sp, #24]
   15d60:	463a      	mov	r2, r7
   15d62:	4631      	mov	r1, r6
   15d64:	6820      	ldr	r0, [r4, #0]
   15d66:	47a8      	blx	r5
   15d68:	b908      	cbnz	r0, 15d6e <c_list_find_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   15d6a:	6820      	ldr	r0, [r4, #0]
   15d6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   15d6e:	6864      	ldr	r4, [r4, #4]
   15d70:	e7f3      	b.n	15d5a <c_list_find_elm+0x14>

00015d72 <c_list_for_each_elm>:
c_list_for_each_elm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   15d72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15d74:	460d      	mov	r5, r1
   15d76:	4616      	mov	r6, r2
   15d78:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   15d7a:	b908      	cbnz	r0, 15d80 <c_list_for_each_elm+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   15d7c:	2001      	movs	r0, #1
   15d7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   15d80:	2900      	cmp	r1, #0
   15d82:	d0fb      	beq.n	15d7c <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   15d84:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   15d86:	2c00      	cmp	r4, #0
   15d88:	d0f8      	beq.n	15d7c <c_list_for_each_elm+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   15d8a:	9b06      	ldr	r3, [sp, #24]
   15d8c:	463a      	mov	r2, r7
   15d8e:	4631      	mov	r1, r6
   15d90:	6820      	ldr	r0, [r4, #0]
   15d92:	47a8      	blx	r5
   15d94:	b108      	cbz	r0, 15d9a <c_list_for_each_elm+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   15d96:	6864      	ldr	r4, [r4, #4]
   15d98:	e7f5      	b.n	15d86 <c_list_for_each_elm+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/c_list.c:247
}
   15d9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
static const char* const NO_HELP_STR_PTR        = "";


void CommandProcessor::addHandler(CmdHandlerFuncPtr pFunc, const char* pPersistantCmdStr,
                                  const char* pPersistentCmdHelpStr,  void* pDataParam)
{
   15d9c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
    handler.pCmdHelpText = pPersistentCmdHelpStr;
    handler.pFunc = pFunc;
    handler.pDataParam = pDataParam;

    if (0 == handler.pCmdHelpText) {
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   15da0:	4f1c      	ldr	r7, [pc, #112]	; (15e14 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:36
{
   15da2:	4604      	mov	r4, r0
   15da4:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:44
        handler.pCmdHelpText = NO_HELP_STR_PTR;
   15da6:	2b00      	cmp	r3, #0
   15da8:	bf18      	it	ne
   15daa:	461f      	movne	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46
    }
    if (0 != handler.pCommandStr && 0 != handler.pFunc) {
   15dac:	4691      	mov	r9, r2
   15dae:	b372      	cbz	r2, 15e0e <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:46 (discriminator 1)
   15db0:	b369      	cbz	r1, 15e0e <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x72>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
}

template <typename TYPE>
void VECTOR<TYPE>::push_back(const TYPE& element)
{
    if(mVectorSize >= mVectorCapacity)
   15db2:	6843      	ldr	r3, [r0, #4]
   15db4:	6882      	ldr	r2, [r0, #8]
   15db6:	429a      	cmp	r2, r3
   15db8:	d31c      	bcc.n	15df4 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
    {
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   15dba:	6805      	ldr	r5, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418

// ******* PRIVATE FUNCTIONS:
template <typename TYPE>
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
{
    if(newSize < mVectorCapacity)
   15dbc:	195d      	adds	r5, r3, r5
   15dbe:	d219      	bcs.n	15df4 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443

    // Point data to new memory
    mpObjPtrs = newData;
#else
    // Allocate pointers of the datatype
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   15dc0:	00a9      	lsls	r1, r5, #2
   15dc2:	68c0      	ldr	r0, [r0, #12]
   15dc4:	f00a fe10 	bl	209e8 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446

    // Allocate new objects ONLY at each of the new pointers
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15dc8:	68a6      	ldr	r6, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   15dca:	60e0      	str	r0, [r4, #12]
   15dcc:	ea4f 0a86 	mov.w	sl, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15dd0:	42b5      	cmp	r5, r6
   15dd2:	d90e      	bls.n	15df2 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   15dd4:	2010      	movs	r0, #16
   15dd6:	f001 f989 	bl	170ec <operator new(unsigned int)>
   15dda:	4683      	mov	fp, r0
   15ddc:	2210      	movs	r2, #16
   15dde:	2100      	movs	r1, #0
   15de0:	f009 fb78 	bl	1f4d4 <memset>
   15de4:	68e3      	ldr	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   15de6:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   15de8:	f843 b00a 	str.w	fp, [r3, sl]
   15dec:	f10a 0a04 	add.w	sl, sl, #4
   15df0:	e7ee      	b.n	15dd0 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    }
#endif

    mVectorCapacity = newSize;
   15df2:	6065      	str	r5, [r4, #4]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   15df4:	68a3      	ldr	r3, [r4, #8]
   15df6:	68e2      	ldr	r2, [r4, #12]
   15df8:	1c59      	adds	r1, r3, #1
   15dfa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   15dfe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   15e00:	60a1      	str	r1, [r4, #8]
   15e02:	f8c3 9000 	str.w	r9, [r3]
   15e06:	605f      	str	r7, [r3, #4]
   15e08:	f8c3 8008 	str.w	r8, [r3, #8]
   15e0c:	60da      	str	r2, [r3, #12]
   15e0e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e12:	bf00      	nop
   15e14:	00027b84 	.word	0x00027b84

00015e18 <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:126
    }
    return found;
}

void CommandProcessor::getRegisteredCommandList(CharDev& output)
{
   15e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e1c:	460c      	mov	r4, r1
   15e1e:	b093      	sub	sp, #76	; 0x4c
   15e20:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:128
    char buffer[64];
    output.put(SUPPORTED_COMMANDS_STR);
   15e22:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15e26:	491f      	ldr	r1, [pc, #124]	; (15ea4 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   15e28:	4620      	mov	r0, r4
   15e2a:	f001 ffab 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131
    char *ptr = NULL;

    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15e2e:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
                strcpy(ptr, "...");
            }
            output.printf(buffer);
        } else {
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   15e30:	f8df 9078 	ldr.w	r9, [pc, #120]	; 15eac <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   15e34:	f8df a078 	ldr.w	sl, [pc, #120]	; 15eb0 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   15e38:	f8df b078 	ldr.w	fp, [pc, #120]	; 15eb4 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 1)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15e3c:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15e40:	429d      	cmp	r5, r3
   15e42:	d226      	bcs.n	15e92 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x7a>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   15e44:	f8d8 300c 	ldr.w	r3, [r8, #12]
   15e48:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:134
        if (strlen(c.pCmdHelpText) > 32) {
   15e4c:	687b      	ldr	r3, [r7, #4]
   15e4e:	4618      	mov	r0, r3
   15e50:	9301      	str	r3, [sp, #4]
   15e52:	f00b f8c5 	bl	20fe0 <strlen>
   15e56:	2820      	cmp	r0, #32
   15e58:	9b01      	ldr	r3, [sp, #4]
   15e5a:	d914      	bls.n	15e86 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:135
            sprintf(buffer, "\n %10s : %.32s ...", c.pCommandStr, c.pCmdHelpText);
   15e5c:	ae02      	add	r6, sp, #8
   15e5e:	683a      	ldr	r2, [r7, #0]
   15e60:	4651      	mov	r1, sl
   15e62:	4630      	mov	r0, r6
   15e64:	f00a ffdc 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:138
            if ((ptr = strrchr(buffer, '\n')) > buffer) {
   15e68:	210a      	movs	r1, #10
   15e6a:	4630      	mov	r0, r6
   15e6c:	f00b f90e 	bl	2108c <strrchr>
   15e70:	4286      	cmp	r6, r0
   15e72:	d202      	bcs.n	15e7a <CommandProcessor::getRegisteredCommandList(CharDev&)+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:139
                strcpy(ptr, "...");
   15e74:	4659      	mov	r1, fp
   15e76:	f00b f8ab 	bl	20fd0 <strcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:141
            output.printf(buffer);
   15e7a:	4631      	mov	r1, r6
   15e7c:	4620      	mov	r0, r4
   15e7e:	f001 ffcb 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:131 (discriminator 2)
    for(unsigned int i=0; i<mCmdHandlerVector.size(); i++)
   15e82:	3501      	adds	r5, #1
   15e84:	e7da      	b.n	15e3c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:143
            output.printf("\n %10s : %s", c.pCommandStr, c.pCmdHelpText);
   15e86:	683a      	ldr	r2, [r7, #0]
   15e88:	4649      	mov	r1, r9
   15e8a:	4620      	mov	r0, r4
   15e8c:	f001 ffc4 	bl	17e18 <CharDev::printf(char const*, ...)>
   15e90:	e7f7      	b.n	15e82 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:147
        }
    }

    output.putline("\n 'help <command>' to get help of a command");
   15e92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15e96:	4904      	ldr	r1, [pc, #16]	; (15ea8 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   15e98:	4620      	mov	r0, r4
   15e9a:	f001 ff87 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:148
}
   15e9e:	b013      	add	sp, #76	; 0x4c
   15ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ea4:	000265c2 	.word	0x000265c2
   15ea8:	000265f5 	.word	0x000265f5
   15eac:	000265e9 	.word	0x000265e9
   15eb0:	000265d6 	.word	0x000265d6
   15eb4:	00025c19 	.word	0x00025c19

00015eb8 <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151

void CommandProcessor::getHelpText(str& helpForCmd, CharDev& output)
{
   15eb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15ebc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    // If there is a parameter, get help for this specific command
    // where this parameter itself is a command name
    if(helpForCmd.getLen() > 0)
   15ebe:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:151
{
   15ec0:	460f      	mov	r7, r1
   15ec2:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:154
    if(helpForCmd.getLen() > 0)
   15ec4:	f000 fe8f 	bl	16be6 <str::getLen() const>
   15ec8:	2800      	cmp	r0, #0
   15eca:	dd23      	ble.n	15f14 <CommandProcessor::getHelpText(str&, CharDev&)+0x5c>
   15ecc:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 1)
    {
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15ece:	68ab      	ldr	r3, [r5, #8]
   15ed0:	429c      	cmp	r4, r3
   15ed2:	d21b      	bcs.n	15f0c <CommandProcessor::getHelpText(str&, CharDev&)+0x54>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15ed4:	68eb      	ldr	r3, [r5, #12]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
        {
            CmdProcessorType &cp = mCmdHandlerVector[i];
            if(helpForCmd.compareToIgnoreCase(cp.pCommandStr))
   15ed6:	4638      	mov	r0, r7
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15ed8:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:159
   15edc:	f8d8 1000 	ldr.w	r1, [r8]
   15ee0:	f000 fec8 	bl	16c74 <str::compareToIgnoreCase(char const*) const>
   15ee4:	b180      	cbz	r0, 15f08 <CommandProcessor::getHelpText(str&, CharDev&)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
            {
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15ee6:	f8d8 3004 	ldr.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15eea:	b15b      	cbz	r3, 15f04 <CommandProcessor::getHelpText(str&, CharDev&)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:161
                const char* out = (0 == cp.pCmdHelpText || '\0' == cp.pCmdHelpText[0]) ?
   15eec:	781a      	ldrb	r2, [r3, #0]
   15eee:	490c      	ldr	r1, [pc, #48]	; (15f20 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15ef0:	2a00      	cmp	r2, #0
   15ef2:	bf18      	it	ne
   15ef4:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:163 (discriminator 3)
                output.putline(out);
   15ef6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
                return;
            }
        }
        output.putline(CMD_INVALID_STR);
   15efa:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
    }
    else {
        getRegisteredCommandList(output);
    }
}
   15efc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15f00:	f001 bf54 	b.w	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:162
                                    NO_HELP_STR : cp.pCmdHelpText;
   15f04:	4906      	ldr	r1, [pc, #24]	; (15f20 <CommandProcessor::getHelpText(str&, CharDev&)+0x68>)
   15f06:	e7f6      	b.n	15ef6 <CommandProcessor::getHelpText(str&, CharDev&)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:156 (discriminator 2)
        for(unsigned int i=0; i < mCmdHandlerVector.size(); i++)
   15f08:	3401      	adds	r4, #1
   15f0a:	e7e0      	b.n	15ece <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:167
        output.putline(CMD_INVALID_STR);
   15f0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   15f10:	4904      	ldr	r1, [pc, #16]	; (15f24 <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   15f12:	e7f2      	b.n	15efa <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15f14:	4631      	mov	r1, r6
   15f16:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:172
}
   15f18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:170
        getRegisteredCommandList(output);
   15f1c:	f7ff bf7c 	b.w	15e18 <CommandProcessor::getRegisteredCommandList(CharDev&)>
   15f20:	00026547 	.word	0x00026547
   15f24:	0002656b 	.word	0x0002656b

00015f28 <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:175

void CommandProcessor::prepareCmdParam(str& input, const char* pCmdToRemove)
{
   15f28:	b538      	push	{r3, r4, r5, lr}
   15f2a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177
    int i = 0;
    for (i=0; i<input.getLen(); i++) {
   15f2c:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 1)
   15f2e:	4628      	mov	r0, r5
   15f30:	f000 fe59 	bl	16be6 <str::getLen() const>
   15f34:	4284      	cmp	r4, r0
   15f36:	da08      	bge.n	15f4a <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:178
        if (input[i] == ' ') {
   15f38:	4621      	mov	r1, r4
   15f3a:	4628      	mov	r0, r5
   15f3c:	f000 ffea 	bl	16f14 <str::operator[](int)>
   15f40:	7803      	ldrb	r3, [r0, #0]
   15f42:	2b20      	cmp	r3, #32
   15f44:	d001      	beq.n	15f4a <CommandProcessor::prepareCmdParam(str&, char const*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:177 (discriminator 2)
    for (i=0; i<input.getLen(); i++) {
   15f46:	3401      	adds	r4, #1
   15f48:	e7f1      	b.n	15f2e <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:182
            break;
        }
    }
    input.eraseFirst(i);
   15f4a:	4621      	mov	r1, r4
   15f4c:	4628      	mov	r0, r5
   15f4e:	f000 ff35 	bl	16dbc <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15f52:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:184
}
   15f54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:183
    input.trimStart(" ");
   15f58:	4901      	ldr	r1, [pc, #4]	; (15f60 <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   15f5a:	f000 bf97 	b.w	16e8c <str::trimStart(char const*)>
   15f5e:	bf00      	nop
   15f60:	00027beb 	.word	0x00027beb

00015f64 <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f68:	460c      	mov	r4, r1
   15f6a:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15f6c:	4951      	ldr	r1, [pc, #324]	; (160b4 <CommandProcessor::handleCommand(str&, CharDev&)+0x150>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15f6e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15f70:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:52
{
   15f72:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:54
    cmd.trimEnd("\r\n");
   15f74:	f000 ffaa 	bl	16ecc <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:58
    if(cmd.beginsWithWholeWordIgnoreCase(HELP_STR))
   15f78:	2220      	movs	r2, #32
   15f7a:	494f      	ldr	r1, [pc, #316]	; (160b8 <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   15f7c:	4620      	mov	r0, r4
   15f7e:	f000 ff01 	bl	16d84 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   15f82:	4607      	mov	r7, r0
   15f84:	2800      	cmp	r0, #0
   15f86:	d14c      	bne.n	16022 <CommandProcessor::handleCommand(str&, CharDev&)+0xbe>
   15f88:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 1)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   15f8a:	68b3      	ldr	r3, [r6, #8]
   15f8c:	4599      	cmp	r9, r3
   15f8e:	d356      	bcc.n	1603e <CommandProcessor::handleCommand(str&, CharDev&)+0xda>
   15f90:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102 (discriminator 1)
                cmd.scanf("%7s ", shortCmd);
   15f94:	f8df b12c 	ldr.w	fp, [pc, #300]	; 160c4 <CommandProcessor::handleCommand(str&, CharDev&)+0x160>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90 (discriminator 1)
            for(i=0; i < mCmdHandlerVector.size(); i++)
   15f98:	68b3      	ldr	r3, [r6, #8]
   15f9a:	4599      	cmp	r9, r3
   15f9c:	f080 8082 	bcs.w	160a4 <CommandProcessor::handleCommand(str&, CharDev&)+0x140>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   15fa0:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15fa2:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15fa4:	eb0d 0102 	add.w	r1, sp, r2
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   15fa8:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
   15fac:	a803      	add	r0, sp, #12
   15fae:	f000 fdf3 	bl	16b98 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:94
                regCmd = cp.pCommandStr;  /* Set to the command text */
   15fb2:	f8d8 1000 	ldr.w	r1, [r8]
   15fb6:	a803      	add	r0, sp, #12
   15fb8:	f001 f860 	bl	1707c <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15fbc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15fbe:	aa01      	add	r2, sp, #4
   15fc0:	4659      	mov	r1, fp
   15fc2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:101
                char shortCmd[8] = { 0 };
   15fc4:	9301      	str	r3, [sp, #4]
   15fc6:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:102
                cmd.scanf("%7s ", shortCmd);
   15fc8:	f000 fe16 	bl	16bf8 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103
                if(strlen(shortCmd) >= 2 && regCmd.beginsWithIgnoreCase(shortCmd))
   15fcc:	a801      	add	r0, sp, #4
   15fce:	f00b f807 	bl	20fe0 <strlen>
   15fd2:	2801      	cmp	r0, #1
   15fd4:	d960      	bls.n	16098 <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:103 (discriminator 1)
   15fd6:	a901      	add	r1, sp, #4
   15fd8:	a803      	add	r0, sp, #12
   15fda:	f000 febc 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   15fde:	4682      	mov	sl, r0
   15fe0:	2800      	cmp	r0, #0
   15fe2:	d059      	beq.n	16098 <CommandProcessor::handleCommand(str&, CharDev&)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:105
                    prepareCmdParam(cmd, cp.pCommandStr);
   15fe4:	f8d8 2000 	ldr.w	r2, [r8]
   15fe8:	4621      	mov	r1, r4
   15fea:	4630      	mov	r0, r6
   15fec:	f7ff ff9c 	bl	15f28 <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:106
                    if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   15ff0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   15ff4:	f8d8 200c 	ldr.w	r2, [r8, #12]
   15ff8:	4629      	mov	r1, r5
   15ffa:	4620      	mov	r0, r4
   15ffc:	4798      	blx	r3
   15ffe:	b960      	cbnz	r0, 1601a <CommandProcessor::handleCommand(str&, CharDev&)+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:107
                        output.putline(COMMAND_FAILURE_HELP);
   16000:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16004:	492d      	ldr	r1, [pc, #180]	; (160bc <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   16006:	4628      	mov	r0, r5
   16008:	f001 fed0 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:108
                        output.putline(cp.pCmdHelpText);
   1600c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16010:	f8d8 1004 	ldr.w	r1, [r8, #4]
   16014:	4628      	mov	r0, r5
   16016:	f001 fec9 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:112
                    break;
   1601a:	a803      	add	r0, sp, #12
   1601c:	f000 fdd0 	bl	16bc0 <str::~str()>
   16020:	e035      	b.n	1608e <CommandProcessor::handleCommand(str&, CharDev&)+0x12a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:60
        prepareCmdParam(cmd, HELP_STR);
   16022:	4a25      	ldr	r2, [pc, #148]	; (160b8 <CommandProcessor::handleCommand(str&, CharDev&)+0x154>)
   16024:	4621      	mov	r1, r4
   16026:	4630      	mov	r0, r6
   16028:	f7ff ff7e 	bl	15f28 <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:61
        getHelpText(cmd, output);
   1602c:	462a      	mov	r2, r5
   1602e:	4621      	mov	r1, r4
   16030:	4630      	mov	r0, r6
   16032:	f7ff ff41 	bl	15eb8 <CommandProcessor::getHelpText(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:123
}
   16036:	4638      	mov	r0, r7
   16038:	b011      	add	sp, #68	; 0x44
   1603a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1603e:	68f3      	ldr	r3, [r6, #12]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
            if(cmd.beginsWithWholeWordIgnoreCase(cp.pCommandStr))
   16040:	2220      	movs	r2, #32
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   16042:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:72
   16046:	4620      	mov	r0, r4
   16048:	f8d8 1000 	ldr.w	r1, [r8]
   1604c:	f000 fe9a 	bl	16d84 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   16050:	4682      	mov	sl, r0
   16052:	b1f0      	cbz	r0, 16092 <CommandProcessor::handleCommand(str&, CharDev&)+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:74
                prepareCmdParam(cmd, cp.pCommandStr);
   16054:	f8d8 2000 	ldr.w	r2, [r8]
   16058:	4621      	mov	r1, r4
   1605a:	4630      	mov	r0, r6
   1605c:	f7ff ff64 	bl	15f28 <CommandProcessor::prepareCmdParam(str&, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:75
                if (!cp.pFunc(cmd, output, cp.pDataParam)) {
   16060:	f8d8 3008 	ldr.w	r3, [r8, #8]
   16064:	f8d8 200c 	ldr.w	r2, [r8, #12]
   16068:	4629      	mov	r1, r5
   1606a:	4620      	mov	r0, r4
   1606c:	4798      	blx	r3
   1606e:	4607      	mov	r7, r0
   16070:	2800      	cmp	r0, #0
   16072:	d1e0      	bne.n	16036 <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:76
                    output.putline(COMMAND_FAILURE_HELP);
   16074:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16078:	4910      	ldr	r1, [pc, #64]	; (160bc <CommandProcessor::handleCommand(str&, CharDev&)+0x158>)
   1607a:	4628      	mov	r0, r5
   1607c:	f001 fe96 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:77
                    output.putline(cp.pCmdHelpText);
   16080:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16084:	f8d8 1004 	ldr.w	r1, [r8, #4]
   16088:	4628      	mov	r0, r5
   1608a:	f001 fe8f 	bl	17dac <CharDev::putline(char const*, unsigned int)>
   1608e:	4657      	mov	r7, sl
   16090:	e7d1      	b.n	16036 <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:67 (discriminator 2)
        for(i=0; i < mCmdHandlerVector.size(); i++)
   16092:	f109 0901 	add.w	r9, r9, #1
   16096:	e778      	b.n	15f8a <CommandProcessor::handleCommand(str&, CharDev&)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:93
                STR_ON_STACK(regCmd, 32);
   16098:	a803      	add	r0, sp, #12
   1609a:	f000 fd91 	bl	16bc0 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:90
            for(i=0; i < mCmdHandlerVector.size(); i++)
   1609e:	f109 0901 	add.w	r9, r9, #1
   160a2:	e779      	b.n	15f98 <CommandProcessor::handleCommand(str&, CharDev&)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:119
            output.putline(CMD_INVALID_STR);
   160a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   160a8:	4905      	ldr	r1, [pc, #20]	; (160c0 <CommandProcessor::handleCommand(str&, CharDev&)+0x15c>)
   160aa:	4628      	mov	r0, r5
   160ac:	f001 fe7e 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/command_handler.cpp:122
    return found;
   160b0:	e7c1      	b.n	16036 <CommandProcessor::handleCommand(str&, CharDev&)+0xd2>
   160b2:	bf00      	nop
   160b4:	00026590 	.word	0x00026590
   160b8:	00026593 	.word	0x00026593
   160bc:	00026598 	.word	0x00026598
   160c0:	0002656b 	.word	0x0002656b
   160c4:	000265bd 	.word	0x000265bd

000160c8 <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:249
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         * @note You should use init() instead of the constructor to initialize and allocate memory
         *       because the status of init() is checked and reported, but a failure at constructor
         *       will not be easily caught (or reported).
         */
        virtual bool init(void)   { return true; }
   160c8:	2001      	movs	r0, #1
   160ca:	4770      	bx	lr

000160cc <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:256
        /**
         * Optional: Override this function to register your telemetry before FreeRTOS starts.
         * @return   true upon success.
         * @warning  DO NOT USE FreeRTOS blocking API in this function
         */
        virtual bool regTlm(void) { return true; }
   160cc:	2001      	movs	r0, #1
   160ce:	4770      	bx	lr

000160d0 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/scheduler_task.hpp:268
         * taskEntry() to take place before the run() method is called.
         *
         * @warning  Do not suspend your task otherwise all tasks will get suspended.
         * @return   true upon success.
         */
        virtual bool taskEntry(void) { return true; }
   160d0:	2001      	movs	r0, #1
   160d2:	4770      	bx	lr

000160d4 <__sputc_r>:
__sputc_r():
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
#ifdef __SCLE
	if ((_p->_flags & __SCLE) && _c == '\n')
	  __sputc_r (_ptr, '\r', _p);
#endif
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   160d4:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:684
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
   160d6:	b410      	push	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
   160d8:	3b01      	subs	r3, #1
   160da:	2b00      	cmp	r3, #0
   160dc:	6093      	str	r3, [r2, #8]
   160de:	da08      	bge.n	160f2 <__sputc_r+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 2)
   160e0:	6994      	ldr	r4, [r2, #24]
   160e2:	42a3      	cmp	r3, r4
   160e4:	db02      	blt.n	160ec <__sputc_r+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:689 (discriminator 3)
   160e6:	b2cb      	uxtb	r3, r1
   160e8:	2b0a      	cmp	r3, #10
   160ea:	d102      	bne.n	160f2 <__sputc_r+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
		return (*_p->_p++ = _c);
	else
		return (__swbuf_r(_ptr, _c, _p));
}
   160ec:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:692
		return (__swbuf_r(_ptr, _c, _p));
   160ee:	f00c b9c3 	b.w	22478 <__swbuf_r>
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:690
		return (*_p->_p++ = _c);
   160f2:	6813      	ldr	r3, [r2, #0]
   160f4:	1c58      	adds	r0, r3, #1
   160f6:	6010      	str	r0, [r2, #0]
   160f8:	7019      	strb	r1, [r3, #0]
   160fa:	b2c8      	uxtb	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/tools/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h:693
}
   160fc:	bc10      	pop	{r4}
   160fe:	4770      	bx	lr

00016100 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
 * puts() uses very little stack space.
 */
static bool g_dbg_print = false;
static void dbg_print(const char *one, const char *two=NULL)
{
    if (g_dbg_print)
   16100:	4b0a      	ldr	r3, [pc, #40]	; (1612c <dbg_print(char const*, char const*)+0x2c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   16102:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   16104:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:87
{
   16106:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:88
    if (g_dbg_print)
   16108:	b17b      	cbz	r3, 1612a <dbg_print(char const*, char const*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
    {
        while(*one) {
            putchar(*one++);
   1610a:	4e09      	ldr	r6, [pc, #36]	; (16130 <dbg_print(char const*, char const*)+0x30>)
   1610c:	1e44      	subs	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:90
        while(*one) {
   1610e:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   16112:	b121      	cbz	r1, 1611e <dbg_print(char const*, char const*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:91
            putchar(*one++);
   16114:	6830      	ldr	r0, [r6, #0]
   16116:	6882      	ldr	r2, [r0, #8]
   16118:	f7ff ffdc 	bl	160d4 <__sputc_r>
   1611c:	e7f7      	b.n	1610e <dbg_print(char const*, char const*)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:93
        }
        if (two) {
   1611e:	b125      	cbz	r5, 1612a <dbg_print(char const*, char const*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   16120:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:97
        }
    }
}
   16122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:94
            puts(two);
   16126:	f00a bbf5 	b.w	20914 <puts>
   1612a:	bd70      	pop	{r4, r5, r6, pc}
   1612c:	2007c504 	.word	0x2007c504
   16130:	2007c0e0 	.word	0x2007c0e0

00016134 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:100

static void printline(const char *one, const char *two=NULL)
{
   16134:	b570      	push	{r4, r5, r6, lr}
   16136:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
    while(*one) {
        putchar(*one++);
   16138:	4e0b      	ldr	r6, [pc, #44]	; (16168 <printline(char const*, char const*)+0x34>)
   1613a:	1e45      	subs	r5, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   1613c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   16140:	b121      	cbz	r1, 1614c <printline(char const*, char const*)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:102
        putchar(*one++);
   16142:	6830      	ldr	r0, [r6, #0]
   16144:	6882      	ldr	r2, [r0, #8]
   16146:	f7ff ffc5 	bl	160d4 <__sputc_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:101
    while(*one) {
   1614a:	e7f7      	b.n	1613c <printline(char const*, char const*)+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:105
    }

    if (two) {
   1614c:	b124      	cbz	r4, 16158 <printline(char const*, char const*)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   1614e:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
    }
    else {
        putchar('\n');
    }
}
   16150:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:106
        puts(two);
   16154:	f00a bbde 	b.w	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   16158:	4b03      	ldr	r3, [pc, #12]	; (16168 <printline(char const*, char const*)+0x34>)
   1615a:	210a      	movs	r1, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:111
}
   1615c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:109
        putchar('\n');
   16160:	6818      	ldr	r0, [r3, #0]
   16162:	6882      	ldr	r2, [r0, #8]
   16164:	f7ff bfb6 	b.w	160d4 <__sputc_r>
   16168:	2007c0e0 	.word	0x2007c0e0

0001616c <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
void scheduler_c_task_private(void *task_ptr)
{
    scheduler_task& task = *(scheduler_task*)task_ptr;

    /* Have the responsible task call taskEntry() for each task */
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   1616c:	4b3f      	ldr	r3, [pc, #252]	; (1626c <scheduler_c_task_private(void*)+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   1616e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   16172:	681a      	ldr	r2, [r3, #0]
   16174:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:118
{
   16176:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:122
    if (gTaskEntryTaskHandle == task.getTaskHandle()) {
   16178:	429a      	cmp	r2, r3
   1617a:	d136      	bne.n	161ea <scheduler_c_task_private(void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:124
        bool failure = false;
        uint32_t taskCount = 0;
   1617c:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:123
        bool failure = false;
   1617e:	463d      	mov	r5, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:126

        dbg_print("*  ");
   16180:	2100      	movs	r1, #0
   16182:	483b      	ldr	r0, [pc, #236]	; (16270 <scheduler_c_task_private(void*)+0x104>)
   16184:	f7ff ffbc 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:127
        dbg_print(task.mName, " task calling taskEntry() for all tasks ... ");
   16188:	493a      	ldr	r1, [pc, #232]	; (16274 <scheduler_c_task_private(void*)+0x108>)
   1618a:	6a60      	ldr	r0, [r4, #36]	; 0x24
   1618c:	f7ff ffb8 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:128
        dbg_print("*  Each task will then enter the run() loop\n");
   16190:	2100      	movs	r1, #0
   16192:	4839      	ldr	r0, [pc, #228]	; (16278 <scheduler_c_task_private(void*)+0x10c>)
   16194:	f7ff ffb4 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130

        task_list_t *e = gpTaskList;
   16198:	4b38      	ldr	r3, [pc, #224]	; (1627c <scheduler_c_task_private(void*)+0x110>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
            scheduler_task *t = e->task;
            e = e->next;
            ++taskCount;

            if (!t->taskEntry()) {
                printline(t->mName, "  --> FAILED taskEntry()");
   1619a:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 16288 <scheduler_c_task_private(void*)+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:130
        task_list_t *e = gpTaskList;
   1619e:	681e      	ldr	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:131
        while (NULL != e) {
   161a0:	b18e      	cbz	r6, 161c6 <scheduler_c_task_private(void*)+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:132
            scheduler_task *t = e->task;
   161a2:	f8d6 8000 	ldr.w	r8, [r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:134
            ++taskCount;
   161a6:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   161a8:	f8d8 3000 	ldr.w	r3, [r8]
   161ac:	4640      	mov	r0, r8
   161ae:	691b      	ldr	r3, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:133
            e = e->next;
   161b0:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:136
            if (!t->taskEntry()) {
   161b2:	4798      	blx	r3
   161b4:	2800      	cmp	r0, #0
   161b6:	d1f3      	bne.n	161a0 <scheduler_c_task_private(void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:137
                printline(t->mName, "  --> FAILED taskEntry()");
   161b8:	4649      	mov	r1, r9
   161ba:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   161be:	f7ff ffb9 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:138
                failure = true;
   161c2:	2501      	movs	r5, #1
   161c4:	e7ec      	b.n	161a0 <scheduler_c_task_private(void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:142
            }
        }

        if (failure) {
   161c6:	b955      	cbnz	r5, 161de <scheduler_c_task_private(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 3)
            vTaskEndScheduler();
        }
        else {
            /* Give permission for everyone to start the run() loop */
            for (uint32_t i=0; i < taskCount; i++) {
                xSemaphoreGive(gRunTaskSemaphore);
   161c8:	4e2d      	ldr	r6, [pc, #180]	; (16280 <scheduler_c_task_private(void*)+0x114>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 3)
            for (uint32_t i=0; i < taskCount; i++) {
   161ca:	42af      	cmp	r7, r5
   161cc:	d00d      	beq.n	161ea <scheduler_c_task_private(void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:149 (discriminator 2)
                xSemaphoreGive(gRunTaskSemaphore);
   161ce:	2300      	movs	r3, #0
   161d0:	6830      	ldr	r0, [r6, #0]
   161d2:	461a      	mov	r2, r3
   161d4:	4619      	mov	r1, r3
   161d6:	f002 fe0b 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:148 (discriminator 2)
            for (uint32_t i=0; i < taskCount; i++) {
   161da:	3501      	adds	r5, #1
   161dc:	e7f5      	b.n	161ca <scheduler_c_task_private(void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:143
            printline("ERROR: Killing FreeRTOS due to error(s)");
   161de:	4631      	mov	r1, r6
   161e0:	4828      	ldr	r0, [pc, #160]	; (16284 <scheduler_c_task_private(void*)+0x118>)
   161e2:	f7ff ffa7 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:144
            vTaskEndScheduler();
   161e6:	f003 f9a1 	bl	1952c <vTaskEndScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:155
            }
        }
    }

    // Wait until we're given the go ahead by the task giving semaphore above
    xSemaphoreTake(gRunTaskSemaphore, portMAX_DELAY);
   161ea:	2300      	movs	r3, #0
   161ec:	4824      	ldr	r0, [pc, #144]	; (16280 <scheduler_c_task_private(void*)+0x114>)
   161ee:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   161f2:	4619      	mov	r1, r3
   161f4:	6800      	ldr	r0, [r0, #0]
   161f6:	f002 ff03 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:157

    TickType_t xLastWakeTime = xTaskGetTickCount();
   161fa:	f003 f9af 	bl	1955c <xTaskGetTickCount>
   161fe:	ae02      	add	r6, sp, #8
   16200:	f846 0d04 	str.w	r0, [r6, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:158
    TickType_t xNextStatTime = xTaskGetTickCount();
   16204:	f003 f9aa 	bl	1955c <xTaskGetTickCount>
   16208:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
        }
        #endif

        // Run the task code and suspend when an error occurs
        if (!task.run((void*)task.mParam)) {
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   1620a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 1628c <scheduler_c_task_private(void*)+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:163
        if (task.mQueueSet) {
   1620e:	6860      	ldr	r0, [r4, #4]
   16210:	b118      	cbz	r0, 1621a <scheduler_c_task_private(void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:164
            task.mQueueSetType = xQueueSelectFromSet(task.mQueueSet, task.mQueueSetBlockTime);
   16212:	68e1      	ldr	r1, [r4, #12]
   16214:	f002 ffcd 	bl	191b2 <xQueueSelectFromSet>
   16218:	60a0      	str	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:169
        if (!task.run((void*)task.mParam)) {
   1621a:	6823      	ldr	r3, [r4, #0]
   1621c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   1621e:	695b      	ldr	r3, [r3, #20]
   16220:	4620      	mov	r0, r4
   16222:	4798      	blx	r3
   16224:	4607      	mov	r7, r0
   16226:	b930      	cbnz	r0, 16236 <scheduler_c_task_private(void*)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:170
            printline(task.mName, " --> FAILURE detected; suspending this task ...");
   16228:	6a60      	ldr	r0, [r4, #36]	; 0x24
   1622a:	4641      	mov	r1, r8
   1622c:	f7ff ff82 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:171
            vTaskSuspend(0);
   16230:	4638      	mov	r0, r7
   16232:	f003 fb37 	bl	198a4 <vTaskSuspend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:173
        }
        ++(task.mRunCount);
   16236:	69a3      	ldr	r3, [r4, #24]
   16238:	3301      	adds	r3, #1
   1623a:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176

        // Update the task statistics once in a short while :
        if (0 != task.mStatUpdateRateMs && xTaskGetTickCount() > xNextStatTime) {
   1623c:	6a23      	ldr	r3, [r4, #32]
   1623e:	b11b      	cbz	r3, 16248 <scheduler_c_task_private(void*)+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:176 (discriminator 1)
   16240:	f003 f98c 	bl	1955c <xTaskGetTickCount>
   16244:	4285      	cmp	r5, r0
   16246:	d306      	bcc.n	16256 <scheduler_c_task_private(void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:184
            // Convert to stack size in bytes instead of 4 bytes for this ARM CPU
            task.mFreeStack *= sizeof(int);
        }

        // Delay if set
        if (task.mTaskDelayMs) {
   16248:	69e1      	ldr	r1, [r4, #28]
   1624a:	2900      	cmp	r1, #0
   1624c:	d0df      	beq.n	1620e <scheduler_c_task_private(void*)+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:185
            vTaskDelayUntil( &xLastWakeTime, OS_MS(task.mTaskDelayMs));
   1624e:	4630      	mov	r0, r6
   16250:	f003 fa88 	bl	19764 <vTaskDelayUntil>
   16254:	e7db      	b.n	1620e <scheduler_c_task_private(void*)+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:177
            xNextStatTime = xTaskGetTickCount() + (task.mStatUpdateRateMs / MS_PER_TICK());
   16256:	f003 f981 	bl	1955c <xTaskGetTickCount>
   1625a:	6a25      	ldr	r5, [r4, #32]
   1625c:	4405      	add	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:178
            task.mFreeStack = uxTaskGetStackHighWaterMark(task.mHandle);
   1625e:	6920      	ldr	r0, [r4, #16]
   16260:	f003 fcb2 	bl	19bc8 <uxTaskGetStackHighWaterMark>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:180
            task.mFreeStack *= sizeof(int);
   16264:	0080      	lsls	r0, r0, #2
   16266:	6160      	str	r0, [r4, #20]
   16268:	e7ee      	b.n	16248 <scheduler_c_task_private(void*)+0xdc>
   1626a:	bf00      	nop
   1626c:	2007c514 	.word	0x2007c514
   16270:	000267fe 	.word	0x000267fe
   16274:	00026802 	.word	0x00026802
   16278:	0002682f 	.word	0x0002682f
   1627c:	2007c500 	.word	0x2007c500
   16280:	2007c510 	.word	0x2007c510
   16284:	00026875 	.word	0x00026875
   16288:	0002685c 	.word	0x0002685c
   1628c:	0002689d 	.word	0x0002689d

00016290 <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
        }
    }
}

bool scheduler_init_all(bool register_internal_tlm)
{
   16290:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    bool failure = false;
    uint32_t taskCount = 0;

    /* If no tasks ... */
    if (NULL == gpTaskList) {
   16294:	4d59      	ldr	r5, [pc, #356]	; (163fc <scheduler_init_all(bool)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:191
{
   16296:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:196
    if (NULL == gpTaskList) {
   16298:	6829      	ldr	r1, [r5, #0]
   1629a:	b939      	cbnz	r1, 162ac <scheduler_init_all(bool)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:197
        printline("ERROR: NO tasks added by scheduler_add_task()");
   1629c:	4858      	ldr	r0, [pc, #352]	; (16400 <scheduler_init_all(bool)+0x170>)
   1629e:	f7ff ff49 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:199
        failure = true;
        return failure;
   162a2:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:314
            }
        }
    } while(0);

    return failure;
}
   162a4:	4620      	mov	r0, r4
   162a6:	b003      	add	sp, #12
   162a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:193
    uint32_t taskCount = 0;
   162ac:	f04f 0900 	mov.w	r9, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:192
    bool failure = false;
   162b0:	464c      	mov	r4, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:202
    dbg_print("*  Creating tasks ...\n");
   162b2:	2100      	movs	r1, #0
   162b4:	4853      	ldr	r0, [pc, #332]	; (16404 <scheduler_init_all(bool)+0x174>)
   162b6:	f7ff ff23 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162ba:	f8df b178 	ldr.w	fp, [pc, #376]	; 16434 <scheduler_init_all(bool)+0x1a4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:204
        task_list_t *e = gpTaskList;
   162be:	682e      	ldr	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   162c0:	f8df a174 	ldr.w	sl, [pc, #372]	; 16438 <scheduler_init_all(bool)+0x1a8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:205
        while (NULL != e) {
   162c4:	b1ce      	cbz	r6, 162fa <scheduler_init_all(bool)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:207
            scheduler_task *task = e->task;
   162c6:	6837      	ldr	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:208
            e = e->next;
   162c8:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162ca:	f107 0310 	add.w	r3, r7, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:216
                             STACK_BYTES(task->mStackSize),  /* Stack */
   162ce:	6afa      	ldr	r2, [r7, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162d0:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   162d2:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162d6:	f3c2 028f 	ubfx	r2, r2, #2, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:210
            UBaseType_t taskPriority = task->mPriority;
   162da:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162dc:	6a79      	ldr	r1, [r7, #36]	; 0x24
   162de:	463b      	mov	r3, r7
   162e0:	4658      	mov	r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:206
            ++taskCount;
   162e2:	f109 0901 	add.w	r9, r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:214
            if (!xTaskCreate(scheduler_c_task_private,
   162e6:	f002 fff3 	bl	192d0 <xTaskCreate>
   162ea:	2800      	cmp	r0, #0
   162ec:	d1ea      	bne.n	162c4 <scheduler_init_all(bool)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:221
                printline(task->mName, "  --> FAILED xTaskCreate()");
   162ee:	4651      	mov	r1, sl
   162f0:	6a78      	ldr	r0, [r7, #36]	; 0x24
   162f2:	f7ff ff1f 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:222
                failure = true;
   162f6:	2401      	movs	r4, #1
   162f8:	e7e4      	b.n	162c4 <scheduler_init_all(bool)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:227
    gRunTaskSemaphore = xSemaphoreCreateCounting(taskCount, 0);
   162fa:	4631      	mov	r1, r6
   162fc:	4648      	mov	r0, r9
   162fe:	f002 fd6e 	bl	18dde <xQueueCreateCountingSemaphore>
   16302:	4b41      	ldr	r3, [pc, #260]	; (16408 <scheduler_init_all(bool)+0x178>)
   16304:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:228
    if (NULL == gRunTaskSemaphore) {
   16306:	b920      	cbnz	r0, 16312 <scheduler_init_all(bool)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:229
        printline("ERROR: Creating counting semaphore");
   16308:	4631      	mov	r1, r6
   1630a:	4840      	ldr	r0, [pc, #256]	; (1640c <scheduler_init_all(bool)+0x17c>)
   1630c:	f7ff ff12 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:230
        failure = true;
   16310:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:237
    dbg_print("*  Initializing tasks ...\n");
   16312:	2100      	movs	r1, #0
   16314:	483e      	ldr	r0, [pc, #248]	; (16410 <scheduler_init_all(bool)+0x180>)
   16316:	f7ff fef3 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   1631a:	f8df 9120 	ldr.w	r9, [pc, #288]	; 1643c <scheduler_init_all(bool)+0x1ac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:239
        task_list_t *e = gpTaskList;
   1631e:	682e      	ldr	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:240
        while (NULL != e)
   16320:	b16e      	cbz	r6, 1633e <scheduler_init_all(bool)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:242
            scheduler_task *task = e->task;
   16322:	6837      	ldr	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:243
            e = e->next;
   16324:	6876      	ldr	r6, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:245
            if (!task->init()) {
   16326:	683b      	ldr	r3, [r7, #0]
   16328:	4638      	mov	r0, r7
   1632a:	689b      	ldr	r3, [r3, #8]
   1632c:	4798      	blx	r3
   1632e:	2800      	cmp	r0, #0
   16330:	d1f6      	bne.n	16320 <scheduler_init_all(bool)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:246
                printline(task->getTaskName(), "  --> FAILED init()");
   16332:	4649      	mov	r1, r9
   16334:	6a78      	ldr	r0, [r7, #36]	; 0x24
   16336:	f7ff fefd 	bl	16134 <printline(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:247
                failure = true;
   1633a:	2401      	movs	r4, #1
   1633c:	e7f0      	b.n	16320 <scheduler_init_all(bool)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:254
    dbg_print("*  Registering tasks' telemetry ...\n");
   1633e:	4631      	mov	r1, r6
   16340:	4834      	ldr	r0, [pc, #208]	; (16414 <scheduler_init_all(bool)+0x184>)
   16342:	f7ff fedd 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:256
        task_list_t *e = gpTaskList;
   16346:	682f      	ldr	r7, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:257
        while (NULL != e)
   16348:	b387      	cbz	r7, 163ac <scheduler_init_all(bool)+0x11c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:260
            e = e->next;
   1634a:	cfc0      	ldmia	r7, {r6, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:262
            if (!task->regTlm()) {
   1634c:	6833      	ldr	r3, [r6, #0]
   1634e:	4630      	mov	r0, r6
   16350:	68db      	ldr	r3, [r3, #12]
   16352:	4798      	blx	r3
   16354:	2800      	cmp	r0, #0
   16356:	d04c      	beq.n	163f2 <scheduler_init_all(bool)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   16358:	f1b8 0f00 	cmp.w	r8, #0
   1635c:	d023      	beq.n	163a6 <scheduler_init_all(bool)+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   1635e:	f04f 0901 	mov.w	r9, #1
   16362:	f04f 0a02 	mov.w	sl, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   16366:	6a70      	ldr	r0, [r6, #36]	; 0x24
   16368:	f7ff f860 	bl	1542c <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   1636c:	2304      	movs	r3, #4
   1636e:	f106 0214 	add.w	r2, r6, #20
   16372:	4929      	ldr	r1, [pc, #164]	; (16418 <scheduler_init_all(bool)+0x188>)
   16374:	e88d 0600 	stmia.w	sp, {r9, sl}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:268
                tlm_component *comp = tlm_component_add(task->mName);
   16378:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:269
                if (!tlm_variable_register(comp, "free_stack", &(task->mFreeStack),
   1637a:	f7ff f8b9 	bl	154f0 <tlm_variable_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   1637e:	e88d 0600 	stmia.w	sp, {r9, sl}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16382:	2800      	cmp	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16384:	f04f 0304 	mov.w	r3, #4
   16388:	f106 0218 	add.w	r2, r6, #24
   1638c:	4923      	ldr	r1, [pc, #140]	; (1641c <scheduler_init_all(bool)+0x18c>)
   1638e:	4658      	mov	r0, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:271
                    failure = true;
   16390:	bf08      	it	eq
   16392:	464c      	moveq	r4, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:273
                if (!tlm_variable_register(comp, "run_count", &(task->mRunCount),
   16394:	f7ff f8ac 	bl	154f0 <tlm_variable_register>
   16398:	b928      	cbnz	r0, 163a6 <scheduler_init_all(bool)+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:279
                printline(task->mName, "  --> FAILED telemetry registration");
   1639a:	4921      	ldr	r1, [pc, #132]	; (16420 <scheduler_init_all(bool)+0x190>)
   1639c:	6a70      	ldr	r0, [r6, #36]	; 0x24
   1639e:	f7ff fec9 	bl	16134 <printline(char const*, char const*)>
   163a2:	2401      	movs	r4, #1
   163a4:	e7d0      	b.n	16348 <scheduler_init_all(bool)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:278
            if (failure) {
   163a6:	2c00      	cmp	r4, #0
   163a8:	d0ce      	beq.n	16348 <scheduler_init_all(bool)+0xb8>
   163aa:	e7f6      	b.n	1639a <scheduler_init_all(bool)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:283
        dbg_print("*  Restoring disk telemetry\n");
   163ac:	4639      	mov	r1, r7
   163ae:	481d      	ldr	r0, [pc, #116]	; (16424 <scheduler_init_all(bool)+0x194>)
   163b0:	f7ff fea6 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:285
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "r");
   163b4:	491c      	ldr	r1, [pc, #112]	; (16428 <scheduler_init_all(bool)+0x198>)
   163b6:	481d      	ldr	r0, [pc, #116]	; (1642c <scheduler_init_all(bool)+0x19c>)
   163b8:	f008 fd68 	bl	1ee8c <fopen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:286
        if (fd) {
   163bc:	4606      	mov	r6, r0
   163be:	b120      	cbz	r0, 163ca <scheduler_init_all(bool)+0x13a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:287
            tlm_stream_decode_file(fd);
   163c0:	f7fe ff36 	bl	15230 <tlm_stream_decode_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:288
            fclose(fd);
   163c4:	4630      	mov	r0, r6
   163c6:	f008 fb07 	bl	1e9d8 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:301
        task_list_t *e = gpTaskList;
   163ca:	2100      	movs	r1, #0
   163cc:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:300
        uint32_t highestStack = 0;
   163ce:	460d      	mov	r5, r1
   163d0:	4b17      	ldr	r3, [pc, #92]	; (16430 <scheduler_init_all(bool)+0x1a0>)
   163d2:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:302
        while (NULL != e) {
   163d4:	b142      	cbz	r2, 163e8 <scheduler_init_all(bool)+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:303
            scheduler_task *task = e->task;
   163d6:	6817      	ldr	r7, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:304
            e = e->next;
   163d8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:306
            if (task->mStackSize > highestStack) {
   163da:	6afe      	ldr	r6, [r7, #44]	; 0x2c
   163dc:	42b5      	cmp	r5, r6
   163de:	d2f9      	bcs.n	163d4 <scheduler_init_all(bool)+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:308
                gTaskEntryTaskHandle = task->mHandle;
   163e0:	6938      	ldr	r0, [r7, #16]
   163e2:	4635      	mov	r5, r6
   163e4:	2101      	movs	r1, #1
   163e6:	e7f5      	b.n	163d4 <scheduler_init_all(bool)+0x144>
   163e8:	2900      	cmp	r1, #0
   163ea:	f43f af5b 	beq.w	162a4 <scheduler_init_all(bool)+0x14>
   163ee:	6018      	str	r0, [r3, #0]
   163f0:	e758      	b.n	162a4 <scheduler_init_all(bool)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:267
            if (register_internal_tlm) {
   163f2:	f1b8 0f00 	cmp.w	r8, #0
   163f6:	d0d0      	beq.n	1639a <scheduler_init_all(bool)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:263
                failure = true;
   163f8:	4644      	mov	r4, r8
   163fa:	e7b0      	b.n	1635e <scheduler_init_all(bool)+0xce>
   163fc:	2007c500 	.word	0x2007c500
   16400:	000266d1 	.word	0x000266d1
   16404:	000266ff 	.word	0x000266ff
   16408:	2007c510 	.word	0x2007c510
   1640c:	00026731 	.word	0x00026731
   16410:	00026754 	.word	0x00026754
   16414:	00026783 	.word	0x00026783
   16418:	000267a8 	.word	0x000267a8
   1641c:	000267b3 	.word	0x000267b3
   16420:	000267bd 	.word	0x000267bd
   16424:	000267e1 	.word	0x000267e1
   16428:	0002854f 	.word	0x0002854f
   1642c:	0002732a 	.word	0x0002732a
   16430:	2007c514 	.word	0x2007c514
   16434:	0001616d 	.word	0x0001616d
   16438:	00026716 	.word	0x00026716
   1643c:	0002676f 	.word	0x0002676f

00016440 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:317

void scheduler_add_task(scheduler_task* task)
{
   16440:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:318
    if (NULL != task)
   16442:	4604      	mov	r4, r0
   16444:	b138      	cbz	r0, 16456 <scheduler_add_task(scheduler_task*)+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:321
    {
        /* Insert new task at the beginning */
        task_list_t *newEntry = new task_list_t;
   16446:	2008      	movs	r0, #8
   16448:	f000 fe50 	bl	170ec <operator new(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
        if (NULL != newEntry) {
            newEntry->next = gpTaskList;
   1644c:	4b02      	ldr	r3, [pc, #8]	; (16458 <scheduler_add_task(scheduler_task*)+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:324
            newEntry->task = task;
   1644e:	6004      	str	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   16450:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:325
            gpTaskList = newEntry;
   16452:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:323
            newEntry->next = gpTaskList;
   16454:	6042      	str	r2, [r0, #4]
   16456:	bd10      	pop	{r4, pc}
   16458:	2007c500 	.word	0x2007c500

0001645c <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    }
}

void scheduler_start(bool dp, bool register_internal_tlm)
{
    g_dbg_print = dp;
   1645c:	4b0b      	ldr	r3, [pc, #44]	; (1648c <scheduler_start(bool, bool)+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:331
{
   1645e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:332
    g_dbg_print = dp;
   16460:	7018      	strb	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:335

    /* If no failure, start the FreeRTOS scheduler */
    if (!scheduler_init_all(register_internal_tlm))
   16462:	4608      	mov	r0, r1
   16464:	f7ff ff14 	bl	16290 <scheduler_init_all(bool)>
   16468:	4604      	mov	r4, r0
   1646a:	b958      	cbnz	r0, 16484 <scheduler_start(bool, bool)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:337
    {
        dbg_print("*  Starting scheduler ...\n");
   1646c:	4601      	mov	r1, r0
   1646e:	4808      	ldr	r0, [pc, #32]	; (16490 <scheduler_start(bool, bool)+0x34>)
   16470:	f7ff fe46 	bl	16100 <dbg_print(char const*, char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:340

        // vTaskStartScheduler() should not return
        vTaskStartScheduler();
   16474:	f003 f828 	bl	194c8 <vTaskStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:341
        printline("ERROR: Someone killed the scheduler");
   16478:	4621      	mov	r1, r4
   1647a:	4806      	ldr	r0, [pc, #24]	; (16494 <scheduler_start(bool, bool)+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:346
    }
    else {
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
    }
}
   1647c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:344
        printline("ERROR: Refusing to start OS scheduler due to error(s)");
   16480:	f7ff be58 	b.w	16134 <printline(char const*, char const*)>
   16484:	2100      	movs	r1, #0
   16486:	4804      	ldr	r0, [pc, #16]	; (16498 <scheduler_start(bool, bool)+0x3c>)
   16488:	e7f8      	b.n	1647c <scheduler_start(bool, bool)+0x20>
   1648a:	bf00      	nop
   1648c:	2007c504 	.word	0x2007c504
   16490:	0002665c 	.word	0x0002665c
   16494:	00026677 	.word	0x00026677
   16498:	0002669b 	.word	0x0002669b

0001649c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:350



scheduler_task::scheduler_task(const char *name, uint32_t stack, uint8_t priority, void *param) :
   1649c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:364
   mTaskDelayMs(0),
   mStatUpdateRateMs(60 * 1000),
   mName(name),
   mParam(param),
   mStackSize(stack),
   mPriority(priority)
   1649e:	4d0b      	ldr	r5, [pc, #44]	; (164cc <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   164a0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   164a4:	6005      	str	r5, [r0, #0]
   164a6:	2500      	movs	r5, #0
   164a8:	6045      	str	r5, [r0, #4]
   164aa:	6085      	str	r5, [r0, #8]
   164ac:	6105      	str	r5, [r0, #16]
   164ae:	6145      	str	r5, [r0, #20]
   164b0:	6185      	str	r5, [r0, #24]
   164b2:	61c5      	str	r5, [r0, #28]
   164b4:	f64e 2560 	movw	r5, #60000	; 0xea60
   164b8:	6241      	str	r1, [r0, #36]	; 0x24
   164ba:	9904      	ldr	r1, [sp, #16]
   164bc:	60c6      	str	r6, [r0, #12]
   164be:	6205      	str	r5, [r0, #32]
   164c0:	6281      	str	r1, [r0, #40]	; 0x28
   164c2:	62c2      	str	r2, [r0, #44]	; 0x2c
   164c4:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:367
{

}
   164c8:	bd70      	pop	{r4, r5, r6, pc}
   164ca:	bf00      	nop
   164cc:	00026644 	.word	0x00026644

000164d0 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:498
    return true;
}

void* scheduler_task::getSharedObject(uint8_t index)
{
    return (index < gEnumObjects.count) ? gEnumObjects.pointers[index] : NULL;
   164d0:	4b04      	ldr	r3, [pc, #16]	; (164e4 <scheduler_task::getSharedObject(unsigned char)+0x14>)
   164d2:	681a      	ldr	r2, [r3, #0]
   164d4:	4290      	cmp	r0, r2
   164d6:	bf3a      	itte	cc
   164d8:	685b      	ldrcc	r3, [r3, #4]
   164da:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   164de:	2000      	movcs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/scheduler_task.cpp:499
}
   164e0:	4770      	bx	lr
   164e2:	bf00      	nop
   164e4:	2007c508 	.word	0x2007c508

000164e8 <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
 *             otherwise it will return a buffer pointer without blocking since buffer will always be
 *             available if OS is not running since no multi-threaded operation is going on.
 */
static char * logger_get_buffer_ptr(const bool os_running)
{
    char * buffer = NULL;
   164e8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:125
{
   164ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:126
    char * buffer = NULL;
   164ec:	ac02      	add	r4, sp, #8
   164ee:	f844 3d04 	str.w	r3, [r4, #-4]!
   164f2:	4d0d      	ldr	r5, [pc, #52]	; (16528 <logger_get_buffer_ptr+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:129

    /* Get an available buffer to write the data to, and if OS is not running, we will always get a buffer */
    if (!os_running) {
   164f4:	b940      	cbnz	r0, 16508 <logger_get_buffer_ptr+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:130
        xQueueReceive(g_empty_buffer_queue, &buffer, 0);
   164f6:	4603      	mov	r3, r0
   164f8:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
    }
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
        ++g_blocked_calls;

        /* This time, just block forever until we get a buffer */
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   164fa:	4621      	mov	r1, r4
   164fc:	6828      	ldr	r0, [r5, #0]
   164fe:	f002 fd7f 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:140
    }

    return buffer;
}
   16502:	9801      	ldr	r0, [sp, #4]
   16504:	b003      	add	sp, #12
   16506:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:132
    else if (!xQueueReceive(g_empty_buffer_queue, &buffer, OS_MS(FILE_LOGGER_BLOCK_TIME_MS))) {
   16508:	220a      	movs	r2, #10
   1650a:	4621      	mov	r1, r4
   1650c:	6828      	ldr	r0, [r5, #0]
   1650e:	f002 fd77 	bl	19000 <xQueueGenericReceive>
   16512:	4603      	mov	r3, r0
   16514:	2800      	cmp	r0, #0
   16516:	d1f4      	bne.n	16502 <logger_get_buffer_ptr+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:133
        ++g_blocked_calls;
   16518:	4904      	ldr	r1, [pc, #16]	; (1652c <logger_get_buffer_ptr+0x44>)
   1651a:	880a      	ldrh	r2, [r1, #0]
   1651c:	3201      	adds	r2, #1
   1651e:	800a      	strh	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:136
        xQueueReceive(g_empty_buffer_queue, &buffer, portMAX_DELAY);
   16520:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   16524:	e7e9      	b.n	164fa <logger_get_buffer_ptr+0x12>
   16526:	bf00      	nop
   16528:	2007c51c 	.word	0x2007c51c
   1652c:	2007c518 	.word	0x2007c518

00016530 <logger_write_to_file>:
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   16530:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   16532:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:61
{
   16534:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   16538:	460d      	mov	r5, r1
   1653a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   1653c:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1653e:	f7f9 ffad 	bl	1049c <sys_get_uptime_us>
   16542:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16546:	2300      	movs	r3, #0
   16548:	f008 f84a 	bl	1e5e0 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
    FIL fatfs_file = { 0 };
   1654c:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   16550:	4606      	mov	r6, r0
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:69
   16552:	4621      	mov	r1, r4
   16554:	a803      	add	r0, sp, #12
   16556:	f008 ffbd 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:72
    if (0 == bytes_to_write_uint) {
   1655a:	2d00      	cmp	r5, #0
   1655c:	d038      	beq.n	165d0 <logger_write_to_file+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:83
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   1655e:	2212      	movs	r2, #18
   16560:	491c      	ldr	r1, [pc, #112]	; (165d4 <logger_write_to_file+0xa4>)
   16562:	a803      	add	r0, sp, #12
   16564:	f7fc fb54 	bl	12c10 <f_open>
   16568:	4604      	mov	r4, r0
   1656a:	bb68      	cbnz	r0, 165c8 <logger_write_to_file+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:85
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   1656c:	9906      	ldr	r1, [sp, #24]
   1656e:	a803      	add	r0, sp, #12
   16570:	f7fc fdca 	bl	13108 <f_lseek>
   16574:	4604      	mov	r4, r0
   16576:	b930      	cbnz	r0, 16586 <logger_write_to_file+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:87
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   16578:	ab02      	add	r3, sp, #8
   1657a:	462a      	mov	r2, r5
   1657c:	4639      	mov	r1, r7
   1657e:	a803      	add	r0, sp, #12
   16580:	f7fc fc95 	bl	12eae <f_write>
   16584:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:89
        f_close(&fatfs_file);
   16586:	a803      	add	r0, sp, #12
   16588:	f7fc fdac 	bl	130e4 <f_close>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1658c:	f7f9 ff86 	bl	1049c <sys_get_uptime_us>
   16590:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16594:	2300      	movs	r3, #0
   16596:	f008 f823 	bl	1e5e0 <__aeabi_uldivmod>
logger_write_to_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   1659a:	4b0f      	ldr	r3, [pc, #60]	; (165d8 <logger_write_to_file+0xa8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   1659c:	1b80      	subs	r0, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   1659e:	881a      	ldrh	r2, [r3, #0]
   165a0:	4290      	cmp	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   165a2:	9a02      	ldr	r2, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   165a4:	bf88      	it	hi
   165a6:	8018      	strhhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   165a8:	4295      	cmp	r5, r2
   165aa:	bf0c      	ite	eq
   165ac:	2601      	moveq	r6, #1
   165ae:	2600      	movne	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:106
    if (!success) {
   165b0:	d006      	beq.n	165c0 <logger_write_to_file+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   165b2:	9b05      	ldr	r3, [sp, #20]
   165b4:	4621      	mov	r1, r4
   165b6:	9300      	str	r3, [sp, #0]
   165b8:	4808      	ldr	r0, [pc, #32]	; (165dc <logger_write_to_file+0xac>)
   165ba:	462b      	mov	r3, r5
   165bc:	f00a f936 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:116
}
   165c0:	4630      	mov	r0, r6
   165c2:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   165c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   165c8:	4805      	ldr	r0, [pc, #20]	; (165e0 <logger_write_to_file+0xb0>)
   165ca:	f00a f92f 	bl	2082c <iprintf>
   165ce:	e7dd      	b.n	1658c <logger_write_to_file+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   165d0:	462c      	mov	r4, r5
   165d2:	e7db      	b.n	1658c <logger_write_to_file+0x5c>
   165d4:	00026933 	.word	0x00026933
   165d8:	2007c520 	.word	0x2007c520
   165dc:	00026951 	.word	0x00026951
   165e0:	0002693d 	.word	0x0002693d

000165e4 <logger_task>:
logger_task():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   165e4:	4b2f      	ldr	r3, [pc, #188]	; (166a4 <logger_task+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:173
{
   165e6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   165ea:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   165ec:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 166ac <logger_task+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   165f0:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   165f2:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 166b0 <logger_task+0xcc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   165f6:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   165fa:	2300      	movs	r3, #0
   165fc:	af02      	add	r7, sp, #8
   165fe:	f847 3d04 	str.w	r3, [r7, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   16602:	f64e 2260 	movw	r2, #60000	; 0xea60
   16606:	4639      	mov	r1, r7
   16608:	f8d9 0000 	ldr.w	r0, [r9]
   1660c:	f002 fcf8 	bl	19000 <xQueueGenericReceive>
   16610:	b108      	cbz	r0, 16616 <logger_task+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   16612:	9b01      	ldr	r3, [sp, #4]
   16614:	b92b      	cbnz	r3, 16622 <logger_task+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   16616:	1b71      	subs	r1, r6, r5
   16618:	4628      	mov	r0, r5
   1661a:	f7ff ff89 	bl	16530 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   1661e:	462e      	mov	r6, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   16620:	e7eb      	b.n	165fa <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   16622:	f8d9 0000 	ldr.w	r0, [r9]
   16626:	f002 fdb9 	bl	1919c <uxQueueMessagesWaiting>
   1662a:	f8ba 3000 	ldrh.w	r3, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   1662e:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   16630:	3001      	adds	r0, #1
   16632:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   16634:	bf88      	it	hi
   16636:	f8aa 0000 	strhhi.w	r0, [sl]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   1663a:	4620      	mov	r0, r4
   1663c:	f00a fcd0 	bl	20fe0 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   16640:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   16642:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   16644:	5423      	strb	r3, [r4, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   16646:	f100 0b01 	add.w	fp, r0, #1
   1664a:	9a01      	ldr	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   1664c:	eb06 040b 	add.w	r4, r6, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   16650:	f802 100b 	strb.w	r1, [r2, fp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   16654:	45a0      	cmp	r8, r4
   16656:	9901      	ldr	r1, [sp, #4]
   16658:	d81f      	bhi.n	1669a <logger_task+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   1665a:	eba8 0206 	sub.w	r2, r8, r6
   1665e:	4630      	mov	r0, r6
   16660:	f008 ff13 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   16664:	eba4 0408 	sub.w	r4, r4, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   16668:	f44f 6180 	mov.w	r1, #1024	; 0x400
   1666c:	4628      	mov	r0, r5
   1666e:	f7ff ff5f 	bl	16530 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   16672:	b13c      	cbz	r4, 16684 <logger_task+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   16674:	9901      	ldr	r1, [sp, #4]
   16676:	ebab 0b04 	sub.w	fp, fp, r4
   1667a:	4622      	mov	r2, r4
   1667c:	4459      	add	r1, fp
   1667e:	4628      	mov	r0, r5
   16680:	f008 ff03 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   16684:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   16686:	4808      	ldr	r0, [pc, #32]	; (166a8 <logger_task+0xc4>)
   16688:	2300      	movs	r3, #0
   1668a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1668e:	4639      	mov	r1, r7
   16690:	6800      	ldr	r0, [r0, #0]
   16692:	f002 fbad 	bl	18df0 <xQueueGenericSend>
   16696:	4626      	mov	r6, r4
   16698:	e7af      	b.n	165fa <logger_task+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   1669a:	465a      	mov	r2, fp
   1669c:	4630      	mov	r0, r6
   1669e:	f008 fef4 	bl	1f48a <memcpy>
   166a2:	e7f0      	b.n	16686 <logger_task+0xa2>
   166a4:	2007c538 	.word	0x2007c538
   166a8:	2007c51c 	.word	0x2007c51c
   166ac:	2007c534 	.word	0x2007c534
   166b0:	2007c51a 	.word	0x2007c51a

000166b4 <logger_write_log_message>:
logger_write_log_message():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:148
{
   166b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
   166b6:	ac02      	add	r4, sp, #8
   166b8:	f844 0d04 	str.w	r0, [r4, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:150
    if (os_running) {
   166bc:	460d      	mov	r5, r1
   166be:	b149      	cbz	r1, 166d4 <logger_write_log_message+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:151
        xQueueSend(g_write_buffer_queue, &buffer, portMAX_DELAY);
   166c0:	2300      	movs	r3, #0
   166c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   166c6:	4621      	mov	r1, r4
   166c8:	480a      	ldr	r0, [pc, #40]	; (166f4 <logger_write_log_message+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   166ca:	6800      	ldr	r0, [r0, #0]
   166cc:	f002 fb90 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:163
}
   166d0:	b002      	add	sp, #8
   166d2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:155
        size_t len = strlen(buffer);
   166d4:	4606      	mov	r6, r0
   166d6:	f00a fc83 	bl	20fe0 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:156
        buffer[len] = '\n';
   166da:	230a      	movs	r3, #10
   166dc:	5433      	strb	r3, [r6, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:157
        buffer[++len] = '\0';
   166de:	9b01      	ldr	r3, [sp, #4]
   166e0:	1c41      	adds	r1, r0, #1
   166e2:	545d      	strb	r5, [r3, r1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:158
        logger_write_to_file(buffer, len);
   166e4:	9801      	ldr	r0, [sp, #4]
   166e6:	f7ff ff23 	bl	16530 <logger_write_to_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:161
        xQueueSend(g_empty_buffer_queue, &buffer, 0);
   166ea:	462b      	mov	r3, r5
   166ec:	462a      	mov	r2, r5
   166ee:	4621      	mov	r1, r4
   166f0:	4801      	ldr	r0, [pc, #4]	; (166f8 <logger_write_log_message+0x44>)
   166f2:	e7ea      	b.n	166ca <logger_write_log_message+0x16>
   166f4:	2007c534 	.word	0x2007c534
   166f8:	2007c51c 	.word	0x2007c51c

000166fc <logger_send_flush_request>:
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:347

        return (!success);
}

void logger_send_flush_request(void)
{
   166fc:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   166fe:	f003 fa73 	bl	19be8 <xTaskGetSchedulerState>
   16702:	2802      	cmp	r0, #2
   16704:	d10c      	bne.n	16720 <logger_send_flush_request+0x24>
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   16706:	4b08      	ldr	r3, [pc, #32]	; (16728 <logger_send_flush_request+0x2c>)
logger_send_flush_request():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:348
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState() && logger_initialized())
   16708:	681b      	ldr	r3, [r3, #0]
   1670a:	b14b      	cbz	r3, 16720 <logger_send_flush_request+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
    {
        char * null_ptr_to_flush = NULL;
   1670c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   1670e:	4807      	ldr	r0, [pc, #28]	; (1672c <logger_send_flush_request+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:350
        char * null_ptr_to_flush = NULL;
   16710:	a902      	add	r1, sp, #8
   16712:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:351
        xQueueSend(g_write_buffer_queue, &null_ptr_to_flush, portMAX_DELAY);
   16716:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1671a:	6800      	ldr	r0, [r0, #0]
   1671c:	f002 fb68 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:353
    }
}
   16720:	b003      	add	sp, #12
   16722:	f85d fb04 	ldr.w	pc, [sp], #4
   16726:	bf00      	nop
   16728:	2007c538 	.word	0x2007c538
   1672c:	2007c534 	.word	0x2007c534

00016730 <logger_get_logged_call_count>:
logger_get_logged_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:357

uint32_t logger_get_logged_call_count(logger_msg_t severity)
{
    return (severity < log_last) ? g_logger_calls[severity] : 0;
   16730:	2803      	cmp	r0, #3
   16732:	bf9a      	itte	ls
   16734:	4b02      	ldrls	r3, [pc, #8]	; (16740 <logger_get_logged_call_count+0x10>)
   16736:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
   1673a:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:358
}
   1673c:	4770      	bx	lr
   1673e:	bf00      	nop
   16740:	2007c524 	.word	0x2007c524

00016744 <logger_get_blocked_call_count>:
logger_get_blocked_call_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:363

uint16_t logger_get_blocked_call_count(void)
{
    return g_blocked_calls;
}
   16744:	4b01      	ldr	r3, [pc, #4]	; (1674c <logger_get_blocked_call_count+0x8>)
   16746:	8818      	ldrh	r0, [r3, #0]
   16748:	4770      	bx	lr
   1674a:	bf00      	nop
   1674c:	2007c518 	.word	0x2007c518

00016750 <logger_get_highest_file_write_time_ms>:
logger_get_highest_file_write_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:368

uint16_t logger_get_highest_file_write_time_ms(void)
{
    return g_highest_file_write_time;
}
   16750:	4b01      	ldr	r3, [pc, #4]	; (16758 <logger_get_highest_file_write_time_ms+0x8>)
   16752:	8818      	ldrh	r0, [r3, #0]
   16754:	4770      	bx	lr
   16756:	bf00      	nop
   16758:	2007c520 	.word	0x2007c520

0001675c <logger_get_num_buffers_watermark>:
logger_get_num_buffers_watermark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:373

uint16_t logger_get_num_buffers_watermark(void)
{
    return g_buffer_watermark;
}
   1675c:	4b01      	ldr	r3, [pc, #4]	; (16764 <logger_get_num_buffers_watermark+0x8>)
   1675e:	8818      	ldrh	r0, [r3, #0]
   16760:	4770      	bx	lr
   16762:	bf00      	nop
   16764:	2007c51a 	.word	0x2007c51a

00016768 <logger_init>:
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376

void logger_init(uint8_t logger_priority)
{
   16768:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1676c:	4c2b      	ldr	r4, [pc, #172]	; (1681c <logger_init+0xb4>)
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:376
{
   1676e:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   16770:	6825      	ldr	r5, [r4, #0]
   16772:	2d00      	cmp	r5, #0
   16774:	d14a      	bne.n	1680c <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   16776:	f44f 6080 	mov.w	r0, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   1677a:	9503      	str	r5, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   1677c:	f008 fe46 	bl	1f40c <malloc>
   16780:	4e27      	ldr	r6, [pc, #156]	; (16820 <logger_init+0xb8>)
   16782:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   16784:	b9a8      	cbnz	r0, 167b2 <logger_init+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   16786:	6820      	ldr	r0, [r4, #0]
   16788:	2800      	cmp	r0, #0
   1678a:	d142      	bne.n	16812 <logger_init+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   1678c:	6833      	ldr	r3, [r6, #0]
   1678e:	b163      	cbz	r3, 167aa <logger_init+0x42>
   16790:	240a      	movs	r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   16792:	2300      	movs	r3, #0
   16794:	a903      	add	r1, sp, #12
   16796:	461a      	mov	r2, r3
   16798:	6830      	ldr	r0, [r6, #0]
   1679a:	f002 fc31 	bl	19000 <xQueueGenericReceive>
   1679e:	b110      	cbz	r0, 167a6 <logger_init+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   167a0:	9803      	ldr	r0, [sp, #12]
   167a2:	f008 fe3b 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   167a6:	3c01      	subs	r4, #1
   167a8:	d1f3      	bne.n	16792 <logger_init+0x2a>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   167aa:	481e      	ldr	r0, [pc, #120]	; (16824 <logger_init+0xbc>)
   167ac:	f00a f8b2 	bl	20914 <puts>
   167b0:	e02c      	b.n	1680c <logger_init+0xa4>
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   167b2:	462a      	mov	r2, r5
   167b4:	2104      	movs	r1, #4
   167b6:	200a      	movs	r0, #10
   167b8:	f002 faf8 	bl	18dac <xQueueGenericCreate>
   167bc:	4f1a      	ldr	r7, [pc, #104]	; (16828 <logger_init+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   167be:	462a      	mov	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   167c0:	6038      	str	r0, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   167c2:	2104      	movs	r1, #4
   167c4:	200a      	movs	r0, #10
   167c6:	f002 faf1 	bl	18dac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   167ca:	683b      	ldr	r3, [r7, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   167cc:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   167ce:	2b00      	cmp	r3, #0
   167d0:	d0d9      	beq.n	16786 <logger_init+0x1e>
   167d2:	2800      	cmp	r0, #0
   167d4:	d0d7      	beq.n	16786 <logger_init+0x1e>
   167d6:	250a      	movs	r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   167d8:	2096      	movs	r0, #150	; 0x96
   167da:	f008 fe17 	bl	1f40c <malloc>
   167de:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   167e0:	2800      	cmp	r0, #0
   167e2:	d0d0      	beq.n	16786 <logger_init+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   167e4:	2300      	movs	r3, #0
   167e6:	a903      	add	r1, sp, #12
   167e8:	461a      	mov	r2, r3
   167ea:	6830      	ldr	r0, [r6, #0]
   167ec:	f002 fb00 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   167f0:	3d01      	subs	r5, #1
   167f2:	d1f1      	bne.n	167d8 <logger_init+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   167f4:	9501      	str	r5, [sp, #4]
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   167f6:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   167fa:	462b      	mov	r3, r5
   167fc:	f44f 72c0 	mov.w	r2, #384	; 0x180
   16800:	490a      	ldr	r1, [pc, #40]	; (1682c <logger_init+0xc4>)
   16802:	480b      	ldr	r0, [pc, #44]	; (16830 <logger_init+0xc8>)
   16804:	f002 fd64 	bl	192d0 <xTaskCreate>
   16808:	2800      	cmp	r0, #0
   1680a:	d0bc      	beq.n	16786 <logger_init+0x1e>
logger_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   1680c:	b004      	add	sp, #16
   1680e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   16812:	f008 fe03 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   16816:	2300      	movs	r3, #0
   16818:	6023      	str	r3, [r4, #0]
   1681a:	e7b7      	b.n	1678c <logger_init+0x24>
   1681c:	2007c538 	.word	0x2007c538
   16820:	2007c51c 	.word	0x2007c51c
   16824:	000268e7 	.word	0x000268e7
   16828:	2007c534 	.word	0x2007c534
   1682c:	000268e0 	.word	0x000268e0
   16830:	000165e5 	.word	0x000165e5

00016834 <logger_set_printf>:
logger_set_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:388

void logger_set_printf(logger_msg_t type, bool enable)
{
    const uint8_t mask = (1 << type);
   16834:	2301      	movs	r3, #1
   16836:	fa03 f000 	lsl.w	r0, r3, r0
   1683a:	4b04      	ldr	r3, [pc, #16]	; (1684c <logger_set_printf+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
    if (enable) {
        g_logger_printf_mask |= mask;
   1683c:	781a      	ldrb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:389
    if (enable) {
   1683e:	b111      	cbz	r1, 16846 <logger_set_printf+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:390
        g_logger_printf_mask |= mask;
   16840:	4310      	orrs	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:393
    }
    else {
        g_logger_printf_mask &= ~mask;
   16842:	7018      	strb	r0, [r3, #0]
   16844:	4770      	bx	lr
   16846:	ea22 0000 	bic.w	r0, r2, r0
   1684a:	e7fa      	b.n	16842 <logger_set_printf+0xe>
   1684c:	2007c096 	.word	0x2007c096

00016850 <logger_log>:
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
    }
}

void logger_log(logger_msg_t type, const char * filename, const char * func_name, unsigned line_num,
                const char * msg, ...)
{
   16850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16854:	469a      	mov	sl, r3
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   16856:	4b45      	ldr	r3, [pc, #276]	; (1696c <logger_log+0x11c>)
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   16858:	b097      	sub	sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   1685a:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:399
{
   1685c:	4606      	mov	r6, r0
   1685e:	460c      	mov	r4, r1
   16860:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:400
    if (!logger_initialized()) {
   16862:	2b00      	cmp	r3, #0
   16864:	d07c      	beq.n	16960 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:407
    }

    uint32_t len = 0;
    char * buffer = NULL;
    char * temp_ptr = NULL;
    const rtc_t time = rtc_gettime();
   16866:	a80f      	add	r0, sp, #60	; 0x3c
   16868:	f001 fb3c 	bl	17ee4 <rtc_gettime>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1686c:	f7f9 fe16 	bl	1049c <sys_get_uptime_us>
   16870:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   16874:	2300      	movs	r3, #0
   16876:	f007 feb3 	bl	1e5e0 <__aeabi_uldivmod>
   1687a:	4681      	mov	r9, r0
logger_log():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const unsigned int uptime = sys_get_uptime_ms();
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   1687c:	f003 f9b4 	bl	19be8 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412

    /* This must match up with the logger_msg_t enumeration */
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16880:	4b3b      	ldr	r3, [pc, #236]	; (16970 <logger_log+0x120>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16882:	1e82      	subs	r2, r0, #2
   16884:	f1d2 0800 	rsbs	r8, r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   16888:	af16      	add	r7, sp, #88	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:409
    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   1688a:	eb48 0802 	adc.w	r8, r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:412
    const char * const type_str[] = { "debug", "info", "warn", "error" };
   1688e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   16890:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:415

    // Find the back-slash or forward-slash to get filename only, not absolute or relative path
    if(0 != filename) {
   16894:	2c00      	cmp	r4, #0
   16896:	d066      	beq.n	16966 <logger_log+0x116>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:416
        temp_ptr = strrchr(filename, '/');
   16898:	212f      	movs	r1, #47	; 0x2f
   1689a:	4620      	mov	r0, r4
   1689c:	f00a fbf6 	bl	2108c <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418
        // If forward-slash not found, find back-slash
        if(0 == temp_ptr) temp_ptr = strrchr(filename, '\\');
   168a0:	b920      	cbnz	r0, 168ac <logger_log+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:418 (discriminator 1)
   168a2:	215c      	movs	r1, #92	; 0x5c
   168a4:	4620      	mov	r0, r4
   168a6:	f00a fbf1 	bl	2108c <strrchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:419 (discriminator 1)
        if(0 != temp_ptr) filename = temp_ptr+1;
   168aa:	b100      	cbz	r0, 168ae <logger_log+0x5e>
   168ac:	1c44      	adds	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
    else {
        filename = "";
    }

    if (0 == func_name) {
        func_name = "";
   168ae:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 16984 <logger_log+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    }

    /* Get an available buffer */
    buffer = logger_get_buffer_ptr(os_running);
   168b2:	4640      	mov	r0, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:426
        func_name = "";
   168b4:	2d00      	cmp	r5, #0
   168b6:	bf08      	it	eq
   168b8:	465d      	moveq	r5, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   168ba:	f7ff fe15 	bl	164e8 <logger_get_buffer_ptr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435

    do {
        int mon = time.month;
        int day = time.day;
        int hr = time.hour;
   168be:	f89d 103e 	ldrb.w	r1, [sp, #62]	; 0x3e
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        int min = time.min;
        int sec = time.sec;
        unsigned int up = uptime;
        const char *log_type_str = type_str[type];
        const char *func_parens  = func_name[0] ? "()" : "";
   168c2:	f895 c000 	ldrb.w	ip, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:435
        int hr = time.hour;
   168c6:	f001 0e1f 	and.w	lr, r1, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   168ca:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:433
        int mon = time.month;
   168ce:	f89d 2041 	ldrb.w	r2, [sp, #65]	; 0x41
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:436
        int min = time.min;
   168d2:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   168d6:	910b      	str	r1, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   168d8:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:434
        int day = time.day;
   168dc:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:437
        int sec = time.sec;
   168e0:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   168e4:	910c      	str	r1, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   168e6:	a916      	add	r1, sp, #88	; 0x58
   168e8:	eb01 0186 	add.w	r1, r1, r6, lsl #2
   168ec:	f851 1c10 	ldr.w	r1, [r1, #-16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443

        /* Write the header including time, filename, function name etc */
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   168f0:	f003 031f 	and.w	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:439
        const char *log_type_str = type_str[type];
   168f4:	910d      	str	r1, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   168f6:	491f      	ldr	r1, [pc, #124]	; (16974 <logger_log+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   168f8:	f8cd e000 	str.w	lr, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:440
        const char *func_parens  = func_name[0] ? "()" : "";
   168fc:	f1bc 0f00 	cmp.w	ip, #0
   16900:	bf08      	it	eq
   16902:	4659      	moveq	r1, fp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   16904:	9107      	str	r1, [sp, #28]
   16906:	990d      	ldr	r1, [sp, #52]	; 0x34
   16908:	f002 020f 	and.w	r2, r2, #15
   1690c:	9104      	str	r1, [sp, #16]
   1690e:	990c      	ldr	r1, [sp, #48]	; 0x30
   16910:	f8cd a020 	str.w	sl, [sp, #32]
   16914:	9102      	str	r1, [sp, #8]
   16916:	990b      	ldr	r1, [sp, #44]	; 0x2c
   16918:	9506      	str	r5, [sp, #24]
   1691a:	9101      	str	r1, [sp, #4]
   1691c:	9405      	str	r4, [sp, #20]
   1691e:	4916      	ldr	r1, [pc, #88]	; (16978 <logger_log+0x128>)
   16920:	f8cd 900c 	str.w	r9, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:430
    buffer = logger_get_buffer_ptr(os_running);
   16924:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:443
        len = sprintf(buffer, "%d/%d,%02d:%02d:%02d,%u,%s,%s,%s%s,%u,",
   16926:	f00a fa7b 	bl	20e20 <siprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
     *
     * Note: "size" of snprintf() includes the NULL character
     */
    do {
        va_list args;
        va_start(args, msg);
   1692a:	ab21      	add	r3, sp, #132	; 0x84
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   1692c:	f1c0 0195 	rsb	r1, r0, #149	; 0x95
   16930:	9a20      	ldr	r2, [sp, #128]	; 0x80
   16932:	4438      	add	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:462
        va_start(args, msg);
   16934:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:463
        vsnprintf(buffer + len, FILE_LOGGER_LOG_MSG_MAX_LEN-len-1, msg, args);
   16936:	f00b fd63 	bl	22400 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
        va_end(args);
    } while (0);

    ++g_logger_calls[type];
   1693a:	4a10      	ldr	r2, [pc, #64]	; (1697c <logger_log+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   1693c:	4641      	mov	r1, r8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   1693e:	f852 3026 	ldr.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   16942:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:467
    ++g_logger_calls[type];
   16944:	3301      	adds	r3, #1
   16946:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:468
    logger_write_log_message(buffer, os_running);
   1694a:	f7ff feb3 	bl	166b4 <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:471

    /* Print the message out if the printf mask was set */
    if (g_logger_printf_mask & (1 << type)) {
   1694e:	4b0c      	ldr	r3, [pc, #48]	; (16980 <logger_log+0x130>)
   16950:	781b      	ldrb	r3, [r3, #0]
   16952:	fa43 f606 	asr.w	r6, r3, r6
   16956:	07f3      	lsls	r3, r6, #31
   16958:	d502      	bpl.n	16960 <logger_log+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:472
        puts(buffer);
   1695a:	4638      	mov	r0, r7
   1695c:	f009 ffda 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:474
    }
}
   16960:	b017      	add	sp, #92	; 0x5c
   16962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:422
        filename = "";
   16966:	4c07      	ldr	r4, [pc, #28]	; (16984 <logger_log+0x134>)
   16968:	e7a1      	b.n	168ae <logger_log+0x5e>
   1696a:	bf00      	nop
   1696c:	2007c538 	.word	0x2007c538
   16970:	000268d0 	.word	0x000268d0
   16974:	0002672e 	.word	0x0002672e
   16978:	0002690c 	.word	0x0002690c
   1697c:	2007c524 	.word	0x2007c524
   16980:	2007c096 	.word	0x2007c096
   16984:	00027b84 	.word	0x00027b84

00016988 <logger_log_raw>:
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477

void logger_log_raw(const char * msg, ...)
{
   16988:	b40f      	push	{r0, r1, r2, r3}
logger_initialized():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   1698a:	4b0e      	ldr	r3, [pc, #56]	; (169c4 <logger_log_raw+0x3c>)
logger_log_raw():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:477
{
   1698c:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:478
    if (!logger_initialized()) {
   1698e:	681b      	ldr	r3, [r3, #0]
   16990:	b193      	cbz	r3, 169b8 <logger_log_raw+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:482
        return;
    }

    const bool os_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16992:	f003 f929 	bl	19be8 <xTaskGetSchedulerState>
   16996:	1e83      	subs	r3, r0, #2
   16998:	425c      	negs	r4, r3
   1699a:	415c      	adcs	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:483
    char * buffer = logger_get_buffer_ptr(os_running);
   1699c:	4620      	mov	r0, r4
   1699e:	f7ff fda3 	bl	164e8 <logger_get_buffer_ptr>
   169a2:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488

    /* Print the actual user message to the buffer */
    do {
        va_list args;
        va_start(args, msg);
   169a4:	ab07      	add	r3, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   169a6:	2195      	movs	r1, #149	; 0x95
   169a8:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:488
        va_start(args, msg);
   169aa:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:489
        vsnprintf(buffer, FILE_LOGGER_LOG_MSG_MAX_LEN-1, msg, args);
   169ac:	f00b fd28 	bl	22400 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:493
        va_end(args);
    } while (0);

    logger_write_log_message(buffer, os_running);
   169b0:	4621      	mov	r1, r4
   169b2:	4628      	mov	r0, r5
   169b4:	f7ff fe7e 	bl	166b4 <logger_write_log_message>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/file_logger.c:494
}
   169b8:	b003      	add	sp, #12
   169ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   169be:	b004      	add	sp, #16
   169c0:	4770      	bx	lr
   169c2:	bf00      	nop
   169c4:	2007c538 	.word	0x2007c538

000169c8 <u0_dbg_put>:
u0_dbg_put():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   169c8:	b510      	push	{r4, lr}
   169ca:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   169cc:	f001 ffec 	bl	189a8 <vPortEnterCritical>
   169d0:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   169d2:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   169d6:	b918      	cbnz	r0, 169e0 <u0_dbg_put+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   169d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   169dc:	f001 bff4 	b.w	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   169e0:	f7f9 ff7a 	bl	108d8 <uart0_putchar>
   169e4:	e7f5      	b.n	169d2 <u0_dbg_put+0xa>

000169e6 <u0_dbg_printf>:
u0_dbg_printf():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   169e6:	b40f      	push	{r0, r1, r2, r3}
   169e8:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   169ea:	f44f 7580 	mov.w	r5, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   169ee:	b0c2      	sub	sp, #264	; 0x108
   169f0:	ac46      	add	r4, sp, #280	; 0x118
   169f2:	f854 6b04 	ldr.w	r6, [r4], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   169f6:	462a      	mov	r2, r5
   169f8:	2100      	movs	r1, #0
   169fa:	a802      	add	r0, sp, #8
   169fc:	f008 fd6a 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   16a00:	4623      	mov	r3, r4
   16a02:	4632      	mov	r2, r6
   16a04:	4629      	mov	r1, r5
   16a06:	a802      	add	r0, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   16a08:	9401      	str	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   16a0a:	f00b fcf9 	bl	22400 <vsniprintf>
   16a0e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   16a10:	a802      	add	r0, sp, #8
   16a12:	f7ff ffd9 	bl	169c8 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   16a16:	4620      	mov	r0, r4
   16a18:	b042      	add	sp, #264	; 0x108
   16a1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   16a1e:	b004      	add	sp, #16
   16a20:	4770      	bx	lr

00016a22 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   16a22:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   16a24:	b513      	push	{r0, r1, r4, lr}
   16a26:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   16a28:	a902      	add	r1, sp, #8
   16a2a:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   16a2e:	6800      	ldr	r0, [r0, #0]
   16a30:	f002 fab2 	bl	18f98 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   16a34:	9b01      	ldr	r3, [sp, #4]
   16a36:	b11b      	cbz	r3, 16a40 <for_each_recur_alarm_callback+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   16a38:	6823      	ldr	r3, [r4, #0]
   16a3a:	f043 0301 	orr.w	r3, r3, #1
   16a3e:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   16a40:	2001      	movs	r0, #1
   16a42:	b002      	add	sp, #8
   16a44:	bd10      	pop	{r4, pc}

00016a46 <for_each_alarm_callback>:
for_each_alarm_callback():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   16a46:	b530      	push	{r4, r5, lr}
   16a48:	4604      	mov	r4, r0
   16a4a:	b085      	sub	sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   16a4c:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   16a4e:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   16a50:	f001 fa48 	bl	17ee4 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   16a54:	f89d 3006 	ldrb.w	r3, [sp, #6]
   16a58:	7922      	ldrb	r2, [r4, #4]
   16a5a:	f003 031f 	and.w	r3, r3, #31
   16a5e:	429a      	cmp	r2, r3
   16a60:	d11b      	bne.n	16a9a <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   16a62:	f89d 3005 	ldrb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   16a66:	7962      	ldrb	r2, [r4, #5]
   16a68:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16a6c:	429a      	cmp	r2, r3
   16a6e:	d114      	bne.n	16a9a <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   16a70:	f89d 3004 	ldrb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   16a74:	79a2      	ldrb	r2, [r4, #6]
   16a76:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16a7a:	429a      	cmp	r2, r3
   16a7c:	d10d      	bne.n	16a9a <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   16a7e:	2300      	movs	r3, #0
   16a80:	a904      	add	r1, sp, #16
   16a82:	f841 3d10 	str.w	r3, [r1, #-16]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   16a86:	6823      	ldr	r3, [r4, #0]
   16a88:	6818      	ldr	r0, [r3, #0]
   16a8a:	f002 fa85 	bl	18f98 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   16a8e:	9b00      	ldr	r3, [sp, #0]
   16a90:	b11b      	cbz	r3, 16a9a <for_each_alarm_callback+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   16a92:	682b      	ldr	r3, [r5, #0]
   16a94:	f043 0301 	orr.w	r3, r3, #1
   16a98:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   16a9a:	2001      	movs	r0, #1
   16a9c:	b005      	add	sp, #20
   16a9e:	bd30      	pop	{r4, r5, pc}

00016aa0 <RTC_IRQHandler>:
RTC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   16aa0:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   16aa2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   16aa4:	4a23      	ldr	r2, [pc, #140]	; (16b34 <RTC_IRQHandler+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   16aa6:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   16aa8:	7813      	ldrb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16aaa:	4c23      	ldr	r4, [pc, #140]	; (16b38 <RTC_IRQHandler+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   16aac:	f043 0301 	orr.w	r3, r3, #1
   16ab0:	7013      	strb	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   16ab2:	a803      	add	r0, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   16ab4:	9502      	str	r5, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   16ab6:	f001 fa15 	bl	17ee4 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16aba:	462b      	mov	r3, r5
   16abc:	9500      	str	r5, [sp, #0]
   16abe:	aa02      	add	r2, sp, #8
   16ac0:	491e      	ldr	r1, [pc, #120]	; (16b3c <RTC_IRQHandler+0x9c>)
   16ac2:	6820      	ldr	r0, [r4, #0]
   16ac4:	f7ff f955 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   16ac8:	f89d 300c 	ldrb.w	r3, [sp, #12]
   16acc:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   16ad0:	d11b      	bne.n	16b0a <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16ad2:	9300      	str	r3, [sp, #0]
   16ad4:	aa02      	add	r2, sp, #8
   16ad6:	4919      	ldr	r1, [pc, #100]	; (16b3c <RTC_IRQHandler+0x9c>)
   16ad8:	6860      	ldr	r0, [r4, #4]
   16ada:	f7ff f94a 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   16ade:	f89d 300d 	ldrb.w	r3, [sp, #13]
   16ae2:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   16ae6:	d110      	bne.n	16b0a <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16ae8:	9300      	str	r3, [sp, #0]
   16aea:	aa02      	add	r2, sp, #8
   16aec:	4913      	ldr	r1, [pc, #76]	; (16b3c <RTC_IRQHandler+0x9c>)
   16aee:	68a0      	ldr	r0, [r4, #8]
   16af0:	f7ff f93f 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   16af4:	f89d 300e 	ldrb.w	r3, [sp, #14]
   16af8:	f013 031f 	ands.w	r3, r3, #31
   16afc:	d105      	bne.n	16b0a <RTC_IRQHandler+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   16afe:	9300      	str	r3, [sp, #0]
   16b00:	aa02      	add	r2, sp, #8
   16b02:	490e      	ldr	r1, [pc, #56]	; (16b3c <RTC_IRQHandler+0x9c>)
   16b04:	68e0      	ldr	r0, [r4, #12]
   16b06:	f7ff f934 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   16b0a:	2300      	movs	r3, #0
   16b0c:	480c      	ldr	r0, [pc, #48]	; (16b40 <RTC_IRQHandler+0xa0>)
   16b0e:	9300      	str	r3, [sp, #0]
   16b10:	aa02      	add	r2, sp, #8
   16b12:	490c      	ldr	r1, [pc, #48]	; (16b44 <RTC_IRQHandler+0xa4>)
   16b14:	6800      	ldr	r0, [r0, #0]
   16b16:	f7ff f92c 	bl	15d72 <c_list_for_each_elm>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   16b1a:	9b02      	ldr	r3, [sp, #8]
   16b1c:	b13b      	cbz	r3, 16b2e <RTC_IRQHandler+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   16b1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16b22:	4b09      	ldr	r3, [pc, #36]	; (16b48 <RTC_IRQHandler+0xa8>)
   16b24:	601a      	str	r2, [r3, #0]
   16b26:	f3bf 8f4f 	dsb	sy
   16b2a:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   16b2e:	b007      	add	sp, #28
   16b30:	bd30      	pop	{r4, r5, pc}
   16b32:	bf00      	nop
   16b34:	40024000 	.word	0x40024000
   16b38:	2007c53c 	.word	0x2007c53c
   16b3c:	00016a23 	.word	0x00016a23
   16b40:	2007c54c 	.word	0x2007c54c
   16b44:	00016a47 	.word	0x00016a47
   16b48:	e000ed04 	.word	0xe000ed04

00016b4c <delay_us>:
delay_us():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   16b4c:	b570      	push	{r4, r5, r6, lr}
   16b4e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   16b50:	f7f9 fca4 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   16b54:	1984      	adds	r4, r0, r6
   16b56:	f141 0500 	adc.w	r5, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   16b5a:	f7f9 fc9f 	bl	1049c <sys_get_uptime_us>
   16b5e:	42a9      	cmp	r1, r5
   16b60:	bf08      	it	eq
   16b62:	42a0      	cmpeq	r0, r4
   16b64:	d3f9      	bcc.n	16b5a <delay_us+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   16b66:	bd70      	pop	{r4, r5, r6, pc}

00016b68 <is_freertos_running>:
is_freertos_running():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   16b68:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   16b6a:	f003 f83d 	bl	19be8 <xTaskGetSchedulerState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:68
}
   16b6e:	1e83      	subs	r3, r0, #2
   16b70:	4258      	negs	r0, r3
   16b72:	4158      	adcs	r0, r3
   16b74:	bd08      	pop	{r3, pc}

00016b76 <delay_ms>:
delay_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:50
{
   16b76:	b510      	push	{r4, lr}
   16b78:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   16b7a:	f7ff fff5 	bl	16b68 <is_freertos_running>
   16b7e:	b120      	cbz	r0, 16b8a <delay_ms+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   16b80:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16b82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   16b86:	f002 be19 	b.w	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   16b8a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   16b8e:	4360      	muls	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:63
}
   16b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   16b94:	f7ff bfda 	b.w	16b4c <delay_us>

00016b98 <str::str(char*, int)>:
_ZN3strC2EPci():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
{
    init(strlen(pString)); // Init with enough memory allocation needed to store pString's length
    copyFrom(pString);
}
/// Cannot call init() for this constructor
str::str(char *buff, int size) :
   16b98:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mStackMem(true),
        mCapacity(0),
        mpStr(buff),
        mpTempStr(NULL),
        mpTokenPtr(NULL)
   16b9a:	2301      	movs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   16b9c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16b9e:	7023      	strb	r3, [r4, #0]
   16ba0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
{
    mCapacity = (size > 0) ? (size - 1) : 0;
   16ba2:	2a00      	cmp	r2, #0
   16ba4:	bfd4      	ite	le
   16ba6:	461a      	movle	r2, r3
   16ba8:	f102 32ff 	addgt.w	r2, r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16bac:	60a1      	str	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:45
str::str(char *buff, int size) :
   16bae:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:50
        mpTokenPtr(NULL)
   16bb0:	60e3      	str	r3, [r4, #12]
   16bb2:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:52
    mCapacity = (size > 0) ? (size - 1) : 0;
   16bb4:	6062      	str	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:53
    memset(mpStr, 0, mCapacity);
   16bb6:	2100      	movs	r1, #0
   16bb8:	f008 fc8c 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:54
}
   16bbc:	4620      	mov	r0, r4
   16bbe:	bd10      	pop	{r4, pc}

00016bc0 <str::~str()>:
_ZN3strD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:55
str::~str()
   16bc0:	b538      	push	{r3, r4, r5, lr}
   16bc2:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58
{
    //printf("Delete %u bytes @ %p\n", mCapacity, mpStr);
    if(0 != mpStr && !mStackMem) {
   16bc4:	6880      	ldr	r0, [r0, #8]
   16bc6:	b118      	cbz	r0, 16bd0 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:58 (discriminator 1)
   16bc8:	7823      	ldrb	r3, [r4, #0]
   16bca:	b90b      	cbnz	r3, 16bd0 <str::~str()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:59
        free(mpStr);
   16bcc:	f008 fc26 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:61
    }
    if (mpTempStr) {
   16bd0:	68e5      	ldr	r5, [r4, #12]
   16bd2:	b135      	cbz	r5, 16be2 <str::~str()+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:62 (discriminator 1)
        delete mpTempStr;
   16bd4:	4628      	mov	r0, r5
   16bd6:	f7ff fff3 	bl	16bc0 <str::~str()>
   16bda:	2114      	movs	r1, #20
   16bdc:	4628      	mov	r0, r5
   16bde:	f006 fd22 	bl	1d626 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:64
    }
}
   16be2:	4620      	mov	r0, r4
   16be4:	bd38      	pop	{r3, r4, r5, pc}

00016be6 <str::getLen() const>:
_ZNK3str6getLenEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:69


int str::getLen() const
{
    return strlen(mpStr);
   16be6:	6880      	ldr	r0, [r0, #8]
   16be8:	f00a b9fa 	b.w	20fe0 <strlen>

00016bec <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:74
}
int str::getCapacity() const
{
    return mCapacity;
}
   16bec:	6840      	ldr	r0, [r0, #4]
   16bee:	4770      	bx	lr

00016bf0 <str::clear()>:
_ZN3str5clearEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:87
        return true;
    }
}
void str::clear()
{
    *mpStr = '\0';
   16bf0:	2200      	movs	r2, #0
   16bf2:	6883      	ldr	r3, [r0, #8]
   16bf4:	701a      	strb	r2, [r3, #0]
   16bf6:	4770      	bx	lr

00016bf8 <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:144
    va_end(args);
    return len;
}

int str::scanf(const char* pFormat, ...)
{
   16bf8:	b40e      	push	{r1, r2, r3}
   16bfa:	b503      	push	{r0, r1, lr}
   16bfc:	aa03      	add	r2, sp, #12
   16bfe:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    va_list args;
    va_start(args, pFormat);
    int parsedParams = vsscanf (mpStr, pFormat, args);
   16c02:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:146
    va_start(args, pFormat);
   16c04:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:147
    int parsedParams = vsscanf (mpStr, pFormat, args);
   16c06:	f00b fc2d 	bl	22464 <vsiscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:151
    va_end(args);

    return parsedParams;
}
   16c0a:	b002      	add	sp, #8
   16c0c:	f85d eb04 	ldr.w	lr, [sp], #4
   16c10:	b003      	add	sp, #12
   16c12:	4770      	bx	lr

00016c14 <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154

int str::tokenize(const char* delimators, int char_ptr_count, ...)
{
   16c14:	b40c      	push	{r2, r3}
   16c16:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    va_list args;
    va_start(args, char_ptr_count);

    int token_count = 0;
    char *it = NULL;
   16c18:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16c1a:	ab08      	add	r3, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   16c1c:	ad02      	add	r5, sp, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16c1e:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:159
    char *it = NULL;
   16c22:	f845 4d04 	str.w	r4, [r5, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   16c26:	462a      	mov	r2, r5
   16c28:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:154
{
   16c2a:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:156
    va_start(args, char_ptr_count);
   16c2c:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:160
    char *token = strtok_r(mpStr, delimators, &it);
   16c2e:	f00b f8b0 	bl	21d92 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162

    while(token != NULL && char_ptr_count > 0) {
   16c32:	b178      	cbz	r0, 16c54 <str::tokenize(char const*, int, ...)+0x40>
   16c34:	1b3b      	subs	r3, r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162 (discriminator 1)
   16c36:	2b00      	cmp	r3, #0
   16c38:	dd0c      	ble.n	16c54 <str::tokenize(char const*, int, ...)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:163
        char **p = va_arg(args, char**);
   16c3a:	9b00      	ldr	r3, [sp, #0]
   16c3c:	1d1a      	adds	r2, r3, #4
   16c3e:	681b      	ldr	r3, [r3, #0]
   16c40:	9200      	str	r2, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:164
        if (p) {
   16c42:	b103      	cbz	r3, 16c46 <str::tokenize(char const*, int, ...)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:165
            *p = token;
   16c44:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:169
        }

        // Get next token
        token = strtok_r(NULL, delimators, &it);
   16c46:	462a      	mov	r2, r5
   16c48:	4631      	mov	r1, r6
   16c4a:	2000      	movs	r0, #0
   16c4c:	f00b f8a1 	bl	21d92 <strtok_r>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:172

        --char_ptr_count;
        ++token_count;
   16c50:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:162
    while(token != NULL && char_ptr_count > 0) {
   16c52:	e7ee      	b.n	16c32 <str::tokenize(char const*, int, ...)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:177
    }
    va_end(args);

    return token_count;
}
   16c54:	4620      	mov	r0, r4
   16c56:	b003      	add	sp, #12
   16c58:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   16c5c:	b002      	add	sp, #8
   16c5e:	4770      	bx	lr

00016c60 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:241
    append(hexVal);
}


bool str::compareTo(const char* pString) const
{
   16c60:	b508      	push	{r3, lr}
   16c62:	460b      	mov	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:242
    return (0 == strcmp(pString, mpStr));
   16c64:	6881      	ldr	r1, [r0, #8]
   16c66:	4618      	mov	r0, r3
   16c68:	f00a f9a8 	bl	20fbc <strcmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:243
}
   16c6c:	fab0 f080 	clz	r0, r0
   16c70:	0940      	lsrs	r0, r0, #5
   16c72:	bd08      	pop	{r3, pc}

00016c74 <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:245
bool str::compareToIgnoreCase(const char* pString) const
{
   16c74:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:246
    return (0 == strcasecmp(mpStr, pString));
   16c76:	6880      	ldr	r0, [r0, #8]
   16c78:	f00a f965 	bl	20f46 <strcasecmp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:247
}
   16c7c:	fab0 f080 	clz	r0, r0
   16c80:	0940      	lsrs	r0, r0, #5
   16c82:	bd08      	pop	{r3, pc}

00016c84 <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
    return firstIndexOf(pString) != mInvalidIndex;
}


int str::firstIndexOfIgnoreCase(const char* pString) const
{
   16c84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    int findIndex = mInvalidIndex;
    char* firstChar;

    if(0 != *pString && 0 != *mpStr)
   16c88:	780f      	ldrb	r7, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:255
{
   16c8a:	468a      	mov	sl, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259
    if(0 != *pString && 0 != *mpStr)
   16c8c:	b3a7      	cbz	r7, 16cf8 <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   16c8e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:259 (discriminator 1)
   16c92:	6886      	ldr	r6, [r0, #8]
   16c94:	7833      	ldrb	r3, [r6, #0]
   16c96:	b38b      	cbz	r3, 16cfc <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:261 (discriminator 1)
    {
        for(char* pSearchLoc = mpStr; 0 != *pSearchLoc; pSearchLoc = firstChar + 1)
   16c98:	7833      	ldrb	r3, [r6, #0]
   16c9a:	b37b      	cbz	r3, 16cfc <str::firstIndexOfIgnoreCase(char const*) const+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:264
        {
            // First, find first char match ignoring the case.
            if(0 == (firstChar = strchr(pSearchLoc, tolower(*pString)))) {
   16c9c:	4638      	mov	r0, r7
   16c9e:	f00b f937 	bl	21f10 <tolower>
   16ca2:	4601      	mov	r1, r0
   16ca4:	4630      	mov	r0, r6
   16ca6:	f00a f97b 	bl	20fa0 <strchr>
   16caa:	b938      	cbnz	r0, 16cbc <str::firstIndexOfIgnoreCase(char const*) const+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:265
                if(0 == (firstChar = strchr(pSearchLoc, toupper(*pString)))) {
   16cac:	4638      	mov	r0, r7
   16cae:	f00b f93c 	bl	21f2a <toupper>
   16cb2:	4601      	mov	r1, r0
   16cb4:	4630      	mov	r0, r6
   16cb6:	f00a f973 	bl	20fa0 <strchr>
   16cba:	b1e8      	cbz	r0, 16cf8 <str::firstIndexOfIgnoreCase(char const*) const+0x74>
   16cbc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:273
                }
            }

            // First char matched, now match remaining string
            char* i2 = (char*)pString + 1;
            findIndex = firstChar - pSearchLoc;
   16cbe:	1b85      	subs	r5, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:272
            char* i2 = (char*)pString + 1;
   16cc0:	f10a 0801 	add.w	r8, sl, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275

            for(char* i1 = firstChar + 1; *i1 && *i2; i1++, i2++)
   16cc4:	1c46      	adds	r6, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 1)
   16cc6:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   16cca:	46c1      	mov	r9, r8
   16ccc:	b188      	cbz	r0, 16cf2 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:275 (discriminator 2)
   16cce:	f898 b000 	ldrb.w	fp, [r8]
   16cd2:	f108 0801 	add.w	r8, r8, #1
   16cd6:	f1bb 0f00 	cmp.w	fp, #0
   16cda:	d00a      	beq.n	16cf2 <str::firstIndexOfIgnoreCase(char const*) const+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:277
            {
                if(tolower(*i1) != tolower(*i2))
   16cdc:	f00b f918 	bl	21f10 <tolower>
   16ce0:	9001      	str	r0, [sp, #4]
   16ce2:	4658      	mov	r0, fp
   16ce4:	f00b f914 	bl	21f10 <tolower>
   16ce8:	9b01      	ldr	r3, [sp, #4]
   16cea:	4283      	cmp	r3, r0
   16cec:	d0eb      	beq.n	16cc6 <str::firstIndexOfIgnoreCase(char const*) const+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:279
                {
                    findIndex = mInvalidIndex;
   16cee:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:285
                    break;
                }
            }

            // If iterator2 reached null char, we matched entire string!
            if(0 == *i2) {
   16cf2:	f899 3000 	ldrb.w	r3, [r9]
   16cf6:	e7ce      	b.n	16c96 <str::firstIndexOfIgnoreCase(char const*) const+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:256
    int findIndex = mInvalidIndex;
   16cf8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:292
            }
        };
    }

    return findIndex;
}
   16cfc:	4628      	mov	r0, r5
   16cfe:	b003      	add	sp, #12
   16d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016d04 <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:294
bool str::containsIgnoreCase(const char* pString) const
{
   16d04:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:295
    return firstIndexOfIgnoreCase(pString) != mInvalidIndex;
   16d06:	f7ff ffbd 	bl	16c84 <str::firstIndexOfIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:296
}
   16d0a:	3001      	adds	r0, #1
   16d0c:	bf18      	it	ne
   16d0e:	2001      	movne	r0, #1
   16d10:	bd08      	pop	{r3, pc}

00016d12 <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:298
int str::firstIndexOf(const char* pString) const
{
   16d12:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:299
    char* pFindPtr = strstr(mpStr, pString);
   16d14:	6884      	ldr	r4, [r0, #8]
   16d16:	4620      	mov	r0, r4
   16d18:	f00a f9cb 	bl	210b2 <strstr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
    return (0 == pFindPtr) ? mInvalidIndex : (pFindPtr - mpStr);
   16d1c:	b108      	cbz	r0, 16d22 <str::firstIndexOf(char const*) const+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300 (discriminator 1)
   16d1e:	1b00      	subs	r0, r0, r4
   16d20:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:300
   16d22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:301
}
   16d26:	bd10      	pop	{r4, pc}

00016d28 <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
    return count;
}


bool str::beginsWith(const char* pString) const
{
   16d28:	b570      	push	{r4, r5, r6, lr}
   16d2a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16d2c:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:339
{
   16d2e:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:340
    const int theirLen = strlen(pString);
   16d30:	f00a f956 	bl	20fe0 <strlen>
   16d34:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && (0 == strncmp(mpStr, pString, theirLen)));
   16d36:	4620      	mov	r0, r4
   16d38:	f7ff ff55 	bl	16be6 <str::getLen() const>
   16d3c:	4286      	cmp	r6, r0
   16d3e:	dc08      	bgt.n	16d52 <str::beginsWith(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343 (discriminator 1)
   16d40:	4632      	mov	r2, r6
   16d42:	4629      	mov	r1, r5
   16d44:	68a0      	ldr	r0, [r4, #8]
   16d46:	f00a f97a 	bl	2103e <strncmp>
   16d4a:	fab0 f080 	clz	r0, r0
   16d4e:	0940      	lsrs	r0, r0, #5
   16d50:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:343
   16d52:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:344
}
   16d54:	bd70      	pop	{r4, r5, r6, pc}

00016d56 <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
bool str::beginsWithIgnoreCase(const char* pString) const
{
   16d56:	b570      	push	{r4, r5, r6, lr}
   16d58:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16d5a:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:346
{
   16d5c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:347
    const int theirLen = strlen(pString);
   16d5e:	f00a f93f 	bl	20fe0 <strlen>
   16d62:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350

    // If their length is greater, it can't match our string
    return (getLen() >= theirLen && 0 == strncasecmp(pString, mpStr, theirLen));
   16d64:	4628      	mov	r0, r5
   16d66:	f7ff ff3e 	bl	16be6 <str::getLen() const>
   16d6a:	4286      	cmp	r6, r0
   16d6c:	dc08      	bgt.n	16d80 <str::beginsWithIgnoreCase(char const*) const+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350 (discriminator 1)
   16d6e:	4632      	mov	r2, r6
   16d70:	68a9      	ldr	r1, [r5, #8]
   16d72:	4620      	mov	r0, r4
   16d74:	f00a f93c 	bl	20ff0 <strncasecmp>
   16d78:	fab0 f080 	clz	r0, r0
   16d7c:	0940      	lsrs	r0, r0, #5
   16d7e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:350
   16d80:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:351
}
   16d82:	bd70      	pop	{r4, r5, r6, pc}

00016d84 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364

    const char c = mpStr[len];
    return beginsWith(pString) && (seperator == c || '\0' == c);
}
bool str::beginsWithWholeWordIgnoreCase(const char* pString, char seperator) const
{
   16d84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16d86:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    // After comparison, the char must be a space or null terminated
    int len = strlen(pString);
   16d88:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:364
{
   16d8a:	460e      	mov	r6, r1
   16d8c:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:366
    int len = strlen(pString);
   16d8e:	f00a f927 	bl	20fe0 <strlen>
   16d92:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:367
    if (len > getLen()) {
   16d94:	4620      	mov	r0, r4
   16d96:	f7ff ff26 	bl	16be6 <str::getLen() const>
   16d9a:	4285      	cmp	r5, r0
   16d9c:	dc0c      	bgt.n	16db8 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
        return false;
    }

    const char c = mpStr[len];
   16d9e:	68a3      	ldr	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   16da0:	4631      	mov	r1, r6
   16da2:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:371
    const char c = mpStr[len];
   16da4:	5d5d      	ldrb	r5, [r3, r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
    return beginsWithIgnoreCase(pString) && (seperator == c || '\0' == c);
   16da6:	f7ff ffd6 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   16daa:	b130      	cbz	r0, 16dba <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 1)
   16dac:	42bd      	cmp	r5, r7
   16dae:	d004      	beq.n	16dba <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372 (discriminator 4)
   16db0:	fab5 f085 	clz	r0, r5
   16db4:	0940      	lsrs	r0, r0, #5
   16db6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:372
   16db8:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:373
}
   16dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016dbc <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:418
        return eraseAfter(findIndex, strlen(pString));
    }
    return false;
}
bool str::eraseFirst(int nChars)
{
   16dbc:	b538      	push	{r3, r4, r5, lr}
   16dbe:	460c      	mov	r4, r1
   16dc0:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   16dc2:	f7ff ff10 	bl	16be6 <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    bool ok = false;
    if(nChars > 0 && nChars <= len)
   16dc6:	2c00      	cmp	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:419
    const int len = getLen();
   16dc8:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421
    if(nChars > 0 && nChars <= len)
   16dca:	dd09      	ble.n	16de0 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:421 (discriminator 1)
   16dcc:	42a0      	cmp	r0, r4
   16dce:	db07      	blt.n	16de0 <str::eraseFirst(int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:423
    {
        memmove(mpStr, mpStr + nChars, len - nChars + 1);
   16dd0:	68a8      	ldr	r0, [r5, #8]
   16dd2:	1b12      	subs	r2, r2, r4
   16dd4:	3201      	adds	r2, #1
   16dd6:	1901      	adds	r1, r0, r4
   16dd8:	f008 fb62 	bl	1f4a0 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:424
        ok = true;
   16ddc:	2001      	movs	r0, #1
   16dde:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:420
    bool ok = false;
   16de0:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:427
    }
    return ok;
}
   16de2:	bd38      	pop	{r3, r4, r5, pc}

00016de4 <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:429
bool str::eraseLast(int nChars)
{
   16de4:	b538      	push	{r3, r4, r5, lr}
   16de6:	460c      	mov	r4, r1
   16de8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:430
    const int len = getLen();
   16dea:	f7ff fefc 	bl	16be6 <str::getLen() const>
   16dee:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:432
    bool ok = false;
    if(nChars <= len)
   16df0:	42a0      	cmp	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:434
    {
        mpStr[len-nChars] = '\0';
   16df2:	bfa1      	itttt	ge
   16df4:	68aa      	ldrge	r2, [r5, #8]
   16df6:	1b00      	subge	r0, r0, r4
   16df8:	5413      	strbge	r3, [r2, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:435
        ok = true;
   16dfa:	2001      	movge	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:431
    bool ok = false;
   16dfc:	bfb8      	it	lt
   16dfe:	4618      	movlt	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:438
    }
    return ok;
}
   16e00:	bd38      	pop	{r3, r4, r5, pc}

00016e02 <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:454
        ok = true;
    }
    return ok;
}
bool str::eraseAfter(int index, int nChars)
{
   16e02:	b570      	push	{r4, r5, r6, lr}
   16e04:	460d      	mov	r5, r1
   16e06:	4606      	mov	r6, r0
   16e08:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:455
    const int ourLen = getLen();
   16e0a:	f7ff feec 	bl	16be6 <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458
    bool ok = false;

    if(index >= 0 && index < ourLen && nChars > 0)
   16e0e:	2d00      	cmp	r5, #0
   16e10:	db11      	blt.n	16e36 <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 1)
   16e12:	42a8      	cmp	r0, r5
   16e14:	dd0f      	ble.n	16e36 <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:458 (discriminator 2)
   16e16:	2c00      	cmp	r4, #0
   16e18:	dd0d      	ble.n	16e36 <str::eraseAfter(int, int)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:461
    {
        // "012345", index = 2, nChars = 6
        if(nChars > ourLen - index) {
   16e1a:	1b42      	subs	r2, r0, r5
   16e1c:	4294      	cmp	r4, r2
   16e1e:	bfa8      	it	ge
   16e20:	4614      	movge	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:464
            nChars = ourLen - index;
        }
        memmove(mpStr+index, mpStr+index+nChars, ourLen - index - nChars + 1);
   16e22:	68b0      	ldr	r0, [r6, #8]
   16e24:	1b12      	subs	r2, r2, r4
   16e26:	442c      	add	r4, r5
   16e28:	1901      	adds	r1, r0, r4
   16e2a:	3201      	adds	r2, #1
   16e2c:	4428      	add	r0, r5
   16e2e:	f008 fb37 	bl	1f4a0 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:465
        ok = true;
   16e32:	2001      	movs	r0, #1
   16e34:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:456
    bool ok = false;
   16e36:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:468
    }
    return ok;
}
   16e38:	bd70      	pop	{r4, r5, r6, pc}

00016e3a <str::erase(char const*)>:
_ZN3str5eraseEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:409
{
   16e3a:	b570      	push	{r4, r5, r6, lr}
   16e3c:	4605      	mov	r5, r0
   16e3e:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   16e40:	f7ff ff67 	bl	16d12 <str::firstIndexOf(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   16e44:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:410
    const int findIndex = firstIndexOf(pString);
   16e46:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:411
    if(mInvalidIndex != findIndex)
   16e48:	d009      	beq.n	16e5e <str::erase(char const*)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16e4a:	4630      	mov	r0, r6
   16e4c:	f00a f8c8 	bl	20fe0 <strlen>
   16e50:	4621      	mov	r1, r4
   16e52:	4602      	mov	r2, r0
   16e54:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   16e56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:413
        return eraseAfter(findIndex, strlen(pString));
   16e5a:	f7ff bfd2 	b.w	16e02 <str::eraseAfter(int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:416
}
   16e5e:	2000      	movs	r0, #0
   16e60:	bd70      	pop	{r4, r5, r6, pc}

00016e62 <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:470
bool str::eraseFirstWords(int words, char separator)
{
   16e62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16e64:	6885      	ldr	r5, [r0, #8]
   16e66:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    int n = 0;
    int found = 0;

    // test one two
    for (n = 0; mpStr[n] && found != words; n++) {
   16e68:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:472
    int found = 0;
   16e6a:	2400      	movs	r4, #0
   16e6c:	1b59      	subs	r1, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 1)
    for (n = 0; mpStr[n] && found != words; n++) {
   16e6e:	f813 6b01 	ldrb.w	r6, [r3], #1
   16e72:	b13e      	cbz	r6, 16e84 <str::eraseFirstWords(int, char)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475 (discriminator 2)
   16e74:	42bc      	cmp	r4, r7
   16e76:	d003      	beq.n	16e80 <str::eraseFirstWords(int, char)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:476
        if (mpStr[n] == separator) {
   16e78:	4296      	cmp	r6, r2
   16e7a:	d1f7      	bne.n	16e6c <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:477
            found++;
   16e7c:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:475
    for (n = 0; mpStr[n] && found != words; n++) {
   16e7e:	e7f5      	b.n	16e6c <str::eraseFirstWords(int, char)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:482
        }
    }

    if (found == words && mpStr[n]) {
        eraseFirst(n);
   16e80:	f7ff ff9c 	bl	16dbc <str::eraseFirst(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:486
    }

    return !!found;
}
   16e84:	1c20      	adds	r0, r4, #0
   16e86:	bf18      	it	ne
   16e88:	2001      	movne	r0, #1
   16e8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016e8c <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:508
    return count;
}


void str::trimStart(const char* pChars)
{
   16e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16e8e:	4606      	mov	r6, r0
   16e90:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    int numBegCharsToRemove = 0;
    const int ourLen = getLen();
   16e92:	f7ff fea8 	bl	16be6 <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:509
    int numBegCharsToRemove = 0;
   16e96:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:510
    const int ourLen = getLen();
   16e98:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512 (discriminator 1)

    for(int i = 0; i < ourLen; i++)
   16e9a:	42bc      	cmp	r4, r7
   16e9c:	da0e      	bge.n	16ebc <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:514
    {
        const int len = strlen(pChars);
   16e9e:	4628      	mov	r0, r5
   16ea0:	f00a f89e 	bl	20fe0 <strlen>
   16ea4:	462b      	mov	r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:517 (discriminator 1)
        bool trimDone = false;

        for(int j = 0 ; j < len; j++)
   16ea6:	1b5a      	subs	r2, r3, r5
   16ea8:	4290      	cmp	r0, r2
   16eaa:	dd07      	ble.n	16ebc <str::trimStart(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:519
        {
            if(pChars[j] == mpStr[i]) {
   16eac:	68b1      	ldr	r1, [r6, #8]
   16eae:	f813 2b01 	ldrb.w	r2, [r3], #1
   16eb2:	5d09      	ldrb	r1, [r1, r4]
   16eb4:	4291      	cmp	r1, r2
   16eb6:	d1f6      	bne.n	16ea6 <str::trimStart(char const*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:521
                trimDone = true;
                numBegCharsToRemove++;
   16eb8:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:512
    for(int i = 0; i < ourLen; i++)
   16eba:	e7ee      	b.n	16e9a <str::trimStart(char const*)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:531
        if(!trimDone) {
            break;
        }
    }

    if(numBegCharsToRemove > 0) {
   16ebc:	b12c      	cbz	r4, 16eca <str::trimStart(char const*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   16ebe:	4621      	mov	r1, r4
   16ec0:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:534
    }
}
   16ec2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:532
        eraseFirst(numBegCharsToRemove);
   16ec6:	f7ff bf79 	b.w	16dbc <str::eraseFirst(int)>
   16eca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016ecc <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
void str::trimEnd(const char* pChars)
{
   16ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16ece:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   16ed0:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:536
{
   16ed2:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:537
    const int trimLen = strlen(pChars);
   16ed4:	f00a f884 	bl	20fe0 <strlen>
   16ed8:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16eda:	4628      	mov	r0, r5
   16edc:	f7ff fe83 	bl	16be6 <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
        for(int j = 0 ; j < trimLen; j++)
        {
            if(pChars[j] == mpStr[i])
            {
                trimDone = true;
                mpStr[i] = '\0';
   16ee0:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16ee2:	3801      	subs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538 (discriminator 1)
   16ee4:	2800      	cmp	r0, #0
   16ee6:	db0d      	blt.n	16f04 <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
   16ee8:	4623      	mov	r3, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:541 (discriminator 1)
        for(int j = 0 ; j < trimLen; j++)
   16eea:	1b1a      	subs	r2, r3, r4
   16eec:	4297      	cmp	r7, r2
   16eee:	dd09      	ble.n	16f04 <str::trimEnd(char const*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:543
            if(pChars[j] == mpStr[i])
   16ef0:	68aa      	ldr	r2, [r5, #8]
   16ef2:	f813 eb01 	ldrb.w	lr, [r3], #1
   16ef6:	1811      	adds	r1, r2, r0
   16ef8:	5c12      	ldrb	r2, [r2, r0]
   16efa:	4572      	cmp	r2, lr
   16efc:	d1f5      	bne.n	16eea <str::trimEnd(char const*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:546
                mpStr[i] = '\0';
   16efe:	700e      	strb	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:538
    for(int i = getLen() - 1; i >= 0; i--)
   16f00:	3801      	subs	r0, #1
   16f02:	e7ef      	b.n	16ee4 <str::trimEnd(char const*)+0x18>
   16f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016f06 <str::operator==(char const*) const>:
_ZNK3streqEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:918
        (*this) = str::toInt(mpStr) - n; // Call Assignment Operator for int
    }
}
bool str::operator==(const char* pString) const
{
    return compareTo(pString);
   16f06:	f7ff beab 	b.w	16c60 <str::compareTo(char const*) const>

00016f0a <str::operator()() const>:
_ZNK3strclEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:968
bool str::operator>(float x) const             { return (float)(*this) > x;         }

const char* str::operator()() const
{
    return mpStr;
}
   16f0a:	6880      	ldr	r0, [r0, #8]
   16f0c:	4770      	bx	lr

00016f0e <str::operator int() const>:
_ZN3str5toIntEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:28
int str::toInt(const char* pString)     {   return atoi(pString);   }
   16f0e:	6880      	ldr	r0, [r0, #8]
   16f10:	f007 bcf5 	b.w	1e8fe <atoi>

00016f14 <str::operator[](int)>:
_ZN3strixEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:981
{
    return str::toFloat(mpStr);
}

char& str::operator[](int pos)
{
   16f14:	b538      	push	{r3, r4, r5, lr}
   16f16:	460c      	mov	r4, r1
   16f18:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:982
    return pos < getLen() ? mpStr[pos] : mpStr[0];
   16f1a:	f7ff fe64 	bl	16be6 <str::getLen() const>
   16f1e:	42a0      	cmp	r0, r4
   16f20:	68a8      	ldr	r0, [r5, #8]
   16f22:	bfc8      	it	gt
   16f24:	1900      	addgt	r0, r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:983
}
   16f26:	bd38      	pop	{r3, r4, r5, pc}

00016f28 <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    }
}

bool str::reAllocateMem(const int size)
{
    if (mStackMem) {
   16f28:	7803      	ldrb	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1027
{
   16f2a:	b570      	push	{r4, r5, r6, lr}
   16f2c:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1028
    if (mStackMem) {
   16f2e:	b9fb      	cbnz	r3, 16f70 <str::reAllocateMem(int)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
        return false;
    }

    // Minimum size is 4 bytes, but we need 1 extra char for NULL
    mCapacity = (0 == size) ? 4 : (1 + size);
   16f30:	b1b1      	cbz	r1, 16f60 <str::reAllocateMem(int)+0x38>
   16f32:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036

    // Align the size to minimize memory fragmentation
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   16f34:	2410      	movs	r4, #16
   16f36:	fb91 f4f4 	sdiv	r4, r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038

    if(0 == mpStr){
   16f3a:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1036
    mCapacity = (mCapacity / mAllocSize) * mAllocSize + mAllocSize;
   16f3c:	3401      	adds	r4, #1
   16f3e:	0124      	lsls	r4, r4, #4
   16f40:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1038
    if(0 == mpStr){
   16f42:	b97e      	cbnz	r6, 16f64 <str::reAllocateMem(int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1039
        mpStr = (char*)malloc(mCapacity);
   16f44:	4620      	mov	r0, r4
   16f46:	f008 fa61 	bl	1f40c <malloc>
   16f4a:	60a8      	str	r0, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1040
        if (NULL != mpStr) {
   16f4c:	b118      	cbz	r0, 16f56 <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1041
            memset(mpStr, 0, mCapacity);
   16f4e:	4622      	mov	r2, r4
   16f50:	4631      	mov	r1, r6
   16f52:	f008 fabf 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1048
    }
    else {
        mpStr = (char*)realloc(mpStr, mCapacity+1);
    }

    return (NULL != mpStr);
   16f56:	68a8      	ldr	r0, [r5, #8]
   16f58:	3000      	adds	r0, #0
   16f5a:	bf18      	it	ne
   16f5c:	2001      	movne	r0, #1
   16f5e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1033
    mCapacity = (0 == size) ? 4 : (1 + size);
   16f60:	2104      	movs	r1, #4
   16f62:	e7e7      	b.n	16f34 <str::reAllocateMem(int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1045
        mpStr = (char*)realloc(mpStr, mCapacity+1);
   16f64:	1c61      	adds	r1, r4, #1
   16f66:	4630      	mov	r0, r6
   16f68:	f009 fd3e 	bl	209e8 <realloc>
   16f6c:	60a8      	str	r0, [r5, #8]
   16f6e:	e7f2      	b.n	16f56 <str::reAllocateMem(int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1029
        return false;
   16f70:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1049
}
   16f72:	bd70      	pop	{r4, r5, r6, pc}

00016f74 <str::init(int)>:
_ZN3str4initEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:453
        static const int mAllocSize = 16;

        /// init() is called by constructors to initialize the string
        void init(int initialLength=mAllocSize)
        {
            mStackMem = false;
   16f74:	2200      	movs	r2, #0
   16f76:	7002      	strb	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:454
            mCapacity = 0;
   16f78:	6042      	str	r2, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:455
            mpStr = 0;
   16f7a:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:456
            mpTempStr = 0;
   16f7c:	60c2      	str	r2, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:457
            mpTokenPtr = 0;
   16f7e:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/str.hpp:459

            reAllocateMem(initialLength);
   16f80:	f7ff bfd2 	b.w	16f28 <str::reAllocateMem(int)>

00016f84 <str::str(int)>:
_ZN3strC2Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:35
str::str(int capacity)
   16f84:	b510      	push	{r4, lr}
   16f86:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:37
    init(capacity);
   16f88:	f7ff fff4 	bl	16f74 <str::init(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:38
}
   16f8c:	4620      	mov	r0, r4
   16f8e:	bd10      	pop	{r4, pc}

00016f90 <str::reserve(int)>:
_ZN3str7reserveEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:77
    if(mCapacity < n)
   16f90:	6843      	ldr	r3, [r0, #4]
   16f92:	428b      	cmp	r3, r1
   16f94:	da01      	bge.n	16f9a <str::reserve(int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:79
        return reAllocateMem(n);
   16f96:	f7ff bfc7 	b.w	16f28 <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:84
}
   16f9a:	2001      	movs	r0, #1
   16f9c:	4770      	bx	lr

00016f9e <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   16f9e:	b40e      	push	{r1, r2, r3}
   16fa0:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   16fa2:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:113
    int len = 0;
   16fa4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:112
{
   16fa6:	ab07      	add	r3, sp, #28
   16fa8:	f853 7b04 	ldr.w	r7, [r3], #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:116
    va_start(args, format);
   16fac:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:118
    while (mpStr)
   16fae:	68b0      	ldr	r0, [r6, #8]
   16fb0:	b180      	cbz	r0, 16fd4 <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   16fb2:	6875      	ldr	r5, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   16fb4:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:124
        int mem = getCapacity() + 1;
   16fb6:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16fb8:	463a      	mov	r2, r7
   16fba:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:121
        va_copy(args_copy, args);
   16fbc:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16fbe:	f00b fa1f 	bl	22400 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   16fc2:	4285      	cmp	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:125
        len = vsnprintf(mpStr, mem, format, args_copy);
   16fc4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:131
        if (len >= mem) {
   16fc6:	dc05      	bgt.n	16fd4 <str::printf(char const*, ...)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:132
            break_loop = !reserve(len + 1);
   16fc8:	1c41      	adds	r1, r0, #1
   16fca:	4630      	mov	r0, r6
   16fcc:	f7ff ffe0 	bl	16f90 <str::reserve(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:134
        if (break_loop) {
   16fd0:	2800      	cmp	r0, #0
   16fd2:	d1ec      	bne.n	16fae <str::printf(char const*, ...)+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:141
}
   16fd4:	4620      	mov	r0, r4
   16fd6:	b002      	add	sp, #8
   16fd8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   16fdc:	b003      	add	sp, #12
   16fde:	4770      	bx	lr

00016fe0 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1011
{
   16fe0:	b538      	push	{r3, r4, r5, lr}
   16fe2:	4605      	mov	r5, r0
   16fe4:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1013
    const int existingLen = getLen();
   16fe6:	f7ff fdfe 	bl	16be6 <str::getLen() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   16fea:	686b      	ldr	r3, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1014
    const int requiredMem = newLen + existingLen;
   16fec:	1821      	adds	r1, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1016
    if(mCapacity < requiredMem)
   16fee:	4299      	cmp	r1, r3
   16ff0:	dd05      	ble.n	16ffe <str::ensureMemoryToInsertNChars(int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   16ff2:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   16ff4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1019
        return reAllocateMem(requiredMem + 32);
   16ff8:	3120      	adds	r1, #32
   16ffa:	f7ff bf95 	b.w	16f28 <str::reAllocateMem(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1024
}
   16ffe:	2001      	movs	r0, #1
   17000:	bd38      	pop	{r3, r4, r5, pc}

00017002 <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   17002:	b570      	push	{r4, r5, r6, lr}
   17004:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   17006:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:184
{
   17008:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:186
    if (ensureMemoryToInsertNChars(strlen(pString))) {
   1700a:	f009 ffe9 	bl	20fe0 <strlen>
   1700e:	4601      	mov	r1, r0
   17010:	4628      	mov	r0, r5
   17012:	f7ff ffe5 	bl	16fe0 <str::ensureMemoryToInsertNChars(int)>
   17016:	4604      	mov	r4, r0
   17018:	b118      	cbz	r0, 17022 <str::insertAtEnd(char const*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:187
        strcat(mpStr, pString);
   1701a:	4631      	mov	r1, r6
   1701c:	68a8      	ldr	r0, [r5, #8]
   1701e:	f009 ffb0 	bl	20f82 <strcat>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:191
}
   17022:	4620      	mov	r0, r4
   17024:	bd70      	pop	{r4, r5, r6, pc}

00017026 <str::operator+=(char)>:
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   17026:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:876
{
   17028:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:877
    char s[] = {singleChar, '\0'};
   1702a:	f8ad 3004 	strh.w	r3, [sp, #4]
   1702e:	ab02      	add	r3, sp, #8
   17030:	f803 1d04 	strb.w	r1, [r3, #-4]!
_ZN3str6appendEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:216
    insertAtEnd(pString);
   17034:	4619      	mov	r1, r3
   17036:	f7ff ffe4 	bl	17002 <str::insertAtEnd(char const*)>
_ZN3strpLEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:879
}
   1703a:	b003      	add	sp, #12
   1703c:	f85d fb04 	ldr.w	pc, [sp], #4

00017040 <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052

void str::copyFrom(const char* pString)
{
   17040:	b570      	push	{r4, r5, r6, lr}
   17042:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   17044:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1052
{
   17046:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   17048:	f009 ffca 	bl	20fe0 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055

    if(strLen > mCapacity) {
   1704c:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1053
    const int strLen = strlen(pString);
   1704e:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1055
    if(strLen > mCapacity) {
   17050:	4298      	cmp	r0, r3
   17052:	dd0d      	ble.n	17070 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1057
        // If we can't allocate memory, only copy up to capacity
        if (!reAllocateMem(strLen)) {
   17054:	4620      	mov	r0, r4
   17056:	f7ff ff67 	bl	16f28 <str::reAllocateMem(int)>
   1705a:	4606      	mov	r6, r0
   1705c:	b940      	cbnz	r0, 17070 <str::copyFrom(char const*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1058
            strncpy(mpStr, pString, mCapacity);
   1705e:	6862      	ldr	r2, [r4, #4]
   17060:	4629      	mov	r1, r5
   17062:	68a0      	ldr	r0, [r4, #8]
   17064:	f009 fffd 	bl	21062 <strncpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1059
            mpStr[mCapacity] = '\0';
   17068:	68a2      	ldr	r2, [r4, #8]
   1706a:	6863      	ldr	r3, [r4, #4]
   1706c:	54d6      	strb	r6, [r2, r3]
   1706e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
            return;
        }
    }

    strcpy(mpStr, pString);
   17070:	4629      	mov	r1, r5
   17072:	68a0      	ldr	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1065
}
   17074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:1064
    strcpy(mpStr, pString);
   17078:	f009 bfaa 	b.w	20fd0 <strcpy>

0001707c <str::operator=(char const*)>:
_ZN3straSEPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/src/str.cpp:831
    copyFrom(pString);
   1707c:	f7ff bfe0 	b.w	17040 <str::copyFrom(char const*)>

00017080 <_sbrk>:
_sbrk():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   17080:	4b12      	ldr	r3, [pc, #72]	; (170cc <_sbrk+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   17082:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   17084:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:53
{
   17086:	4601      	mov	r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   17088:	b912      	cbnz	r2, 17090 <_sbrk+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   1708a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1708e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   17090:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   17092:	4a0f      	ldr	r2, [pc, #60]	; (170d0 <_sbrk+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   17094:	1844      	adds	r4, r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   17096:	4d0f      	ldr	r5, [pc, #60]	; (170d4 <_sbrk+0x54>)
   17098:	4422      	add	r2, r4
   1709a:	42aa      	cmp	r2, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   1709c:	bf97      	itett	ls
   1709e:	4a0e      	ldrls	r2, [pc, #56]	; (170d8 <_sbrk+0x58>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   170a0:	601c      	strhi	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   170a2:	1888      	addls	r0, r1, r2
   170a4:	6018      	strls	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   170a6:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   170a8:	bf98      	it	ls
   170aa:	4610      	movls	r0, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   170ac:	4a0b      	ldr	r2, [pc, #44]	; (170dc <_sbrk+0x5c>)
   170ae:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   170b0:	bf82      	ittt	hi
   170b2:	3201      	addhi	r2, #1
   170b4:	601a      	strhi	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   170b6:	2000      	movhi	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   170b8:	b139      	cbz	r1, 170ca <_sbrk+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   170ba:	4a09      	ldr	r2, [pc, #36]	; (170e0 <_sbrk+0x60>)
   170bc:	6813      	ldr	r3, [r2, #0]
   170be:	3301      	adds	r3, #1
   170c0:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   170c2:	4b08      	ldr	r3, [pc, #32]	; (170e4 <_sbrk+0x64>)
   170c4:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   170c6:	4b08      	ldr	r3, [pc, #32]	; (170e8 <_sbrk+0x68>)
   170c8:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   170ca:	bd30      	pop	{r4, r5, pc}
   170cc:	2007c558 	.word	0x2007c558
   170d0:	efff7fff 	.word	0xefff7fff
   170d4:	10073ffe 	.word	0x10073ffe
   170d8:	2007c988 	.word	0x2007c988
   170dc:	20083fff 	.word	0x20083fff
   170e0:	2007c550 	.word	0x2007c550
   170e4:	2007c554 	.word	0x2007c554
   170e8:	2007c55c 	.word	0x2007c55c

000170ec <operator new(unsigned int)>:
_Znwj():
   170ec:	f008 b98e 	b.w	1f40c <malloc>

000170f0 <operator new[](unsigned int)>:
_Znaj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:104

/** @{ Redirect C++ memory functions to C */
void *operator new(size_t size)     {   return malloc(size);    }
void *operator new[](size_t size)   {   return malloc(size);    }
   170f0:	f008 b98c 	b.w	1f40c <malloc>

000170f4 <operator delete(void*)>:
_ZdlPv():
   170f4:	f008 b992 	b.w	1f41c <free>

000170f8 <operator delete[](void*)>:
_ZdaPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:106
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
   170f8:	f008 b990 	b.w	1f41c <free>

000170fc <sys_get_mem_info>:
sys_get_mem_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:110
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   170fc:	b530      	push	{r4, r5, lr}
   170fe:	4604      	mov	r4, r0
   17100:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   17102:	4668      	mov	r0, sp
   17104:	f008 fc4a 	bl	1f99c <mallinfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   17108:	4b21      	ldr	r3, [pc, #132]	; (17190 <sys_get_mem_info+0x94>)
   1710a:	4d22      	ldr	r5, [pc, #136]	; (17194 <sys_get_mem_info+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   1710c:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   1710e:	9b08      	ldr	r3, [sp, #32]
   17110:	4a21      	ldr	r2, [pc, #132]	; (17198 <sys_get_mem_info+0x9c>)
   17112:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   17114:	9b07      	ldr	r3, [sp, #28]
   17116:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   17118:	b953      	cbnz	r3, 17130 <sys_get_mem_info+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   1711a:	6813      	ldr	r3, [r2, #0]
   1711c:	491f      	ldr	r1, [pc, #124]	; (1719c <sys_get_mem_info+0xa0>)
   1711e:	428b      	cmp	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   17120:	bf8a      	itet	hi
   17122:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   17126:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   1712a:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   1712e:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   17130:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   17132:	6861      	ldr	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   17134:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   17136:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   1713a:	bf82      	ittt	hi
   1713c:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   17140:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   17144:	6061      	strhi	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   17146:	6811      	ldr	r1, [r2, #0]
   17148:	4a14      	ldr	r2, [pc, #80]	; (1719c <sys_get_mem_info+0xa0>)
   1714a:	4291      	cmp	r1, r2
   1714c:	d813      	bhi.n	17176 <sys_get_mem_info+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   1714e:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   17152:	1a52      	subs	r2, r2, r1
   17154:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   17158:	441a      	add	r2, r3
   1715a:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   1715c:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   1715e:	4b10      	ldr	r3, [pc, #64]	; (171a0 <sys_get_mem_info+0xa4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   17160:	61e1      	str	r1, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   17162:	681b      	ldr	r3, [r3, #0]
   17164:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   17166:	4b0f      	ldr	r3, [pc, #60]	; (171a4 <sys_get_mem_info+0xa8>)
   17168:	681b      	ldr	r3, [r3, #0]
   1716a:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   1716c:	4b0e      	ldr	r3, [pc, #56]	; (171a8 <sys_get_mem_info+0xac>)
   1716e:	681b      	ldr	r3, [r3, #0]
   17170:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:168
}
   17172:	b00b      	add	sp, #44	; 0x2c
   17174:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   17176:	4b0d      	ldr	r3, [pc, #52]	; (171ac <sys_get_mem_info+0xb0>)
   17178:	4299      	cmp	r1, r3
   1717a:	d8ef      	bhi.n	1715c <sys_get_mem_info+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   1717c:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   17180:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   17184:	1b5b      	subs	r3, r3, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   17186:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   17188:	bfc8      	it	gt
   1718a:	60e3      	strgt	r3, [r4, #12]
   1718c:	e7e6      	b.n	1715c <sys_get_mem_info+0x60>
   1718e:	bf00      	nop
   17190:	00000988 	.word	0x00000988
   17194:	2007c988 	.word	0x2007c988
   17198:	2007c558 	.word	0x2007c558
   1719c:	10008000 	.word	0x10008000
   171a0:	2007c554 	.word	0x2007c554
   171a4:	2007c55c 	.word	0x2007c55c
   171a8:	2007c550 	.word	0x2007c550
   171ac:	20083fff 	.word	0x20083fff

000171b0 <__aeabi_atexit>:
__aeabi_atexit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/memory.cpp:175
extern "C" int __aeabi_atexit(void *object,
		void (*destructor)(void *),
		void *dso_handle)
{
	return 0;
}
   171b0:	2000      	movs	r0, #0
   171b2:	4770      	bx	lr

000171b4 <__malloc_lock>:
__malloc_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   171b4:	f001 bbf8 	b.w	189a8 <vPortEnterCritical>

000171b8 <__malloc_unlock>:
__malloc_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   171b8:	f001 bc06 	b.w	189c8 <vPortExitCritical>

000171bc <_gettimeofday>:
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   171bc:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   171be:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:69
{
   171c0:	b08d      	sub	sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   171c2:	b3a8      	cbz	r0, 17230 <_gettimeofday+0x74>
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   171c4:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   171c6:	4668      	mov	r0, sp
   171c8:	f000 fe8c 	bl	17ee4 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   171cc:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   171d0:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   171d2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   171d6:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   171d8:	f89d 3001 	ldrb.w	r3, [sp, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   171dc:	950b      	str	r5, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   171de:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   171e2:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   171e4:	f89d 3002 	ldrb.w	r3, [sp, #2]
   171e8:	f003 031f 	and.w	r3, r3, #31
   171ec:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   171ee:	f89d 3004 	ldrb.w	r3, [sp, #4]
   171f2:	f003 031f 	and.w	r3, r3, #31
   171f6:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   171f8:	f89d 3005 	ldrb.w	r3, [sp, #5]
   171fc:	f003 030f 	and.w	r3, r3, #15
   17200:	3b01      	subs	r3, #1
   17202:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   17204:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   17208:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1720c:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   17210:	9308      	str	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   17212:	f89d 3003 	ldrb.w	r3, [sp, #3]
   17216:	f003 0307 	and.w	r3, r3, #7
   1721a:	9309      	str	r3, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   1721c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   17220:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17224:	3b01      	subs	r3, #1
   17226:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   17228:	f008 fa3c 	bl	1f6a4 <mktime>
_gettimeofday():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   1722c:	e884 0021 	stmia.w	r4, {r0, r5}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   17230:	2000      	movs	r0, #0
   17232:	b00d      	add	sp, #52	; 0x34
   17234:	bd30      	pop	{r4, r5, pc}

00017236 <remap_fatfs_errors>:
remap_fatfs_errors():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   17236:	3803      	subs	r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:249
{
   17238:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   1723a:	280a      	cmp	r0, #10
   1723c:	d822      	bhi.n	17284 <remap_fatfs_errors+0x4e>
   1723e:	e8df f000 	tbb	[pc, r0]
   17242:	0621      	.short	0x0621
   17244:	15190d06 	.word	0x15190d06
   17248:	2111191d 	.word	0x2111191d
   1724c:	21          	.byte	0x21
   1724d:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   1724e:	f007 fb6b 	bl	1e928 <__errno>
   17252:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   17254:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   17256:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1725a:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   1725c:	f007 fb64 	bl	1e928 <__errno>
   17260:	2316      	movs	r3, #22
   17262:	e7f7      	b.n	17254 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   17264:	f007 fb60 	bl	1e928 <__errno>
   17268:	2313      	movs	r3, #19
   1726a:	e7f3      	b.n	17254 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   1726c:	f007 fb5c 	bl	1e928 <__errno>
   17270:	2311      	movs	r3, #17
   17272:	e7ef      	b.n	17254 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   17274:	f007 fb58 	bl	1e928 <__errno>
   17278:	230d      	movs	r3, #13
   1727a:	e7eb      	b.n	17254 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   1727c:	f007 fb54 	bl	1e928 <__errno>
   17280:	2309      	movs	r3, #9
   17282:	e7e7      	b.n	17254 <remap_fatfs_errors+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   17284:	f007 fb50 	bl	1e928 <__errno>
   17288:	2305      	movs	r3, #5
   1728a:	e7e3      	b.n	17254 <remap_fatfs_errors+0x1e>

0001728c <findslot>:
findslot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   1728c:	1c43      	adds	r3, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:214
{
   1728e:	b570      	push	{r4, r5, r6, lr}
   17290:	490e      	ldr	r1, [pc, #56]	; (172cc <findslot+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   17292:	d006      	beq.n	172a2 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   17294:	4b0e      	ldr	r3, [pc, #56]	; (172d0 <findslot+0x44>)
   17296:	681b      	ldr	r3, [r3, #0]
   17298:	4298      	cmp	r0, r3
   1729a:	d102      	bne.n	172a2 <findslot+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   1729c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:228
}
   1729e:	4610      	mov	r0, r2
   172a0:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   172a2:	2300      	movs	r3, #0
   172a4:	461c      	mov	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   172a6:	4d0b      	ldr	r5, [pc, #44]	; (172d4 <findslot+0x48>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   172a8:	600b      	str	r3, [r1, #0]
   172aa:	2b06      	cmp	r3, #6
   172ac:	461a      	mov	r2, r3
   172ae:	d006      	beq.n	172be <findslot+0x32>
   172b0:	1c53      	adds	r3, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   172b2:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   172b6:	f856 6c10 	ldr.w	r6, [r6, #-16]
   172ba:	42b0      	cmp	r0, r6
   172bc:	d104      	bne.n	172c8 <findslot+0x3c>
   172be:	b104      	cbz	r4, 172c2 <findslot+0x36>
   172c0:	600a      	str	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   172c2:	4b03      	ldr	r3, [pc, #12]	; (172d0 <findslot+0x44>)
   172c4:	6018      	str	r0, [r3, #0]
   172c6:	e7ea      	b.n	1729e <findslot+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   172c8:	2401      	movs	r4, #1
   172ca:	e7ee      	b.n	172aa <findslot+0x1e>
   172cc:	2007c5d0 	.word	0x2007c5d0
   172d0:	2007c098 	.word	0x2007c098
   172d4:	2007c570 	.word	0x2007c570

000172d8 <remap_handle>:
remap_handle():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   172d8:	4b08      	ldr	r3, [pc, #32]	; (172fc <remap_handle+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:234
{
   172da:	b510      	push	{r4, lr}
   172dc:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   172de:	6818      	ldr	r0, [r3, #0]
   172e0:	b118      	cbz	r0, 172ea <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   172e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
   172e4:	b90b      	cbnz	r3, 172ea <remap_handle+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   172e6:	f007 fd23 	bl	1ed30 <__sinit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   172ea:	b124      	cbz	r4, 172f6 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   172ec:	2c01      	cmp	r4, #1
   172ee:	d002      	beq.n	172f6 <remap_handle+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   172f0:	2c02      	cmp	r4, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   172f2:	bf18      	it	ne
   172f4:	3c20      	subne	r4, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:245
}
   172f6:	4620      	mov	r0, r4
   172f8:	bd10      	pop	{r4, pc}
   172fa:	bf00      	nop
   172fc:	2007c0e0 	.word	0x2007c0e0

00017300 <sys_set_outchar_func>:
sys_set_outchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   17300:	4b01      	ldr	r3, [pc, #4]	; (17308 <sys_set_outchar_func+0x8>)
   17302:	6018      	str	r0, [r3, #0]
   17304:	4770      	bx	lr
   17306:	bf00      	nop
   17308:	2007c568 	.word	0x2007c568

0001730c <sys_set_inchar_func>:
sys_set_inchar_func():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   1730c:	4b01      	ldr	r3, [pc, #4]	; (17314 <sys_set_inchar_func+0x8>)
   1730e:	6018      	str	r0, [r3, #0]
   17310:	4770      	bx	lr
   17312:	bf00      	nop
   17314:	2007c564 	.word	0x2007c564

00017318 <_kill>:
_kill():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:72
{
   17318:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   1731a:	4802      	ldr	r0, [pc, #8]	; (17324 <_kill+0xc>)
   1731c:	f009 fafa 	bl	20914 <puts>
   17320:	e7fe      	b.n	17320 <_kill+0x8>
   17322:	bf00      	nop
   17324:	000269af 	.word	0x000269af

00017328 <_exit>:
_exit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:79
{
   17328:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   1732a:	4802      	ldr	r0, [pc, #8]	; (17334 <_exit+0xc>)
   1732c:	f009 faf2 	bl	20914 <puts>
   17330:	e7fe      	b.n	17330 <_exit+0x8>
   17332:	bf00      	nop
   17334:	00026995 	.word	0x00026995

00017338 <_getpid>:
_getpid():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   17338:	2000      	movs	r0, #0
   1733a:	4770      	bx	lr

0001733c <_init>:
_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   1733c:	2001      	movs	r0, #1
   1733e:	4770      	bx	lr

00017340 <syscalls_init>:
syscalls_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   17340:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   17342:	4b0a      	ldr	r3, [pc, #40]	; (1736c <syscalls_init+0x2c>)
   17344:	781d      	ldrb	r5, [r3, #0]
   17346:	b985      	cbnz	r5, 1736a <syscalls_init+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   17348:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   1734a:	4c09      	ldr	r4, [pc, #36]	; (17370 <syscalls_init+0x30>)
   1734c:	2260      	movs	r2, #96	; 0x60
   1734e:	4629      	mov	r1, r5
   17350:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   17352:	701e      	strb	r6, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   17354:	f008 f8be 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   17358:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1735c:	6323      	str	r3, [r4, #48]	; 0x30
   1735e:	6423      	str	r3, [r4, #64]	; 0x40
   17360:	6523      	str	r3, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   17362:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   17364:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   17366:	6126      	str	r6, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   17368:	6223      	str	r3, [r4, #32]
   1736a:	bd70      	pop	{r4, r5, r6, pc}
   1736c:	2007c56c 	.word	0x2007c56c
   17370:	2007c570 	.word	0x2007c570

00017374 <_read>:
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   17374:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   17378:	4689      	mov	r9, r1
   1737a:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   1737c:	f7ff ffac 	bl	172d8 <remap_handle>
   17380:	4605      	mov	r5, r0
   17382:	f7ff ff83 	bl	1728c <findslot>
   17386:	2806      	cmp	r0, #6
   17388:	d106      	bne.n	17398 <_read+0x24>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1738a:	f007 facd 	bl	1e928 <__errno>
   1738e:	2309      	movs	r3, #9
   17390:	6003      	str	r3, [r0, #0]
_read():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   17392:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17396:	e016      	b.n	173c6 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   17398:	4e1b      	ldr	r6, [pc, #108]	; (17408 <_read+0x94>)
   1739a:	0107      	lsls	r7, r0, #4
   1739c:	19f3      	adds	r3, r6, r7
   1739e:	689b      	ldr	r3, [r3, #8]
   173a0:	07db      	lsls	r3, r3, #31
   173a2:	d4f2      	bmi.n	1738a <_read+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   173a4:	2d00      	cmp	r5, #0
   173a6:	d011      	beq.n	173cc <_read+0x58>
   173a8:	db01      	blt.n	173ae <_read+0x3a>
   173aa:	2d05      	cmp	r5, #5
   173ac:	ddf1      	ble.n	17392 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   173ae:	19f3      	adds	r3, r6, r7
   173b0:	68d8      	ldr	r0, [r3, #12]
   173b2:	2800      	cmp	r0, #0
   173b4:	d0ed      	beq.n	17392 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   173b6:	ab01      	add	r3, sp, #4
   173b8:	4622      	mov	r2, r4
   173ba:	4649      	mov	r1, r9
   173bc:	f7fb fcbf 	bl	12d3e <f_read>
   173c0:	b1f8      	cbz	r0, 17402 <_read+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   173c2:	f7ff ff38 	bl	17236 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   173c6:	b003      	add	sp, #12
   173c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   173cc:	4b0f      	ldr	r3, [pc, #60]	; (1740c <_read+0x98>)
   173ce:	681a      	ldr	r2, [r3, #0]
   173d0:	4698      	mov	r8, r3
   173d2:	b132      	cbz	r2, 173e2 <_read+0x6e>
   173d4:	464d      	mov	r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   173d6:	eba5 0309 	sub.w	r3, r5, r9
   173da:	429c      	cmp	r4, r3
   173dc:	dc0a      	bgt.n	173f4 <_read+0x80>
   173de:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   173e2:	1b60      	subs	r0, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   173e4:	2800      	cmp	r0, #0
   173e6:	dbd4      	blt.n	17392 <_read+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   173e8:	443e      	add	r6, r7
   173ea:	6873      	ldr	r3, [r6, #4]
   173ec:	1a20      	subs	r0, r4, r0
   173ee:	4403      	add	r3, r0
   173f0:	6073      	str	r3, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   173f2:	e7e8      	b.n	173c6 <_read+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   173f4:	f8d8 3000 	ldr.w	r3, [r8]
   173f8:	2000      	movs	r0, #0
   173fa:	4798      	blx	r3
   173fc:	f805 0b01 	strb.w	r0, [r5], #1
   17400:	e7e9      	b.n	173d6 <_read+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   17402:	9801      	ldr	r0, [sp, #4]
   17404:	1a20      	subs	r0, r4, r0
   17406:	e7ed      	b.n	173e4 <_read+0x70>
   17408:	2007c570 	.word	0x2007c570
   1740c:	2007c564 	.word	0x2007c564

00017410 <_lseek>:
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   17410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17412:	460e      	mov	r6, r1
   17414:	4617      	mov	r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   17416:	f7ff ff5f 	bl	172d8 <remap_handle>
   1741a:	f7ff ff37 	bl	1728c <findslot>
   1741e:	2806      	cmp	r0, #6
   17420:	d004      	beq.n	1742c <_lseek+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   17422:	4c12      	ldr	r4, [pc, #72]	; (1746c <_lseek+0x5c>)
   17424:	0105      	lsls	r5, r0, #4
   17426:	1962      	adds	r2, r4, r5
   17428:	68d0      	ldr	r0, [r2, #12]
   1742a:	b930      	cbnz	r0, 1743a <_lseek+0x2a>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1742c:	f007 fa7c 	bl	1e928 <__errno>
   17430:	2309      	movs	r3, #9
   17432:	6003      	str	r3, [r0, #0]
_lseek():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   17434:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   1743a:	b93f      	cbnz	r7, 1744c <_lseek+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   1743c:	4631      	mov	r1, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   1743e:	f7fb fe63 	bl	13108 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   17442:	b170      	cbz	r0, 17462 <_lseek+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   17444:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   17448:	f7ff bef5 	b.w	17236 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   1744c:	2f01      	cmp	r7, #1
   1744e:	d102      	bne.n	17456 <_lseek+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   17450:	6881      	ldr	r1, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   17452:	4431      	add	r1, r6
   17454:	e7f3      	b.n	1743e <_lseek+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   17456:	2f02      	cmp	r7, #2
   17458:	d101      	bne.n	1745e <_lseek+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   1745a:	68c1      	ldr	r1, [r0, #12]
   1745c:	e7f9      	b.n	17452 <_lseek+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   1745e:	2009      	movs	r0, #9
   17460:	e7f0      	b.n	17444 <_lseek+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   17462:	1963      	adds	r3, r4, r5
   17464:	68da      	ldr	r2, [r3, #12]
   17466:	6890      	ldr	r0, [r2, #8]
   17468:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:476
}
   1746a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1746c:	2007c570 	.word	0x2007c570

00017470 <_write>:
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   17470:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   17474:	460f      	mov	r7, r1
   17476:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   17478:	f7ff ff2e 	bl	172d8 <remap_handle>
   1747c:	4606      	mov	r6, r0
   1747e:	f7ff ff05 	bl	1728c <findslot>
   17482:	2806      	cmp	r0, #6
   17484:	4605      	mov	r5, r0
   17486:	d104      	bne.n	17492 <_write+0x22>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17488:	f007 fa4e 	bl	1e928 <__errno>
   1748c:	2309      	movs	r3, #9
   1748e:	6003      	str	r3, [r0, #0]
   17490:	e006      	b.n	174a0 <_write+0x30>
   17492:	2e05      	cmp	r6, #5
   17494:	d826      	bhi.n	174e4 <_write+0x74>
   17496:	2001      	movs	r0, #1
   17498:	40b0      	lsls	r0, r6
   1749a:	f010 0f39 	tst.w	r0, #57	; 0x39
   1749e:	d002      	beq.n	174a6 <_write+0x36>
_write():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   174a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   174a4:	e02c      	b.n	17500 <_write+0x90>
   174a6:	f010 0f06 	tst.w	r0, #6
   174aa:	d01b      	beq.n	174e4 <_write+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   174ac:	4e17      	ldr	r6, [pc, #92]	; (1750c <_write+0x9c>)
   174ae:	6830      	ldr	r0, [r6, #0]
   174b0:	b130      	cbz	r0, 174c0 <_write+0x50>
   174b2:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   174b4:	eba8 0307 	sub.w	r3, r8, r7
   174b8:	429c      	cmp	r4, r3
   174ba:	dc0e      	bgt.n	174da <_write+0x6a>
   174bc:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   174c0:	1a20      	subs	r0, r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   174c2:	1c43      	adds	r3, r0, #1
   174c4:	d0ec      	beq.n	174a0 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   174c6:	42a0      	cmp	r0, r4
   174c8:	d0ea      	beq.n	174a0 <_write+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   174ca:	4b11      	ldr	r3, [pc, #68]	; (17510 <_write+0xa0>)
   174cc:	1a20      	subs	r0, r4, r0
   174ce:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   174d2:	685a      	ldr	r2, [r3, #4]
   174d4:	4402      	add	r2, r0
   174d6:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   174d8:	e012      	b.n	17500 <_write+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   174da:	6833      	ldr	r3, [r6, #0]
   174dc:	f818 0b01 	ldrb.w	r0, [r8], #1
   174e0:	4798      	blx	r3
   174e2:	e7e7      	b.n	174b4 <_write+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   174e4:	4b0a      	ldr	r3, [pc, #40]	; (17510 <_write+0xa0>)
   174e6:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   174ea:	68d8      	ldr	r0, [r3, #12]
   174ec:	2800      	cmp	r0, #0
   174ee:	d0cb      	beq.n	17488 <_write+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   174f0:	ab01      	add	r3, sp, #4
   174f2:	4622      	mov	r2, r4
   174f4:	4639      	mov	r1, r7
   174f6:	f7fb fcda 	bl	12eae <f_write>
   174fa:	b120      	cbz	r0, 17506 <_write+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   174fc:	f7ff fe9b 	bl	17236 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:551
}
   17500:	b002      	add	sp, #8
   17502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   17506:	9801      	ldr	r0, [sp, #4]
   17508:	e7da      	b.n	174c0 <_write+0x50>
   1750a:	bf00      	nop
   1750c:	2007c568 	.word	0x2007c568
   17510:	2007c570 	.word	0x2007c570

00017514 <_open>:
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554

int _open(const char *path, int flags, ...)
{
   17514:	b40e      	push	{r1, r2, r3}
   17516:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
   1751a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    int fh = 0;
    int slot;

    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   1751c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:554
{
   17520:	9d07      	ldr	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:558
    if ((slot = findslot(-1)) == MAX_OPEN_FILES)
   17522:	f7ff feb3 	bl	1728c <findslot>
   17526:	2806      	cmp	r0, #6
   17528:	4606      	mov	r6, r0
   1752a:	d109      	bne.n	17540 <_open+0x2c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1752c:	f007 f9fc 	bl	1e928 <__errno>
   17530:	2317      	movs	r3, #23
   17532:	6003      	str	r3, [r0, #0]
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    {
        free(openfiles[slot].fatfsFCB);
        openfiles[slot].fatfsFCB = NULL;
    }

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   17534:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:646
}
   17538:	e8bd 41f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, lr}
   1753c:	b003      	add	sp, #12
   1753e:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:561
    if (flags & O_APPEND)
   17540:	0728      	lsls	r0, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   17542:	4943      	ldr	r1, [pc, #268]	; (17650 <_open+0x13c>)
   17544:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:562
        flags &= ~O_TRUNC;
   17546:	bf48      	it	mi
   17548:	f425 6580 	bicmi.w	r5, r5, #1024	; 0x400
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:564
    if (!__builtin_strcmp(path, "/dev/uart0"))
   1754c:	f009 fd36 	bl	20fbc <strcmp>
   17550:	2800      	cmp	r0, #0
   17552:	d076      	beq.n	17642 <_open+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:566
    else if (!__builtin_strcmp(path, "/dev/uart1"))
   17554:	493f      	ldr	r1, [pc, #252]	; (17654 <_open+0x140>)
   17556:	4638      	mov	r0, r7
   17558:	f009 fd30 	bl	20fbc <strcmp>
   1755c:	2800      	cmp	r0, #0
   1755e:	d072      	beq.n	17646 <_open+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:568
    else if (!__builtin_strcmp(path, "/dev/usb"))
   17560:	493d      	ldr	r1, [pc, #244]	; (17658 <_open+0x144>)
   17562:	4638      	mov	r0, r7
   17564:	f009 fd2a 	bl	20fbc <strcmp>
   17568:	2800      	cmp	r0, #0
   1756a:	d06e      	beq.n	1764a <_open+0x136>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:586
        if (((flags & (O_CREAT | O_TRUNC)) == (O_CREAT | O_TRUNC))
   1756c:	f405 63c0 	and.w	r3, r5, #1536	; 0x600
   17570:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
   17574:	d101      	bne.n	1757a <_open+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:587
                && (flags & (O_RDWR | O_WRONLY)))
   17576:	07a9      	lsls	r1, r5, #30
   17578:	d10d      	bne.n	17596 <_open+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:589
        else if ((flags & (O_CREAT | O_EXCL)) == (O_CREAT | O_EXCL))
   1757a:	f405 6320 	and.w	r3, r5, #2560	; 0xa00
   1757e:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
   17582:	d039      	beq.n	175f8 <_open+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:591
        else if ((flags & O_CREAT) == O_CREAT)
   17584:	f415 7200 	ands.w	r2, r5, #512	; 0x200
   17588:	d138      	bne.n	175fc <_open+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:593
        else if ((flags == O_RDONLY) || (flags == O_WRONLY)
   1758a:	2d02      	cmp	r5, #2
   1758c:	d904      	bls.n	17598 <_open+0x84>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1758e:	f007 f9cb 	bl	1e928 <__errno>
   17592:	2316      	movs	r3, #22
   17594:	e7cd      	b.n	17532 <_open+0x1e>
_open():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:588
            fatfsFlags = FA_CREATE_ALWAYS;
   17596:	2208      	movs	r2, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:599
        if ((flags & O_ACCMODE) == O_RDONLY)
   17598:	f015 0303 	ands.w	r3, r5, #3
   1759c:	d130      	bne.n	17600 <_open+0xec>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:600
            fatfsFlags |= FA_READ;
   1759e:	f042 0401 	orr.w	r4, r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:609
        errno = EIO;
   175a2:	f007 f9c1 	bl	1e928 <__errno>
   175a6:	2305      	movs	r3, #5
   175a8:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:611
        if (!openfiles[slot].fatfsFCB)
   175aa:	4b2c      	ldr	r3, [pc, #176]	; (1765c <_open+0x148>)
   175ac:	eb03 1806 	add.w	r8, r3, r6, lsl #4
   175b0:	f8d8 000c 	ldr.w	r0, [r8, #12]
   175b4:	b9c0      	cbnz	r0, 175e8 <_open+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:612
            if ((openfiles[slot].fatfsFCB = __builtin_calloc(1, sizeof(FIL))))
   175b6:	f44f 7109 	mov.w	r1, #548	; 0x224
   175ba:	2001      	movs	r0, #1
   175bc:	f007 f9a4 	bl	1e908 <calloc>
   175c0:	f8c8 000c 	str.w	r0, [r8, #12]
   175c4:	2800      	cmp	r0, #0
   175c6:	d0b5      	beq.n	17534 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615
                                == FR_OK) ? (slot + MONITOR_FATFS) : -1) == -1)
   175c8:	b2e2      	uxtb	r2, r4
   175ca:	4639      	mov	r1, r7
   175cc:	f7fb fb20 	bl	12c10 <f_open>
   175d0:	b910      	cbnz	r0, 175d8 <_open+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:615 (discriminator 1)
   175d2:	1db4      	adds	r4, r6, #6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:613 (discriminator 1)
                if ((fh =
   175d4:	1c62      	adds	r2, r4, #1
   175d6:	d11d      	bne.n	17614 <_open+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:616
                    remap_fatfs_errors(f);
   175d8:	f7ff fe2d 	bl	17236 <remap_fatfs_errors>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:639
    if ((fh < 0) && openfiles[slot].fatfsFCB)
   175dc:	4b1f      	ldr	r3, [pc, #124]	; (1765c <_open+0x148>)
   175de:	eb03 1306 	add.w	r3, r3, r6, lsl #4
   175e2:	68d8      	ldr	r0, [r3, #12]
   175e4:	2800      	cmp	r0, #0
   175e6:	d0a5      	beq.n	17534 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:641
        free(openfiles[slot].fatfsFCB);
   175e8:	f007 ff18 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:642
        openfiles[slot].fatfsFCB = NULL;
   175ec:	4b1b      	ldr	r3, [pc, #108]	; (1765c <_open+0x148>)
   175ee:	eb03 1606 	add.w	r6, r3, r6, lsl #4
   175f2:	2300      	movs	r3, #0
   175f4:	60f3      	str	r3, [r6, #12]
   175f6:	e79d      	b.n	17534 <_open+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:590
            fatfsFlags = FA_OPEN_EXISTING;
   175f8:	2200      	movs	r2, #0
   175fa:	e7cd      	b.n	17598 <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:592
            fatfsFlags = FA_OPEN_ALWAYS;
   175fc:	2210      	movs	r2, #16
   175fe:	e7cb      	b.n	17598 <_open+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:601
        else if ((flags & O_ACCMODE) == O_WRONLY)
   17600:	2b01      	cmp	r3, #1
   17602:	d102      	bne.n	1760a <_open+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:602
            fatfsFlags |= FA_WRITE;
   17604:	f042 0402 	orr.w	r4, r2, #2
   17608:	e7cb      	b.n	175a2 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:603
        else if ((flags & O_ACCMODE) == O_RDWR)
   1760a:	2b02      	cmp	r3, #2
   1760c:	d1bf      	bne.n	1758e <_open+0x7a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:604
            fatfsFlags |= (FA_READ | FA_WRITE);
   1760e:	f042 0403 	orr.w	r4, r2, #3
   17612:	e7c6      	b.n	175a2 <_open+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:623
    if (fh >= 0)
   17614:	2c00      	cmp	r4, #0
   17616:	dbe1      	blt.n	175dc <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:625
        openfiles[slot].handle = fh;
   17618:	4a10      	ldr	r2, [pc, #64]	; (1765c <_open+0x148>)
   1761a:	0133      	lsls	r3, r6, #4
   1761c:	18d7      	adds	r7, r2, r3
   1761e:	50d4      	str	r4, [r2, r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:626
        openfiles[slot].pos = 0;
   17620:	2300      	movs	r3, #0
   17622:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   17624:	072b      	lsls	r3, r5, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:627
        openfiles[slot].flags = flags;
   17626:	60bd      	str	r5, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:629
        if (flags & O_APPEND)
   17628:	d508      	bpl.n	1763c <_open+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:631
            if (f_lseek(openfiles[slot].fatfsFCB,
   1762a:	68f8      	ldr	r0, [r7, #12]
   1762c:	68c1      	ldr	r1, [r0, #12]
   1762e:	f7fb fd6b 	bl	13108 <f_lseek>
   17632:	2800      	cmp	r0, #0
   17634:	d1d2      	bne.n	175dc <_open+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:635
                openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   17636:	68fb      	ldr	r3, [r7, #12]
   17638:	689b      	ldr	r3, [r3, #8]
   1763a:	607b      	str	r3, [r7, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:645
    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
   1763c:	f104 0020 	add.w	r0, r4, #32
   17640:	e77a      	b.n	17538 <_open+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:565
        fh = MONITOR_UART0;
   17642:	2403      	movs	r4, #3
   17644:	e7e8      	b.n	17618 <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:567
        fh = MONITOR_UART1;
   17646:	2404      	movs	r4, #4
   17648:	e7e6      	b.n	17618 <_open+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:569
        fh = MONITOR_USB;
   1764a:	2405      	movs	r4, #5
   1764c:	e7e4      	b.n	17618 <_open+0x104>
   1764e:	bf00      	nop
   17650:	000269c9 	.word	0x000269c9
   17654:	000269d4 	.word	0x000269d4
   17658:	000269df 	.word	0x000269df
   1765c:	2007c570 	.word	0x2007c570

00017660 <_close>:
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:649

int _close(int fd)
{
   17660:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   17662:	f7ff fe39 	bl	172d8 <remap_handle>
   17666:	f7ff fe11 	bl	1728c <findslot>
   1766a:	2806      	cmp	r0, #6
   1766c:	d106      	bne.n	1767c <_close+0x1c>
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   1766e:	f007 f95b 	bl	1e928 <__errno>
   17672:	2309      	movs	r3, #9
   17674:	6003      	str	r3, [r0, #0]
_close():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   17676:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1767a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   1767c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17680:	4b0b      	ldr	r3, [pc, #44]	; (176b0 <_close+0x50>)
   17682:	0100      	lsls	r0, r0, #4
   17684:	181c      	adds	r4, r3, r0
   17686:	501a      	str	r2, [r3, r0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   17688:	68e0      	ldr	r0, [r4, #12]
   1768a:	b908      	cbnz	r0, 17690 <_close+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   1768c:	2000      	movs	r0, #0
   1768e:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   17690:	f7fb fd28 	bl	130e4 <f_close>
   17694:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   17696:	68e0      	ldr	r0, [r4, #12]
   17698:	f007 fec0 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   1769c:	2300      	movs	r3, #0
   1769e:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   176a0:	2d00      	cmp	r5, #0
   176a2:	d0f3      	beq.n	1768c <_close+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   176a4:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:672
}
   176a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   176aa:	f7ff bdc4 	b.w	17236 <remap_fatfs_errors>
   176ae:	bf00      	nop
   176b0:	2007c570 	.word	0x2007c570

000176b4 <_fstat>:
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   176b4:	b508      	push	{r3, lr}
set_errno():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   176b6:	f007 f937 	bl	1e928 <__errno>
   176ba:	2358      	movs	r3, #88	; 0x58
   176bc:	6003      	str	r3, [r0, #0]
_fstat():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   176be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   176c2:	bd08      	pop	{r3, pc}

000176c4 <_isatty>:
_isatty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   176c4:	4b07      	ldr	r3, [pc, #28]	; (176e4 <_isatty+0x20>)
   176c6:	681b      	ldr	r3, [r3, #0]
   176c8:	689a      	ldr	r2, [r3, #8]
   176ca:	4282      	cmp	r2, r0
   176cc:	d007      	beq.n	176de <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   176ce:	685a      	ldr	r2, [r3, #4]
   176d0:	4282      	cmp	r2, r0
   176d2:	d004      	beq.n	176de <_isatty+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   176d4:	68db      	ldr	r3, [r3, #12]
   176d6:	1a1b      	subs	r3, r3, r0
   176d8:	4258      	negs	r0, r3
   176da:	4158      	adcs	r0, r3
   176dc:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   176de:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   176e0:	4770      	bx	lr
   176e2:	bf00      	nop
   176e4:	2007c0e0 	.word	0x2007c0e0

000176e8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:73
    I2C_SET_WRITE_MODE(deviceAddress);
    return transfer(deviceAddress, firstReg, pData, bytesToWrite);
}

bool I2C_Base::transfer(uint8_t deviceAddress, uint8_t firstReg, uint8_t* pData, uint32_t transferSize)
{
   176e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
    bool status = false;
    if (mDisableOperation || !pData) {
   176ec:	7944      	ldrb	r4, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:73
{
   176ee:	4605      	mov	r5, r0
   176f0:	4689      	mov	r9, r1
   176f2:	4690      	mov	r8, r2
   176f4:	461e      	mov	r6, r3
   176f6:	9f08      	ldr	r7, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
    if (mDisableOperation || !pData) {
   176f8:	b11c      	cbz	r4, 17702 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:76
        return status;
   176fa:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:109

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   176fc:	4620      	mov	r0, r4
   176fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:75 (discriminator 1)
    if (mDisableOperation || !pData) {
   17702:	2b00      	cmp	r3, #0
   17704:	d0f9      	beq.n	176fa <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   17706:	f002 fa6f 	bl	19be8 <xTaskGetSchedulerState>
   1770a:	2802      	cmp	r0, #2
   1770c:	d02c      	beq.n	17768 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x80>
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.firstReg  = regStart;
    mTransaction.trxSize   = len;
    mTransaction.pMasterData   = pBytes;

    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   1770e:	2220      	movs	r2, #32
   17710:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.trxSize   = len;
   17712:	61af      	str	r7, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.pMasterData   = pBytes;
   17714:	622e      	str	r6, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:214
    mTransaction.error     = 0;
   17716:	77ac      	strb	r4, [r5, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:215
    mTransaction.slaveAddr = devAddr;
   17718:	f885 901c 	strb.w	r9, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:216
    mTransaction.firstReg  = regStart;
   1771c:	f885 801d 	strb.w	r8, [r5, #29]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   17720:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17722:	f7f8 febb 	bl	1049c <sys_get_uptime_us>
   17726:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1772a:	2300      	movs	r3, #0
   1772c:	f006 ff58 	bl	1e5e0 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:85
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   17730:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   17734:	f141 0700 	adc.w	r7, r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
        while (!xSemaphoreTake(mTransferCompleteSignal, 0)) {
   17738:	2300      	movs	r3, #0
   1773a:	68e8      	ldr	r0, [r5, #12]
   1773c:	461a      	mov	r2, r3
   1773e:	4619      	mov	r1, r3
   17740:	f001 fc5e 	bl	19000 <xQueueGenericReceive>
   17744:	b120      	cbz	r0, 17750 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
        status = (0 == mTransaction.error);
   17746:	7fac      	ldrb	r4, [r5, #30]
   17748:	fab4 f484 	clz	r4, r4
   1774c:	0964      	lsrs	r4, r4, #5
   1774e:	e7d5      	b.n	176fc <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x14>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17750:	f7f8 fea4 	bl	1049c <sys_get_uptime_us>
   17754:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17758:	2300      	movs	r3, #0
   1775a:	f006 ff41 	bl	1e5e0 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
            if (sys_get_uptime_ms() > timeout) {
   1775e:	428f      	cmp	r7, r1
   17760:	bf08      	it	eq
   17762:	4286      	cmpeq	r6, r0
   17764:	d2e8      	bcs.n	17738 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x50>
   17766:	e7ee      	b.n	17746 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   17768:	4623      	mov	r3, r4
   1776a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1776e:	4621      	mov	r1, r4
   17770:	68a8      	ldr	r0, [r5, #8]
   17772:	f001 fc45 	bl	19000 <xQueueGenericReceive>
   17776:	2800      	cmp	r0, #0
   17778:	d0bf      	beq.n	176fa <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:97
        xSemaphoreTake(mTransferCompleteSignal, 0);
   1777a:	4623      	mov	r3, r4
   1777c:	4622      	mov	r2, r4
   1777e:	4621      	mov	r1, r4
   17780:	68e8      	ldr	r0, [r5, #12]
   17782:	f001 fc3d 	bl	19000 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   17786:	2220      	movs	r2, #32
   17788:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:214
    mTransaction.error     = 0;
   1778a:	77ac      	strb	r4, [r5, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:215
    mTransaction.slaveAddr = devAddr;
   1778c:	f885 901c 	strb.w	r9, [r5, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:216
    mTransaction.firstReg  = regStart;
   17790:	f885 801d 	strb.w	r8, [r5, #29]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.trxSize   = len;
   17794:	61af      	str	r7, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.pMasterData   = pBytes;
   17796:	622e      	str	r6, [r5, #32]
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:101
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS))) {
   17798:	4621      	mov	r1, r4
_ZN8I2C_Base18i2cKickOffTransferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mpI2CRegs->I2CONSET = 0x20;
   1779a:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base8transferEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:101
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS))) {
   1779c:	68e8      	ldr	r0, [r5, #12]
   1779e:	4623      	mov	r3, r4
   177a0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   177a4:	f001 fc2c 	bl	19000 <xQueueGenericReceive>
   177a8:	b118      	cbz	r0, 177b2 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:102
            status = (0 == mTransaction.error);
   177aa:	7fac      	ldrb	r4, [r5, #30]
   177ac:	fab4 f484 	clz	r4, r4
   177b0:	0964      	lsrs	r4, r4, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:105
        xSemaphoreGive(mI2CMutex);
   177b2:	2300      	movs	r3, #0
   177b4:	68a8      	ldr	r0, [r5, #8]
   177b6:	461a      	mov	r2, r3
   177b8:	4619      	mov	r1, r3
   177ba:	f001 fb19 	bl	18df0 <xQueueGenericSend>
   177be:	e79d      	b.n	176fc <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)+0x14>

000177c0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return transfer(deviceAddress, firstReg, pData, bytesToRead);
   177c0:	f041 0101 	orr.w	r1, r1, #1
   177c4:	f7ff bf90 	b.w	176e8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

000177c8 <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
{
   177c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:50
    uint8_t byte = 0;
   177ca:	2400      	movs	r4, #0
   177cc:	ab04      	add	r3, sp, #16
   177ce:	f803 4d01 	strb.w	r4, [r3, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
    readRegisters(deviceAddress, registerAddress, &byte, 1);
   177d2:	2401      	movs	r4, #1
   177d4:	9400      	str	r4, [sp, #0]
   177d6:	f7ff fff3 	bl	177c0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
}
   177da:	f89d 000f 	ldrb.w	r0, [sp, #15]
   177de:	b004      	add	sp, #16
   177e0:	bd10      	pop	{r4, pc}

000177e2 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhhPhm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:69
    return transfer(deviceAddress, firstReg, pData, bytesToWrite);
   177e2:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   177e6:	f7ff bf7f 	b.w	176e8 <I2C_Base::transfer(unsigned char, unsigned char, unsigned char*, unsigned long)>

000177ea <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   177ea:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   177ec:	ac04      	add	r4, sp, #16
   177ee:	f804 3d01 	strb.w	r3, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:63
    return writeRegisters(deviceAddress, registerAddress, &value, 1);
   177f2:	2301      	movs	r3, #1
   177f4:	9300      	str	r3, [sp, #0]
   177f6:	4623      	mov	r3, r4
   177f8:	f7ff fff3 	bl	177e2 <I2C_Base::writeRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
}
   177fc:	b004      	add	sp, #16
   177fe:	bd10      	pop	{r4, pc}

00017800 <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
{
   17800:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    uint8_t notUsed = 0;
   17802:	2200      	movs	r2, #0
   17804:	ab04      	add	r3, sp, #16
   17806:	f803 2d01 	strb.w	r2, [r3, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:119
    return readRegisters(deviceAddress, dummyReg, &notUsed, lenZeroToTestDeviceReady);
   1780a:	9200      	str	r2, [sp, #0]
   1780c:	f7ff ffd8 	bl	177c0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:120
}
   17810:	b005      	add	sp, #20
   17812:	f85d fb04 	ldr.w	pc, [sp], #4
   17816:	Address 0x0000000000017816 is out of bounds.


00017818 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:122
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr) :
   17818:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:124
    mDisableOperation(false)
   1781a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:122
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr) :
   1781c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:124
    mDisableOperation(false)
   1781e:	6001      	str	r1, [r0, #0]
   17820:	7145      	strb	r5, [r0, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
    mI2CMutex = xSemaphoreCreateMutex();
   17822:	2001      	movs	r0, #1
   17824:	f001 fb66 	bl	18ef4 <xQueueCreateMutex>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   17828:	2203      	movs	r2, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
    mI2CMutex = xSemaphoreCreateMutex();
   1782a:	60a0      	str	r0, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   1782c:	4629      	mov	r1, r5
   1782e:	2001      	movs	r0, #1
   17830:	f001 fabc 	bl	18dac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
    if ((unsigned int)mpI2CRegs == LPC_I2C0_BASE)
   17834:	6823      	ldr	r3, [r4, #0]
   17836:	4a09      	ldr	r2, [pc, #36]	; (1785c <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:127
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   17838:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
    if ((unsigned int)mpI2CRegs == LPC_I2C0_BASE)
   1783a:	4293      	cmp	r3, r2
   1783c:	d103      	bne.n	17846 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:135
        mIRQ = I2C0_IRQn;
   1783e:	230a      	movs	r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
        mIRQ = (IRQn_Type)99; // Using invalid IRQ on purpose
   17840:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:148
}
   17842:	4620      	mov	r0, r4
   17844:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:137
    else if ((unsigned int)mpI2CRegs == LPC_I2C1_BASE)
   17846:	4a06      	ldr	r2, [pc, #24]	; (17860 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>)
   17848:	4293      	cmp	r3, r2
   1784a:	d101      	bne.n	17850 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
        mIRQ = I2C1_IRQn;
   1784c:	230b      	movs	r3, #11
   1784e:	e7f7      	b.n	17840 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:141
    else if ((unsigned int)mpI2CRegs == LPC_I2C2_BASE)
   17850:	4a04      	ldr	r2, [pc, #16]	; (17864 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4c>)
   17852:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:143
        mIRQ = I2C2_IRQn;
   17854:	bf0c      	ite	eq
   17856:	230c      	moveq	r3, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
        mIRQ = (IRQn_Type)99; // Using invalid IRQ on purpose
   17858:	2363      	movne	r3, #99	; 0x63
   1785a:	e7f1      	b.n	17840 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x28>
   1785c:	4001c000 	.word	0x4001c000
   17860:	4005c000 	.word	0x4005c000
   17864:	400a0000 	.word	0x400a0000

00017868 <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   17868:	f990 3004 	ldrsb.w	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:167
{
   1786c:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   1786e:	2b0b      	cmp	r3, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:167
{
   17870:	4605      	mov	r5, r0
   17872:	460c      	mov	r4, r1
   17874:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:169
    switch (mIRQ) {
   17876:	d034      	beq.n	178e2 <I2C_Base::init(unsigned long, unsigned long)+0x7a>
   17878:	2b0c      	cmp	r3, #12
   1787a:	d035      	beq.n	178e8 <I2C_Base::init(unsigned long, unsigned long)+0x80>
   1787c:	2b0a      	cmp	r3, #10
   1787e:	d136      	bne.n	178ee <I2C_Base::init(unsigned long, unsigned long)+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:170
    case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   17880:	2101      	movs	r1, #1
   17882:	2007      	movs	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:172
    case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   17884:	f7f9 f84a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:189
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   17888:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   1788c:	bf98      	it	ls
   1788e:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   17892:	f04f 026c 	mov.w	r2, #108	; 0x6c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:189
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   17896:	bf94      	ite	ls
   17898:	4371      	mulls	r1, r6
   1789a:	4916      	ldrhi	r1, [pc, #88]	; (178f4 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   1789c:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:190
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   1789e:	fbb4 f1f1 	udiv	r1, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   178a2:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:191
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   178a4:	2228      	movs	r2, #40	; 0x28
   178a6:	2064      	movs	r0, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:190
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   178a8:	0849      	lsrs	r1, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:191
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   178aa:	434a      	muls	r2, r1
   178ac:	fbb2 f2f0 	udiv	r2, r2, r0
   178b0:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:192
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   178b2:	223c      	movs	r2, #60	; 0x3c
   178b4:	4351      	muls	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    mpI2CRegs->I2ADR0 = 0;
   178b6:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:192
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   178b8:	fbb1 f1f0 	udiv	r1, r1, r0
   178bc:	6159      	str	r1, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    mpI2CRegs->I2ADR0 = 0;
   178be:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2ADR1 = 0;
   178c0:	621a      	str	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2ADR2 = 0;
   178c2:	625a      	str	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:198
    mpI2CRegs->I2ADR3 = 0;
   178c4:	629a      	str	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2CONSET = 0x40;
   178c6:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   178c8:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
   178ca:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    NVIC_EnableIRQ(mIRQ);
   178cc:	f995 3004 	ldrsb.w	r3, [r5, #4]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   178d0:	4a09      	ldr	r2, [pc, #36]	; (178f8 <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   178d2:	0959      	lsrs	r1, r3, #5
   178d4:	f003 031f 	and.w	r3, r3, #31
   178d8:	fa00 f303 	lsl.w	r3, r0, r3
   178dc:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   178e0:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
    case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   178e2:	2101      	movs	r1, #1
   178e4:	2013      	movs	r0, #19
   178e6:	e7cd      	b.n	17884 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:172
    case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   178e8:	2101      	movs	r1, #1
   178ea:	201a      	movs	r0, #26
   178ec:	e7ca      	b.n	17884 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    default: return false;
   178ee:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
}
   178f0:	bd70      	pop	{r4, r5, r6, pc}
   178f2:	bf00      	nop
   178f4:	000186a0 	.word	0x000186a0
   178f8:	e000e100 	.word	0xe000e100

000178fc <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
                                if(I2C_READ_MODE(mTransaction.slaveAddr))   \
                                    state = readComplete;                   \
                                else                                        \
                                    state = writeComplete;

    switch (mpI2CRegs->I2STAT)
   178fc:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:239
{
   178fe:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   17900:	6859      	ldr	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:239
{
   17902:	4602      	mov	r2, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   17904:	2950      	cmp	r1, #80	; 0x50
   17906:	f000 809c 	beq.w	17a42 <I2C_Base::i2cStateMachine()+0x146>
   1790a:	d81f      	bhi.n	1794c <I2C_Base::i2cStateMachine()+0x50>
   1790c:	2918      	cmp	r1, #24
   1790e:	d067      	beq.n	179e0 <I2C_Base::i2cStateMachine()+0xe4>
   17910:	d80f      	bhi.n	17932 <I2C_Base::i2cStateMachine()+0x36>
   17912:	2908      	cmp	r1, #8
   17914:	d057      	beq.n	179c6 <I2C_Base::i2cStateMachine()+0xca>
   17916:	2910      	cmp	r1, #16
   17918:	d05b      	beq.n	179d2 <I2C_Base::i2cStateMachine()+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:440
    case slaveAddressNacked:    // no break
    case dataNackedBySlave:     // no break
    case readModeNackedBySlave: // no break
    case busError:              // no break
    default:
        mTransaction.error = mpI2CRegs->I2STAT;
   1791a:	6859      	ldr	r1, [r3, #4]
   1791c:	7791      	strb	r1, [r2, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:441
        setStop();
   1791e:	2120      	movs	r1, #32
   17920:	6199      	str	r1, [r3, #24]
   17922:	2110      	movs	r1, #16
   17924:	6019      	str	r1, [r3, #0]
   17926:	2108      	movs	r1, #8
   17928:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:441 (discriminator 1)
   1792a:	6819      	ldr	r1, [r3, #0]
   1792c:	06c9      	lsls	r1, r1, #27
   1792e:	d4fc      	bmi.n	1792a <I2C_Base::i2cStateMachine()+0x2e>
   17930:	e062      	b.n	179f8 <I2C_Base::i2cStateMachine()+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   17932:	2938      	cmp	r1, #56	; 0x38
   17934:	f000 8093 	beq.w	17a5e <I2C_Base::i2cStateMachine()+0x162>
   17938:	2940      	cmp	r1, #64	; 0x40
   1793a:	d079      	beq.n	17a30 <I2C_Base::i2cStateMachine()+0x134>
   1793c:	2928      	cmp	r1, #40	; 0x28
   1793e:	d1ec      	bne.n	1791a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:380
        if (I2C_READ_MODE(mTransaction.slaveAddr)) {
   17940:	7f00      	ldrb	r0, [r0, #28]
   17942:	f010 0001 	ands.w	r0, r0, #1
   17946:	d05e      	beq.n	17a06 <I2C_Base::i2cStateMachine()+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:381
            setSTARTFlag(); // Send Repeat-start for read-mode
   17948:	2220      	movs	r2, #32
   1794a:	e02a      	b.n	179a2 <I2C_Base::i2cStateMachine()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   1794c:	29a0      	cmp	r1, #160	; 0xa0
   1794e:	d027      	beq.n	179a0 <I2C_Base::i2cStateMachine()+0xa4>
   17950:	d813      	bhi.n	1797a <I2C_Base::i2cStateMachine()+0x7e>
   17952:	2960      	cmp	r1, #96	; 0x60
   17954:	d027      	beq.n	179a6 <I2C_Base::i2cStateMachine()+0xaa>
   17956:	2980      	cmp	r1, #128	; 0x80
   17958:	d02e      	beq.n	179b8 <I2C_Base::i2cStateMachine()+0xbc>
   1795a:	2958      	cmp	r1, #88	; 0x58
   1795c:	d1dd      	bne.n	1791a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:425
        *mTransaction.pMasterData = mpI2CRegs->I2DAT;
   1795e:	6a01      	ldr	r1, [r0, #32]
   17960:	689b      	ldr	r3, [r3, #8]
   17962:	700b      	strb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:426
        setStop();
   17964:	2120      	movs	r1, #32
   17966:	6803      	ldr	r3, [r0, #0]
   17968:	6199      	str	r1, [r3, #24]
   1796a:	2110      	movs	r1, #16
   1796c:	6019      	str	r1, [r3, #0]
   1796e:	2108      	movs	r1, #8
   17970:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:426 (discriminator 1)
   17972:	6819      	ldr	r1, [r3, #0]
   17974:	06c8      	lsls	r0, r1, #27
   17976:	d4fc      	bmi.n	17972 <I2C_Base::i2cStateMachine()+0x76>
   17978:	e03e      	b.n	179f8 <I2C_Base::i2cStateMachine()+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:312
    switch (mpI2CRegs->I2STAT)
   1797a:	29b8      	cmp	r1, #184	; 0xb8
   1797c:	d003      	beq.n	17986 <I2C_Base::i2cStateMachine()+0x8a>
   1797e:	29c0      	cmp	r1, #192	; 0xc0
   17980:	d00e      	beq.n	179a0 <I2C_Base::i2cStateMachine()+0xa4>
   17982:	29a8      	cmp	r1, #168	; 0xa8
   17984:	d1c9      	bne.n	1791a <I2C_Base::i2cStateMachine()+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:324
        if (reg_num > buffer_size)
   17986:	7d50      	ldrb	r0, [r2, #21]
   17988:	7d11      	ldrb	r1, [r2, #20]
   1798a:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
            reg_num = 0;
   1798c:	bfc4      	itt	gt
   1798e:	2100      	movgt	r1, #0
   17990:	7551      	strbgt	r1, [r2, #21]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:328
        mpI2CRegs->I2DAT = buffer_location[reg_num++];
   17992:	7d51      	ldrb	r1, [r2, #21]
   17994:	6910      	ldr	r0, [r2, #16]
   17996:	1c4c      	adds	r4, r1, #1
   17998:	7554      	strb	r4, [r2, #21]
   1799a:	5c42      	ldrb	r2, [r0, r1]
   1799c:	b2d2      	uxtb	r2, r2
   1799e:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:343
        setAckFlag();
   179a0:	2204      	movs	r2, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:419
            setAckFlag(); // ACK next byte --> Next state: dataAvailableAckSent(back to this state)
   179a2:	601a      	str	r2, [r3, #0]
   179a4:	e019      	b.n	179da <I2C_Base::i2cStateMachine()+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:337
        reg_num = 0;
   179a6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:338
        is_reg_byte = true;
   179a8:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:337
        reg_num = 0;
   179aa:	7550      	strb	r0, [r2, #21]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:338
        is_reg_byte = true;
   179ac:	7591      	strb	r1, [r2, #22]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:339
        setAckFlag();
   179ae:	2204      	movs	r2, #4
   179b0:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:392
                clearSIFlag();
   179b2:	2208      	movs	r2, #8
   179b4:	619a      	str	r2, [r3, #24]
   179b6:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:350
        if (is_reg_byte) {
   179b8:	7d80      	ldrb	r0, [r0, #22]
   179ba:	2300      	movs	r3, #0
   179bc:	2800      	cmp	r0, #0
   179be:	d057      	beq.n	17a70 <I2C_Base::i2cStateMachine()+0x174>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:351
            is_reg_byte = false;
   179c0:	7593      	strb	r3, [r2, #22]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:281
    mStateMachineStatus_t state = busy;
   179c2:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:423
        break;
   179c4:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:359
        mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   179c6:	7f02      	ldrb	r2, [r0, #28]
   179c8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
            mpI2CRegs->I2DAT = mTransaction.firstReg;
   179cc:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
            clearSIFlag();
   179ce:	6199      	str	r1, [r3, #24]
   179d0:	e7f7      	b.n	179c2 <I2C_Base::i2cStateMachine()+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:363
        mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   179d2:	7f02      	ldrb	r2, [r0, #28]
   179d4:	f042 0201 	orr.w	r2, r2, #1
   179d8:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:422
        clearSIFlag();
   179da:	2208      	movs	r2, #8
   179dc:	619a      	str	r2, [r3, #24]
   179de:	e7f0      	b.n	179c2 <I2C_Base::i2cStateMachine()+0xc6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:368
        clearSTARTFlag();
   179e0:	2020      	movs	r0, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:370
        if (0 == mTransaction.trxSize) {
   179e2:	6994      	ldr	r4, [r2, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:368
        clearSTARTFlag();
   179e4:	6198      	str	r0, [r3, #24]
   179e6:	2108      	movs	r1, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:370
        if (0 == mTransaction.trxSize) {
   179e8:	b95c      	cbnz	r4, 17a02 <I2C_Base::i2cStateMachine()+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371
            setStop();
   179ea:	6198      	str	r0, [r3, #24]
   179ec:	2010      	movs	r0, #16
   179ee:	6018      	str	r0, [r3, #0]
   179f0:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 1)
   179f2:	6819      	ldr	r1, [r3, #0]
   179f4:	06c9      	lsls	r1, r1, #27
   179f6:	d4fc      	bmi.n	179f2 <I2C_Base::i2cStateMachine()+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 2)
   179f8:	7f13      	ldrb	r3, [r2, #28]
   179fa:	07dd      	lsls	r5, r3, #31
   179fc:	d50e      	bpl.n	17a1c <I2C_Base::i2cStateMachine()+0x120>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371
   179fe:	2001      	movs	r0, #1
   17a00:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
            mpI2CRegs->I2DAT = mTransaction.firstReg;
   17a02:	7f52      	ldrb	r2, [r2, #29]
   17a04:	e7e2      	b.n	179cc <I2C_Base::i2cStateMachine()+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:385
            if (0 == mTransaction.trxSize) {
   17a06:	6991      	ldr	r1, [r2, #24]
   17a08:	b951      	cbnz	r1, 17a20 <I2C_Base::i2cStateMachine()+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:386
                setStop();
   17a0a:	2220      	movs	r2, #32
   17a0c:	619a      	str	r2, [r3, #24]
   17a0e:	2210      	movs	r2, #16
   17a10:	601a      	str	r2, [r3, #0]
   17a12:	2208      	movs	r2, #8
   17a14:	619a      	str	r2, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:386 (discriminator 1)
   17a16:	681a      	ldr	r2, [r3, #0]
   17a18:	06d4      	lsls	r4, r2, #27
   17a1a:	d4fc      	bmi.n	17a16 <I2C_Base::i2cStateMachine()+0x11a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:371 (discriminator 4)
            setStop();
   17a1c:	2002      	movs	r0, #2
   17a1e:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:389
                mpI2CRegs->I2DAT = *(mTransaction.pMasterData);
   17a20:	6a14      	ldr	r4, [r2, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:391
                --mTransaction.trxSize;
   17a22:	3901      	subs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:389
                mpI2CRegs->I2DAT = *(mTransaction.pMasterData);
   17a24:	f814 5b01 	ldrb.w	r5, [r4], #1
   17a28:	609d      	str	r5, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:390
                ++mTransaction.pMasterData;
   17a2a:	6214      	str	r4, [r2, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:391
                --mTransaction.trxSize;
   17a2c:	6191      	str	r1, [r2, #24]
   17a2e:	e7c0      	b.n	179b2 <I2C_Base::i2cStateMachine()+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
        clearSTARTFlag();
   17a30:	2120      	movs	r1, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
        if (mTransaction.trxSize > 1) {
   17a32:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
        clearSTARTFlag();
   17a34:	6199      	str	r1, [r3, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
        if (mTransaction.trxSize > 1) {
   17a36:	2a01      	cmp	r2, #1
   17a38:	f04f 0204 	mov.w	r2, #4
   17a3c:	d8b1      	bhi.n	179a2 <I2C_Base::i2cStateMachine()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:416
            setNackFlag();// NACK next byte --> Next state: dataAvailableNackSent
   17a3e:	619a      	str	r2, [r3, #24]
   17a40:	e7cb      	b.n	179da <I2C_Base::i2cStateMachine()+0xde>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:411
        *mTransaction.pMasterData = mpI2CRegs->I2DAT;
   17a42:	689b      	ldr	r3, [r3, #8]
   17a44:	6a01      	ldr	r1, [r0, #32]
   17a46:	2204      	movs	r2, #4
   17a48:	700b      	strb	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:412
        ++mTransaction.pMasterData;
   17a4a:	6a03      	ldr	r3, [r0, #32]
   17a4c:	3301      	adds	r3, #1
   17a4e:	6203      	str	r3, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:413
        --mTransaction.trxSize;
   17a50:	6983      	ldr	r3, [r0, #24]
   17a52:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:415
        if (1 == mTransaction.trxSize) { // Only 1 more byte remaining
   17a54:	2b01      	cmp	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:413
        --mTransaction.trxSize;
   17a56:	6183      	str	r3, [r0, #24]
   17a58:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:415
        if (1 == mTransaction.trxSize) { // Only 1 more byte remaining
   17a5a:	d1a2      	bne.n	179a2 <I2C_Base::i2cStateMachine()+0xa6>
   17a5c:	e7ef      	b.n	17a3e <I2C_Base::i2cStateMachine()+0x142>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17a5e:	7f01      	ldrb	r1, [r0, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:432
        mTransaction.error = mpI2CRegs->I2STAT;
   17a60:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17a62:	f011 0f01 	tst.w	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:432
        mTransaction.error = mpI2CRegs->I2STAT;
   17a66:	7793      	strb	r3, [r2, #30]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:431
        state = I2C_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   17a68:	bf14      	ite	ne
   17a6a:	2001      	movne	r0, #1
   17a6c:	2002      	moveq	r0, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:433
        break;
   17a6e:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:446
        break;
    }

    return state;
}
   17a70:	bd30      	pop	{r4, r5, pc}
   17a72:	Address 0x0000000000017a72 is out of bounds.


00017a74 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:39
{
   17a74:	b513      	push	{r0, r1, r4, lr}
   17a76:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
    if (busy != i2cStateMachine()) {
   17a78:	f7ff ff40 	bl	178fc <I2C_Base::i2cStateMachine()>
   17a7c:	b180      	cbz	r0, 17aa0 <I2C_Base::handleInterrupt()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        long higherPriorityTaskWaiting = 0;
   17a7e:	2300      	movs	r3, #0
   17a80:	a902      	add	r1, sp, #8
   17a82:	f841 3d04 	str.w	r3, [r1, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:43
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   17a86:	68e0      	ldr	r0, [r4, #12]
   17a88:	f001 fa86 	bl	18f98 <xQueueGiveFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   17a8c:	9b01      	ldr	r3, [sp, #4]
   17a8e:	b13b      	cbz	r3, 17aa0 <I2C_Base::handleInterrupt()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:44 (discriminator 1)
   17a90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17a94:	4b03      	ldr	r3, [pc, #12]	; (17aa4 <I2C_Base::handleInterrupt()+0x30>)
   17a96:	601a      	str	r2, [r3, #0]
   17a98:	f3bf 8f4f 	dsb	sy
   17a9c:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.cpp:46
}
   17aa0:	b002      	add	sp, #8
   17aa2:	bd10      	pop	{r4, pc}
   17aa4:	e000ed04 	.word	0xe000ed04

00017aa8 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   17aa8:	b537      	push	{r0, r1, r2, r4, r5, lr}
   17aaa:	4604      	mov	r4, r0
   17aac:	4615      	mov	r5, r2
   17aae:	f88d 1007 	strb.w	r1, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   17ab2:	f002 f899 	bl	19be8 <xTaskGetSchedulerState>
   17ab6:	2802      	cmp	r0, #2
   17ab8:	d009      	beq.n	17ace <UartDev::putChar(char, unsigned int)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   17aba:	6963      	ldr	r3, [r4, #20]
   17abc:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17ac0:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   17ac2:	7d1a      	ldrb	r2, [r3, #20]
   17ac4:	0652      	lsls	r2, r2, #25
   17ac6:	d5fc      	bpl.n	17ac2 <UartDev::putChar(char, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   17ac8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   17aca:	b003      	add	sp, #12
   17acc:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   17ace:	2300      	movs	r3, #0
   17ad0:	462a      	mov	r2, r5
   17ad2:	f10d 0107 	add.w	r1, sp, #7
   17ad6:	69e0      	ldr	r0, [r4, #28]
   17ad8:	f001 f98a 	bl	18df0 <xQueueGenericSend>
   17adc:	2800      	cmp	r0, #0
   17ade:	d0f4      	beq.n	17aca <UartDev::putChar(char, unsigned int)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   17ae0:	6963      	ldr	r3, [r4, #20]
   17ae2:	7d1b      	ldrb	r3, [r3, #20]
   17ae4:	065b      	lsls	r3, r3, #25
   17ae6:	d5ef      	bpl.n	17ac8 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   17ae8:	2300      	movs	r3, #0
   17aea:	f10d 0107 	add.w	r1, sp, #7
   17aee:	461a      	mov	r2, r3
   17af0:	69e0      	ldr	r0, [r4, #28]
   17af2:	f001 fa85 	bl	19000 <xQueueGenericReceive>
   17af6:	2800      	cmp	r0, #0
   17af8:	d0e6      	beq.n	17ac8 <UartDev::putChar(char, unsigned int)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   17afa:	6963      	ldr	r3, [r4, #20]
   17afc:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17b00:	701a      	strb	r2, [r3, #0]
   17b02:	e7e1      	b.n	17ac8 <UartDev::putChar(char, unsigned int)+0x20>

00017b04 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   17b04:	b510      	push	{r4, lr}
   17b06:	4604      	mov	r4, r0
   17b08:	4b02      	ldr	r3, [pc, #8]	; (17b14 <UartDev::~UartDev()+0x10>)
   17b0a:	6003      	str	r3, [r0, #0]
   17b0c:	f000 f9d0 	bl	17eb0 <CharDev::~CharDev()>
   17b10:	4620      	mov	r0, r4
   17b12:	bd10      	pop	{r4, pc}
   17b14:	00026a08 	.word	0x00026a08

00017b18 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   17b18:	b510      	push	{r4, lr}
   17b1a:	4604      	mov	r4, r0
   17b1c:	f7ff fff2 	bl	17b04 <UartDev::~UartDev()>
   17b20:	4620      	mov	r0, r4
   17b22:	212c      	movs	r1, #44	; 0x2c
   17b24:	f005 fd7f 	bl	1d626 <operator delete(void*, unsigned int)>
   17b28:	4620      	mov	r0, r4
   17b2a:	bd10      	pop	{r4, pc}

00017b2c <UartDev::flush()>:
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   17b2c:	b510      	push	{r4, lr}
   17b2e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17b30:	f002 f85a 	bl	19be8 <xTaskGetSchedulerState>
   17b34:	2802      	cmp	r0, #2
   17b36:	d107      	bne.n	17b48 <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   17b38:	69e0      	ldr	r0, [r4, #28]
   17b3a:	f001 fb2f 	bl	1919c <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   17b3e:	b118      	cbz	r0, 17b48 <UartDev::flush()+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   17b40:	2001      	movs	r0, #1
   17b42:	f001 fe3b 	bl	197bc <vTaskDelay>
   17b46:	e7f7      	b.n	17b38 <UartDev::flush()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   17b48:	2001      	movs	r0, #1
   17b4a:	bd10      	pop	{r4, pc}

00017b4c <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   17b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17b4e:	4606      	mov	r6, r0
   17b50:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   17b52:	460f      	mov	r7, r1
   17b54:	b909      	cbnz	r1, 17b5a <UartDev::getChar(char*, unsigned int)+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   17b56:	2000      	movs	r0, #0
   17b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   17b5a:	6983      	ldr	r3, [r0, #24]
   17b5c:	2b00      	cmp	r3, #0
   17b5e:	d0fa      	beq.n	17b56 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17b60:	f002 f842 	bl	19be8 <xTaskGetSchedulerState>
   17b64:	2802      	cmp	r0, #2
   17b66:	d109      	bne.n	17b7c <UartDev::getChar(char*, unsigned int)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   17b68:	2300      	movs	r3, #0
   17b6a:	4622      	mov	r2, r4
   17b6c:	4639      	mov	r1, r7
   17b6e:	69b0      	ldr	r0, [r6, #24]
   17b70:	f001 fa46 	bl	19000 <xQueueGenericReceive>
   17b74:	3000      	adds	r0, #0
   17b76:	bf18      	it	ne
   17b78:	2001      	movne	r0, #1
   17b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17b7c:	f7f8 fc8e 	bl	1049c <sys_get_uptime_us>
   17b80:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17b84:	2300      	movs	r3, #0
   17b86:	f006 fd2b 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   17b8a:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   17b8c:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   17b8e:	2300      	movs	r3, #0
   17b90:	4639      	mov	r1, r7
   17b92:	461a      	mov	r2, r3
   17b94:	69b0      	ldr	r0, [r6, #24]
   17b96:	f001 fa33 	bl	19000 <xQueueGenericReceive>
   17b9a:	b958      	cbnz	r0, 17bb4 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   17b9c:	f7f8 fc7e 	bl	1049c <sys_get_uptime_us>
   17ba0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   17ba4:	2300      	movs	r3, #0
   17ba6:	f006 fd1b 	bl	1e5e0 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   17baa:	428d      	cmp	r5, r1
   17bac:	bf08      	it	eq
   17bae:	4284      	cmpeq	r4, r0
   17bb0:	d2ed      	bcs.n	17b8e <UartDev::getChar(char*, unsigned int)+0x42>
   17bb2:	e7d0      	b.n	17b56 <UartDev::getChar(char*, unsigned int)+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   17bb4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   17bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00017bb8 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
{
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */

    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17bb8:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:97
{
   17bba:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17bbc:	6944      	ldr	r4, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
    {
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   17bbe:	0109      	lsls	r1, r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:102
    mpUARTRegBase->LCR = (1 << 7); // Enable DLAB to access DLM, DLL, and IER
   17bc0:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:104
        uint16_t bd = (mPeripheralClock / (16 * baudRate)) + 0.5;
   17bc2:	6a00      	ldr	r0, [r0, #32]
   17bc4:	fbb0 f0f1 	udiv	r0, r0, r1
   17bc8:	f006 f980 	bl	1decc <__aeabi_ui2d>
   17bcc:	4b06      	ldr	r3, [pc, #24]	; (17be8 <UartDev::setBaudRate(unsigned int)+0x30>)
   17bce:	2200      	movs	r2, #0
   17bd0:	f006 f840 	bl	1dc54 <__adddf3>
   17bd4:	f006 f9f0 	bl	1dfb8 <__aeabi_d2uiz>
   17bd8:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:105
        mpUARTRegBase->DLM = (bd >> 8);
   17bda:	0a03      	lsrs	r3, r0, #8
   17bdc:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
        mpUARTRegBase->DLL = (bd >> 0);
    }
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   17bde:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:106
        mpUARTRegBase->DLL = (bd >> 0);
   17be0:	b2c0      	uxtb	r0, r0
   17be2:	7020      	strb	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:108
    mpUARTRegBase->LCR = 3; // Disable DLAB and set 8bit per char
   17be4:	7323      	strb	r3, [r4, #12]
   17be6:	bd10      	pop	{r4, pc}
   17be8:	3fe00000 	.word	0x3fe00000

00017bec <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   17bec:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   17bee:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   17bf0:	6942      	ldr	r2, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   17bf2:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   17bf4:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   17bf8:	6893      	ldr	r3, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   17bfa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   17bfc:	f003 030e 	and.w	r3, r3, #14
   17c00:	2b04      	cmp	r3, #4
   17c02:	d021      	beq.n	17c48 <UartDev::handleInterrupt()+0x5c>
   17c04:	2b0c      	cmp	r3, #12
   17c06:	d01f      	beq.n	17c48 <UartDev::handleInterrupt()+0x5c>
   17c08:	2b02      	cmp	r3, #2
   17c0a:	d13f      	bne.n	17c8c <UartDev::handleInterrupt()+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   17c0c:	69c0      	ldr	r0, [r0, #28]
   17c0e:	f001 face 	bl	191ae <uxQueueMessagesWaitingFromISR>
   17c12:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   17c14:	4298      	cmp	r0, r3
   17c16:	d903      	bls.n	17c20 <UartDev::handleInterrupt()+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   17c18:	69e0      	ldr	r0, [r4, #28]
   17c1a:	f001 fac8 	bl	191ae <uxQueueMessagesWaitingFromISR>
   17c1e:	84e0      	strh	r0, [r4, #38]	; 0x26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   17c20:	2610      	movs	r6, #16
   17c22:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   17c24:	aa01      	add	r2, sp, #4
   17c26:	f10d 0103 	add.w	r1, sp, #3
   17c2a:	69e0      	ldr	r0, [r4, #28]
   17c2c:	f001 fa82 	bl	19134 <xQueueReceiveFromISR>
   17c30:	2800      	cmp	r0, #0
   17c32:	d12e      	bne.n	17c92 <UartDev::handleInterrupt()+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   17c34:	b35d      	cbz	r5, 17c8e <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   17c36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   17c3a:	4b1b      	ldr	r3, [pc, #108]	; (17ca8 <UartDev::handleInterrupt()+0xbc>)
   17c3c:	601a      	str	r2, [r3, #0]
   17c3e:	f3bf 8f4f 	dsb	sy
   17c42:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   17c46:	e022      	b.n	17c8e <UartDev::handleInterrupt()+0xa2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   17c48:	f001 fc8e 	bl	19568 <xTaskGetTickCountFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   17c4c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   17c4e:	62a0      	str	r0, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   17c50:	6963      	ldr	r3, [r4, #20]
   17c52:	7d1a      	ldrb	r2, [r3, #20]
   17c54:	07d2      	lsls	r2, r2, #31
   17c56:	d50e      	bpl.n	17c76 <UartDev::handleInterrupt()+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   17c58:	781b      	ldrb	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   17c5a:	aa01      	add	r2, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   17c5c:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   17c60:	f10d 0103 	add.w	r1, sp, #3
   17c64:	2300      	movs	r3, #0
   17c66:	69a0      	ldr	r0, [r4, #24]
   17c68:	f001 f956 	bl	18f18 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   17c6c:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   17c6e:	2b00      	cmp	r3, #0
   17c70:	bf18      	it	ne
   17c72:	2501      	movne	r5, #1
   17c74:	e7ec      	b.n	17c50 <UartDev::handleInterrupt()+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   17c76:	69a0      	ldr	r0, [r4, #24]
   17c78:	f001 fa99 	bl	191ae <uxQueueMessagesWaitingFromISR>
   17c7c:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   17c7e:	4298      	cmp	r0, r3
   17c80:	d9d8      	bls.n	17c34 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   17c82:	69a0      	ldr	r0, [r4, #24]
   17c84:	f001 fa93 	bl	191ae <uxQueueMessagesWaitingFromISR>
   17c88:	84a0      	strh	r0, [r4, #36]	; 0x24
   17c8a:	e7d3      	b.n	17c34 <UartDev::handleInterrupt()+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   17c8c:	7d13      	ldrb	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   17c8e:	b002      	add	sp, #8
   17c90:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   17c92:	6963      	ldr	r3, [r4, #20]
   17c94:	f89d 2003 	ldrb.w	r2, [sp, #3]
   17c98:	701a      	strb	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   17c9a:	9b01      	ldr	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   17c9c:	2b00      	cmp	r3, #0
   17c9e:	bf18      	it	ne
   17ca0:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   17ca2:	3e01      	subs	r6, #1
   17ca4:	d0c6      	beq.n	17c34 <UartDev::handleInterrupt()+0x48>
   17ca6:	e7bd      	b.n	17c24 <UartDev::handleInterrupt()+0x38>
   17ca8:	e000ed04 	.word	0xe000ed04

00017cac <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   17cac:	b538      	push	{r3, r4, r5, lr}
   17cae:	4604      	mov	r4, r0
   17cb0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   17cb2:	f000 f8ed 	bl	17e90 <CharDev::CharDev()>
   17cb6:	4b06      	ldr	r3, [pc, #24]	; (17cd0 <UartDev::UartDev(unsigned int*)+0x24>)
   17cb8:	6165      	str	r5, [r4, #20]
   17cba:	6023      	str	r3, [r4, #0]
   17cbc:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   17cbe:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   17cc0:	61a3      	str	r3, [r4, #24]
   17cc2:	61e3      	str	r3, [r4, #28]
   17cc4:	6223      	str	r3, [r4, #32]
   17cc6:	84a3      	strh	r3, [r4, #36]	; 0x24
   17cc8:	84e3      	strh	r3, [r4, #38]	; 0x26
   17cca:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   17ccc:	bd38      	pop	{r3, r4, r5, pc}
   17cce:	bf00      	nop
   17cd0:	00026a08 	.word	0x00026a08

00017cd4 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208

bool UartDev::init(unsigned int pclk, unsigned int baudRate,
                   int rxQSize, int txQSize)
{
   17cd4:	b570      	push	{r4, r5, r6, lr}
   17cd6:	4616      	mov	r6, r2
   17cd8:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    mPeripheralClock = pclk;

    // Configure UART Hardware: Baud rate, FIFOs etc.
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17cda:	4a25      	ldr	r2, [pc, #148]	; (17d70 <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>)
   17cdc:	6943      	ldr	r3, [r0, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:208
{
   17cde:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17ce0:	4293      	cmp	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:209
    mPeripheralClock = pclk;
   17ce2:	6201      	str	r1, [r0, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:212
    if (LPC_UART0_BASE == (unsigned int) mpUARTRegBase)
   17ce4:	d12f      	bne.n	17d46 <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:214
    {
        lpc_pconp(pconp_uart0, true);
   17ce6:	2101      	movs	r1, #1
   17ce8:	2003      	movs	r0, #3
   17cea:	f7f8 fe17 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17cee:	2220      	movs	r2, #32
   17cf0:	4b20      	ldr	r3, [pc, #128]	; (17d74 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246

    // Enable & Reset FIFOs and set 4 char timeout for Rx
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);

    setBaudRate(baudRate);
   17cf2:	4631      	mov	r1, r6
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17cf4:	601a      	str	r2, [r3, #0]
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   17cf6:	2241      	movs	r2, #65	; 0x41
   17cf8:	6963      	ldr	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   17cfa:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:243
    mpUARTRegBase->FCR = (1 << 0) | (1 << 6);
   17cfc:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:244
    mpUARTRegBase->FCR |= (1 << 1) | (1 << 2);
   17cfe:	7a1a      	ldrb	r2, [r3, #8]
   17d00:	f042 0206 	orr.w	r2, r2, #6
   17d04:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:246
    setBaudRate(baudRate);
   17d06:	f7ff ff57 	bl	17bb8 <UartDev::setBaudRate(unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253
    // Set minimum queue size?
    if (rxQSize < 9) rxQSize = 8;
    if (txQSize < 9) txQSize = 8;

    // Create the receive and transmit queues
    if (!mRxQueue) mRxQueue = xQueueCreate(rxQSize, sizeof(char));
   17d0a:	69a2      	ldr	r2, [r4, #24]
   17d0c:	b942      	cbnz	r2, 17d20 <UartDev::init(unsigned int, unsigned int, int, int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:253 (discriminator 1)
   17d0e:	2d08      	cmp	r5, #8
   17d10:	4628      	mov	r0, r5
   17d12:	f04f 0101 	mov.w	r1, #1
   17d16:	bfb8      	it	lt
   17d18:	2008      	movlt	r0, #8
   17d1a:	f001 f847 	bl	18dac <xQueueGenericCreate>
   17d1e:	61a0      	str	r0, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254
    if (!mTxQueue) mTxQueue = xQueueCreate(txQSize, sizeof(char));
   17d20:	69e2      	ldr	r2, [r4, #28]
   17d22:	b93a      	cbnz	r2, 17d34 <UartDev::init(unsigned int, unsigned int, int, int)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:254 (discriminator 1)
   17d24:	9804      	ldr	r0, [sp, #16]
   17d26:	2101      	movs	r1, #1
   17d28:	2808      	cmp	r0, #8
   17d2a:	bfb8      	it	lt
   17d2c:	2008      	movlt	r0, #8
   17d2e:	f001 f83d 	bl	18dac <xQueueGenericCreate>
   17d32:	61e0      	str	r0, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:261
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetQueueName(mRxQueue, "UART RX-Q");
    vTraceSetQueueName(mTxQueue, "UART TX-Q");

    // Enable Rx/Tx and line status Interrupts:
    mpUARTRegBase->IER = (1 << 0) | (1 << 1) | (1 << 2); // B0:Rx, B1: Tx
   17d34:	2207      	movs	r2, #7
   17d36:	6963      	ldr	r3, [r4, #20]
   17d38:	605a      	str	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263

    return (0 != mRxQueue && 0 != mTxQueue);
   17d3a:	69a3      	ldr	r3, [r4, #24]
   17d3c:	b10b      	cbz	r3, 17d42 <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 1)
   17d3e:	69e3      	ldr	r3, [r4, #28]
   17d40:	b9a3      	cbnz	r3, 17d6c <UartDev::init(unsigned int, unsigned int, int, int)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263 (discriminator 4)
   17d42:	2000      	movs	r0, #0
   17d44:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:225
    else if (LPC_UART2_BASE == (unsigned int) mpUARTRegBase)
   17d46:	4a0c      	ldr	r2, [pc, #48]	; (17d78 <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   17d48:	4293      	cmp	r3, r2
   17d4a:	d105      	bne.n	17d58 <UartDev::init(unsigned int, unsigned int, int, int)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:227
        lpc_pconp(pconp_uart2, true);
   17d4c:	2101      	movs	r1, #1
   17d4e:	2018      	movs	r0, #24
   17d50:	f7f8 fde4 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17d54:	2280      	movs	r2, #128	; 0x80
   17d56:	e7cb      	b.n	17cf0 <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:231
    else if (LPC_UART3_BASE == (unsigned int) mpUARTRegBase)
   17d58:	4a08      	ldr	r2, [pc, #32]	; (17d7c <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   17d5a:	4293      	cmp	r3, r2
   17d5c:	d1f1      	bne.n	17d42 <UartDev::init(unsigned int, unsigned int, int, int)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:233
        lpc_pconp(pconp_uart3, true);
   17d5e:	2101      	movs	r1, #1
   17d60:	2019      	movs	r0, #25
   17d62:	f7f8 fddb 	bl	1091c <lpc_pconp>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   17d66:	f44f 7280 	mov.w	r2, #256	; 0x100
   17d6a:	e7c1      	b.n	17cf0 <UartDev::init(unsigned int, unsigned int, int, int)+0x1c>
_ZN7UartDev4initEjjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:263
    return (0 != mRxQueue && 0 != mTxQueue);
   17d6c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.cpp:264
}
   17d6e:	bd70      	pop	{r4, r5, r6, pc}
   17d70:	4000c000 	.word	0x4000c000
   17d74:	e000e100 	.word	0xe000e100
   17d78:	40098000 	.word	0x40098000
   17d7c:	4009c000 	.word	0x4009c000

00017d80 <CharDev::flush()>:
_ZN7CharDev5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   17d80:	2001      	movs	r0, #1
   17d82:	4770      	bx	lr

00017d84 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:34
#include "utilities.h"      // system_get_timer_ms();



bool CharDev::put(const char* pString, unsigned int timeout)
{
   17d84:	b570      	push	{r4, r5, r6, lr}
   17d86:	4605      	mov	r5, r0
   17d88:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:35
    if (!pString) {
   17d8a:	b909      	cbnz	r1, 17d90 <CharDev::put(char const*, unsigned int)+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:36
        return false;
   17d8c:	2000      	movs	r0, #0
   17d8e:	bd70      	pop	{r4, r5, r6, pc}
   17d90:	1e4c      	subs	r4, r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:39
    }

    while(*pString) {
   17d92:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   17d96:	b139      	cbz	r1, 17da8 <CharDev::put(char const*, unsigned int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:40
        if(!putChar(*pString++, timeout)) {
   17d98:	682b      	ldr	r3, [r5, #0]
   17d9a:	4632      	mov	r2, r6
   17d9c:	685b      	ldr	r3, [r3, #4]
   17d9e:	4628      	mov	r0, r5
   17da0:	4798      	blx	r3
   17da2:	2800      	cmp	r0, #0
   17da4:	d1f5      	bne.n	17d92 <CharDev::put(char const*, unsigned int)+0xe>
   17da6:	e7f1      	b.n	17d8c <CharDev::put(char const*, unsigned int)+0x8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:45
            return false;
        }
    }

    return true;
   17da8:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:46
}
   17daa:	bd70      	pop	{r4, r5, r6, pc}

00017dac <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:49

void CharDev::putline(const char* pBuff, unsigned int timeout)
{
   17dac:	b538      	push	{r3, r4, r5, lr}
   17dae:	4604      	mov	r4, r0
   17db0:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:50
    this->put(pBuff, timeout);
   17db2:	f7ff ffe7 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   17db6:	462a      	mov	r2, r5
   17db8:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:52
}
   17dba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:51
    this->put("\r\n", timeout);
   17dbe:	4901      	ldr	r1, [pc, #4]	; (17dc4 <CharDev::putline(char const*, unsigned int)+0x18>)
   17dc0:	f7ff bfe0 	b.w	17d84 <CharDev::put(char const*, unsigned int)>
   17dc4:	00026590 	.word	0x00026590

00017dc8 <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55

bool CharDev::gets(char* pBuff, int maxLen, unsigned int timeout)
{
   17dc8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   17dcc:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:55
{
   17dce:	4607      	mov	r7, r0
   17dd0:	460d      	mov	r5, r1
   17dd2:	4690      	mov	r8, r2
   17dd4:	4699      	mov	r9, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:56
    char c = 0;
   17dd6:	ae02      	add	r6, sp, #8
   17dd8:	f806 4d01 	strb.w	r4, [r6, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:60
    int charCount = 0;
    bool success = false;

    while(getChar(&c, timeout)) {
   17ddc:	683b      	ldr	r3, [r7, #0]
   17dde:	464a      	mov	r2, r9
   17de0:	681b      	ldr	r3, [r3, #0]
   17de2:	4631      	mov	r1, r6
   17de4:	4638      	mov	r0, r7
   17de6:	4798      	blx	r3
   17de8:	b178      	cbz	r0, 17e0a <CharDev::gets(char*, int, unsigned int)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61
        if ('\r' != c && '\n' != c) {
   17dea:	f89d 2007 	ldrb.w	r2, [sp, #7]
   17dee:	2a0d      	cmp	r2, #13
   17df0:	d003      	beq.n	17dfa <CharDev::gets(char*, int, unsigned int)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:61 (discriminator 1)
   17df2:	2a0a      	cmp	r2, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:62 (discriminator 1)
            *pBuff++ = c;
   17df4:	bf1c      	itt	ne
   17df6:	702a      	strbne	r2, [r5, #0]
   17df8:	3501      	addne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:64
        }
        if(++charCount >= maxLen) {
   17dfa:	3401      	adds	r4, #1
   17dfc:	4544      	cmp	r4, r8
   17dfe:	da09      	bge.n	17e14 <CharDev::gets(char*, int, unsigned int)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:67
            break;
        }
        if('\n' == c) {
   17e00:	2a0a      	cmp	r2, #10
   17e02:	d1eb      	bne.n	17ddc <CharDev::gets(char*, int, unsigned int)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:75
        }
    }

    // If we didn't get any characters, don't null terminate the string
    if(charCount > 0) {
        *pBuff = '\0';
   17e04:	2300      	movs	r3, #0
   17e06:	702b      	strb	r3, [r5, #0]
   17e08:	e001      	b.n	17e0e <CharDev::gets(char*, int, unsigned int)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:74
    if(charCount > 0) {
   17e0a:	2c00      	cmp	r4, #0
   17e0c:	d1fa      	bne.n	17e04 <CharDev::gets(char*, int, unsigned int)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:79
    }

    return success;
}
   17e0e:	b003      	add	sp, #12
   17e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:58
    bool success = false;
   17e14:	2000      	movs	r0, #0
   17e16:	e7f5      	b.n	17e04 <CharDev::gets(char*, int, unsigned int)+0x3c>

00017e18 <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:82

int CharDev::printf(const char *format, ...)
{
   17e18:	b40e      	push	{r1, r2, r3}
   17e1a:	b533      	push	{r0, r1, r4, r5, lr}
   17e1c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:83
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17e1e:	f001 fee3 	bl	19be8 <xTaskGetSchedulerState>
   17e22:	2802      	cmp	r0, #2
   17e24:	d106      	bne.n	17e34 <CharDev::printf(char const*, ...)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:84
        xSemaphoreTake(mPrintfSemaphore, portMAX_DELAY);
   17e26:	2300      	movs	r3, #0
   17e28:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17e2c:	4619      	mov	r1, r3
   17e2e:	68e0      	ldr	r0, [r4, #12]
   17e30:	f001 f8e6 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:89
    }

        int len = 0;
        va_list args;
        va_start(args, format);
   17e34:	ab06      	add	r3, sp, #24
   17e36:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93

        do {
            va_list args_copy;
            va_copy(args_copy, args);
   17e38:	9b00      	ldr	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17e3a:	9a05      	ldr	r2, [sp, #20]
   17e3c:	8921      	ldrh	r1, [r4, #8]
   17e3e:	6860      	ldr	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:93
            va_copy(args_copy, args);
   17e40:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17e42:	f00a fadd 	bl	22400 <vsniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            va_end(args_copy);

            if (len >= mPrintfMemSize) {
   17e46:	8923      	ldrh	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:94
            len = vsnprintf(mpPrintfMem, mPrintfMemSize, format, args_copy);
   17e48:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:97
            if (len >= mPrintfMemSize) {
   17e4a:	4298      	cmp	r0, r3
   17e4c:	db0a      	blt.n	17e64 <CharDev::printf(char const*, ...)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:99
                const int align = 16;
                mPrintfMemSize = (align + ((len/align) * align));
   17e4e:	f020 010f 	bic.w	r1, r0, #15
   17e52:	3110      	adds	r1, #16
   17e54:	b289      	uxth	r1, r1
   17e56:	8121      	strh	r1, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:112
                        free(mpPrintfMem);
                    }
                    mpPrintfMem = (char*) malloc(mPrintfMemSize);
                }
                else {
                    mpPrintfMem = (char*) realloc(mpPrintfMem, mPrintfMemSize);
   17e58:	6860      	ldr	r0, [r4, #4]
   17e5a:	f008 fdc5 	bl	209e8 <realloc>
   17e5e:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:118
                }
            }
            else {
                break;
            }
        } while (mpPrintfMem);
   17e60:	2800      	cmp	r0, #0
   17e62:	d1e9      	bne.n	17e38 <CharDev::printf(char const*, ...)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:121

        va_end(args);
        this->put(mpPrintfMem);
   17e64:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17e68:	6861      	ldr	r1, [r4, #4]
   17e6a:	4620      	mov	r0, r4
   17e6c:	f7ff ff8a 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:123

    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   17e70:	f001 feba 	bl	19be8 <xTaskGetSchedulerState>
   17e74:	2802      	cmp	r0, #2
   17e76:	d105      	bne.n	17e84 <CharDev::printf(char const*, ...)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:124
        xSemaphoreGive(mPrintfSemaphore);
   17e78:	2300      	movs	r3, #0
   17e7a:	68e0      	ldr	r0, [r4, #12]
   17e7c:	461a      	mov	r2, r3
   17e7e:	4619      	mov	r1, r3
   17e80:	f000 ffb6 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:128
    }

    return len;
}
   17e84:	4628      	mov	r0, r5
   17e86:	b002      	add	sp, #8
   17e88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   17e8c:	b003      	add	sp, #12
   17e8e:	4770      	bx	lr

00017e90 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   17e90:	4b06      	ldr	r3, [pc, #24]	; (17eac <CharDev::CharDev()+0x1c>)
   17e92:	b510      	push	{r4, lr}
   17e94:	6003      	str	r3, [r0, #0]
   17e96:	2300      	movs	r3, #0
   17e98:	4604      	mov	r4, r0
   17e9a:	6043      	str	r3, [r0, #4]
   17e9c:	8103      	strh	r3, [r0, #8]
   17e9e:	7403      	strb	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   17ea0:	2001      	movs	r0, #1
   17ea2:	f001 f827 	bl	18ef4 <xQueueCreateMutex>
   17ea6:	60e0      	str	r0, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   17ea8:	4620      	mov	r0, r4
   17eaa:	bd10      	pop	{r4, pc}
   17eac:	00026a38 	.word	0x00026a38

00017eb0 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   17eb0:	4b04      	ldr	r3, [pc, #16]	; (17ec4 <CharDev::~CharDev()+0x14>)
   17eb2:	b510      	push	{r4, lr}
   17eb4:	4604      	mov	r4, r0
   17eb6:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   17eb8:	6840      	ldr	r0, [r0, #4]
   17eba:	b108      	cbz	r0, 17ec0 <CharDev::~CharDev()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   17ebc:	f007 faae 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   17ec0:	4620      	mov	r0, r4
   17ec2:	bd10      	pop	{r4, pc}
   17ec4:	00026a38 	.word	0x00026a38

00017ec8 <RIT_IRQHandler>:
RIT_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   17ec8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   17eca:	4b04      	ldr	r3, [pc, #16]	; (17edc <RIT_IRQHandler+0x14>)
   17ecc:	681b      	ldr	r3, [r3, #0]
   17ece:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   17ed0:	4a03      	ldr	r2, [pc, #12]	; (17ee0 <RIT_IRQHandler+0x18>)
   17ed2:	7a13      	ldrb	r3, [r2, #8]
   17ed4:	f043 0301 	orr.w	r3, r3, #1
   17ed8:	7213      	strb	r3, [r2, #8]
   17eda:	bd08      	pop	{r3, pc}
   17edc:	2007c5d4 	.word	0x2007c5d4
   17ee0:	400b0000 	.word	0x400b0000

00017ee4 <rtc_gettime>:
rtc_gettime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   17ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
   17ee6:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17ee8:	466c      	mov	r4, sp
   17eea:	4d0f      	ldr	r5, [pc, #60]	; (17f28 <rtc_gettime+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:56
{
   17eec:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17eee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17ef2:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17ef6:	ae03      	add	r6, sp, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17ef8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17efc:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   17f00:	220c      	movs	r2, #12
   17f02:	4631      	mov	r1, r6
   17f04:	4620      	mov	r0, r4
   17f06:	f007 fab1 	bl	1f46c <memcmp>
   17f0a:	b938      	cbnz	r0, 17f1c <rtc_gettime+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   17f0c:	cc03      	ldmia	r4!, {r0, r1}
   17f0e:	6038      	str	r0, [r7, #0]
   17f10:	6820      	ldr	r0, [r4, #0]
   17f12:	6079      	str	r1, [r7, #4]
   17f14:	60b8      	str	r0, [r7, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:69
}
   17f16:	4638      	mov	r0, r7
   17f18:	b007      	add	sp, #28
   17f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   17f1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   17f20:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   17f24:	e7e8      	b.n	17ef8 <rtc_gettime+0x14>
   17f26:	bf00      	nop
   17f28:	40024014 	.word	0x40024014

00017f2c <rtc_settime>:
rtc_settime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   17f2c:	2200      	movs	r2, #0
   17f2e:	4b18      	ldr	r3, [pc, #96]	; (17f90 <rtc_settime+0x64>)
   17f30:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   17f32:	7802      	ldrb	r2, [r0, #0]
   17f34:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17f38:	f883 2020 	strb.w	r2, [r3, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   17f3c:	7842      	ldrb	r2, [r0, #1]
   17f3e:	f3c2 0205 	ubfx	r2, r2, #0, #6
   17f42:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   17f46:	7882      	ldrb	r2, [r0, #2]
   17f48:	f3c2 0204 	ubfx	r2, r2, #0, #5
   17f4c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   17f50:	78c2      	ldrb	r2, [r0, #3]
   17f52:	f3c2 0202 	ubfx	r2, r2, #0, #3
   17f56:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   17f5a:	7902      	ldrb	r2, [r0, #4]
   17f5c:	f3c2 0204 	ubfx	r2, r2, #0, #5
   17f60:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   17f64:	7942      	ldrb	r2, [r0, #5]
   17f66:	f3c2 0203 	ubfx	r2, r2, #0, #4
   17f6a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   17f6e:	79c1      	ldrb	r1, [r0, #7]
   17f70:	7982      	ldrb	r2, [r0, #6]
   17f72:	f001 010f 	and.w	r1, r1, #15
   17f76:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   17f7a:	7a41      	ldrb	r1, [r0, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   17f7c:	879a      	strh	r2, [r3, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   17f7e:	7a02      	ldrb	r2, [r0, #8]
   17f80:	f001 010f 	and.w	r1, r1, #15
   17f84:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   17f88:	869a      	strh	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   17f8a:	2201      	movs	r2, #1
   17f8c:	721a      	strb	r2, [r3, #8]
   17f8e:	4770      	bx	lr
   17f90:	40024000 	.word	0x40024000

00017f94 <rtc_init>:
rtc_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:30
{
   17f94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   17f96:	2101      	movs	r1, #1
   17f98:	2009      	movs	r0, #9
   17f9a:	f7f8 fcbf 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   17f9e:	2201      	movs	r2, #1
   17fa0:	4b2f      	ldr	r3, [pc, #188]	; (18060 <rtc_init+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   17fa2:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   17fa4:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   17fa6:	f7ff ff9d 	bl	17ee4 <rtc_gettime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   17faa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   17fae:	f603 0326 	addw	r3, r3, #2086	; 0x826
   17fb2:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17fb6:	2b0f      	cmp	r3, #15
   17fb8:	d81e      	bhi.n	17ff8 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17fba:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17fbe:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   17fc2:	2b3b      	cmp	r3, #59	; 0x3b
   17fc4:	dc18      	bgt.n	17ff8 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17fc6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   17fca:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   17fce:	2b3b      	cmp	r3, #59	; 0x3b
   17fd0:	dc12      	bgt.n	17ff8 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   17fd2:	f89d 3006 	ldrb.w	r3, [sp, #6]
   17fd6:	f003 031f 	and.w	r3, r3, #31
   17fda:	2b17      	cmp	r3, #23
   17fdc:	dc0c      	bgt.n	17ff8 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   17fde:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   17fe2:	f3c3 030b 	ubfx	r3, r3, #0, #12
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   17fe6:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   17fea:	da05      	bge.n	17ff8 <rtc_init+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   17fec:	f89d 3009 	ldrb.w	r3, [sp, #9]
   17ff0:	f003 030f 	and.w	r3, r3, #15
   17ff4:	2b0c      	cmp	r3, #12
   17ff6:	dd2f      	ble.n	18058 <rtc_init+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   17ff8:	2201      	movs	r2, #1
   17ffa:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   17ffe:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   18000:	f362 0304 	bfi	r3, r2, #0, #5
   18004:	f88d 3008 	strb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   18008:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1800c:	f362 0303 	bfi	r3, r2, #0, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   18010:	f240 72da 	movw	r2, #2010	; 0x7da
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   18014:	f88d 3009 	strb.w	r3, [sp, #9]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   18018:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1801c:	f362 030b 	bfi	r3, r2, #0, #12
   18020:	f8ad 300a 	strh.w	r3, [sp, #10]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   18024:	f89d 3007 	ldrb.w	r3, [sp, #7]
   18028:	f36f 0302 	bfc	r3, #0, #3
   1802c:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   18030:	f89d 3006 	ldrb.w	r3, [sp, #6]
   18034:	f36f 0304 	bfc	r3, #0, #5
   18038:	f88d 3006 	strb.w	r3, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   1803c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   18040:	f36f 0305 	bfc	r3, #0, #6
   18044:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   18048:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1804c:	f36f 0305 	bfc	r3, #0, #6
   18050:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   18054:	f7ff ff6a 	bl	17f2c <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:53
}
   18058:	b005      	add	sp, #20
   1805a:	f85d fb04 	ldr.w	pc, [sp], #4
   1805e:	bf00      	nop
   18060:	40024000 	.word	0x40024000

00018064 <rtc_get_date_time_str>:
rtc_get_date_time_str():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:94
}

const char* rtc_get_date_time_str(void)
{
   18064:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:96
    time_t rawtime;
    time (&rawtime);
   18066:	a801      	add	r0, sp, #4
   18068:	f009 ff3e 	bl	21ee8 <time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:98

    return ctime (&rawtime);
   1806c:	a801      	add	r0, sp, #4
   1806e:	f006 fc53 	bl	1e918 <ctime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/rtc.c:99
}
   18072:	b003      	add	sp, #12
   18074:	f85d fb04 	ldr.w	pc, [sp], #4

00018078 <handle_eint_list>:
handle_eint_list():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   18078:	b570      	push	{r4, r5, r6, lr}
   1807a:	4605      	mov	r5, r0
   1807c:	460e      	mov	r6, r1
   1807e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   18080:	b10c      	cbz	r4, 18086 <handle_eint_list+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   18082:	682b      	ldr	r3, [r5, #0]
   18084:	b903      	cbnz	r3, 18088 <handle_eint_list+0x10>
   18086:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   18088:	6822      	ldr	r2, [r4, #0]
   1808a:	4213      	tst	r3, r2
   1808c:	d008      	beq.n	180a0 <handle_eint_list+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   1808e:	6863      	ldr	r3, [r4, #4]
   18090:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   18092:	6822      	ldr	r2, [r4, #0]
   18094:	682b      	ldr	r3, [r5, #0]
   18096:	ea23 0302 	bic.w	r3, r3, r2
   1809a:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   1809c:	6823      	ldr	r3, [r4, #0]
   1809e:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   180a0:	68a4      	ldr	r4, [r4, #8]
   180a2:	e7ed      	b.n	18080 <handle_eint_list+0x8>

000180a4 <eint3_enable.isra.0>:
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   180a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   180a6:	2401      	movs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   180a8:	4084      	lsls	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   180aa:	460f      	mov	r7, r1
   180ac:	4616      	mov	r6, r2
   180ae:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   180b0:	d010      	beq.n	180d4 <eint3_enable.isra.0+0x30>
   180b2:	b179      	cbz	r1, 180d4 <eint3_enable.isra.0+0x30>
   180b4:	200c      	movs	r0, #12
   180b6:	f007 f9a9 	bl	1f40c <malloc>
   180ba:	b158      	cbz	r0, 180d4 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   180bc:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   180c0:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   180c2:	e880 0090 	stmia.w	r0, {r4, r7}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   180c6:	6083      	str	r3, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   180c8:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   180ca:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   180cc:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   180ce:	4b02      	ldr	r3, [pc, #8]	; (180d8 <eint3_enable.isra.0+0x34>)
eint3_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:129
   180d0:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   180d2:	601a      	str	r2, [r3, #0]
   180d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   180d6:	bf00      	nop
   180d8:	e000e100 	.word	0xe000e100

000180dc <EINT3_IRQHandler>:
EINT3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:75
{
   180dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   180de:	4c18      	ldr	r4, [pc, #96]	; (18140 <EINT3_IRQHandler+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   180e0:	4918      	ldr	r1, [pc, #96]	; (18144 <EINT3_IRQHandler+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   180e2:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   180e4:	4668      	mov	r0, sp
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   180e6:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   180e8:	68a3      	ldr	r3, [r4, #8]
   180ea:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   180ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
   180ee:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   180f0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   180f2:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   180f4:	4b14      	ldr	r3, [pc, #80]	; (18148 <EINT3_IRQHandler+0x6c>)
   180f6:	681a      	ldr	r2, [r3, #0]
   180f8:	f7ff ffbe 	bl	18078 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   180fc:	4b13      	ldr	r3, [pc, #76]	; (1814c <EINT3_IRQHandler+0x70>)
   180fe:	4911      	ldr	r1, [pc, #68]	; (18144 <EINT3_IRQHandler+0x68>)
   18100:	681a      	ldr	r2, [r3, #0]
   18102:	a801      	add	r0, sp, #4
   18104:	f7ff ffb8 	bl	18078 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   18108:	4b11      	ldr	r3, [pc, #68]	; (18150 <EINT3_IRQHandler+0x74>)
   1810a:	4912      	ldr	r1, [pc, #72]	; (18154 <EINT3_IRQHandler+0x78>)
   1810c:	681a      	ldr	r2, [r3, #0]
   1810e:	a802      	add	r0, sp, #8
   18110:	f7ff ffb2 	bl	18078 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   18114:	4b10      	ldr	r3, [pc, #64]	; (18158 <EINT3_IRQHandler+0x7c>)
   18116:	490f      	ldr	r1, [pc, #60]	; (18154 <EINT3_IRQHandler+0x78>)
   18118:	681a      	ldr	r2, [r3, #0]
   1811a:	a803      	add	r0, sp, #12
   1811c:	f7ff ffac 	bl	18078 <handle_eint_list>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   18120:	9b00      	ldr	r3, [sp, #0]
   18122:	b90b      	cbnz	r3, 18128 <EINT3_IRQHandler+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   18124:	9b01      	ldr	r3, [sp, #4]
   18126:	b113      	cbz	r3, 1812e <EINT3_IRQHandler+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   18128:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1812c:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   1812e:	9b02      	ldr	r3, [sp, #8]
   18130:	b90b      	cbnz	r3, 18136 <EINT3_IRQHandler+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   18132:	9b03      	ldr	r3, [sp, #12]
   18134:	b113      	cbz	r3, 1813c <EINT3_IRQHandler+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   18136:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1813a:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:97
}
   1813c:	b004      	add	sp, #16
   1813e:	bd10      	pop	{r4, pc}
   18140:	40028080 	.word	0x40028080
   18144:	4002808c 	.word	0x4002808c
   18148:	2007c5dc 	.word	0x2007c5dc
   1814c:	2007c5d8 	.word	0x2007c5d8
   18150:	2007c5e4 	.word	0x2007c5e4
   18154:	400280ac 	.word	0x400280ac
   18158:	2007c5e0 	.word	0x2007c5e0

0001815c <eint3_enable_port0>:
eint3_enable_port0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   1815c:	b410      	push	{r4}
   1815e:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   18160:	2900      	cmp	r1, #0
   18162:	4a06      	ldr	r2, [pc, #24]	; (1817c <eint3_enable_port0+0x20>)
   18164:	4906      	ldr	r1, [pc, #24]	; (18180 <eint3_enable_port0+0x24>)
   18166:	4b07      	ldr	r3, [pc, #28]	; (18184 <eint3_enable_port0+0x28>)
   18168:	bf18      	it	ne
   1816a:	4613      	movne	r3, r2
   1816c:	4a06      	ldr	r2, [pc, #24]	; (18188 <eint3_enable_port0+0x2c>)
   1816e:	bf18      	it	ne
   18170:	460a      	movne	r2, r1
   18172:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   18174:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   18176:	f7ff bf95 	b.w	180a4 <eint3_enable.isra.0>
   1817a:	bf00      	nop
   1817c:	40028094 	.word	0x40028094
   18180:	2007c5d8 	.word	0x2007c5d8
   18184:	40028090 	.word	0x40028090
   18188:	2007c5dc 	.word	0x2007c5dc

0001818c <adc0_start_conversion>:
adc0_start_conversion():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   1818c:	4a07      	ldr	r2, [pc, #28]	; (181ac <adc0_start_conversion+0x20>)
   1818e:	6813      	ldr	r3, [r2, #0]
   18190:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   18194:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   18198:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   1819a:	2301      	movs	r3, #1
   1819c:	6811      	ldr	r1, [r2, #0]
   1819e:	fa03 f000 	lsl.w	r0, r3, r0
   181a2:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   181a6:	4308      	orrs	r0, r1
   181a8:	6010      	str	r0, [r2, #0]
   181aa:	4770      	bx	lr
   181ac:	40034000 	.word	0x40034000

000181b0 <ADC_IRQHandler>:
ADC_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   181b0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:44
{
   181b2:	b507      	push	{r0, r1, r2, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   181b4:	4a0d      	ldr	r2, [pc, #52]	; (181ec <ADC_IRQHandler+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   181b6:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   181b8:	6852      	ldr	r2, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   181ba:	480d      	ldr	r0, [pc, #52]	; (181f0 <ADC_IRQHandler+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   181bc:	f3c2 120b 	ubfx	r2, r2, #4, #12
   181c0:	f8ad 2002 	strh.w	r2, [sp, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   181c4:	f10d 0102 	add.w	r1, sp, #2
   181c8:	aa01      	add	r2, sp, #4
   181ca:	6800      	ldr	r0, [r0, #0]
   181cc:	f000 fea4 	bl	18f18 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   181d0:	9b01      	ldr	r3, [sp, #4]
   181d2:	b13b      	cbz	r3, 181e4 <ADC_IRQHandler+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   181d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   181d8:	4b06      	ldr	r3, [pc, #24]	; (181f4 <ADC_IRQHandler+0x44>)
   181da:	601a      	str	r2, [r3, #0]
   181dc:	f3bf 8f4f 	dsb	sy
   181e0:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:52
}
   181e4:	b003      	add	sp, #12
   181e6:	f85d fb04 	ldr.w	pc, [sp], #4
   181ea:	bf00      	nop
   181ec:	40034000 	.word	0x40034000
   181f0:	2007c5ec 	.word	0x2007c5ec
   181f4:	e000ed04 	.word	0xe000ed04

000181f8 <adc0_init>:
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:55
{
   181f8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   181fa:	f7f8 fadd 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   181fe:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   18200:	08c4      	lsrs	r4, r0, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   18202:	200c      	movs	r0, #12
   18204:	f7f8 fb8a 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   18208:	2103      	movs	r1, #3
   1820a:	200c      	movs	r0, #12
   1820c:	f7f8 fba0 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   18210:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   18214:	4a10      	ldr	r2, [pc, #64]	; (18258 <adc0_init+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   18216:	4911      	ldr	r1, [pc, #68]	; (1825c <adc0_init+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   18218:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   1821a:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   1821c:	fbb4 f0f3 	udiv	r0, r4, r3
   18220:	4288      	cmp	r0, r1
   18222:	d814      	bhi.n	1824e <adc0_init+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   18224:	6811      	ldr	r1, [r2, #0]
   18226:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   1822a:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   1822c:	2001      	movs	r0, #1
   1822e:	f000 fe61 	bl	18ef4 <xQueueCreateMutex>
   18232:	4b0b      	ldr	r3, [pc, #44]	; (18260 <adc0_init+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   18234:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   18236:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   18238:	2102      	movs	r1, #2
   1823a:	2001      	movs	r0, #1
   1823c:	f000 fdb6 	bl	18dac <xQueueGenericCreate>
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   18240:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:74
   18244:	4b07      	ldr	r3, [pc, #28]	; (18264 <adc0_init+0x6c>)
   18246:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
   18248:	4b07      	ldr	r3, [pc, #28]	; (18268 <adc0_init+0x70>)
   1824a:	601a      	str	r2, [r3, #0]
   1824c:	bd10      	pop	{r4, pc}
adc0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   1824e:	3302      	adds	r3, #2
   18250:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   18254:	d1e2      	bne.n	1821c <adc0_init+0x24>
   18256:	e7e9      	b.n	1822c <adc0_init+0x34>
   18258:	40034000 	.word	0x40034000
   1825c:	00c65d3f 	.word	0x00c65d3f
   18260:	2007c5e8 	.word	0x2007c5e8
   18264:	2007c5ec 	.word	0x2007c5ec
   18268:	e000e100 	.word	0xe000e100

0001826c <adc0_get_reading>:
adc0_get_reading():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   1826c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   1826e:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   18270:	2807      	cmp	r0, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:98
{
   18272:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   18274:	f8ad 4006 	strh.w	r4, [sp, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   18278:	d81d      	bhi.n	182b6 <adc0_get_reading+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   1827a:	f001 fcb5 	bl	19be8 <xTaskGetSchedulerState>
   1827e:	2802      	cmp	r0, #2
   18280:	4e15      	ldr	r6, [pc, #84]	; (182d8 <adc0_get_reading+0x6c>)
   18282:	d11c      	bne.n	182be <adc0_get_reading+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   18284:	4f15      	ldr	r7, [pc, #84]	; (182dc <adc0_get_reading+0x70>)
   18286:	4623      	mov	r3, r4
   18288:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1828c:	4621      	mov	r1, r4
   1828e:	6838      	ldr	r0, [r7, #0]
   18290:	f000 feb6 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   18294:	4628      	mov	r0, r5
   18296:	f7ff ff79 	bl	1818c <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   1829a:	4623      	mov	r3, r4
   1829c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   182a0:	f10d 0106 	add.w	r1, sp, #6
   182a4:	6830      	ldr	r0, [r6, #0]
   182a6:	f000 feab 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   182aa:	4623      	mov	r3, r4
   182ac:	4622      	mov	r2, r4
   182ae:	4621      	mov	r1, r4
   182b0:	6838      	ldr	r0, [r7, #0]
   182b2:	f000 fd9d 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   182b6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   182ba:	b003      	add	sp, #12
   182bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   182be:	4628      	mov	r0, r5
   182c0:	f7ff ff64 	bl	1818c <adc0_start_conversion>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   182c4:	2300      	movs	r3, #0
   182c6:	f10d 0106 	add.w	r1, sp, #6
   182ca:	461a      	mov	r2, r3
   182cc:	6830      	ldr	r0, [r6, #0]
   182ce:	f000 fe97 	bl	19000 <xQueueGenericReceive>
   182d2:	2800      	cmp	r0, #0
   182d4:	d0f6      	beq.n	182c4 <adc0_get_reading+0x58>
   182d6:	e7ee      	b.n	182b6 <adc0_get_reading+0x4a>
   182d8:	2007c5ec 	.word	0x2007c5ec
   182dc:	2007c5e8 	.word	0x2007c5e8

000182e0 <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   182e0:	b510      	push	{r4, lr}
   182e2:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   182e4:	4b02      	ldr	r3, [pc, #8]	; (182f0 <Uart3::~Uart3()+0x10>)
   182e6:	6003      	str	r3, [r0, #0]
   182e8:	f7ff fde2 	bl	17eb0 <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart3.hpp:39
   182ec:	4620      	mov	r0, r4
   182ee:	bd10      	pop	{r4, pc}
   182f0:	00026a08 	.word	0x00026a08

000182f4 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   182f4:	b510      	push	{r4, lr}
   182f6:	4604      	mov	r4, r0
   182f8:	f7ff fff2 	bl	182e0 <Uart3::~Uart3()>
   182fc:	4620      	mov	r0, r4
   182fe:	212c      	movs	r1, #44	; 0x2c
   18300:	f005 f991 	bl	1d626 <operator delete(void*, unsigned int)>
   18304:	4620      	mov	r0, r4
   18306:	bd10      	pop	{r4, pc}

00018308 <Uart3::init(unsigned int, int, int)>:
_ZN5Uart34initEjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
        Uart3::getInstance().handleInterrupt();
    }
}

bool Uart3::init(unsigned int baudRate, int rxQSize, int txQSize)
{
   18308:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1830a:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    // Configure PINSEL for UART3.
    // UART3 RX/TX is at P4.28 and P4.29
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   1830c:	490d      	ldr	r1, [pc, #52]	; (18344 <Uart3::init(unsigned int, int, int)+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   1830e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   18310:	6a48      	ldr	r0, [r1, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   18312:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:43
    LPC_PINCON->PINSEL9 &= ~(0xF << 24); // Clear values
   18314:	f020 6070 	bic.w	r0, r0, #251658240	; 0xf000000
   18318:	6248      	str	r0, [r1, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:44
    LPC_PINCON->PINSEL9 |=  (0xF << 24); // Set values for UART3 Rx/Tx
   1831a:	6a48      	ldr	r0, [r1, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:40
{
   1831c:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:44
    LPC_PINCON->PINSEL9 |=  (0xF << 24); // Set values for UART3 Rx/Tx
   1831e:	f040 6070 	orr.w	r0, r0, #251658240	; 0xf000000
   18322:	6248      	str	r0, [r1, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:47

    // Set UART3 Peripheral Clock divider to 1
    lpc_pclk(pclk_uart3, clkdiv_1);
   18324:	2101      	movs	r1, #1
   18326:	2019      	movs	r0, #25
   18328:	f7f8 fb12 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:48
    const unsigned int pclk = sys_get_cpu_clock();
   1832c:	f7f8 fa44 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:50

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
   18330:	9700      	str	r7, [sp, #0]
   18332:	4601      	mov	r1, r0
   18334:	4633      	mov	r3, r6
   18336:	462a      	mov	r2, r5
   18338:	4620      	mov	r0, r4
   1833a:	f7ff fccb 	bl	17cd4 <UartDev::init(unsigned int, unsigned int, int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:51
}
   1833e:	b003      	add	sp, #12
   18340:	bdf0      	pop	{r4, r5, r6, r7, pc}
   18342:	bf00      	nop
   18344:	4002c000 	.word	0x4002c000

00018348 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   18348:	b510      	push	{r4, lr}
   1834a:	4604      	mov	r4, r0
   1834c:	4903      	ldr	r1, [pc, #12]	; (1835c <Uart3::Uart3()+0x14>)
   1834e:	f7ff fcad 	bl	17cac <UartDev::UartDev(unsigned int*)>
   18352:	4b03      	ldr	r3, [pc, #12]	; (18360 <Uart3::Uart3()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   18354:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   18356:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   18358:	bd10      	pop	{r4, pc}
   1835a:	bf00      	nop
   1835c:	4009c000 	.word	0x4009c000
   18360:	00026aa0 	.word	0x00026aa0

00018364 <UART3_IRQHandler>:
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   18364:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   18366:	4c07      	ldr	r4, [pc, #28]	; (18384 <UART3_IRQHandler+0x20>)
   18368:	6823      	ldr	r3, [r4, #0]
   1836a:	b933      	cbnz	r3, 1837a <UART3_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1836c:	202c      	movs	r0, #44	; 0x2c
   1836e:	f7fe febd 	bl	170ec <operator new(unsigned int)>
   18372:	4605      	mov	r5, r0
   18374:	f7ff ffe8 	bl	18348 <Uart3::Uart3()>
   18378:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   1837a:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   1837c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   18380:	f7ff bc34 	b.w	17bec <UartDev::handleInterrupt()>
   18384:	2007c5f0 	.word	0x2007c5f0

00018388 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   18388:	b510      	push	{r4, lr}
   1838a:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   1838c:	4b02      	ldr	r3, [pc, #8]	; (18398 <Uart2::~Uart2()+0x10>)
   1838e:	6003      	str	r3, [r0, #0]
   18390:	f7ff fd8e 	bl	17eb0 <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart2.hpp:39
   18394:	4620      	mov	r0, r4
   18396:	bd10      	pop	{r4, pc}
   18398:	00026a08 	.word	0x00026a08

0001839c <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   1839c:	b510      	push	{r4, lr}
   1839e:	4604      	mov	r4, r0
   183a0:	f7ff fff2 	bl	18388 <Uart2::~Uart2()>
   183a4:	4620      	mov	r0, r4
   183a6:	212c      	movs	r1, #44	; 0x2c
   183a8:	f005 f93d 	bl	1d626 <operator delete(void*, unsigned int)>
   183ac:	4620      	mov	r0, r4
   183ae:	bd10      	pop	{r4, pc}

000183b0 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   183b0:	b510      	push	{r4, lr}
   183b2:	4604      	mov	r4, r0
   183b4:	4903      	ldr	r1, [pc, #12]	; (183c4 <Uart2::Uart2()+0x14>)
   183b6:	f7ff fc79 	bl	17cac <UartDev::UartDev(unsigned int*)>
   183ba:	4b03      	ldr	r3, [pc, #12]	; (183c8 <Uart2::Uart2()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   183bc:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   183be:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   183c0:	bd10      	pop	{r4, pc}
   183c2:	bf00      	nop
   183c4:	40098000 	.word	0x40098000
   183c8:	00026b08 	.word	0x00026b08

000183cc <UART2_IRQHandler>:
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   183cc:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   183ce:	4c07      	ldr	r4, [pc, #28]	; (183ec <UART2_IRQHandler+0x20>)
   183d0:	6823      	ldr	r3, [r4, #0]
   183d2:	b933      	cbnz	r3, 183e2 <UART2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   183d4:	202c      	movs	r0, #44	; 0x2c
   183d6:	f7fe fe89 	bl	170ec <operator new(unsigned int)>
   183da:	4605      	mov	r5, r0
   183dc:	f7ff ffe8 	bl	183b0 <Uart2::Uart2()>
   183e0:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   183e2:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   183e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   183e8:	f7ff bc00 	b.w	17bec <UartDev::handleInterrupt()>
   183ec:	2007c5f4 	.word	0x2007c5f4

000183f0 <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
    ok = true;
    return ok;
}

bool NordicStream::flush(void)
{
   183f0:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    bool ok = false;
    mesh_packet_t ackPkt;

    /* If destination address is not set, use the last source as destination */
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   183f2:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:81
{
   183f6:	b08a      	sub	sp, #40	; 0x28
   183f8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86
    const uint8_t dst = (0 == mDestAddr) ? mRxBuffer.pkt.nwk.src : mDestAddr;
   183fa:	b905      	cbnz	r5, 183fe <NordicStream::flush()+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:86 (discriminator 1)
   183fc:	7c45      	ldrb	r5, [r0, #17]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   183fe:	4628      	mov	r0, r5
   18400:	f7f9 fb5e 	bl	11ac0 <mesh_get_max_timeout_before_packet_fails>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)

    void *data = &(mTxBuffer.pkt.data[0]);
    uint8_t len = mTxBuffer.dataPtr;
    mTxBuffer.dataPtr = 0;
   18404:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:90 (discriminator 4)
    uint8_t len = mTxBuffer.dataPtr;
   18406:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:91 (discriminator 4)
    mTxBuffer.dataPtr = 0;
   1840a:	f884 2052 	strb.w	r2, [r4, #82]	; 0x52
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
    return mesh_is_ack_required(pkt);
}

/// Just a wrapper around mesh_send() to put all wireless related API at this file.
static inline bool wireless_send(uint8_t dst_addr, mesh_protocol_t protocol, const void *data, uint8_t len, uint8_t max_hops) {
    return mesh_send(dst_addr, protocol, data, len, max_hops);
   1840e:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:87 (discriminator 4)
    const uint32_t ackTimeoutMs = mesh_get_max_timeout_before_packet_fails(dst);
   18412:	4606      	mov	r6, r0
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59 (discriminator 4)
   18414:	9200      	str	r2, [sp, #0]
   18416:	2101      	movs	r1, #1
   18418:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   1841c:	4628      	mov	r0, r5
   1841e:	f7f9 f97d 	bl	1171c <mesh_send>
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:94 (discriminator 4)

    /* Send the packet and wait for the ACK */
    if ((ok = wireless_send(dst, mesh_pkt_ack, data, len, mHops)))
   18422:	4604      	mov	r4, r0
   18424:	b170      	cbz	r0, 18444 <NordicStream::flush()+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:96
    {
        if ((ok = wireless_get_ack_pkt(&ackPkt, ackTimeoutMs)))
   18426:	4631      	mov	r1, r6
   18428:	a802      	add	r0, sp, #8
   1842a:	f7f8 fe1f 	bl	1106c <wireless_get_ack_pkt>
   1842e:	b148      	cbz	r0, 18444 <NordicStream::flush()+0x54>
mesh_is_ack_ok():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/src/mesh.h:263
    return (mesh_pkt_ack_rsp == pRxPkt->info.pkt_type && pRxPkt->nwk.src == sentDstAddr);
   18430:	f89d 300c 	ldrb.w	r3, [sp, #12]
   18434:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   18438:	2bc0      	cmp	r3, #192	; 0xc0
   1843a:	d103      	bne.n	18444 <NordicStream::flush()+0x54>
   1843c:	f89d 3008 	ldrb.w	r3, [sp, #8]
   18440:	42ab      	cmp	r3, r5
   18442:	d000      	beq.n	18446 <NordicStream::flush()+0x56>
   18444:	2400      	movs	r4, #0
_ZN12NordicStream5flushEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:103
            ok = mesh_is_ack_ok(&ackPkt, dst);
        }
    }

    return ok;
}
   18446:	4620      	mov	r0, r4
   18448:	b00a      	add	sp, #40	; 0x28
   1844a:	bd70      	pop	{r4, r5, r6, pc}

0001844c <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/nrf_stream.hpp:44
 * You can use printf(), scanf() etc, and all the data will be sent to the
 * address set by setDestAddr().  If the destination address is not set, then
 * it will be sent to the last source that sent us data on nordic.
 *
 */
class NordicStream : public CharDev, public SingletonTemplate<NordicStream>
   1844c:	b510      	push	{r4, lr}
   1844e:	4604      	mov	r4, r0
   18450:	4b02      	ldr	r3, [pc, #8]	; (1845c <NordicStream::~NordicStream()+0x10>)
   18452:	6003      	str	r3, [r0, #0]
   18454:	f7ff fd2c 	bl	17eb0 <CharDev::~CharDev()>
   18458:	4620      	mov	r0, r4
   1845a:	bd10      	pop	{r4, pc}
   1845c:	00026b80 	.word	0x00026b80

00018460 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   18460:	b510      	push	{r4, lr}
   18462:	4604      	mov	r4, r0
   18464:	f7ff fff2 	bl	1844c <NordicStream::~NordicStream()>
   18468:	4620      	mov	r0, r4
   1846a:	2158      	movs	r1, #88	; 0x58
   1846c:	f005 f8db 	bl	1d626 <operator delete(void*, unsigned int)>
   18470:	4620      	mov	r0, r4
   18472:	bd10      	pop	{r4, pc}

00018474 <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:64
{
   18474:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   18476:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   1847a:	1c62      	adds	r2, r4, #1
   1847c:	b2d2      	uxtb	r2, r2
   1847e:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   18480:	2a17      	cmp	r2, #23
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:68
    mTxBuffer.pkt.data[mTxBuffer.dataPtr++] = out;
   18482:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   18486:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:71
    if (mTxBuffer.dataPtr >= MESH_DATA_PAYLOAD_SIZE) {
   1848a:	d902      	bls.n	18492 <NordicStream::putChar(char, unsigned int)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:72
        ok = flush();
   1848c:	6803      	ldr	r3, [r0, #0]
   1848e:	689b      	ldr	r3, [r3, #8]
   18490:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:78
}
   18492:	2001      	movs	r0, #1
   18494:	bd10      	pop	{r4, pc}

00018496 <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   18496:	b570      	push	{r4, r5, r6, lr}
   18498:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   1849a:	7e03      	ldrb	r3, [r0, #24]
   1849c:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:45
{
   184a0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:46
    bool dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   184a2:	4299      	cmp	r1, r3
   184a4:	bfb4      	ite	lt
   184a6:	2501      	movlt	r5, #1
   184a8:	2500      	movge	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:49
    if (!dataAvailable) {
   184aa:	db0b      	blt.n	184c4 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:50
        if (wireless_get_rx_pkt(&(mRxBuffer.pkt), timeout)) {
   184ac:	4611      	mov	r1, r2
   184ae:	3011      	adds	r0, #17
   184b0:	f7f8 fdd4 	bl	1105c <wireless_get_rx_pkt>
   184b4:	b130      	cbz	r0, 184c4 <NordicStream::getChar(char*, unsigned int)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   184b6:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   184b8:	7e25      	ldrb	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:51
            mRxBuffer.dataPtr = 0;
   184ba:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:52
            dataAvailable = (mRxBuffer.dataPtr < mRxBuffer.pkt.info.data_len);
   184be:	1aed      	subs	r5, r5, r3
   184c0:	bf18      	it	ne
   184c2:	2501      	movne	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:56
    if (dataAvailable) {
   184c4:	b13d      	cbz	r5, 184d6 <NordicStream::getChar(char*, unsigned int)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:57
        *pInputChar = mRxBuffer.pkt.data[mRxBuffer.dataPtr++];
   184c6:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   184ca:	1c5a      	adds	r2, r3, #1
   184cc:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   184d0:	441c      	add	r4, r3
   184d2:	7e63      	ldrb	r3, [r4, #25]
   184d4:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:61
}
   184d6:	4628      	mov	r0, r5
   184d8:	bd70      	pop	{r4, r5, r6, pc}
   184da:	Address 0x00000000000184da is out of bounds.


000184dc <NordicStream::NordicStream()>:
_ZN12NordicStreamC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   184dc:	b570      	push	{r4, r5, r6, lr}
   184de:	4604      	mov	r4, r0
   184e0:	f7ff fcd6 	bl	17e90 <CharDev::CharDev()>
   184e4:	4b0c      	ldr	r3, [pc, #48]	; (18518 <NordicStream::NordicStream()+0x3c>)
   184e6:	2500      	movs	r5, #0
   184e8:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   184ea:	2621      	movs	r6, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   184ec:	2303      	movs	r3, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   184ee:	4632      	mov	r2, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   184f0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   184f4:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:31
NordicStream::NordicStream(void) : mDestAddr(0), mHops(NRF_DEFAULT_HOPS)
   184f6:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:33
    memset(&mRxBuffer, 0, sizeof(mRxBuffer));
   184fa:	f104 0011 	add.w	r0, r4, #17
   184fe:	f006 ffe9 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:34
    memset(&mTxBuffer, 0, sizeof(mTxBuffer));
   18502:	4632      	mov	r2, r6
   18504:	4629      	mov	r1, r5
   18506:	f104 0032 	add.w	r0, r4, #50	; 0x32
   1850a:	f006 ffe3 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:41
    mesh_set_retry_count(MESH_RETRY_COUNT_MAX);
   1850e:	2007      	movs	r0, #7
   18510:	f7f8 ffd4 	bl	114bc <mesh_set_retry_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/nrf_stream.cpp:42
}
   18514:	4620      	mov	r0, r4
   18516:	bd70      	pop	{r4, r5, r6, pc}
   18518:	00026b80 	.word	0x00026b80

0001851c <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   1851c:	b510      	push	{r4, lr}
   1851e:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   18520:	4b02      	ldr	r3, [pc, #8]	; (1852c <Uart0::~Uart0()+0x10>)
   18522:	6003      	str	r3, [r0, #0]
   18524:	f7ff fcc4 	bl	17eb0 <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:39
   18528:	4620      	mov	r0, r4
   1852a:	bd10      	pop	{r4, pc}
   1852c:	00026a08 	.word	0x00026a08

00018530 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   18530:	b510      	push	{r4, lr}
   18532:	4604      	mov	r4, r0
   18534:	f7ff fff2 	bl	1851c <Uart0::~Uart0()>
   18538:	4620      	mov	r0, r4
   1853a:	212c      	movs	r1, #44	; 0x2c
   1853c:	f005 f873 	bl	1d626 <operator delete(void*, unsigned int)>
   18540:	4620      	mov	r0, r4
   18542:	bd10      	pop	{r4, pc}

00018544 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
        Uart0::getInstance().handleInterrupt();
    }
}

bool Uart0::init(unsigned int baudRate, int rxQSize, int txQSize)
{
   18544:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   18546:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    // Configure PINSEL for UART0
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   18548:	490d      	ldr	r1, [pc, #52]	; (18580 <Uart0::init(unsigned int, int, int)+0x3c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   1854a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   1854c:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   1854e:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:42
    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   18550:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   18554:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   18556:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:40
{
   18558:	461f      	mov	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:43
    LPC_PINCON->PINSEL0 |=  (0x5 << 4); // Set values for UART0 Rx/Tx
   1855a:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   1855e:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:46

    // Set UART0 Peripheral Clock divider to 1
    lpc_pclk(pclk_uart0, clkdiv_1);
   18560:	2101      	movs	r1, #1
   18562:	2003      	movs	r0, #3
   18564:	f7f8 f9f4 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:47
    const unsigned int pclk = sys_get_cpu_clock();
   18568:	f7f8 f926 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:49

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
   1856c:	9700      	str	r7, [sp, #0]
   1856e:	4601      	mov	r1, r0
   18570:	4633      	mov	r3, r6
   18572:	462a      	mov	r2, r5
   18574:	4620      	mov	r0, r4
   18576:	f7ff fbad 	bl	17cd4 <UartDev::init(unsigned int, unsigned int, int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:50
}
   1857a:	b003      	add	sp, #12
   1857c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1857e:	bf00      	nop
   18580:	4002c000 	.word	0x4002c000

00018584 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   18584:	b510      	push	{r4, lr}
   18586:	4604      	mov	r4, r0
   18588:	4903      	ldr	r1, [pc, #12]	; (18598 <Uart0::Uart0()+0x14>)
   1858a:	f7ff fb8f 	bl	17cac <UartDev::UartDev(unsigned int*)>
   1858e:	4b03      	ldr	r3, [pc, #12]	; (1859c <Uart0::Uart0()+0x18>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   18590:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   18592:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   18594:	bd10      	pop	{r4, pc}
   18596:	bf00      	nop
   18598:	4000c000 	.word	0x4000c000
   1859c:	00026be8 	.word	0x00026be8

000185a0 <UART0_IRQHandler>:
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   185a0:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   185a2:	4c07      	ldr	r4, [pc, #28]	; (185c0 <UART0_IRQHandler+0x20>)
   185a4:	6823      	ldr	r3, [r4, #0]
   185a6:	b933      	cbnz	r3, 185b6 <UART0_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   185a8:	202c      	movs	r0, #44	; 0x2c
   185aa:	f7fe fd9f 	bl	170ec <operator new(unsigned int)>
   185ae:	4605      	mov	r5, r0
   185b0:	f7ff ffe8 	bl	18584 <Uart0::Uart0()>
   185b4:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   185b6:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   185b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   185bc:	f7ff bb16 	b.w	17bec <UartDev::handleInterrupt()>
   185c0:	2007c5f8 	.word	0x2007c5f8

000185c4 <ssp1_dma_init>:
ssp1_dma_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   185c4:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   185c6:	2101      	movs	r1, #1
   185c8:	201d      	movs	r0, #29
   185ca:	f7f8 f9a7 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   185ce:	2201      	movs	r2, #1
   185d0:	4b02      	ldr	r3, [pc, #8]	; (185dc <ssp1_dma_init+0x18>)
   185d2:	631a      	str	r2, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   185d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   185d6:	07d2      	lsls	r2, r2, #31
   185d8:	d5fc      	bpl.n	185d4 <ssp1_dma_init+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   185da:	bd08      	pop	{r3, pc}
   185dc:	50004000 	.word	0x50004000

000185e0 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   185e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   185e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   185e6:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   185ea:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   185ec:	d24a      	bcs.n	18684 <ssp1_dma_transfer_block+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   185ee:	4b27      	ldr	r3, [pc, #156]	; (1868c <ssp1_dma_transfer_block+0xac>)
   185f0:	691c      	ldr	r4, [r3, #16]
   185f2:	07e5      	lsls	r5, r4, #31
   185f4:	d448      	bmi.n	18688 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   185f6:	4c26      	ldr	r4, [pc, #152]	; (18690 <ssp1_dma_transfer_block+0xb0>)
   185f8:	6924      	ldr	r4, [r4, #16]
   185fa:	07e4      	lsls	r4, r4, #31
   185fc:	d444      	bmi.n	18688 <ssp1_dma_transfer_block+0xa8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   185fe:	4c25      	ldr	r4, [pc, #148]	; (18694 <ssp1_dma_transfer_block+0xb4>)
   18600:	68e5      	ldr	r5, [r4, #12]
   18602:	076d      	lsls	r5, r5, #29
   18604:	d435      	bmi.n	18672 <ssp1_dma_transfer_block+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   18606:	2503      	movs	r5, #3
   18608:	4c23      	ldr	r4, [pc, #140]	; (18698 <ssp1_dma_transfer_block+0xb8>)
   1860a:	60a5      	str	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   1860c:	6125      	str	r5, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   1860e:	4d23      	ldr	r5, [pc, #140]	; (1869c <ssp1_dma_transfer_block+0xbc>)
   18610:	601d      	str	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   18612:	2a00      	cmp	r2, #0
   18614:	d02f      	beq.n	18676 <ssp1_dma_transfer_block+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   18616:	ac01      	add	r4, sp, #4
   18618:	605c      	str	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   1861a:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   1861e:	60dc      	str	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   18620:	2400      	movs	r4, #0
   18622:	609c      	str	r4, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   18624:	f241 0406 	movw	r4, #4102	; 0x1006
   18628:	611c      	str	r4, [r3, #16]
   1862a:	4c19      	ldr	r4, [pc, #100]	; (18690 <ssp1_dma_transfer_block+0xb0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   1862c:	b33a      	cbz	r2, 1867e <ssp1_dma_transfer_block+0x9e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   1862e:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   18630:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   18634:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   18636:	60e1      	str	r1, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   18638:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   1863a:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   1863c:	f44f 6208 	mov.w	r2, #2176	; 0x880
   18640:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   18642:	691a      	ldr	r2, [r3, #16]
   18644:	f042 0201 	orr.w	r2, r2, #1
   18648:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   1864a:	6922      	ldr	r2, [r4, #16]
   1864c:	f042 0201 	orr.w	r2, r2, #1
   18650:	6122      	str	r2, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   18652:	4a10      	ldr	r2, [pc, #64]	; (18694 <ssp1_dma_transfer_block+0xb4>)
   18654:	6a51      	ldr	r1, [r2, #36]	; 0x24
   18656:	f041 0103 	orr.w	r1, r1, #3
   1865a:	6251      	str	r1, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   1865c:	68d8      	ldr	r0, [r3, #12]
   1865e:	f3c0 000b 	ubfx	r0, r0, #0, #12
   18662:	2800      	cmp	r0, #0
   18664:	d1fa      	bne.n	1865c <ssp1_dma_transfer_block+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   18666:	6a53      	ldr	r3, [r2, #36]	; 0x24
   18668:	f023 0303 	bic.w	r3, r3, #3
   1866c:	6253      	str	r3, [r2, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   1866e:	b003      	add	sp, #12
   18670:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   18672:	68a5      	ldr	r5, [r4, #8]
   18674:	e7c4      	b.n	18600 <ssp1_dma_transfer_block+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   18676:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   18678:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   1867c:	e7cf      	b.n	1861e <ssp1_dma_transfer_block+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   1867e:	aa01      	add	r2, sp, #4
   18680:	6022      	str	r2, [r4, #0]
   18682:	e7d7      	b.n	18634 <ssp1_dma_transfer_block+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   18684:	2001      	movs	r0, #1
   18686:	e7f2      	b.n	1866e <ssp1_dma_transfer_block+0x8e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   18688:	2002      	movs	r0, #2
   1868a:	e7f0      	b.n	1866e <ssp1_dma_transfer_block+0x8e>
   1868c:	50004120 	.word	0x50004120
   18690:	50004100 	.word	0x50004100
   18694:	40030000 	.word	0x40030000
   18698:	50004000 	.word	0x50004000
   1869c:	40030008 	.word	0x40030008

000186a0 <spi1_lock>:
spi1_lock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   186a0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   186a2:	4c0a      	ldr	r4, [pc, #40]	; (186cc <spi1_lock+0x2c>)
   186a4:	6823      	ldr	r3, [r4, #0]
   186a6:	b91b      	cbnz	r3, 186b0 <spi1_lock+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   186a8:	2001      	movs	r0, #1
   186aa:	f000 fc23 	bl	18ef4 <xQueueCreateMutex>
   186ae:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   186b0:	f001 fa9a 	bl	19be8 <xTaskGetSchedulerState>
   186b4:	2802      	cmp	r0, #2
   186b6:	d108      	bne.n	186ca <spi1_lock+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   186b8:	2300      	movs	r3, #0
   186ba:	6820      	ldr	r0, [r4, #0]
   186bc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   186c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   186c4:	4619      	mov	r1, r3
   186c6:	f000 bc9b 	b.w	19000 <xQueueGenericReceive>
   186ca:	bd10      	pop	{r4, pc}
   186cc:	2007c5fc 	.word	0x2007c5fc

000186d0 <spi1_unlock>:
spi1_unlock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   186d0:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   186d2:	f001 fa89 	bl	19be8 <xTaskGetSchedulerState>
   186d6:	2802      	cmp	r0, #2
   186d8:	d108      	bne.n	186ec <spi1_unlock+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   186da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   186de:	2300      	movs	r3, #0
   186e0:	4803      	ldr	r0, [pc, #12]	; (186f0 <spi1_unlock+0x20>)
   186e2:	461a      	mov	r2, r3
   186e4:	4619      	mov	r1, r3
   186e6:	6800      	ldr	r0, [r0, #0]
   186e8:	f000 bb82 	b.w	18df0 <xQueueGenericSend>
   186ec:	bd10      	pop	{r4, pc}
   186ee:	bf00      	nop
   186f0:	2007c5fc 	.word	0x2007c5fc

000186f4 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   186f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   186f6:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   186f8:	4b05      	ldr	r3, [pc, #20]	; (18710 <lpc_timer_get_struct+0x1c>)
   186fa:	f10d 0e10 	add.w	lr, sp, #16
   186fe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   18700:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   18704:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   18708:	f854 0c10 	ldr.w	r0, [r4, #-16]
   1870c:	b004      	add	sp, #16
   1870e:	bd10      	pop	{r4, pc}
   18710:	00026bfc 	.word	0x00026bfc

00018714 <lpc_timer_enable>:
lpc_timer_enable():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   18714:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   18716:	460f      	mov	r7, r1
   18718:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   1871a:	f7ff ffeb 	bl	186f4 <lpc_timer_get_struct>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   1871e:	2317      	movs	r3, #23
   18720:	2401      	movs	r4, #1
   18722:	2216      	movs	r2, #22
   18724:	2102      	movs	r1, #2
   18726:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   1872a:	f88d 3007 	strb.w	r3, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   1872e:	ab02      	add	r3, sp, #8
   18730:	441e      	add	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   18732:	f88d 2002 	strb.w	r2, [sp, #2]
   18736:	f88d 1001 	strb.w	r1, [sp, #1]
   1873a:	f88d 4000 	strb.w	r4, [sp]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   1873e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   18740:	f88d 1005 	strb.w	r1, [sp, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   18744:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   18748:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   1874a:	f88d 2006 	strb.w	r2, [sp, #6]
   1874e:	f88d 4004 	strb.w	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   18752:	f7f8 f8e3 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   18756:	4621      	mov	r1, r4
   18758:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   1875c:	f7f8 f8f8 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   18760:	2300      	movs	r3, #0
   18762:	60ab      	str	r3, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   18764:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   18766:	672b      	str	r3, [r5, #112]	; 0x70
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   18768:	f7f8 f826 	bl	107b8 <sys_get_cpu_clock>
   1876c:	4b03      	ldr	r3, [pc, #12]	; (1877c <lpc_timer_enable+0x68>)
   1876e:	fbb0 f0f3 	udiv	r0, r0, r3
   18772:	4347      	muls	r7, r0
   18774:	60ef      	str	r7, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   18776:	b003      	add	sp, #12
   18778:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1877a:	bf00      	nop
   1877c:	000f4240 	.word	0x000f4240

00018780 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
}



bool I2C2::init(unsigned int speedInKhz)
{
   18780:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   18782:	4b17      	ldr	r3, [pc, #92]	; (187e0 <I2C2::init(unsigned int)+0x60>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   18784:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   18786:	695c      	ldr	r4, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   18788:	4b16      	ldr	r3, [pc, #88]	; (187e4 <I2C2::init(unsigned int)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   1878a:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   1878c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   1878e:	201a      	movs	r0, #26
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   18790:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   18794:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   18796:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   18798:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   1879c:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   187a0:	641a      	str	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   187a2:	6e99      	ldr	r1, [r3, #104]	; 0x68
   187a4:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   187a8:	6699      	str	r1, [r3, #104]	; 0x68
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   187aa:	6819      	ldr	r1, [r3, #0]
   187ac:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   187b0:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   187b2:	6819      	ldr	r1, [r3, #0]
   187b4:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   187b8:	6019      	str	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   187ba:	2103      	movs	r1, #3
   187bc:	f7f8 f8c8 	bl	10950 <lpc_pclk>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   187c0:	f7f7 fffa 	bl	107b8 <sys_get_cpu_clock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   187c4:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   187c8:	d106      	bne.n	187d8 <I2C2::init(unsigned int)+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   187ca:	4632      	mov	r2, r6
   187cc:	08c1      	lsrs	r1, r0, #3
   187ce:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   187d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   187d4:	f7ff b848 	b.w	17868 <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:134
    /**
     * Disables I2C operation
     * This can be used to disable all I2C operations in case of severe I2C Bus Failure
     * @warning Once disabled, I2C cannot be enabled again
     */
    void disableOperation() { mDisableOperation = true; }
   187d8:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   187da:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/i2c_base.hpp:134
   187dc:	716b      	strb	r3, [r5, #5]
_ZN4I2C24initEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   187de:	bd70      	pop	{r4, r5, r6, pc}
   187e0:	2009c000 	.word	0x2009c000
   187e4:	4002c000 	.word	0x4002c000

000187e8 <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   187e8:	b510      	push	{r4, lr}
   187ea:	4604      	mov	r4, r0
   187ec:	4902      	ldr	r1, [pc, #8]	; (187f8 <I2C2::I2C2()+0x10>)
   187ee:	f7ff f813 	bl	17818 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   187f2:	4620      	mov	r0, r4
   187f4:	bd10      	pop	{r4, pc}
   187f6:	bf00      	nop
   187f8:	400a0000 	.word	0x400a0000

000187fc <I2C2_IRQHandler>:
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   187fc:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   187fe:	4c07      	ldr	r4, [pc, #28]	; (1881c <I2C2_IRQHandler+0x20>)
   18800:	6823      	ldr	r3, [r4, #0]
   18802:	b933      	cbnz	r3, 18812 <I2C2_IRQHandler+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   18804:	2024      	movs	r0, #36	; 0x24
   18806:	f7fe fc71 	bl	170ec <operator new(unsigned int)>
   1880a:	4605      	mov	r5, r0
   1880c:	f7ff ffec 	bl	187e8 <I2C2::I2C2()>
   18810:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   18812:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   18814:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   18818:	f7ff b92c 	b.w	17a74 <I2C_Base::handleInterrupt()>
   1881c:	2007c600 	.word	0x2007c600

00018820 <CAN_tx_now>:
CAN_tx_now():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   18820:	6802      	ldr	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:156
{
   18822:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   18824:	69d3      	ldr	r3, [r2, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   18826:	f013 0304 	ands.w	r3, r3, #4
   1882a:	d010      	beq.n	1884e <CAN_tx_now+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   1882c:	f102 0330 	add.w	r3, r2, #48	; 0x30
   18830:	f101 0410 	add.w	r4, r1, #16
   18834:	f851 5b04 	ldr.w	r5, [r1], #4
   18838:	42a1      	cmp	r1, r4
   1883a:	f843 5b04 	str.w	r5, [r3], #4
   1883e:	d1f9      	bne.n	18834 <CAN_tx_now+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   18840:	8a43      	ldrh	r3, [r0, #18]
   18842:	3301      	adds	r3, #1
   18844:	8243      	strh	r3, [r0, #18]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   18846:	2321      	movs	r3, #33	; 0x21
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   18848:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   1884a:	6053      	str	r3, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   1884c:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   1884e:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:210
}
   18850:	bd30      	pop	{r4, r5, pc}
   18852:	Address 0x0000000000018852 is out of bounds.


00018854 <CAN_handle_isr>:
CAN_handle_isr():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   18854:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   18858:	4c26      	ldr	r4, [pc, #152]	; (188f4 <CAN_handle_isr+0xa0>)
   1885a:	0145      	lsls	r5, r0, #5
   1885c:	f854 8005 	ldr.w	r8, [r4, r5]
   18860:	1967      	adds	r7, r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   18862:	f8d8 600c 	ldr.w	r6, [r8, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   18866:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1886a:	4333      	orrs	r3, r6
   1886c:	07d9      	lsls	r1, r3, #31
   1886e:	d516      	bpl.n	1889e <CAN_handle_isr+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   18870:	6878      	ldr	r0, [r7, #4]
   18872:	f000 fc9c 	bl	191ae <uxQueueMessagesWaitingFromISR>
   18876:	89fb      	ldrh	r3, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   18878:	f108 0120 	add.w	r1, r8, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   1887c:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   1887e:	f04f 0300 	mov.w	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   18882:	bf88      	it	hi
   18884:	81f8      	strhhi	r0, [r7, #14]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   18886:	1967      	adds	r7, r4, r5
   18888:	461a      	mov	r2, r3
   1888a:	6878      	ldr	r0, [r7, #4]
   1888c:	f000 fb44 	bl	18f18 <xQueueGenericSendFromISR>
   18890:	b358      	cbz	r0, 188ea <CAN_handle_isr+0x96>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   18892:	8abb      	ldrh	r3, [r7, #20]
   18894:	3301      	adds	r3, #1
   18896:	82bb      	strh	r3, [r7, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   18898:	2304      	movs	r3, #4
   1889a:	f8c8 3004 	str.w	r3, [r8, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   1889e:	f240 6302 	movw	r3, #1538	; 0x602
   188a2:	421e      	tst	r6, r3
   188a4:	d012      	beq.n	188cc <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   188a6:	1967      	adds	r7, r4, r5
   188a8:	68b8      	ldr	r0, [r7, #8]
   188aa:	f000 fc80 	bl	191ae <uxQueueMessagesWaitingFromISR>
   188ae:	8a3b      	ldrh	r3, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   188b0:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   188b2:	4298      	cmp	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   188b4:	bf88      	it	hi
   188b6:	8238      	strhhi	r0, [r7, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   188b8:	1967      	adds	r7, r4, r5
   188ba:	4669      	mov	r1, sp
   188bc:	68b8      	ldr	r0, [r7, #8]
   188be:	f000 fc39 	bl	19134 <xQueueReceiveFromISR>
   188c2:	b118      	cbz	r0, 188cc <CAN_handle_isr+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   188c4:	4669      	mov	r1, sp
   188c6:	4638      	mov	r0, r7
   188c8:	f7ff ffaa 	bl	18820 <CAN_tx_now>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   188cc:	06b2      	lsls	r2, r6, #26
   188ce:	d503      	bpl.n	188d8 <CAN_handle_isr+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   188d0:	1963      	adds	r3, r4, r5
   188d2:	699b      	ldr	r3, [r3, #24]
   188d4:	4630      	mov	r0, r6
   188d6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   188d8:	0733      	lsls	r3, r6, #28
   188da:	d503      	bpl.n	188e4 <CAN_handle_isr+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   188dc:	442c      	add	r4, r5
   188de:	69e3      	ldr	r3, [r4, #28]
   188e0:	4630      	mov	r0, r6
   188e2:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   188e4:	b004      	add	sp, #16
   188e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   188ea:	89bb      	ldrh	r3, [r7, #12]
   188ec:	3301      	adds	r3, #1
   188ee:	81bb      	strh	r3, [r7, #12]
   188f0:	e7d2      	b.n	18898 <CAN_handle_isr+0x44>
   188f2:	bf00      	nop
   188f4:	2007c09c 	.word	0x2007c09c

000188f8 <CAN_IRQHandler>:
CAN_IRQHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   188f8:	4b08      	ldr	r3, [pc, #32]	; (1891c <CAN_IRQHandler+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:267
{
   188fa:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   188fc:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   18900:	04a2      	lsls	r2, r4, #18
   18902:	d502      	bpl.n	1890a <CAN_IRQHandler+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   18904:	2000      	movs	r0, #0
   18906:	f7ff ffa5 	bl	18854 <CAN_handle_isr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   1890a:	0463      	lsls	r3, r4, #17
   1890c:	d504      	bpl.n	18918 <CAN_IRQHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   1890e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   18912:	2001      	movs	r0, #1
   18914:	f7ff bf9e 	b.w	18854 <CAN_handle_isr>
   18918:	bd10      	pop	{r4, pc}
   1891a:	bf00      	nop
   1891c:	400fc000 	.word	0x400fc000

00018920 <prvTaskExitError>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   18920:	f04f 0310 	mov.w	r3, #16
   18924:	f383 8811 	msr	BASEPRI, r3
   18928:	f3bf 8f6f 	isb	sy
   1892c:	f3bf 8f4f 	dsb	sy
   18930:	e7fe      	b.n	18930 <prvTaskExitError+0x10>
prvTaskExitError():
   18932:	Address 0x0000000000018932 is out of bounds.


00018934 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:270
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
   18934:	4806      	ldr	r0, [pc, #24]	; (18950 <prvPortStartFirstTask+0x1c>)
   18936:	6800      	ldr	r0, [r0, #0]
   18938:	6800      	ldr	r0, [r0, #0]
   1893a:	f380 8808 	msr	MSP, r0
   1893e:	b662      	cpsie	i
   18940:	b661      	cpsie	f
   18942:	f3bf 8f4f 	dsb	sy
   18946:	f3bf 8f6f 	isb	sy
   1894a:	df00      	svc	0
   1894c:	bf00      	nop
   1894e:	0000      	.short	0x0000
   18950:	e000ed08 	.word	0xe000ed08

00018954 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   18954:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   18958:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   1895c:	4b05      	ldr	r3, [pc, #20]	; (18974 <pxPortInitialiseStack+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   1895e:	f021 0101 	bic.w	r1, r1, #1
   18962:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   18966:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   1896a:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
}
   1896e:	3840      	subs	r0, #64	; 0x40
   18970:	4770      	bx	lr
   18972:	bf00      	nop
   18974:	00018921 	.word	0x00018921
   18978:	ffffffff 	.word	0xffffffff
   1897c:	ffffffff 	.word	0xffffffff

00018980 <vPortSVCHandler>:
vPortSVCHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
	__asm volatile (
   18980:	4b07      	ldr	r3, [pc, #28]	; (189a0 <pxCurrentTCBConst2>)
   18982:	6819      	ldr	r1, [r3, #0]
   18984:	6808      	ldr	r0, [r1, #0]
   18986:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1898a:	f380 8809 	msr	PSP, r0
   1898e:	f3bf 8f6f 	isb	sy
   18992:	f04f 0000 	mov.w	r0, #0
   18996:	f380 8811 	msr	BASEPRI, r0
   1899a:	f04e 0e0d 	orr.w	lr, lr, #13
   1899e:	4770      	bx	lr

000189a0 <pxCurrentTCBConst2>:
   189a0:	2007c610 	.word	0x2007c610

000189a4 <vPortEndScheduler>:
vPortEndScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:364
	return 0;
}
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
   189a4:	4770      	bx	lr
   189a6:	Address 0x00000000000189a6 is out of bounds.


000189a8 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   189a8:	f04f 0310 	mov.w	r3, #16
   189ac:	f383 8811 	msr	BASEPRI, r3
   189b0:	f3bf 8f6f 	isb	sy
   189b4:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   189b8:	4a02      	ldr	r2, [pc, #8]	; (189c4 <vPortEnterCritical+0x1c>)
   189ba:	6813      	ldr	r3, [r2, #0]
   189bc:	3301      	adds	r3, #1
   189be:	6013      	str	r3, [r2, #0]
   189c0:	4770      	bx	lr
   189c2:	bf00      	nop
   189c4:	2007c604 	.word	0x2007c604

000189c8 <vPortExitCritical>:
vPortExitCritical():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   189c8:	4a03      	ldr	r2, [pc, #12]	; (189d8 <vPortExitCritical+0x10>)
   189ca:	6813      	ldr	r3, [r2, #0]
   189cc:	3b01      	subs	r3, #1
   189ce:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   189d0:	b90b      	cbnz	r3, 189d6 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   189d2:	f383 8811 	msr	BASEPRI, r3
   189d6:	4770      	bx	lr
   189d8:	2007c604 	.word	0x2007c604
vPortExitCritical():
   189dc:	ffffffff 	.word	0xffffffff

000189e0 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   189e0:	f3ef 8009 	mrs	r0, PSP
   189e4:	f3bf 8f6f 	isb	sy
   189e8:	4b0d      	ldr	r3, [pc, #52]	; (18a20 <pxCurrentTCBConst>)
   189ea:	681a      	ldr	r2, [r3, #0]
   189ec:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   189f0:	6010      	str	r0, [r2, #0]
   189f2:	e92d 4008 	stmdb	sp!, {r3, lr}
   189f6:	f04f 0010 	mov.w	r0, #16
   189fa:	f380 8811 	msr	BASEPRI, r0
   189fe:	f000 fef5 	bl	197ec <vTaskSwitchContext>
   18a02:	f04f 0000 	mov.w	r0, #0
   18a06:	f380 8811 	msr	BASEPRI, r0
   18a0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   18a0e:	6819      	ldr	r1, [r3, #0]
   18a10:	6808      	ldr	r0, [r1, #0]
   18a12:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   18a16:	f380 8809 	msr	PSP, r0
   18a1a:	f3bf 8f6f 	isb	sy
   18a1e:	4770      	bx	lr

00018a20 <pxCurrentTCBConst>:
   18a20:	2007c610 	.word	0x2007c610

00018a24 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   18a24:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   18a26:	f04f 0310 	mov.w	r3, #16
   18a2a:	f383 8811 	msr	BASEPRI, r3
   18a2e:	f3bf 8f6f 	isb	sy
   18a32:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   18a36:	f000 fda3 	bl	19580 <xTaskIncrementTick>
   18a3a:	b118      	cbz	r0, 18a44 <xPortSysTickHandler+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   18a3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18a40:	4b02      	ldr	r3, [pc, #8]	; (18a4c <xPortSysTickHandler+0x28>)
   18a42:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18a44:	2300      	movs	r3, #0
   18a46:	f383 8811 	msr	BASEPRI, r3
   18a4a:	bd08      	pop	{r3, pc}
   18a4c:	e000ed04 	.word	0xe000ed04

00018a50 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:626
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
   18a50:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   18a54:	4b02      	ldr	r3, [pc, #8]	; (18a60 <vPortSetupTimerInterrupt+0x10>)
   18a56:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:627
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
   18a58:	2207      	movs	r2, #7
   18a5a:	f843 2c04 	str.w	r2, [r3, #-4]
   18a5e:	4770      	bx	lr
   18a60:	e000e014 	.word	0xe000e014

00018a64 <xPortStartScheduler>:
xPortStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:289
{
   18a64:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:339
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
   18a66:	4b09      	ldr	r3, [pc, #36]	; (18a8c <xPortStartScheduler+0x28>)
   18a68:	681a      	ldr	r2, [r3, #0]
   18a6a:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   18a6e:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:340
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
   18a70:	681a      	ldr	r2, [r3, #0]
   18a72:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   18a76:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:344
	vPortSetupTimerInterrupt();
   18a78:	f7ff ffea 	bl	18a50 <vPortSetupTimerInterrupt>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:347
	uxCriticalNesting = 0;
   18a7c:	2200      	movs	r2, #0
   18a7e:	4b04      	ldr	r3, [pc, #16]	; (18a90 <xPortStartScheduler+0x2c>)
   18a80:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:350
	prvPortStartFirstTask();
   18a82:	f7ff ff57 	bl	18934 <prvPortStartFirstTask>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:356
	prvTaskExitError();
   18a86:	f7ff ff4b 	bl	18920 <prvTaskExitError>
   18a8a:	bf00      	nop
   18a8c:	e000ed20 	.word	0xe000ed20
   18a90:	2007c604 	.word	0x2007c604

00018a94 <rts_not_full_trace_init>:
rts_not_full_trace_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:36



// Init the run time counter that is not used by the full trace
void rts_not_full_trace_init( void )
{
   18a94:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:38
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   18a96:	f7f7 fd01 	bl	1049c <sys_get_uptime_us>
   18a9a:	4b02      	ldr	r3, [pc, #8]	; (18aa4 <rts_not_full_trace_init+0x10>)
   18a9c:	e9c3 0100 	strd	r0, r1, [r3]
   18aa0:	bd08      	pop	{r3, pc}
   18aa2:	bf00      	nop
   18aa4:	2007c608 	.word	0x2007c608

00018aa8 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
}

unsigned int rts_not_full_trace_get()
{
   18aa8:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   18aaa:	f7f7 fcf7 	bl	1049c <sys_get_uptime_us>
   18aae:	4b02      	ldr	r3, [pc, #8]	; (18ab8 <rts_not_full_trace_get+0x10>)
   18ab0:	681b      	ldr	r3, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   18ab2:	1ac0      	subs	r0, r0, r3
   18ab4:	bd08      	pop	{r3, pc}
   18ab6:	bf00      	nop
   18ab8:	2007c608 	.word	0x2007c608

00018abc <rts_not_full_trace_reset>:
rts_not_full_trace_reset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:46
void rts_not_full_trace_reset()
{
   18abc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:47
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   18abe:	f7f7 fced 	bl	1049c <sys_get_uptime_us>
   18ac2:	4b02      	ldr	r3, [pc, #8]	; (18acc <rts_not_full_trace_reset+0x10>)
   18ac4:	e9c3 0100 	strd	r0, r1, [r3]
   18ac8:	bd08      	pop	{r3, pc}
   18aca:	bf00      	nop
   18acc:	2007c608 	.word	0x2007c608

00018ad0 <vApplicationIdleHook>:
__WFI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1196
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   18ad0:	bf30      	wfi
   18ad2:	4770      	bx	lr

00018ad4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   18ad4:	b510      	push	{r4, lr}
   18ad6:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   18ad8:	4809      	ldr	r0, [pc, #36]	; (18b00 <vApplicationStackOverflowHook+0x2c>)
   18ada:	f7fd ff75 	bl	169c8 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   18ade:	4620      	mov	r0, r4
   18ae0:	f7fd ff72 	bl	169c8 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   18ae4:	4807      	ldr	r0, [pc, #28]	; (18b04 <vApplicationStackOverflowHook+0x30>)
   18ae6:	f7fd ff6f 	bl	169c8 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   18aea:	4807      	ldr	r0, [pc, #28]	; (18b08 <vApplicationStackOverflowHook+0x34>)
   18aec:	f7fe f82e 	bl	16b4c <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   18af0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   18af4:	22aa      	movs	r2, #170	; 0xaa
   18af6:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   18af8:	2200      	movs	r2, #0
   18afa:	701a      	strb	r2, [r3, #0]
   18afc:	bd10      	pop	{r4, pc}
   18afe:	bf00      	nop
   18b00:	00026c42 	.word	0x00026c42
   18b04:	00026c6b 	.word	0x00026c6b
   18b08:	002dc6c0 	.word	0x002dc6c0

00018b0c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   18b0c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   18b0e:	4806      	ldr	r0, [pc, #24]	; (18b28 <vApplicationMallocFailedHook+0x1c>)
   18b10:	f7fd ff5a 	bl	169c8 <u0_dbg_put>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   18b14:	4805      	ldr	r0, [pc, #20]	; (18b2c <vApplicationMallocFailedHook+0x20>)
   18b16:	f7fe f819 	bl	16b4c <delay_us>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   18b1a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   18b1e:	22aa      	movs	r2, #170	; 0xaa
   18b20:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   18b22:	2200      	movs	r2, #0
   18b24:	701a      	strb	r2, [r3, #0]
   18b26:	bd08      	pop	{r3, pc}
   18b28:	00026c0c 	.word	0x00026c0c
   18b2c:	002dc6c0 	.word	0x002dc6c0

00018b30 <pvPortMalloc>:
pvPortMalloc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   18b30:	b510      	push	{r4, lr}
   18b32:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   18b34:	f000 fd0a 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   18b38:	4620      	mov	r0, r4
   18b3a:	f006 fc67 	bl	1f40c <malloc>
   18b3e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   18b40:	f000 fda4 	bl	1968c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   18b44:	b90c      	cbnz	r4, 18b4a <pvPortMalloc+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   18b46:	f7ff ffe1 	bl	18b0c <vApplicationMallocFailedHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   18b4a:	4620      	mov	r0, r4
   18b4c:	bd10      	pop	{r4, pc}

00018b4e <vPortFree>:
vPortFree():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   18b4e:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   18b50:	4604      	mov	r4, r0
   18b52:	b140      	cbz	r0, 18b66 <vPortFree+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   18b54:	f000 fcfa 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   18b58:	4620      	mov	r0, r4
   18b5a:	f006 fc5f 	bl	1f41c <free>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   18b5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   18b62:	f000 bd93 	b.w	1968c <xTaskResumeAll>
   18b66:	bd10      	pop	{r4, pc}

00018b68 <vListInitialise>:
vListInitialise():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18b68:	f100 0308 	add.w	r3, r0, #8
   18b6c:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   18b6e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18b72:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18b74:	6103      	str	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   18b76:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   18b78:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   18b7a:	6003      	str	r3, [r0, #0]
   18b7c:	4770      	bx	lr

00018b7e <vListInitialiseItem>:
vListInitialiseItem():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   18b7e:	2300      	movs	r3, #0
   18b80:	6103      	str	r3, [r0, #16]
   18b82:	4770      	bx	lr

00018b84 <vListInsertEnd>:
vListInsertEnd():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   18b84:	6843      	ldr	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   18b86:	689a      	ldr	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   18b88:	604b      	str	r3, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   18b8a:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   18b8c:	689a      	ldr	r2, [r3, #8]
   18b8e:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   18b90:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   18b92:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   18b94:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   18b96:	3301      	adds	r3, #1
   18b98:	6003      	str	r3, [r0, #0]
   18b9a:	4770      	bx	lr

00018b9c <vListInsert>:
vListInsert():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   18b9c:	680a      	ldr	r2, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   18b9e:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   18ba0:	1c53      	adds	r3, r2, #1
   18ba2:	d10a      	bne.n	18bba <vListInsert+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   18ba4:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   18ba6:	685a      	ldr	r2, [r3, #4]
   18ba8:	604a      	str	r2, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   18baa:	6091      	str	r1, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   18bac:	608b      	str	r3, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   18bae:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   18bb0:	6803      	ldr	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   18bb2:	6108      	str	r0, [r1, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   18bb4:	3301      	adds	r3, #1
   18bb6:	6003      	str	r3, [r0, #0]
   18bb8:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   18bba:	f100 0308 	add.w	r3, r0, #8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   18bbe:	685c      	ldr	r4, [r3, #4]
   18bc0:	6825      	ldr	r5, [r4, #0]
   18bc2:	42aa      	cmp	r2, r5
   18bc4:	d3ef      	bcc.n	18ba6 <vListInsert+0xa>
   18bc6:	4623      	mov	r3, r4
   18bc8:	e7f9      	b.n	18bbe <vListInsert+0x22>

00018bca <uxListRemove>:
uxListRemove():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   18bca:	6841      	ldr	r1, [r0, #4]
   18bcc:	6882      	ldr	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   18bce:	6903      	ldr	r3, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   18bd0:	608a      	str	r2, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   18bd2:	6882      	ldr	r2, [r0, #8]
   18bd4:	6051      	str	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   18bd6:	6859      	ldr	r1, [r3, #4]
   18bd8:	4288      	cmp	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   18bda:	bf08      	it	eq
   18bdc:	605a      	streq	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   18bde:	2200      	movs	r2, #0
   18be0:	6102      	str	r2, [r0, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   18be2:	6818      	ldr	r0, [r3, #0]
   18be4:	3801      	subs	r0, #1
   18be6:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   18be8:	4770      	bx	lr

00018bea <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   18bea:	b570      	push	{r4, r5, r6, lr}
   18bec:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   18bee:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   18bf0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18bf2:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   18bf4:	b942      	cbnz	r2, 18c08 <prvCopyDataToQueue+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   18bf6:	6805      	ldr	r5, [r0, #0]
   18bf8:	b99d      	cbnz	r5, 18c22 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   18bfa:	6840      	ldr	r0, [r0, #4]
   18bfc:	f001 f84c 	bl	19c98 <xTaskPriorityDisinherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   18c00:	6065      	str	r5, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18c02:	3601      	adds	r6, #1
   18c04:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   18c06:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   18c08:	b96d      	cbnz	r5, 18c26 <prvCopyDataToQueue+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   18c0a:	6880      	ldr	r0, [r0, #8]
   18c0c:	f006 fc3d 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   18c10:	68a3      	ldr	r3, [r4, #8]
   18c12:	6c22      	ldr	r2, [r4, #64]	; 0x40
   18c14:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18c16:	6862      	ldr	r2, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   18c18:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18c1a:	4293      	cmp	r3, r2
   18c1c:	d301      	bcc.n	18c22 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   18c1e:	6823      	ldr	r3, [r4, #0]
   18c20:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   18c22:	2000      	movs	r0, #0
   18c24:	e7ed      	b.n	18c02 <prvCopyDataToQueue+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18c26:	68c0      	ldr	r0, [r0, #12]
   18c28:	f006 fc2f 	bl	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   18c2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   18c2e:	68e2      	ldr	r2, [r4, #12]
   18c30:	425b      	negs	r3, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18c32:	6821      	ldr	r1, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   18c34:	441a      	add	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   18c36:	428a      	cmp	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   18c38:	60e2      	str	r2, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   18c3a:	bf3e      	ittt	cc
   18c3c:	6862      	ldrcc	r2, [r4, #4]
   18c3e:	189b      	addcc	r3, r3, r2
   18c40:	60e3      	strcc	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   18c42:	2d02      	cmp	r5, #2
   18c44:	d1ed      	bne.n	18c22 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   18c46:	b10e      	cbz	r6, 18c4c <prvCopyDataToQueue+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   18c48:	3e01      	subs	r6, #1
   18c4a:	e7ea      	b.n	18c22 <prvCopyDataToQueue+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   18c4c:	4630      	mov	r0, r6
   18c4e:	e7d8      	b.n	18c02 <prvCopyDataToQueue+0x18>

00018c50 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   18c50:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   18c52:	6c85      	ldr	r5, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   18c54:	460a      	mov	r2, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   18c56:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   18c58:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   18c5a:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   18c5c:	4299      	cmp	r1, r3
   18c5e:	d21a      	bcs.n	18c96 <prvNotifyQueueSetContainer+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18c60:	a901      	add	r1, sp, #4
   18c62:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   18c64:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18c68:	f7ff ffbf 	bl	18bea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   18c6c:	b264      	sxtb	r4, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   18c6e:	1c63      	adds	r3, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   18c70:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   18c72:	d10b      	bne.n	18c8c <prvNotifyQueueSetContainer+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   18c74:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   18c76:	b133      	cbz	r3, 18c86 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   18c78:	f105 0024 	add.w	r0, r5, #36	; 0x24
   18c7c:	f000 fe7a 	bl	19974 <xTaskRemoveFromEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   18c80:	2800      	cmp	r0, #0
   18c82:	bf18      	it	ne
   18c84:	2601      	movne	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   18c86:	4630      	mov	r0, r6
   18c88:	b002      	add	sp, #8
   18c8a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18c8c:	3401      	adds	r4, #1
   18c8e:	b264      	sxtb	r4, r4
   18c90:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   18c94:	e7f7      	b.n	18c86 <prvNotifyQueueSetContainer+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   18c96:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   18c98:	e7f5      	b.n	18c86 <prvNotifyQueueSetContainer+0x36>

00018c9a <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   18c9a:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   18c9c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   18c9e:	b410      	push	{r4}
   18ca0:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   18ca2:	b162      	cbz	r2, 18cbe <prvCopyDataFromQueue+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18ca4:	68d9      	ldr	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   18ca6:	685c      	ldr	r4, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18ca8:	4411      	add	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   18caa:	42a1      	cmp	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   18cac:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   18cae:	bf28      	it	cs
   18cb0:	6819      	ldrcs	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   18cb2:	bc10      	pop	{r4}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   18cb4:	bf28      	it	cs
   18cb6:	60d9      	strcs	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   18cb8:	68d9      	ldr	r1, [r3, #12]
   18cba:	f006 bbe6 	b.w	1f48a <memcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   18cbe:	bc10      	pop	{r4}
   18cc0:	4770      	bx	lr

00018cc2 <prvUnlockQueue>:
prvUnlockQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   18cc2:	b570      	push	{r4, r5, r6, lr}
   18cc4:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   18cc6:	f7ff fe6f 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   18cca:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18cce:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   18cd2:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   18cd4:	2d00      	cmp	r5, #0
   18cd6:	dc14      	bgt.n	18d02 <prvUnlockQueue+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   18cd8:	23ff      	movs	r3, #255	; 0xff
   18cda:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   18cde:	f7ff fe73 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   18ce2:	f7ff fe61 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   18ce6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18cea:	f104 0610 	add.w	r6, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   18cee:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   18cf0:	2d00      	cmp	r5, #0
   18cf2:	dc19      	bgt.n	18d28 <prvUnlockQueue+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   18cf4:	23ff      	movs	r3, #255	; 0xff
   18cf6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   18cfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   18cfe:	f7ff be63 	b.w	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   18d02:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18d04:	b14b      	cbz	r3, 18d1a <prvUnlockQueue+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   18d06:	2100      	movs	r1, #0
   18d08:	4620      	mov	r0, r4
   18d0a:	f7ff ffa1 	bl	18c50 <prvNotifyQueueSetContainer>
   18d0e:	b108      	cbz	r0, 18d14 <prvUnlockQueue+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   18d10:	f000 fe9a 	bl	19a48 <vTaskMissedYield>
   18d14:	3d01      	subs	r5, #1
   18d16:	b26d      	sxtb	r5, r5
   18d18:	e7dc      	b.n	18cd4 <prvUnlockQueue+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18d1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18d1c:	2b00      	cmp	r3, #0
   18d1e:	d0db      	beq.n	18cd8 <prvUnlockQueue+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18d20:	4630      	mov	r0, r6
   18d22:	f000 fe27 	bl	19974 <xTaskRemoveFromEventList>
   18d26:	e7f2      	b.n	18d0e <prvUnlockQueue+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18d28:	6923      	ldr	r3, [r4, #16]
   18d2a:	2b00      	cmp	r3, #0
   18d2c:	d0e2      	beq.n	18cf4 <prvUnlockQueue+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18d2e:	4630      	mov	r0, r6
   18d30:	f000 fe20 	bl	19974 <xTaskRemoveFromEventList>
   18d34:	b108      	cbz	r0, 18d3a <prvUnlockQueue+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   18d36:	f000 fe87 	bl	19a48 <vTaskMissedYield>
   18d3a:	3d01      	subs	r5, #1
   18d3c:	b26d      	sxtb	r5, r5
   18d3e:	e7d7      	b.n	18cf0 <prvUnlockQueue+0x2e>

00018d40 <xQueueGenericReset>:
xQueueGenericReset():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   18d40:	b538      	push	{r3, r4, r5, lr}
   18d42:	4604      	mov	r4, r0
   18d44:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   18d46:	f7ff fe2f 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   18d4a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   18d4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   18d4e:	6822      	ldr	r2, [r4, #0]
   18d50:	4343      	muls	r3, r0
   18d52:	18d1      	adds	r1, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   18d54:	1a1b      	subs	r3, r3, r0
   18d56:	4413      	add	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   18d58:	6061      	str	r1, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   18d5a:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   18d5c:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   18d5e:	23ff      	movs	r3, #255	; 0xff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   18d60:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   18d62:	60a2      	str	r2, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   18d64:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   18d68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   18d6c:	b995      	cbnz	r5, 18d94 <xQueueGenericReset+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   18d6e:	6923      	ldr	r3, [r4, #16]
   18d70:	b163      	cbz	r3, 18d8c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   18d72:	f104 0010 	add.w	r0, r4, #16
   18d76:	f000 fdfd 	bl	19974 <xTaskRemoveFromEventList>
   18d7a:	b138      	cbz	r0, 18d8c <xQueueGenericReset+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   18d7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18d80:	4b09      	ldr	r3, [pc, #36]	; (18da8 <xQueueGenericReset+0x68>)
   18d82:	601a      	str	r2, [r3, #0]
   18d84:	f3bf 8f4f 	dsb	sy
   18d88:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   18d8c:	f7ff fe1c 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   18d90:	2001      	movs	r0, #1
   18d92:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   18d94:	f104 0010 	add.w	r0, r4, #16
   18d98:	f7ff fee6 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   18d9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18da0:	f7ff fee2 	bl	18b68 <vListInitialise>
   18da4:	e7f2      	b.n	18d8c <xQueueGenericReset+0x4c>
   18da6:	bf00      	nop
   18da8:	e000ed04 	.word	0xe000ed04

00018dac <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   18dac:	b570      	push	{r4, r5, r6, lr}
   18dae:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   18db0:	4348      	muls	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   18db2:	304c      	adds	r0, #76	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   18db4:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   18db6:	f7ff febb 	bl	18b30 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   18dba:	4604      	mov	r4, r0
   18dbc:	b148      	cbz	r0, 18dd2 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   18dbe:	b955      	cbnz	r5, 18dd6 <xQueueGenericCreate+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   18dc0:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   18dc2:	63e6      	str	r6, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   18dc4:	6425      	str	r5, [r4, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   18dc6:	2101      	movs	r1, #1
   18dc8:	4620      	mov	r0, r4
   18dca:	f7ff ffb9 	bl	18d40 <xQueueGenericReset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   18dce:	2300      	movs	r3, #0
   18dd0:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   18dd2:	4620      	mov	r0, r4
   18dd4:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   18dd6:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   18dda:	6003      	str	r3, [r0, #0]
   18ddc:	e7f1      	b.n	18dc2 <xQueueGenericCreate+0x16>

00018dde <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   18dde:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   18de0:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:698
	{
   18de2:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:704
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
   18de4:	2100      	movs	r1, #0
   18de6:	f7ff ffe1 	bl	18dac <xQueueGenericCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:706
		if( xHandle != NULL )
   18dea:	b100      	cbz	r0, 18dee <xQueueCreateCountingSemaphore+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:708
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
   18dec:	6384      	str	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:718
	}
   18dee:	bd10      	pop	{r4, pc}

00018df0 <xQueueGenericSend>:
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18df0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   18df4:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18df6:	4604      	mov	r4, r0
   18df8:	4689      	mov	r9, r1
   18dfa:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   18dfc:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   18dfe:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 18ef0 <xQueueGenericSend+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   18e02:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   18e04:	f7ff fdd0 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   18e08:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   18e0a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   18e0c:	429a      	cmp	r2, r3
   18e0e:	d301      	bcc.n	18e14 <xQueueGenericSend+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   18e10:	2e02      	cmp	r6, #2
   18e12:	d121      	bne.n	18e58 <xQueueGenericSend+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18e14:	4632      	mov	r2, r6
   18e16:	4649      	mov	r1, r9
   18e18:	4620      	mov	r0, r4
   18e1a:	f7ff fee6 	bl	18bea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   18e1e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18e20:	b193      	cbz	r3, 18e48 <xQueueGenericSend+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18e22:	4631      	mov	r1, r6
   18e24:	4620      	mov	r0, r4
   18e26:	f7ff ff13 	bl	18c50 <prvNotifyQueueSetContainer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   18e2a:	b138      	cbz	r0, 18e3c <xQueueGenericSend+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   18e2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18e30:	4b2f      	ldr	r3, [pc, #188]	; (18ef0 <xQueueGenericSend+0x100>)
   18e32:	601a      	str	r2, [r3, #0]
   18e34:	f3bf 8f4f 	dsb	sy
   18e38:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   18e3c:	f7ff fdc4 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   18e40:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   18e42:	b004      	add	sp, #16
   18e44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18e48:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18e4a:	2b00      	cmp	r3, #0
   18e4c:	d0ed      	beq.n	18e2a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18e4e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18e52:	f000 fd8f 	bl	19974 <xTaskRemoveFromEventList>
   18e56:	e7e8      	b.n	18e2a <xQueueGenericSend+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   18e58:	9d01      	ldr	r5, [sp, #4]
   18e5a:	b91d      	cbnz	r5, 18e64 <xQueueGenericSend+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   18e5c:	f7ff fdb4 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   18e60:	2000      	movs	r0, #0
   18e62:	e7ee      	b.n	18e42 <xQueueGenericSend+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   18e64:	b917      	cbnz	r7, 18e6c <xQueueGenericSend+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   18e66:	a802      	add	r0, sp, #8
   18e68:	f000 fdbc 	bl	199e4 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   18e6c:	f7ff fdac 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   18e70:	f000 fb6c 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   18e74:	f7ff fd98 	bl	189a8 <vPortEnterCritical>
   18e78:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   18e7c:	2bff      	cmp	r3, #255	; 0xff
   18e7e:	bf08      	it	eq
   18e80:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   18e84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   18e88:	2bff      	cmp	r3, #255	; 0xff
   18e8a:	bf08      	it	eq
   18e8c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   18e90:	f7ff fd9a 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   18e94:	a901      	add	r1, sp, #4
   18e96:	a802      	add	r0, sp, #8
   18e98:	f000 fdb0 	bl	199fc <xTaskCheckForTimeOut>
   18e9c:	bb10      	cbnz	r0, 18ee4 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   18e9e:	f7ff fd83 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   18ea2:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   18ea4:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   18ea6:	f7ff fd8f 	bl	189c8 <vPortExitCritical>
xQueueGenericSend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   18eaa:	42af      	cmp	r7, r5
   18eac:	d114      	bne.n	18ed8 <xQueueGenericSend+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   18eae:	9901      	ldr	r1, [sp, #4]
   18eb0:	f104 0010 	add.w	r0, r4, #16
   18eb4:	f000 fd4e 	bl	19954 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   18eb8:	4620      	mov	r0, r4
   18eba:	f7ff ff02 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   18ebe:	f000 fbe5 	bl	1968c <xTaskResumeAll>
   18ec2:	b938      	cbnz	r0, 18ed4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   18ec4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   18ec8:	f8ca 3000 	str.w	r3, [sl]
   18ecc:	f3bf 8f4f 	dsb	sy
   18ed0:	f3bf 8f6f 	isb	sy
   18ed4:	2701      	movs	r7, #1
   18ed6:	e795      	b.n	18e04 <xQueueGenericSend+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   18ed8:	4620      	mov	r0, r4
   18eda:	f7ff fef2 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   18ede:	f000 fbd5 	bl	1968c <xTaskResumeAll>
   18ee2:	e7f7      	b.n	18ed4 <xQueueGenericSend+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   18ee4:	4620      	mov	r0, r4
   18ee6:	f7ff feec 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   18eea:	f000 fbcf 	bl	1968c <xTaskResumeAll>
   18eee:	e7b7      	b.n	18e60 <xQueueGenericSend+0x70>
   18ef0:	e000ed04 	.word	0xe000ed04

00018ef4 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   18ef4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   18ef6:	4602      	mov	r2, r0
   18ef8:	2100      	movs	r1, #0
   18efa:	2001      	movs	r0, #1
   18efc:	f7ff ff56 	bl	18dac <xQueueGenericCreate>
prvInitialiseMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   18f00:	4604      	mov	r4, r0
   18f02:	b138      	cbz	r0, 18f14 <xQueueCreateMutex+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   18f04:	2300      	movs	r3, #0
   18f06:	6043      	str	r3, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   18f08:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   18f0a:	60c3      	str	r3, [r0, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   18f0c:	461a      	mov	r2, r3
   18f0e:	4619      	mov	r1, r3
   18f10:	f7ff ff6e 	bl	18df0 <xQueueGenericSend>
xQueueCreateMutex():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   18f14:	4620      	mov	r0, r4
   18f16:	bd10      	pop	{r4, pc}

00018f18 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   18f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18f1c:	4604      	mov	r4, r0
   18f1e:	4690      	mov	r8, r2
   18f20:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18f22:	f3ef 8611 	mrs	r6, BASEPRI
   18f26:	f04f 0310 	mov.w	r3, #16
   18f2a:	f383 8811 	msr	BASEPRI, r3
   18f2e:	f3bf 8f6f 	isb	sy
   18f32:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   18f36:	6b82      	ldr	r2, [r0, #56]	; 0x38
   18f38:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   18f3a:	429a      	cmp	r2, r3
   18f3c:	d301      	bcc.n	18f42 <xQueueGenericSendFromISR+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   18f3e:	2f02      	cmp	r7, #2
   18f40:	d128      	bne.n	18f94 <xQueueGenericSendFromISR+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18f42:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18f46:	463a      	mov	r2, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   18f48:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   18f4a:	4620      	mov	r0, r4
   18f4c:	f7ff fe4d 	bl	18bea <prvCopyDataToQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   18f50:	1c6b      	adds	r3, r5, #1
   18f52:	d11a      	bne.n	18f8a <xQueueGenericSendFromISR+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   18f54:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18f56:	b183      	cbz	r3, 18f7a <xQueueGenericSendFromISR+0x62>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   18f58:	4639      	mov	r1, r7
   18f5a:	4620      	mov	r0, r4
   18f5c:	f7ff fe78 	bl	18c50 <prvNotifyQueueSetContainer>
   18f60:	b908      	cbnz	r0, 18f66 <xQueueGenericSendFromISR+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   18f62:	2001      	movs	r0, #1
   18f64:	e005      	b.n	18f72 <xQueueGenericSendFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   18f66:	f1b8 0f00 	cmp.w	r8, #0
   18f6a:	d0fa      	beq.n	18f62 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   18f6c:	2001      	movs	r0, #1
   18f6e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18f72:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   18f76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18f7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   18f7c:	2b00      	cmp	r3, #0
   18f7e:	d0f0      	beq.n	18f62 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18f80:	f104 0024 	add.w	r0, r4, #36	; 0x24
   18f84:	f000 fcf6 	bl	19974 <xTaskRemoveFromEventList>
   18f88:	e7ea      	b.n	18f60 <xQueueGenericSendFromISR+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18f8a:	3501      	adds	r5, #1
   18f8c:	b26d      	sxtb	r5, r5
   18f8e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   18f92:	e7e6      	b.n	18f62 <xQueueGenericSendFromISR+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   18f94:	2000      	movs	r0, #0
   18f96:	e7ec      	b.n	18f72 <xQueueGenericSendFromISR+0x5a>

00018f98 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   18f98:	b538      	push	{r3, r4, r5, lr}
   18f9a:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   18f9c:	f3ef 8411 	mrs	r4, BASEPRI
   18fa0:	f04f 0210 	mov.w	r2, #16
   18fa4:	f382 8811 	msr	BASEPRI, r2
   18fa8:	f3bf 8f6f 	isb	sy
   18fac:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   18fb0:	6b81      	ldr	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   18fb2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   18fb4:	4291      	cmp	r1, r2
   18fb6:	d221      	bcs.n	18ffc <xQueueGiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   18fb8:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18fbc:	3101      	adds	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   18fbe:	b252      	sxtb	r2, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   18fc0:	6381      	str	r1, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   18fc2:	1c51      	adds	r1, r2, #1
   18fc4:	d115      	bne.n	18ff2 <xQueueGiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   18fc6:	6c82      	ldr	r2, [r0, #72]	; 0x48
   18fc8:	b162      	cbz	r2, 18fe4 <xQueueGiveFromISR+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   18fca:	2100      	movs	r1, #0
   18fcc:	f7ff fe40 	bl	18c50 <prvNotifyQueueSetContainer>
   18fd0:	b908      	cbnz	r0, 18fd6 <xQueueGiveFromISR+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   18fd2:	2001      	movs	r0, #1
   18fd4:	e003      	b.n	18fde <xQueueGiveFromISR+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   18fd6:	2d00      	cmp	r5, #0
   18fd8:	d0fb      	beq.n	18fd2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   18fda:	2001      	movs	r0, #1
   18fdc:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   18fde:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   18fe2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   18fe4:	6a42      	ldr	r2, [r0, #36]	; 0x24
   18fe6:	2a00      	cmp	r2, #0
   18fe8:	d0f3      	beq.n	18fd2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   18fea:	3024      	adds	r0, #36	; 0x24
   18fec:	f000 fcc2 	bl	19974 <xTaskRemoveFromEventList>
   18ff0:	e7ee      	b.n	18fd0 <xQueueGiveFromISR+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   18ff2:	3201      	adds	r2, #1
   18ff4:	b252      	sxtb	r2, r2
   18ff6:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   18ffa:	e7ea      	b.n	18fd2 <xQueueGiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   18ffc:	2000      	movs	r0, #0
   18ffe:	e7ee      	b.n	18fde <xQueueGiveFromISR+0x46>

00019000 <xQueueGenericReceive>:
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   19000:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   19004:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   19008:	4604      	mov	r4, r0
   1900a:	460f      	mov	r7, r1
   1900c:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   1900e:	4656      	mov	r6, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   19010:	f8df 911c 	ldr.w	r9, [pc, #284]	; 19130 <xQueueGenericReceive+0x130>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   19014:	9201      	str	r2, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   19016:	f7ff fcc7 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   1901a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   1901c:	b355      	cbz	r5, 19074 <xQueueGenericReceive+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   1901e:	4639      	mov	r1, r7
   19020:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   19022:	68e6      	ldr	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   19024:	f7ff fe39 	bl	18c9a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   19028:	f1b8 0f00 	cmp.w	r8, #0
   1902c:	d11b      	bne.n	19066 <xQueueGenericReceive+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   1902e:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   19030:	3d01      	subs	r5, #1
   19032:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   19034:	b913      	cbnz	r3, 1903c <xQueueGenericReceive+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   19036:	f000 fe67 	bl	19d08 <pvTaskIncrementMutexHeldCount>
   1903a:	6060      	str	r0, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1903c:	6923      	ldr	r3, [r4, #16]
   1903e:	b163      	cbz	r3, 1905a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   19040:	f104 0010 	add.w	r0, r4, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   19044:	f000 fc96 	bl	19974 <xTaskRemoveFromEventList>
   19048:	b138      	cbz	r0, 1905a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   1904a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1904e:	4b38      	ldr	r3, [pc, #224]	; (19130 <xQueueGenericReceive+0x130>)
   19050:	601a      	str	r2, [r3, #0]
   19052:	f3bf 8f4f 	dsb	sy
   19056:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   1905a:	f7ff fcb5 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   1905e:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   19060:	b004      	add	sp, #16
   19062:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   19066:	6a63      	ldr	r3, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   19068:	60e6      	str	r6, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1906a:	2b00      	cmp	r3, #0
   1906c:	d0f5      	beq.n	1905a <xQueueGenericReceive+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1906e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   19072:	e7e7      	b.n	19044 <xQueueGenericReceive+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   19074:	9d01      	ldr	r5, [sp, #4]
   19076:	b91d      	cbnz	r5, 19080 <xQueueGenericReceive+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   19078:	f7ff fca6 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   1907c:	4628      	mov	r0, r5
   1907e:	e7ef      	b.n	19060 <xQueueGenericReceive+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   19080:	f1ba 0f00 	cmp.w	sl, #0
   19084:	d102      	bne.n	1908c <xQueueGenericReceive+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   19086:	a802      	add	r0, sp, #8
   19088:	f000 fcac 	bl	199e4 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   1908c:	f7ff fc9c 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   19090:	f000 fa5c 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   19094:	f7ff fc88 	bl	189a8 <vPortEnterCritical>
   19098:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1909c:	2bff      	cmp	r3, #255	; 0xff
   1909e:	bf08      	it	eq
   190a0:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   190a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   190a8:	2bff      	cmp	r3, #255	; 0xff
   190aa:	bf08      	it	eq
   190ac:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   190b0:	f7ff fc8a 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   190b4:	a901      	add	r1, sp, #4
   190b6:	a802      	add	r0, sp, #8
   190b8:	f000 fca0 	bl	199fc <xTaskCheckForTimeOut>
   190bc:	bb50      	cbnz	r0, 19114 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   190be:	f7ff fc73 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   190c2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   190c4:	f7ff fc80 	bl	189c8 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   190c8:	b9f5      	cbnz	r5, 19108 <xQueueGenericReceive+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   190ca:	6823      	ldr	r3, [r4, #0]
   190cc:	b933      	cbnz	r3, 190dc <xQueueGenericReceive+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   190ce:	f7ff fc6b 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   190d2:	6860      	ldr	r0, [r4, #4]
   190d4:	f000 fd98 	bl	19c08 <vTaskPriorityInherit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   190d8:	f7ff fc76 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   190dc:	9901      	ldr	r1, [sp, #4]
   190de:	f104 0024 	add.w	r0, r4, #36	; 0x24
   190e2:	f000 fc37 	bl	19954 <vTaskPlaceOnEventList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   190e6:	4620      	mov	r0, r4
   190e8:	f7ff fdeb 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   190ec:	f000 face 	bl	1968c <xTaskResumeAll>
   190f0:	b938      	cbnz	r0, 19102 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   190f2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   190f6:	f8c9 3000 	str.w	r3, [r9]
   190fa:	f3bf 8f4f 	dsb	sy
   190fe:	f3bf 8f6f 	isb	sy
   19102:	f04f 0a01 	mov.w	sl, #1
   19106:	e786      	b.n	19016 <xQueueGenericReceive+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   19108:	4620      	mov	r0, r4
   1910a:	f7ff fdda 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   1910e:	f000 fabd 	bl	1968c <xTaskResumeAll>
   19112:	e7f6      	b.n	19102 <xQueueGenericReceive+0x102>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   19114:	4620      	mov	r0, r4
   19116:	f7ff fdd4 	bl	18cc2 <prvUnlockQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   1911a:	f000 fab7 	bl	1968c <xTaskResumeAll>
prvIsQueueEmpty():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   1911e:	f7ff fc43 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   19122:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   19124:	f7ff fc50 	bl	189c8 <vPortExitCritical>
xQueueGenericReceive():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   19128:	2d00      	cmp	r5, #0
   1912a:	d1ea      	bne.n	19102 <xQueueGenericReceive+0x102>
   1912c:	e7a6      	b.n	1907c <xQueueGenericReceive+0x7c>
   1912e:	bf00      	nop
   19130:	e000ed04 	.word	0xe000ed04

00019134 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   19134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19138:	4607      	mov	r7, r0
   1913a:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   1913c:	f3ef 8611 	mrs	r6, BASEPRI
   19140:	f04f 0310 	mov.w	r3, #16
   19144:	f383 8811 	msr	BASEPRI, r3
   19148:	f3bf 8f6f 	isb	sy
   1914c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   19150:	6b84      	ldr	r4, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   19152:	b30c      	cbz	r4, 19198 <xQueueReceiveFromISR+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   19154:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   19158:	3c01      	subs	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   1915a:	b26d      	sxtb	r5, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   1915c:	f7ff fd9d 	bl	18c9a <prvCopyDataFromQueue>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   19160:	1c6b      	adds	r3, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   19162:	63bc      	str	r4, [r7, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   19164:	d113      	bne.n	1918e <xQueueReceiveFromISR+0x5a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   19166:	693b      	ldr	r3, [r7, #16]
   19168:	b90b      	cbnz	r3, 1916e <xQueueReceiveFromISR+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   1916a:	2001      	movs	r0, #1
   1916c:	e00b      	b.n	19186 <xQueueReceiveFromISR+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   1916e:	f107 0010 	add.w	r0, r7, #16
   19172:	f000 fbff 	bl	19974 <xTaskRemoveFromEventList>
   19176:	2800      	cmp	r0, #0
   19178:	d0f7      	beq.n	1916a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   1917a:	f1b8 0f00 	cmp.w	r8, #0
   1917e:	d0f4      	beq.n	1916a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   19180:	2001      	movs	r0, #1
   19182:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   19186:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   1918a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   1918e:	3501      	adds	r5, #1
   19190:	b26d      	sxtb	r5, r5
   19192:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   19196:	e7e8      	b.n	1916a <xQueueReceiveFromISR+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   19198:	4620      	mov	r0, r4
   1919a:	e7f4      	b.n	19186 <xQueueReceiveFromISR+0x52>

0001919c <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   1919c:	b510      	push	{r4, lr}
   1919e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   191a0:	f7ff fc02 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   191a4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   191a6:	f7ff fc0f 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   191aa:	4620      	mov	r0, r4
   191ac:	bd10      	pop	{r4, pc}

000191ae <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   191ae:	6b80      	ldr	r0, [r0, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   191b0:	4770      	bx	lr

000191b2 <xQueueSelectFromSet>:
xQueueSelectFromSet():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   191b2:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2478
	{
   191b4:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2479
	QueueSetMemberHandle_t xReturn = NULL;
   191b6:	ac02      	add	r4, sp, #8
   191b8:	f844 3d04 	str.w	r3, [r4, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2481
		( void ) xQueueGenericReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait, pdFALSE ); /*lint !e961 Casting from one typedef to another is not redundant. */
   191bc:	460a      	mov	r2, r1
   191be:	4621      	mov	r1, r4
   191c0:	f7ff ff1e 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/queue.c:2483
	}
   191c4:	9801      	ldr	r0, [sp, #4]
   191c6:	b002      	add	sp, #8
   191c8:	bd10      	pop	{r4, pc}

000191ca <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:39

    return (taskRunTime * 100) / totalRunTime;
}

static void prvResetRunTimeStatsInList(List_t *pxList)
{
   191ca:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46

    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
    do
    {
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
        pxNextTCB->ulRunTimeCounter = 0;
   191cc:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:42
    listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   191ce:	6843      	ldr	r3, [r0, #4]
   191d0:	f100 0108 	add.w	r1, r0, #8
   191d4:	685b      	ldr	r3, [r3, #4]
   191d6:	428b      	cmp	r3, r1
   191d8:	6043      	str	r3, [r0, #4]
   191da:	bf04      	itt	eq
   191dc:	68c3      	ldreq	r3, [r0, #12]
   191de:	6043      	streq	r3, [r0, #4]
   191e0:	6843      	ldr	r3, [r0, #4]
   191e2:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:45
        listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   191e4:	685b      	ldr	r3, [r3, #4]
   191e6:	4299      	cmp	r1, r3
   191e8:	bf08      	it	eq
   191ea:	68c3      	ldreq	r3, [r0, #12]
   191ec:	68da      	ldr	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   191ee:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:46
        pxNextTCB->ulRunTimeCounter = 0;
   191f0:	64d5      	str	r5, [r2, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:47
    } while( pxNextTCB != pxFirstTCB );
   191f2:	d1f7      	bne.n	191e4 <prvResetRunTimeStatsInList+0x1a>
   191f4:	6043      	str	r3, [r0, #4]
   191f6:	bd30      	pop	{r4, r5, pc}

000191f8 <prvIdleTask>:
prvIdleTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
   191f8:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3132
{
   191fc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   191fe:	4c06      	ldr	r4, [pc, #24]	; (19218 <prvIdleTask+0x20>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   19200:	4d06      	ldr	r5, [pc, #24]	; (1921c <prvIdleTask+0x24>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   19202:	6823      	ldr	r3, [r4, #0]
   19204:	2b01      	cmp	r3, #1
   19206:	d904      	bls.n	19212 <prvIdleTask+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   19208:	602e      	str	r6, [r5, #0]
   1920a:	f3bf 8f4f 	dsb	sy
   1920e:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3186
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
   19212:	f7ff fc5d 	bl	18ad0 <vApplicationIdleHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3143
		prvCheckTasksWaitingTermination();
   19216:	e7f4      	b.n	19202 <prvIdleTask+0xa>
   19218:	2007c61c 	.word	0x2007c61c
   1921c:	e000ed04 	.word	0xe000ed04

00019220 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   19220:	4a06      	ldr	r2, [pc, #24]	; (1923c <prvResetNextTaskUnblockTime+0x1c>)
   19222:	6813      	ldr	r3, [r2, #0]
   19224:	6819      	ldr	r1, [r3, #0]
   19226:	4b06      	ldr	r3, [pc, #24]	; (19240 <prvResetNextTaskUnblockTime+0x20>)
   19228:	b919      	cbnz	r1, 19232 <prvResetNextTaskUnblockTime+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   1922a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   1922e:	601a      	str	r2, [r3, #0]
   19230:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   19232:	6812      	ldr	r2, [r2, #0]
   19234:	68d2      	ldr	r2, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   19236:	68d2      	ldr	r2, [r2, #12]
   19238:	6852      	ldr	r2, [r2, #4]
   1923a:	e7f8      	b.n	1922e <prvResetNextTaskUnblockTime+0xe>
   1923c:	2007c614 	.word	0x2007c614
   19240:	2007c728 	.word	0x2007c728

00019244 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   19244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   19246:	4b1b      	ldr	r3, [pc, #108]	; (192b4 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19248:	4e1b      	ldr	r6, [pc, #108]	; (192b8 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   1924a:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   1924c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   1924e:	6830      	ldr	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   19250:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19252:	3004      	adds	r0, #4
   19254:	f7ff fcb9 	bl	18bca <uxListRemove>
   19258:	4633      	mov	r3, r6
   1925a:	b940      	cbnz	r0, 1926e <prvAddCurrentTaskToDelayedList+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   1925c:	2001      	movs	r0, #1
   1925e:	6831      	ldr	r1, [r6, #0]
   19260:	4e16      	ldr	r6, [pc, #88]	; (192bc <prvAddCurrentTaskToDelayedList+0x78>)
   19262:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   19264:	6832      	ldr	r2, [r6, #0]
   19266:	4088      	lsls	r0, r1
   19268:	ea22 0200 	bic.w	r2, r2, r0
   1926c:	6032      	str	r2, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   1926e:	1c62      	adds	r2, r4, #1
   19270:	d107      	bne.n	19282 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   19272:	b137      	cbz	r7, 19282 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   19274:	6819      	ldr	r1, [r3, #0]
   19276:	4812      	ldr	r0, [pc, #72]	; (192c0 <prvAddCurrentTaskToDelayedList+0x7c>)
   19278:	3104      	adds	r1, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   1927a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1927e:	f7ff bc81 	b.w	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   19282:	442c      	add	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   19284:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   19286:	42a5      	cmp	r5, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   19288:	6054      	str	r4, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   1928a:	d907      	bls.n	1929c <prvAddCurrentTaskToDelayedList+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1928c:	4a0d      	ldr	r2, [pc, #52]	; (192c4 <prvAddCurrentTaskToDelayedList+0x80>)
   1928e:	6810      	ldr	r0, [r2, #0]
   19290:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   19292:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   19296:	3104      	adds	r1, #4
   19298:	f7ff bc80 	b.w	18b9c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1929c:	4a0a      	ldr	r2, [pc, #40]	; (192c8 <prvAddCurrentTaskToDelayedList+0x84>)
   1929e:	6810      	ldr	r0, [r2, #0]
   192a0:	6819      	ldr	r1, [r3, #0]
   192a2:	3104      	adds	r1, #4
   192a4:	f7ff fc7a 	bl	18b9c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   192a8:	4b08      	ldr	r3, [pc, #32]	; (192cc <prvAddCurrentTaskToDelayedList+0x88>)
   192aa:	681a      	ldr	r2, [r3, #0]
   192ac:	4294      	cmp	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   192ae:	bf38      	it	cc
   192b0:	601c      	strcc	r4, [r3, #0]
   192b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   192b4:	2007c75c 	.word	0x2007c75c
   192b8:	2007c610 	.word	0x2007c610
   192bc:	2007c6f8 	.word	0x2007c6f8
   192c0:	2007c748 	.word	0x2007c748
   192c4:	2007c618 	.word	0x2007c618
   192c8:	2007c614 	.word	0x2007c614
   192cc:	2007c728 	.word	0x2007c728

000192d0 <xTaskCreate>:
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   192d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   192d4:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   192d8:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   192da:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   192dc:	460d      	mov	r5, r1
   192de:	4699      	mov	r9, r3
   192e0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   192e2:	f7ff fc25 	bl	18b30 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   192e6:	4607      	mov	r7, r0
   192e8:	2800      	cmp	r0, #0
   192ea:	f000 809b 	beq.w	19424 <xTaskCreate+0x154>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   192ee:	2058      	movs	r0, #88	; 0x58
   192f0:	f7ff fc1e 	bl	18b30 <pvPortMalloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   192f4:	4604      	mov	r4, r0
   192f6:	2800      	cmp	r0, #0
   192f8:	f000 8091 	beq.w	1941e <xTaskCreate+0x14e>
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   192fc:	4652      	mov	r2, sl
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   192fe:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   19300:	21a5      	movs	r1, #165	; 0xa5
   19302:	4638      	mov	r0, r7
   19304:	f006 f8e6 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   19308:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1930a:	f1aa 0a04 	sub.w	sl, sl, #4
   1930e:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   19310:	f02a 0a07 	bic.w	sl, sl, #7
   19314:	1e6b      	subs	r3, r5, #1
   19316:	f104 0234 	add.w	r2, r4, #52	; 0x34
   1931a:	3507      	adds	r5, #7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   1931c:	7859      	ldrb	r1, [r3, #1]
   1931e:	f802 1b01 	strb.w	r1, [r2], #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   19322:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   19326:	b109      	cbz	r1, 1932c <xTaskCreate+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   19328:	42ab      	cmp	r3, r5
   1932a:	d1f7      	bne.n	1931c <xTaskCreate+0x4c>
   1932c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   1932e:	f04f 0b00 	mov.w	fp, #0
   19332:	2d09      	cmp	r5, #9
   19334:	bf28      	it	cs
   19336:	2509      	movcs	r5, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   19338:	1d27      	adds	r7, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   1933a:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   1933c:	6465      	str	r5, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   1933e:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   19340:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   19344:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   19348:	f7ff fc19 	bl	18b7e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1934c:	f1c5 050a 	rsb	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   19350:	f104 0018 	add.w	r0, r4, #24
   19354:	f7ff fc13 	bl	18b7e <vListInitialiseItem>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   19358:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   1935c:	6124      	str	r4, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1935e:	61a5      	str	r5, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   19360:	6264      	str	r4, [r4, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   19362:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   19366:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   1936a:	464a      	mov	r2, r9
   1936c:	4641      	mov	r1, r8
   1936e:	4650      	mov	r0, sl
   19370:	f7ff faf0 	bl	18954 <pxPortInitialiseStack>
   19374:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   19376:	b106      	cbz	r6, 1937a <xTaskCreate+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   19378:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   1937a:	f7ff fb15 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   1937e:	4b30      	ldr	r3, [pc, #192]	; (19440 <xTaskCreate+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   19380:	4e30      	ldr	r6, [pc, #192]	; (19444 <xTaskCreate+0x174>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   19382:	681a      	ldr	r2, [r3, #0]
   19384:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 1946c <xTaskCreate+0x19c>
   19388:	3201      	adds	r2, #1
   1938a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   1938c:	6835      	ldr	r5, [r6, #0]
   1938e:	2d00      	cmp	r5, #0
   19390:	d14b      	bne.n	1942a <xTaskCreate+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   19392:	6034      	str	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   19394:	681b      	ldr	r3, [r3, #0]
   19396:	2b01      	cmp	r3, #1
   19398:	d11a      	bne.n	193d0 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   1939a:	eb08 0005 	add.w	r0, r8, r5
   1939e:	3514      	adds	r5, #20
   193a0:	f7ff fbe2 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   193a4:	2dc8      	cmp	r5, #200	; 0xc8
   193a6:	d1f8      	bne.n	1939a <xTaskCreate+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   193a8:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 19470 <xTaskCreate+0x1a0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   193ac:	4d26      	ldr	r5, [pc, #152]	; (19448 <xTaskCreate+0x178>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   193ae:	4648      	mov	r0, r9
   193b0:	f7ff fbda 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   193b4:	4628      	mov	r0, r5
   193b6:	f7ff fbd7 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   193ba:	4824      	ldr	r0, [pc, #144]	; (1944c <xTaskCreate+0x17c>)
   193bc:	f7ff fbd4 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   193c0:	4823      	ldr	r0, [pc, #140]	; (19450 <xTaskCreate+0x180>)
   193c2:	f7ff fbd1 	bl	18b68 <vListInitialise>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   193c6:	4b23      	ldr	r3, [pc, #140]	; (19454 <xTaskCreate+0x184>)
   193c8:	f8c3 9000 	str.w	r9, [r3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   193cc:	4b22      	ldr	r3, [pc, #136]	; (19458 <xTaskCreate+0x188>)
   193ce:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   193d0:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   193d2:	4a22      	ldr	r2, [pc, #136]	; (1945c <xTaskCreate+0x18c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   193d4:	4922      	ldr	r1, [pc, #136]	; (19460 <xTaskCreate+0x190>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   193d6:	6813      	ldr	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   193d8:	6808      	ldr	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   193da:	3301      	adds	r3, #1
   193dc:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   193de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   193e0:	fa05 f302 	lsl.w	r3, r5, r2
   193e4:	4303      	orrs	r3, r0
   193e6:	2014      	movs	r0, #20
   193e8:	600b      	str	r3, [r1, #0]
   193ea:	fb00 8002 	mla	r0, r0, r2, r8
   193ee:	4639      	mov	r1, r7
   193f0:	f7ff fbc8 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   193f4:	f7ff fae8 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   193f8:	4b1a      	ldr	r3, [pc, #104]	; (19464 <xTaskCreate+0x194>)
   193fa:	681b      	ldr	r3, [r3, #0]
   193fc:	b163      	cbz	r3, 19418 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   193fe:	6833      	ldr	r3, [r6, #0]
   19400:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   19402:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   19404:	429a      	cmp	r2, r3
   19406:	d207      	bcs.n	19418 <xTaskCreate+0x148>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   19408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1940c:	4b16      	ldr	r3, [pc, #88]	; (19468 <xTaskCreate+0x198>)
   1940e:	601a      	str	r2, [r3, #0]
   19410:	f3bf 8f4f 	dsb	sy
   19414:	f3bf 8f6f 	isb	sy
xTaskCreate():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   19418:	4628      	mov	r0, r5
   1941a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   1941e:	4638      	mov	r0, r7
   19420:	f7ff fb95 	bl	18b4e <vPortFree>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   19424:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   19428:	e7f6      	b.n	19418 <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   1942a:	4b0e      	ldr	r3, [pc, #56]	; (19464 <xTaskCreate+0x194>)
   1942c:	681b      	ldr	r3, [r3, #0]
   1942e:	2b00      	cmp	r3, #0
   19430:	d1ce      	bne.n	193d0 <xTaskCreate+0x100>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   19432:	6833      	ldr	r3, [r6, #0]
   19434:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   19436:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   19438:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   1943a:	bf98      	it	ls
   1943c:	6034      	strls	r4, [r6, #0]
   1943e:	e7c7      	b.n	193d0 <xTaskCreate+0x100>
   19440:	2007c6e8 	.word	0x2007c6e8
   19444:	2007c610 	.word	0x2007c610
   19448:	2007c710 	.word	0x2007c710
   1944c:	2007c730 	.word	0x2007c730
   19450:	2007c748 	.word	0x2007c748
   19454:	2007c614 	.word	0x2007c614
   19458:	2007c618 	.word	0x2007c618
   1945c:	2007c6f4 	.word	0x2007c6f4
   19460:	2007c6f8 	.word	0x2007c6f8
   19464:	2007c744 	.word	0x2007c744
   19468:	e000ed04 	.word	0xe000ed04
   1946c:	2007c61c 	.word	0x2007c61c
   19470:	2007c6fc 	.word	0x2007c6fc

00019474 <eTaskGetState>:
eTaskGetState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   19474:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   19476:	4b10      	ldr	r3, [pc, #64]	; (194b8 <eTaskGetState+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1270
	{
   19478:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1277
		if( pxTCB == pxCurrentTCB )
   1947a:	681b      	ldr	r3, [r3, #0]
   1947c:	4298      	cmp	r0, r3
   1947e:	d015      	beq.n	194ac <eTaskGetState+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1284
			taskENTER_CRITICAL();
   19480:	f7ff fa92 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1286
				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
   19484:	6965      	ldr	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1288
			taskEXIT_CRITICAL();
   19486:	f7ff fa9f 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290
			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
   1948a:	4b0c      	ldr	r3, [pc, #48]	; (194bc <eTaskGetState+0x48>)
   1948c:	681b      	ldr	r3, [r3, #0]
   1948e:	429d      	cmp	r5, r3
   19490:	d00e      	beq.n	194b0 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1290 (discriminator 1)
   19492:	4b0b      	ldr	r3, [pc, #44]	; (194c0 <eTaskGetState+0x4c>)
   19494:	681b      	ldr	r3, [r3, #0]
   19496:	429d      	cmp	r5, r3
   19498:	d00a      	beq.n	194b0 <eTaskGetState+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1298
				else if( pxStateList == &xSuspendedTaskList )
   1949a:	4b0a      	ldr	r3, [pc, #40]	; (194c4 <eTaskGetState+0x50>)
   1949c:	429d      	cmp	r5, r3
   1949e:	d109      	bne.n	194b4 <eTaskGetState+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1303
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
   194a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   194a2:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1305
						eReturn = eSuspended;
   194a4:	bf14      	ite	ne
   194a6:	2002      	movne	r0, #2
   194a8:	2003      	moveq	r0, #3
   194aa:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1280
			eReturn = eRunning;
   194ac:	2000      	movs	r0, #0
   194ae:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1309
						eReturn = eBlocked;
   194b0:	2002      	movs	r0, #2
   194b2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1328
				eReturn = eReady;
   194b4:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1333
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
   194b6:	bd38      	pop	{r3, r4, r5, pc}
   194b8:	2007c610 	.word	0x2007c610
   194bc:	2007c614 	.word	0x2007c614
   194c0:	2007c618 	.word	0x2007c618
   194c4:	2007c748 	.word	0x2007c748

000194c8 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1827
{
   194c8:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1860
		xReturn = xTaskCreate(	prvIdleTask,
   194ca:	2400      	movs	r4, #0
   194cc:	4b11      	ldr	r3, [pc, #68]	; (19514 <vTaskStartScheduler+0x4c>)
   194ce:	9400      	str	r4, [sp, #0]
   194d0:	9301      	str	r3, [sp, #4]
   194d2:	2280      	movs	r2, #128	; 0x80
   194d4:	4623      	mov	r3, r4
   194d6:	4910      	ldr	r1, [pc, #64]	; (19518 <vTaskStartScheduler+0x50>)
   194d8:	4810      	ldr	r0, [pc, #64]	; (1951c <vTaskStartScheduler+0x54>)
   194da:	f7ff fef9 	bl	192d0 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1881
	if( xReturn == pdPASS )
   194de:	2801      	cmp	r0, #1
   194e0:	d116      	bne.n	19510 <vTaskStartScheduler+0x48>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   194e2:	f04f 0310 	mov.w	r3, #16
   194e6:	f383 8811 	msr	BASEPRI, r3
   194ea:	f3bf 8f6f 	isb	sy
   194ee:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1898
		xNextTaskUnblockTime = portMAX_DELAY;
   194f2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   194f6:	4b0a      	ldr	r3, [pc, #40]	; (19520 <vTaskStartScheduler+0x58>)
   194f8:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1899
		xSchedulerRunning = pdTRUE;
   194fa:	4b0a      	ldr	r3, [pc, #40]	; (19524 <vTaskStartScheduler+0x5c>)
   194fc:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1900
		xTickCount = ( TickType_t ) 0U;
   194fe:	4b0a      	ldr	r3, [pc, #40]	; (19528 <vTaskStartScheduler+0x60>)
   19500:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1905
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
   19502:	f7ff fac7 	bl	18a94 <rts_not_full_trace_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   19506:	b002      	add	sp, #8
   19508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1909
		if( xPortStartScheduler() != pdFALSE )
   1950c:	f7ff baaa 	b.w	18a64 <xPortStartScheduler>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   19510:	b002      	add	sp, #8
   19512:	bd10      	pop	{r4, pc}
   19514:	2007c724 	.word	0x2007c724
   19518:	00026c97 	.word	0x00026c97
   1951c:	000191f9 	.word	0x000191f9
   19520:	2007c728 	.word	0x2007c728
   19524:	2007c744 	.word	0x2007c744
   19528:	2007c75c 	.word	0x2007c75c

0001952c <vTaskEndScheduler>:
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   1952c:	f04f 0310 	mov.w	r3, #16
   19530:	f383 8811 	msr	BASEPRI, r3
   19534:	f3bf 8f6f 	isb	sy
   19538:	f3bf 8f4f 	dsb	sy
vTaskEndScheduler():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1939
	xSchedulerRunning = pdFALSE;
   1953c:	2200      	movs	r2, #0
   1953e:	4b02      	ldr	r3, [pc, #8]	; (19548 <vTaskEndScheduler+0x1c>)
   19540:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1940
	vPortEndScheduler();
   19542:	f7ff ba2f 	b.w	189a4 <vPortEndScheduler>
   19546:	bf00      	nop
   19548:	2007c744 	.word	0x2007c744

0001954c <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   1954c:	4a02      	ldr	r2, [pc, #8]	; (19558 <vTaskSuspendAll+0xc>)
   1954e:	6813      	ldr	r3, [r2, #0]
   19550:	3301      	adds	r3, #1
   19552:	6013      	str	r3, [r2, #0]
   19554:	4770      	bx	lr
   19556:	bf00      	nop
   19558:	2007c6f0 	.word	0x2007c6f0

0001955c <xTaskGetTickCount>:
xTaskGetTickCount():
   1955c:	4b01      	ldr	r3, [pc, #4]	; (19564 <xTaskGetTickCount+0x8>)
   1955e:	6818      	ldr	r0, [r3, #0]
   19560:	4770      	bx	lr
   19562:	bf00      	nop
   19564:	2007c75c 	.word	0x2007c75c

00019568 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   19568:	4b01      	ldr	r3, [pc, #4]	; (19570 <xTaskGetTickCountFromISR+0x8>)
   1956a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   1956c:	4770      	bx	lr
   1956e:	bf00      	nop
   19570:	2007c75c 	.word	0x2007c75c

00019574 <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2177
	return uxCurrentNumberOfTasks;
   19574:	4b01      	ldr	r3, [pc, #4]	; (1957c <uxTaskGetNumberOfTasks+0x8>)
   19576:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2178
}
   19578:	4770      	bx	lr
   1957a:	bf00      	nop
   1957c:	2007c6e8 	.word	0x2007c6e8

00019580 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   19580:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19584:	4b36      	ldr	r3, [pc, #216]	; (19660 <xTaskIncrementTick+0xe0>)
   19586:	681b      	ldr	r3, [r3, #0]
   19588:	2b00      	cmp	r3, #0
   1958a:	d147      	bne.n	1961c <xTaskIncrementTick+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   1958c:	4b35      	ldr	r3, [pc, #212]	; (19664 <xTaskIncrementTick+0xe4>)
   1958e:	681c      	ldr	r4, [r3, #0]
   19590:	3401      	adds	r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   19592:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   19594:	b95c      	cbnz	r4, 195ae <xTaskIncrementTick+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   19596:	4a34      	ldr	r2, [pc, #208]	; (19668 <xTaskIncrementTick+0xe8>)
   19598:	4b34      	ldr	r3, [pc, #208]	; (1966c <xTaskIncrementTick+0xec>)
   1959a:	6811      	ldr	r1, [r2, #0]
   1959c:	6818      	ldr	r0, [r3, #0]
   1959e:	6010      	str	r0, [r2, #0]
   195a0:	4a33      	ldr	r2, [pc, #204]	; (19670 <xTaskIncrementTick+0xf0>)
   195a2:	6019      	str	r1, [r3, #0]
   195a4:	6813      	ldr	r3, [r2, #0]
   195a6:	3301      	adds	r3, #1
   195a8:	6013      	str	r3, [r2, #0]
   195aa:	f7ff fe39 	bl	19220 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   195ae:	4d31      	ldr	r5, [pc, #196]	; (19674 <xTaskIncrementTick+0xf4>)
   195b0:	f04f 0b00 	mov.w	fp, #0
   195b4:	682b      	ldr	r3, [r5, #0]
   195b6:	4f30      	ldr	r7, [pc, #192]	; (19678 <xTaskIncrementTick+0xf8>)
   195b8:	429c      	cmp	r4, r3
   195ba:	d33e      	bcc.n	1963a <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   195bc:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 19668 <xTaskIncrementTick+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   195c0:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 19688 <xTaskIncrementTick+0x108>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   195c4:	f8d8 2000 	ldr.w	r2, [r8]
   195c8:	6812      	ldr	r2, [r2, #0]
   195ca:	bb72      	cbnz	r2, 1962a <xTaskIncrementTick+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   195cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   195d0:	602a      	str	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   195d2:	e032      	b.n	1963a <xTaskIncrementTick+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   195d4:	f106 0a04 	add.w	sl, r6, #4
   195d8:	4650      	mov	r0, sl
   195da:	f7ff faf6 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   195de:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   195e0:	b119      	cbz	r1, 195ea <xTaskIncrementTick+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   195e2:	f106 0018 	add.w	r0, r6, #24
   195e6:	f7ff faf0 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   195ea:	2201      	movs	r2, #1
   195ec:	f04f 0e14 	mov.w	lr, #20
   195f0:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   195f2:	f8d9 3000 	ldr.w	r3, [r9]
   195f6:	fa02 f100 	lsl.w	r1, r2, r0
   195fa:	4319      	orrs	r1, r3
   195fc:	4b1f      	ldr	r3, [pc, #124]	; (1967c <xTaskIncrementTick+0xfc>)
   195fe:	f8c9 1000 	str.w	r1, [r9]
   19602:	fb0e 3000 	mla	r0, lr, r0, r3
   19606:	4651      	mov	r1, sl
   19608:	f7ff fabc 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1960c:	6838      	ldr	r0, [r7, #0]
   1960e:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   19610:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   19612:	4291      	cmp	r1, r2
   19614:	bf28      	it	cs
   19616:	f04f 0b01 	movcs.w	fp, #1
   1961a:	e7d3      	b.n	195c4 <xTaskIncrementTick+0x44>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   1961c:	4a18      	ldr	r2, [pc, #96]	; (19680 <xTaskIncrementTick+0x100>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   1961e:	f04f 0b00 	mov.w	fp, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   19622:	6813      	ldr	r3, [r2, #0]
   19624:	3301      	adds	r3, #1
   19626:	6013      	str	r3, [r2, #0]
   19628:	e011      	b.n	1964e <xTaskIncrementTick+0xce>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   1962a:	f8d8 2000 	ldr.w	r2, [r8]
   1962e:	68d2      	ldr	r2, [r2, #12]
   19630:	68d6      	ldr	r6, [r2, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   19632:	6871      	ldr	r1, [r6, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   19634:	428c      	cmp	r4, r1
   19636:	d2cd      	bcs.n	195d4 <xTaskIncrementTick+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   19638:	6029      	str	r1, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   1963a:	683a      	ldr	r2, [r7, #0]
   1963c:	4b0f      	ldr	r3, [pc, #60]	; (1967c <xTaskIncrementTick+0xfc>)
   1963e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   19640:	2214      	movs	r2, #20
   19642:	434a      	muls	r2, r1
   19644:	589a      	ldr	r2, [r3, r2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   19646:	2a02      	cmp	r2, #2
   19648:	bf28      	it	cs
   1964a:	f04f 0b01 	movcs.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   1964e:	4a0d      	ldr	r2, [pc, #52]	; (19684 <xTaskIncrementTick+0x104>)
   19650:	6812      	ldr	r2, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   19652:	2a00      	cmp	r2, #0
   19654:	bf18      	it	ne
   19656:	f04f 0b01 	movne.w	fp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   1965a:	4658      	mov	r0, fp
   1965c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19660:	2007c6f0 	.word	0x2007c6f0
   19664:	2007c75c 	.word	0x2007c75c
   19668:	2007c614 	.word	0x2007c614
   1966c:	2007c618 	.word	0x2007c618
   19670:	2007c72c 	.word	0x2007c72c
   19674:	2007c728 	.word	0x2007c728
   19678:	2007c610 	.word	0x2007c610
   1967c:	2007c61c 	.word	0x2007c61c
   19680:	2007c6ec 	.word	0x2007c6ec
   19684:	2007c760 	.word	0x2007c760
   19688:	2007c6f8 	.word	0x2007c6f8

0001968c <xTaskResumeAll>:
xTaskResumeAll():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   1968c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   19690:	f7ff f98a 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   19694:	4b2a      	ldr	r3, [pc, #168]	; (19740 <xTaskResumeAll+0xb4>)
   19696:	681a      	ldr	r2, [r3, #0]
   19698:	3a01      	subs	r2, #1
   1969a:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1969c:	681c      	ldr	r4, [r3, #0]
   1969e:	b12c      	cbz	r4, 196ac <xTaskResumeAll+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   196a0:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   196a2:	f7ff f991 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   196a6:	4620      	mov	r0, r4
   196a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   196ac:	4b25      	ldr	r3, [pc, #148]	; (19744 <xTaskResumeAll+0xb8>)
   196ae:	681b      	ldr	r3, [r3, #0]
   196b0:	2b00      	cmp	r3, #0
   196b2:	d0f5      	beq.n	196a0 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   196b4:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 1975c <xTaskResumeAll+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   196b8:	4f23      	ldr	r7, [pc, #140]	; (19748 <xTaskResumeAll+0xbc>)
   196ba:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 19760 <xTaskResumeAll+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   196be:	f8d9 3000 	ldr.w	r3, [r9]
   196c2:	b9e3      	cbnz	r3, 196fe <xTaskResumeAll+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   196c4:	b10c      	cbz	r4, 196ca <xTaskResumeAll+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   196c6:	f7ff fdab 	bl	19220 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   196ca:	4d20      	ldr	r5, [pc, #128]	; (1974c <xTaskResumeAll+0xc0>)
   196cc:	682c      	ldr	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   196ce:	b144      	cbz	r4, 196e2 <xTaskResumeAll+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   196d0:	2701      	movs	r7, #1
   196d2:	4e1f      	ldr	r6, [pc, #124]	; (19750 <xTaskResumeAll+0xc4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   196d4:	f7ff ff54 	bl	19580 <xTaskIncrementTick>
   196d8:	b100      	cbz	r0, 196dc <xTaskResumeAll+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   196da:	6037      	str	r7, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   196dc:	3c01      	subs	r4, #1
   196de:	d1f9      	bne.n	196d4 <xTaskResumeAll+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   196e0:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   196e2:	4b1b      	ldr	r3, [pc, #108]	; (19750 <xTaskResumeAll+0xc4>)
   196e4:	681b      	ldr	r3, [r3, #0]
   196e6:	2b00      	cmp	r3, #0
   196e8:	d0da      	beq.n	196a0 <xTaskResumeAll+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   196ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   196ee:	4b19      	ldr	r3, [pc, #100]	; (19754 <xTaskResumeAll+0xc8>)
   196f0:	601a      	str	r2, [r3, #0]
   196f2:	f3bf 8f4f 	dsb	sy
   196f6:	f3bf 8f6f 	isb	sy
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   196fa:	2401      	movs	r4, #1
   196fc:	e7d1      	b.n	196a2 <xTaskResumeAll+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   196fe:	f8d9 300c 	ldr.w	r3, [r9, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   19702:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   19704:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   19706:	1d26      	adds	r6, r4, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   19708:	f104 0018 	add.w	r0, r4, #24
   1970c:	f7ff fa5d 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   19710:	4630      	mov	r0, r6
   19712:	f7ff fa5a 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   19716:	2014      	movs	r0, #20
   19718:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1971a:	6839      	ldr	r1, [r7, #0]
   1971c:	fa05 f302 	lsl.w	r3, r5, r2
   19720:	430b      	orrs	r3, r1
   19722:	fb00 8002 	mla	r0, r0, r2, r8
   19726:	4631      	mov	r1, r6
   19728:	603b      	str	r3, [r7, #0]
   1972a:	f7ff fa2b 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1972e:	4b0a      	ldr	r3, [pc, #40]	; (19758 <xTaskResumeAll+0xcc>)
   19730:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19732:	681b      	ldr	r3, [r3, #0]
   19734:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19736:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   19738:	bf24      	itt	cs
   1973a:	4b05      	ldrcs	r3, [pc, #20]	; (19750 <xTaskResumeAll+0xc4>)
   1973c:	601d      	strcs	r5, [r3, #0]
   1973e:	e7be      	b.n	196be <xTaskResumeAll+0x32>
   19740:	2007c6f0 	.word	0x2007c6f0
   19744:	2007c6e8 	.word	0x2007c6e8
   19748:	2007c6f8 	.word	0x2007c6f8
   1974c:	2007c6ec 	.word	0x2007c6ec
   19750:	2007c760 	.word	0x2007c760
   19754:	e000ed04 	.word	0xe000ed04
   19758:	2007c610 	.word	0x2007c610
   1975c:	2007c730 	.word	0x2007c730
   19760:	2007c61c 	.word	0x2007c61c

00019764 <vTaskDelayUntil>:
vTaskDelayUntil():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1141
	{
   19764:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1149
		vTaskSuspendAll();
   19766:	f7ff fef1 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   1976a:	4b12      	ldr	r3, [pc, #72]	; (197b4 <vTaskDelayUntil+0x50>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   1976c:	6804      	ldr	r4, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   1976e:	681a      	ldr	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   19770:	1863      	adds	r3, r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1158
			if( xConstTickCount < *pxPreviousWakeTime )
   19772:	42a2      	cmp	r2, r4
   19774:	d217      	bcs.n	197a6 <vTaskDelayUntil+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1165
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
   19776:	429c      	cmp	r4, r3
   19778:	d919      	bls.n	197ae <vTaskDelayUntil+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179 (discriminator 1)
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   1977a:	429a      	cmp	r2, r3
   1977c:	bf2c      	ite	cs
   1977e:	2100      	movcs	r1, #0
   19780:	2101      	movcc	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1190
			*pxPreviousWakeTime = xTimeToWake;
   19782:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1192
			if( xShouldDelay != pdFALSE )
   19784:	b119      	cbz	r1, 1978e <vTaskDelayUntil+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1198
				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
   19786:	2100      	movs	r1, #0
   19788:	1a98      	subs	r0, r3, r2
   1978a:	f7ff fd5b 	bl	19244 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1205
		xAlreadyYielded = xTaskResumeAll();
   1978e:	f7ff ff7d 	bl	1968c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1209
		if( xAlreadyYielded == pdFALSE )
   19792:	b938      	cbnz	r0, 197a4 <vTaskDelayUntil+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1211
			portYIELD_WITHIN_API();
   19794:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19798:	4b07      	ldr	r3, [pc, #28]	; (197b8 <vTaskDelayUntil+0x54>)
   1979a:	601a      	str	r2, [r3, #0]
   1979c:	f3bf 8f4f 	dsb	sy
   197a0:	f3bf 8f6f 	isb	sy
   197a4:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1179
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   197a6:	429c      	cmp	r4, r3
   197a8:	d9e7      	bls.n	1977a <vTaskDelayUntil+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1181
					xShouldDelay = pdTRUE;
   197aa:	2101      	movs	r1, #1
   197ac:	e7e9      	b.n	19782 <vTaskDelayUntil+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1143
	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
   197ae:	2100      	movs	r1, #0
   197b0:	e7e7      	b.n	19782 <vTaskDelayUntil+0x1e>
   197b2:	bf00      	nop
   197b4:	2007c75c 	.word	0x2007c75c
   197b8:	e000ed04 	.word	0xe000ed04

000197bc <vTaskDelay>:
vTaskDelay():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   197bc:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   197be:	b940      	cbnz	r0, 197d2 <vTaskDelay+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   197c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   197c4:	4b08      	ldr	r3, [pc, #32]	; (197e8 <vTaskDelay+0x2c>)
   197c6:	601a      	str	r2, [r3, #0]
   197c8:	f3bf 8f4f 	dsb	sy
   197cc:	f3bf 8f6f 	isb	sy
   197d0:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   197d2:	f7ff febb 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   197d6:	2100      	movs	r1, #0
   197d8:	f7ff fd34 	bl	19244 <prvAddCurrentTaskToDelayedList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   197dc:	f7ff ff56 	bl	1968c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   197e0:	2800      	cmp	r0, #0
   197e2:	d0ed      	beq.n	197c0 <vTaskDelay+0x4>
   197e4:	bd08      	pop	{r3, pc}
   197e6:	bf00      	nop
   197e8:	e000ed04 	.word	0xe000ed04

000197ec <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   197ec:	4b26      	ldr	r3, [pc, #152]	; (19888 <vTaskSwitchContext+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   197ee:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   197f0:	681a      	ldr	r2, [r3, #0]
   197f2:	4b26      	ldr	r3, [pc, #152]	; (1988c <vTaskSwitchContext+0xa0>)
   197f4:	b112      	cbz	r2, 197fc <vTaskSwitchContext+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   197f6:	2201      	movs	r2, #1
   197f8:	601a      	str	r2, [r3, #0]
   197fa:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   197fc:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   197fe:	f7ff f953 	bl	18aa8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   19802:	4a23      	ldr	r2, [pc, #140]	; (19890 <vTaskSwitchContext+0xa4>)
   19804:	4c23      	ldr	r4, [pc, #140]	; (19894 <vTaskSwitchContext+0xa8>)
   19806:	6815      	ldr	r5, [r2, #0]
   19808:	42a8      	cmp	r0, r5
   1980a:	d904      	bls.n	19816 <vTaskSwitchContext+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   1980c:	6821      	ldr	r1, [r4, #0]
   1980e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   19810:	1b5b      	subs	r3, r3, r5
   19812:	4403      	add	r3, r0
   19814:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   19816:	6823      	ldr	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   19818:	6010      	str	r0, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   1981a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1981c:	681a      	ldr	r2, [r3, #0]
   1981e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   19822:	d10b      	bne.n	1983c <vTaskSwitchContext+0x50>
   19824:	685a      	ldr	r2, [r3, #4]
   19826:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   1982a:	d107      	bne.n	1983c <vTaskSwitchContext+0x50>
   1982c:	689a      	ldr	r2, [r3, #8]
   1982e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   19832:	d103      	bne.n	1983c <vTaskSwitchContext+0x50>
   19834:	68db      	ldr	r3, [r3, #12]
   19836:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   1983a:	d004      	beq.n	19846 <vTaskSwitchContext+0x5a>
   1983c:	6820      	ldr	r0, [r4, #0]
   1983e:	6821      	ldr	r1, [r4, #0]
   19840:	3134      	adds	r1, #52	; 0x34
   19842:	f7ff f947 	bl	18ad4 <vApplicationStackOverflowHook>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   19846:	4b14      	ldr	r3, [pc, #80]	; (19898 <vTaskSwitchContext+0xac>)
   19848:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   1984a:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   1984e:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   19850:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   19852:	f1c3 031f 	rsb	r3, r3, #31
   19856:	fb00 f203 	mul.w	r2, r0, r3
   1985a:	4910      	ldr	r1, [pc, #64]	; (1989c <vTaskSwitchContext+0xb0>)
   1985c:	188d      	adds	r5, r1, r2
   1985e:	686e      	ldr	r6, [r5, #4]
   19860:	3208      	adds	r2, #8
   19862:	6876      	ldr	r6, [r6, #4]
   19864:	440a      	add	r2, r1
   19866:	4296      	cmp	r6, r2
   19868:	fb00 1303 	mla	r3, r0, r3, r1
   1986c:	bf08      	it	eq
   1986e:	6872      	ldreq	r2, [r6, #4]
   19870:	606e      	str	r6, [r5, #4]
   19872:	bf08      	it	eq
   19874:	606a      	streq	r2, [r5, #4]
   19876:	685b      	ldr	r3, [r3, #4]
   19878:	68db      	ldr	r3, [r3, #12]
   1987a:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   1987c:	6823      	ldr	r3, [r4, #0]
   1987e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   19880:	4b07      	ldr	r3, [pc, #28]	; (198a0 <vTaskSwitchContext+0xb4>)
   19882:	645a      	str	r2, [r3, #68]	; 0x44
   19884:	bd70      	pop	{r4, r5, r6, pc}
   19886:	bf00      	nop
   19888:	2007c6f0 	.word	0x2007c6f0
   1988c:	2007c760 	.word	0x2007c760
   19890:	2007c6e4 	.word	0x2007c6e4
   19894:	2007c610 	.word	0x2007c610
   19898:	2007c6f8 	.word	0x2007c6f8
   1989c:	2007c61c 	.word	0x2007c61c
   198a0:	40024000 	.word	0x40024000

000198a4 <vTaskSuspend>:
vTaskSuspend():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1567
	{
   198a4:	b570      	push	{r4, r5, r6, lr}
   198a6:	4604      	mov	r4, r0
   198a8:	4e23      	ldr	r6, [pc, #140]	; (19938 <vTaskSuspend+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1570
		taskENTER_CRITICAL();
   198aa:	f7ff f87d 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
   198ae:	b904      	cbnz	r4, 198b2 <vTaskSuspend+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1574 (discriminator 1)
   198b0:	6834      	ldr	r4, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1580 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   198b2:	1d25      	adds	r5, r4, #4
   198b4:	4628      	mov	r0, r5
   198b6:	f7ff f988 	bl	18bca <uxListRemove>
   198ba:	b960      	cbnz	r0, 198d6 <vTaskSuspend+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   198bc:	2114      	movs	r1, #20
   198be:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   198c0:	4b1e      	ldr	r3, [pc, #120]	; (1993c <vTaskSuspend+0x98>)
   198c2:	4341      	muls	r1, r0
   198c4:	585b      	ldr	r3, [r3, r1]
   198c6:	b933      	cbnz	r3, 198d6 <vTaskSuspend+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1582 (discriminator 1)
   198c8:	2201      	movs	r2, #1
   198ca:	491d      	ldr	r1, [pc, #116]	; (19940 <vTaskSuspend+0x9c>)
   198cc:	4082      	lsls	r2, r0
   198ce:	680b      	ldr	r3, [r1, #0]
   198d0:	ea23 0302 	bic.w	r3, r3, r2
   198d4:	600b      	str	r3, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1590
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   198d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   198d8:	b11b      	cbz	r3, 198e2 <vTaskSuspend+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1592
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   198da:	f104 0018 	add.w	r0, r4, #24
   198de:	f7ff f974 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   198e2:	4629      	mov	r1, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   198e4:	4d17      	ldr	r5, [pc, #92]	; (19944 <vTaskSuspend+0xa0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1599
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
   198e6:	4818      	ldr	r0, [pc, #96]	; (19948 <vTaskSuspend+0xa4>)
   198e8:	f7ff f94c 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1601
		taskEXIT_CRITICAL();
   198ec:	f7ff f86c 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1603
		if( xSchedulerRunning != pdFALSE )
   198f0:	682a      	ldr	r2, [r5, #0]
   198f2:	b12a      	cbz	r2, 19900 <vTaskSuspend+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1607
			taskENTER_CRITICAL();
   198f4:	f7ff f858 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1609
				prvResetNextTaskUnblockTime();
   198f8:	f7ff fc92 	bl	19220 <prvResetNextTaskUnblockTime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1611
			taskEXIT_CRITICAL();
   198fc:	f7ff f864 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1618
		if( pxTCB == pxCurrentTCB )
   19900:	6833      	ldr	r3, [r6, #0]
   19902:	429c      	cmp	r4, r3
   19904:	d116      	bne.n	19934 <vTaskSuspend+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1620
			if( xSchedulerRunning != pdFALSE )
   19906:	682b      	ldr	r3, [r5, #0]
   19908:	b143      	cbz	r3, 1991c <vTaskSuspend+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1624
				portYIELD_WITHIN_API();
   1990a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1990e:	4b0f      	ldr	r3, [pc, #60]	; (1994c <vTaskSuspend+0xa8>)
   19910:	601a      	str	r2, [r3, #0]
   19912:	f3bf 8f4f 	dsb	sy
   19916:	f3bf 8f6f 	isb	sy
   1991a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1631
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
   1991c:	4a0c      	ldr	r2, [pc, #48]	; (19950 <vTaskSuspend+0xac>)
   1991e:	490a      	ldr	r1, [pc, #40]	; (19948 <vTaskSuspend+0xa4>)
   19920:	6812      	ldr	r2, [r2, #0]
   19922:	6809      	ldr	r1, [r1, #0]
   19924:	4291      	cmp	r1, r2
   19926:	d101      	bne.n	1992c <vTaskSuspend+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1637
					pxCurrentTCB = NULL;
   19928:	6033      	str	r3, [r6, #0]
   1992a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1649
	}
   1992c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:1641
					vTaskSwitchContext();
   19930:	f7ff bf5c 	b.w	197ec <vTaskSwitchContext>
   19934:	bd70      	pop	{r4, r5, r6, pc}
   19936:	bf00      	nop
   19938:	2007c610 	.word	0x2007c610
   1993c:	2007c61c 	.word	0x2007c61c
   19940:	2007c6f8 	.word	0x2007c6f8
   19944:	2007c744 	.word	0x2007c744
   19948:	2007c748 	.word	0x2007c748
   1994c:	e000ed04 	.word	0xe000ed04
   19950:	2007c6e8 	.word	0x2007c6e8

00019954 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   19954:	b510      	push	{r4, lr}
   19956:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   19958:	4b05      	ldr	r3, [pc, #20]	; (19970 <vTaskPlaceOnEventList+0x1c>)
   1995a:	6819      	ldr	r1, [r3, #0]
   1995c:	3118      	adds	r1, #24
   1995e:	f7ff f91d 	bl	18b9c <vListInsert>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   19962:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   19964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   19968:	2101      	movs	r1, #1
   1996a:	f7ff bc6b 	b.w	19244 <prvAddCurrentTaskToDelayedList>
   1996e:	bf00      	nop
   19970:	2007c610 	.word	0x2007c610

00019974 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   19974:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   19976:	68c3      	ldr	r3, [r0, #12]
   19978:	68dc      	ldr	r4, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   1997a:	f104 0518 	add.w	r5, r4, #24
   1997e:	4628      	mov	r0, r5
   19980:	f7ff f923 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19984:	4b11      	ldr	r3, [pc, #68]	; (199cc <xTaskRemoveFromEventList+0x58>)
   19986:	681b      	ldr	r3, [r3, #0]
   19988:	b9e3      	cbnz	r3, 199c4 <xTaskRemoveFromEventList+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   1998a:	1d25      	adds	r5, r4, #4
   1998c:	4628      	mov	r0, r5
   1998e:	f7ff f91c 	bl	18bca <uxListRemove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   19992:	2301      	movs	r3, #1
   19994:	490e      	ldr	r1, [pc, #56]	; (199d0 <xTaskRemoveFromEventList+0x5c>)
   19996:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   19998:	6808      	ldr	r0, [r1, #0]
   1999a:	4093      	lsls	r3, r2
   1999c:	4303      	orrs	r3, r0
   1999e:	2014      	movs	r0, #20
   199a0:	600b      	str	r3, [r1, #0]
   199a2:	4629      	mov	r1, r5
   199a4:	4b0b      	ldr	r3, [pc, #44]	; (199d4 <xTaskRemoveFromEventList+0x60>)
   199a6:	fb00 3002 	mla	r0, r0, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   199aa:	f7ff f8eb 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   199ae:	4b0a      	ldr	r3, [pc, #40]	; (199d8 <xTaskRemoveFromEventList+0x64>)
   199b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   199b2:	681b      	ldr	r3, [r3, #0]
   199b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   199b6:	429a      	cmp	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   199b8:	bf85      	ittet	hi
   199ba:	2001      	movhi	r0, #1
   199bc:	4b07      	ldrhi	r3, [pc, #28]	; (199dc <xTaskRemoveFromEventList+0x68>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   199be:	2000      	movls	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   199c0:	6018      	strhi	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   199c2:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   199c4:	4629      	mov	r1, r5
   199c6:	4806      	ldr	r0, [pc, #24]	; (199e0 <xTaskRemoveFromEventList+0x6c>)
   199c8:	e7ef      	b.n	199aa <xTaskRemoveFromEventList+0x36>
   199ca:	bf00      	nop
   199cc:	2007c6f0 	.word	0x2007c6f0
   199d0:	2007c6f8 	.word	0x2007c6f8
   199d4:	2007c61c 	.word	0x2007c61c
   199d8:	2007c610 	.word	0x2007c610
   199dc:	2007c760 	.word	0x2007c760
   199e0:	2007c730 	.word	0x2007c730

000199e4 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   199e4:	4b03      	ldr	r3, [pc, #12]	; (199f4 <vTaskSetTimeOutState+0x10>)
   199e6:	681b      	ldr	r3, [r3, #0]
   199e8:	6003      	str	r3, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   199ea:	4b03      	ldr	r3, [pc, #12]	; (199f8 <vTaskSetTimeOutState+0x14>)
   199ec:	681b      	ldr	r3, [r3, #0]
   199ee:	6043      	str	r3, [r0, #4]
   199f0:	4770      	bx	lr
   199f2:	bf00      	nop
   199f4:	2007c72c 	.word	0x2007c72c
   199f8:	2007c75c 	.word	0x2007c75c

000199fc <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   199fc:	b538      	push	{r3, r4, r5, lr}
   199fe:	460d      	mov	r5, r1
   19a00:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   19a02:	f7fe ffd1 	bl	189a8 <vPortEnterCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   19a06:	4b0e      	ldr	r3, [pc, #56]	; (19a40 <xTaskCheckForTimeOut+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   19a08:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   19a0a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   19a0c:	1c53      	adds	r3, r2, #1
   19a0e:	d010      	beq.n	19a32 <xTaskCheckForTimeOut+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   19a10:	4b0c      	ldr	r3, [pc, #48]	; (19a44 <xTaskCheckForTimeOut+0x48>)
   19a12:	6821      	ldr	r1, [r4, #0]
   19a14:	681b      	ldr	r3, [r3, #0]
   19a16:	4299      	cmp	r1, r3
   19a18:	6863      	ldr	r3, [r4, #4]
   19a1a:	d001      	beq.n	19a20 <xTaskCheckForTimeOut+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   19a1c:	4298      	cmp	r0, r3
   19a1e:	d20d      	bcs.n	19a3c <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   19a20:	1ac1      	subs	r1, r0, r3
   19a22:	428a      	cmp	r2, r1
   19a24:	d90a      	bls.n	19a3c <xTaskCheckForTimeOut+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   19a26:	1a1b      	subs	r3, r3, r0
   19a28:	4413      	add	r3, r2
   19a2a:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   19a2c:	4620      	mov	r0, r4
   19a2e:	f7ff ffd9 	bl	199e4 <vTaskSetTimeOutState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   19a32:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   19a34:	f7fe ffc8 	bl	189c8 <vPortExitCritical>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   19a38:	4620      	mov	r0, r4
   19a3a:	bd38      	pop	{r3, r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   19a3c:	2401      	movs	r4, #1
   19a3e:	e7f9      	b.n	19a34 <xTaskCheckForTimeOut+0x38>
   19a40:	2007c75c 	.word	0x2007c75c
   19a44:	2007c72c 	.word	0x2007c72c

00019a48 <vTaskMissedYield>:
vTaskMissedYield():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   19a48:	2201      	movs	r2, #1
   19a4a:	4b01      	ldr	r3, [pc, #4]	; (19a50 <vTaskMissedYield+0x8>)
   19a4c:	601a      	str	r2, [r3, #0]
   19a4e:	4770      	bx	lr
   19a50:	2007c760 	.word	0x2007c760

00019a54 <vTaskGetInfo>:
vTaskGetInfo():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3412
	{
   19a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19a58:	460c      	mov	r4, r1
   19a5a:	4617      	mov	r7, r2
   19a5c:	4698      	mov	r8, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416
		pxTCB = prvGetTCBFromHandle( xTask );
   19a5e:	4606      	mov	r6, r0
   19a60:	bb58      	cbnz	r0, 19aba <vTaskGetInfo+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3416 (discriminator 1)
   19a62:	4b1b      	ldr	r3, [pc, #108]	; (19ad0 <vTaskGetInfo+0x7c>)
   19a64:	681d      	ldr	r5, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3419 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
   19a66:	f105 0334 	add.w	r3, r5, #52	; 0x34
   19a6a:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   19a6c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3418 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
   19a6e:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3420 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
   19a70:	6123      	str	r3, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3421 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
   19a72:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   19a74:	61e3      	str	r3, [r4, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3422 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
   19a76:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   19a78:	60a3      	str	r3, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3429 (discriminator 4)
			if( pxTaskStatus->eCurrentState == eSuspended )
   19a7a:	7b23      	ldrb	r3, [r4, #12]
   19a7c:	2b03      	cmp	r3, #3
   19a7e:	d107      	bne.n	19a90 <vTaskGetInfo+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3431
				vTaskSuspendAll();
   19a80:	f7ff fd64 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3433
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   19a84:	6aab      	ldr	r3, [r5, #40]	; 0x28
   19a86:	b10b      	cbz	r3, 19a8c <vTaskGetInfo+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3435
						pxTaskStatus->eCurrentState = eBlocked;
   19a88:	2302      	movs	r3, #2
   19a8a:	7323      	strb	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3438
				xTaskResumeAll();
   19a8c:	f7ff fdfe 	bl	1968c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19a90:	6c6b      	ldr	r3, [r5, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   19a92:	f1b8 0f05 	cmp.w	r8, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3445
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
   19a96:	6163      	str	r3, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3455
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
   19a98:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   19a9a:	61a3      	str	r3, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3466
		if( eState != eInvalid )
   19a9c:	d00f      	beq.n	19abe <vTaskGetInfo+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3468
			pxTaskStatus->eCurrentState = eState;
   19a9e:	f884 800c 	strb.w	r8, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3477
		if( xGetFreeStackSpace != pdFALSE )
   19aa2:	b18f      	cbz	r7, 19ac8 <vTaskGetInfo+0x74>
   19aa4:	6b29      	ldr	r1, [r5, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3485
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
   19aa6:	460a      	mov	r2, r1
   19aa8:	1a53      	subs	r3, r2, r1
prvTaskCheckFreeStackSpace():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   19aaa:	f812 0b01 	ldrb.w	r0, [r2], #1
   19aae:	28a5      	cmp	r0, #165	; 0xa5
   19ab0:	d0fa      	beq.n	19aa8 <vTaskGetInfo+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3543
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
   19ab2:	089b      	lsrs	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3545
		return ( uint16_t ) ulCount;
   19ab4:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
   19ab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19aba:	4605      	mov	r5, r0
   19abc:	e7d3      	b.n	19a66 <vTaskGetInfo+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3472
			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
   19abe:	4630      	mov	r0, r6
   19ac0:	f7ff fcd8 	bl	19474 <eTaskGetState>
   19ac4:	7320      	strb	r0, [r4, #12]
   19ac6:	e7ec      	b.n	19aa2 <vTaskGetInfo+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3491
			pxTaskStatus->usStackHighWaterMark = 0;
   19ac8:	8427      	strh	r7, [r4, #32]
   19aca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19ace:	bf00      	nop
   19ad0:	2007c610 	.word	0x2007c610

00019ad4 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   19ad4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19ad8:	680d      	ldr	r5, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3501
	{
   19ada:	4681      	mov	r9, r0
   19adc:	460c      	mov	r4, r1
   19ade:	4693      	mov	fp, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3505
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
   19ae0:	b31d      	cbz	r5, 19b2a <prvListTasksWithinSingleList+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3503
	UBaseType_t uxTask = 0;
   19ae2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19ae4:	f04f 0a24 	mov.w	sl, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3507
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
   19ae8:	684b      	ldr	r3, [r1, #4]
   19aea:	f101 0708 	add.w	r7, r1, #8
   19aee:	685b      	ldr	r3, [r3, #4]
   19af0:	42bb      	cmp	r3, r7
   19af2:	604b      	str	r3, [r1, #4]
   19af4:	bf04      	itt	eq
   19af6:	68cb      	ldreq	r3, [r1, #12]
   19af8:	604b      	streq	r3, [r1, #4]
   19afa:	684b      	ldr	r3, [r1, #4]
   19afc:	f8d3 800c 	ldr.w	r8, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19b00:	6863      	ldr	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19b02:	fb0a 9105 	mla	r1, sl, r5, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19b06:	685b      	ldr	r3, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19b08:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19b0a:	429f      	cmp	r7, r3
   19b0c:	6063      	str	r3, [r4, #4]
   19b0e:	bf08      	it	eq
   19b10:	68e3      	ldreq	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3517
				uxTask++;
   19b12:	f105 0501 	add.w	r5, r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3515
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
   19b16:	bf08      	it	eq
   19b18:	6063      	streq	r3, [r4, #4]
   19b1a:	6863      	ldr	r3, [r4, #4]
   19b1c:	68de      	ldr	r6, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3516
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
   19b1e:	465b      	mov	r3, fp
   19b20:	4630      	mov	r0, r6
   19b22:	f7ff ff97 	bl	19a54 <vTaskGetInfo>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3518
			} while( pxNextTCB != pxFirstTCB );
   19b26:	45b0      	cmp	r8, r6
   19b28:	d1ea      	bne.n	19b00 <prvListTasksWithinSingleList+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3526
	}
   19b2a:	4628      	mov	r0, r5
   19b2c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019b30 <uxTaskGetSystemState>:
uxTaskGetSystemState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2322
	{
   19b30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   19b34:	4606      	mov	r6, r0
   19b36:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2325
		vTaskSuspendAll();
   19b38:	f7ff fd08 	bl	1954c <vTaskSuspendAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2328
			if( uxArraySize >= uxCurrentNumberOfTasks )
   19b3c:	4b1d      	ldr	r3, [pc, #116]	; (19bb4 <uxTaskGetSystemState+0x84>)
   19b3e:	681b      	ldr	r3, [r3, #0]
   19b40:	428b      	cmp	r3, r1
   19b42:	d834      	bhi.n	19bae <uxTaskGetSystemState+0x7e>
   19b44:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   19b46:	2724      	movs	r7, #36	; 0x24
   19b48:	462c      	mov	r4, r5
   19b4a:	f8df 9078 	ldr.w	r9, [pc, #120]	; 19bc4 <uxTaskGetSystemState+0x94>
   19b4e:	f105 01b4 	add.w	r1, r5, #180	; 0xb4
   19b52:	fb07 6004 	mla	r0, r7, r4, r6
   19b56:	2201      	movs	r2, #1
   19b58:	4449      	add	r1, r9
   19b5a:	f7ff ffbb 	bl	19ad4 <prvListTasksWithinSingleList>
   19b5e:	3d14      	subs	r5, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19b60:	f115 0fc8 	cmn.w	r5, #200	; 0xc8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2335 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
   19b64:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2337 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19b66:	d1f2      	bne.n	19b4e <uxTaskGetSystemState+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   19b68:	4b13      	ldr	r3, [pc, #76]	; (19bb8 <uxTaskGetSystemState+0x88>)
   19b6a:	2202      	movs	r2, #2
   19b6c:	6819      	ldr	r1, [r3, #0]
   19b6e:	fb07 6004 	mla	r0, r7, r4, r6
   19b72:	f7ff ffaf 	bl	19ad4 <prvListTasksWithinSingleList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   19b76:	4b11      	ldr	r3, [pc, #68]	; (19bbc <uxTaskGetSystemState+0x8c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2341
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
   19b78:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2342
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
   19b7a:	6819      	ldr	r1, [r3, #0]
   19b7c:	2202      	movs	r2, #2
   19b7e:	fb07 6004 	mla	r0, r7, r4, r6
   19b82:	f7ff ffa7 	bl	19ad4 <prvListTasksWithinSingleList>
   19b86:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2356
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
   19b88:	fb07 6004 	mla	r0, r7, r4, r6
   19b8c:	2203      	movs	r2, #3
   19b8e:	490c      	ldr	r1, [pc, #48]	; (19bc0 <uxTaskGetSystemState+0x90>)
   19b90:	f7ff ffa0 	bl	19ad4 <prvListTasksWithinSingleList>
   19b94:	4404      	add	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2362
					if( pulTotalRunTime != NULL )
   19b96:	f1b8 0f00 	cmp.w	r8, #0
   19b9a:	d003      	beq.n	19ba4 <uxTaskGetSystemState+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2367
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   19b9c:	f7fe ff84 	bl	18aa8 <rts_not_full_trace_get>
   19ba0:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2385
		( void ) xTaskResumeAll();
   19ba4:	f7ff fd72 	bl	1968c <xTaskResumeAll>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2388
	}
   19ba8:	4620      	mov	r0, r4
   19baa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:2323
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
   19bae:	2400      	movs	r4, #0
   19bb0:	e7f8      	b.n	19ba4 <uxTaskGetSystemState+0x74>
   19bb2:	bf00      	nop
   19bb4:	2007c6e8 	.word	0x2007c6e8
   19bb8:	2007c614 	.word	0x2007c614
   19bbc:	2007c618 	.word	0x2007c618
   19bc0:	2007c748 	.word	0x2007c748
   19bc4:	2007c61c 	.word	0x2007c61c

00019bc8 <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559
		pxTCB = prvGetTCBFromHandle( xTask );
   19bc8:	b908      	cbnz	r0, 19bce <uxTaskGetStackHighWaterMark+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3559 (discriminator 1)
   19bca:	4b06      	ldr	r3, [pc, #24]	; (19be4 <uxTaskGetStackHighWaterMark+0x1c>)
   19bcc:	6818      	ldr	r0, [r3, #0]
   19bce:	6b02      	ldr	r2, [r0, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3563 (discriminator 4)
			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
   19bd0:	4613      	mov	r3, r2
   19bd2:	1a98      	subs	r0, r3, r2
prvTaskCheckFreeStackSpace():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3537
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
   19bd4:	f813 1b01 	ldrb.w	r1, [r3], #1
   19bd8:	29a5      	cmp	r1, #165	; 0xa5
   19bda:	d0fa      	beq.n	19bd2 <uxTaskGetStackHighWaterMark+0xa>
uxTaskGetStackHighWaterMark():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3574
	}
   19bdc:	f3c0 008f 	ubfx	r0, r0, #2, #16
   19be0:	4770      	bx	lr
   19be2:	bf00      	nop
   19be4:	2007c610 	.word	0x2007c610

00019be8 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   19be8:	4b05      	ldr	r3, [pc, #20]	; (19c00 <xTaskGetSchedulerState+0x18>)
   19bea:	681b      	ldr	r3, [r3, #0]
   19bec:	b133      	cbz	r3, 19bfc <xTaskGetSchedulerState+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   19bee:	4b05      	ldr	r3, [pc, #20]	; (19c04 <xTaskGetSchedulerState+0x1c>)
   19bf0:	681b      	ldr	r3, [r3, #0]
   19bf2:	2b00      	cmp	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   19bf4:	bf0c      	ite	eq
   19bf6:	2002      	moveq	r0, #2
   19bf8:	2000      	movne	r0, #0
   19bfa:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   19bfc:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   19bfe:	4770      	bx	lr
   19c00:	2007c744 	.word	0x2007c744
   19c04:	2007c6f0 	.word	0x2007c6f0

00019c08 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   19c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   19c0c:	4604      	mov	r4, r0
   19c0e:	2800      	cmp	r0, #0
   19c10:	d039      	beq.n	19c86 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   19c12:	4d1e      	ldr	r5, [pc, #120]	; (19c8c <vTaskPriorityInherit+0x84>)
   19c14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   19c16:	682a      	ldr	r2, [r5, #0]
   19c18:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   19c1a:	4293      	cmp	r3, r2
   19c1c:	d233      	bcs.n	19c86 <vTaskPriorityInherit+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   19c1e:	2714      	movs	r7, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   19c20:	6982      	ldr	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   19c22:	4e1b      	ldr	r6, [pc, #108]	; (19c90 <vTaskPriorityInherit+0x88>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   19c24:	2a00      	cmp	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19c26:	bfa8      	it	ge
   19c28:	682a      	ldrge	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   19c2a:	fb07 6303 	mla	r3, r7, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19c2e:	bfa2      	ittt	ge
   19c30:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   19c32:	f1c2 020a 	rsbge	r2, r2, #10
   19c36:	6182      	strge	r2, [r0, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   19c38:	6942      	ldr	r2, [r0, #20]
   19c3a:	429a      	cmp	r2, r3
   19c3c:	d120      	bne.n	19c80 <vTaskPriorityInherit+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19c3e:	f100 0804 	add.w	r8, r0, #4
   19c42:	4640      	mov	r0, r8
   19c44:	f7fe ffc1 	bl	18bca <uxListRemove>
   19c48:	4a12      	ldr	r2, [pc, #72]	; (19c94 <vTaskPriorityInherit+0x8c>)
   19c4a:	b948      	cbnz	r0, 19c60 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   19c4c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   19c4e:	4347      	muls	r7, r0
   19c50:	59f3      	ldr	r3, [r6, r7]
   19c52:	b92b      	cbnz	r3, 19c60 <vTaskPriorityInherit+0x58>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   19c54:	2101      	movs	r1, #1
   19c56:	6813      	ldr	r3, [r2, #0]
   19c58:	4081      	lsls	r1, r0
   19c5a:	ea23 0301 	bic.w	r3, r3, r1
   19c5e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19c60:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19c62:	6811      	ldr	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19c64:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19c66:	2301      	movs	r3, #1
   19c68:	4083      	lsls	r3, r0
   19c6a:	430b      	orrs	r3, r1
   19c6c:	6013      	str	r3, [r2, #0]
   19c6e:	2314      	movs	r3, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19c70:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19c72:	4641      	mov	r1, r8
   19c74:	fb03 6000 	mla	r0, r3, r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   19c78:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   19c7c:	f7fe bf82 	b.w	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   19c80:	682b      	ldr	r3, [r5, #0]
   19c82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   19c84:	62c3      	str	r3, [r0, #44]	; 0x2c
   19c86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19c8a:	bf00      	nop
   19c8c:	2007c610 	.word	0x2007c610
   19c90:	2007c61c 	.word	0x2007c61c
   19c94:	2007c6f8 	.word	0x2007c6f8

00019c98 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   19c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   19c9a:	4604      	mov	r4, r0
   19c9c:	b908      	cbnz	r0, 19ca2 <xTaskPriorityDisinherit+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   19c9e:	2000      	movs	r0, #0
   19ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19ca2:	6c83      	ldr	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19ca4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   19ca6:	6c42      	ldr	r2, [r0, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19ca8:	3b01      	subs	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19caa:	4291      	cmp	r1, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   19cac:	6483      	str	r3, [r0, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   19cae:	d0f6      	beq.n	19c9e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   19cb0:	2b00      	cmp	r3, #0
   19cb2:	d1f4      	bne.n	19c9e <xTaskPriorityDisinherit+0x6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   19cb4:	1d05      	adds	r5, r0, #4
   19cb6:	4628      	mov	r0, r5
   19cb8:	f7fe ff87 	bl	18bca <uxListRemove>
   19cbc:	4e10      	ldr	r6, [pc, #64]	; (19d00 <xTaskPriorityDisinherit+0x68>)
   19cbe:	4a11      	ldr	r2, [pc, #68]	; (19d04 <xTaskPriorityDisinherit+0x6c>)
   19cc0:	b950      	cbnz	r0, 19cd8 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   19cc2:	2114      	movs	r1, #20
   19cc4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   19cc6:	4379      	muls	r1, r7
   19cc8:	5873      	ldr	r3, [r6, r1]
   19cca:	b92b      	cbnz	r3, 19cd8 <xTaskPriorityDisinherit+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   19ccc:	2001      	movs	r0, #1
   19cce:	6813      	ldr	r3, [r2, #0]
   19cd0:	40b8      	lsls	r0, r7
   19cd2:	ea23 0300 	bic.w	r3, r3, r0
   19cd6:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   19cd8:	6c63      	ldr	r3, [r4, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19cda:	f1c3 010a 	rsb	r1, r3, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   19cde:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   19ce0:	61a1      	str	r1, [r4, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   19ce2:	2401      	movs	r4, #1
   19ce4:	6811      	ldr	r1, [r2, #0]
   19ce6:	fa04 f003 	lsl.w	r0, r4, r3
   19cea:	4308      	orrs	r0, r1
   19cec:	6010      	str	r0, [r2, #0]
   19cee:	2014      	movs	r0, #20
   19cf0:	4629      	mov	r1, r5
   19cf2:	fb00 6003 	mla	r0, r0, r3, r6
   19cf6:	f7fe ff45 	bl	18b84 <vListInsertEnd>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   19cfa:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   19cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19cfe:	bf00      	nop
   19d00:	2007c61c 	.word	0x2007c61c
   19d04:	2007c6f8 	.word	0x2007c6f8

00019d08 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   19d08:	4b04      	ldr	r3, [pc, #16]	; (19d1c <pvTaskIncrementMutexHeldCount+0x14>)
   19d0a:	681a      	ldr	r2, [r3, #0]
   19d0c:	b11a      	cbz	r2, 19d16 <pvTaskIncrementMutexHeldCount+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   19d0e:	6819      	ldr	r1, [r3, #0]
   19d10:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   19d12:	3201      	adds	r2, #1
   19d14:	648a      	str	r2, [r1, #72]	; 0x48
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   19d16:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   19d18:	4770      	bx	lr
   19d1a:	bf00      	nop
   19d1c:	2007c610 	.word	0x2007c610

00019d20 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:51
}

void vTaskResetRunTimeStats(void)
{
   19d20:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:53
    BaseType_t uxQueue = configMAX_PRIORITIES;
    vTaskSuspendAll();
   19d22:	f7ff fc13 	bl	1954c <vTaskSuspendAll>
   19d26:	24b4      	movs	r4, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:58
    {
        do
        {
            uxQueue--;
            if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE)
   19d28:	4d12      	ldr	r5, [pc, #72]	; (19d74 <vTaskResetRunTimeStats+0x54>)
   19d2a:	5963      	ldr	r3, [r4, r5]
   19d2c:	b113      	cbz	r3, 19d34 <vTaskResetRunTimeStats+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:60
            {
                prvResetRunTimeStatsInList(
   19d2e:	1928      	adds	r0, r5, r4
   19d30:	f7ff fa4b 	bl	191ca <prvResetRunTimeStatsInList>
   19d34:	3c14      	subs	r4, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:63
                        (List_t *) &(pxReadyTasksLists[uxQueue]));
            }
        } while (uxQueue > ( unsigned portBASE_TYPE ) tskIDLE_PRIORITY);
   19d36:	f114 0f14 	cmn.w	r4, #20
   19d3a:	d1f6      	bne.n	19d2a <vTaskResetRunTimeStats+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:65

        if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE)
   19d3c:	4b0e      	ldr	r3, [pc, #56]	; (19d78 <vTaskResetRunTimeStats+0x58>)
   19d3e:	681a      	ldr	r2, [r3, #0]
   19d40:	6812      	ldr	r2, [r2, #0]
   19d42:	b112      	cbz	r2, 19d4a <vTaskResetRunTimeStats+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:67
        {
            prvResetRunTimeStatsInList((List_t *) pxDelayedTaskList);
   19d44:	6818      	ldr	r0, [r3, #0]
   19d46:	f7ff fa40 	bl	191ca <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:70
        }

        if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE)
   19d4a:	4b0c      	ldr	r3, [pc, #48]	; (19d7c <vTaskResetRunTimeStats+0x5c>)
   19d4c:	681a      	ldr	r2, [r3, #0]
   19d4e:	6812      	ldr	r2, [r2, #0]
   19d50:	b112      	cbz	r2, 19d58 <vTaskResetRunTimeStats+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:72
        {
            prvResetRunTimeStatsInList((List_t *) pxOverflowDelayedTaskList);
   19d52:	6818      	ldr	r0, [r3, #0]
   19d54:	f7ff fa39 	bl	191ca <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:86
        }
#endif

#if ( INCLUDE_vTaskSuspend == 1 )
        {
            if( listLIST_IS_EMPTY( &xSuspendedTaskList ) == pdFALSE )
   19d58:	4809      	ldr	r0, [pc, #36]	; (19d80 <vTaskResetRunTimeStats+0x60>)
   19d5a:	6803      	ldr	r3, [r0, #0]
   19d5c:	b10b      	cbz	r3, 19d62 <vTaskResetRunTimeStats+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:88
            {
                prvResetRunTimeStatsInList(( List_t * ) &xSuspendedTaskList );
   19d5e:	f7ff fa34 	bl	191ca <prvResetRunTimeStatsInList>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:92
            }
        }
#endif
        ulTaskSwitchedInTime = 0;
   19d62:	2200      	movs	r2, #0
   19d64:	4b07      	ldr	r3, [pc, #28]	; (19d84 <vTaskResetRunTimeStats+0x64>)
   19d66:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:93
        portRESET_TIMER_FOR_RUN_TIME_STATS();
   19d68:	f7fe fea8 	bl	18abc <rts_not_full_trace_reset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:96
    }
    xTaskResumeAll();
}
   19d6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:95
    xTaskResumeAll();
   19d70:	f7ff bc8c 	b.w	1968c <xTaskResumeAll>
   19d74:	2007c61c 	.word	0x2007c61c
   19d78:	2007c614 	.word	0x2007c614
   19d7c:	2007c618 	.word	0x2007c618
   19d80:	2007c748 	.word	0x2007c748
   19d84:	2007c6e4 	.word	0x2007c6e4

00019d88 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99

    void vRunTimeStatIsrEntry()
    {
   19d88:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   19d8a:	f7fe fe8d 	bl	18aa8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   19d8e:	4b06      	ldr	r3, [pc, #24]	; (19da8 <vRunTimeStatIsrEntry+0x20>)
   19d90:	4a06      	ldr	r2, [pc, #24]	; (19dac <vRunTimeStatIsrEntry+0x24>)
   19d92:	6819      	ldr	r1, [r3, #0]
   19d94:	b129      	cbz	r1, 19da2 <vRunTimeStatIsrEntry+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   19d96:	6819      	ldr	r1, [r3, #0]
   19d98:	6814      	ldr	r4, [r2, #0]
   19d9a:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   19d9c:	1b1b      	subs	r3, r3, r4
   19d9e:	4403      	add	r3, r0
   19da0:	64cb      	str	r3, [r1, #76]	; 0x4c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   19da2:	6010      	str	r0, [r2, #0]
   19da4:	bd10      	pop	{r4, pc}
   19da6:	bf00      	nop
   19da8:	2007c610 	.word	0x2007c610
   19dac:	2007c6e4 	.word	0x2007c6e4

00019db0 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   19db0:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   19db2:	f7fe fe79 	bl	18aa8 <rts_not_full_trace_get>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   19db6:	4b01      	ldr	r3, [pc, #4]	; (19dbc <vRunTimeStatIsrExit+0xc>)
   19db8:	6018      	str	r0, [r3, #0]
   19dba:	bd08      	pop	{r3, pc}
   19dbc:	2007c6e4 	.word	0x2007c6e4

00019dc0 <stream_tlm(char const*, void*)>:
_ZL10stream_tlmPKcPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:609
    return true;
}

#if (SYS_CFG_ENABLE_TLM)
static void stream_tlm(const char *s, void *arg)
{
   19dc0:	b538      	push	{r3, r4, r5, lr}
   19dc2:	460c      	mov	r4, r1
   19dc4:	1e45      	subs	r5, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    CharDev *out = (CharDev*) arg;
    while (*s) {
   19dc6:	f815 1f01 	ldrb.w	r1, [r5, #1]!
   19dca:	b131      	cbz	r1, 19dda <stream_tlm(char const*, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:612
        out->putChar(*s);
   19dcc:	6823      	ldr	r3, [r4, #0]
   19dce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19dd2:	685b      	ldr	r3, [r3, #4]
   19dd4:	4620      	mov	r0, r4
   19dd6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:611
    while (*s) {
   19dd8:	e7f5      	b.n	19dc6 <stream_tlm(char const*, void*)+0x6>
   19dda:	bd38      	pop	{r3, r4, r5, pc}

00019ddc <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   19ddc:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   19dde:	4d10      	ldr	r5, [pc, #64]	; (19e20 <Storage::getFlashDrive()+0x44>)
   19de0:	4e10      	ldr	r6, [pc, #64]	; (19e24 <Storage::getFlashDrive()+0x48>)
   19de2:	782c      	ldrb	r4, [r5, #0]
   19de4:	f3bf 8f5b 	dmb	ish
   19de8:	f014 0401 	ands.w	r4, r4, #1
   19dec:	d115      	bne.n	19e1a <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   19dee:	4628      	mov	r0, r5
   19df0:	f003 fc1b 	bl	1d62a <__cxa_guard_acquire>
   19df4:	b188      	cbz	r0, 19e1a <Storage::getFlashDrive()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   19df6:	f44f 700f 	mov.w	r0, #572	; 0x23c
   19dfa:	f7fd f977 	bl	170ec <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   19dfe:	2330      	movs	r3, #48	; 0x30
   19e00:	f880 3239 	strb.w	r3, [r0, #569]	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19e04:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   19e06:	f880 4238 	strb.w	r4, [r0, #568]	; 0x238
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19e0a:	f880 323a 	strb.w	r3, [r0, #570]	; 0x23a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   19e0e:	f880 423b 	strb.w	r4, [r0, #571]	; 0x23b
_ZN7Storage13getFlashDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   19e12:	6030      	str	r0, [r6, #0]
   19e14:	4628      	mov	r0, r5
   19e16:	f003 fc14 	bl	1d642 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   19e1a:	6830      	ldr	r0, [r6, #0]
   19e1c:	bd70      	pop	{r4, r5, r6, pc}
   19e1e:	bf00      	nop
   19e20:	2007c774 	.word	0x2007c774
   19e24:	2007c778 	.word	0x2007c778

00019e28 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:55

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
   19e28:	b570      	push	{r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   19e2a:	4d10      	ldr	r5, [pc, #64]	; (19e6c <Storage::getSDDrive()+0x44>)
   19e2c:	4e10      	ldr	r6, [pc, #64]	; (19e70 <Storage::getSDDrive()+0x48>)
   19e2e:	782b      	ldrb	r3, [r5, #0]
   19e30:	f3bf 8f5b 	dmb	ish
   19e34:	f013 0401 	ands.w	r4, r3, #1
   19e38:	d116      	bne.n	19e68 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 1)
   19e3a:	4628      	mov	r0, r5
   19e3c:	f003 fbf5 	bl	1d62a <__cxa_guard_acquire>
   19e40:	b190      	cbz	r0, 19e68 <Storage::getSDDrive()+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   19e42:	f44f 700f 	mov.w	r0, #572	; 0x23c
   19e46:	f7fd f951 	bl	170ec <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   19e4a:	2301      	movs	r3, #1
   19e4c:	f880 3238 	strb.w	r3, [r0, #568]	; 0x238
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)
            mVolStr[0] = volumeNum + '0';
   19e50:	2331      	movs	r3, #49	; 0x31
   19e52:	f880 3239 	strb.w	r3, [r0, #569]	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19e56:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   19e58:	f880 423b 	strb.w	r4, [r0, #571]	; 0x23b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   19e5c:	f880 323a 	strb.w	r3, [r0, #570]	; 0x23a
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57 (discriminator 2)
   19e60:	6030      	str	r0, [r6, #0]
   19e62:	4628      	mov	r0, r5
   19e64:	f003 fbed 	bl	1d642 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:59
            return *pSDCardDrive;
        }
   19e68:	6830      	ldr	r0, [r6, #0]
   19e6a:	bd70      	pop	{r4, r5, r6, pc}
   19e6c:	2007c76c 	.word	0x2007c76c
   19e70:	2007c770 	.word	0x2007c770

00019e74 <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:51
{
   19e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e78:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
   19e7c:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:54
    const int delayInMs = (int)cmdParams;  // cast parameter str to integer
   19e7e:	f7fd f846 	bl	16f0e <str::operator int() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:56
    if(delayInMs > 0) {
   19e82:	1e04      	subs	r4, r0, #0
   19e84:	dd04      	ble.n	19e90 <taskListHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:57
        vTaskResetRunTimeStats();
   19e86:	f7ff ff4b 	bl	19d20 <vTaskResetRunTimeStats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:58
        vTaskDelayMs(delayInMs);
   19e8a:	4620      	mov	r0, r4
   19e8c:	f7ff fc96 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19e90:	f10d 0914 	add.w	r9, sp, #20
   19e94:	464c      	mov	r4, r9
   19e96:	4d2a      	ldr	r5, [pc, #168]	; (19f40 <taskListHandler(str&, CharDev&, void*)+0xcc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19e98:	f04f 0b64 	mov.w	fp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19e9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   19e9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   19ea0:	682b      	ldr	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19ea2:	aa04      	add	r2, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:62
    const char * const taskStatusTbl[] = { "RUN", "RDY", "BLK", "SUS", "DEL" };
   19ea4:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   19ea6:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19ea8:	2110      	movs	r1, #16
   19eaa:	a80a      	add	r0, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:67
    uint32_t totalRunTime = 0;
   19eac:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19eae:	f7ff fe3f 	bl	19b30 <uxTaskGetSystemState>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19eb2:	4a24      	ldr	r2, [pc, #144]	; (19f44 <taskListHandler(str&, CharDev&, void*)+0xd0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:70
            uxTaskGetSystemState(&status[0], maxTasks, &totalRunTime);
   19eb4:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:72
    output.printf("%10s Sta Pr Stack CPU%%          Time\n", "Name");
   19eb6:	4924      	ldr	r1, [pc, #144]	; (19f48 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   19eb8:	4638      	mov	r0, r7
   19eba:	f7fd ffad 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:68
    uint32_t tasksRunTime = 0;
   19ebe:	4626      	mov	r6, r4
   19ec0:	f04f 0800 	mov.w	r8, #0
   19ec4:	ad0a      	add	r5, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 1)
        for (unsigned i = 0; i < uxArraySize; i++) {
   19ec6:	45d0      	cmp	r8, sl
   19ec8:	d01c      	beq.n	19f04 <taskListHandler(str&, CharDev&, void*)+0x90>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:78
            if (e->uxBasePriority == priorityNum) {
   19eca:	696b      	ldr	r3, [r5, #20]
   19ecc:	42a3      	cmp	r3, r4
   19ece:	d115      	bne.n	19efc <taskListHandler(str&, CharDev&, void*)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19ed0:	69aa      	ldr	r2, [r5, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19ed2:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:79
                tasksRunTime += e->ulRunTimeCounter;
   19ed4:	4416      	add	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81
                const uint32_t cpuPercent = (0 == totalRunTime) ? 0 : e->ulRunTimeCounter / (totalRunTime/100);
   19ed6:	b11b      	cbz	r3, 19ee0 <taskListHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:81 (discriminator 1)
   19ed8:	fbb3 f3fb 	udiv	r3, r3, fp
   19edc:	fbb2 f3f3 	udiv	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:86 (discriminator 4)
                              e->pcTaskName, taskStatusTbl[e->eCurrentState], e->uxBasePriority,
   19ee0:	7b29      	ldrb	r1, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19ee2:	9203      	str	r2, [sp, #12]
   19ee4:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   19ee6:	8c2b      	ldrh	r3, [r5, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19ee8:	9400      	str	r4, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:83 (discriminator 4)
                const uint32_t stackInBytes = (4 * e->usStackHighWaterMark);
   19eea:	009b      	lsls	r3, r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:87 (discriminator 4)
                              stackInBytes, cpuPercent, timeUs);
   19eec:	9301      	str	r3, [sp, #4]
   19eee:	f859 3021 	ldr.w	r3, [r9, r1, lsl #2]
   19ef2:	686a      	ldr	r2, [r5, #4]
   19ef4:	4915      	ldr	r1, [pc, #84]	; (19f4c <taskListHandler(str&, CharDev&, void*)+0xd8>)
   19ef6:	4638      	mov	r0, r7
   19ef8:	f7fd ff8e 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:76 (discriminator 2)
        for (unsigned i = 0; i < uxArraySize; i++) {
   19efc:	f108 0801 	add.w	r8, r8, #1
   19f00:	3524      	adds	r5, #36	; 0x24
   19f02:	e7e0      	b.n	19ec6 <taskListHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:73 (discriminator 2)
    for(unsigned priorityNum = 0; priorityNum < configMAX_PRIORITIES; priorityNum++)
   19f04:	3401      	adds	r4, #1
   19f06:	2c0a      	cmp	r4, #10
   19f08:	d1da      	bne.n	19ec0 <taskListHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   19f0a:	2264      	movs	r2, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   19f0c:	9b04      	ldr	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   19f0e:	4910      	ldr	r1, [pc, #64]	; (19f50 <taskListHandler(str&, CharDev&, void*)+0xdc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:95
    const uint32_t overheadUs = (totalRunTime - tasksRunTime);
   19f10:	1b9e      	subs	r6, r3, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:96
    const uint32_t overheadPercent = overheadUs / (totalRunTime / 100);
   19f12:	fbb3 f3f2 	udiv	r3, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:98
                  "(overhead)", overheadPercent, overheadUs);
   19f16:	9600      	str	r6, [sp, #0]
   19f18:	fbb6 f3f3 	udiv	r3, r6, r3
   19f1c:	4a0d      	ldr	r2, [pc, #52]	; (19f54 <taskListHandler(str&, CharDev&, void*)+0xe0>)
   19f1e:	4638      	mov	r0, r7
   19f20:	f7fd ff7a 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:100
    if (uxTaskGetNumberOfTasks() > maxTasks) {
   19f24:	f7ff fb26 	bl	19574 <uxTaskGetNumberOfTasks>
   19f28:	2810      	cmp	r0, #16
   19f2a:	d904      	bls.n	19f36 <taskListHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:101
        output.printf("** WARNING: Only reported first %u tasks\n", maxTasks);
   19f2c:	2210      	movs	r2, #16
   19f2e:	490a      	ldr	r1, [pc, #40]	; (19f58 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   19f30:	4638      	mov	r0, r7
   19f32:	f7fd ff71 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:105
}
   19f36:	2001      	movs	r0, #1
   19f38:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
   19f3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f40:	00026c9c 	.word	0x00026c9c
   19f44:	0002726b 	.word	0x0002726b
   19f48:	00027270 	.word	0x00027270
   19f4c:	00027297 	.word	0x00027297
   19f50:	000272bf 	.word	0x000272bf
   19f54:	000272b4 	.word	0x000272b4
   19f58:	000272de 	.word	0x000272de

00019f5c <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:108
{
   19f5c:	b510      	push	{r4, lr}
   19f5e:	460c      	mov	r4, r1
   19f60:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:118
    sys_get_mem_info_str(buffer);
   19f64:	4668      	mov	r0, sp
   19f66:	f7f6 faaf 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:119
    output.putline(buffer);
   19f6a:	4620      	mov	r0, r4
   19f6c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   19f70:	4669      	mov	r1, sp
   19f72:	f7fd ff1b 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:121
}
   19f76:	2001      	movs	r0, #1
   19f78:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   19f7c:	bd10      	pop	{r4, pc}
   19f7e:	Address 0x0000000000019f7e is out of bounds.


00019f80 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19f80:	b530      	push	{r4, r5, lr}
   19f82:	460c      	mov	r4, r1
   19f84:	b091      	sub	sp, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   19f86:	492c      	ldr	r1, [pc, #176]	; (1a038 <timeHandler(str&, CharDev&, void*)+0xb8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:180
{
   19f88:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:187
    if(cmdParams.beginsWith("set"))
   19f8a:	f7fc fecd 	bl	16d28 <str::beginsWith(char const*) const>
   19f8e:	2800      	cmp	r0, #0
   19f90:	d048      	beq.n	1a024 <timeHandler(str&, CharDev&, void*)+0xa4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:190
        if( 7 != cmdParams.scanf("%*s %u %u %u %u %u %u %u", &m, &d, &y, &hr, &mn, &sc, &w))
   19f92:	ab0c      	add	r3, sp, #48	; 0x30
   19f94:	9304      	str	r3, [sp, #16]
   19f96:	ab0b      	add	r3, sp, #44	; 0x2c
   19f98:	9303      	str	r3, [sp, #12]
   19f9a:	ab0a      	add	r3, sp, #40	; 0x28
   19f9c:	9302      	str	r3, [sp, #8]
   19f9e:	ab09      	add	r3, sp, #36	; 0x24
   19fa0:	9301      	str	r3, [sp, #4]
   19fa2:	ab08      	add	r3, sp, #32
   19fa4:	9300      	str	r3, [sp, #0]
   19fa6:	aa06      	add	r2, sp, #24
   19fa8:	ab07      	add	r3, sp, #28
   19faa:	4924      	ldr	r1, [pc, #144]	; (1a03c <timeHandler(str&, CharDev&, void*)+0xbc>)
   19fac:	4628      	mov	r0, r5
   19fae:	f7fc fe23 	bl	16bf8 <str::scanf(char const*, ...)>
   19fb2:	2807      	cmp	r0, #7
   19fb4:	d002      	beq.n	19fbc <timeHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:192
            return false;
   19fb6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:203
}
   19fb8:	b011      	add	sp, #68	; 0x44
   19fba:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   19fbc:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   19fc0:	9a06      	ldr	r2, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   19fc2:	a80d      	add	r0, sp, #52	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:195
        time.month = m; time.day = d; time.year = y;
   19fc4:	f362 0303 	bfi	r3, r2, #0, #4
   19fc8:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   19fcc:	9a07      	ldr	r2, [sp, #28]
   19fce:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   19fd2:	f362 0304 	bfi	r3, r2, #0, #5
   19fd6:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   19fda:	9a08      	ldr	r2, [sp, #32]
   19fdc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   19fe0:	f362 030b 	bfi	r3, r2, #0, #12
   19fe4:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:196
        time.hour = hr, time.min = mn; time.sec = sc;
   19fe8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19fea:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   19fee:	f362 0304 	bfi	r3, r2, #0, #5
   19ff2:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   19ff6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19ff8:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   19ffc:	f362 0305 	bfi	r3, r2, #0, #6
   1a000:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   1a004:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1a006:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   1a00a:	f362 0305 	bfi	r3, r2, #0, #6
   1a00e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:197
        time.dow = w;
   1a012:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1a014:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   1a018:	f362 0302 	bfi	r3, r2, #0, #3
   1a01c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:198
        rtc_settime(&time);
   1a020:	f7fd ff84 	bl	17f2c <rtc_settime>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:201
    output.printf("%s", rtc_get_date_time_str());
   1a024:	f7fe f81e 	bl	18064 <rtc_get_date_time_str>
   1a028:	4905      	ldr	r1, [pc, #20]	; (1a040 <timeHandler(str&, CharDev&, void*)+0xc0>)
   1a02a:	4602      	mov	r2, r0
   1a02c:	4620      	mov	r0, r4
   1a02e:	f7fd fef3 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:202
    return true;
   1a032:	2001      	movs	r0, #1
   1a034:	e7c0      	b.n	19fb8 <timeHandler(str&, CharDev&, void*)+0x38>
   1a036:	bf00      	nop
   1a038:	00026ee6 	.word	0x00026ee6
   1a03c:	00026eea 	.word	0x00026eea
   1a040:	00028af9 	.word	0x00028af9

0001a044 <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   1a044:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1a046:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   1a048:	4950      	ldr	r1, [pc, #320]	; (1a18c <logHandler(str&, CharDev&, void*)+0x148>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:206
{
   1a04a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:209
    if (cmdParams == "flush") {
   1a04c:	f7fc ff5b 	bl	16f06 <str::operator==(char const*) const>
   1a050:	4606      	mov	r6, r0
   1a052:	b150      	cbz	r0, 1a06a <logHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:210
        LOG_FLUSH();
   1a054:	f7fc fb52 	bl	166fc <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:211
        output.putline("Log(s) have been flushed");
   1a058:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a05c:	494c      	ldr	r1, [pc, #304]	; (1a190 <logHandler(str&, CharDev&, void*)+0x14c>)
   1a05e:	4628      	mov	r0, r5
   1a060:	f7fd fea4 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:248
}
   1a064:	2001      	movs	r0, #1
   1a066:	b003      	add	sp, #12
   1a068:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:213
    else if (cmdParams == "status") {
   1a06a:	494a      	ldr	r1, [pc, #296]	; (1a194 <logHandler(str&, CharDev&, void*)+0x150>)
   1a06c:	4620      	mov	r0, r4
   1a06e:	f7fc ff4a 	bl	16f06 <str::operator==(char const*) const>
   1a072:	b360      	cbz	r0, 1a0ce <logHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:214
        output.printf("Blocked calls  : %u\n", logger_get_blocked_call_count());
   1a074:	f7fc fb66 	bl	16744 <logger_get_blocked_call_count>
   1a078:	4947      	ldr	r1, [pc, #284]	; (1a198 <logHandler(str&, CharDev&, void*)+0x154>)
   1a07a:	4602      	mov	r2, r0
   1a07c:	4628      	mov	r0, r5
   1a07e:	f7fd fecb 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:215
        output.printf("Queue watermark: %u\n", logger_get_num_buffers_watermark());
   1a082:	f7fc fb6b 	bl	1675c <logger_get_num_buffers_watermark>
   1a086:	4945      	ldr	r1, [pc, #276]	; (1a19c <logHandler(str&, CharDev&, void*)+0x158>)
   1a088:	4602      	mov	r2, r0
   1a08a:	4628      	mov	r0, r5
   1a08c:	f7fd fec4 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:216
        output.printf("Highest file write time: %ums\n", logger_get_highest_file_write_time_ms());
   1a090:	f7fc fb5e 	bl	16750 <logger_get_highest_file_write_time_ms>
   1a094:	4942      	ldr	r1, [pc, #264]	; (1a1a0 <logHandler(str&, CharDev&, void*)+0x15c>)
   1a096:	4602      	mov	r2, r0
   1a098:	4628      	mov	r0, r5
   1a09a:	f7fd febd 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:217
        output.printf("Call counts    : %u dgb %u info %u warn %u err\n",
   1a09e:	4630      	mov	r0, r6
   1a0a0:	f7fc fb46 	bl	16730 <logger_get_logged_call_count>
   1a0a4:	4604      	mov	r4, r0
   1a0a6:	2001      	movs	r0, #1
   1a0a8:	f7fc fb42 	bl	16730 <logger_get_logged_call_count>
   1a0ac:	4606      	mov	r6, r0
   1a0ae:	2002      	movs	r0, #2
   1a0b0:	f7fc fb3e 	bl	16730 <logger_get_logged_call_count>
   1a0b4:	4607      	mov	r7, r0
   1a0b6:	2003      	movs	r0, #3
   1a0b8:	f7fc fb3a 	bl	16730 <logger_get_logged_call_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:221
                      logger_get_logged_call_count(log_error));
   1a0bc:	9700      	str	r7, [sp, #0]
   1a0be:	9001      	str	r0, [sp, #4]
   1a0c0:	4633      	mov	r3, r6
   1a0c2:	4622      	mov	r2, r4
   1a0c4:	4937      	ldr	r1, [pc, #220]	; (1a1a4 <logHandler(str&, CharDev&, void*)+0x160>)
   1a0c6:	4628      	mov	r0, r5
   1a0c8:	f7fd fea6 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a0cc:	e7ca      	b.n	1a064 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:223
    else if (cmdParams.beginsWith("raw")) {
   1a0ce:	4936      	ldr	r1, [pc, #216]	; (1a1a8 <logHandler(str&, CharDev&, void*)+0x164>)
   1a0d0:	4620      	mov	r0, r4
   1a0d2:	f7fc fe29 	bl	16d28 <str::beginsWith(char const*) const>
   1a0d6:	b150      	cbz	r0, 1a0ee <logHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:224
        cmdParams.eraseFirstWords(1);
   1a0d8:	2220      	movs	r2, #32
   1a0da:	2101      	movs	r1, #1
   1a0dc:	4620      	mov	r0, r4
   1a0de:	f7fc fec0 	bl	16e62 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:225
        logger_log_raw(cmdParams());
   1a0e2:	4620      	mov	r0, r4
   1a0e4:	f7fc ff11 	bl	16f0a <str::operator()() const>
   1a0e8:	f7fc fc4e 	bl	16988 <logger_log_raw>
   1a0ec:	e7ba      	b.n	1a064 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227
    else if ( (enablePrintf = cmdParams.beginsWith("enable ")) || cmdParams.beginsWith("disable ")) {
   1a0ee:	492f      	ldr	r1, [pc, #188]	; (1a1ac <logHandler(str&, CharDev&, void*)+0x168>)
   1a0f0:	4620      	mov	r0, r4
   1a0f2:	f7fc fe19 	bl	16d28 <str::beginsWith(char const*) const>
   1a0f6:	4606      	mov	r6, r0
   1a0f8:	b9f8      	cbnz	r0, 1a13a <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:227 (discriminator 2)
   1a0fa:	492d      	ldr	r1, [pc, #180]	; (1a1b0 <logHandler(str&, CharDev&, void*)+0x16c>)
   1a0fc:	4620      	mov	r0, r4
   1a0fe:	f7fc fe13 	bl	16d28 <str::beginsWith(char const*) const>
   1a102:	b9d0      	cbnz	r0, 1a13a <logHandler(str&, CharDev&, void*)+0xf6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:243
            LOG_INFO(cmdParams());
   1a104:	4620      	mov	r0, r4
   1a106:	f7fc ff00 	bl	16f0a <str::operator()() const>
   1a10a:	23f3      	movs	r3, #243	; 0xf3
   1a10c:	9000      	str	r0, [sp, #0]
   1a10e:	4a29      	ldr	r2, [pc, #164]	; (1a1b4 <logHandler(str&, CharDev&, void*)+0x170>)
   1a110:	4929      	ldr	r1, [pc, #164]	; (1a1b8 <logHandler(str&, CharDev&, void*)+0x174>)
   1a112:	2001      	movs	r0, #1
   1a114:	f7fc fb9c 	bl	16850 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:245
        output.printf("Logged: |%s|\n", cmdParams());
   1a118:	4620      	mov	r0, r4
   1a11a:	f7fc fef6 	bl	16f0a <str::operator()() const>
   1a11e:	4927      	ldr	r1, [pc, #156]	; (1a1bc <logHandler(str&, CharDev&, void*)+0x178>)
   1a120:	4602      	mov	r2, r0
   1a122:	4628      	mov	r0, r5
   1a124:	f7fd fe78 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:247
    return true;
   1a128:	e79c      	b.n	1a064 <logHandler(str&, CharDev&, void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   1a12a:	2403      	movs	r4, #3
   1a12c:	e016      	b.n	1a15c <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   1a12e:	2402      	movs	r4, #2
   1a130:	e014      	b.n	1a15c <logHandler(str&, CharDev&, void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   1a132:	4b23      	ldr	r3, [pc, #140]	; (1a1c0 <logHandler(str&, CharDev&, void*)+0x17c>)
   1a134:	e024      	b.n	1a180 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   1a136:	4b23      	ldr	r3, [pc, #140]	; (1a1c4 <logHandler(str&, CharDev&, void*)+0x180>)
   1a138:	e022      	b.n	1a180 <logHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:229
        logger_msg_t type = cmdParams.containsIgnoreCase("warn")  ? log_warn  :
   1a13a:	4923      	ldr	r1, [pc, #140]	; (1a1c8 <logHandler(str&, CharDev&, void*)+0x184>)
   1a13c:	4620      	mov	r0, r4
   1a13e:	f7fc fde1 	bl	16d04 <str::containsIgnoreCase(char const*) const>
   1a142:	2800      	cmp	r0, #0
   1a144:	d1f3      	bne.n	1a12e <logHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:230
                            cmdParams.containsIgnoreCase("error") ? log_error :
   1a146:	4921      	ldr	r1, [pc, #132]	; (1a1cc <logHandler(str&, CharDev&, void*)+0x188>)
   1a148:	4620      	mov	r0, r4
   1a14a:	f7fc fddb 	bl	16d04 <str::containsIgnoreCase(char const*) const>
   1a14e:	2800      	cmp	r0, #0
   1a150:	d1eb      	bne.n	1a12a <logHandler(str&, CharDev&, void*)+0xe6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:231
                            cmdParams.containsIgnoreCase("info")  ? log_info  : log_debug;
   1a152:	4620      	mov	r0, r4
   1a154:	491b      	ldr	r1, [pc, #108]	; (1a1c4 <logHandler(str&, CharDev&, void*)+0x180>)
   1a156:	f7fc fdd5 	bl	16d04 <str::containsIgnoreCase(char const*) const>
   1a15a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:233
        logger_set_printf(type, enablePrintf);
   1a15c:	4631      	mov	r1, r6
   1a15e:	4620      	mov	r0, r4
   1a160:	f7fc fb68 	bl	16834 <logger_set_printf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:234
        output.printf("%s logger printf for %s\n",
   1a164:	4b1a      	ldr	r3, [pc, #104]	; (1a1d0 <logHandler(str&, CharDev&, void*)+0x18c>)
   1a166:	4a1b      	ldr	r2, [pc, #108]	; (1a1d4 <logHandler(str&, CharDev&, void*)+0x190>)
   1a168:	2e00      	cmp	r6, #0
   1a16a:	bf08      	it	eq
   1a16c:	461a      	moveq	r2, r3
   1a16e:	2c00      	cmp	r4, #0
   1a170:	d0df      	beq.n	1a132 <logHandler(str&, CharDev&, void*)+0xee>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
                      type == log_debug ? "debug" : type == log_info ? "info" : type == log_warn ? "warn" : "error");
   1a172:	2c01      	cmp	r4, #1
   1a174:	d0df      	beq.n	1a136 <logHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236 (discriminator 1)
   1a176:	4915      	ldr	r1, [pc, #84]	; (1a1cc <logHandler(str&, CharDev&, void*)+0x188>)
   1a178:	4b13      	ldr	r3, [pc, #76]	; (1a1c8 <logHandler(str&, CharDev&, void*)+0x184>)
   1a17a:	2c02      	cmp	r4, #2
   1a17c:	bf18      	it	ne
   1a17e:	460b      	movne	r3, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:236
   1a180:	4915      	ldr	r1, [pc, #84]	; (1a1d8 <logHandler(str&, CharDev&, void*)+0x194>)
   1a182:	4628      	mov	r0, r5
   1a184:	f7fd fe48 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a188:	e76c      	b.n	1a064 <logHandler(str&, CharDev&, void*)+0x20>
   1a18a:	bf00      	nop
   1a18c:	00026da8 	.word	0x00026da8
   1a190:	00026dae 	.word	0x00026dae
   1a194:	00026dc7 	.word	0x00026dc7
   1a198:	00026dce 	.word	0x00026dce
   1a19c:	00026de3 	.word	0x00026de3
   1a1a0:	00026df8 	.word	0x00026df8
   1a1a4:	00026e17 	.word	0x00026e17
   1a1a8:	00026e47 	.word	0x00026e47
   1a1ac:	00026e4b 	.word	0x00026e4b
   1a1b0:	00026e53 	.word	0x00026e53
   1a1b4:	000274fe 	.word	0x000274fe
   1a1b8:	00026e75 	.word	0x00026e75
   1a1bc:	00026ed8 	.word	0x00026ed8
   1a1c0:	00026984 	.word	0x00026984
   1a1c4:	00027c66 	.word	0x00027c66
   1a1c8:	0002698a 	.word	0x0002698a
   1a1cc:	0002698f 	.word	0x0002698f
   1a1d0:	00026d9f 	.word	0x00026d9f
   1a1d4:	00026d97 	.word	0x00026d97
   1a1d8:	00026e5c 	.word	0x00026e5c

0001a1dc <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   1a1dc:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   1a1de:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   1a1e0:	b089      	sub	sp, #36	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a1e2:	ab04      	add	r3, sp, #16
   1a1e4:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:251
{
   1a1e6:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a1e8:	ab03      	add	r3, sp, #12
   1a1ea:	2202      	movs	r2, #2
   1a1ec:	4918      	ldr	r1, [pc, #96]	; (1a250 <cpHandler(str&, CharDev&, void*)+0x74>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:252
    char *srcFile = NULL;
   1a1ee:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:253
    char *dstFile = NULL;
   1a1f0:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:254
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a1f2:	f7fc fd0f 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1a1f6:	2802      	cmp	r0, #2
   1a1f8:	d128      	bne.n	1a24c <cpHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   1a1fa:	ab07      	add	r3, sp, #28
   1a1fc:	9300      	str	r3, [sp, #0]
   1a1fe:	aa05      	add	r2, sp, #20
   1a200:	ab06      	add	r3, sp, #24
   1a202:	9904      	ldr	r1, [sp, #16]
   1a204:	9803      	ldr	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:258
    unsigned int readTimeMs = 0;
   1a206:	9405      	str	r4, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:259
    unsigned int writeTimeMs = 0;
   1a208:	9406      	str	r4, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:260
    unsigned int bytesTransferred = 0;
   1a20a:	9407      	str	r4, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:262
                                       &readTimeMs, &writeTimeMs, &bytesTransferred);
   1a20c:	f7fa fcff 	bl	14c0e <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:264
    if(FR_OK != copyStatus) {
   1a210:	4602      	mov	r2, r0
   1a212:	b148      	cbz	r0, 1a228 <cpHandler(str&, CharDev&, void*)+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:265
        output.printf("Error %u copying |%s| -> |%s|\n", copyStatus, srcFile, dstFile);
   1a214:	9b04      	ldr	r3, [sp, #16]
   1a216:	490f      	ldr	r1, [pc, #60]	; (1a254 <cpHandler(str&, CharDev&, void*)+0x78>)
   1a218:	9300      	str	r3, [sp, #0]
   1a21a:	4628      	mov	r0, r5
   1a21c:	9b03      	ldr	r3, [sp, #12]
   1a21e:	f7fd fdfb 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:272
    return true;
   1a222:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:273
}
   1a224:	b009      	add	sp, #36	; 0x24
   1a226:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   1a228:	9a05      	ldr	r2, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   1a22a:	9b06      	ldr	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:269
                      bytesTransferred/(0 == readTimeMs  ? 1 : readTimeMs),
   1a22c:	2a00      	cmp	r2, #0
   1a22e:	bf08      	it	eq
   1a230:	2201      	moveq	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   1a232:	2b00      	cmp	r3, #0
   1a234:	bf08      	it	eq
   1a236:	2301      	moveq	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:268
        output.printf("Finished!  Read: %u Kb/sec, Write: %u Kb/sec\n",
   1a238:	9907      	ldr	r1, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:270
                      bytesTransferred/(0 == writeTimeMs ? 1 : writeTimeMs));
   1a23a:	4628      	mov	r0, r5
   1a23c:	fbb1 f3f3 	udiv	r3, r1, r3
   1a240:	fbb1 f2f2 	udiv	r2, r1, r2
   1a244:	4904      	ldr	r1, [pc, #16]	; (1a258 <cpHandler(str&, CharDev&, void*)+0x7c>)
   1a246:	f7fd fde7 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a24a:	e7ea      	b.n	1a222 <cpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:255
        return false;
   1a24c:	4620      	mov	r0, r4
   1a24e:	e7e9      	b.n	1a224 <cpHandler(str&, CharDev&, void*)+0x48>
   1a250:	00027beb 	.word	0x00027beb
   1a254:	000273d6 	.word	0x000273d6
   1a258:	000273f5 	.word	0x000273f5

0001a25c <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   1a25c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1a260:	460e      	mov	r6, r1
   1a262:	f5ad 6d85 	sub.w	sp, sp, #1064	; 0x428
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   1a266:	4938      	ldr	r1, [pc, #224]	; (1a348 <catHandler(str&, CharDev&, void*)+0xec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:276
{
   1a268:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   1a26a:	f7fc fde6 	bl	16e3a <str::erase(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   1a26e:	4937      	ldr	r1, [pc, #220]	; (1a34c <catHandler(str&, CharDev&, void*)+0xf0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:278
    const bool printToScreen = !cmdParams.erase("-noprint");
   1a270:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:279
    cmdParams.trimStart(" ");
   1a272:	4628      	mov	r0, r5
   1a274:	f7fc fe0a 	bl	16e8c <str::trimStart(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:280
    cmdParams.trimEnd(" ");
   1a278:	4934      	ldr	r1, [pc, #208]	; (1a34c <catHandler(str&, CharDev&, void*)+0xf0>)
   1a27a:	4628      	mov	r0, r5
   1a27c:	f7fc fe26 	bl	16ecc <str::trimEnd(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:290
    if(FR_OK != f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   1a280:	4628      	mov	r0, r5
   1a282:	f7fc fe42 	bl	16f0a <str::operator()() const>
   1a286:	2201      	movs	r2, #1
   1a288:	4601      	mov	r1, r0
   1a28a:	a881      	add	r0, sp, #516	; 0x204
   1a28c:	f7f8 fcc0 	bl	12c10 <f_open>
   1a290:	4604      	mov	r4, r0
   1a292:	b160      	cbz	r0, 1a2ae <catHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:292
        output.printf("Failed to open: %s\n", cmdParams());
   1a294:	4628      	mov	r0, r5
   1a296:	f7fc fe38 	bl	16f0a <str::operator()() const>
   1a29a:	492d      	ldr	r1, [pc, #180]	; (1a350 <catHandler(str&, CharDev&, void*)+0xf4>)
   1a29c:	4602      	mov	r2, r0
   1a29e:	4630      	mov	r0, r6
   1a2a0:	f7fd fdba 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:327
}
   1a2a4:	2001      	movs	r0, #1
   1a2a6:	f50d 6d85 	add.w	sp, sp, #1064	; 0x428
   1a2aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:297
        char buffer[512] = { 0 };
   1a2ae:	f10d 0a04 	add.w	sl, sp, #4
   1a2b2:	4601      	mov	r1, r0
   1a2b4:	f44f 7200 	mov.w	r2, #512	; 0x200
   1a2b8:	4650      	mov	r0, sl
   1a2ba:	f005 f90b 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:298
        UINT bytesRead = 0;
   1a2be:	9400      	str	r4, [sp, #0]
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   1a2c0:	f7f6 f8ec 	bl	1049c <sys_get_uptime_us>
   1a2c4:	4680      	mov	r8, r0
   1a2c6:	4689      	mov	r9, r1
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302
        while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   1a2c8:	466b      	mov	r3, sp
   1a2ca:	f44f 7200 	mov.w	r2, #512	; 0x200
   1a2ce:	4651      	mov	r1, sl
   1a2d0:	a881      	add	r0, sp, #516	; 0x204
   1a2d2:	f7f8 fd34 	bl	12d3e <f_read>
   1a2d6:	b908      	cbnz	r0, 1a2dc <catHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:302 (discriminator 1)
   1a2d8:	9b00      	ldr	r3, [sp, #0]
   1a2da:	bb23      	cbnz	r3, 1a326 <catHandler(str&, CharDev&, void*)+0xca>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:317
        f_close(&file);
   1a2dc:	a881      	add	r0, sp, #516	; 0x204
   1a2de:	f7f8 ff01 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:319
        if(!printToScreen) {
   1a2e2:	b1cf      	cbz	r7, 1a318 <catHandler(str&, CharDev&, void*)+0xbc>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1a2e4:	f7f6 f8da 	bl	1049c <sys_get_uptime_us>
   1a2e8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a2ec:	2300      	movs	r3, #0
   1a2ee:	f004 f977 	bl	1e5e0 <__aeabi_uldivmod>
   1a2f2:	2300      	movs	r3, #0
   1a2f4:	4605      	mov	r5, r0
   1a2f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a2fa:	4640      	mov	r0, r8
   1a2fc:	4649      	mov	r1, r9
   1a2fe:	f004 f96f 	bl	1e5e0 <__aeabi_uldivmod>
_Z10catHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:322
                          totalBytesRead/(0 == timeTaken  ? 1 : timeTaken));
   1a302:	1a28      	subs	r0, r5, r0
   1a304:	bf14      	ite	ne
   1a306:	4603      	movne	r3, r0
   1a308:	2301      	moveq	r3, #1
   1a30a:	4622      	mov	r2, r4
   1a30c:	fbb4 f3f3 	udiv	r3, r4, r3
   1a310:	4910      	ldr	r1, [pc, #64]	; (1a354 <catHandler(str&, CharDev&, void*)+0xf8>)
   1a312:	4630      	mov	r0, r6
   1a314:	f7fd fd80 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:324
        output.putline("");
   1a318:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a31c:	490e      	ldr	r1, [pc, #56]	; (1a358 <catHandler(str&, CharDev&, void*)+0xfc>)
   1a31e:	4630      	mov	r0, r6
   1a320:	f7fd fd44 	bl	17dac <CharDev::putline(char const*, unsigned int)>
   1a324:	e7be      	b.n	1a2a4 <catHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:304
            totalBytesRead += bytesRead;
   1a326:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:306
            if(printToScreen) {
   1a328:	2f00      	cmp	r7, #0
   1a32a:	d1cd      	bne.n	1a2c8 <catHandler(str&, CharDev&, void*)+0x6c>
   1a32c:	463d      	mov	r5, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 3)
                for (UINT i = 0; i < bytesRead; i++) {
   1a32e:	9b00      	ldr	r3, [sp, #0]
   1a330:	429d      	cmp	r5, r3
   1a332:	d2c9      	bcs.n	1a2c8 <catHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:308 (discriminator 2)
                    output.putChar(buffer[i]);
   1a334:	6833      	ldr	r3, [r6, #0]
   1a336:	f81a 1005 	ldrb.w	r1, [sl, r5]
   1a33a:	685b      	ldr	r3, [r3, #4]
   1a33c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a340:	4630      	mov	r0, r6
   1a342:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:307 (discriminator 2)
                for (UINT i = 0; i < bytesRead; i++) {
   1a344:	3501      	adds	r5, #1
   1a346:	e7f2      	b.n	1a32e <catHandler(str&, CharDev&, void*)+0xd2>
   1a348:	00026cb0 	.word	0x00026cb0
   1a34c:	00027beb 	.word	0x00027beb
   1a350:	00026cb9 	.word	0x00026cb9
   1a354:	00026ccd 	.word	0x00026ccd
   1a358:	00027b84 	.word	0x00027b84

0001a35c <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a35c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   1a35e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a362:	460c      	mov	r4, r1
   1a364:	b0c1      	sub	sp, #260	; 0x104
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a366:	4956      	ldr	r1, [pc, #344]	; (1a4c0 <lsHandler(str&, CharDev&, void*)+0x164>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:330
{
   1a368:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a36a:	930e      	str	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a36c:	f7fc fdcb 	bl	16f06 <str::operator==(char const*) const>
   1a370:	b998      	cbnz	r0, 1a39a <lsHandler(str&, CharDev&, void*)+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341 (discriminator 2)
   1a372:	4628      	mov	r0, r5
   1a374:	f7fc fdc9 	bl	16f0a <str::operator()() const>
   1a378:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:342 (discriminator 4)
    if (FR_OK != (returnCode = f_opendir(&Dir, dirPath))) {
   1a37a:	4631      	mov	r1, r6
   1a37c:	a817      	add	r0, sp, #92	; 0x5c
   1a37e:	f7f8 ff6a 	bl	13256 <f_opendir>
   1a382:	4605      	mov	r5, r0
   1a384:	b158      	cbz	r0, 1a39e <lsHandler(str&, CharDev&, void*)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:343
        output.printf("Invalid directory: |%s| (Error %i)\n", dirPath, returnCode);
   1a386:	4603      	mov	r3, r0
   1a388:	4632      	mov	r2, r6
   1a38a:	494e      	ldr	r1, [pc, #312]	; (1a4c4 <lsHandler(str&, CharDev&, void*)+0x168>)
   1a38c:	4620      	mov	r0, r4
   1a38e:	f7fd fd43 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:404
}
   1a392:	2001      	movs	r0, #1
   1a394:	b041      	add	sp, #260	; 0x104
   1a396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:341
    const char *dirPath = cmdParams == "" ? "0:" : cmdParams();
   1a39a:	4e4b      	ldr	r6, [pc, #300]	; (1a4c8 <lsHandler(str&, CharDev&, void*)+0x16c>)
   1a39c:	e7ed      	b.n	1a37a <lsHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:360
    output.printf("Directory listing of: %s\n\n", dirPath);
   1a39e:	4632      	mov	r2, r6
   1a3a0:	494a      	ldr	r1, [pc, #296]	; (1a4cc <lsHandler(str&, CharDev&, void*)+0x170>)
   1a3a2:	4620      	mov	r0, r4
   1a3a4:	f7fd fd38 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:336
    unsigned int fileBytesTotal = 0, numFiles = 0, numDirs = 0;
   1a3a8:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a3aa:	f8df 9130 	ldr.w	r9, [pc, #304]	; 1a4dc <lsHandler(str&, CharDev&, void*)+0x180>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   1a3ae:	2380      	movs	r3, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a3b0:	f10d 0880 	add.w	r8, sp, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   1a3b4:	a90f      	add	r1, sp, #60	; 0x3c
   1a3b6:	a817      	add	r0, sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a3b8:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:365
            Finfo.lfsize = sizeof(Lfname);
   1a3bc:	9316      	str	r3, [sp, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:368
        returnCode = f_readdir(&Dir, &Finfo);
   1a3be:	f7f8 ff9a 	bl	132f6 <f_readdir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369
        if ( (FR_OK != returnCode) || !Finfo.fname[0]) {
   1a3c2:	2800      	cmp	r0, #0
   1a3c4:	d163      	bne.n	1a48e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:369 (discriminator 1)
   1a3c6:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
   1a3ca:	2b00      	cmp	r3, #0
   1a3cc:	d05f      	beq.n	1a48e <lsHandler(str&, CharDev&, void*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   1a3ce:	f89d 1044 	ldrb.w	r1, [sp, #68]	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:387
                (Finfo.ftime >> 11), (Finfo.ftime >> 5) & 63,
   1a3d2:	f8bd 0042 	ldrh.w	r0, [sp, #66]	; 0x42
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:373
        if (Finfo.fattrib & AM_DIR){
   1a3d6:	06ca      	lsls	r2, r1, #27
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   1a3d8:	bf5b      	ittet	pl
   1a3da:	9b0e      	ldrpl	r3, [sp, #56]	; 0x38
   1a3dc:	9a0f      	ldrpl	r2, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a3de:	2244      	movmi	r2, #68	; 0x44
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:378
            fileBytesTotal += Finfo.fsize;
   1a3e0:	189b      	addpl	r3, r3, r2
   1a3e2:	bf5b      	ittet	pl
   1a3e4:	930e      	strpl	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a3e6:	222d      	movpl	r2, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:374
            numDirs++;
   1a3e8:	3501      	addmi	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:377
            numFiles++;
   1a3ea:	3701      	addpl	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a3ec:	f011 0f01 	tst.w	r1, #1
   1a3f0:	bf14      	ite	ne
   1a3f2:	2352      	movne	r3, #82	; 0x52
   1a3f4:	232d      	moveq	r3, #45	; 0x2d
   1a3f6:	f011 0f02 	tst.w	r1, #2
   1a3fa:	bf14      	ite	ne
   1a3fc:	f04f 0e48 	movne.w	lr, #72	; 0x48
   1a400:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   1a404:	f011 0f04 	tst.w	r1, #4
   1a408:	bf14      	ite	ne
   1a40a:	f04f 0c53 	movne.w	ip, #83	; 0x53
   1a40e:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   1a412:	f011 0f20 	tst.w	r1, #32
   1a416:	bf14      	ite	ne
   1a418:	f04f 0a41 	movne.w	sl, #65	; 0x41
   1a41c:	f04f 0a2d 	moveq.w	sl, #45	; 0x2d
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   1a420:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a424:	f10d 0b45 	add.w	fp, sp, #69	; 0x45
   1a428:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a42c:	f3c0 1b45 	ubfx	fp, r0, #5, #6
   1a430:	12c0      	asrs	r0, r0, #11
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a432:	9006      	str	r0, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a434:	f001 001f 	and.w	r0, r1, #31
   1a438:	930b      	str	r3, [sp, #44]	; 0x2c
   1a43a:	9005      	str	r0, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a43c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a43e:	f3c1 1043 	ubfx	r0, r1, #5, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:386
                (Finfo.fdate >> 9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,
   1a442:	1249      	asrs	r1, r1, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:380
        output.printf("%c%c%c%c%c %u/%02u/%02u %02u:%02u %10lu %13s",
   1a444:	f201 71bc 	addw	r1, r1, #1980	; 0x7bc
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:388
                Finfo.fsize, &(Finfo.fname[0]));
   1a448:	f8cd c004 	str.w	ip, [sp, #4]
   1a44c:	f8cd e000 	str.w	lr, [sp]
   1a450:	9308      	str	r3, [sp, #32]
   1a452:	9004      	str	r0, [sp, #16]
   1a454:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a456:	9103      	str	r1, [sp, #12]
   1a458:	f8cd b01c 	str.w	fp, [sp, #28]
   1a45c:	4649      	mov	r1, r9
   1a45e:	f8cd a008 	str.w	sl, [sp, #8]
   1a462:	4620      	mov	r0, r4
   1a464:	f7fd fcd8 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:392
        output.put(" - ");
   1a468:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a46c:	4918      	ldr	r1, [pc, #96]	; (1a4d0 <lsHandler(str&, CharDev&, void*)+0x174>)
   1a46e:	4620      	mov	r0, r4
   1a470:	f7fd fc88 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:393
        output.put(Lfname);
   1a474:	4641      	mov	r1, r8
   1a476:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a47a:	4620      	mov	r0, r4
   1a47c:	f7fd fc82 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:395
        output.putline("");
   1a480:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a484:	490e      	ldr	r1, [pc, #56]	; (1a4c0 <lsHandler(str&, CharDev&, void*)+0x164>)
   1a486:	4620      	mov	r0, r4
   1a488:	f7fd fc90 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:364
            Finfo.lfname = Lfname;
   1a48c:	e78f      	b.n	1a3ae <lsHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:397
    output.printf("\n%4u File(s), %10d bytes total\n%4d Dir(s)", numFiles, fileBytesTotal, numDirs);
   1a48e:	463a      	mov	r2, r7
   1a490:	4910      	ldr	r1, [pc, #64]	; (1a4d4 <lsHandler(str&, CharDev&, void*)+0x178>)
   1a492:	9500      	str	r5, [sp, #0]
   1a494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a496:	4620      	mov	r0, r4
   1a498:	f7fd fcbe 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:399
    if (f_getfree(dirPath, (DWORD*) &fileBytesTotal, &fs) == FR_OK)
   1a49c:	aa0d      	add	r2, sp, #52	; 0x34
   1a49e:	a90e      	add	r1, sp, #56	; 0x38
   1a4a0:	4630      	mov	r0, r6
   1a4a2:	f7f8 ff58 	bl	13356 <f_getfree>
   1a4a6:	2800      	cmp	r0, #0
   1a4a8:	f47f af73 	bne.w	1a392 <lsHandler(str&, CharDev&, void*)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:401
        output.printf(", %10dK bytes free\n", fileBytesTotal * fs->csize / 2);
   1a4ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a4ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a4b0:	789b      	ldrb	r3, [r3, #2]
   1a4b2:	4909      	ldr	r1, [pc, #36]	; (1a4d8 <lsHandler(str&, CharDev&, void*)+0x17c>)
   1a4b4:	435a      	muls	r2, r3
   1a4b6:	4620      	mov	r0, r4
   1a4b8:	0852      	lsrs	r2, r2, #1
   1a4ba:	f7fd fcad 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a4be:	e768      	b.n	1a392 <lsHandler(str&, CharDev&, void*)+0x36>
   1a4c0:	00027b84 	.word	0x00027b84
   1a4c4:	00027426 	.word	0x00027426
   1a4c8:	00027423 	.word	0x00027423
   1a4cc:	0002744a 	.word	0x0002744a
   1a4d0:	00027492 	.word	0x00027492
   1a4d4:	00027496 	.word	0x00027496
   1a4d8:	000274c0 	.word	0x000274c0
   1a4dc:	00027465 	.word	0x00027465

0001a4e0 <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:407
{
   1a4e0:	b570      	push	{r4, r5, r6, lr}
   1a4e2:	460c      	mov	r4, r1
   1a4e4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:408
    output.printf("Create directory '%s' : %s\n",
   1a4e6:	f7fc fd10 	bl	16f0a <str::operator()() const>
   1a4ea:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:409
                   cmdParams(), (FR_OK == f_mkdir(cmdParams())) ? "OK" : "ERROR");
   1a4ec:	4630      	mov	r0, r6
   1a4ee:	f7fc fd0c 	bl	16f0a <str::operator()() const>
   1a4f2:	f7f8 ffff 	bl	134f4 <f_mkdir>
   1a4f6:	4a06      	ldr	r2, [pc, #24]	; (1a510 <mkdirHandler(str&, CharDev&, void*)+0x30>)
   1a4f8:	4b06      	ldr	r3, [pc, #24]	; (1a514 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   1a4fa:	4907      	ldr	r1, [pc, #28]	; (1a518 <mkdirHandler(str&, CharDev&, void*)+0x38>)
   1a4fc:	2800      	cmp	r0, #0
   1a4fe:	bf08      	it	eq
   1a500:	4613      	moveq	r3, r2
   1a502:	462a      	mov	r2, r5
   1a504:	4620      	mov	r0, r4
   1a506:	f7fd fc87 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:411
}
   1a50a:	2001      	movs	r0, #1
   1a50c:	bd70      	pop	{r4, r5, r6, pc}
   1a50e:	bf00      	nop
   1a510:	000271de 	.word	0x000271de
   1a514:	000271e8 	.word	0x000271e8
   1a518:	0002700a 	.word	0x0002700a

0001a51c <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:414
{
   1a51c:	b570      	push	{r4, r5, r6, lr}
   1a51e:	460c      	mov	r4, r1
   1a520:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:415
    output.printf("Delete '%s' : %s\n",
   1a522:	f7fc fcf2 	bl	16f0a <str::operator()() const>
   1a526:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:416
                  cmdParams(), (FR_OK == f_unlink(cmdParams())) ? "OK" : "ERROR");
   1a528:	4630      	mov	r0, r6
   1a52a:	f7fc fcee 	bl	16f0a <str::operator()() const>
   1a52e:	f7f8 ff76 	bl	1341e <f_unlink>
   1a532:	4a06      	ldr	r2, [pc, #24]	; (1a54c <rmHandler(str&, CharDev&, void*)+0x30>)
   1a534:	4b06      	ldr	r3, [pc, #24]	; (1a550 <rmHandler(str&, CharDev&, void*)+0x34>)
   1a536:	4907      	ldr	r1, [pc, #28]	; (1a554 <rmHandler(str&, CharDev&, void*)+0x38>)
   1a538:	2800      	cmp	r0, #0
   1a53a:	bf08      	it	eq
   1a53c:	4613      	moveq	r3, r2
   1a53e:	462a      	mov	r2, r5
   1a540:	4620      	mov	r0, r4
   1a542:	f7fd fc69 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:418
}
   1a546:	2001      	movs	r0, #1
   1a548:	bd70      	pop	{r4, r5, r6, pc}
   1a54a:	bf00      	nop
   1a54c:	000271de 	.word	0x000271de
   1a550:	000271e8 	.word	0x000271e8
   1a554:	000274ec 	.word	0x000274ec

0001a558 <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   1a558:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   1a55a:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a55c:	ab03      	add	r3, sp, #12
   1a55e:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:476
{
   1a560:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a562:	ab02      	add	r3, sp, #8
   1a564:	2202      	movs	r2, #2
   1a566:	490f      	ldr	r1, [pc, #60]	; (1a5a4 <mvHandler(str&, CharDev&, void*)+0x4c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:477
    char *srcFile = NULL;
   1a568:	9402      	str	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:478
    char *dstFile = NULL;
   1a56a:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:479
    if(2 != cmdParams.tokenize(" ", 2, &srcFile, &dstFile)) {
   1a56c:	f7fc fb52 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1a570:	2802      	cmp	r0, #2
   1a572:	d115      	bne.n	1a5a0 <mvHandler(str&, CharDev&, void*)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a574:	9c02      	ldr	r4, [sp, #8]
   1a576:	9d03      	ldr	r5, [sp, #12]
   1a578:	4620      	mov	r0, r4
   1a57a:	4629      	mov	r1, r5
   1a57c:	f7f9 f86a 	bl	13654 <f_rename>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   1a580:	4b09      	ldr	r3, [pc, #36]	; (1a5a8 <mvHandler(str&, CharDev&, void*)+0x50>)
   1a582:	490a      	ldr	r1, [pc, #40]	; (1a5ac <mvHandler(str&, CharDev&, void*)+0x54>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a584:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:483
        output.printf("Move '%s' -> '%s' : %s\n",
   1a586:	2800      	cmp	r0, #0
   1a588:	bf0c      	ite	eq
   1a58a:	4608      	moveq	r0, r1
   1a58c:	4618      	movne	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:485
                      (FR_OK == f_rename(srcFile, dstFile))  ? "OK" : "ERROR");
   1a58e:	462b      	mov	r3, r5
   1a590:	9000      	str	r0, [sp, #0]
   1a592:	4907      	ldr	r1, [pc, #28]	; (1a5b0 <mvHandler(str&, CharDev&, void*)+0x58>)
   1a594:	4630      	mov	r0, r6
   1a596:	f7fd fc3f 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:487
    return true;
   1a59a:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:488
}
   1a59c:	b004      	add	sp, #16
   1a59e:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:480
        return false;
   1a5a0:	4620      	mov	r0, r4
   1a5a2:	e7fb      	b.n	1a59c <mvHandler(str&, CharDev&, void*)+0x44>
   1a5a4:	00027beb 	.word	0x00027beb
   1a5a8:	000271e8 	.word	0x000271e8
   1a5ac:	000271de 	.word	0x000271de
   1a5b0:	000274d4 	.word	0x000274d4

0001a5b4 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:491
{
   1a5b4:	b530      	push	{r4, r5, lr}
   1a5b6:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   1a5ba:	460c      	mov	r4, r1
   1a5bc:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:496
    if (FR_OK != f_open(&file, cmdParams(), FA_WRITE | FA_CREATE_ALWAYS)) {
   1a5be:	f7fc fca4 	bl	16f0a <str::operator()() const>
   1a5c2:	220a      	movs	r2, #10
   1a5c4:	4601      	mov	r1, r0
   1a5c6:	a803      	add	r0, sp, #12
   1a5c8:	f7f8 fb22 	bl	12c10 <f_open>
   1a5cc:	b158      	cbz	r0, 1a5e6 <newFileHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:497
        output.printf("Unable to open '%s' to write the file\n", cmdParams());
   1a5ce:	4628      	mov	r0, r5
   1a5d0:	f7fc fc9b 	bl	16f0a <str::operator()() const>
   1a5d4:	4921      	ldr	r1, [pc, #132]	; (1a65c <newFileHandler(str&, CharDev&, void*)+0xa8>)
   1a5d6:	4602      	mov	r2, r0
   1a5d8:	4620      	mov	r0, r4
   1a5da:	f7fd fc1d 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:517
}
   1a5de:	2001      	movs	r0, #1
   1a5e0:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   1a5e4:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:501
    char c = 0;
   1a5e6:	f88d 0007 	strb.w	r0, [sp, #7]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:502
    UINT bw = 0;
   1a5ea:	9002      	str	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:503
    output.printf("End the file by using %c character.  %i is the timeout\n", end_file, timeout_ms);
   1a5ec:	f242 7310 	movw	r3, #10000	; 0x2710
   1a5f0:	227e      	movs	r2, #126	; 0x7e
   1a5f2:	491b      	ldr	r1, [pc, #108]	; (1a660 <newFileHandler(str&, CharDev&, void*)+0xac>)
   1a5f4:	4620      	mov	r0, r4
   1a5f6:	f7fd fc0f 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:504
    output.printf("Sorry, no backspace support :(\n");
   1a5fa:	491a      	ldr	r1, [pc, #104]	; (1a664 <newFileHandler(str&, CharDev&, void*)+0xb0>)
   1a5fc:	4620      	mov	r0, r4
   1a5fe:	f7fd fc0b 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   1a602:	4d19      	ldr	r5, [pc, #100]	; (1a668 <newFileHandler(str&, CharDev&, void*)+0xb4>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506
    while (output.getChar(&c, timeout_ms) && c != end_file) {
   1a604:	6823      	ldr	r3, [r4, #0]
   1a606:	f242 7210 	movw	r2, #10000	; 0x2710
   1a60a:	681b      	ldr	r3, [r3, #0]
   1a60c:	f10d 0107 	add.w	r1, sp, #7
   1a610:	4620      	mov	r0, r4
   1a612:	4798      	blx	r3
   1a614:	b118      	cbz	r0, 1a61e <newFileHandler(str&, CharDev&, void*)+0x6a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:506 (discriminator 1)
   1a616:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1a61a:	2b7e      	cmp	r3, #126	; 0x7e
   1a61c:	d10f      	bne.n	1a63e <newFileHandler(str&, CharDev&, void*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:515
    f_close(&file);
   1a61e:	a803      	add	r0, sp, #12
   1a620:	f7f8 fd60 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:516
    return true;
   1a624:	e7db      	b.n	1a5de <newFileHandler(str&, CharDev&, void*)+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507 (discriminator 2)
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   1a626:	9b02      	ldr	r3, [sp, #8]
   1a628:	2b01      	cmp	r3, #1
   1a62a:	d111      	bne.n	1a650 <newFileHandler(str&, CharDev&, void*)+0x9c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:511
            output.putChar(c);
   1a62c:	6823      	ldr	r3, [r4, #0]
   1a62e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a632:	685b      	ldr	r3, [r3, #4]
   1a634:	f89d 1007 	ldrb.w	r1, [sp, #7]
   1a638:	4620      	mov	r0, r4
   1a63a:	4798      	blx	r3
   1a63c:	e7e2      	b.n	1a604 <newFileHandler(str&, CharDev&, void*)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:507
        if (FR_OK != f_write(&file, &c, 1, &bw) || 1 != bw) {
   1a63e:	ab02      	add	r3, sp, #8
   1a640:	2201      	movs	r2, #1
   1a642:	f10d 0107 	add.w	r1, sp, #7
   1a646:	a803      	add	r0, sp, #12
   1a648:	f7f8 fc31 	bl	12eae <f_write>
   1a64c:	2800      	cmp	r0, #0
   1a64e:	d0ea      	beq.n	1a626 <newFileHandler(str&, CharDev&, void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:508
            output.printf("Error occurred while writing the file\n");
   1a650:	4629      	mov	r1, r5
   1a652:	4620      	mov	r0, r4
   1a654:	f7fd fbe0 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a658:	e7d4      	b.n	1a604 <newFileHandler(str&, CharDev&, void*)+0x50>
   1a65a:	bf00      	nop
   1a65c:	00027131 	.word	0x00027131
   1a660:	00027158 	.word	0x00027158
   1a664:	00027190 	.word	0x00027190
   1a668:	000271b0 	.word	0x000271b0

0001a66c <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   1a66c:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   1a66e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a672:	f5ad 7d43 	sub.w	sp, sp, #780	; 0x30c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:529
    char *dstDir = NULL;
   1a676:	ac06      	add	r4, sp, #24
   1a678:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:528
    char *srcDir = NULL;
   1a67a:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:520
{
   1a67c:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:530
    if(2 != cmdParams.tokenize(" ", 2, &srcDir, &dstDir)) {
   1a67e:	9400      	str	r4, [sp, #0]
   1a680:	ab05      	add	r3, sp, #20
   1a682:	2202      	movs	r2, #2
   1a684:	4940      	ldr	r1, [pc, #256]	; (1a788 <dcpHandler(str&, CharDev&, void*)+0x11c>)
   1a686:	f7fc fac5 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1a68a:	2802      	cmp	r0, #2
   1a68c:	d00a      	beq.n	1a6a4 <dcpHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:531
        output.putline("ERROR: Give me source and destination directory separated by a space");
   1a68e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a692:	493e      	ldr	r1, [pc, #248]	; (1a78c <dcpHandler(str&, CharDev&, void*)+0x120>)
   1a694:	4630      	mov	r0, r6
   1a696:	f7fd fb89 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:572
}
   1a69a:	2001      	movs	r0, #1
   1a69c:	f50d 7d43 	add.w	sp, sp, #780	; 0x30c
   1a6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:536
    if (FR_OK != (returnCode = f_opendir(&Dir, dstDir))) {
   1a6a4:	6821      	ldr	r1, [r4, #0]
   1a6a6:	a819      	add	r0, sp, #100	; 0x64
   1a6a8:	f7f8 fdd5 	bl	13256 <f_opendir>
   1a6ac:	b128      	cbz	r0, 1a6ba <dcpHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:537
        output.printf("Invalid destination directory: |%s|\n", dstDir);
   1a6ae:	6822      	ldr	r2, [r4, #0]
   1a6b0:	4937      	ldr	r1, [pc, #220]	; (1a790 <dcpHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   1a6b2:	4630      	mov	r0, r6
   1a6b4:	f7fd fbb0 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:543
        return true;
   1a6b8:	e7ef      	b.n	1a69a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:541
    if (FR_OK != (returnCode = f_opendir(&Dir, srcDir))) {
   1a6ba:	9905      	ldr	r1, [sp, #20]
   1a6bc:	a819      	add	r0, sp, #100	; 0x64
   1a6be:	f7f8 fdca 	bl	13256 <f_opendir>
   1a6c2:	b110      	cbz	r0, 1a6ca <dcpHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:542
        output.printf("Invalid source directory: |%s|\n", srcDir);
   1a6c4:	9a05      	ldr	r2, [sp, #20]
   1a6c6:	4933      	ldr	r1, [pc, #204]	; (1a794 <dcpHandler(str&, CharDev&, void*)+0x128>)
   1a6c8:	e7f3      	b.n	1a6b2 <dcpHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   1a6ca:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a6ce:	a942      	add	r1, sp, #264	; 0x108
   1a6d0:	a807      	add	r0, sp, #28
   1a6d2:	f7fc fa61 	bl	16b98 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   1a6d6:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a6da:	a982      	add	r1, sp, #520	; 0x208
   1a6dc:	a80c      	add	r0, sp, #48	; 0x30
   1a6de:	f7fc fa5b 	bl	16b98 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   1a6e2:	4f2d      	ldr	r7, [pc, #180]	; (1a798 <dcpHandler(str&, CharDev&, void*)+0x12c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   1a6e4:	f10d 0a88 	add.w	sl, sp, #136	; 0x88
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   1a6e8:	f04f 0880 	mov.w	r8, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   1a6ec:	a911      	add	r1, sp, #68	; 0x44
   1a6ee:	a819      	add	r0, sp, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:551
            Finfo.lfname = Lfname;
   1a6f0:	f8cd a05c 	str.w	sl, [sp, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:552
            Finfo.lfsize = sizeof(Lfname);
   1a6f4:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556
        if ( (FR_OK != f_readdir(&Dir, &Finfo)) || !Finfo.fname[0]) {
   1a6f8:	f7f8 fdfd 	bl	132f6 <f_readdir>
   1a6fc:	b910      	cbnz	r0, 1a704 <dcpHandler(str&, CharDev&, void*)+0x98>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:556 (discriminator 2)
   1a6fe:	f89d 304d 	ldrb.w	r3, [sp, #77]	; 0x4d
   1a702:	b933      	cbnz	r3, 1a712 <dcpHandler(str&, CharDev&, void*)+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:547
    STR_ON_STACK(dst, 256);
   1a704:	a80c      	add	r0, sp, #48	; 0x30
   1a706:	f7fc fa5b 	bl	16bc0 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:546
    STR_ON_STACK(src, 256);
   1a70a:	a807      	add	r0, sp, #28
   1a70c:	f7fc fa58 	bl	16bc0 <str::~str()>
   1a710:	e7c3      	b.n	1a69a <dcpHandler(str&, CharDev&, void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:561
        if (!(Finfo.fattrib & AM_DIR))
   1a712:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
   1a716:	f015 0510 	ands.w	r5, r5, #16
   1a71a:	d1e7      	bne.n	1a6ec <dcpHandler(str&, CharDev&, void*)+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:563
            src.printf("%s/%s", srcDir, Finfo.fname);
   1a71c:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   1a720:	9a05      	ldr	r2, [sp, #20]
   1a722:	4639      	mov	r1, r7
   1a724:	a807      	add	r0, sp, #28
   1a726:	f7fc fc3a 	bl	16f9e <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:564
            dst.printf("%s/%s", dstDir, Finfo.fname);
   1a72a:	6822      	ldr	r2, [r4, #0]
   1a72c:	4639      	mov	r1, r7
   1a72e:	f10d 034d 	add.w	r3, sp, #77	; 0x4d
   1a732:	a80c      	add	r0, sp, #48	; 0x30
   1a734:	f7fc fc33 	bl	16f9e <str::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a738:	a807      	add	r0, sp, #28
   1a73a:	f7fc fbe6 	bl	16f0a <str::operator()() const>
   1a73e:	4680      	mov	r8, r0
   1a740:	a80c      	add	r0, sp, #48	; 0x30
   1a742:	f7fc fbe2 	bl	16f0a <str::operator()() const>
   1a746:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1a748:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a74a:	a807      	add	r0, sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a74c:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a74e:	f7fc fbdc 	bl	16f0a <str::operator()() const>
   1a752:	4683      	mov	fp, r0
   1a754:	a80c      	add	r0, sp, #48	; 0x30
   1a756:	f7fc fbd8 	bl	16f0a <str::operator()() const>
   1a75a:	462b      	mov	r3, r5
   1a75c:	462a      	mov	r2, r5
   1a75e:	4601      	mov	r1, r0
   1a760:	9500      	str	r5, [sp, #0]
   1a762:	4658      	mov	r0, fp
   1a764:	f7fa fa53 	bl	14c0e <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a768:	4b0c      	ldr	r3, [pc, #48]	; (1a79c <dcpHandler(str&, CharDev&, void*)+0x130>)
   1a76a:	4a0d      	ldr	r2, [pc, #52]	; (1a7a0 <dcpHandler(str&, CharDev&, void*)+0x134>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a76c:	490d      	ldr	r1, [pc, #52]	; (1a7a4 <dcpHandler(str&, CharDev&, void*)+0x138>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:566
            output.printf("Copy %s -> %s : %d Bytes : %s\n",
   1a76e:	2800      	cmp	r0, #0
   1a770:	bf18      	it	ne
   1a772:	461a      	movne	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:568
                           (FR_OK == Storage::copy(src(), dst())) ? "OK" : "ERROR");
   1a774:	9b03      	ldr	r3, [sp, #12]
   1a776:	9201      	str	r2, [sp, #4]
   1a778:	9300      	str	r3, [sp, #0]
   1a77a:	4642      	mov	r2, r8
   1a77c:	464b      	mov	r3, r9
   1a77e:	4630      	mov	r0, r6
   1a780:	f7fd fb4a 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a784:	e7b0      	b.n	1a6e8 <dcpHandler(str&, CharDev&, void*)+0x7c>
   1a786:	bf00      	nop
   1a788:	00027beb 	.word	0x00027beb
   1a78c:	00026ce8 	.word	0x00026ce8
   1a790:	00026d2d 	.word	0x00026d2d
   1a794:	00026d52 	.word	0x00026d52
   1a798:	00026d72 	.word	0x00026d72
   1a79c:	000271e8 	.word	0x000271e8
   1a7a0:	000271de 	.word	0x000271de
   1a7a4:	00026d78 	.word	0x00026d78

0001a7a8 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   1a7a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a7aa:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   1a7ac:	4923      	ldr	r1, [pc, #140]	; (1a83c <storageHandler(str&, CharDev&, void*)+0x94>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:575
{
   1a7ae:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:576
    if(cmdParams == "format sd") {
   1a7b0:	f7fc fba9 	bl	16f06 <str::operator==(char const*) const>
   1a7b4:	4604      	mov	r4, r0
   1a7b6:	b198      	cbz	r0, 1a7e0 <storageHandler(str&, CharDev&, void*)+0x38>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
        output.putline((FR_OK == Storage::getSDDrive().format()) ? "Format OK" : "Format ERROR");
   1a7b8:	f7ff fb36 	bl	19e28 <Storage::getSDDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1a7bc:	2200      	movs	r2, #0
   1a7be:	f200 2039 	addw	r0, r0, #569	; 0x239
   1a7c2:	4611      	mov	r1, r2
   1a7c4:	f7f9 f820 	bl	13808 <f_mkfs>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:577
   1a7c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a7cc:	4b1c      	ldr	r3, [pc, #112]	; (1a840 <storageHandler(str&, CharDev&, void*)+0x98>)
   1a7ce:	491d      	ldr	r1, [pc, #116]	; (1a844 <storageHandler(str&, CharDev&, void*)+0x9c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   1a7d0:	2800      	cmp	r0, #0
   1a7d2:	bf18      	it	ne
   1a7d4:	4619      	movne	r1, r3
   1a7d6:	4628      	mov	r0, r5
   1a7d8:	f7fd fae8 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:592
}
   1a7dc:	4620      	mov	r0, r4
   1a7de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:579
    else if(cmdParams == "format flash") {
   1a7e0:	4919      	ldr	r1, [pc, #100]	; (1a848 <storageHandler(str&, CharDev&, void*)+0xa0>)
   1a7e2:	4630      	mov	r0, r6
   1a7e4:	f7fc fb8f 	bl	16f06 <str::operator==(char const*) const>
   1a7e8:	4604      	mov	r4, r0
   1a7ea:	b110      	cbz	r0, 1a7f2 <storageHandler(str&, CharDev&, void*)+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:580
        output.putline((FR_OK == Storage::getFlashDrive().format()) ? "Format OK" : "Format ERROR");
   1a7ec:	f7ff faf6 	bl	19ddc <Storage::getFlashDrive()>
   1a7f0:	e7e4      	b.n	1a7bc <storageHandler(str&, CharDev&, void*)+0x14>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:582
    else if(cmdParams == "mount sd") {
   1a7f2:	4916      	ldr	r1, [pc, #88]	; (1a84c <storageHandler(str&, CharDev&, void*)+0xa4>)
   1a7f4:	4630      	mov	r0, r6
   1a7f6:	f7fc fb86 	bl	16f06 <str::operator==(char const*) const>
   1a7fa:	4604      	mov	r4, r0
   1a7fc:	b158      	cbz	r0, 1a816 <storageHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
        output.putline(FR_OK == Storage::getSDDrive().mount() ? "SD Card mounted" : "Error mounting SD Card");
   1a7fe:	f7ff fb13 	bl	19e28 <Storage::getSDDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   1a802:	2201      	movs	r2, #1
   1a804:	f200 2139 	addw	r1, r0, #569	; 0x239
   1a808:	f7f8 f9c4 	bl	12b94 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:583
   1a80c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a810:	4b0f      	ldr	r3, [pc, #60]	; (1a850 <storageHandler(str&, CharDev&, void*)+0xa8>)
   1a812:	4910      	ldr	r1, [pc, #64]	; (1a854 <storageHandler(str&, CharDev&, void*)+0xac>)
   1a814:	e7dc      	b.n	1a7d0 <storageHandler(str&, CharDev&, void*)+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:585
    else if(cmdParams == "mount flash") {
   1a816:	4910      	ldr	r1, [pc, #64]	; (1a858 <storageHandler(str&, CharDev&, void*)+0xb0>)
   1a818:	4630      	mov	r0, r6
   1a81a:	f7fc fb74 	bl	16f06 <str::operator==(char const*) const>
   1a81e:	4604      	mov	r4, r0
   1a820:	2800      	cmp	r0, #0
   1a822:	d0db      	beq.n	1a7dc <storageHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
        output.putline(FR_OK == Storage::getFlashDrive().mount() ? "Flash mounted" : "Error mounting Flash Memory");
   1a824:	f7ff fada 	bl	19ddc <Storage::getFlashDrive()>
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
   1a828:	2201      	movs	r2, #1
   1a82a:	f200 2139 	addw	r1, r0, #569	; 0x239
   1a82e:	f7f8 f9b1 	bl	12b94 <f_mount>
_Z14storageHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:586
   1a832:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a836:	4b09      	ldr	r3, [pc, #36]	; (1a85c <storageHandler(str&, CharDev&, void*)+0xb4>)
   1a838:	4909      	ldr	r1, [pc, #36]	; (1a860 <storageHandler(str&, CharDev&, void*)+0xb8>)
   1a83a:	e7c9      	b.n	1a7d0 <storageHandler(str&, CharDev&, void*)+0x28>
   1a83c:	0002723f 	.word	0x0002723f
   1a840:	000271e1 	.word	0x000271e1
   1a844:	000271d7 	.word	0x000271d7
   1a848:	00027249 	.word	0x00027249
   1a84c:	00027256 	.word	0x00027256
   1a850:	000271fe 	.word	0x000271fe
   1a854:	000271ee 	.word	0x000271ee
   1a858:	0002725f 	.word	0x0002725f
   1a85c:	00027223 	.word	0x00027223
   1a860:	00027215 	.word	0x00027215

0001a864 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:595
{
   1a864:	b508      	push	{r3, lr}
   1a866:	4608      	mov	r0, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:596
    output.putline("Rebooting System");
   1a868:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a86c:	4908      	ldr	r1, [pc, #32]	; (1a890 <rebootHandler(str&, CharDev&, void*)+0x2c>)
   1a86e:	f7fd fa9d 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:599
    LOG_FLUSH();
   1a872:	f7fb ff43 	bl	166fc <logger_send_flush_request>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:601
    vTaskDelayMs(2000);
   1a876:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1a87a:	f7fe ff9f 	bl	197bc <vTaskDelay>
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1a87e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1a882:	22aa      	movs	r2, #170	; 0xaa
   1a884:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1a886:	2200      	movs	r2, #0
   1a888:	701a      	strb	r2, [r3, #0]
_Z13rebootHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:605
}
   1a88a:	2001      	movs	r0, #1
   1a88c:	bd08      	pop	{r3, pc}
   1a88e:	bf00      	nop
   1a890:	000270d1 	.word	0x000270d1

0001a894 <telemetryHandler(str&, CharDev&, void*)>:
_Z16telemetryHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:618
        s++;
    }
}

CMD_HANDLER_FUNC(telemetryHandler)
{
   1a894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a898:	b0c4      	sub	sp, #272	; 0x110
   1a89a:	4607      	mov	r7, r0
   1a89c:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:619
    if(cmdParams.getLen() == 0)
   1a89e:	f7fc f9a2 	bl	16be6 <str::getLen() const>
   1a8a2:	4602      	mov	r2, r0
   1a8a4:	b938      	cbnz	r0, 1a8b6 <telemetryHandler(str&, CharDev&, void*)+0x22>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
    {
        tlm_stream_all(stream_tlm, &output, false);
    }
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
    {
        tlm_stream_all(stream_tlm, &output, true);
   1a8a6:	4621      	mov	r1, r4
   1a8a8:	483e      	ldr	r0, [pc, #248]	; (1a9a4 <telemetryHandler(str&, CharDev&, void*)+0x110>)
   1a8aa:	f7fa fca9 	bl	15200 <tlm_stream_all>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:665
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
            }
        }
    }
    return true;
}
   1a8ae:	2001      	movs	r0, #1
   1a8b0:	b044      	add	sp, #272	; 0x110
   1a8b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:623
    else if (cmdParams.beginsWithIgnoreCase("ascii"))
   1a8b6:	493c      	ldr	r1, [pc, #240]	; (1a9a8 <telemetryHandler(str&, CharDev&, void*)+0x114>)
   1a8b8:	4638      	mov	r0, r7
   1a8ba:	f7fc fa4c 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   1a8be:	b108      	cbz	r0, 1a8c4 <telemetryHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:625
        tlm_stream_all(stream_tlm, &output, true);
   1a8c0:	2201      	movs	r2, #1
   1a8c2:	e7f0      	b.n	1a8a6 <telemetryHandler(str&, CharDev&, void*)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:627
    else if(cmdParams == "save") {
   1a8c4:	4939      	ldr	r1, [pc, #228]	; (1a9ac <telemetryHandler(str&, CharDev&, void*)+0x118>)
   1a8c6:	4638      	mov	r0, r7
   1a8c8:	f7fc fb1d 	bl	16f06 <str::operator==(char const*) const>
   1a8cc:	4680      	mov	r8, r0
   1a8ce:	b1a0      	cbz	r0, 1a8fa <telemetryHandler(str&, CharDev&, void*)+0x66>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:628
        FILE *fd = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   1a8d0:	4937      	ldr	r1, [pc, #220]	; (1a9b0 <telemetryHandler(str&, CharDev&, void*)+0x11c>)
   1a8d2:	4838      	ldr	r0, [pc, #224]	; (1a9b4 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   1a8d4:	f004 fada 	bl	1ee8c <fopen>
   1a8d8:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:629
        tlm_stream_one_file(tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME), fd);
   1a8da:	4836      	ldr	r0, [pc, #216]	; (1a9b4 <telemetryHandler(str&, CharDev&, void*)+0x120>)
   1a8dc:	f7fa fd94 	bl	15408 <tlm_component_get_by_name>
   1a8e0:	4629      	mov	r1, r5
   1a8e2:	f7fa fc9b 	bl	1521c <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:630
        fclose(fd);
   1a8e6:	4628      	mov	r0, r5
   1a8e8:	f004 f876 	bl	1e9d8 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:631
        output.putline("Telemetry was saved to disk");
   1a8ec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a8f0:	4931      	ldr	r1, [pc, #196]	; (1a9b8 <telemetryHandler(str&, CharDev&, void*)+0x124>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   1a8f2:	4620      	mov	r0, r4
   1a8f4:	f7fd fa5a 	bl	17dac <CharDev::putline(char const*, unsigned int)>
   1a8f8:	e7d9      	b.n	1a8ae <telemetryHandler(str&, CharDev&, void*)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:633
    else if(cmdParams.beginsWithIgnoreCase("get")) {
   1a8fa:	4930      	ldr	r1, [pc, #192]	; (1a9bc <telemetryHandler(str&, CharDev&, void*)+0x128>)
   1a8fc:	4638      	mov	r0, r7
   1a8fe:	f7fc fa2a 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   1a902:	ad02      	add	r5, sp, #8
   1a904:	ae03      	add	r6, sp, #12
   1a906:	b328      	cbz	r0, 1a954 <telemetryHandler(str&, CharDev&, void*)+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:634
        char *compName = NULL;
   1a908:	f8c5 8000 	str.w	r8, [r5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:635
        char *varName = NULL;
   1a90c:	f8c6 8000 	str.w	r8, [r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:636
        if (3 == cmdParams.tokenize(" ", 3, NULL, &compName, &varName)) {
   1a910:	4643      	mov	r3, r8
   1a912:	e88d 0060 	stmia.w	sp, {r5, r6}
   1a916:	2203      	movs	r2, #3
   1a918:	4929      	ldr	r1, [pc, #164]	; (1a9c0 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   1a91a:	4638      	mov	r0, r7
   1a91c:	f7fc f97a 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1a920:	2803      	cmp	r0, #3
   1a922:	d113      	bne.n	1a94c <telemetryHandler(str&, CharDev&, void*)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:637
            char buffer[256] = { 0 };
   1a924:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a928:	4641      	mov	r1, r8
   1a92a:	a804      	add	r0, sp, #16
   1a92c:	f004 fdd2 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   1a930:	aa04      	add	r2, sp, #16
   1a932:	f44f 7380 	mov.w	r3, #256	; 0x100
   1a936:	6831      	ldr	r1, [r6, #0]
   1a938:	6828      	ldr	r0, [r5, #0]
   1a93a:	f7fb f941 	bl	15bc0 <tlm_variable_get_value>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   1a93e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:638
            if (tlm_variable_get_value(compName, varName, &buffer[0], sizeof(buffer))) {
   1a942:	b108      	cbz	r0, 1a948 <telemetryHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:639
                output.putline(buffer);
   1a944:	a904      	add	r1, sp, #16
   1a946:	e7d4      	b.n	1a8f2 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:642
                output.putline("Error locating or printing variable value");
   1a948:	491e      	ldr	r1, [pc, #120]	; (1a9c4 <telemetryHandler(str&, CharDev&, void*)+0x130>)
   1a94a:	e7d2      	b.n	1a8f2 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:646
            output.putline("Required parameters: 'get <comp name> <var name>");
   1a94c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a950:	491d      	ldr	r1, [pc, #116]	; (1a9c8 <telemetryHandler(str&, CharDev&, void*)+0x134>)
   1a952:	e7ce      	b.n	1a8f2 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   1a954:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:650
        char *compName = NULL;
   1a958:	6028      	str	r0, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:651
        char *varName = NULL;
   1a95a:	6030      	str	r0, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:652
        char *varVal = NULL;
   1a95c:	f8c8 0000 	str.w	r0, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:653
        if (3 != cmdParams.tokenize(" ", 3, &compName, &varName, &varVal)) {
   1a960:	462b      	mov	r3, r5
   1a962:	e88d 0140 	stmia.w	sp, {r6, r8}
   1a966:	2203      	movs	r2, #3
   1a968:	4915      	ldr	r1, [pc, #84]	; (1a9c0 <telemetryHandler(str&, CharDev&, void*)+0x12c>)
   1a96a:	4638      	mov	r0, r7
   1a96c:	f7fc f952 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1a970:	2803      	cmp	r0, #3
   1a972:	d003      	beq.n	1a97c <telemetryHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:654
            output.putline("ERROR: See 'help telemetry'");
   1a974:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a978:	4914      	ldr	r1, [pc, #80]	; (1a9cc <telemetryHandler(str&, CharDev&, void*)+0x138>)
   1a97a:	e7ba      	b.n	1a8f2 <telemetryHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a97c:	f8d8 2000 	ldr.w	r2, [r8]
   1a980:	6831      	ldr	r1, [r6, #0]
   1a982:	6828      	ldr	r0, [r5, #0]
   1a984:	f7fa fe1e 	bl	155c4 <tlm_variable_set_value>
   1a988:	f8d8 3000 	ldr.w	r3, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a98c:	9300      	str	r3, [sp, #0]
   1a98e:	6833      	ldr	r3, [r6, #0]
   1a990:	682a      	ldr	r2, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:657
            if (tlm_variable_set_value(compName, varName, varVal)) {
   1a992:	b120      	cbz	r0, 1a99e <telemetryHandler(str&, CharDev&, void*)+0x10a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:658
                output.printf("%s:%s set to %s\n", compName, varName, varVal);
   1a994:	490e      	ldr	r1, [pc, #56]	; (1a9d0 <telemetryHandler(str&, CharDev&, void*)+0x13c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:660
                output.printf("Failed to set %s:%s to %s\n", compName, varName, varVal);
   1a996:	4620      	mov	r0, r4
   1a998:	f7fd fa3e 	bl	17e18 <CharDev::printf(char const*, ...)>
   1a99c:	e787      	b.n	1a8ae <telemetryHandler(str&, CharDev&, void*)+0x1a>
   1a99e:	490d      	ldr	r1, [pc, #52]	; (1a9d4 <telemetryHandler(str&, CharDev&, void*)+0x140>)
   1a9a0:	e7f9      	b.n	1a996 <telemetryHandler(str&, CharDev&, void*)+0x102>
   1a9a2:	bf00      	nop
   1a9a4:	00019dc1 	.word	0x00019dc1
   1a9a8:	00027308 	.word	0x00027308
   1a9ac:	0002730e 	.word	0x0002730e
   1a9b0:	00026e49 	.word	0x00026e49
   1a9b4:	0002732a 	.word	0x0002732a
   1a9b8:	00027313 	.word	0x00027313
   1a9bc:	0002732f 	.word	0x0002732f
   1a9c0:	00027beb 	.word	0x00027beb
   1a9c4:	00027333 	.word	0x00027333
   1a9c8:	0002735d 	.word	0x0002735d
   1a9cc:	0002738e 	.word	0x0002738e
   1a9d0:	000273aa 	.word	0x000273aa
   1a9d4:	000273bb 	.word	0x000273bb

0001a9d8 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
#endif

CMD_HANDLER_FUNC(learnIrHandler)
{
   1a9d8:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a9da:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:669
{
   1a9dc:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:670
    SemaphoreHandle_t learn_sem = scheduler_task::getSharedObject(shared_learnSemaphore);
   1a9de:	f7fb fd77 	bl	164d0 <scheduler_task::getSharedObject(unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:672

    if (learn_sem)
   1a9e2:	b160      	cbz	r0, 1a9fe <learnIrHandler(str&, CharDev&, void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:674
    {
        xSemaphoreGive(learn_sem);
   1a9e4:	2300      	movs	r3, #0
   1a9e6:	461a      	mov	r2, r3
   1a9e8:	4619      	mov	r1, r3
   1a9ea:	f7fe fa01 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:675
        output.putline("Learning mode enabled");
   1a9ee:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a9f2:	4905      	ldr	r1, [pc, #20]	; (1aa08 <learnIrHandler(str&, CharDev&, void*)+0x30>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
    }
    else
    {
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a9f4:	4620      	mov	r0, r4
   1a9f6:	f7fd f9d9 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:683
    }

    return true;
}
   1a9fa:	2001      	movs	r0, #1
   1a9fc:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:679
        output.putline("ERROR: Semaphore was NULL, is the 'remote' task running?");
   1a9fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aa02:	4902      	ldr	r1, [pc, #8]	; (1aa0c <learnIrHandler(str&, CharDev&, void*)+0x34>)
   1aa04:	e7f6      	b.n	1a9f4 <learnIrHandler(str&, CharDev&, void*)+0x1c>
   1aa06:	bf00      	nop
   1aa08:	000270e2 	.word	0x000270e2
   1aa0c:	000270f8 	.word	0x000270f8

0001aa10 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1aa10:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1aa12:	4c06      	ldr	r4, [pc, #24]	; (1aa2c <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   1aa14:	6823      	ldr	r3, [r4, #0]
   1aa16:	b933      	cbnz	r3, 1aa26 <SingletonTemplate<I2C2>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1aa18:	2024      	movs	r0, #36	; 0x24
   1aa1a:	f7fc fb67 	bl	170ec <operator new(unsigned int)>
   1aa1e:	4605      	mov	r5, r0
   1aa20:	f7fd fee2 	bl	187e8 <I2C2::I2C2()>
   1aa24:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1aa26:	6820      	ldr	r0, [r4, #0]
   1aa28:	bd38      	pop	{r3, r4, r5, pc}
   1aa2a:	bf00      	nop
   1aa2c:	2007c600 	.word	0x2007c600

0001aa30 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
{
   1aa30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1aa34:	4c60      	ldr	r4, [pc, #384]	; (1abb8 <healthHandler(str&, CharDev&, void*)+0x188>)
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1aa36:	b091      	sub	sp, #68	; 0x44
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1aa38:	6823      	ldr	r3, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:124
   1aa3a:	460e      	mov	r6, r1
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1aa3c:	b933      	cbnz	r3, 1aa4c <healthHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1aa3e:	202c      	movs	r0, #44	; 0x2c
   1aa40:	f7fc fb54 	bl	170ec <operator new(unsigned int)>
   1aa44:	4605      	mov	r5, r0
   1aa46:	f7fd fd9d 	bl	18584 <Uart0::Uart0()>
   1aa4a:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:107
        return *(classType*)mpSingletonInstance;
   1aa4c:	6827      	ldr	r7, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:129
    Storage::getFlashDrive().getDriveInfo(&total, &available);
   1aa4e:	f7ff f9c5 	bl	19ddc <Storage::getFlashDrive()>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1aa52:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1aa54:	aa0c      	add	r2, sp, #48	; 0x30
   1aa56:	a90d      	add	r1, sp, #52	; 0x34
   1aa58:	f200 2039 	addw	r0, r0, #569	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1aa5c:	940d      	str	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1aa5e:	f7f8 fc7a 	bl	13356 <f_getfree>
   1aa62:	2800      	cmp	r0, #0
   1aa64:	d14f      	bne.n	1ab06 <healthHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1aa66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1aa68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1aa6a:	789d      	ldrb	r5, [r3, #2]
   1aa6c:	69db      	ldr	r3, [r3, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1aa6e:	436c      	muls	r4, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1aa70:	3b02      	subs	r3, #2
   1aa72:	435d      	muls	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1aa74:	0864      	lsrs	r4, r4, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1aa76:	086d      	lsrs	r5, r5, #1
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1aa78:	4b50      	ldr	r3, [pc, #320]	; (1abbc <healthHandler(str&, CharDev&, void*)+0x18c>)
   1aa7a:	681a      	ldr	r2, [r3, #0]
   1aa7c:	4698      	mov	r8, r3
   1aa7e:	b97a      	cbnz	r2, 1aaa0 <healthHandler(str&, CharDev&, void*)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1aa80:	200c      	movs	r0, #12
   1aa82:	f7fc fb33 	bl	170ec <operator new(unsigned int)>
   1aa86:	4681      	mov	r9, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   1aa88:	f7ff ffc2 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1aa8c:	2390      	movs	r3, #144	; 0x90
   1aa8e:	f889 3004 	strb.w	r3, [r9, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   1aa92:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1aa94:	f8c9 0000 	str.w	r0, [r9]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1aa98:	f8c9 3008 	str.w	r3, [r9, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1aa9c:	f8c8 9000 	str.w	r9, [r8]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:131
    float floatTemp = TS.getFarenheit();
   1aaa0:	f8d8 0000 	ldr.w	r0, [r8]
   1aaa4:	f7fa fade 	bl	15064 <I2C_Temp::getFarenheit()>
   1aaa8:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:132
    int floatSig1 = (int) floatTemp;
   1aaaa:	f003 fd53 	bl	1e554 <__aeabi_f2iz>
   1aaae:	900a      	str	r0, [sp, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:133
    int floatDec1 = ((floatTemp - floatSig1) * 10);
   1aab0:	f003 fbac 	bl	1e20c <__aeabi_i2f>
   1aab4:	4601      	mov	r1, r0
   1aab6:	4648      	mov	r0, r9
   1aab8:	f003 faf2 	bl	1e0a0 <__aeabi_fsub>
   1aabc:	4940      	ldr	r1, [pc, #256]	; (1abc0 <healthHandler(str&, CharDev&, void*)+0x190>)
   1aabe:	f003 fbf9 	bl	1e2b4 <__aeabi_fmul>
   1aac2:	f003 fd47 	bl	1e554 <__aeabi_f2iz>
   1aac6:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:134
    rtc_t bt = sys_get_boot_time();
   1aac8:	a80d      	add	r0, sp, #52	; 0x34
   1aaca:	f7f5 fb9f 	bl	1020c <sys_get_boot_time>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:138
    if (flash_supports_metadata())
   1aace:	f7f9 ff63 	bl	14998 <flash_supports_metadata>
   1aad2:	2800      	cmp	r0, #0
   1aad4:	d069      	beq.n	1abaa <healthHandler(str&, CharDev&, void*)+0x17a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:140
        spi1_lock();
   1aad6:	f7fd fde3 	bl	186a0 <spi1_lock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1aada:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1aade:	f7f9 ff45 	bl	1496c <flash_get_page_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:137
    unsigned int highestPageWrCnt = 0;
   1aae2:	46d3      	mov	fp, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:142
        const unsigned int pages = flash_get_page_count();
   1aae4:	4603      	mov	r3, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:136
    unsigned int highestWrCnt = 0;
   1aae6:	46d0      	mov	r8, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144 (discriminator 1)
        for (unsigned int i = 0; i < pages; i++) {
   1aae8:	459a      	cmp	sl, r3
   1aaea:	930b      	str	r3, [sp, #44]	; 0x2c
   1aaec:	d00d      	beq.n	1ab0a <healthHandler(str&, CharDev&, void*)+0xda>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:145
            const unsigned int wrCount = flash_get_page_write_count(i);
   1aaee:	4650      	mov	r0, sl
   1aaf0:	f7f9 ffa0 	bl	14a34 <flash_get_page_write_count>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:146
            if (wrCount > highestWrCnt) {
   1aaf4:	4580      	cmp	r8, r0
   1aaf6:	bf38      	it	cc
   1aaf8:	46d3      	movcc	fp, sl
   1aafa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1aafc:	bf38      	it	cc
   1aafe:	4680      	movcc	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:144
        for (unsigned int i = 0; i < pages; i++) {
   1ab00:	f10a 0a01 	add.w	sl, sl, #1
   1ab04:	e7f0      	b.n	1aae8 <healthHandler(str&, CharDev&, void*)+0xb8>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:70
            *pTotalDriveSpaceKB = 0;
   1ab06:	4625      	mov	r5, r4
   1ab08:	e7b6      	b.n	1aa78 <healthHandler(str&, CharDev&, void*)+0x48>
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:151
        spi1_unlock();
   1ab0a:	f7fd fde1 	bl	186d0 <spi1_unlock>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1ab0e:	2364      	movs	r3, #100	; 0x64
   1ab10:	fb03 f308 	mul.w	r3, r3, r8
   1ab14:	4a2b      	ldr	r2, [pc, #172]	; (1abc4 <healthHandler(str&, CharDev&, void*)+0x194>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1ab16:	f8cd 8008 	str.w	r8, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:154
        int life = 100 - (100 * highestWrCnt / max_writes);
   1ab1a:	fbb3 f3f2 	udiv	r3, r3, r2
   1ab1e:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:156
                        available, total, life, highestPageWrCnt, highestWrCnt);
   1ab22:	9300      	str	r3, [sp, #0]
   1ab24:	f8cd b004 	str.w	fp, [sp, #4]
   1ab28:	462b      	mov	r3, r5
   1ab2a:	4622      	mov	r2, r4
   1ab2c:	4926      	ldr	r1, [pc, #152]	; (1abc8 <healthHandler(str&, CharDev&, void*)+0x198>)
   1ab2e:	4630      	mov	r0, r6
   1ab30:	f7fd f972 	bl	17e18 <CharDev::printf(char const*, ...)>
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1ab34:	4c25      	ldr	r4, [pc, #148]	; (1abcc <healthHandler(str&, CharDev&, void*)+0x19c>)
   1ab36:	6823      	ldr	r3, [r4, #0]
   1ab38:	b91b      	cbnz	r3, 1ab42 <healthHandler(str&, CharDev&, void*)+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1ab3a:	2001      	movs	r0, #1
   1ab3c:	f7fc fad6 	bl	170ec <operator new(unsigned int)>
   1ab40:	6020      	str	r0, [r4, #0]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:168
                    LS.getRawValue(),
   1ab42:	6820      	ldr	r0, [r4, #0]
   1ab44:	f7fa fa46 	bl	14fd4 <Light_Sensor::getRawValue()>
   1ab48:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab4a:	f7fd fa8b 	bl	18064 <rtc_get_date_time_str>
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
        inline unsigned int getTxQueueWatermark() const { return mTxQWatermark; }
   1ab4e:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1ab50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
_ZNK7UartDev19getTxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:96
   1ab52:	9309      	str	r3, [sp, #36]	; 0x24
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
        inline unsigned int getRxQueueWatermark() const { return mRxQWatermark; }
   1ab54:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
   1ab56:	491e      	ldr	r1, [pc, #120]	; (1abd0 <healthHandler(str&, CharDev&, void*)+0x1a0>)
_ZNK7UartDev19getRxQueueWatermarkEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/uart_dev.hpp:95
   1ab58:	9308      	str	r3, [sp, #32]
_Z13healthHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab5a:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1ab5e:	9001      	str	r0, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab60:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1ab64:	9307      	str	r3, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab66:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab6a:	9400      	str	r4, [sp, #0]
   1ab6c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1ab70:	9306      	str	r3, [sp, #24]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab72:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1ab76:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab78:	f003 031f 	and.w	r3, r3, #31
   1ab7c:	9305      	str	r3, [sp, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab7e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab82:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1ab86:	9304      	str	r3, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab88:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab8c:	f003 031f 	and.w	r3, r3, #31
   1ab90:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:170
                    bt.month, bt.day, bt.year, bt.hour, bt.min, bt.sec,
   1ab92:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:162
    output.printf( "Temp : %u.%u\n"
   1ab96:	f003 030f 	and.w	r3, r3, #15
   1ab9a:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:172
    );
   1ab9c:	464b      	mov	r3, r9
   1ab9e:	f7fd f93b 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:177
}
   1aba2:	2001      	movs	r0, #1
   1aba4:	b011      	add	sp, #68	; 0x44
   1aba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:159
        output.printf("Flash: %u/%u\n", available, total);
   1abaa:	462b      	mov	r3, r5
   1abac:	4622      	mov	r2, r4
   1abae:	4909      	ldr	r1, [pc, #36]	; (1abd4 <healthHandler(str&, CharDev&, void*)+0x1a4>)
   1abb0:	4630      	mov	r0, r6
   1abb2:	f7fd f931 	bl	17e18 <CharDev::printf(char const*, ...)>
   1abb6:	e7bd      	b.n	1ab34 <healthHandler(str&, CharDev&, void*)+0x104>
   1abb8:	2007c5f8 	.word	0x2007c5f8
   1abbc:	2007c764 	.word	0x2007c764
   1abc0:	41200000 	.word	0x41200000
   1abc4:	000186a0 	.word	0x000186a0
   1abc8:	00027026 	.word	0x00027026
   1abcc:	2007c768 	.word	0x2007c768
   1abd0:	00027068 	.word	0x00027068
   1abd4:	0002705a 	.word	0x0002705a

0001abd8 <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1abd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abdc:	460c      	mov	r4, r1
   1abde:	b0c7      	sub	sp, #284	; 0x11c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1abe0:	4957      	ldr	r1, [pc, #348]	; (1ad40 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:421
{
   1abe2:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1abe4:	f7fc f8b7 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1abe8:	4956      	ldr	r1, [pc, #344]	; (1ad44 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:422
    bool read = cmdParams.beginsWithIgnoreCase("read");
   1abea:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1abec:	4648      	mov	r0, r9
   1abee:	f7fc f8b2 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1abf2:	4955      	ldr	r1, [pc, #340]	; (1ad48 <i2cIoHandler(str&, CharDev&, void*)+0x170>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:423
    bool write = cmdParams.beginsWithIgnoreCase("write");
   1abf4:	4683      	mov	fp, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1abf6:	4648      	mov	r0, r9
   1abf8:	f7fc f8ad 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1abfc:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1abfe:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1ac02:	ad05      	add	r5, sp, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1ac04:	4682      	mov	sl, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:426
    int addr = 0;
   1ac06:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:427
    int reg = 0;
   1ac08:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:428
    int data = 0;
   1ac0a:	f8c8 6000 	str.w	r6, [r8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:429
    unsigned int count = 0;
   1ac0e:	602e      	str	r6, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:431
    if (read) {
   1ac10:	2f00      	cmp	r7, #0
   1ac12:	d04b      	beq.n	1acac <i2cIoHandler(str&, CharDev&, void*)+0xd4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:432
        if (cmdParams.scanf("%*s %0x %0x %u", &addr, &reg, &count) < 2) {
   1ac14:	9500      	str	r5, [sp, #0]
   1ac16:	ab03      	add	r3, sp, #12
   1ac18:	aa02      	add	r2, sp, #8
   1ac1a:	494c      	ldr	r1, [pc, #304]	; (1ad4c <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   1ac1c:	4648      	mov	r0, r9
   1ac1e:	f7fb ffeb 	bl	16bf8 <str::scanf(char const*, ...)>
   1ac22:	2801      	cmp	r0, #1
   1ac24:	dc0a      	bgt.n	1ac3c <i2cIoHandler(str&, CharDev&, void*)+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:433
            output.putline("Need device and register address");
   1ac26:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ac2a:	4949      	ldr	r1, [pc, #292]	; (1ad50 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   1ac2c:	4620      	mov	r0, r4
   1ac2e:	f7fd f8bd 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:434
            return false;
   1ac32:	4637      	mov	r7, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:473
}
   1ac34:	4638      	mov	r0, r7
   1ac36:	b047      	add	sp, #284	; 0x11c
   1ac38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:437
        uint8_t buffer[256] = { 0 };
   1ac3c:	f44f 7980 	mov.w	r9, #256	; 0x100
   1ac40:	f10d 0818 	add.w	r8, sp, #24
   1ac44:	464a      	mov	r2, r9
   1ac46:	4631      	mov	r1, r6
   1ac48:	4640      	mov	r0, r8
   1ac4a:	f004 fc43 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:438
        if (count <= 0) {
   1ac4e:	682b      	ldr	r3, [r5, #0]
   1ac50:	bb33      	cbnz	r3, 1aca0 <i2cIoHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:439
            count = 1;
   1ac52:	2301      	movs	r3, #1
   1ac54:	602b      	str	r3, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:445
        bool ok = I2C2::getInstance().readRegisters(addr, reg, &buffer[0], count);
   1ac56:	f7ff fedb 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1ac5a:	682b      	ldr	r3, [r5, #0]
   1ac5c:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1ac60:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1ac64:	9300      	str	r3, [sp, #0]
   1ac66:	4643      	mov	r3, r8
   1ac68:	f7fc fdaa 	bl	177c0 <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:446
        output.printf("Read status from device %#2X: %s: \n", addr, ok ? "OK" : "ERROR");
   1ac6c:	4a39      	ldr	r2, [pc, #228]	; (1ad54 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   1ac6e:	4b3a      	ldr	r3, [pc, #232]	; (1ad58 <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   1ac70:	493a      	ldr	r1, [pc, #232]	; (1ad5c <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   1ac72:	2800      	cmp	r0, #0
   1ac74:	bf18      	it	ne
   1ac76:	4613      	movne	r3, r2
   1ac78:	9a02      	ldr	r2, [sp, #8]
   1ac7a:	4620      	mov	r0, r4
   1ac7c:	f7fd f8cc 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447
        for (unsigned int i = 0; i < count; i++) {
   1ac80:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1ac82:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 1ad74 <i2cIoHandler(str&, CharDev&, void*)+0x19c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 3)
        for (unsigned int i = 0; i < count; i++) {
   1ac86:	682b      	ldr	r3, [r5, #0]
   1ac88:	429e      	cmp	r6, r3
   1ac8a:	d2d3      	bcs.n	1ac34 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:448 (discriminator 2)
            output.printf("    %#2X: %#2X\n", (reg + i), (buffer[i] & 0xFF));
   1ac8c:	9a03      	ldr	r2, [sp, #12]
   1ac8e:	f818 3006 	ldrb.w	r3, [r8, r6]
   1ac92:	4432      	add	r2, r6
   1ac94:	4649      	mov	r1, r9
   1ac96:	4620      	mov	r0, r4
   1ac98:	f7fd f8be 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:447 (discriminator 2)
        for (unsigned int i = 0; i < count; i++) {
   1ac9c:	3601      	adds	r6, #1
   1ac9e:	e7f2      	b.n	1ac86 <i2cIoHandler(str&, CharDev&, void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:441
        else if (count > sizeof(buffer)) {
   1aca0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:442
            count = sizeof(buffer);
   1aca4:	bf88      	it	hi
   1aca6:	f8c5 9000 	strhi.w	r9, [r5]
   1acaa:	e7d4      	b.n	1ac56 <i2cIoHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:451
    else if (write) {
   1acac:	f1bb 0f00 	cmp.w	fp, #0
   1acb0:	d02c      	beq.n	1ad0c <i2cIoHandler(str&, CharDev&, void*)+0x134>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:452
        if (3 != cmdParams.scanf("%*s %0x %0x %0x", &addr, &reg, &data)) {
   1acb2:	f8cd 8000 	str.w	r8, [sp]
   1acb6:	ab03      	add	r3, sp, #12
   1acb8:	aa02      	add	r2, sp, #8
   1acba:	4929      	ldr	r1, [pc, #164]	; (1ad60 <i2cIoHandler(str&, CharDev&, void*)+0x188>)
   1acbc:	4648      	mov	r0, r9
   1acbe:	f7fb ff9b 	bl	16bf8 <str::scanf(char const*, ...)>
   1acc2:	2803      	cmp	r0, #3
   1acc4:	d006      	beq.n	1acd4 <i2cIoHandler(str&, CharDev&, void*)+0xfc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:453
            output.putline("Need device, register address and data");
   1acc6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1acca:	4926      	ldr	r1, [pc, #152]	; (1ad64 <i2cIoHandler(str&, CharDev&, void*)+0x18c>)
   1accc:	4620      	mov	r0, r4
   1acce:	f7fd f86d 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:454
            return false;
   1acd2:	e7af      	b.n	1ac34 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:457
        if (I2C2::getInstance().writeReg(addr, reg, data)) {
   1acd4:	f7ff fe9c 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1acd8:	f898 3000 	ldrb.w	r3, [r8]
   1acdc:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1ace0:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1ace4:	f7fc fd81 	bl	177ea <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>
   1ace8:	b150      	cbz	r0, 1ad00 <i2cIoHandler(str&, CharDev&, void*)+0x128>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:458
            output.printf("Wrote %#2X to %#2X::%#2X\n", data, addr, reg);
   1acea:	9b03      	ldr	r3, [sp, #12]
   1acec:	491e      	ldr	r1, [pc, #120]	; (1ad68 <i2cIoHandler(str&, CharDev&, void*)+0x190>)
   1acee:	9300      	str	r3, [sp, #0]
   1acf0:	f8d8 2000 	ldr.w	r2, [r8]
   1acf4:	9b02      	ldr	r3, [sp, #8]
   1acf6:	4620      	mov	r0, r4
   1acf8:	f7fd f88e 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:472
    return (read || write || discover);
   1acfc:	465f      	mov	r7, fp
   1acfe:	e799      	b.n	1ac34 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:461
            output.printf("Error writing to device %#x\n", addr);
   1ad00:	9a02      	ldr	r2, [sp, #8]
   1ad02:	491a      	ldr	r1, [pc, #104]	; (1ad6c <i2cIoHandler(str&, CharDev&, void*)+0x194>)
   1ad04:	4620      	mov	r0, r4
   1ad06:	f7fd f887 	bl	17e18 <CharDev::printf(char const*, ...)>
   1ad0a:	e7f7      	b.n	1acfc <i2cIoHandler(str&, CharDev&, void*)+0x124>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:464
    else if (discover) {
   1ad0c:	b1a8      	cbz	r0, 1ad3a <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1ad0e:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1ad10:	4d17      	ldr	r5, [pc, #92]	; (1ad70 <i2cIoHandler(str&, CharDev&, void*)+0x198>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465
        for (addr = 2; addr <= 254; addr += 2) {
   1ad12:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 1)
   1ad14:	9b02      	ldr	r3, [sp, #8]
   1ad16:	2bfe      	cmp	r3, #254	; 0xfe
   1ad18:	dc0f      	bgt.n	1ad3a <i2cIoHandler(str&, CharDev&, void*)+0x162>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:466
            if (I2C2::getInstance().checkDeviceResponse(addr)) {
   1ad1a:	f7ff fe79 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1ad1e:	f89d 1008 	ldrb.w	r1, [sp, #8]
   1ad22:	f7fc fd6d 	bl	17800 <I2C_Base::checkDeviceResponse(unsigned char)>
   1ad26:	b120      	cbz	r0, 1ad32 <i2cIoHandler(str&, CharDev&, void*)+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:467
                output.printf("I2C device responded to address %#4x\n", addr);
   1ad28:	9a02      	ldr	r2, [sp, #8]
   1ad2a:	4629      	mov	r1, r5
   1ad2c:	4620      	mov	r0, r4
   1ad2e:	f7fd f873 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:465 (discriminator 2)
        for (addr = 2; addr <= 254; addr += 2) {
   1ad32:	9b02      	ldr	r3, [sp, #8]
   1ad34:	3302      	adds	r3, #2
   1ad36:	9302      	str	r3, [sp, #8]
   1ad38:	e7ec      	b.n	1ad14 <i2cIoHandler(str&, CharDev&, void*)+0x13c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/handlers.cpp:424
    bool discover = cmdParams.beginsWithIgnoreCase("discover");
   1ad3a:	4657      	mov	r7, sl
   1ad3c:	e77a      	b.n	1ac34 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
   1ad3e:	bf00      	nop
   1ad40:	00027d25 	.word	0x00027d25
   1ad44:	00026f03 	.word	0x00026f03
   1ad48:	00026f09 	.word	0x00026f09
   1ad4c:	00026f12 	.word	0x00026f12
   1ad50:	00026f21 	.word	0x00026f21
   1ad54:	000271de 	.word	0x000271de
   1ad58:	000271e8 	.word	0x000271e8
   1ad5c:	00026f42 	.word	0x00026f42
   1ad60:	00026f76 	.word	0x00026f76
   1ad64:	00026f86 	.word	0x00026f86
   1ad68:	00026fad 	.word	0x00026fad
   1ad6c:	00026fc7 	.word	0x00026fc7
   1ad70:	00026fe4 	.word	0x00026fe4
   1ad74:	00026f66 	.word	0x00026f66

0001ad78 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:14



#if MESH_USE_STATISTICS
static void wirelessHandlerPrintStats(CharDev& output, mesh_stats_t *s, uint8_t node)
{
   1ad78:	b530      	push	{r4, r5, lr}
   1ad7a:	460c      	mov	r4, r1
   1ad7c:	4605      	mov	r5, r0
   1ad7e:	b087      	sub	sp, #28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:15
    output.printf("N%u: Rx/Tx, Rte/Ovt, Retried/Mesh Retried/Repeated: \n", node);
   1ad80:	490a      	ldr	r1, [pc, #40]	; (1adac <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x34>)
   1ad82:	f7fd f849 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1ad86:	88a1      	ldrh	r1, [r4, #4]
   1ad88:	8823      	ldrh	r3, [r4, #0]
   1ad8a:	9104      	str	r1, [sp, #16]
   1ad8c:	8921      	ldrh	r1, [r4, #8]
   1ad8e:	8862      	ldrh	r2, [r4, #2]
   1ad90:	9103      	str	r1, [sp, #12]
   1ad92:	88e1      	ldrh	r1, [r4, #6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_intercepted, s->pkts_sent,
                    s->rte_entries, s->rte_overwritten,
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1ad94:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:16
    output.printf("    %3u/%-3u %u/%u, %u/%u/%u\n",
   1ad96:	9102      	str	r1, [sp, #8]
   1ad98:	7ae1      	ldrb	r1, [r4, #11]
   1ad9a:	9101      	str	r1, [sp, #4]
   1ad9c:	7aa1      	ldrb	r1, [r4, #10]
   1ad9e:	9100      	str	r1, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:19
                    s->pkts_retried, s->pkts_retried_others, s->pkts_repeated);
   1ada0:	4903      	ldr	r1, [pc, #12]	; (1adb0 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x38>)
   1ada2:	f7fd f839 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:20
}
   1ada6:	b007      	add	sp, #28
   1ada8:	bd30      	pop	{r4, r5, pc}
   1adaa:	bf00      	nop
   1adac:	00027a44 	.word	0x00027a44
   1adb0:	00027a7a 	.word	0x00027a7a

0001adb4 <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
    return true;
}

#if MESH_USE_STATISTICS
static CMD_HANDLER_FUNC(wsStatsHandler)
{
   1adb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1adb6:	a801      	add	r0, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:246
{
   1adb8:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:247
    mesh_stats_t stats = mesh_get_stats();
   1adba:	f7f6 fe93 	bl	11ae4 <mesh_get_stats>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:248
    wirelessHandlerPrintStats(output, &stats, mesh_get_node_address());
   1adbe:	f7f6 fb77 	bl	114b0 <mesh_get_node_address>
   1adc2:	a901      	add	r1, sp, #4
   1adc4:	4602      	mov	r2, r0
   1adc6:	4620      	mov	r0, r4
   1adc8:	f7ff ffd6 	bl	1ad78 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:250
    return true;
}
   1adcc:	2001      	movs	r0, #1
   1adce:	b004      	add	sp, #16
   1add0:	bd10      	pop	{r4, pc}
   1add2:	Address 0x000000000001add2 is out of bounds.


0001add4 <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
#endif

static CMD_HANDLER_FUNC(wsTxHandler)
{
   1add4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1add8:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1adda:	b08c      	sub	sp, #48	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    mesh_packet_t pkt;
    #if MESH_USE_STATISTICS
    mesh_stats_t stats = { 0 };
    #endif

    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1addc:	ab03      	add	r3, sp, #12
   1adde:	9300      	str	r3, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:254
{
   1ade0:	460d      	mov	r5, r1
   1ade2:	4690      	mov	r8, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1ade4:	ab02      	add	r3, sp, #8
   1ade6:	2202      	movs	r2, #2
   1ade8:	4938      	ldr	r1, [pc, #224]	; (1aecc <wsTxHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:255
    char *addr_str = NULL;
   1adea:	9602      	str	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:256
    char *data_str = NULL;
   1adec:	9603      	str	r6, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:266
    if (cmdParams.tokenize(" ", 2, &addr_str, &data_str) < 1) {
   1adee:	f7fb ff11 	bl	16c14 <str::tokenize(char const*, int, ...)>
   1adf2:	42b0      	cmp	r0, r6
   1adf4:	dd29      	ble.n	1ae4a <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:271
        return false;
    }

    /* Data is optional */
    const uint8_t dst_addr = atoi(addr_str);
   1adf6:	9802      	ldr	r0, [sp, #8]
   1adf8:	f003 fd81 	bl	1e8fe <atoi>
   1adfc:	b2c7      	uxtb	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272
    const uint8_t len = data_str ? strlen(data_str) : 0;
   1adfe:	9803      	ldr	r0, [sp, #12]
   1ae00:	b108      	cbz	r0, 1ae06 <wsTxHandler(str&, CharDev&, void*)+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:272 (discriminator 1)
   1ae02:	f006 f8ed 	bl	20fe0 <strlen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276 (discriminator 4)

    // Flush any packets
    while (wireless_get_rx_pkt(&pkt, 0)) {
        output.putline("Discarded a stale wireless packet");
   1ae06:	4e32      	ldr	r6, [pc, #200]	; (1aed0 <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   1ae08:	b2c4      	uxtb	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1ae0a:	2100      	movs	r1, #0
   1ae0c:	a804      	add	r0, sp, #16
   1ae0e:	f7f6 f925 	bl	1105c <wireless_get_rx_pkt>
   1ae12:	b130      	cbz	r0, 1ae22 <wsTxHandler(str&, CharDev&, void*)+0x4e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:276
        output.putline("Discarded a stale wireless packet");
   1ae14:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ae18:	4631      	mov	r1, r6
   1ae1a:	4628      	mov	r0, r5
   1ae1c:	f7fc ffc6 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:275
    while (wireless_get_rx_pkt(&pkt, 0)) {
   1ae20:	e7f3      	b.n	1ae0a <wsTxHandler(str&, CharDev&, void*)+0x36>
wireless_send():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/wireless/wireless.h:59
   1ae22:	2302      	movs	r3, #2
   1ae24:	f118 0100 	adds.w	r1, r8, #0
   1ae28:	9300      	str	r3, [sp, #0]
   1ae2a:	9a03      	ldr	r2, [sp, #12]
   1ae2c:	4623      	mov	r3, r4
   1ae2e:	bf18      	it	ne
   1ae30:	2101      	movne	r1, #1
   1ae32:	4638      	mov	r0, r7
   1ae34:	f7f6 fc72 	bl	1171c <mesh_send>
_ZL11wsTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:280
        ;
    }

    if (! wireless_send(dst_addr, ack ? mesh_pkt_ack : mesh_pkt_nack, data_str, len, max_hops_to_use)) {
   1ae38:	4606      	mov	r6, r0
   1ae3a:	b950      	cbnz	r0, 1ae52 <wsTxHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:281
        output.putline("Error sending packet, check parameters!");
   1ae3c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ae40:	4924      	ldr	r1, [pc, #144]	; (1aed4 <wsTxHandler(str&, CharDev&, void*)+0x100>)
   1ae42:	4628      	mov	r0, r5
   1ae44:	f7fc ffb2 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:312
        else {
            output.printf("Packet sent to %s but no ACK received", addr_str);
        }
    }

    return true;
   1ae48:	2601      	movs	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:313
}
   1ae4a:	4630      	mov	r0, r6
   1ae4c:	b00c      	add	sp, #48	; 0x30
   1ae4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:284
    else if (ack)
   1ae52:	f1b8 0f00 	cmp.w	r8, #0
   1ae56:	d0f8      	beq.n	1ae4a <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286
        if(wireless_get_ack_pkt(&pkt, timeout_ms) && dst_addr == pkt.nwk.src)
   1ae58:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   1ae5c:	a804      	add	r0, sp, #16
   1ae5e:	f7f6 f905 	bl	1106c <wireless_get_ack_pkt>
   1ae62:	b360      	cbz	r0, 1aebe <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:286 (discriminator 1)
   1ae64:	f89d 3010 	ldrb.w	r3, [sp, #16]
   1ae68:	42bb      	cmp	r3, r7
   1ae6a:	d128      	bne.n	1aebe <wsTxHandler(str&, CharDev&, void*)+0xea>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:289
            if (sizeof(stats) == pkt.info.data_len) {
   1ae6c:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1ae70:	2b0c      	cmp	r3, #12
   1ae72:	d104      	bne.n	1ae7e <wsTxHandler(str&, CharDev&, void*)+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:291
                wirelessHandlerPrintStats(output, p, pkt.nwk.src);
   1ae74:	463a      	mov	r2, r7
   1ae76:	a906      	add	r1, sp, #24
   1ae78:	4628      	mov	r0, r5
   1ae7a:	f7ff ff7d 	bl	1ad78 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:296
            if (0 == len) {
   1ae7e:	b9bc      	cbnz	r4, 1aeb0 <wsTxHandler(str&, CharDev&, void*)+0xdc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:297
                output.printf("Remote node name: '");
   1ae80:	4915      	ldr	r1, [pc, #84]	; (1aed8 <wsTxHandler(str&, CharDev&, void*)+0x104>)
   1ae82:	4628      	mov	r0, r5
   1ae84:	f7fc ffc8 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 3)
                for (int i=0; i<pkt.info.data_len; i++) {
   1ae88:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1ae8c:	429c      	cmp	r4, r3
   1ae8e:	da0a      	bge.n	1aea6 <wsTxHandler(str&, CharDev&, void*)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:299 (discriminator 2)
                    output.putChar(pkt.data[i]);
   1ae90:	ab04      	add	r3, sp, #16
   1ae92:	1919      	adds	r1, r3, r4
   1ae94:	682b      	ldr	r3, [r5, #0]
   1ae96:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ae9a:	685b      	ldr	r3, [r3, #4]
   1ae9c:	7a09      	ldrb	r1, [r1, #8]
   1ae9e:	4628      	mov	r0, r5
   1aea0:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:298 (discriminator 2)
                for (int i=0; i<pkt.info.data_len; i++) {
   1aea2:	3401      	adds	r4, #1
   1aea4:	e7f0      	b.n	1ae88 <wsTxHandler(str&, CharDev&, void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:301
                output.printf("'\n");
   1aea6:	490d      	ldr	r1, [pc, #52]	; (1aedc <wsTxHandler(str&, CharDev&, void*)+0x108>)
   1aea8:	4628      	mov	r0, r5
   1aeaa:	f7fc ffb5 	bl	17e18 <CharDev::printf(char const*, ...)>
   1aeae:	e7cc      	b.n	1ae4a <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:304
                output.putline("Received the acknowledgment!");
   1aeb0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aeb4:	490a      	ldr	r1, [pc, #40]	; (1aee0 <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   1aeb6:	4628      	mov	r0, r5
   1aeb8:	f7fc ff78 	bl	17dac <CharDev::putline(char const*, unsigned int)>
   1aebc:	e7c5      	b.n	1ae4a <wsTxHandler(str&, CharDev&, void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:308
            output.printf("Packet sent to %s but no ACK received", addr_str);
   1aebe:	9a02      	ldr	r2, [sp, #8]
   1aec0:	4908      	ldr	r1, [pc, #32]	; (1aee4 <wsTxHandler(str&, CharDev&, void*)+0x110>)
   1aec2:	4628      	mov	r0, r5
   1aec4:	f7fc ffa8 	bl	17e18 <CharDev::printf(char const*, ...)>
   1aec8:	e7bf      	b.n	1ae4a <wsTxHandler(str&, CharDev&, void*)+0x76>
   1aeca:	bf00      	nop
   1aecc:	00027beb 	.word	0x00027beb
   1aed0:	00027751 	.word	0x00027751
   1aed4:	00027773 	.word	0x00027773
   1aed8:	0002779b 	.word	0x0002779b
   1aedc:	0002846c 	.word	0x0002846c
   1aee0:	000277af 	.word	0x000277af
   1aee4:	000277cc 	.word	0x000277cc

0001aee8 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:213
{
   1aee8:	b538      	push	{r3, r4, r5, lr}
   1aeea:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:214
    int addr = (int) cmdParams;
   1aeec:	f7fc f80f 	bl	16f0e <str::operator int() const>
   1aef0:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:215
    output.printf("Set address to %i: %s\n", addr, mesh_set_node_address(addr) ? "OK" : "FAILED");
   1aef2:	b2c0      	uxtb	r0, r0
   1aef4:	f7f6 fad0 	bl	11498 <mesh_set_node_address>
   1aef8:	4a05      	ldr	r2, [pc, #20]	; (1af10 <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   1aefa:	4b06      	ldr	r3, [pc, #24]	; (1af14 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   1aefc:	4906      	ldr	r1, [pc, #24]	; (1af18 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   1aefe:	2800      	cmp	r0, #0
   1af00:	bf18      	it	ne
   1af02:	4613      	movne	r3, r2
   1af04:	4622      	mov	r2, r4
   1af06:	4628      	mov	r0, r5
   1af08:	f7fc ff86 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:217
}
   1af0c:	2001      	movs	r0, #1
   1af0e:	bd38      	pop	{r3, r4, r5, pc}
   1af10:	000271de 	.word	0x000271de
   1af14:	000277f2 	.word	0x000277f2
   1af18:	000277f9 	.word	0x000277f9

0001af1c <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:220
{
   1af1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1af1e:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:222
    const int routes = mesh_get_num_routing_entries();
   1af20:	f7f6 fc3e 	bl	117a0 <mesh_get_num_routing_entries>
   1af24:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:224
    output.printf(line);
   1af26:	4916      	ldr	r1, [pc, #88]	; (1af80 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1af28:	4620      	mov	r0, r4
   1af2a:	f7fc ff75 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:225
    output.printf("Routing table size is %i\n", routes);
   1af2e:	4915      	ldr	r1, [pc, #84]	; (1af84 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   1af30:	462a      	mov	r2, r5
   1af32:	4620      	mov	r0, r4
   1af34:	f7fc ff70 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:226
    output.printf(line);
   1af38:	4911      	ldr	r1, [pc, #68]	; (1af80 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1af3a:	4620      	mov	r0, r4
   1af3c:	f7fc ff6c 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:228
    if (routes > 0)
   1af40:	b1dd      	cbz	r5, 1af7a <wsRteHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:230
        output.printf("| DST | Next HOP | HOPS |\n");
   1af42:	4911      	ldr	r1, [pc, #68]	; (1af88 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   1af44:	4620      	mov	r0, r4
   1af46:	f7fc ff67 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:231
        output.printf(line);
   1af4a:	490d      	ldr	r1, [pc, #52]	; (1af80 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1af4c:	4620      	mov	r0, r4
   1af4e:	f7fc ff63 	bl	17e18 <CharDev::printf(char const*, ...)>
   1af52:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1af54:	4e0d      	ldr	r6, [pc, #52]	; (1af8c <wsRteHandler(str&, CharDev&, void*)+0x70>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:235
        while ((e = mesh_get_routing_entry(i++))) {
   1af56:	b2e8      	uxtb	r0, r5
   1af58:	f7f6 fc0c 	bl	11774 <mesh_get_routing_entry>
   1af5c:	3501      	adds	r5, #1
   1af5e:	b140      	cbz	r0, 1af72 <wsRteHandler(str&, CharDev&, void*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:236
            output.printf("| %3i |   %3i    | %3i  |\n", e->dst, e->next_hop, e->num_hops);
   1af60:	7881      	ldrb	r1, [r0, #2]
   1af62:	7843      	ldrb	r3, [r0, #1]
   1af64:	7802      	ldrb	r2, [r0, #0]
   1af66:	9100      	str	r1, [sp, #0]
   1af68:	4620      	mov	r0, r4
   1af6a:	4631      	mov	r1, r6
   1af6c:	f7fc ff54 	bl	17e18 <CharDev::printf(char const*, ...)>
   1af70:	e7f1      	b.n	1af56 <wsRteHandler(str&, CharDev&, void*)+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:238
        output.printf(line);
   1af72:	4903      	ldr	r1, [pc, #12]	; (1af80 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1af74:	4620      	mov	r0, r4
   1af76:	f7fc ff4f 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:242
}
   1af7a:	2001      	movs	r0, #1
   1af7c:	b002      	add	sp, #8
   1af7e:	bd70      	pop	{r4, r5, r6, pc}
   1af80:	00027521 	.word	0x00027521
   1af84:	0002753c 	.word	0x0002753c
   1af88:	00027556 	.word	0x00027556
   1af8c:	00027571 	.word	0x00027571

0001af90 <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1af90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1af94:	b5f0      	push	{r4, r5, r6, r7, lr}
   1af96:	b08b      	sub	sp, #44	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1af98:	aa0a      	add	r2, sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:189
{
   1af9a:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:191
    int timeout_ms = 1000;
   1af9c:	f842 3d24 	str.w	r3, [r2, #-36]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:194
    cmdParams.scanf("%i", &timeout_ms);
   1afa0:	4918      	ldr	r1, [pc, #96]	; (1b004 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   1afa2:	f7fb fe29 	bl	16bf8 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:190
    bool rx = false;
   1afa6:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1afa8:	4f17      	ldr	r7, [pc, #92]	; (1b008 <wsRxHandler(str&, CharDev&, void*)+0x78>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1afaa:	4e18      	ldr	r6, [pc, #96]	; (1b00c <wsRxHandler(str&, CharDev&, void*)+0x7c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1afac:	9901      	ldr	r1, [sp, #4]
   1afae:	a802      	add	r0, sp, #8
   1afb0:	f7f6 f854 	bl	1105c <wireless_get_rx_pkt>
   1afb4:	b1d8      	cbz	r0, 1afee <wsRxHandler(str&, CharDev&, void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:197
        output.printf("Received data from %i\n", pkt.nwk.src);
   1afb6:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1afba:	4639      	mov	r1, r7
   1afbc:	4620      	mov	r0, r4
   1afbe:	f7fc ff2b 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198
        for (int i = 0; i < pkt.info.data_len; i++) {
   1afc2:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 3)
   1afc4:	f89d 300f 	ldrb.w	r3, [sp, #15]
   1afc8:	429d      	cmp	r5, r3
   1afca:	da0a      	bge.n	1afe2 <wsRxHandler(str&, CharDev&, void*)+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:199 (discriminator 2)
            output.putChar(pkt.data[i]);
   1afcc:	ab02      	add	r3, sp, #8
   1afce:	1959      	adds	r1, r3, r5
   1afd0:	6823      	ldr	r3, [r4, #0]
   1afd2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1afd6:	685b      	ldr	r3, [r3, #4]
   1afd8:	7a09      	ldrb	r1, [r1, #8]
   1afda:	4620      	mov	r0, r4
   1afdc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:198 (discriminator 2)
        for (int i = 0; i < pkt.info.data_len; i++) {
   1afde:	3501      	adds	r5, #1
   1afe0:	e7f0      	b.n	1afc4 <wsRxHandler(str&, CharDev&, void*)+0x34>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:201
        output.printf("\n");
   1afe2:	4631      	mov	r1, r6
   1afe4:	4620      	mov	r0, r4
   1afe6:	f7fc ff17 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:202
        rx = true;
   1afea:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:196
    while (wireless_get_rx_pkt(&pkt, timeout_ms)) {
   1afec:	e7de      	b.n	1afac <wsRxHandler(str&, CharDev&, void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:205
    if (!rx) {
   1afee:	b92d      	cbnz	r5, 1affc <wsRxHandler(str&, CharDev&, void*)+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:206
        output.putline("No data received");
   1aff0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1aff4:	4906      	ldr	r1, [pc, #24]	; (1b010 <wsRxHandler(str&, CharDev&, void*)+0x80>)
   1aff6:	4620      	mov	r0, r4
   1aff8:	f7fc fed8 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:210
}
   1affc:	2001      	movs	r0, #1
   1affe:	b00b      	add	sp, #44	; 0x2c
   1b000:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b002:	bf00      	nop
   1b004:	00027ad3 	.word	0x00027ad3
   1b008:	00027729 	.word	0x00027729
   1b00c:	00027b83 	.word	0x00027b83
   1b010:	00027740 	.word	0x00027740

0001b014 <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316

CMD_HANDLER_FUNC(wirelessHandler)
{
   1b014:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    static CommandProcessor *pCmdProcessor = NULL;
    if (NULL == pCmdProcessor)
   1b018:	4c3c      	ldr	r4, [pc, #240]	; (1b10c <wirelessHandler(str&, CharDev&, void*)+0xf8>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1b01a:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1b01c:	6826      	ldr	r6, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:316
{
   1b01e:	4689      	mov	r9, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:318
    if (NULL == pCmdProcessor)
   1b020:	2e00      	cmp	r6, #0
   1b022:	d162      	bne.n	1b0ea <wirelessHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
    {
        pCmdProcessor = new CommandProcessor(8);
   1b024:	2024      	movs	r0, #36	; 0x24
   1b026:	f7fc f861 	bl	170ec <operator new(unsigned int)>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1b02a:	2304      	movs	r3, #4
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
   1b02c:	4605      	mov	r5, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1b02e:	e880 0048 	stmia.w	r0, {r3, r6}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1b032:	6086      	str	r6, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1b034:	60c6      	str	r6, [r0, #12]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b036:	2120      	movs	r1, #32
   1b038:	4630      	mov	r0, r6
   1b03a:	f005 fcd5 	bl	209e8 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b03e:	68ae      	ldr	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b040:	60e8      	str	r0, [r5, #12]
   1b042:	ea4f 0886 	mov.w	r8, r6, lsl #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b046:	2e07      	cmp	r6, #7
   1b048:	d80e      	bhi.n	1b068 <wirelessHandler(str&, CharDev&, void*)+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b04a:	2010      	movs	r0, #16
   1b04c:	f7fc f84e 	bl	170ec <operator new(unsigned int)>
   1b050:	4682      	mov	sl, r0
   1b052:	2210      	movs	r2, #16
   1b054:	2100      	movs	r1, #0
   1b056:	f004 fa3d 	bl	1f4d4 <memset>
   1b05a:	68eb      	ldr	r3, [r5, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b05c:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b05e:	f843 a008 	str.w	sl, [r3, r8]
   1b062:	f108 0804 	add.w	r8, r8, #4
   1b066:	e7ee      	b.n	1b046 <wirelessHandler(str&, CharDev&, void*)+0x32>
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1b068:	2600      	movs	r6, #0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1b06a:	2308      	movs	r3, #8
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
         * Constructor
         * @param numCmds Optional: Initial list of vector size to avoid memory re-allocation
         * @note addHandler() will grow the vector of command handlers if more commands are added later
         */
        CommandProcessor(int numCmds=8) :
            mCmdHandlerVector(numCmds), mEnShortCmds(true)
   1b06c:	f04f 0801 	mov.w	r8, #1
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
   1b070:	606b      	str	r3, [r5, #4]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
   1b072:	4a27      	ldr	r2, [pc, #156]	; (1b110 <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   1b074:	4b27      	ldr	r3, [pc, #156]	; (1b114 <wirelessHandler(str&, CharDev&, void*)+0x100>)
   1b076:	4928      	ldr	r1, [pc, #160]	; (1b118 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   1b078:	4628      	mov	r0, r5
   1b07a:	9600      	str	r6, [sp, #0]
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1b07c:	f885 8020 	strb.w	r8, [r5, #32]
_Z15wirelessHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:320
        pCmdProcessor = new CommandProcessor(8);
   1b080:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:321
        pCmdProcessor->addHandler(wsStreamHandler,  "stream",   "'stream <addr> <msg>' : Stream a command to another board");
   1b082:	f7fa fe8b 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:322
        pCmdProcessor->addHandler(wsFileTxHandler,  "transfer", "'transfer <src filename> <dst filename> <naddr>' : Transfer a file to another board");
   1b086:	4b25      	ldr	r3, [pc, #148]	; (1b11c <wirelessHandler(str&, CharDev&, void*)+0x108>)
   1b088:	4a25      	ldr	r2, [pc, #148]	; (1b120 <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   1b08a:	4926      	ldr	r1, [pc, #152]	; (1b124 <wirelessHandler(str&, CharDev&, void*)+0x110>)
   1b08c:	6820      	ldr	r0, [r4, #0]
   1b08e:	9600      	str	r6, [sp, #0]
   1b090:	f7fa fe84 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:323
        pCmdProcessor->addHandler(wsRxHandler,      "rx",       "'rx <time_ms>' : Poll for a packet");
   1b094:	4b24      	ldr	r3, [pc, #144]	; (1b128 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   1b096:	4a25      	ldr	r2, [pc, #148]	; (1b12c <wirelessHandler(str&, CharDev&, void*)+0x118>)
   1b098:	4925      	ldr	r1, [pc, #148]	; (1b130 <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   1b09a:	6820      	ldr	r0, [r4, #0]
   1b09c:	9600      	str	r6, [sp, #0]
   1b09e:	f7fa fe7d 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:324
        pCmdProcessor->addHandler(wsAddrHandler,    "addr",     "'addr <addr>   : Set the wireless address");
   1b0a2:	4b24      	ldr	r3, [pc, #144]	; (1b134 <wirelessHandler(str&, CharDev&, void*)+0x120>)
   1b0a4:	4a24      	ldr	r2, [pc, #144]	; (1b138 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   1b0a6:	4925      	ldr	r1, [pc, #148]	; (1b13c <wirelessHandler(str&, CharDev&, void*)+0x128>)
   1b0a8:	6820      	ldr	r0, [r4, #0]
   1b0aa:	9600      	str	r6, [sp, #0]
   1b0ac:	f7fa fe76 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:325
        pCmdProcessor->addHandler(wsRteHandler,     "routes",   "'routes' : See the wireless routes");
   1b0b0:	4b23      	ldr	r3, [pc, #140]	; (1b140 <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   1b0b2:	4a24      	ldr	r2, [pc, #144]	; (1b144 <wirelessHandler(str&, CharDev&, void*)+0x130>)
   1b0b4:	4924      	ldr	r1, [pc, #144]	; (1b148 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   1b0b6:	6820      	ldr	r0, [r4, #0]
   1b0b8:	9600      	str	r6, [sp, #0]
   1b0ba:	f7fa fe6f 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:329

        void *ack = (void*) 1;
        void *nack = 0;
        pCmdProcessor->addHandler(wsTxHandler,      "ack",  "'ack <addr> <data>'  : Send a packet and wait for acknowledgment", ack);
   1b0be:	4b23      	ldr	r3, [pc, #140]	; (1b14c <wirelessHandler(str&, CharDev&, void*)+0x138>)
   1b0c0:	4a23      	ldr	r2, [pc, #140]	; (1b150 <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   1b0c2:	4924      	ldr	r1, [pc, #144]	; (1b154 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1b0c4:	6820      	ldr	r0, [r4, #0]
   1b0c6:	f8cd 8000 	str.w	r8, [sp]
   1b0ca:	f7fa fe67 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:330
        pCmdProcessor->addHandler(wsTxHandler,      "nack", "'nack <addr> <data>' : Send a packet", nack);
   1b0ce:	4b22      	ldr	r3, [pc, #136]	; (1b158 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   1b0d0:	4a22      	ldr	r2, [pc, #136]	; (1b15c <wirelessHandler(str&, CharDev&, void*)+0x148>)
   1b0d2:	4920      	ldr	r1, [pc, #128]	; (1b154 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   1b0d4:	6820      	ldr	r0, [r4, #0]
   1b0d6:	9600      	str	r6, [sp, #0]
   1b0d8:	f7fa fe60 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:333

        #if MESH_USE_STATISTICS
        pCmdProcessor->addHandler(wsStatsHandler,   "stats", "'stats' : See the wireless stats");
   1b0dc:	9600      	str	r6, [sp, #0]
   1b0de:	4b20      	ldr	r3, [pc, #128]	; (1b160 <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1b0e0:	4a20      	ldr	r2, [pc, #128]	; (1b164 <wirelessHandler(str&, CharDev&, void*)+0x150>)
   1b0e2:	4921      	ldr	r1, [pc, #132]	; (1b168 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   1b0e4:	6820      	ldr	r0, [r4, #0]
   1b0e6:	f7fa fe59 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:338
        #endif
    }

    /* Display help for empty command */
    if (cmdParams == "") {
   1b0ea:	4920      	ldr	r1, [pc, #128]	; (1b16c <wirelessHandler(str&, CharDev&, void*)+0x158>)
   1b0ec:	4638      	mov	r0, r7
   1b0ee:	f7fb ff0a 	bl	16f06 <str::operator==(char const*) const>
   1b0f2:	b118      	cbz	r0, 1b0fc <wirelessHandler(str&, CharDev&, void*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:339
        cmdParams = "help";
   1b0f4:	491e      	ldr	r1, [pc, #120]	; (1b170 <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   1b0f6:	4638      	mov	r0, r7
   1b0f8:	f7fb ffc0 	bl	1707c <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    }

    return pCmdProcessor->handleCommand(cmdParams, output);
   1b0fc:	464a      	mov	r2, r9
   1b0fe:	4639      	mov	r1, r7
   1b100:	6820      	ldr	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:343
}
   1b102:	b002      	add	sp, #8
   1b104:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:342
    return pCmdProcessor->handleCommand(cmdParams, output);
   1b108:	f7fa bf2c 	b.w	15f64 <CommandProcessor::handleCommand(str&, CharDev&)>
   1b10c:	2007c780 	.word	0x2007c780
   1b110:	000275c6 	.word	0x000275c6
   1b114:	0002758c 	.word	0x0002758c
   1b118:	0001b3c1 	.word	0x0001b3c1
   1b11c:	000275cd 	.word	0x000275cd
   1b120:	00027621 	.word	0x00027621
   1b124:	0001b195 	.word	0x0001b195
   1b128:	0002762a 	.word	0x0002762a
   1b12c:	0002764d 	.word	0x0002764d
   1b130:	0001af91 	.word	0x0001af91
   1b134:	00027650 	.word	0x00027650
   1b138:	0002854c 	.word	0x0002854c
   1b13c:	0001aee9 	.word	0x0001aee9
   1b140:	0002767a 	.word	0x0002767a
   1b144:	00027696 	.word	0x00027696
   1b148:	0001af1d 	.word	0x0001af1d
   1b14c:	0002769d 	.word	0x0002769d
   1b150:	00027704 	.word	0x00027704
   1b154:	0001add5 	.word	0x0001add5
   1b158:	000276de 	.word	0x000276de
   1b15c:	00027703 	.word	0x00027703
   1b160:	00027708 	.word	0x00027708
   1b164:	00027723 	.word	0x00027723
   1b168:	0001adb5 	.word	0x0001adb5
   1b16c:	00027b84 	.word	0x00027b84
   1b170:	00026593 	.word	0x00026593

0001b174 <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1b174:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1b176:	4c06      	ldr	r4, [pc, #24]	; (1b190 <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   1b178:	6823      	ldr	r3, [r4, #0]
   1b17a:	b933      	cbnz	r3, 1b18a <SingletonTemplate<NordicStream>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1b17c:	2058      	movs	r0, #88	; 0x58
   1b17e:	f7fb ffb5 	bl	170ec <operator new(unsigned int)>
   1b182:	4605      	mov	r5, r0
   1b184:	f7fd f9aa 	bl	184dc <NordicStream::NordicStream()>
   1b188:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1b18a:	6820      	ldr	r0, [r4, #0]
   1b18c:	bd38      	pop	{r3, r4, r5, pc}
   1b18e:	bf00      	nop
   1b190:	2007c77c 	.word	0x2007c77c

0001b194 <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1b194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b198:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   1b19c:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1b19e:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1b1a0:	f10d 09b4 	add.w	r9, sp, #180	; 0xb4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:105
{
   1b1a4:	4688      	mov	r8, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:111
    char srcFile[128] = { 0 };
   1b1a6:	a80d      	add	r0, sp, #52	; 0x34
   1b1a8:	2100      	movs	r1, #0
   1b1aa:	f004 f993 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:112
    char dstFile[128] = { 0 };
   1b1ae:	2280      	movs	r2, #128	; 0x80
   1b1b0:	2100      	movs	r1, #0
   1b1b2:	4648      	mov	r0, r9
   1b1b4:	f004 f98e 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:114
    int addr = 0;
   1b1b8:	2300      	movs	r3, #0
   1b1ba:	ae06      	add	r6, sp, #24
   1b1bc:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:117
    if (3 != cmdParams.scanf("%128s %128s %i", &srcFile[0], &dstFile[0], &addr)) {
   1b1be:	aa0d      	add	r2, sp, #52	; 0x34
   1b1c0:	9600      	str	r6, [sp, #0]
   1b1c2:	464b      	mov	r3, r9
   1b1c4:	4974      	ldr	r1, [pc, #464]	; (1b398 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   1b1c6:	4620      	mov	r0, r4
   1b1c8:	f7fb fd16 	bl	16bf8 <str::scanf(char const*, ...)>
   1b1cc:	2803      	cmp	r0, #3
   1b1ce:	d004      	beq.n	1b1da <wsFileTxHandler(str&, CharDev&, void*)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:118
        return false;
   1b1d0:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:186
}
   1b1d2:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   1b1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:120
    if (FR_OK != f_open(&file, srcFile, FA_OPEN_EXISTING | FA_READ)) {
   1b1da:	2201      	movs	r2, #1
   1b1dc:	a90d      	add	r1, sp, #52	; 0x34
   1b1de:	a8ed      	add	r0, sp, #948	; 0x3b4
   1b1e0:	f7f7 fd16 	bl	12c10 <f_open>
   1b1e4:	4605      	mov	r5, r0
   1b1e6:	2800      	cmp	r0, #0
   1b1e8:	d1f2      	bne.n	1b1d0 <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1b1ea:	f7ff ffc3 	bl	1b174 <SingletonTemplate<NordicStream>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1b1ee:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b1f0:	2280      	movs	r2, #128	; 0x80
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:125
    n.setDestAddr(addr);
   1b1f2:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b1f6:	a94d      	add	r1, sp, #308	; 0x134
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:124
    NordicStream &n = NordicStream::getInstance();
   1b1f8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b1fa:	a808      	add	r0, sp, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:127
    char c = 0;
   1b1fc:	f88d 5017 	strb.w	r5, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:130
    unsigned int bytesRead = 0;
   1b200:	9507      	str	r5, [sp, #28]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b202:	f7fb fcc9 	bl	16b98 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:139
    output.printf("Transfer %s --> %i:%s\n", srcFile, addr, dstFile);
   1b206:	f8cd 9000 	str.w	r9, [sp]
   1b20a:	6833      	ldr	r3, [r6, #0]
   1b20c:	aa0d      	add	r2, sp, #52	; 0x34
   1b20e:	4963      	ldr	r1, [pc, #396]	; (1b39c <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   1b210:	4640      	mov	r0, r8
   1b212:	f7fc fe01 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:131
    unsigned int fileOffset = 0;
   1b216:	462f      	mov	r7, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140
    while(FR_OK == f_read(&file, buffer, sizeof(buffer), &bytesRead) && bytesRead > 0)
   1b218:	ab07      	add	r3, sp, #28
   1b21a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1b21e:	a96d      	add	r1, sp, #436	; 0x1b4
   1b220:	a8ed      	add	r0, sp, #948	; 0x3b4
   1b222:	f7f7 fd8c 	bl	12d3e <f_read>
   1b226:	2800      	cmp	r0, #0
   1b228:	f040 80ad 	bne.w	1b386 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:140 (discriminator 1)
   1b22c:	9b07      	ldr	r3, [sp, #28]
   1b22e:	2b00      	cmp	r3, #0
   1b230:	f000 80a9 	beq.w	1b386 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:143
        if (retries >= retriesMax) {
   1b234:	2d02      	cmp	r5, #2
   1b236:	f200 80a6 	bhi.w	1b386 <wsFileTxHandler(str&, CharDev&, void*)+0x1f2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:147
        n.printf("file buffer 0 %i\n", bytesRead);
   1b23a:	ae07      	add	r6, sp, #28
   1b23c:	6832      	ldr	r2, [r6, #0]
   1b23e:	4958      	ldr	r1, [pc, #352]	; (1b3a0 <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   1b240:	4620      	mov	r0, r4
   1b242:	f7fc fde9 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1b246:	6823      	ldr	r3, [r4, #0]
   1b248:	4620      	mov	r0, r4
   1b24a:	689b      	ldr	r3, [r3, #8]
   1b24c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:150
        expectedChecksum = 0;
   1b24e:	f04f 0a00 	mov.w	sl, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:148
        n.flush();
   1b252:	f50d 7bda 	add.w	fp, sp, #436	; 0x1b4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 3)
        for (unsigned int i=0; i < bytesRead; i++) {
   1b256:	ab6d      	add	r3, sp, #436	; 0x1b4
   1b258:	6832      	ldr	r2, [r6, #0]
   1b25a:	ebab 0303 	sub.w	r3, fp, r3
   1b25e:	429a      	cmp	r2, r3
   1b260:	6823      	ldr	r3, [r4, #0]
   1b262:	d90c      	bls.n	1b27e <wsFileTxHandler(str&, CharDev&, void*)+0xea>
   1b264:	f8cd b00c 	str.w	fp, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:152 (discriminator 2)
            n.putChar(buffer[i]);
   1b268:	685b      	ldr	r3, [r3, #4]
   1b26a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b26e:	f81b 1b01 	ldrb.w	r1, [fp], #1
   1b272:	4620      	mov	r0, r4
   1b274:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:153 (discriminator 2)
            expectedChecksum += buffer[i];
   1b276:	9b03      	ldr	r3, [sp, #12]
   1b278:	781b      	ldrb	r3, [r3, #0]
   1b27a:	449a      	add	sl, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:151 (discriminator 2)
        for (unsigned int i=0; i < bytesRead; i++) {
   1b27c:	e7eb      	b.n	1b256 <wsFileTxHandler(str&, CharDev&, void*)+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:155
        n.flush();
   1b27e:	689b      	ldr	r3, [r3, #8]
   1b280:	4620      	mov	r0, r4
   1b282:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:158
        n.gets((char*) response(), response.getCapacity(), timeout);
   1b284:	a808      	add	r0, sp, #32
   1b286:	f7fb fe40 	bl	16f0a <str::operator()() const>
   1b28a:	4683      	mov	fp, r0
   1b28c:	a808      	add	r0, sp, #32
   1b28e:	f7fb fcad 	bl	16bec <str::getCapacity() const>
   1b292:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1b296:	4602      	mov	r2, r0
   1b298:	4659      	mov	r1, fp
   1b29a:	4620      	mov	r0, r4
   1b29c:	f7fc fd94 	bl	17dc8 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:159
        response.eraseFirstWords(1);
   1b2a0:	2220      	movs	r2, #32
   1b2a2:	2101      	movs	r1, #1
   1b2a4:	eb0d 0002 	add.w	r0, sp, r2
   1b2a8:	f7fb fddb 	bl	16e62 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:160
        if ( (int)response != expectedChecksum) {
   1b2ac:	a808      	add	r0, sp, #32
   1b2ae:	f7fb fe2e 	bl	16f0e <str::operator int() const>
   1b2b2:	4582      	cmp	sl, r0
   1b2b4:	d01c      	beq.n	1b2f0 <wsFileTxHandler(str&, CharDev&, void*)+0x15c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:161
            output.printf("ERROR: Checksum Expected %i Actual %i\n", expectedChecksum, (int) response);
   1b2b6:	a808      	add	r0, sp, #32
   1b2b8:	f7fb fe29 	bl	16f0e <str::operator int() const>
   1b2bc:	4652      	mov	r2, sl
   1b2be:	4603      	mov	r3, r0
   1b2c0:	4938      	ldr	r1, [pc, #224]	; (1b3a4 <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   1b2c2:	4640      	mov	r0, r8
   1b2c4:	f7fc fda8 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162
            doRetry();
   1b2c8:	4937      	ldr	r1, [pc, #220]	; (1b3a8 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1b2ca:	4620      	mov	r0, r4
   1b2cc:	f7fc fda4 	bl	17e18 <CharDev::printf(char const*, ...)>
   1b2d0:	6823      	ldr	r3, [r4, #0]
   1b2d2:	4620      	mov	r0, r4
   1b2d4:	689b      	ldr	r3, [r3, #8]
   1b2d6:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:162 (discriminator 1)
   1b2d8:	6823      	ldr	r3, [r4, #0]
   1b2da:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b2de:	681b      	ldr	r3, [r3, #0]
   1b2e0:	f10d 0117 	add.w	r1, sp, #23
   1b2e4:	4620      	mov	r0, r4
   1b2e6:	4798      	blx	r3
   1b2e8:	2800      	cmp	r0, #0
   1b2ea:	d1f5      	bne.n	1b2d8 <wsFileTxHandler(str&, CharDev&, void*)+0x144>
   1b2ec:	3501      	adds	r5, #1
   1b2ee:	e7a1      	b.n	1b234 <wsFileTxHandler(str&, CharDev&, void*)+0xa0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:166
        n.printf("file commit %s %i %i\n", dstFile, fileOffset, bytesRead);
   1b2f0:	6833      	ldr	r3, [r6, #0]
   1b2f2:	464a      	mov	r2, r9
   1b2f4:	492d      	ldr	r1, [pc, #180]	; (1b3ac <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   1b2f6:	9300      	str	r3, [sp, #0]
   1b2f8:	4620      	mov	r0, r4
   1b2fa:	463b      	mov	r3, r7
   1b2fc:	f7fc fd8c 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:167
        n.flush();
   1b300:	6823      	ldr	r3, [r4, #0]
   1b302:	4620      	mov	r0, r4
   1b304:	689b      	ldr	r3, [r3, #8]
   1b306:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:168
        n.gets((char*) response(), response.getCapacity(), timeout);
   1b308:	a808      	add	r0, sp, #32
   1b30a:	f7fb fdfe 	bl	16f0a <str::operator()() const>
   1b30e:	4682      	mov	sl, r0
   1b310:	a808      	add	r0, sp, #32
   1b312:	f7fb fc6b 	bl	16bec <str::getCapacity() const>
   1b316:	4651      	mov	r1, sl
   1b318:	4602      	mov	r2, r0
   1b31a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1b31e:	4620      	mov	r0, r4
   1b320:	f7fc fd52 	bl	17dc8 <CharDev::gets(char*, int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:169
        if (!response.containsIgnoreCase("ok")) {
   1b324:	4922      	ldr	r1, [pc, #136]	; (1b3b0 <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   1b326:	a808      	add	r0, sp, #32
   1b328:	f7fb fcec 	bl	16d04 <str::containsIgnoreCase(char const*) const>
   1b32c:	b9d0      	cbnz	r0, 1b364 <wsFileTxHandler(str&, CharDev&, void*)+0x1d0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:170
            output.printf("ERROR: Remote node did not acknowledge file write (%s)\n", response());
   1b32e:	a808      	add	r0, sp, #32
   1b330:	f7fb fdeb 	bl	16f0a <str::operator()() const>
   1b334:	491f      	ldr	r1, [pc, #124]	; (1b3b4 <wsFileTxHandler(str&, CharDev&, void*)+0x220>)
   1b336:	4602      	mov	r2, r0
   1b338:	4640      	mov	r0, r8
   1b33a:	f7fc fd6d 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171
            doRetry();
   1b33e:	491a      	ldr	r1, [pc, #104]	; (1b3a8 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   1b340:	4620      	mov	r0, r4
   1b342:	f7fc fd69 	bl	17e18 <CharDev::printf(char const*, ...)>
   1b346:	6823      	ldr	r3, [r4, #0]
   1b348:	4620      	mov	r0, r4
   1b34a:	689b      	ldr	r3, [r3, #8]
   1b34c:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:171 (discriminator 1)
   1b34e:	6823      	ldr	r3, [r4, #0]
   1b350:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b354:	681b      	ldr	r3, [r3, #0]
   1b356:	f10d 0117 	add.w	r1, sp, #23
   1b35a:	4620      	mov	r0, r4
   1b35c:	4798      	blx	r3
   1b35e:	2800      	cmp	r0, #0
   1b360:	d1f5      	bne.n	1b34e <wsFileTxHandler(str&, CharDev&, void*)+0x1ba>
   1b362:	e7c3      	b.n	1b2ec <wsFileTxHandler(str&, CharDev&, void*)+0x158>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:174
        response = "";
   1b364:	4914      	ldr	r1, [pc, #80]	; (1b3b8 <wsFileTxHandler(str&, CharDev&, void*)+0x224>)
   1b366:	a808      	add	r0, sp, #32
   1b368:	f7fb fe88 	bl	1707c <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1b36c:	6833      	ldr	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1b36e:	4913      	ldr	r1, [pc, #76]	; (1b3bc <wsFileTxHandler(str&, CharDev&, void*)+0x228>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:175
        fileOffset += bytesRead;
   1b370:	441f      	add	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:176
        output.printf("Sent %i/%i\n", fileOffset, file.fsize);
   1b372:	463a      	mov	r2, r7
   1b374:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   1b376:	4640      	mov	r0, r8
   1b378:	f7fc fd4e 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:179
        if (retries > 0) {
   1b37c:	2d00      	cmp	r5, #0
   1b37e:	f43f af4b 	beq.w	1b218 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:180
            --retries;
   1b382:	3d01      	subs	r5, #1
   1b384:	e748      	b.n	1b218 <wsFileTxHandler(str&, CharDev&, void*)+0x84>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:184
    f_close(&file);
   1b386:	a8ed      	add	r0, sp, #948	; 0x3b4
   1b388:	f7f7 feac 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:134
    STR_ON_STACK(response, 128);
   1b38c:	a808      	add	r0, sp, #32
   1b38e:	f7fb fc17 	bl	16bc0 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:185
    return true;
   1b392:	2001      	movs	r0, #1
   1b394:	e71d      	b.n	1b1d2 <wsFileTxHandler(str&, CharDev&, void*)+0x3e>
   1b396:	bf00      	nop
   1b398:	00027810 	.word	0x00027810
   1b39c:	0002781f 	.word	0x0002781f
   1b3a0:	00027836 	.word	0x00027836
   1b3a4:	00027848 	.word	0x00027848
   1b3a8:	00027b83 	.word	0x00027b83
   1b3ac:	0002786f 	.word	0x0002786f
   1b3b0:	00027885 	.word	0x00027885
   1b3b4:	00027888 	.word	0x00027888
   1b3b8:	00027b84 	.word	0x00027b84
   1b3bc:	000278c0 	.word	0x000278c0

0001b3c0 <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1b3c4:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b3c6:	4607      	mov	r7, r0
   1b3c8:	b086      	sub	sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:27
    int addr = 0;
   1b3ca:	aa06      	add	r2, sp, #24
   1b3cc:	f842 4d0c 	str.w	r4, [r2, #-12]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:24
{
   1b3d0:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:28
    cmdParams.scanf("%i", &addr);
   1b3d2:	493d      	ldr	r1, [pc, #244]	; (1b4c8 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   1b3d4:	f7fb fc10 	bl	16bf8 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:29
    cmdParams.eraseFirstWords(1);
   1b3d8:	2220      	movs	r2, #32
   1b3da:	2101      	movs	r1, #1
   1b3dc:	4638      	mov	r0, r7
   1b3de:	f7fb fd40 	bl	16e62 <str::eraseFirstWords(int, char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31
    if (0 == addr || 0 == cmdParams.getLen())
   1b3e2:	9b03      	ldr	r3, [sp, #12]
   1b3e4:	2b00      	cmp	r3, #0
   1b3e6:	d068      	beq.n	1b4ba <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:31 (discriminator 2)
   1b3e8:	4638      	mov	r0, r7
   1b3ea:	f7fb fbfc 	bl	16be6 <str::getLen() const>
   1b3ee:	2800      	cmp	r0, #0
   1b3f0:	d063      	beq.n	1b4ba <wsStreamHandler(str&, CharDev&, void*)+0xfa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:38
        NordicStream &n = NordicStream::getInstance();
   1b3f2:	f7ff febf 	bl	1b174 <SingletonTemplate<NordicStream>::getInstance()>
   1b3f6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:41
        char c = 0;
   1b3f8:	f10d 0818 	add.w	r8, sp, #24
   1b3fc:	f808 4d0d 	strb.w	r4, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:42
        while (n.getChar(&c, 5)) {
   1b400:	682b      	ldr	r3, [r5, #0]
   1b402:	2205      	movs	r2, #5
   1b404:	681b      	ldr	r3, [r3, #0]
   1b406:	4641      	mov	r1, r8
   1b408:	4628      	mov	r0, r5
   1b40a:	4798      	blx	r3
   1b40c:	4604      	mov	r4, r0
   1b40e:	2800      	cmp	r0, #0
   1b410:	d1f6      	bne.n	1b400 <wsStreamHandler(str&, CharDev&, void*)+0x40>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1b412:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b414:	4638      	mov	r0, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:45
        n.setDestAddr(addr);
   1b416:	f885 3053 	strb.w	r3, [r5, #83]	; 0x53
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b41a:	f7fb fd76 	bl	16f0a <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:52
        int count = 0;
   1b41e:	4627      	mov	r7, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:46
        n.putline(cmdParams());
   1b420:	4601      	mov	r1, r0
   1b422:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b426:	4628      	mov	r0, r5
   1b428:	f7fc fcc0 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:47
        n.flush();
   1b42c:	682b      	ldr	r3, [r5, #0]
   1b42e:	4628      	mov	r0, r5
   1b430:	689b      	ldr	r3, [r3, #8]
   1b432:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b434:	4b25      	ldr	r3, [pc, #148]	; (1b4cc <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1b436:	f10d 0918 	add.w	r9, sp, #24
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b43a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:51
        char lastChars[sizeof(endOfTx)] = { 0 };
   1b43c:	f849 4d04 	str.w	r4, [r9, #-4]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:50
        const char endOfTx[] = TERMINAL_END_CHARS;
   1b440:	9004      	str	r0, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:68
        while (n.getChar(&c, timeout_ms))
   1b442:	682b      	ldr	r3, [r5, #0]
   1b444:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b448:	681b      	ldr	r3, [r3, #0]
   1b44a:	4641      	mov	r1, r8
   1b44c:	4628      	mov	r0, r5
   1b44e:	4798      	blx	r3
   1b450:	b1d0      	cbz	r0, 1b488 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:75
            memmove(&lastChars[0], &lastChars[1], sizeof(endOfTx) - 1);
   1b452:	2203      	movs	r2, #3
   1b454:	f10d 0115 	add.w	r1, sp, #21
   1b458:	4648      	mov	r0, r9
   1b45a:	f004 f821 	bl	1f4a0 <memmove>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1b45e:	f89d a00b 	ldrb.w	sl, [sp, #11]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1b462:	2204      	movs	r2, #4
   1b464:	a904      	add	r1, sp, #16
   1b466:	4648      	mov	r0, r9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:76
            lastChars[sizeof(endOfTx) - 1] = c;
   1b468:	f88d a017 	strb.w	sl, [sp, #23]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:77
            if (0 == memcmp(&lastChars[0], &endOfTx[0], sizeof(endOfTx))) {
   1b46c:	f003 fffe 	bl	1f46c <memcmp>
   1b470:	b150      	cbz	r0, 1b488 <wsStreamHandler(str&, CharDev&, void*)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1b472:	6833      	ldr	r3, [r6, #0]
   1b474:	2201      	movs	r2, #1
   1b476:	685b      	ldr	r3, [r3, #4]
   1b478:	4651      	mov	r1, sl
   1b47a:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:81
            ++count;
   1b47c:	3701      	adds	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:82
            if (!output.putChar(c, outBlockTime)) {
   1b47e:	4798      	blx	r3
   1b480:	2800      	cmp	r0, #0
   1b482:	d1de      	bne.n	1b442 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:83
                dropped++;
   1b484:	3401      	adds	r4, #1
   1b486:	e7dc      	b.n	1b442 <wsStreamHandler(str&, CharDev&, void*)+0x82>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:87
        int pkts = count / MESH_DATA_PAYLOAD_SIZE;
   1b488:	2218      	movs	r2, #24
   1b48a:	fbb7 f3f2 	udiv	r3, r7, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:88
        if (0 != (count % MESH_DATA_PAYLOAD_SIZE)) {
   1b48e:	fb02 7213 	mls	r2, r2, r3, r7
   1b492:	b102      	cbz	r2, 1b496 <wsStreamHandler(str&, CharDev&, void*)+0xd6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:89
            pkts++;
   1b494:	3301      	adds	r3, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:92
        output.printf("    Received %i bytes over %i packets\n", count, pkts);
   1b496:	463a      	mov	r2, r7
   1b498:	490d      	ldr	r1, [pc, #52]	; (1b4d0 <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   1b49a:	4630      	mov	r0, r6
   1b49c:	f7fc fcbc 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:93
        if (dropped > 0) {
   1b4a0:	b13c      	cbz	r4, 1b4b2 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:97
                            dropped, __FILE__, __LINE__);
   1b4a2:	2361      	movs	r3, #97	; 0x61
   1b4a4:	4622      	mov	r2, r4
   1b4a6:	9300      	str	r3, [sp, #0]
   1b4a8:	490a      	ldr	r1, [pc, #40]	; (1b4d4 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   1b4aa:	4b0b      	ldr	r3, [pc, #44]	; (1b4d8 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   1b4ac:	4630      	mov	r0, r6
   1b4ae:	f7fc fcb3 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:102
}
   1b4b2:	2001      	movs	r0, #1
   1b4b4:	b006      	add	sp, #24
   1b4b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:33
        output.putline("Parse error: try: 'stream <addr> <command>'");
   1b4ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b4be:	4907      	ldr	r1, [pc, #28]	; (1b4dc <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   1b4c0:	4630      	mov	r0, r6
   1b4c2:	f7fc fc73 	bl	17dac <CharDev::putline(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/wireless_handlers.cpp:101
    return true;
   1b4c6:	e7f4      	b.n	1b4b2 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   1b4c8:	00027ad3 	.word	0x00027ad3
   1b4cc:	0002751d 	.word	0x0002751d
   1b4d0:	000278cc 	.word	0x000278cc
   1b4d4:	0002795f 	.word	0x0002795f
   1b4d8:	000278f3 	.word	0x000278f3
   1b4dc:	00027a18 	.word	0x00027a18

0001b4e0 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:17
#include "chip_info.h"



CMD_HANDLER_FUNC(flashProgHandler)
{
   1b4e0:	b570      	push	{r4, r5, r6, lr}
   1b4e2:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   1b4e6:	4605      	mov	r5, r0
   1b4e8:	460c      	mov	r4, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:21
    FIL file;
    const int maxChars = 12;

    if (cmdParams.getLen() >= maxChars) {
   1b4ea:	f7fb fb7c 	bl	16be6 <str::getLen() const>
   1b4ee:	280b      	cmp	r0, #11
   1b4f0:	dd05      	ble.n	1b4fe <flashProgHandler(str&, CharDev&, void*)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:22
        output.printf("Filename should be less than %i chars\n", maxChars);
   1b4f2:	220c      	movs	r2, #12
   1b4f4:	4922      	ldr	r1, [pc, #136]	; (1b580 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        taskDISABLE_INTERRUPTS();
        chip_program_from_filename(cmdParams());
        sys_reboot();
    }
    else {
        output.printf("Unable to open '%s'\n", cmdParams());
   1b4f6:	4620      	mov	r0, r4
   1b4f8:	f7fc fc8e 	bl	17e18 <CharDev::printf(char const*, ...)>
   1b4fc:	e036      	b.n	1b56c <flashProgHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:24
    else if (FR_OK == f_open(&file, cmdParams(), FA_OPEN_EXISTING | FA_READ))
   1b4fe:	4628      	mov	r0, r5
   1b500:	f7fb fd03 	bl	16f0a <str::operator()() const>
   1b504:	2201      	movs	r2, #1
   1b506:	4601      	mov	r1, r0
   1b508:	a801      	add	r0, sp, #4
   1b50a:	f7f7 fb81 	bl	12c10 <f_open>
   1b50e:	4606      	mov	r6, r0
   1b510:	bb80      	cbnz	r0, 1b574 <flashProgHandler(str&, CharDev&, void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:26
        f_close(&file);
   1b512:	a801      	add	r0, sp, #4
   1b514:	f7f7 fde6 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:27
        output.printf("%s (%u bytes) will be programmed.\n"
   1b518:	4628      	mov	r0, r5
   1b51a:	f7fb fcf6 	bl	16f0a <str::operator()() const>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:29
                      cmdParams(), file.fsize);
   1b51e:	4919      	ldr	r1, [pc, #100]	; (1b584 <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   1b520:	4602      	mov	r2, r0
   1b522:	9b04      	ldr	r3, [sp, #16]
   1b524:	4620      	mov	r0, r4
   1b526:	f7fc fc77 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:32
        output.flush();
   1b52a:	6823      	ldr	r3, [r4, #0]
   1b52c:	4620      	mov	r0, r4
   1b52e:	689b      	ldr	r3, [r3, #8]
   1b530:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:33
        vTaskDelay(10);
   1b532:	200a      	movs	r0, #10
   1b534:	f7fe f942 	bl	197bc <vTaskDelay>
vPortRaiseBASEPRI():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:244
	);
   1b538:	f04f 0310 	mov.w	r3, #16
   1b53c:	f383 8811 	msr	BASEPRI, r3
   1b540:	f3bf 8f6f 	isb	sy
   1b544:	f3bf 8f4f 	dsb	sy
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:41
        chip_program_from_filename(cmdParams());
   1b548:	4628      	mov	r0, r5
   1b54a:	f7fb fcde 	bl	16f0a <str::operator()() const>
   1b54e:	4602      	mov	r2, r0
chip_program_from_filename():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    const uint32_t signature = 0xDEADD00D;      ///< Signature to write to command register
    volatile uint32_t *pCommandReg = &(LPC_RTC->GPREG0); ///< Image program "command" is stored here
    volatile uint32_t *pFilename   = &(LPC_RTC->GPREG1); ///< Null terminated image name (up to 12 chars)

    // Do not use strcpy(), it will not work!
    memcpy((void*) pFilename, filename, maxChars);
   1b550:	4b0d      	ldr	r3, [pc, #52]	; (1b588 <flashProgHandler(str&, CharDev&, void*)+0xa8>)
   1b552:	6800      	ldr	r0, [r0, #0]
   1b554:	6851      	ldr	r1, [r2, #4]
   1b556:	c303      	stmia	r3!, {r0, r1}
   1b558:	6890      	ldr	r0, [r2, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75

    // Setting the signature is the "command" to program from the filename upon next boot.
    *pCommandReg = signature;
   1b55a:	4a0c      	ldr	r2, [pc, #48]	; (1b58c <flashProgHandler(str&, CharDev&, void*)+0xac>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:72
    memcpy((void*) pFilename, filename, maxChars);
   1b55c:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:75
    *pCommandReg = signature;
   1b55e:	f843 2c0c 	str.w	r2, [r3, #-12]
sys_reboot():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   1b562:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1b566:	22aa      	movs	r2, #170	; 0xaa
   1b568:	721a      	strb	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   1b56a:	701e      	strb	r6, [r3, #0]
_Z16flashProgHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:48
    }
    return true;
}
   1b56c:	2001      	movs	r0, #1
   1b56e:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   1b572:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:45
        output.printf("Unable to open '%s'\n", cmdParams());
   1b574:	4628      	mov	r0, r5
   1b576:	f7fb fcc8 	bl	16f0a <str::operator()() const>
   1b57a:	4905      	ldr	r1, [pc, #20]	; (1b590 <flashProgHandler(str&, CharDev&, void*)+0xb0>)
   1b57c:	4602      	mov	r2, r0
   1b57e:	e7ba      	b.n	1b4f6 <flashProgHandler(str&, CharDev&, void*)+0x16>
   1b580:	00027b17 	.word	0x00027b17
   1b584:	00027b3e 	.word	0x00027b3e
   1b588:	40024048 	.word	0x40024048
   1b58c:	deadd00d 	.word	0xdeadd00d
   1b590:	00027b85 	.word	0x00027b85

0001b594 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51

CMD_HANDLER_FUNC(getFileHandler)
{
   1b594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    const int maxBufferSize = 1024;
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b598:	4c41      	ldr	r4, [pc, #260]	; (1b6a0 <getFileHandler(str&, CharDev&, void*)+0x10c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b59a:	b0a4      	sub	sp, #144	; 0x90
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b59c:	7823      	ldrb	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b59e:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b5a0:	07db      	lsls	r3, r3, #31
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:51
{
   1b5a2:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53
    static char *spBuffer = (char*) malloc(maxBufferSize);
   1b5a4:	f3bf 8f5b 	dmb	ish
   1b5a8:	d40c      	bmi.n	1b5c4 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 1)
   1b5aa:	4620      	mov	r0, r4
   1b5ac:	f002 f83d 	bl	1d62a <__cxa_guard_acquire>
   1b5b0:	b140      	cbz	r0, 1b5c4 <getFileHandler(str&, CharDev&, void*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:53 (discriminator 2)
   1b5b2:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1b5b6:	f003 ff29 	bl	1f40c <malloc>
   1b5ba:	4b3a      	ldr	r3, [pc, #232]	; (1b6a4 <getFileHandler(str&, CharDev&, void*)+0x110>)
   1b5bc:	6018      	str	r0, [r3, #0]
   1b5be:	4620      	mov	r0, r4
   1b5c0:	f002 f83f 	bl	1d642 <__cxa_guard_release>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:60
    /**
     * Packet format:
     * buffer <offset> <num bytes> ...
     * commit <filename> <file offset> <num bytes from buffer>
     */
    if (cmdParams.beginsWithIgnoreCase("commit"))
   1b5c4:	4938      	ldr	r1, [pc, #224]	; (1b6a8 <getFileHandler(str&, CharDev&, void*)+0x114>)
   1b5c6:	4630      	mov	r0, r6
   1b5c8:	f7fb fbc5 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   1b5cc:	4607      	mov	r7, r0
   1b5ce:	4604      	mov	r4, r0
   1b5d0:	b330      	cbz	r0, 1b620 <getFileHandler(str&, CharDev&, void*)+0x8c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:62
    {
        char filename[128] = { 0 };
   1b5d2:	2280      	movs	r2, #128	; 0x80
   1b5d4:	2100      	movs	r1, #0
   1b5d6:	a804      	add	r0, sp, #16
   1b5d8:	f003 ff7c 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:63
        int offset = 0;
   1b5dc:	2300      	movs	r3, #0
   1b5de:	9302      	str	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:64
        int size = 0;
   1b5e0:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:65
        cmdParams.scanf("%*s %128s %i %i", &filename[0], &offset, &size);
   1b5e2:	ab03      	add	r3, sp, #12
   1b5e4:	9300      	str	r3, [sp, #0]
   1b5e6:	aa04      	add	r2, sp, #16
   1b5e8:	ab02      	add	r3, sp, #8
   1b5ea:	4930      	ldr	r1, [pc, #192]	; (1b6ac <getFileHandler(str&, CharDev&, void*)+0x118>)
   1b5ec:	4630      	mov	r0, r6
   1b5ee:	f7fb fb03 	bl	16bf8 <str::scanf(char const*, ...)>
   1b5f2:	492c      	ldr	r1, [pc, #176]	; (1b6a4 <getFileHandler(str&, CharDev&, void*)+0x110>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68

        FRESULT writeStatus = FR_INT_ERR;
        if(0 == offset) {
   1b5f4:	9b02      	ldr	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1b5f6:	9a03      	ldr	r2, [sp, #12]
   1b5f8:	6809      	ldr	r1, [r1, #0]
   1b5fa:	a804      	add	r0, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:68
        if(0 == offset) {
   1b5fc:	b96b      	cbnz	r3, 1b61a <getFileHandler(str&, CharDev&, void*)+0x86>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:69
            writeStatus = Storage::write(filename, spBuffer, size);
   1b5fe:	f7f9 fba0 	bl	14d42 <Storage::write(char const*, void*, unsigned int, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:74
        }
        else {
            writeStatus = Storage::append(filename, spBuffer, size, offset);
        }
        output.printf(FR_OK == writeStatus ? "OK\n" : "File write error\n");
   1b602:	4b2b      	ldr	r3, [pc, #172]	; (1b6b0 <getFileHandler(str&, CharDev&, void*)+0x11c>)
   1b604:	492b      	ldr	r1, [pc, #172]	; (1b6b4 <getFileHandler(str&, CharDev&, void*)+0x120>)
   1b606:	2800      	cmp	r0, #0
   1b608:	bf18      	it	ne
   1b60a:	4619      	movne	r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
            return true;
        }

        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
            if(! output.getChar(&c, OS_MS(2000))) {
                output.printf("ERROR: TIMEOUT\n");
   1b60c:	4628      	mov	r0, r5
   1b60e:	f7fc fc03 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:107
    else {
        return false;
    }

    return true;
}
   1b612:	4638      	mov	r0, r7
   1b614:	b024      	add	sp, #144	; 0x90
   1b616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:72
            writeStatus = Storage::append(filename, spBuffer, size, offset);
   1b61a:	f7f9 fbb4 	bl	14d86 <Storage::append(char const*, void const*, unsigned int, unsigned int)>
   1b61e:	e7f0      	b.n	1b602 <getFileHandler(str&, CharDev&, void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:76
    else if (cmdParams.beginsWithIgnoreCase("buffer"))
   1b620:	4925      	ldr	r1, [pc, #148]	; (1b6b8 <getFileHandler(str&, CharDev&, void*)+0x124>)
   1b622:	4630      	mov	r0, r6
   1b624:	f7fb fb97 	bl	16d56 <str::beginsWithIgnoreCase(char const*) const>
   1b628:	4607      	mov	r7, r0
   1b62a:	2800      	cmp	r0, #0
   1b62c:	d0f1      	beq.n	1b612 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1b62e:	ab04      	add	r3, sp, #16
   1b630:	4630      	mov	r0, r6
   1b632:	aa03      	add	r2, sp, #12
   1b634:	4921      	ldr	r1, [pc, #132]	; (1b6bc <getFileHandler(str&, CharDev&, void*)+0x128>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:78
        int offset = 0;
   1b636:	9403      	str	r4, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:79
        int numBytes = 0;
   1b638:	9404      	str	r4, [sp, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:81
        char c = 0;
   1b63a:	f88d 4008 	strb.w	r4, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:83
        cmdParams.scanf("%*s %i %i", &offset, &numBytes);
   1b63e:	f7fb fadb 	bl	16bf8 <str::scanf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:85
        if (offset + numBytes > maxBufferSize) {
   1b642:	9e03      	ldr	r6, [sp, #12]
   1b644:	9b04      	ldr	r3, [sp, #16]
   1b646:	4433      	add	r3, r6
   1b648:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1b64c:	dc13      	bgt.n	1b676 <getFileHandler(str&, CharDev&, void*)+0xe2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 1)
            spBuffer[i] = c;
   1b64e:	f8df 8054 	ldr.w	r8, [pc, #84]	; 1b6a4 <getFileHandler(str&, CharDev&, void*)+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 1)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b652:	9b03      	ldr	r3, [sp, #12]
   1b654:	9a04      	ldr	r2, [sp, #16]
   1b656:	1af3      	subs	r3, r6, r3
   1b658:	4293      	cmp	r3, r2
   1b65a:	da1d      	bge.n	1b698 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 2)
   1b65c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
   1b660:	da1a      	bge.n	1b698 <getFileHandler(str&, CharDev&, void*)+0x104>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:91
            if(! output.getChar(&c, OS_MS(2000))) {
   1b662:	682b      	ldr	r3, [r5, #0]
   1b664:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   1b668:	681b      	ldr	r3, [r3, #0]
   1b66a:	a902      	add	r1, sp, #8
   1b66c:	4628      	mov	r0, r5
   1b66e:	4798      	blx	r3
   1b670:	b940      	cbnz	r0, 1b684 <getFileHandler(str&, CharDev&, void*)+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:92
                output.printf("ERROR: TIMEOUT\n");
   1b672:	4913      	ldr	r1, [pc, #76]	; (1b6c0 <getFileHandler(str&, CharDev&, void*)+0x12c>)
   1b674:	e7ca      	b.n	1b60c <getFileHandler(str&, CharDev&, void*)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:86
            output.printf("ERROR: Max buffer size is %i bytes\n", maxBufferSize);
   1b676:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1b67a:	4912      	ldr	r1, [pc, #72]	; (1b6c4 <getFileHandler(str&, CharDev&, void*)+0x130>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1b67c:	4628      	mov	r0, r5
   1b67e:	f7fc fbcb 	bl	17e18 <CharDev::printf(char const*, ...)>
   1b682:	e7c6      	b.n	1b612 <getFileHandler(str&, CharDev&, void*)+0x7e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:96 (discriminator 3)
            spBuffer[i] = c;
   1b684:	f8d8 3000 	ldr.w	r3, [r8]
   1b688:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1b68c:	559a      	strb	r2, [r3, r6]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1b68e:	f89d 3008 	ldrb.w	r3, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b692:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:97 (discriminator 3)
            checksum += c;
   1b694:	441c      	add	r4, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:90 (discriminator 3)
        for(int i=offset; i - offset < numBytes && i < maxBufferSize; i++) {
   1b696:	e7dc      	b.n	1b652 <getFileHandler(str&, CharDev&, void*)+0xbe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/cmd_handlers/prog_handlers.cpp:100
        output.printf("Checksum %i\n", checksum);
   1b698:	4622      	mov	r2, r4
   1b69a:	490b      	ldr	r1, [pc, #44]	; (1b6c8 <getFileHandler(str&, CharDev&, void*)+0x134>)
   1b69c:	e7ee      	b.n	1b67c <getFileHandler(str&, CharDev&, void*)+0xe8>
   1b69e:	bf00      	nop
   1b6a0:	2007c784 	.word	0x2007c784
   1b6a4:	2007c788 	.word	0x2007c788
   1b6a8:	00027aae 	.word	0x00027aae
   1b6ac:	00027ab5 	.word	0x00027ab5
   1b6b0:	00027a9c 	.word	0x00027a9c
   1b6b4:	00027a98 	.word	0x00027a98
   1b6b8:	00027ac5 	.word	0x00027ac5
   1b6bc:	00027acc 	.word	0x00027acc
   1b6c0:	00027afa 	.word	0x00027afa
   1b6c4:	00027ad6 	.word	0x00027ad6
   1b6c8:	00027b0a 	.word	0x00027b0a

0001b6cc <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
 * Terminal task is our UART0 terminal that handles our commands into the board.
 * This also saves and restores the "disk" telemetry.  Disk telemetry variables
 * are automatically saved and restored across power-cycles to help us preserve
 * any non-volatile information.
 */
class terminalTask : public scheduler_task
   1b6cc:	b538      	push	{r3, r4, r5, lr}
   1b6ce:	4604      	mov	r4, r0
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b6d0:	2500      	movs	r5, #0
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1b6d2:	4b10      	ldr	r3, [pc, #64]	; (1b714 <terminalTask::~terminalTask()+0x48>)
   1b6d4:	6003      	str	r3, [r0, #0]
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
   1b6d6:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1b6d8:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   1b6da:	42ab      	cmp	r3, r5
   1b6dc:	d906      	bls.n	1b6ec <terminalTask::~terminalTask()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1b6de:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1b6e2:	2110      	movs	r1, #16
   1b6e4:	f001 ff9f 	bl	1d626 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b6e8:	3501      	adds	r5, #1
   1b6ea:	e7f4      	b.n	1b6d6 <terminalTask::~terminalTask()+0xa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1b6ec:	b108      	cbz	r0, 1b6f2 <terminalTask::~terminalTask()+0x26>
   1b6ee:	f7fb fd03 	bl	170f8 <operator delete[](void*)>
_ZN6VECTORIN12terminalTask9cmdChan_tEED4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b6f2:	2500      	movs	r5, #0
   1b6f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b6f6:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1b6f8:	42ab      	cmp	r3, r5
   1b6fa:	d906      	bls.n	1b70a <terminalTask::~terminalTask()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:177
        delete mpObjPtrs[i];
   1b6fc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1b700:	210c      	movs	r1, #12
   1b702:	f001 ff90 	bl	1d626 <operator delete(void*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:176
    for(unsigned int i=0; i < mVectorCapacity; i++) {
   1b706:	3501      	adds	r5, #1
   1b708:	e7f4      	b.n	1b6f4 <terminalTask::~terminalTask()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:179
    delete [] mpObjPtrs;
   1b70a:	b108      	cbz	r0, 1b710 <terminalTask::~terminalTask()+0x44>
   1b70c:	f7fb fcf4 	bl	170f8 <operator delete[](void*)>
_ZN12terminalTaskD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/tasks.hpp:43
   1b710:	4620      	mov	r0, r4
   1b712:	bd38      	pop	{r3, r4, r5, pc}
   1b714:	00028360 	.word	0x00028360

0001b718 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   1b718:	b510      	push	{r4, lr}
   1b71a:	4604      	mov	r4, r0
   1b71c:	f7ff ffd6 	bl	1b6cc <terminalTask::~terminalTask()>
   1b720:	4620      	mov	r0, r4
   1b722:	2190      	movs	r1, #144	; 0x90
   1b724:	f001 ff7f 	bl	1d626 <operator delete(void*, unsigned int)>
   1b728:	4620      	mov	r0, r4
   1b72a:	bd10      	pop	{r4, pc}

0001b72c <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:59
{
    /* Nothing to do */
}

bool terminalTask::regTlm(void)
{
   1b72c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1b72e:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:61
    #if SYS_CFG_ENABLE_TLM
    return (TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mCommandCount, tlm_uint) &&
   1b730:	2402      	movs	r4, #2
   1b732:	2601      	movs	r6, #1
   1b734:	480c      	ldr	r0, [pc, #48]	; (1b768 <terminalTask::regTlm()+0x3c>)
   1b736:	f7f9 fe67 	bl	15408 <tlm_component_get_by_name>
   1b73a:	9401      	str	r4, [sp, #4]
   1b73c:	9600      	str	r6, [sp, #0]
   1b73e:	4623      	mov	r3, r4
   1b740:	f105 0274 	add.w	r2, r5, #116	; 0x74
   1b744:	4909      	ldr	r1, [pc, #36]	; (1b76c <terminalTask::regTlm()+0x40>)
   1b746:	f7f9 fed3 	bl	154f0 <tlm_variable_register>
   1b74a:	b150      	cbz	r0, 1b762 <terminalTask::regTlm()+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:62
            TLM_REG_VAR(tlm_component_get_by_name(SYS_CFG_DEBUG_TLM_NAME), mDiskTlmSize, tlm_uint));
   1b74c:	4806      	ldr	r0, [pc, #24]	; (1b768 <terminalTask::regTlm()+0x3c>)
   1b74e:	f7f9 fe5b 	bl	15408 <tlm_component_get_by_name>
   1b752:	9401      	str	r4, [sp, #4]
   1b754:	9600      	str	r6, [sp, #0]
   1b756:	4623      	mov	r3, r4
   1b758:	f105 0276 	add.w	r2, r5, #118	; 0x76
   1b75c:	4904      	ldr	r1, [pc, #16]	; (1b770 <terminalTask::regTlm()+0x44>)
   1b75e:	f7f9 fec7 	bl	154f0 <tlm_variable_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:66
    #else
    return true;
    #endif
}
   1b762:	b002      	add	sp, #8
   1b764:	bd70      	pop	{r4, r5, r6, pc}
   1b766:	bf00      	nop
   1b768:	00026984 	.word	0x00026984
   1b76c:	00027c09 	.word	0x00027c09
   1b770:	00027c17 	.word	0x00027c17

0001b774 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:416
void VECTOR<TYPE>::changeCapacity(unsigned int newSize)
   1b774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b778:	4604      	mov	r4, r0
   1b77a:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b77c:	68c0      	ldr	r0, [r0, #12]
   1b77e:	0089      	lsls	r1, r1, #2
   1b780:	f005 f932 	bl	209e8 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b784:	f04f 0800 	mov.w	r8, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b788:	68a5      	ldr	r5, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b78a:	60e0      	str	r0, [r4, #12]
   1b78c:	00af      	lsls	r7, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b78e:	42ae      	cmp	r6, r5
   1b790:	d90d      	bls.n	1b7ae <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x3a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b792:	200c      	movs	r0, #12
   1b794:	f7fb fcaa 	bl	170ec <operator new(unsigned int)>
   1b798:	68e3      	ldr	r3, [r4, #12]
   1b79a:	f8c0 8000 	str.w	r8, [r0]
   1b79e:	f8c0 8004 	str.w	r8, [r0, #4]
   1b7a2:	f880 8008 	strb.w	r8, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b7a6:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b7a8:	51d8      	str	r0, [r3, r7]
   1b7aa:	3704      	adds	r7, #4
   1b7ac:	e7ef      	b.n	1b78e <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1b7ae:	6066      	str	r6, [r4, #4]
   1b7b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b7b4 <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1b7b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1b7b6:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:48
terminalTask::terminalTask(uint8_t priority) :
   1b7b8:	4604      	mov	r4, r0
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1b7ba:	2604      	movs	r6, #4
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
        mCmdTimer(CMD_TIMEOUT_DISK_VARS)
   1b7bc:	460b      	mov	r3, r1
   1b7be:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   1b7c2:	9500      	str	r5, [sp, #0]
   1b7c4:	4924      	ldr	r1, [pc, #144]	; (1b858 <terminalTask::terminalTask(unsigned char)+0xa4>)
   1b7c6:	f7fa fe69 	bl	1649c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1b7ca:	4b24      	ldr	r3, [pc, #144]	; (1b85c <terminalTask::terminalTask(unsigned char)+0xa8>)
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
   1b7cc:	6366      	str	r6, [r4, #52]	; 0x34
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b7ce:	6023      	str	r3, [r4, #0]
_ZN6VECTORIN12terminalTask9cmdChan_tEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1b7d0:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1b7d2:	63e5      	str	r5, [r4, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1b7d4:	6425      	str	r5, [r4, #64]	; 0x40
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
   1b7d6:	2102      	movs	r1, #2
   1b7d8:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1b7dc:	f7ff ffca 	bl	1b774 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:114
        mGrowthRate = 4;
   1b7e0:	6526      	str	r6, [r4, #80]	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:115
        mVectorCapacity = 0;
   1b7e2:	6565      	str	r5, [r4, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:116
        mVectorSize = 0;
   1b7e4:	65a5      	str	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:117
        mpObjPtrs   = 0;
   1b7e6:	65e5      	str	r5, [r4, #92]	; 0x5c
_ZN6VECTORIN16CommandProcessor16CmdProcessorTypeEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b7e8:	4628      	mov	r0, r5
   1b7ea:	2160      	movs	r1, #96	; 0x60
   1b7ec:	f005 f8fc 	bl	209e8 <realloc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b7f0:	6da5      	ldr	r5, [r4, #88]	; 0x58
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:443
    mpObjPtrs = (TYPE**)realloc(mpObjPtrs, sizeof(TYPE*)*newSize);
   1b7f2:	65e0      	str	r0, [r4, #92]	; 0x5c
   1b7f4:	00ae      	lsls	r6, r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b7f6:	2d17      	cmp	r5, #23
   1b7f8:	d80c      	bhi.n	1b814 <terminalTask::terminalTask(unsigned char)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b7fa:	2010      	movs	r0, #16
   1b7fc:	f7fb fc76 	bl	170ec <operator new(unsigned int)>
   1b800:	4607      	mov	r7, r0
   1b802:	2210      	movs	r2, #16
   1b804:	2100      	movs	r1, #0
   1b806:	f003 fe65 	bl	1f4d4 <memset>
   1b80a:	6de3      	ldr	r3, [r4, #92]	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:446
    for(unsigned int i = mVectorSize; i < newSize; i++) {
   1b80c:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:447
        mpObjPtrs[i] = new TYPE();
   1b80e:	519f      	str	r7, [r3, r6]
   1b810:	3604      	adds	r6, #4
   1b812:	e7f0      	b.n	1b7f6 <terminalTask::terminalTask(unsigned char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:451
    mVectorCapacity = newSize;
   1b814:	2318      	movs	r3, #24
   1b816:	6563      	str	r3, [r4, #84]	; 0x54
_ZN16CommandProcessorC4Ei():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/command_handler.hpp:105
   1b818:	2301      	movs	r3, #1
   1b81a:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b81e:	2300      	movs	r3, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
    public:
        /// Default constructor
        SoftTimer() : mTargetMs(0), mIntervalMs(0) {}

        /// Constructor to set timer while instantiating this object.
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b820:	2200      	movs	r2, #0
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:53
   1b822:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
   1b826:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
   1b82a:	67a3      	str	r3, [r4, #120]	; 0x78
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77

        /**
         * Resets the timer from this point of time using the new timer value given.
         * @param ms  The milliseconds at which timer should expire next.
         */
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b82c:	2700      	movs	r7, #0
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b82e:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b830:	4e0b      	ldr	r6, [pc, #44]	; (1b860 <terminalTask::terminalTask(unsigned char)+0xac>)
_ZN9SoftTimerC4Em():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:50
        SoftTimer(uint32_t ms) : mTargetMs(0), mIntervalMs(0) { reset(ms); }
   1b832:	e9c4 2320 	strd	r2, r3, [r4, #128]	; 0x80
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
        inline void reset(uint64_t ms) { mIntervalMs = ms; mTargetMs = getCurrentTimeMs() + ms; }
   1b836:	e9c4 6722 	strd	r6, r7, [r4, #136]	; 0x88
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   1b83a:	f7f4 fe2f 	bl	1049c <sys_get_uptime_us>
   1b83e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b842:	2300      	movs	r3, #0
   1b844:	f002 fecc 	bl	1e5e0 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEy():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:77
   1b848:	1980      	adds	r0, r0, r6
   1b84a:	4179      	adcs	r1, r7
   1b84c:	e9c4 0120 	strd	r0, r1, [r4, #128]	; 0x80
_ZN12terminalTaskC2Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:56
}
   1b850:	4620      	mov	r0, r4
   1b852:	b003      	add	sp, #12
   1b854:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b856:	bf00      	nop
   1b858:	00028331 	.word	0x00028331
   1b85c:	00028360 	.word	0x00028360
   1b860:	0001d4c0 	.word	0x0001d4c0

0001b864 <terminalTask::saveDiskTlm()>:
_ZN12terminalTask11saveDiskTlmEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:219

    return true;
}

bool terminalTask::saveDiskTlm(void)
{
   1b864:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1b866:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:223
    bool changed = false;

    #if SYS_CFG_ENABLE_TLM
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1b868:	481a      	ldr	r0, [pc, #104]	; (1b8d4 <terminalTask::saveDiskTlm()+0x70>)
   1b86a:	f7f9 fdcd 	bl	15408 <tlm_component_get_by_name>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:226

    /* Size of telemetry shouldn't change */
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b86e:	f8b5 6076 	ldrh.w	r6, [r5, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:223
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1b872:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:226
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b874:	b916      	cbnz	r6, 1b87c <terminalTask::saveDiskTlm()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:227
        return changed;
   1b876:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:250
        }
    }
    #endif

    return changed;
}
   1b878:	b003      	add	sp, #12
   1b87a:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:226 (discriminator 2)
    if (0 == mDiskTlmSize || mDiskTlmSize != tlm_binary_get_size_one(disk)) {
   1b87c:	f7fa f9fe 	bl	15c7c <tlm_binary_get_size_one>
   1b880:	4286      	cmp	r6, r0
   1b882:	d1f8      	bne.n	1b876 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:230
    if (!tlm_binary_compare_one(disk, mpBinaryDiskTlm))
   1b884:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1b886:	4620      	mov	r0, r4
   1b888:	f7fa fa10 	bl	15cac <tlm_binary_compare_one>
   1b88c:	4607      	mov	r7, r0
   1b88e:	2800      	cmp	r0, #0
   1b890:	d1f1      	bne.n	1b876 <terminalTask::saveDiskTlm()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:233
        puts("Disk variables changed...");
   1b892:	4811      	ldr	r0, [pc, #68]	; (1b8d8 <terminalTask::saveDiskTlm()+0x74>)
   1b894:	f005 f83e 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:235
        FILE *file = fopen(SYS_CFG_DISK_TLM_NAME, "w");
   1b898:	4910      	ldr	r1, [pc, #64]	; (1b8dc <terminalTask::saveDiskTlm()+0x78>)
   1b89a:	480e      	ldr	r0, [pc, #56]	; (1b8d4 <terminalTask::saveDiskTlm()+0x70>)
   1b89c:	f003 faf6 	bl	1ee8c <fopen>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:236
        if (file) {
   1b8a0:	4606      	mov	r6, r0
   1b8a2:	b1a8      	cbz	r0, 1b8d0 <terminalTask::saveDiskTlm()+0x6c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:238
            tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1b8a4:	6fa9      	ldr	r1, [r5, #120]	; 0x78
   1b8a6:	4620      	mov	r0, r4
   1b8a8:	f7fa f9f3 	bl	15c92 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:240
            tlm_stream_one_file(disk, file);
   1b8ac:	4631      	mov	r1, r6
   1b8ae:	4620      	mov	r0, r4
   1b8b0:	f7f9 fcb4 	bl	1521c <tlm_stream_one_file>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:241
            fclose(file);
   1b8b4:	4630      	mov	r0, r6
   1b8b6:	f003 f88f 	bl	1e9d8 <fclose>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:243
            puts("Changes saved to disk...");
   1b8ba:	4809      	ldr	r0, [pc, #36]	; (1b8e0 <terminalTask::saveDiskTlm()+0x7c>)
   1b8bc:	f005 f82a 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:244
            LOG_SIMPLE_MSG("Disk variables saved to disk");
   1b8c0:	4b08      	ldr	r3, [pc, #32]	; (1b8e4 <terminalTask::saveDiskTlm()+0x80>)
   1b8c2:	463a      	mov	r2, r7
   1b8c4:	9300      	str	r3, [sp, #0]
   1b8c6:	4639      	mov	r1, r7
   1b8c8:	463b      	mov	r3, r7
   1b8ca:	2001      	movs	r0, #1
   1b8cc:	f7fa ffc0 	bl	16850 <logger_log>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:232
        changed = true;
   1b8d0:	2001      	movs	r0, #1
   1b8d2:	e7d1      	b.n	1b878 <terminalTask::saveDiskTlm()+0x14>
   1b8d4:	0002732a 	.word	0x0002732a
   1b8d8:	00027b9a 	.word	0x00027b9a
   1b8dc:	00026e49 	.word	0x00026e49
   1b8e0:	00027bb4 	.word	0x00027bb4
   1b8e4:	00027bcd 	.word	0x00027bcd

0001b8e8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:254


void terminalTask::handleEchoAndBackspace(cmdChan_t *io, char newChar)
{
   1b8e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:256
    /* Pointers to reduce too many -> references */
    const bool echo = io->echo;
   1b8ec:	7a0f      	ldrb	r7, [r1, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:254
{
   1b8ee:	4614      	mov	r4, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:257
    str *pStr = io->cmdstr;
   1b8f0:	684d      	ldr	r5, [r1, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:258
    CharDev *iodev = io->iodev;
   1b8f2:	680e      	ldr	r6, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:261

    // Backspace 1 char @ terminal and erase last char of string
    if (echo && '\b' == newChar) {
   1b8f4:	b33f      	cbz	r7, 1b946 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:261 (discriminator 1)
   1b8f6:	2a08      	cmp	r2, #8
   1b8f8:	d119      	bne.n	1b92e <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:262
        if(pStr->getLen() > 0) {
   1b8fa:	4628      	mov	r0, r5
   1b8fc:	f7fb f973 	bl	16be6 <str::getLen() const>
   1b900:	2800      	cmp	r0, #0
   1b902:	dd12      	ble.n	1b92a <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:263
            iodev->put("\b ");
   1b904:	4913      	ldr	r1, [pc, #76]	; (1b954 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x6c>)
   1b906:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b90a:	4630      	mov	r0, r6
   1b90c:	f7fc fa3a 	bl	17d84 <CharDev::put(char const*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:264
            pStr->eraseLast(1);
   1b910:	2101      	movs	r1, #1
   1b912:	4628      	mov	r0, r5
   1b914:	f7fb fa66 	bl	16de4 <str::eraseLast(int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:277
    else if ('\n' != newChar && '\r' != newChar) {
        *(pStr) += newChar;
    }

    if (echo) {
        iodev->putChar(newChar);
   1b918:	6833      	ldr	r3, [r6, #0]
   1b91a:	4621      	mov	r1, r4
   1b91c:	4630      	mov	r0, r6
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:279
    }
}
   1b91e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:277
        iodev->putChar(newChar);
   1b922:	685b      	ldr	r3, [r3, #4]
   1b924:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1b928:	4718      	bx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:269
            newChar = bellSound;
   1b92a:	2407      	movs	r4, #7
   1b92c:	e7f4      	b.n	1b918 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:272
    else if ('\n' != newChar && '\r' != newChar) {
   1b92e:	2a0a      	cmp	r2, #10
   1b930:	d0f2      	beq.n	1b918 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1b932:	2a0d      	cmp	r2, #13
   1b934:	d0f0      	beq.n	1b918 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:273
        *(pStr) += newChar;
   1b936:	4621      	mov	r1, r4
   1b938:	4628      	mov	r0, r5
   1b93a:	f7fb fb74 	bl	17026 <str::operator+=(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:276
    if (echo) {
   1b93e:	2f00      	cmp	r7, #0
   1b940:	d1ea      	bne.n	1b918 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   1b942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:272
    else if ('\n' != newChar && '\r' != newChar) {
   1b946:	2a0a      	cmp	r2, #10
   1b948:	d0fb      	beq.n	1b942 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x5a>
   1b94a:	2a0d      	cmp	r2, #13
   1b94c:	d1f3      	bne.n	1b936 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x4e>
   1b94e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b952:	bf00      	nop
   1b954:	00027bea 	.word	0x00027bea

0001b958 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:282

void terminalTask::addCommandChannel(CharDev *channel, bool echo)
{
   1b958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b95a:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:286
    cmdChan_t input;
    input.iodev = channel;
    input.echo = echo;
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1b95c:	2014      	movs	r0, #20
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:282
{
   1b95e:	460f      	mov	r7, r1
   1b960:	4615      	mov	r5, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:286
    input.cmdstr = new str(MAX_COMMANDLINE_INPUT);
   1b962:	f7fb fbc3 	bl	170ec <operator new(unsigned int)>
   1b966:	2180      	movs	r1, #128	; 0x80
   1b968:	4606      	mov	r6, r0
   1b96a:	f7fb fb0b 	bl	16f84 <str::str(int)>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:199
    if(mVectorSize >= mVectorCapacity)
   1b96e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1b970:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b972:	428b      	cmp	r3, r1
   1b974:	d306      	bcc.n	1b984 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:201
        changeCapacity( (mVectorCapacity + mGrowthRate) );
   1b976:	6b63      	ldr	r3, [r4, #52]	; 0x34
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:418
    if(newSize < mVectorCapacity)
   1b978:	18c9      	adds	r1, r1, r3
   1b97a:	d203      	bcs.n	1b984 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   1b97c:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1b980:	f7ff fef8 	bl	1b774 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.5]>
_ZN6VECTORIN12terminalTask9cmdChan_tEE9push_backERKS1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:203
    *mpObjPtrs[mVectorSize++] = element;
   1b984:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b986:	6c22      	ldr	r2, [r4, #64]	; 0x40
   1b988:	1c59      	adds	r1, r3, #1
   1b98a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1b98e:	63e1      	str	r1, [r4, #60]	; 0x3c
   1b990:	601f      	str	r7, [r3, #0]
   1b992:	605e      	str	r6, [r3, #4]
   1b994:	721d      	strb	r5, [r3, #8]
   1b996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001b998 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:291
    mCmdIface += input;
}

terminalTask::cmdChan_t terminalTask::getCommand(void)
{
   1b998:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:292
    if (0 == mCmdIface.size()) {
   1b99c:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:291
{
   1b99e:	4606      	mov	r6, r0
   1b9a0:	460d      	mov	r5, r1
   1b9a2:	ac01      	add	r4, sp, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:292
    if (0 == mCmdIface.size()) {
   1b9a4:	b977      	cbnz	r7, 1b9c4 <terminalTask::getCommand()+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:293
        vTaskDelayMs(1000);
   1b9a6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1b9aa:	f7fd ff07 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:294
        cmdChan_t noIface = { NULL, NULL };
   1b9ae:	9701      	str	r7, [sp, #4]
   1b9b0:	6067      	str	r7, [r4, #4]
   1b9b2:	60a7      	str	r7, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:343
            ret.iodev = NULL;
            break;
        }
    } while (c != '\n');

    return ret;
   1b9b4:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   1b9b8:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:344
}
   1b9bc:	4630      	mov	r0, r6
   1b9be:	b004      	add	sp, #16
   1b9c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
    return ( i >= 0 && i < mVectorSize) ? *mpObjPtrs[i] : mNullItem;
   1b9c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:300
    char c = 0;
   1b9c6:	f10d 0810 	add.w	r8, sp, #16
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:299
    cmdChan_t ret = mCmdIface[0];
   1b9ca:	681b      	ldr	r3, [r3, #0]
   1b9cc:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:300
    char c = 0;
   1b9d0:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:299
    cmdChan_t ret = mCmdIface[0];
   1b9d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:300
    char c = 0;
   1b9d6:	f808 3d0d 	strb.w	r3, [r8, #-13]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:305
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b9da:	f7fd fdbf 	bl	1955c <xTaskGetTickCount>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b9de:	2700      	movs	r7, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:305
        const TickType_t ticksBefore = xTaskGetTickCount();
   1b9e0:	4681      	mov	r9, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308 (discriminator 1)
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1b9e2:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1b9e4:	429f      	cmp	r7, r3
   1b9e6:	d25c      	bcs.n	1baa2 <terminalTask::getCommand()+0x10a>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1b9e8:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1b9ea:	ea4f 0a87 	mov.w	sl, r7, lsl #2
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:310
            if (mCmdIface[idx].iodev->isReady() && mCmdIface[idx].iodev->getChar(&c, 0))
   1b9ee:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   1b9f2:	6818      	ldr	r0, [r3, #0]
   1b9f4:	7c03      	ldrb	r3, [r0, #16]
   1b9f6:	2b00      	cmp	r3, #0
   1b9f8:	d051      	beq.n	1ba9e <terminalTask::getCommand()+0x106>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:310 (discriminator 1)
   1b9fa:	6803      	ldr	r3, [r0, #0]
   1b9fc:	2200      	movs	r2, #0
   1b9fe:	681b      	ldr	r3, [r3, #0]
   1ba00:	4641      	mov	r1, r8
   1ba02:	4798      	blx	r3
   1ba04:	2800      	cmp	r0, #0
   1ba06:	d04a      	beq.n	1ba9e <terminalTask::getCommand()+0x106>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1ba08:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1ba0a:	429f      	cmp	r7, r3
   1ba0c:	d244      	bcs.n	1ba98 <terminalTask::getCommand()+0x100>
   1ba0e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
   1ba10:	f853 300a 	ldr.w	r3, [r3, sl]
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:312
                ret = mCmdIface[idx];
   1ba14:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1ba18:	e884 0007 	stmia.w	r4, {r0, r1, r2}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:313
                handleEchoAndBackspace(&ret, c);
   1ba1c:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1ba20:	4621      	mov	r1, r4
   1ba22:	4628      	mov	r0, r5
   1ba24:	f7ff ff60 	bl	1b8e8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1ba28:	f7f4 fd38 	bl	1049c <sys_get_uptime_us>
   1ba2c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ba30:	2300      	movs	r3, #0
   1ba32:	f002 fdd5 	bl	1e5e0 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80

        /// Resets the timer from this point of time using the previous timeout interval
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1ba36:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1ba3a:	1880      	adds	r0, r0, r2
   1ba3c:	4159      	adcs	r1, r3
   1ba3e:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:329
        if (ret.cmdstr->getLen() >= ret.cmdstr->getCapacity() - 1) {
   1ba42:	9802      	ldr	r0, [sp, #8]
   1ba44:	f7fb f8cf 	bl	16be6 <str::getLen() const>
   1ba48:	4607      	mov	r7, r0
   1ba4a:	9802      	ldr	r0, [sp, #8]
   1ba4c:	f7fb f8ce 	bl	16bec <str::getCapacity() const>
   1ba50:	3801      	subs	r0, #1
   1ba52:	4287      	cmp	r7, r0
   1ba54:	daae      	bge.n	1b9b4 <terminalTask::getCommand()+0x1c>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
        { return (0 == mIntervalMs) ? false : ( getCurrentTimeMs() >= mTargetMs); }
   1ba56:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1ba5a:	4313      	orrs	r3, r2
   1ba5c:	d029      	beq.n	1bab2 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1ba5e:	f7f4 fd1d 	bl	1049c <sys_get_uptime_us>
   1ba62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ba66:	2300      	movs	r3, #0
   1ba68:	f002 fdba 	bl	1e5e0 <__aeabi_uldivmod>
_ZNK9SoftTimer7expiredEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:54
   1ba6c:	e9d5 2320 	ldrd	r2, r3, [r5, #128]	; 0x80
   1ba70:	4299      	cmp	r1, r3
   1ba72:	bf08      	it	eq
   1ba74:	4290      	cmpeq	r0, r2
   1ba76:	d31c      	bcc.n	1bab2 <terminalTask::getCommand()+0x11a>
sys_get_uptime_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/lpc_sys.h:116
   1ba78:	f7f4 fd10 	bl	1049c <sys_get_uptime_us>
   1ba7c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ba80:	2300      	movs	r3, #0
   1ba82:	f002 fdad 	bl	1e5e0 <__aeabi_uldivmod>
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
        inline void reset(void) { mTargetMs = getCurrentTimeMs() + mIntervalMs; }
   1ba86:	e9d5 2322 	ldrd	r2, r3, [r5, #136]	; 0x88
   1ba8a:	1880      	adds	r0, r0, r2
   1ba8c:	4159      	adcs	r1, r3
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:338
            ret.iodev = NULL;
   1ba8e:	2300      	movs	r3, #0
_ZN9SoftTimer5resetEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/soft_timer.hpp:80
   1ba90:	e9c5 0120 	strd	r0, r1, [r5, #128]	; 0x80
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:338
   1ba94:	9301      	str	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:339
            break;
   1ba96:	e78d      	b.n	1b9b4 <terminalTask::getCommand()+0x1c>
_ZN6VECTORIN12terminalTask9cmdChan_tEEixEj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/vector.hpp:403
   1ba98:	f105 0344 	add.w	r3, r5, #68	; 0x44
   1ba9c:	e7ba      	b.n	1ba14 <terminalTask::getCommand()+0x7c>
_ZN12terminalTask10getCommandEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:308
        for (idx = 0; idx < mCmdIface.size(); idx++)
   1ba9e:	3701      	adds	r7, #1
   1baa0:	e79f      	b.n	1b9e2 <terminalTask::getCommand()+0x4a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:324
        if (!gotChar && xTaskGetTickCount() == ticksBefore) {
   1baa2:	f7fd fd5b 	bl	1955c <xTaskGetTickCount>
   1baa6:	4581      	cmp	r9, r0
   1baa8:	d1cb      	bne.n	1ba42 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:325
            vTaskDelay(2);
   1baaa:	2002      	movs	r0, #2
   1baac:	f7fd fe86 	bl	197bc <vTaskDelay>
   1bab0:	e7c7      	b.n	1ba42 <terminalTask::getCommand()+0xaa>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:341
    } while (c != '\n');
   1bab2:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1bab6:	2b0a      	cmp	r3, #10
   1bab8:	d18f      	bne.n	1b9da <terminalTask::getCommand()+0x42>
   1baba:	e77b      	b.n	1b9b4 <terminalTask::getCommand()+0x1c>

0001babc <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:176
{
   1babc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1bac0:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:177
    printf("LPC: ");
   1bac2:	4827      	ldr	r0, [pc, #156]	; (1bb60 <terminalTask::run(void*)+0xa4>)
   1bac4:	f004 feb2 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:178
    cmdChan_t cmdChannel = getCommand();
   1bac8:	4629      	mov	r1, r5
   1baca:	a801      	add	r0, sp, #4
   1bacc:	f7ff ff64 	bl	1b998 <terminalTask::getCommand()>
   1bad0:	9c01      	ldr	r4, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:181
    if (!cmdChannel.iodev) {
   1bad2:	b954      	cbnz	r4, 1baea <terminalTask::run(void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:182
        if (saveDiskTlm()) {
   1bad4:	4628      	mov	r0, r5
   1bad6:	f7ff fec5 	bl	1b864 <terminalTask::saveDiskTlm()>
   1bada:	b910      	cbnz	r0, 1bae2 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:186
            puts("");
   1badc:	4821      	ldr	r0, [pc, #132]	; (1bb64 <terminalTask::run(void*)+0xa8>)
   1bade:	f004 ff19 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:216
}
   1bae2:	2001      	movs	r0, #1
   1bae4:	b004      	add	sp, #16
   1bae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:192
        str& cmd = *(cmdChannel.cmdstr);
   1baea:	9e02      	ldr	r6, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:194
        if (cmd.getLen() > 0)
   1baec:	4630      	mov	r0, r6
   1baee:	f7fb f87a 	bl	16be6 <str::getLen() const>
   1baf2:	2800      	cmp	r0, #0
   1baf4:	ddf5      	ble.n	1bae2 <terminalTask::run(void*)+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
            PRINT_EXECUTION_SPEED()
   1baf6:	f7f4 fcd1 	bl	1049c <sys_get_uptime_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204
                const char endOfTx[] = TERMINAL_END_CHARS;
   1bafa:	f04f 0803 	mov.w	r8, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:199
                mCmdProc.handleCommand(cmd, io);
   1bafe:	f105 0e50 	add.w	lr, r5, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196
            PRINT_EXECUTION_SPEED()
   1bb02:	4607      	mov	r7, r0
   1bb04:	b320      	cbz	r0, 1bb50 <terminalTask::run(void*)+0x94>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:198
                ++mCommandCount;
   1bb06:	f8b5 3074 	ldrh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:199
                mCmdProc.handleCommand(cmd, io);
   1bb0a:	4622      	mov	r2, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:198
                ++mCommandCount;
   1bb0c:	3301      	adds	r3, #1
   1bb0e:	f8a5 3074 	strh.w	r3, [r5, #116]	; 0x74
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:199
                mCmdProc.handleCommand(cmd, io);
   1bb12:	4631      	mov	r1, r6
   1bb14:	4670      	mov	r0, lr
   1bb16:	f7fa fa25 	bl	15f64 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204
                const char endOfTx[] = TERMINAL_END_CHARS;
   1bb1a:	2304      	movs	r3, #4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:205
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1bb1c:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:204
                const char endOfTx[] = TERMINAL_END_CHARS;
   1bb1e:	f88d 8000 	strb.w	r8, [sp]
   1bb22:	f88d 8001 	strb.w	r8, [sp, #1]
   1bb26:	f88d 3002 	strb.w	r3, [sp, #2]
   1bb2a:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:206 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1bb2e:	6823      	ldr	r3, [r4, #0]
   1bb30:	f81d 1005 	ldrb.w	r1, [sp, r5]
   1bb34:	685b      	ldr	r3, [r3, #4]
   1bb36:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1bb3a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:205 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1bb3c:	3501      	adds	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:206 (discriminator 2)
                    io.putChar(endOfTx[i]);
   1bb3e:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:205 (discriminator 2)
                for (unsigned i = 0; i < sizeof(endOfTx); i++) {
   1bb40:	2d04      	cmp	r5, #4
   1bb42:	d1f4      	bne.n	1bb2e <terminalTask::run(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:196 (discriminator 2)
            PRINT_EXECUTION_SPEED()
   1bb44:	f7f4 fcaa 	bl	1049c <sys_get_uptime_us>
   1bb48:	1bc1      	subs	r1, r0, r7
   1bb4a:	4807      	ldr	r0, [pc, #28]	; (1bb68 <terminalTask::run(void*)+0xac>)
   1bb4c:	f004 fe6e 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:210
            cmd.clear();
   1bb50:	4630      	mov	r0, r6
   1bb52:	f7fb f84d 	bl	16bf0 <str::clear()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:211
            io.flush();
   1bb56:	6823      	ldr	r3, [r4, #0]
   1bb58:	4620      	mov	r0, r4
   1bb5a:	689b      	ldr	r3, [r3, #8]
   1bb5c:	4798      	blx	r3
   1bb5e:	e7c0      	b.n	1bae2 <terminalTask::run(void*)+0x26>
   1bb60:	00027bed 	.word	0x00027bed
   1bb64:	00027b84 	.word	0x00027b84
   1bb68:	00027bf3 	.word	0x00027bf3

0001bb6c <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bb6c:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bb6e:	4c06      	ldr	r4, [pc, #24]	; (1bb88 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   1bb70:	6823      	ldr	r3, [r4, #0]
   1bb72:	b933      	cbnz	r3, 1bb82 <SingletonTemplate<Uart0>::getInstance()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bb74:	202c      	movs	r0, #44	; 0x2c
   1bb76:	f7fb fab9 	bl	170ec <operator new(unsigned int)>
   1bb7a:	4605      	mov	r5, r0
   1bb7c:	f7fc fd02 	bl	18584 <Uart0::Uart0()>
   1bb80:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bb82:	6820      	ldr	r0, [r4, #0]
   1bb84:	bd38      	pop	{r3, r4, r5, pc}
   1bb86:	bf00      	nop
   1bb88:	2007c5f8 	.word	0x2007c5f8

0001bb8c <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:58
        {
            char c = 0;
            Uart0::getInstance().getChar(&c);
            return c;
        }
        static char putcharIntrDriven(char thechar)
   1bb8c:	b510      	push	{r4, lr}
   1bb8e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
        {
            return Uart0::getInstance().putChar(thechar);
   1bb90:	f7ff ffec 	bl	1bb6c <SingletonTemplate<Uart0>::getInstance()>
   1bb94:	6803      	ldr	r3, [r0, #0]
   1bb96:	4621      	mov	r1, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:61
        }
   1bb98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:60
            return Uart0::getInstance().putChar(thechar);
   1bb9c:	685b      	ldr	r3, [r3, #4]
   1bb9e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1bba2:	4718      	bx	r3

0001bba4 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1bba4:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:52
        static char getcharIntrDriven(char unused)
   1bba6:	b513      	push	{r0, r1, r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:54
            char c = 0;
   1bba8:	ac02      	add	r4, sp, #8
   1bbaa:	f804 3d01 	strb.w	r3, [r4, #-1]!
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:55
            Uart0::getInstance().getChar(&c);
   1bbae:	f7ff ffdd 	bl	1bb6c <SingletonTemplate<Uart0>::getInstance()>
   1bbb2:	6803      	ldr	r3, [r0, #0]
   1bbb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1bbb8:	681b      	ldr	r3, [r3, #0]
   1bbba:	4621      	mov	r1, r4
   1bbbc:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/uart0.hpp:57
        }
   1bbbe:	f89d 0007 	ldrb.w	r0, [sp, #7]
   1bbc2:	b002      	add	sp, #8
   1bbc4:	bd10      	pop	{r4, pc}
   1bbc6:	Address 0x000000000001bbc6 is out of bounds.


0001bbc8 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1bbc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1bbcc:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1bbce:	b08a      	sub	sp, #40	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:71
    CommandProcessor &cp = mCmdProc;
   1bbd0:	f100 0450 	add.w	r4, r0, #80	; 0x50
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:69
{
   1bbd4:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:74
    cp.addHandler(taskListHandler, "info",    "Task/CPU Info.  Use 'info 200' to get CPU during 200ms");
   1bbd6:	9500      	str	r5, [sp, #0]
   1bbd8:	4620      	mov	r0, r4
   1bbda:	4b67      	ldr	r3, [pc, #412]	; (1bd78 <terminalTask::taskEntry()+0x1b0>)
   1bbdc:	4a67      	ldr	r2, [pc, #412]	; (1bd7c <terminalTask::taskEntry()+0x1b4>)
   1bbde:	4968      	ldr	r1, [pc, #416]	; (1bd80 <terminalTask::taskEntry()+0x1b8>)
   1bbe0:	f7fa f8dc 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:75
    cp.addHandler(memInfoHandler,  "meminfo", "See memory info");
   1bbe4:	9500      	str	r5, [sp, #0]
   1bbe6:	4620      	mov	r0, r4
   1bbe8:	4b66      	ldr	r3, [pc, #408]	; (1bd84 <terminalTask::taskEntry()+0x1bc>)
   1bbea:	4a67      	ldr	r2, [pc, #412]	; (1bd88 <terminalTask::taskEntry()+0x1c0>)
   1bbec:	4967      	ldr	r1, [pc, #412]	; (1bd8c <terminalTask::taskEntry()+0x1c4>)
   1bbee:	f7fa f8d5 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:76
    cp.addHandler(healthHandler,   "health",  "Output system health");
   1bbf2:	9500      	str	r5, [sp, #0]
   1bbf4:	4620      	mov	r0, r4
   1bbf6:	4b66      	ldr	r3, [pc, #408]	; (1bd90 <terminalTask::taskEntry()+0x1c8>)
   1bbf8:	4a66      	ldr	r2, [pc, #408]	; (1bd94 <terminalTask::taskEntry()+0x1cc>)
   1bbfa:	4967      	ldr	r1, [pc, #412]	; (1bd98 <terminalTask::taskEntry()+0x1d0>)
   1bbfc:	f7fa f8ce 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:77
    cp.addHandler(timeHandler,     "time",    "'time' to view time.  'time set MM DD YYYY HH MM SS Wday' to set time");
   1bc00:	9500      	str	r5, [sp, #0]
   1bc02:	4620      	mov	r0, r4
   1bc04:	4b65      	ldr	r3, [pc, #404]	; (1bd9c <terminalTask::taskEntry()+0x1d4>)
   1bc06:	4a66      	ldr	r2, [pc, #408]	; (1bda0 <terminalTask::taskEntry()+0x1d8>)
   1bc08:	4966      	ldr	r1, [pc, #408]	; (1bda4 <terminalTask::taskEntry()+0x1dc>)
   1bc0a:	f7fa f8c7 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:81
                                          "'cat 0:file.txt -noprint' to test if file can be read");
   1bc0e:	9500      	str	r5, [sp, #0]
   1bc10:	4620      	mov	r0, r4
   1bc12:	4b65      	ldr	r3, [pc, #404]	; (1bda8 <terminalTask::taskEntry()+0x1e0>)
   1bc14:	4a65      	ldr	r2, [pc, #404]	; (1bdac <terminalTask::taskEntry()+0x1e4>)
   1bc16:	4966      	ldr	r1, [pc, #408]	; (1bdb0 <terminalTask::taskEntry()+0x1e8>)
   1bc18:	f7fa f8c0 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:82
    cp.addHandler(cpHandler,     "cp",    "Copy files from/to Flash/SD Card.  Ex: 'cp 0:file.txt 1:file.txt'");
   1bc1c:	9500      	str	r5, [sp, #0]
   1bc1e:	4620      	mov	r0, r4
   1bc20:	4b64      	ldr	r3, [pc, #400]	; (1bdb4 <terminalTask::taskEntry()+0x1ec>)
   1bc22:	4a65      	ldr	r2, [pc, #404]	; (1bdb8 <terminalTask::taskEntry()+0x1f0>)
   1bc24:	4965      	ldr	r1, [pc, #404]	; (1bdbc <terminalTask::taskEntry()+0x1f4>)
   1bc26:	f7fa f8b9 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:83
    cp.addHandler(dcpHandler,    "dcp",   "Copy all files of a directory to another directory.  Ex: 'dcp 0:src 1:dst'");
   1bc2a:	9500      	str	r5, [sp, #0]
   1bc2c:	4620      	mov	r0, r4
   1bc2e:	4b64      	ldr	r3, [pc, #400]	; (1bdc0 <terminalTask::taskEntry()+0x1f8>)
   1bc30:	4a64      	ldr	r2, [pc, #400]	; (1bdc4 <terminalTask::taskEntry()+0x1fc>)
   1bc32:	4965      	ldr	r1, [pc, #404]	; (1bdc8 <terminalTask::taskEntry()+0x200>)
   1bc34:	f7fa f8b2 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:84
    cp.addHandler(lsHandler,     "ls",    "Use 'ls 0:' for Flash, or 'ls 1:' for SD Card");
   1bc38:	9500      	str	r5, [sp, #0]
   1bc3a:	4620      	mov	r0, r4
   1bc3c:	4b63      	ldr	r3, [pc, #396]	; (1bdcc <terminalTask::taskEntry()+0x204>)
   1bc3e:	4a64      	ldr	r2, [pc, #400]	; (1bdd0 <terminalTask::taskEntry()+0x208>)
   1bc40:	4964      	ldr	r1, [pc, #400]	; (1bdd4 <terminalTask::taskEntry()+0x20c>)
   1bc42:	f7fa f8ab 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:85
    cp.addHandler(mkdirHandler,  "mkdir", "Create a directory. Ex: 'mkdir test'");
   1bc46:	9500      	str	r5, [sp, #0]
   1bc48:	4620      	mov	r0, r4
   1bc4a:	4b63      	ldr	r3, [pc, #396]	; (1bdd8 <terminalTask::taskEntry()+0x210>)
   1bc4c:	4a63      	ldr	r2, [pc, #396]	; (1bddc <terminalTask::taskEntry()+0x214>)
   1bc4e:	4964      	ldr	r1, [pc, #400]	; (1bde0 <terminalTask::taskEntry()+0x218>)
   1bc50:	f7fa f8a4 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:86
    cp.addHandler(mvHandler,     "mv",    "Rename a file. Ex: 'rm 0:file.txt 0:new.txt'");
   1bc54:	9500      	str	r5, [sp, #0]
   1bc56:	4620      	mov	r0, r4
   1bc58:	4b62      	ldr	r3, [pc, #392]	; (1bde4 <terminalTask::taskEntry()+0x21c>)
   1bc5a:	4a63      	ldr	r2, [pc, #396]	; (1bde8 <terminalTask::taskEntry()+0x220>)
   1bc5c:	4963      	ldr	r1, [pc, #396]	; (1bdec <terminalTask::taskEntry()+0x224>)
   1bc5e:	f7fa f89d 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:87
    cp.addHandler(newFileHandler,"nf",    "Write a new file. Ex: 'nf <file.txt>");
   1bc62:	9500      	str	r5, [sp, #0]
   1bc64:	4620      	mov	r0, r4
   1bc66:	4b62      	ldr	r3, [pc, #392]	; (1bdf0 <terminalTask::taskEntry()+0x228>)
   1bc68:	4a62      	ldr	r2, [pc, #392]	; (1bdf4 <terminalTask::taskEntry()+0x22c>)
   1bc6a:	4963      	ldr	r1, [pc, #396]	; (1bdf8 <terminalTask::taskEntry()+0x230>)
   1bc6c:	f7fa f896 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:88
    cp.addHandler(rmHandler,     "rm",    "Remove a file. Ex: 'rm 0:file.txt'");
   1bc70:	9500      	str	r5, [sp, #0]
   1bc72:	4620      	mov	r0, r4
   1bc74:	4b61      	ldr	r3, [pc, #388]	; (1bdfc <terminalTask::taskEntry()+0x234>)
   1bc76:	4a62      	ldr	r2, [pc, #392]	; (1be00 <terminalTask::taskEntry()+0x238>)
   1bc78:	4962      	ldr	r1, [pc, #392]	; (1be04 <terminalTask::taskEntry()+0x23c>)
   1bc7a:	f7fa f88f 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:93
                                           "'i2c discover' : Discovers all I2C devices on the BUS");
   1bc7e:	9500      	str	r5, [sp, #0]
   1bc80:	4620      	mov	r0, r4
   1bc82:	4b61      	ldr	r3, [pc, #388]	; (1be08 <terminalTask::taskEntry()+0x240>)
   1bc84:	4a61      	ldr	r2, [pc, #388]	; (1be0c <terminalTask::taskEntry()+0x244>)
   1bc86:	4962      	ldr	r1, [pc, #392]	; (1be10 <terminalTask::taskEntry()+0x248>)
   1bc88:	f7fa f888 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:103
    cp.addHandler(storageHandler,  "storage",  "Parameters: 'format sd', 'format flash', 'mount sd', 'mount flash'");
   1bc8c:	9500      	str	r5, [sp, #0]
   1bc8e:	4620      	mov	r0, r4
   1bc90:	4b60      	ldr	r3, [pc, #384]	; (1be14 <terminalTask::taskEntry()+0x24c>)
   1bc92:	4a61      	ldr	r2, [pc, #388]	; (1be18 <terminalTask::taskEntry()+0x250>)
   1bc94:	4961      	ldr	r1, [pc, #388]	; (1be1c <terminalTask::taskEntry()+0x254>)
   1bc96:	f7fa f881 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:104
    cp.addHandler(rebootHandler,   "reboot",   "Reboots the system");
   1bc9a:	9500      	str	r5, [sp, #0]
   1bc9c:	4620      	mov	r0, r4
   1bc9e:	4b60      	ldr	r3, [pc, #384]	; (1be20 <terminalTask::taskEntry()+0x258>)
   1bca0:	4a60      	ldr	r2, [pc, #384]	; (1be24 <terminalTask::taskEntry()+0x25c>)
   1bca2:	4961      	ldr	r1, [pc, #388]	; (1be28 <terminalTask::taskEntry()+0x260>)
   1bca4:	f7fa f87a 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:110
                                               );
   1bca8:	9500      	str	r5, [sp, #0]
   1bcaa:	4620      	mov	r0, r4
   1bcac:	4b5f      	ldr	r3, [pc, #380]	; (1be2c <terminalTask::taskEntry()+0x264>)
   1bcae:	4a60      	ldr	r2, [pc, #384]	; (1be30 <terminalTask::taskEntry()+0x268>)
   1bcb0:	4960      	ldr	r1, [pc, #384]	; (1be34 <terminalTask::taskEntry()+0x26c>)
   1bcb2:	f7fa f873 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:111
    cp.addHandler(learnIrHandler,  "learn",    "Begin to learn IR codes for numbers 0-9");
   1bcb6:	9500      	str	r5, [sp, #0]
   1bcb8:	4620      	mov	r0, r4
   1bcba:	4b5f      	ldr	r3, [pc, #380]	; (1be38 <terminalTask::taskEntry()+0x270>)
   1bcbc:	4a5f      	ldr	r2, [pc, #380]	; (1be3c <terminalTask::taskEntry()+0x274>)
   1bcbe:	4960      	ldr	r1, [pc, #384]	; (1be40 <terminalTask::taskEntry()+0x278>)
   1bcc0:	f7fa f86c 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:112
    cp.addHandler(wirelessHandler, "wireless", "Use 'wireless' to see the nested commands");
   1bcc4:	9500      	str	r5, [sp, #0]
   1bcc6:	4620      	mov	r0, r4
   1bcc8:	4b5e      	ldr	r3, [pc, #376]	; (1be44 <terminalTask::taskEntry()+0x27c>)
   1bcca:	4a5f      	ldr	r2, [pc, #380]	; (1be48 <terminalTask::taskEntry()+0x280>)
   1bccc:	495f      	ldr	r1, [pc, #380]	; (1be4c <terminalTask::taskEntry()+0x284>)
   1bcce:	f7fa f865 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:121
                                             "Write buffer to file: commit <filename> <file offset> <num bytes from buffer>");
   1bcd2:	9500      	str	r5, [sp, #0]
   1bcd4:	4620      	mov	r0, r4
   1bcd6:	4b5e      	ldr	r3, [pc, #376]	; (1be50 <terminalTask::taskEntry()+0x288>)
   1bcd8:	4a5e      	ldr	r2, [pc, #376]	; (1be54 <terminalTask::taskEntry()+0x28c>)
   1bcda:	495f      	ldr	r1, [pc, #380]	; (1be58 <terminalTask::taskEntry()+0x290>)
   1bcdc:	f7fa f85e 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:122
    cp.addHandler(flashProgHandler, "flash", "'flash <filename>' Will flash CPU with this new binary file");
   1bce0:	9500      	str	r5, [sp, #0]
   1bce2:	4620      	mov	r0, r4
   1bce4:	4b5d      	ldr	r3, [pc, #372]	; (1be5c <terminalTask::taskEntry()+0x294>)
   1bce6:	4a5e      	ldr	r2, [pc, #376]	; (1be60 <terminalTask::taskEntry()+0x298>)
   1bce8:	495e      	ldr	r1, [pc, #376]	; (1be64 <terminalTask::taskEntry()+0x29c>)
   1bcea:	f7fa f857 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:131
                                                 "'telemetry get <comp. name> <name>' to get variable value\n");
   1bcee:	9500      	str	r5, [sp, #0]
   1bcf0:	4b5d      	ldr	r3, [pc, #372]	; (1be68 <terminalTask::taskEntry()+0x2a0>)
   1bcf2:	4a5e      	ldr	r2, [pc, #376]	; (1be6c <terminalTask::taskEntry()+0x2a4>)
   1bcf4:	495e      	ldr	r1, [pc, #376]	; (1be70 <terminalTask::taskEntry()+0x2a8>)
   1bcf6:	4620      	mov	r0, r4
   1bcf8:	f7fa f850 	bl	15d9c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:135
    Uart0& uart0 = Uart0::getInstance();
   1bcfc:	f7ff ff36 	bl	1bb6c <SingletonTemplate<Uart0>::getInstance()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:136
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1bd00:	f44f 7380 	mov.w	r3, #256	; 0x100
   1bd04:	2220      	movs	r2, #32
   1bd06:	f44f 4116 	mov.w	r1, #38400	; 0x9600
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:135
    Uart0& uart0 = Uart0::getInstance();
   1bd0a:	4605      	mov	r5, r0
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
        /**
         * @{  This API just provides a means to set a flag if UART is ready or not
         *     This doesn't cause any change to the way UART functions.
         */
        bool isReady(void) { return mReady; }
        void setReady(bool r) { mReady = r; }
   1bd0c:	2701      	movs	r7, #1
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:136
    bool success = uart0.init(SYS_CFG_UART0_BPS, 32, SYS_CFG_UART0_TXQ_SIZE);
   1bd0e:	f7fc fc19 	bl	18544 <Uart0::init(unsigned int, int, int)>
_ZN7CharDev8setReadyEb():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/char_dev.hpp:108
   1bd12:	742f      	strb	r7, [r5, #16]
_ZN12terminalTask9taskEntryEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:136
   1bd14:	4680      	mov	r8, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:138
    sys_set_inchar_func(uart0.getcharIntrDriven);
   1bd16:	4857      	ldr	r0, [pc, #348]	; (1be74 <terminalTask::taskEntry()+0x2ac>)
   1bd18:	f7fb faf8 	bl	1730c <sys_set_inchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:139
    sys_set_outchar_func(uart0.putcharIntrDriven);
   1bd1c:	4856      	ldr	r0, [pc, #344]	; (1be78 <terminalTask::taskEntry()+0x2b0>)
   1bd1e:	f7fb faef 	bl	17300 <sys_set_outchar_func>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:142
    addCommandChannel(&uart0, true);
   1bd22:	463a      	mov	r2, r7
   1bd24:	4629      	mov	r1, r5
   1bd26:	4630      	mov	r0, r6
   1bd28:	f7ff fe16 	bl	1b958 <terminalTask::addCommandChannel(CharDev*, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:156
    tlm_component *disk = tlm_component_get_by_name(SYS_CFG_DISK_TLM_NAME);
   1bd2c:	4853      	ldr	r0, [pc, #332]	; (1be7c <terminalTask::taskEntry()+0x2b4>)
   1bd2e:	f7f9 fb6b 	bl	15408 <tlm_component_get_by_name>
   1bd32:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:157
    mDiskTlmSize = tlm_binary_get_size_one(disk);
   1bd34:	f7f9 ffa2 	bl	15c7c <tlm_binary_get_size_one>
   1bd38:	f8a6 0076 	strh.w	r0, [r6, #118]	; 0x76
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:158
    mpBinaryDiskTlm = new char[mDiskTlmSize];
   1bd3c:	b280      	uxth	r0, r0
   1bd3e:	f7fb f9d7 	bl	170f0 <operator new[](unsigned int)>
   1bd42:	4601      	mov	r1, r0
   1bd44:	67b0      	str	r0, [r6, #120]	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:164
    tlm_binary_get_one(disk, mpBinaryDiskTlm);
   1bd46:	4638      	mov	r0, r7
   1bd48:	f7f9 ffa3 	bl	15c92 <tlm_binary_get_one>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:168
    STR_ON_STACK(help, 8);
   1bd4c:	2208      	movs	r2, #8
   1bd4e:	a903      	add	r1, sp, #12
   1bd50:	a805      	add	r0, sp, #20
   1bd52:	f7fa ff21 	bl	16b98 <str::str(char*, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:169
    help = "help";
   1bd56:	a805      	add	r0, sp, #20
   1bd58:	4949      	ldr	r1, [pc, #292]	; (1be80 <terminalTask::taskEntry()+0x2b8>)
   1bd5a:	f7fb f98f 	bl	1707c <str::operator=(char const*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:170
    mCmdProc.handleCommand(help, uart0);
   1bd5e:	462a      	mov	r2, r5
   1bd60:	a905      	add	r1, sp, #20
   1bd62:	4620      	mov	r0, r4
   1bd64:	f7fa f8fe 	bl	15f64 <CommandProcessor::handleCommand(str&, CharDev&)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:168
    STR_ON_STACK(help, 8);
   1bd68:	a805      	add	r0, sp, #20
   1bd6a:	f7fa ff29 	bl	16bc0 <str::~str()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/terminal.cpp:173
}
   1bd6e:	4640      	mov	r0, r8
   1bd70:	b00a      	add	sp, #40	; 0x28
   1bd72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bd76:	bf00      	nop
   1bd78:	00027c24 	.word	0x00027c24
   1bd7c:	00027c66 	.word	0x00027c66
   1bd80:	00019e75 	.word	0x00019e75
   1bd84:	00027c5b 	.word	0x00027c5b
   1bd88:	00027c6b 	.word	0x00027c6b
   1bd8c:	00019f5d 	.word	0x00019f5d
   1bd90:	00027c73 	.word	0x00027c73
   1bd94:	00027c81 	.word	0x00027c81
   1bd98:	0001aa31 	.word	0x0001aa31
   1bd9c:	00027c88 	.word	0x00027c88
   1bda0:	00027cc9 	.word	0x00027cc9
   1bda4:	00019f81 	.word	0x00019f81
   1bda8:	00027cce 	.word	0x00027cce
   1bdac:	00027d2a 	.word	0x00027d2a
   1bdb0:	0001a25d 	.word	0x0001a25d
   1bdb4:	00027d2e 	.word	0x00027d2e
   1bdb8:	00027dbc 	.word	0x00027dbc
   1bdbc:	0001a1dd 	.word	0x0001a1dd
   1bdc0:	00027d70 	.word	0x00027d70
   1bdc4:	00027dbb 	.word	0x00027dbb
   1bdc8:	0001a66d 	.word	0x0001a66d
   1bdcc:	00027dbf 	.word	0x00027dbf
   1bdd0:	00027ded 	.word	0x00027ded
   1bdd4:	0001a35d 	.word	0x0001a35d
   1bdd8:	00027df0 	.word	0x00027df0
   1bddc:	00027e15 	.word	0x00027e15
   1bde0:	0001a4e1 	.word	0x0001a4e1
   1bde4:	00027e1b 	.word	0x00027e1b
   1bde8:	00027e48 	.word	0x00027e48
   1bdec:	0001a559 	.word	0x0001a559
   1bdf0:	00027e4b 	.word	0x00027e4b
   1bdf4:	00028e39 	.word	0x00028e39
   1bdf8:	0001a5b5 	.word	0x0001a5b5
   1bdfc:	00027e70 	.word	0x00027e70
   1be00:	00027e93 	.word	0x00027e93
   1be04:	0001a51d 	.word	0x0001a51d
   1be08:	00027e96 	.word	0x00027e96
   1be0c:	00027f69 	.word	0x00027f69
   1be10:	0001abd9 	.word	0x0001abd9
   1be14:	00027f6d 	.word	0x00027f6d
   1be18:	00027fb0 	.word	0x00027fb0
   1be1c:	0001a7a9 	.word	0x0001a7a9
   1be20:	00027fb8 	.word	0x00027fb8
   1be24:	00027fcb 	.word	0x00027fcb
   1be28:	0001a865 	.word	0x0001a865
   1be2c:	00027fd2 	.word	0x00027fd2
   1be30:	000280d1 	.word	0x000280d1
   1be34:	0001a045 	.word	0x0001a045
   1be38:	000280d5 	.word	0x000280d5
   1be3c:	000280fd 	.word	0x000280fd
   1be40:	0001a9d9 	.word	0x0001a9d9
   1be44:	00028103 	.word	0x00028103
   1be48:	000283d6 	.word	0x000283d6
   1be4c:	0001b015 	.word	0x0001b015
   1be50:	0002812d 	.word	0x0002812d
   1be54:	00028221 	.word	0x00028221
   1be58:	0001b595 	.word	0x0001b595
   1be5c:	000281ea 	.word	0x000281ea
   1be60:	00027250 	.word	0x00027250
   1be64:	0001b4e1 	.word	0x0001b4e1
   1be68:	00028226 	.word	0x00028226
   1be6c:	00028327 	.word	0x00028327
   1be70:	0001a895 	.word	0x0001a895
   1be74:	0001bba5 	.word	0x0001bba5
   1be78:	0001bb8d 	.word	0x0001bb8d
   1be7c:	0002732a 	.word	0x0002732a
   1be80:	00026593 	.word	0x00026593

0001be84 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1be84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1be86:	4c0c      	ldr	r4, [pc, #48]	; (1beb8 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   1be88:	6823      	ldr	r3, [r4, #0]
   1be8a:	b993      	cbnz	r3, 1beb2 <SingletonTemplate<LED_Display>::getInstance()+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1be8c:	2008      	movs	r0, #8
   1be8e:	f7fb f92d 	bl	170ec <operator new(unsigned int)>
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1be92:	4d0a      	ldr	r5, [pc, #40]	; (1bebc <SingletonTemplate<LED_Display>::getInstance()+0x38>)
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1be94:	4606      	mov	r6, r0
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1be96:	682b      	ldr	r3, [r5, #0]
   1be98:	b933      	cbnz	r3, 1bea8 <SingletonTemplate<LED_Display>::getInstance()+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1be9a:	2024      	movs	r0, #36	; 0x24
   1be9c:	f7fb f926 	bl	170ec <operator new(unsigned int)>
   1bea0:	4607      	mov	r7, r0
   1bea2:	f7fc fca1 	bl	187e8 <I2C2::I2C2()>
   1bea6:	602f      	str	r7, [r5, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bea8:	682b      	ldr	r3, [r5, #0]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1beaa:	6026      	str	r6, [r4, #0]
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1beac:	6033      	str	r3, [r6, #0]
   1beae:	2340      	movs	r3, #64	; 0x40
   1beb0:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1beb2:	6820      	ldr	r0, [r4, #0]
   1beb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1beb6:	bf00      	nop
   1beb8:	2007c78c 	.word	0x2007c78c
   1bebc:	2007c600 	.word	0x2007c600

0001bec0 <hl_print_line()>:
_ZL13hl_print_linev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   1bec0:	4801      	ldr	r0, [pc, #4]	; (1bec8 <hl_print_line()+0x8>)
   1bec2:	f004 bd27 	b.w	20914 <puts>
   1bec6:	bf00      	nop
   1bec8:	0002872c 	.word	0x0002872c

0001becc <ssp_set_max_clock>:
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   1becc:	b538      	push	{r3, r4, r5, lr}
   1bece:	4604      	mov	r4, r0
   1bed0:	460d      	mov	r5, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   1bed2:	f7f4 fc71 	bl	107b8 <sys_get_cpu_clock>
   1bed6:	4b07      	ldr	r3, [pc, #28]	; (1bef4 <ssp_set_max_clock+0x28>)
   1bed8:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   1bedc:	2302      	movs	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1bede:	fbb0 f2f3 	udiv	r2, r0, r3
   1bee2:	42aa      	cmp	r2, r5
   1bee4:	d904      	bls.n	1bef0 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   1bee6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1beea:	d001      	beq.n	1bef0 <ssp_set_max_clock+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   1beec:	3302      	adds	r3, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1beee:	e7f6      	b.n	1bede <ssp_set_max_clock+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   1bef0:	6123      	str	r3, [r4, #16]
   1bef2:	bd38      	pop	{r3, r4, r5, pc}
   1bef4:	000f4240 	.word	0x000f4240

0001bef8 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   1bef8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   1befa:	f200 2639 	addw	r6, r0, #569	; 0x239
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   1befe:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   1bf00:	2201      	movs	r2, #1
   1bf02:	4631      	mov	r1, r6
   1bf04:	f7f6 fe46 	bl	12b94 <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   1bf08:	4605      	mov	r5, r0
   1bf0a:	bb38      	cbnz	r0, 1bf5c <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   1bf0c:	9003      	str	r0, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   1bf0e:	aa02      	add	r2, sp, #8
   1bf10:	a903      	add	r1, sp, #12
   1bf12:	4630      	mov	r0, r6
   1bf14:	f7f7 fa1f 	bl	13356 <f_getfree>
   1bf18:	bb40      	cbnz	r0, 1bf6c <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bf1a:	9802      	ldr	r0, [sp, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1bf1c:	9b03      	ldr	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bf1e:	7882      	ldrb	r2, [r0, #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   1bf20:	fb03 f102 	mul.w	r1, r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   1bf24:	69c3      	ldr	r3, [r0, #28]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   1bf26:	4812      	ldr	r0, [pc, #72]	; (1bf70 <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   1bf28:	3b02      	subs	r3, #2
   1bf2a:	435a      	muls	r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   1bf2c:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   1bf2e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   1bf32:	bf38      	it	cc
   1bf34:	2001      	movcc	r0, #1
   1bf36:	4b0f      	ldr	r3, [pc, #60]	; (1bf74 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   1bf38:	bf24      	itt	cs
   1bf3a:	4603      	movcs	r3, r0
   1bf3c:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   1bf40:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   1bf42:	fbb1 f1f0 	udiv	r1, r1, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   1bf46:	fbb2 f2f0 	udiv	r2, r2, r0
   1bf4a:	9100      	str	r1, [sp, #0]
   1bf4c:	9301      	str	r3, [sp, #4]
   1bf4e:	4621      	mov	r1, r4
   1bf50:	4809      	ldr	r0, [pc, #36]	; (1bf78 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   1bf52:	f004 fc6b 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   1bf56:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   1bf58:	b004      	add	sp, #16
   1bf5a:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1bf5c:	4b07      	ldr	r3, [pc, #28]	; (1bf7c <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   1bf5e:	462a      	mov	r2, r5
   1bf60:	4621      	mov	r1, r4
   1bf62:	4807      	ldr	r0, [pc, #28]	; (1bf80 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   1bf64:	f004 fc62 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   1bf68:	2000      	movs	r0, #0
   1bf6a:	e7f5      	b.n	1bf58 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   1bf6c:	4b05      	ldr	r3, [pc, #20]	; (1bf84 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   1bf6e:	e7f6      	b.n	1bf5e <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   1bf70:	0002876a 	.word	0x0002876a
   1bf74:	00028767 	.word	0x00028767
   1bf78:	00028774 	.word	0x00028774
   1bf7c:	00028771 	.word	0x00028771
   1bf80:	000287a2 	.word	0x000287a2
   1bf84:	0002876d 	.word	0x0002876d

0001bf88 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bf88:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bf8a:	4c05      	ldr	r4, [pc, #20]	; (1bfa0 <SingletonTemplate<LED>::getInstance()+0x18>)
   1bf8c:	6825      	ldr	r5, [r4, #0]
   1bf8e:	b925      	cbnz	r5, 1bf9a <SingletonTemplate<LED>::getInstance()+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bf90:	2001      	movs	r0, #1
   1bf92:	f7fb f8ab 	bl	170ec <operator new(unsigned int)>
_ZN3LEDC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   1bf96:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1bf98:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bf9a:	6820      	ldr	r0, [r4, #0]
   1bf9c:	bd38      	pop	{r3, r4, r5, pc}
   1bf9e:	bf00      	nop
   1bfa0:	2007c794 	.word	0x2007c794

0001bfa4 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bfa4:	b538      	push	{r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bfa6:	4c08      	ldr	r4, [pc, #32]	; (1bfc8 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   1bfa8:	6823      	ldr	r3, [r4, #0]
   1bfaa:	b95b      	cbnz	r3, 1bfc4 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bfac:	200c      	movs	r0, #12
   1bfae:	f7fb f89d 	bl	170ec <operator new(unsigned int)>
   1bfb2:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bfb4:	f7fe fd2c 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1bfb8:	2390      	movs	r3, #144	; 0x90
   1bfba:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1bfbc:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1bfbe:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/temperature_sensor.hpp:36
   1bfc0:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1bfc2:	6025      	str	r5, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bfc4:	6820      	ldr	r0, [r4, #0]
   1bfc6:	bd38      	pop	{r3, r4, r5, pc}
   1bfc8:	2007c764 	.word	0x2007c764

0001bfcc <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bfcc:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bfce:	4c04      	ldr	r4, [pc, #16]	; (1bfe0 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   1bfd0:	6823      	ldr	r3, [r4, #0]
   1bfd2:	b91b      	cbnz	r3, 1bfdc <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bfd4:	2001      	movs	r0, #1
   1bfd6:	f7fb f889 	bl	170ec <operator new(unsigned int)>
   1bfda:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bfdc:	6820      	ldr	r0, [r4, #0]
   1bfde:	bd10      	pop	{r4, pc}
   1bfe0:	2007c768 	.word	0x2007c768

0001bfe4 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   1bfe4:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1bfe6:	4c04      	ldr	r4, [pc, #16]	; (1bff8 <SingletonTemplate<Switches>::getInstance()+0x14>)
   1bfe8:	6823      	ldr	r3, [r4, #0]
   1bfea:	b91b      	cbnz	r3, 1bff4 <SingletonTemplate<Switches>::getInstance()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1bfec:	2001      	movs	r0, #1
   1bfee:	f7fb f87d 	bl	170ec <operator new(unsigned int)>
   1bff2:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   1bff4:	6820      	ldr	r0, [r4, #0]
   1bff6:	bd10      	pop	{r4, pc}
   1bff8:	2007c790 	.word	0x2007c790

0001bffc <high_level_init()>:
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1bffc:	2340      	movs	r3, #64	; 0x40
   1bffe:	49b6      	ldr	r1, [pc, #728]	; (1c2d8 <high_level_init()+0x2dc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   1c000:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:53
   1c002:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   1c004:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1c008:	4ab4      	ldr	r2, [pc, #720]	; (1c2dc <high_level_init()+0x2e0>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c00a:	2507      	movs	r5, #7
board_io_sd_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:55
   1c00c:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   1c00e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   1c012:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   1c014:	4bb2      	ldr	r3, [pc, #712]	; (1c2e0 <high_level_init()+0x2e4>)
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1c016:	2402      	movs	r4, #2
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1c018:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   1c01a:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:78
   1c01e:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   1c022:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   1c024:	6818      	ldr	r0, [r3, #0]
   1c026:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   1c02a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   1c02c:	6818      	ldr	r0, [r3, #0]
   1c02e:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1c032:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   1c034:	6808      	ldr	r0, [r1, #0]
   1c036:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   1c03a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   1c03c:	6818      	ldr	r0, [r3, #0]
   1c03e:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   1c042:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   1c044:	6818      	ldr	r0, [r3, #0]
   1c046:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   1c04a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   1c04c:	6818      	ldr	r0, [r3, #0]
   1c04e:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   1c052:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   1c054:	6818      	ldr	r0, [r3, #0]
   1c056:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   1c05a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   1c05c:	6818      	ldr	r0, [r3, #0]
   1c05e:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   1c062:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   1c064:	6818      	ldr	r0, [r3, #0]
   1c066:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   1c06a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   1c06c:	6858      	ldr	r0, [r3, #4]
   1c06e:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   1c072:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   1c074:	6858      	ldr	r0, [r3, #4]
   1c076:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   1c07a:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   1c07c:	6858      	ldr	r0, [r3, #4]
   1c07e:	f020 0003 	bic.w	r0, r0, #3
   1c082:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   1c084:	6808      	ldr	r0, [r1, #0]
   1c086:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   1c08a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   1c08c:	6858      	ldr	r0, [r3, #4]
   1c08e:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   1c092:	6058      	str	r0, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   1c094:	6808      	ldr	r0, [r1, #0]
   1c096:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   1c09a:	6008      	str	r0, [r1, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   1c09c:	68d9      	ldr	r1, [r3, #12]
   1c09e:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   1c0a2:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   1c0a4:	6811      	ldr	r1, [r2, #0]
   1c0a6:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   1c0aa:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   1c0ac:	6859      	ldr	r1, [r3, #4]
   1c0ae:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   1c0b2:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   1c0b4:	6859      	ldr	r1, [r3, #4]
   1c0b6:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   1c0ba:	6059      	str	r1, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   1c0bc:	6898      	ldr	r0, [r3, #8]
   1c0be:	4989      	ldr	r1, [pc, #548]	; (1c2e4 <high_level_init()+0x2e8>)
   1c0c0:	4001      	ands	r1, r0
   1c0c2:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   1c0c4:	6811      	ldr	r1, [r2, #0]
   1c0c6:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   1c0ca:	f041 0101 	orr.w	r1, r1, #1
   1c0ce:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   1c0d0:	6899      	ldr	r1, [r3, #8]
   1c0d2:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1c0d6:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   1c0d8:	6899      	ldr	r1, [r3, #8]
   1c0da:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   1c0de:	6099      	str	r1, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   1c0e0:	6811      	ldr	r1, [r2, #0]
   1c0e2:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   1c0e6:	6011      	str	r1, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   1c0e8:	68d9      	ldr	r1, [r3, #12]
   1c0ea:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   1c0ee:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   1c0f0:	68d9      	ldr	r1, [r3, #12]
   1c0f2:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   1c0f6:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   1c0f8:	68d9      	ldr	r1, [r3, #12]
   1c0fa:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   1c0fe:	60d9      	str	r1, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   1c100:	6813      	ldr	r3, [r2, #0]
   1c102:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   1c106:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   1c108:	6813      	ldr	r3, [r2, #0]
   1c10a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   1c10e:	6013      	str	r3, [r2, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   1c110:	f7fc f872 	bl	181f8 <adc0_init>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   1c114:	2101      	movs	r1, #1
   1c116:	200a      	movs	r0, #10
   1c118:	f7f4 fc00 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   1c11c:	2101      	movs	r1, #1
   1c11e:	200a      	movs	r0, #10
   1c120:	f7f4 fc16 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c124:	4870      	ldr	r0, [pc, #448]	; (1c2e8 <high_level_init()+0x2ec>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1c126:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c128:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1c12a:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1c12c:	f7ff fece 	bl	1becc <ssp_set_max_clock>
ssp1_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   1c130:	f7fc fa48 	bl	185c4 <ssp1_dma_init>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   1c134:	2101      	movs	r1, #1
   1c136:	2015      	movs	r0, #21
   1c138:	f7f4 fbf0 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   1c13c:	2101      	movs	r1, #1
   1c13e:	2015      	movs	r0, #21
   1c140:	f7f4 fc06 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c144:	4869      	ldr	r0, [pc, #420]	; (1c2ec <high_level_init()+0x2f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1c146:	2101      	movs	r1, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c148:	6005      	str	r5, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1c14a:	6044      	str	r4, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   1c14c:	f7ff febe 	bl	1becc <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   1c150:	f7fe fc5e 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1c154:	2164      	movs	r1, #100	; 0x64
   1c156:	f7fc fb13 	bl	18780 <I2C2::init(unsigned int)>
   1c15a:	b910      	cbnz	r0, 1c162 <high_level_init()+0x166>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   1c15c:	4864      	ldr	r0, [pc, #400]	; (1c2f0 <high_level_init()+0x2f4>)
   1c15e:	f004 fbd9 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   1c162:	f7f4 f971 	bl	10448 <lpc_sys_setup_system_timer>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   1c166:	f7f4 ff53 	bl	11010 <wireless_init>
   1c16a:	b910      	cbnz	r0, 1c172 <high_level_init()+0x176>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   1c16c:	4861      	ldr	r0, [pc, #388]	; (1c2f4 <high_level_init()+0x2f8>)
   1c16e:	f004 fbd1 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   1c172:	4861      	ldr	r0, [pc, #388]	; (1c2f8 <high_level_init()+0x2fc>)
   1c174:	f7f9 f95a 	bl	1542c <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   1c178:	4860      	ldr	r0, [pc, #384]	; (1c2fc <high_level_init()+0x300>)
   1c17a:	f7f9 f957 	bl	1542c <tlm_component_add>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   1c17e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1c182:	f7fa fcf8 	bl	16b76 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   1c186:	f7ff fe9b 	bl	1bec0 <hl_print_line()>
hl_print_boot_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   1c18a:	f7f4 fb15 	bl	107b8 <sys_get_cpu_clock>
   1c18e:	f002 f839 	bl	1e204 <__aeabi_ui2f>
   1c192:	495b      	ldr	r1, [pc, #364]	; (1c300 <high_level_init()+0x304>)
   1c194:	f002 f942 	bl	1e41c <__aeabi_fdiv>
   1c198:	f001 feba 	bl	1df10 <__aeabi_f2d>
   1c19c:	4602      	mov	r2, r0
   1c19e:	460b      	mov	r3, r1
   1c1a0:	4858      	ldr	r0, [pc, #352]	; (1c304 <high_level_init()+0x308>)
   1c1a2:	f004 fb43 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   1c1a6:	f7f4 f82b 	bl	10200 <sys_get_boot_type>
   1c1aa:	2805      	cmp	r0, #5
   1c1ac:	ac04      	add	r4, sp, #16
   1c1ae:	d114      	bne.n	1c1da <high_level_init()+0x1de>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   1c1b0:	2300      	movs	r3, #0
   1c1b2:	6063      	str	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   1c1b4:	4b54      	ldr	r3, [pc, #336]	; (1c308 <high_level_init()+0x30c>)
   1c1b6:	681b      	ldr	r3, [r3, #0]
   1c1b8:	6023      	str	r3, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   1c1ba:	f7ff fe81 	bl	1bec0 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1c1be:	4b53      	ldr	r3, [pc, #332]	; (1c30c <high_level_init()+0x310>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1c1c0:	4853      	ldr	r0, [pc, #332]	; (1c310 <high_level_init()+0x314>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   1c1c2:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   1c1c4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   1c1c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   1c1c8:	9400      	str	r4, [sp, #0]
   1c1ca:	f004 fb2f 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   1c1ce:	f7ff fe77 	bl	1bec0 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   1c1d2:	f241 3088 	movw	r0, #5000	; 0x1388
   1c1d6:	f7fa fcce 	bl	16b76 <delay_ms>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1c1da:	f7fd fdff 	bl	19ddc <Storage::getFlashDrive()>
   1c1de:	494d      	ldr	r1, [pc, #308]	; (1c314 <high_level_init()+0x318>)
   1c1e0:	f7ff fe8a 	bl	1bef8 <hl_mount_storage(FileSystemObject&, char const*)>
   1c1e4:	4605      	mov	r5, r0
   1c1e6:	bb68      	cbnz	r0, 1c244 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   1c1e8:	484b      	ldr	r0, [pc, #300]	; (1c318 <high_level_init()+0x31c>)
   1c1ea:	f004 fb1f 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   1c1ee:	f7f8 fc4b 	bl	14a88 <flash_chip_erase>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   1c1f2:	f7fd fdf3 	bl	19ddc <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   1c1f6:	4629      	mov	r1, r5
   1c1f8:	462a      	mov	r2, r5
   1c1fa:	f200 2039 	addw	r0, r0, #569	; 0x239
   1c1fe:	f7f7 fb03 	bl	13808 <f_mkfs>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   1c202:	4b46      	ldr	r3, [pc, #280]	; (1c31c <high_level_init()+0x320>)
   1c204:	4a46      	ldr	r2, [pc, #280]	; (1c320 <high_level_init()+0x324>)
   1c206:	2800      	cmp	r0, #0
   1c208:	bf0c      	ite	eq
   1c20a:	4610      	moveq	r0, r2
   1c20c:	4618      	movne	r0, r3
   1c20e:	f004 fb81 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   1c212:	f7fd fde3 	bl	19ddc <Storage::getFlashDrive()>
   1c216:	493f      	ldr	r1, [pc, #252]	; (1c314 <high_level_init()+0x318>)
   1c218:	f7ff fe6e 	bl	1bef8 <hl_mount_storage(FileSystemObject&, char const*)>
   1c21c:	b990      	cbnz	r0, 1c244 <high_level_init()+0x248>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   1c21e:	4841      	ldr	r0, [pc, #260]	; (1c324 <high_level_init()+0x328>)
   1c220:	f004 fb78 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   1c224:	f7f8 fbb2 	bl	1498c <flash_get_page_size>
   1c228:	4601      	mov	r1, r0
   1c22a:	483f      	ldr	r0, [pc, #252]	; (1c328 <high_level_init()+0x32c>)
   1c22c:	f004 fafe 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   1c230:	f7f8 fb9c 	bl	1496c <flash_get_page_count>
   1c234:	4605      	mov	r5, r0
   1c236:	f7f8 fba9 	bl	1498c <flash_get_page_size>
   1c23a:	fb00 f105 	mul.w	r1, r0, r5
   1c23e:	483b      	ldr	r0, [pc, #236]	; (1c32c <high_level_init()+0x330>)
   1c240:	f004 faf4 	bl	2082c <iprintf>
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   1c244:	4e3a      	ldr	r6, [pc, #232]	; (1c330 <high_level_init()+0x334>)
   1c246:	4f3b      	ldr	r7, [pc, #236]	; (1c334 <high_level_init()+0x338>)
   1c248:	7833      	ldrb	r3, [r6, #0]
   1c24a:	f3bf 8f5b 	dmb	ish
   1c24e:	f013 0501 	ands.w	r5, r3, #1
   1c252:	d116      	bne.n	1c282 <high_level_init()+0x286>
   1c254:	4630      	mov	r0, r6
   1c256:	f001 f9e8 	bl	1d62a <__cxa_guard_acquire>
   1c25a:	b190      	cbz	r0, 1c282 <high_level_init()+0x286>
   1c25c:	f44f 700f 	mov.w	r0, #572	; 0x23c
   1c260:	f7fa ff44 	bl	170ec <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   1c264:	2301      	movs	r3, #1
   1c266:	f880 3238 	strb.w	r3, [r0, #568]	; 0x238
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   1c26a:	2331      	movs	r3, #49	; 0x31
   1c26c:	f880 3239 	strb.w	r3, [r0, #569]	; 0x239
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1c270:	233a      	movs	r3, #58	; 0x3a
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   1c272:	f880 523b 	strb.w	r5, [r0, #571]	; 0x23b
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   1c276:	f880 323a 	strb.w	r3, [r0, #570]	; 0x23a
_ZN7Storage10getSDDriveEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/storage.hpp:57
   1c27a:	6038      	str	r0, [r7, #0]
   1c27c:	4630      	mov	r0, r6
   1c27e:	f001 f9e0 	bl	1d642 <__cxa_guard_release>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   1c282:	492d      	ldr	r1, [pc, #180]	; (1c338 <high_level_init()+0x33c>)
   1c284:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1c286:	4d2d      	ldr	r5, [pc, #180]	; (1c33c <high_level_init()+0x340>)
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   1c288:	f7ff fe36 	bl	1bef8 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   1c28c:	2118      	movs	r1, #24
   1c28e:	4816      	ldr	r0, [pc, #88]	; (1c2e8 <high_level_init()+0x2ec>)
   1c290:	f7ff fe1c 	bl	1becc <ssp_set_max_clock>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   1c294:	f7ff fe14 	bl	1bec0 <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1c298:	682b      	ldr	r3, [r5, #0]
   1c29a:	b94b      	cbnz	r3, 1c2b0 <high_level_init()+0x2b4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1c29c:	2008      	movs	r0, #8
   1c29e:	f7fa ff25 	bl	170ec <operator new(unsigned int)>
   1c2a2:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L4_IO/i2c2_device.hpp:43
   1c2a4:	f7fe fbb4 	bl	1aa10 <SingletonTemplate<I2C2>::getInstance()>
   1c2a8:	2338      	movs	r3, #56	; 0x38
   1c2aa:	6030      	str	r0, [r6, #0]
   1c2ac:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
   1c2ae:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   1c2b0:	6828      	ldr	r0, [r5, #0]
   1c2b2:	f7f8 fda7 	bl	14e04 <Acceleration_Sensor::init()>
   1c2b6:	4606      	mov	r6, r0
   1c2b8:	b910      	cbnz	r0, 1c2c0 <high_level_init()+0x2c4>
   1c2ba:	4821      	ldr	r0, [pc, #132]	; (1c340 <high_level_init()+0x344>)
   1c2bc:	f004 fb2a 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   1c2c0:	f7ff fe70 	bl	1bfa4 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1c2c4:	f7f8 fea4 	bl	15010 <I2C_Temp::init()>
   1c2c8:	4605      	mov	r5, r0
   1c2ca:	2800      	cmp	r0, #0
   1c2cc:	d13c      	bne.n	1c348 <high_level_init()+0x34c>
   1c2ce:	481d      	ldr	r0, [pc, #116]	; (1c344 <high_level_init()+0x348>)
   1c2d0:	f004 fb20 	bl	20914 <puts>
   1c2d4:	462e      	mov	r6, r5
   1c2d6:	e037      	b.n	1c348 <high_level_init()+0x34c>
   1c2d8:	2009c000 	.word	0x2009c000
   1c2dc:	2009c020 	.word	0x2009c020
   1c2e0:	4002c000 	.word	0x4002c000
   1c2e4:	fffcfcf0 	.word	0xfffcfcf0
   1c2e8:	40030000 	.word	0x40030000
   1c2ec:	40088000 	.word	0x40088000
   1c2f0:	00028389 	.word	0x00028389
   1c2f4:	000283ba 	.word	0x000283ba
   1c2f8:	0002732a 	.word	0x0002732a
   1c2fc:	00026984 	.word	0x00026984
   1c300:	49742400 	.word	0x49742400
   1c304:	000283df 	.word	0x000283df
   1c308:	40024044 	.word	0x40024044
   1c30c:	40024000 	.word	0x40024000
   1c310:	000283f7 	.word	0x000283f7
   1c314:	0002846f 	.word	0x0002846f
   1c318:	00028477 	.word	0x00028477
   1c31c:	0002837d 	.word	0x0002837d
   1c320:	00028378 	.word	0x00028378
   1c324:	000284b4 	.word	0x000284b4
   1c328:	000284d3 	.word	0x000284d3
   1c32c:	000284e2 	.word	0x000284e2
   1c330:	2007c76c 	.word	0x2007c76c
   1c334:	2007c770 	.word	0x2007c770
   1c338:	0002720d 	.word	0x0002720d
   1c33c:	2007c798 	.word	0x2007c798
   1c340:	000284fd 	.word	0x000284fd
   1c344:	00028518 	.word	0x00028518
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   1c348:	f7ff fd9c 	bl	1be84 <SingletonTemplate<LED_Display>::getInstance()>
   1c34c:	f7f8 fddc 	bl	14f08 <LED_Display::init()>
   1c350:	4605      	mov	r5, r0
   1c352:	b918      	cbnz	r0, 1c35c <high_level_init()+0x360>
   1c354:	486d      	ldr	r0, [pc, #436]	; (1c50c <high_level_init()+0x510>)
   1c356:	f004 fadd 	bl	20914 <puts>
   1c35a:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1c35c:	4d6c      	ldr	r5, [pc, #432]	; (1c510 <high_level_init()+0x514>)
   1c35e:	682b      	ldr	r3, [r5, #0]
   1c360:	b91b      	cbnz	r3, 1c36a <high_level_init()+0x36e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1c362:	2001      	movs	r0, #1
   1c364:	f7fa fec2 	bl	170ec <operator new(unsigned int)>
   1c368:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   1c36a:	6828      	ldr	r0, [r5, #0]
   1c36c:	f7f8 fd9a 	bl	14ea4 <IR_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   1c370:	f7ff fe2c 	bl	1bfcc <SingletonTemplate<Light_Sensor>::getInstance()>
   1c374:	f7f8 fe2c 	bl	14fd0 <Light_Sensor::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   1c378:	f7ff fe06 	bl	1bf88 <SingletonTemplate<LED>::getInstance()>
   1c37c:	f7f8 fdfd 	bl	14f7a <LED::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   1c380:	f7ff fe30 	bl	1bfe4 <SingletonTemplate<Switches>::getInstance()>
   1c384:	f7f8 fe29 	bl	14fda <Switches::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   1c388:	f7ff fdfe 	bl	1bf88 <SingletonTemplate<LED>::getInstance()>
   1c38c:	2100      	movs	r1, #0
   1c38e:	f7f8 fdf7 	bl	14f80 <LED::setAll(unsigned char)>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   1c392:	2e00      	cmp	r6, #0
   1c394:	f040 8081 	bne.w	1c49a <high_level_init()+0x49e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   1c398:	f7ff fd92 	bl	1bec0 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   1c39c:	f7ff fd72 	bl	1be84 <SingletonTemplate<LED_Display>::getInstance()>
   1c3a0:	212d      	movs	r1, #45	; 0x2d
   1c3a2:	f7f8 fd99 	bl	14ed8 <LED_Display::setLeftDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   1c3a6:	f7ff fd6d 	bl	1be84 <SingletonTemplate<LED_Display>::getInstance()>
   1c3aa:	212d      	movs	r1, #45	; 0x2d
   1c3ac:	f7f8 fda0 	bl	14ef0 <LED_Display::setRightDigit(char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   1c3b0:	f7ff fdea 	bl	1bf88 <SingletonTemplate<LED>::getInstance()>
   1c3b4:	21ff      	movs	r1, #255	; 0xff
   1c3b6:	f7f8 fde3 	bl	14f80 <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   1c3ba:	2210      	movs	r2, #16
   1c3bc:	2100      	movs	r1, #0
   1c3be:	4620      	mov	r0, r4
   1c3c0:	f003 f888 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   1c3c4:	2300      	movs	r3, #0
   1c3c6:	220f      	movs	r2, #15
   1c3c8:	4621      	mov	r1, r4
   1c3ca:	4852      	ldr	r0, [pc, #328]	; (1c514 <high_level_init()+0x518>)
   1c3cc:	f7f8 fc97 	bl	14cfe <Storage::read(char const*, void*, unsigned int, unsigned int)>
   1c3d0:	b980      	cbnz	r0, 1c3f4 <high_level_init()+0x3f8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   1c3d2:	4620      	mov	r0, r4
   1c3d4:	f002 fa93 	bl	1e8fe <atoi>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   1c3d8:	b2c5      	uxtb	r5, r0
   1c3da:	4628      	mov	r0, r5
   1c3dc:	f7f5 f85c 	bl	11498 <mesh_set_node_address>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   1c3e0:	4a4d      	ldr	r2, [pc, #308]	; (1c518 <high_level_init()+0x51c>)
   1c3e2:	4b4e      	ldr	r3, [pc, #312]	; (1c51c <high_level_init()+0x520>)
   1c3e4:	4629      	mov	r1, r5
   1c3e6:	2800      	cmp	r0, #0
   1c3e8:	bf18      	it	ne
   1c3ea:	4613      	movne	r3, r2
   1c3ec:	4a49      	ldr	r2, [pc, #292]	; (1c514 <high_level_init()+0x518>)
   1c3ee:	484c      	ldr	r0, [pc, #304]	; (1c520 <high_level_init()+0x524>)
   1c3f0:	f004 fa1c 	bl	2082c <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   1c3f4:	f7ff fdea 	bl	1bfcc <SingletonTemplate<Light_Sensor>::getInstance()>
   1c3f8:	f7f8 fdec 	bl	14fd4 <Light_Sensor::getRawValue()>
   1c3fc:	4605      	mov	r5, r0
   1c3fe:	2000      	movs	r0, #0
   1c400:	f005 fd72 	bl	21ee8 <time>
   1c404:	4428      	add	r0, r5
   1c406:	f004 fa8d 	bl	20924 <srand>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   1c40a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1c40e:	2100      	movs	r1, #0
   1c410:	4620      	mov	r0, r4
   1c412:	f003 f85f 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   1c416:	4620      	mov	r0, r4
   1c418:	f7f4 f856 	bl	104c8 <sys_get_mem_info_str>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   1c41c:	4621      	mov	r1, r4
   1c41e:	4841      	ldr	r0, [pc, #260]	; (1c524 <high_level_init()+0x528>)
   1c420:	f004 fa04 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   1c424:	f7ff fd4c 	bl	1bec0 <hl_print_line()>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   1c428:	2280      	movs	r2, #128	; 0x80
   1c42a:	2100      	movs	r1, #0
   1c42c:	4620      	mov	r0, r4
   1c42e:	f003 f851 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   1c432:	4620      	mov	r0, r4
   1c434:	f7f8 fa86 	bl	14944 <flash_read_permanent_id>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   1c438:	7822      	ldrb	r2, [r4, #0]
   1c43a:	2aff      	cmp	r2, #255	; 0xff
   1c43c:	d03b      	beq.n	1c4b6 <high_level_init()+0x4ba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   1c43e:	4621      	mov	r1, r4
   1c440:	4839      	ldr	r0, [pc, #228]	; (1c528 <high_level_init()+0x52c>)
   1c442:	f004 f9f3 	bl	2082c <iprintf>
chip_get_prog_max():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:49
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   1c446:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1c44a:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:52
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   1c44c:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1c450:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:55
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   1c452:	f24f 0310 	movw	r3, #61456	; 0xf010
   1c456:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   1c458:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c45c:	681a      	ldr	r2, [r3, #0]
   1c45e:	f24f 0304 	movw	r3, #61444	; 0xf004
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1c462:	0aad      	lsrs	r5, r5, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c464:	6819      	ldr	r1, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   1c466:	0aa4      	lsrs	r4, r4, #10
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1c468:	4830      	ldr	r0, [pc, #192]	; (1c52c <high_level_init()+0x530>)
   1c46a:	f004 f9df 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   1c46e:	462a      	mov	r2, r5
   1c470:	4621      	mov	r1, r4
   1c472:	482f      	ldr	r0, [pc, #188]	; (1c530 <high_level_init()+0x534>)
   1c474:	f004 f9da 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   1c478:	4631      	mov	r1, r6
   1c47a:	482e      	ldr	r0, [pc, #184]	; (1c534 <high_level_init()+0x538>)
   1c47c:	f004 f9d6 	bl	2082c <iprintf>
_Z15high_level_initv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   1c480:	f7ff fd1e 	bl	1bec0 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   1c484:	2001      	movs	r0, #1
   1c486:	f7fa f96f 	bl	16768 <logger_init>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   1c48a:	482b      	ldr	r0, [pc, #172]	; (1c538 <high_level_init()+0x53c>)
   1c48c:	f004 fa42 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   1c490:	f7ff fd16 	bl	1bec0 <hl_print_line()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   1c494:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   1c498:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   1c49a:	f7ff fcf3 	bl	1be84 <SingletonTemplate<LED_Display>::getInstance()>
   1c49e:	4605      	mov	r5, r0
   1c4a0:	f7ff fd80 	bl	1bfa4 <SingletonTemplate<TemperatureSensor>::getInstance()>
   1c4a4:	f7f8 fdde 	bl	15064 <I2C_Temp::getFarenheit()>
   1c4a8:	f002 f87a 	bl	1e5a0 <__aeabi_f2uiz>
   1c4ac:	b2c1      	uxtb	r1, r0
   1c4ae:	4628      	mov	r0, r5
   1c4b0:	f7f8 fd46 	bl	14f40 <LED_Display::setNumber(char)>
   1c4b4:	e781      	b.n	1c3ba <high_level_init()+0x3be>
hl_handle_board_id():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   1c4b6:	f7ff fd95 	bl	1bfe4 <SingletonTemplate<Switches>::getInstance()>
   1c4ba:	f7f8 fd91 	bl	14fe0 <Switches::getSwitchValues()>
   1c4be:	2809      	cmp	r0, #9
   1c4c0:	d11f      	bne.n	1c502 <high_level_init()+0x506>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   1c4c2:	481e      	ldr	r0, [pc, #120]	; (1c53c <high_level_init()+0x540>)
   1c4c4:	f004 fa26 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   1c4c8:	4621      	mov	r1, r4
   1c4ca:	481d      	ldr	r0, [pc, #116]	; (1c540 <high_level_init()+0x544>)
   1c4cc:	f004 fb66 	bl	20b9c <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   1c4d0:	4621      	mov	r1, r4
   1c4d2:	481c      	ldr	r0, [pc, #112]	; (1c544 <high_level_init()+0x548>)
   1c4d4:	f004 f9aa 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   1c4d8:	481b      	ldr	r0, [pc, #108]	; (1c548 <high_level_init()+0x54c>)
   1c4da:	f004 fa1b 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1c4de:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1c4e0:	a903      	add	r1, sp, #12
   1c4e2:	481a      	ldr	r0, [pc, #104]	; (1c54c <high_level_init()+0x550>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1c4e4:	9303      	str	r3, [sp, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   1c4e6:	f004 fb59 	bl	20b9c <iscanf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   1c4ea:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1c4ee:	2b59      	cmp	r3, #89	; 0x59
   1c4f0:	d103      	bne.n	1c4fa <high_level_init()+0x4fe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   1c4f2:	4620      	mov	r0, r4
   1c4f4:	f7f8 fa04 	bl	14900 <flash_write_permanent_id>
   1c4f8:	e7a5      	b.n	1c446 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   1c4fa:	4815      	ldr	r0, [pc, #84]	; (1c550 <high_level_init()+0x554>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1c4fc:	f004 fa0a 	bl	20914 <puts>
   1c500:	e7a1      	b.n	1c446 <high_level_init()+0x44a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   1c502:	4814      	ldr	r0, [pc, #80]	; (1c554 <high_level_init()+0x558>)
   1c504:	f004 fa06 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1c508:	4813      	ldr	r0, [pc, #76]	; (1c558 <high_level_init()+0x55c>)
   1c50a:	e7f7      	b.n	1c4fc <high_level_init()+0x500>
   1c50c:	00028532 	.word	0x00028532
   1c510:	2007c310 	.word	0x2007c310
   1c514:	0002854b 	.word	0x0002854b
   1c518:	00028383 	.word	0x00028383
   1c51c:	000277f2 	.word	0x000277f2
   1c520:	00028551 	.word	0x00028551
   1c524:	00028af9 	.word	0x00028af9
   1c528:	00028585 	.word	0x00028585
   1c52c:	000286a2 	.word	0x000286a2
   1c530:	000286ce 	.word	0x000286ce
   1c534:	000286fb 	.word	0x000286fb
   1c538:	00028718 	.word	0x00028718
   1c53c:	000285a1 	.word	0x000285a1
   1c540:	000285c3 	.word	0x000285c3
   1c544:	000285c8 	.word	0x000285c8
   1c548:	000285e3 	.word	0x000285e3
   1c54c:	00028626 	.word	0x00028626
   1c550:	0002862a 	.word	0x0002862a
   1c554:	00028642 	.word	0x00028642
   1c558:	00028670 	.word	0x00028670

0001c55c <ssp0_exchange_byte>:
ssp0_exchange_byte():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1c55c:	4b03      	ldr	r3, [pc, #12]	; (1c56c <ssp0_exchange_byte+0x10>)
   1c55e:	6098      	str	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   1c560:	68da      	ldr	r2, [r3, #12]
   1c562:	06d2      	lsls	r2, r2, #27
   1c564:	d4fc      	bmi.n	1c560 <ssp0_exchange_byte+0x4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   1c566:	6898      	ldr	r0, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp0_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP0, out);
}
   1c568:	b2c0      	uxtb	r0, r0
   1c56a:	4770      	bx	lr
   1c56c:	40088000 	.word	0x40088000

0001c570 <MP3_DECODER::MP3_DECODER()>:
_ZN11MP3_DECODERC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:5
#include "mp3_decoder.h"

extern MP3_DECODER mp3;

MP3_DECODER::MP3_DECODER()
   1c570:	4a0c      	ldr	r2, [pc, #48]	; (1c5a4 <MP3_DECODER::MP3_DECODER()+0x34>)
   1c572:	4603      	mov	r3, r0
   1c574:	6851      	ldr	r1, [r2, #4]
   1c576:	b510      	push	{r4, lr}
   1c578:	f100 0418 	add.w	r4, r0, #24
   1c57c:	6810      	ldr	r0, [r2, #0]
   1c57e:	c403      	stmia	r4!, {r0, r1}
   1c580:	f852 0f08 	ldr.w	r0, [r2, #8]!
   1c584:	f103 0420 	add.w	r4, r3, #32
   1c588:	6851      	ldr	r1, [r2, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:7
{
    RST = NULL;
   1c58a:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:5
MP3_DECODER::MP3_DECODER()
   1c58c:	c403      	stmia	r4!, {r0, r1}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:7
    RST = NULL;
   1c58e:	609a      	str	r2, [r3, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:8
    DREQ = NULL;
   1c590:	60da      	str	r2, [r3, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:9
    XCS = NULL;
   1c592:	611a      	str	r2, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:10
    XDCS = NULL;
   1c594:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:11
    status.byte = 0;
   1c596:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:12
    sending_cmd = NULL;
   1c598:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:13
    state = STOP;
   1c59a:	2202      	movs	r2, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:14
}
   1c59c:	4618      	mov	r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:13
    state = STOP;
   1c59e:	715a      	strb	r2, [r3, #5]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:14
}
   1c5a0:	bd10      	pop	{r4, pc}
   1c5a2:	bf00      	nop
   1c5a4:	000287d5 	.word	0x000287d5

0001c5a8 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)>:
_ZN11MP3_DECODER7sendSCIEhht():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:79
    return status.init_done;

}

uint16_t MP3_DECODER::sendSCI(uint8_t opcode, uint8_t addr, uint16_t info)
{
   1c5a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c5aa:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:81
    uint8_t data[2];
    if(RST->read() == false)
   1c5ac:	6880      	ldr	r0, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:79
{
   1c5ae:	460f      	mov	r7, r1
   1c5b0:	4614      	mov	r4, r2
   1c5b2:	461e      	mov	r6, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:81
    if(RST->read() == false)
   1c5b4:	f7f8 fae1 	bl	14b7a <GPIO::read() const>
   1c5b8:	b910      	cbnz	r0, 1c5c0 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:83
    {
        RST->setHigh();
   1c5ba:	68a8      	ldr	r0, [r5, #8]
   1c5bc:	f7f8 fae7 	bl	14b8e <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:86
    }

    if((status.init_done == false) || (status.booted == false))
   1c5c0:	792b      	ldrb	r3, [r5, #4]
   1c5c2:	f003 0303 	and.w	r3, r3, #3
   1c5c6:	2b03      	cmp	r3, #3
   1c5c8:	d004      	beq.n	1c5d4 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:88
    {
        printf("WARNING: MUST INIT AND BOOT FIRST!\n");
   1c5ca:	4816      	ldr	r0, [pc, #88]	; (1c624 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)+0x7c>)
   1c5cc:	f004 f9a2 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:89
        return 0;
   1c5d0:	2000      	movs	r0, #0
   1c5d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:91
    }
    printf("SEND");
   1c5d4:	4814      	ldr	r0, [pc, #80]	; (1c628 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)+0x80>)
   1c5d6:	f004 f929 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:93

    XCS->setLow();
   1c5da:	6928      	ldr	r0, [r5, #16]
   1c5dc:	f7f8 fadd 	bl	14b9a <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:94
    ssp0_exchange_byte(opcode);
   1c5e0:	4638      	mov	r0, r7
   1c5e2:	f7ff ffbb 	bl	1c55c <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:95
    ssp0_exchange_byte(addr);
   1c5e6:	4620      	mov	r0, r4
   1c5e8:	f7ff ffb8 	bl	1c55c <ssp0_exchange_byte>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:96
    data[0] = ssp0_exchange_byte(info >> 8);
   1c5ec:	0a30      	lsrs	r0, r6, #8
   1c5ee:	f7ff ffb5 	bl	1c55c <ssp0_exchange_byte>
   1c5f2:	4607      	mov	r7, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:97
    data[1] = ssp0_exchange_byte(info & 0xFF);
   1c5f4:	b2f0      	uxtb	r0, r6
   1c5f6:	f7ff ffb1 	bl	1c55c <ssp0_exchange_byte>
   1c5fa:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:98
    XCS->setHigh();
   1c5fc:	6928      	ldr	r0, [r5, #16]
   1c5fe:	f7f8 fac6 	bl	14b8e <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:100

    printf(" :: ");
   1c602:	480a      	ldr	r0, [pc, #40]	; (1c62c <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)+0x84>)
   1c604:	f004 f912 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:102

    delay_ms(1);
   1c608:	2001      	movs	r0, #1
   1c60a:	f7fa fab4 	bl	16b76 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:103
    xSemaphoreTake(sending_cmd, portMAX_DELAY);
   1c60e:	2300      	movs	r3, #0
   1c610:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1c614:	4619      	mov	r1, r3
   1c616:	6828      	ldr	r0, [r5, #0]
   1c618:	f7fc fcf2 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:105

    return ((data[0] << 8) | data[1]);
   1c61c:	ea44 2007 	orr.w	r0, r4, r7, lsl #8
   1c620:	b280      	uxth	r0, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:106
}
   1c622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c624:	0002884a 	.word	0x0002884a
   1c628:	0002886d 	.word	0x0002886d
   1c62c:	00028a76 	.word	0x00028a76

0001c630 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)>:
_ZN11MP3_DECODER4initEP4GPIOS1_S1_S1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:17
{
   1c630:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1c634:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:18
    printf("MP3 INIT_START :: ");
   1c636:	4851      	ldr	r0, [pc, #324]	; (1c77c <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x14c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:17
{
   1c638:	460e      	mov	r6, r1
   1c63a:	4690      	mov	r8, r2
   1c63c:	461f      	mov	r7, r3
   1c63e:	9d08      	ldr	r5, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:18
    printf("MP3 INIT_START :: ");
   1c640:	f004 f8f4 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:20
    sending_cmd = xSemaphoreCreateBinary();
   1c644:	2203      	movs	r2, #3
   1c646:	2100      	movs	r1, #0
   1c648:	2001      	movs	r0, #1
   1c64a:	f7fc fbaf 	bl	18dac <xQueueGenericCreate>
   1c64e:	4681      	mov	r9, r0
   1c650:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:21
    if(sending_cmd == NULL)
   1c652:	b928      	cbnz	r0, 1c660 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:23
        printf("SEMPHR_DOWN :: ");
   1c654:	484a      	ldr	r0, [pc, #296]	; (1c780 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x150>)
   1c656:	f004 f8e9 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:24
        return false;
   1c65a:	4648      	mov	r0, r9
   1c65c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:26
    printf("SEMPHR_UP :: ");
   1c660:	4848      	ldr	r0, [pc, #288]	; (1c784 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x154>)
   1c662:	f004 f8e3 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:28
    RST = rst;
   1c666:	60a6      	str	r6, [r4, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:29
    DREQ = dreq;
   1c668:	f8c4 800c 	str.w	r8, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:30
    XCS = cs;
   1c66c:	6127      	str	r7, [r4, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:31
    XDCS = xdcs;
   1c66e:	6165      	str	r5, [r4, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:33
    if(RST == NULL || DREQ == NULL || XCS == NULL || XDCS == NULL)
   1c670:	2e00      	cmp	r6, #0
   1c672:	d076      	beq.n	1c762 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x132>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:33 (discriminator 1)
   1c674:	f1b8 0f00 	cmp.w	r8, #0
   1c678:	d076      	beq.n	1c768 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:33 (discriminator 2)
   1c67a:	2f00      	cmp	r7, #0
   1c67c:	d077      	beq.n	1c76e <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x13e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:33 (discriminator 3)
   1c67e:	2d00      	cmp	r5, #0
   1c680:	d078      	beq.n	1c774 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x144>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:38
    RST->setAsOutput();
   1c682:	4630      	mov	r0, r6
   1c684:	f7f8 fa71 	bl	14b6a <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:39
    XCS->setAsOutput();
   1c688:	6920      	ldr	r0, [r4, #16]
   1c68a:	f7f8 fa6e 	bl	14b6a <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:40
    XDCS->setAsOutput();
   1c68e:	6960      	ldr	r0, [r4, #20]
   1c690:	f7f8 fa6b 	bl	14b6a <GPIO::setAsOutput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:41
    DREQ->setAsInput();
   1c694:	68e0      	ldr	r0, [r4, #12]
   1c696:	f7f8 fa5f 	bl	14b58 <GPIO::setAsInput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:43
    RST->setLow();
   1c69a:	68a0      	ldr	r0, [r4, #8]
   1c69c:	f7f8 fa7d 	bl	14b9a <GPIO::setLow()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:44
    XCS->setHigh();
   1c6a0:	6920      	ldr	r0, [r4, #16]
   1c6a2:	f7f8 fa74 	bl	14b8e <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:45
    XDCS->setHigh();
   1c6a6:	6960      	ldr	r0, [r4, #20]
   1c6a8:	f7f8 fa71 	bl	14b8e <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:47
    printf("PIN_SET :: ");
   1c6ac:	4836      	ldr	r0, [pc, #216]	; (1c788 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x158>)
   1c6ae:	f004 f8bd 	bl	2082c <iprintf>
ssp0_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:42
    lpc_pconp(pconp_ssp0, true);
   1c6b2:	2101      	movs	r1, #1
   1c6b4:	2015      	movs	r0, #21
   1c6b6:	f7f4 f931 	bl	1091c <lpc_pconp>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   1c6ba:	2101      	movs	r1, #1
   1c6bc:	2015      	movs	r0, #21
   1c6be:	f7f4 f947 	bl	10950 <lpc_pclk>
ssp_init():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1c6c2:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   1c6c4:	2307      	movs	r3, #7
   1c6c6:	4e31      	ldr	r6, [pc, #196]	; (1c78c <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x15c>)
   1c6c8:	6033      	str	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   1c6ca:	6075      	str	r5, [r6, #4]
ssp_set_max_clock():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   1c6cc:	f7f4 f874 	bl	107b8 <sys_get_cpu_clock>
   1c6d0:	4b2f      	ldr	r3, [pc, #188]	; (1c790 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x160>)
   1c6d2:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   1c6d6:	fbb0 f2f5 	udiv	r2, r0, r5
   1c6da:	2a01      	cmp	r2, #1
   1c6dc:	d904      	bls.n	1c6e8 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0xb8>
   1c6de:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   1c6e2:	d001      	beq.n	1c6e8 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0xb8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   1c6e4:	3502      	adds	r5, #2
   1c6e6:	e7f6      	b.n	1c6d6 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0xa6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   1c6e8:	6135      	str	r5, [r6, #16]
_ZN11MP3_DECODER4initEP4GPIOS1_S1_S1_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:51
    printf("SPI_SET :: ");
   1c6ea:	482a      	ldr	r0, [pc, #168]	; (1c794 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x164>)
   1c6ec:	f004 f89e 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:53
    RST->setHigh();
   1c6f0:	68a0      	ldr	r0, [r4, #8]
   1c6f2:	f7f8 fa4c 	bl	14b8e <GPIO::setHigh()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:55
    status.init_done = true;
   1c6f6:	7923      	ldrb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:57
    printf("BOOT");
   1c6f8:	4827      	ldr	r0, [pc, #156]	; (1c798 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x168>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:55
    status.init_done = true;
   1c6fa:	f043 0301 	orr.w	r3, r3, #1
   1c6fe:	7123      	strb	r3, [r4, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:57
    printf("BOOT");
   1c700:	f004 f894 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:58
    if(xSemaphoreTake(sending_cmd, NULL))
   1c704:	2300      	movs	r3, #0
   1c706:	6820      	ldr	r0, [r4, #0]
   1c708:	461a      	mov	r2, r3
   1c70a:	4619      	mov	r1, r3
   1c70c:	f7fc fc78 	bl	19000 <xQueueGenericReceive>
   1c710:	b328      	cbz	r0, 1c75e <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x12e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:60
        printf("ED :: ");
   1c712:	4822      	ldr	r0, [pc, #136]	; (1c79c <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x16c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:64
        printf(" INCOMPLETE :: ");
   1c714:	f004 f88a 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:67
    sendSCI(SCI_WRITE, SCI_MODE, ((1<<5)| 0x0810));
   1c718:	f44f 6303 	mov.w	r3, #2096	; 0x830
   1c71c:	2200      	movs	r2, #0
   1c71e:	2102      	movs	r1, #2
   1c720:	4620      	mov	r0, r4
   1c722:	f7ff ff41 	bl	1c5a8 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:68
    delay_ms(5);
   1c726:	2005      	movs	r0, #5
   1c728:	f7fa fa25 	bl	16b76 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:69
    sendSCI(SCI_WRITE, SCI_CLKF, 0x6000);
   1c72c:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
   1c730:	2203      	movs	r2, #3
   1c732:	2102      	movs	r1, #2
   1c734:	4620      	mov	r0, r4
   1c736:	f7ff ff37 	bl	1c5a8 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:70
    delay_ms(5);
   1c73a:	2005      	movs	r0, #5
   1c73c:	f7fa fa1b 	bl	16b76 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:71
    sendSCI(SCI_WRITE, SCI_AUDATA, 0xAC45);
   1c740:	f64a 4345 	movw	r3, #44101	; 0xac45
   1c744:	2205      	movs	r2, #5
   1c746:	2102      	movs	r1, #2
   1c748:	4620      	mov	r0, r4
   1c74a:	f7ff ff2d 	bl	1c5a8 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:72
    delay_ms(5);
   1c74e:	2005      	movs	r0, #5
   1c750:	f7fa fa11 	bl	16b76 <delay_ms>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:74
    return status.init_done;
   1c754:	7920      	ldrb	r0, [r4, #4]
   1c756:	f000 0001 	and.w	r0, r0, #1
   1c75a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:64
        printf(" INCOMPLETE :: ");
   1c75e:	4810      	ldr	r0, [pc, #64]	; (1c7a0 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0x170>)
   1c760:	e7d8      	b.n	1c714 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:35
        return false;
   1c762:	4630      	mov	r0, r6
   1c764:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1c768:	4640      	mov	r0, r8
   1c76a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1c76e:	4638      	mov	r0, r7
   1c770:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1c774:	4628      	mov	r0, r5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:76
}
   1c776:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1c77a:	bf00      	nop
   1c77c:	000287e5 	.word	0x000287e5
   1c780:	000287f8 	.word	0x000287f8
   1c784:	00028808 	.word	0x00028808
   1c788:	00028816 	.word	0x00028816
   1c78c:	40088000 	.word	0x40088000
   1c790:	000f4240 	.word	0x000f4240
   1c794:	00028822 	.word	0x00028822
   1c798:	0002882e 	.word	0x0002882e
   1c79c:	00028833 	.word	0x00028833
   1c7a0:	0002883a 	.word	0x0002883a

0001c7a4 <MP3_DECODER::sendSDI(unsigned char*, unsigned int)>:
_ZN11MP3_DECODER7sendSDIEPhj():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:109

bool MP3_DECODER::sendSDI(uint8_t info[], unsigned int size)
{
   1c7a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c7a6:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:110
    if(status.init_done == false)
   1c7a8:	7900      	ldrb	r0, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:109
{
   1c7aa:	460f      	mov	r7, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:110
    if(status.init_done == false)
   1c7ac:	f010 0401 	ands.w	r4, r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:109
{
   1c7b0:	4616      	mov	r6, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:110
    if(status.init_done == false)
   1c7b2:	d104      	bne.n	1c7be <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:112
    {
        printf("WARNING: MP3 NOT INITIALIZED.\n");
   1c7b4:	4812      	ldr	r0, [pc, #72]	; (1c800 <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x5c>)
   1c7b6:	f004 f8ad 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:113
        return false;
   1c7ba:	4620      	mov	r0, r4
   1c7bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:116
    }

    XDCS->setLow();
   1c7be:	6968      	ldr	r0, [r5, #20]
   1c7c0:	f7f8 f9eb 	bl	14b9a <GPIO::setLow()>
   1c7c4:	463c      	mov	r4, r7
   1c7c6:	443e      	add	r6, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:117
    for(int i = 0; i < size; i++)
   1c7c8:	42b4      	cmp	r4, r6
   1c7ca:	eba4 0307 	sub.w	r3, r4, r7
   1c7ce:	d011      	beq.n	1c7f4 <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x50>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:119
    {
        if((i%32) == 0)
   1c7d0:	f013 031f 	ands.w	r3, r3, #31
   1c7d4:	d109      	bne.n	1c7ea <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:121
        {
            if(!xSemaphoreTake(sending_cmd, NULL))
   1c7d6:	461a      	mov	r2, r3
   1c7d8:	4619      	mov	r1, r3
   1c7da:	6828      	ldr	r0, [r5, #0]
   1c7dc:	f7fc fc10 	bl	19000 <xQueueGenericReceive>
   1c7e0:	b918      	cbnz	r0, 1c7ea <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x46>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:123
            {
                delay_us(500);
   1c7e2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   1c7e6:	f7fa f9b1 	bl	16b4c <delay_us>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:126
            }
        }
        ssp0_exchange_byte(info[i]);
   1c7ea:	f814 0b01 	ldrb.w	r0, [r4], #1
   1c7ee:	f7ff feb5 	bl	1c55c <ssp0_exchange_byte>
   1c7f2:	e7e9      	b.n	1c7c8 <MP3_DECODER::sendSDI(unsigned char*, unsigned int)+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:129

    }
    XDCS->setHigh();
   1c7f4:	6968      	ldr	r0, [r5, #20]
   1c7f6:	f7f8 f9ca 	bl	14b8e <GPIO::setHigh()>
   1c7fa:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:132

    return true;
}
   1c7fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c7fe:	bf00      	nop
   1c800:	00028872 	.word	0x00028872

0001c804 <d_req_int_handler()>:
_Z17d_req_int_handlerv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:136

void d_req_int_handler()
{
    mp3.status.booted = 1;
   1c804:	4b04      	ldr	r3, [pc, #16]	; (1c818 <d_req_int_handler()+0x14>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:137
    xSemaphoreGiveFromISR(mp3.sending_cmd, NULL);
   1c806:	2100      	movs	r1, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:136
    mp3.status.booted = 1;
   1c808:	791a      	ldrb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:137
    xSemaphoreGiveFromISR(mp3.sending_cmd, NULL);
   1c80a:	6818      	ldr	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:136
    mp3.status.booted = 1;
   1c80c:	f042 0202 	orr.w	r2, r2, #2
   1c810:	711a      	strb	r2, [r3, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:137
    xSemaphoreGiveFromISR(mp3.sending_cmd, NULL);
   1c812:	f7fc bbc1 	b.w	18f98 <xQueueGiveFromISR>
   1c816:	bf00      	nop
   1c818:	2007c8dc 	.word	0x2007c8dc

0001c81c <MP3_DECODER::setVolume(unsigned char, unsigned char)>:
_ZN11MP3_DECODER9setVolumeEhh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/mp3_decoder.cpp:142
}

void MP3_DECODER::setVolume(uint8_t left, uint8_t right)
{
    sendSCI(SCI_WRITE, SCI_VOLUME, ((left << 8) | right));
   1c81c:	ea42 2301 	orr.w	r3, r2, r1, lsl #8
   1c820:	220b      	movs	r2, #11
   1c822:	2102      	movs	r1, #2
   1c824:	f7ff bec0 	b.w	1c5a8 <MP3_DECODER::sendSCI(unsigned char, unsigned char, unsigned short)>

0001c828 <SONG_NODE::SONG_NODE()>:
_ZN9SONG_NODEC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:3
#include "song_database.h"

SONG_NODE::SONG_NODE()
   1c828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
_ZN11SONG_HEADERC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:11
#include <stdio.h>
#include <stdint.h>

bool print_fresult_msg(FRESULT op_result);

struct SONG_HEADER{
   1c82a:	2500      	movs	r5, #0
   1c82c:	261e      	movs	r6, #30
_ZN9SONG_NODEC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:3
   1c82e:	4604      	mov	r4, r0
_ZN17SONG_HEADER_EXTRAC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:21
    char year[4] = {0};
    char comment[30] = {0};
    unsigned char genre = 0;
};

struct SONG_HEADER_EXTRA{
   1c830:	273c      	movs	r7, #60	; 0x3c
_ZN11SONG_HEADERC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:11
struct SONG_HEADER{
   1c832:	8645      	strh	r5, [r0, #50]	; 0x32
   1c834:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
   1c838:	4632      	mov	r2, r6
   1c83a:	4629      	mov	r1, r5
   1c83c:	3035      	adds	r0, #53	; 0x35
   1c83e:	f002 fe49 	bl	1f4d4 <memset>
   1c842:	4632      	mov	r2, r6
   1c844:	4629      	mov	r1, r5
   1c846:	f104 0053 	add.w	r0, r4, #83	; 0x53
   1c84a:	f002 fe43 	bl	1f4d4 <memset>
   1c84e:	4632      	mov	r2, r6
   1c850:	4629      	mov	r1, r5
   1c852:	f104 0071 	add.w	r0, r4, #113	; 0x71
   1c856:	f002 fe3d 	bl	1f4d4 <memset>
   1c85a:	4632      	mov	r2, r6
   1c85c:	4629      	mov	r1, r5
   1c85e:	f8c4 508f 	str.w	r5, [r4, #143]	; 0x8f
   1c862:	f104 0093 	add.w	r0, r4, #147	; 0x93
   1c866:	f002 fe35 	bl	1f4d4 <memset>
_ZN17SONG_HEADER_EXTRAC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:21
struct SONG_HEADER_EXTRA{
   1c86a:	463a      	mov	r2, r7
   1c86c:	4629      	mov	r1, r5
_ZN11SONG_HEADERC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:11
struct SONG_HEADER{
   1c86e:	f884 50b1 	strb.w	r5, [r4, #177]	; 0xb1
_ZN17SONG_HEADER_EXTRAC4Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.h:21
struct SONG_HEADER_EXTRA{
   1c872:	f8c4 50b2 	str.w	r5, [r4, #178]	; 0xb2
   1c876:	f104 00b6 	add.w	r0, r4, #182	; 0xb6
   1c87a:	f002 fe2b 	bl	1f4d4 <memset>
   1c87e:	463a      	mov	r2, r7
   1c880:	4629      	mov	r1, r5
   1c882:	f104 00f2 	add.w	r0, r4, #242	; 0xf2
   1c886:	f002 fe25 	bl	1f4d4 <memset>
   1c88a:	463a      	mov	r2, r7
   1c88c:	4629      	mov	r1, r5
   1c88e:	f504 7097 	add.w	r0, r4, #302	; 0x12e
   1c892:	f002 fe1f 	bl	1f4d4 <memset>
   1c896:	4632      	mov	r2, r6
   1c898:	4629      	mov	r1, r5
   1c89a:	f884 516a 	strb.w	r5, [r4, #362]	; 0x16a
   1c89e:	f204 106b 	addw	r0, r4, #363	; 0x16b
   1c8a2:	f002 fe17 	bl	1f4d4 <memset>
   1c8a6:	f8c4 5189 	str.w	r5, [r4, #393]	; 0x189
   1c8aa:	f8a4 518d 	strh.w	r5, [r4, #397]	; 0x18d
   1c8ae:	f8c4 518f 	str.w	r5, [r4, #399]	; 0x18f
   1c8b2:	f8a4 5193 	strh.w	r5, [r4, #403]	; 0x193
_ZN9SONG_NODEC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:5
{
	sprintf(FILE_NAME,"\0");
   1c8b6:	4905      	ldr	r1, [pc, #20]	; (1c8cc <SONG_NODE::SONG_NODE()+0xa4>)
   1c8b8:	4620      	mov	r0, r4
   1c8ba:	f004 fb89 	bl	20fd0 <strcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:6
	NEXT = NULL;
   1c8be:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:7
	PREV = NULL;
   1c8c2:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:8
}
   1c8c6:	4620      	mov	r0, r4
   1c8c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c8ca:	bf00      	nop
   1c8cc:	00028890 	.word	0x00028890

0001c8d0 <SONG_NODE::get_song_title()>:
_ZN9SONG_NODE14get_song_titleEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:22
	return SONG_INFO.identification;
}

char* SONG_NODE::get_song_title(void)
{
	if((SONG_INFO_EXTRA.header == "TAG+") && (SONG_INFO_EXTRA.title[0] != 0))
   1c8d0:	4b06      	ldr	r3, [pc, #24]	; (1c8ec <SONG_NODE::get_song_title()+0x1c>)
   1c8d2:	4298      	cmp	r0, r3
   1c8d4:	d104      	bne.n	1c8e0 <SONG_NODE::get_song_title()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:22 (discriminator 1)
   1c8d6:	f890 30b6 	ldrb.w	r3, [r0, #182]	; 0xb6
   1c8da:	b10b      	cbz	r3, 1c8e0 <SONG_NODE::get_song_title()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:24
	{
	    return SONG_INFO_EXTRA.title;
   1c8dc:	30b6      	adds	r0, #182	; 0xb6
   1c8de:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:26
	}
	else if(SONG_INFO.title[0] != 0)
   1c8e0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
   1c8e4:	b103      	cbz	r3, 1c8e8 <SONG_NODE::get_song_title()+0x18>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:28
	{
	    return SONG_INFO.title;
   1c8e6:	3035      	adds	r0, #53	; 0x35
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:31
	}
    return FILE_NAME;
}
   1c8e8:	4770      	bx	lr
   1c8ea:	bf00      	nop
   1c8ec:	000289a4 	.word	0x000289a4

0001c8f0 <SONG_NODE::get_next()>:
_ZN9SONG_NODE8get_nextEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:61
} 

SONG_NODE* SONG_NODE::get_next(void)
{
    return NEXT;
}
   1c8f0:	f8d0 0198 	ldr.w	r0, [r0, #408]	; 0x198
   1c8f4:	4770      	bx	lr

0001c8f6 <SONG_NODE::get_prev()>:
_ZN9SONG_NODE8get_prevEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:66

SONG_NODE* SONG_NODE::get_prev(void)
{
    return PREV;
}
   1c8f6:	f8d0 019c 	ldr.w	r0, [r0, #412]	; 0x19c
   1c8fa:	4770      	bx	lr

0001c8fc <SONG_NODE::get_file_name()>:
_ZN9SONG_NODE13get_file_nameEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:106
}

char* SONG_NODE::get_file_name(void)
{
    return FILE_NAME;
}
   1c8fc:	4770      	bx	lr

0001c8fe <SONG_DATABASE::SONG_DATABASE()>:
_ZN13SONG_DATABASEC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:125
    PREV = prev;
}

SONG_DATABASE::SONG_DATABASE()
{
	HEAD = NULL;
   1c8fe:	2200      	movs	r2, #0
   1c900:	6002      	str	r2, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:126
	TAIL = NULL;
   1c902:	6042      	str	r2, [r0, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:127
	number_of_songs_found = 0;
   1c904:	6082      	str	r2, [r0, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:128
}
   1c906:	4770      	bx	lr

0001c908 <SONG_DATABASE::get_head()>:
_ZN13SONG_DATABASE8get_headEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:214
}

SONG_NODE* SONG_DATABASE::get_head()
{
    return HEAD;
}
   1c908:	6800      	ldr	r0, [r0, #0]
   1c90a:	4770      	bx	lr

0001c90c <print_fresult_msg(FRESULT)>:
_Z17print_fresult_msg7FRESULT():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:234
    TAIL = tail;
    return;
}

bool print_fresult_msg(FRESULT op_result)
{
   1c90c:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:235
    switch(op_result)
   1c90e:	2812      	cmp	r0, #18
   1c910:	d82a      	bhi.n	1c968 <print_fresult_msg(FRESULT)+0x5c>
   1c912:	e8df f000 	tbb	[pc, r0]
   1c916:	0a2b      	.short	0x0a2b
   1c918:	1513110f 	.word	0x1513110f
   1c91c:	1b291917 	.word	0x1b291917
   1c920:	23211f29 	.word	0x23211f29
   1c924:	25291d29 	.word	0x25291d29
   1c928:	27          	.byte	0x27
   1c929:	00          	.byte	0x00
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:241
    {
        case FR_OK:
            return true;
            break;
        case FR_DISK_ERR:
            printf("File Error: DISK_ERR.\n");
   1c92a:	4811      	ldr	r0, [pc, #68]	; (1c970 <print_fresult_msg(FRESULT)+0x64>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:280
            break;
        case FR_NOT_ENOUGH_CORE:
            printf("File Error: NOT_ENOUGH_CORE.\n");
            break;
        case FR_TOO_MANY_OPEN_FILES:
            printf("File Error: TOO_MANY_OPEN_FILES.\n");
   1c92c:	f003 fff2 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:286
            break;
        default:
            printf("File Error: Invalid FRESULT return.\n");
            break;
    }
    return false;
   1c930:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:281
            break;
   1c932:	bd08      	pop	{r3, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:244
            printf("File Error: INT_ERR.\n");
   1c934:	480f      	ldr	r0, [pc, #60]	; (1c974 <print_fresult_msg(FRESULT)+0x68>)
   1c936:	e7f9      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:247
            printf("File Error: NOT_READY.\n");
   1c938:	480f      	ldr	r0, [pc, #60]	; (1c978 <print_fresult_msg(FRESULT)+0x6c>)
   1c93a:	e7f7      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:250
            printf("FILE ERROR: NO_FILE.\n");
   1c93c:	480f      	ldr	r0, [pc, #60]	; (1c97c <print_fresult_msg(FRESULT)+0x70>)
   1c93e:	e7f5      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:253
            printf("File Error: NO_PATH.\n");
   1c940:	480f      	ldr	r0, [pc, #60]	; (1c980 <print_fresult_msg(FRESULT)+0x74>)
   1c942:	e7f3      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:256
            printf("File Error: INVALID_NAME.\n");
   1c944:	480f      	ldr	r0, [pc, #60]	; (1c984 <print_fresult_msg(FRESULT)+0x78>)
   1c946:	e7f1      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:259
            printf("File Error: Permission DENIED.\n");
   1c948:	480f      	ldr	r0, [pc, #60]	; (1c988 <print_fresult_msg(FRESULT)+0x7c>)
   1c94a:	e7ef      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:262
            printf("File Error: INVALID_OBJECT.\n");
   1c94c:	480f      	ldr	r0, [pc, #60]	; (1c98c <print_fresult_msg(FRESULT)+0x80>)
   1c94e:	e7ed      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:265
            printf("File Error: TIMEOUT.\n");
   1c950:	480f      	ldr	r0, [pc, #60]	; (1c990 <print_fresult_msg(FRESULT)+0x84>)
   1c952:	e7eb      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:268
            printf("File Error: INVALID_DRIVE.\n");
   1c954:	480f      	ldr	r0, [pc, #60]	; (1c994 <print_fresult_msg(FRESULT)+0x88>)
   1c956:	e7e9      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:271
            printf("File Error: NOT_ENABLED.\n");
   1c958:	480f      	ldr	r0, [pc, #60]	; (1c998 <print_fresult_msg(FRESULT)+0x8c>)
   1c95a:	e7e7      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:274
            printf("File Error: NO_FILESYSTEM.\n");
   1c95c:	480f      	ldr	r0, [pc, #60]	; (1c99c <print_fresult_msg(FRESULT)+0x90>)
   1c95e:	e7e5      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:277
            printf("File Error: NOT_ENOUGH_CORE.\n");
   1c960:	480f      	ldr	r0, [pc, #60]	; (1c9a0 <print_fresult_msg(FRESULT)+0x94>)
   1c962:	e7e3      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:280
            printf("File Error: TOO_MANY_OPEN_FILES.\n");
   1c964:	480f      	ldr	r0, [pc, #60]	; (1c9a4 <print_fresult_msg(FRESULT)+0x98>)
   1c966:	e7e1      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:283
            printf("File Error: Invalid FRESULT return.\n");
   1c968:	480f      	ldr	r0, [pc, #60]	; (1c9a8 <print_fresult_msg(FRESULT)+0x9c>)
   1c96a:	e7df      	b.n	1c92c <print_fresult_msg(FRESULT)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:238
            return true;
   1c96c:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:287
}
   1c96e:	bd08      	pop	{r3, pc}
   1c970:	00028892 	.word	0x00028892
   1c974:	000288a8 	.word	0x000288a8
   1c978:	000288bd 	.word	0x000288bd
   1c97c:	000288d4 	.word	0x000288d4
   1c980:	000288e9 	.word	0x000288e9
   1c984:	000288fe 	.word	0x000288fe
   1c988:	00028918 	.word	0x00028918
   1c98c:	00028937 	.word	0x00028937
   1c990:	00028953 	.word	0x00028953
   1c994:	00028968 	.word	0x00028968
   1c998:	00028983 	.word	0x00028983
   1c99c:	0002899c 	.word	0x0002899c
   1c9a0:	000289b7 	.word	0x000289b7
   1c9a4:	000289d4 	.word	0x000289d4
   1c9a8:	000289f5 	.word	0x000289f5

0001c9ac <SONG_NODE::import_song_info()>:
_ZN9SONG_NODE16import_song_infoEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:69
{
   1c9ac:	b510      	push	{r4, lr}
   1c9ae:	f5ad 7d1a 	sub.w	sp, sp, #616	; 0x268
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:75
    snprintf(file_path, sizeof(file_path),"1:%s",FILE_NAME);
   1c9b2:	4603      	mov	r3, r0
   1c9b4:	4a1d      	ldr	r2, [pc, #116]	; (1ca2c <SONG_NODE::import_song_info()+0x80>)
   1c9b6:	213c      	movs	r1, #60	; 0x3c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:69
{
   1c9b8:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:75
    snprintf(file_path, sizeof(file_path),"1:%s",FILE_NAME);
   1c9ba:	a802      	add	r0, sp, #8
   1c9bc:	f004 f9fc 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:76
    printf("OPEN :: ");
   1c9c0:	481b      	ldr	r0, [pc, #108]	; (1ca30 <SONG_NODE::import_song_info()+0x84>)
   1c9c2:	f003 ff33 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:77
    op_result = f_open(&file_object, file_path, FA_READ);
   1c9c6:	2201      	movs	r2, #1
   1c9c8:	a902      	add	r1, sp, #8
   1c9ca:	a811      	add	r0, sp, #68	; 0x44
   1c9cc:	f7f6 f920 	bl	12c10 <f_open>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:78
    if(print_fresult_msg(op_result))
   1c9d0:	f7ff ff9c 	bl	1c90c <print_fresult_msg(FRESULT)>
   1c9d4:	b180      	cbz	r0, 1c9f8 <SONG_NODE::import_song_info()+0x4c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:80
        printf("SEEK :: ");
   1c9d6:	4817      	ldr	r0, [pc, #92]	; (1ca34 <SONG_NODE::import_song_info()+0x88>)
   1c9d8:	f003 ff28 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:81
        op_result = f_lseek(&file_object, (f_size(&file_object) - 128 - 227));
   1c9dc:	f46f 73b1 	mvn.w	r3, #354	; 0x162
   1c9e0:	9914      	ldr	r1, [sp, #80]	; 0x50
   1c9e2:	a811      	add	r0, sp, #68	; 0x44
   1c9e4:	4419      	add	r1, r3
   1c9e6:	f7f6 fb8f 	bl	13108 <f_lseek>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:82
        if(print_fresult_msg(op_result))
   1c9ea:	f7ff ff8f 	bl	1c90c <print_fresult_msg(FRESULT)>
   1c9ee:	b930      	cbnz	r0, 1c9fe <SONG_NODE::import_song_info()+0x52>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:92
        f_close(&file_object);
   1c9f0:	a811      	add	r0, sp, #68	; 0x44
   1c9f2:	f7f6 fb77 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:94
    return false;
   1c9f6:	2000      	movs	r0, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:95
}
   1c9f8:	f50d 7d1a 	add.w	sp, sp, #616	; 0x268
   1c9fc:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:84
            printf("READ :: ");
   1c9fe:	480e      	ldr	r0, [pc, #56]	; (1ca38 <SONG_NODE::import_song_info()+0x8c>)
   1ca00:	f003 ff14 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:85
            op_result = f_read(&file_object, &SONG_INFO_EXTRA, sizeof(SONG_INFO_EXTRA) , &amount_read);
   1ca04:	ab01      	add	r3, sp, #4
   1ca06:	22e3      	movs	r2, #227	; 0xe3
   1ca08:	f104 01b2 	add.w	r1, r4, #178	; 0xb2
   1ca0c:	a811      	add	r0, sp, #68	; 0x44
   1ca0e:	f7f6 f996 	bl	12d3e <f_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:86
            op_result = f_read(&file_object, &SONG_INFO, sizeof(SONG_INFO) , &amount_read);
   1ca12:	ab01      	add	r3, sp, #4
   1ca14:	2280      	movs	r2, #128	; 0x80
   1ca16:	f104 0132 	add.w	r1, r4, #50	; 0x32
   1ca1a:	a811      	add	r0, sp, #68	; 0x44
   1ca1c:	f7f6 f98f 	bl	12d3e <f_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:87
            if(print_fresult_msg(op_result))
   1ca20:	f7ff ff74 	bl	1c90c <print_fresult_msg(FRESULT)>
   1ca24:	2800      	cmp	r0, #0
   1ca26:	d0e3      	beq.n	1c9f0 <SONG_NODE::import_song_info()+0x44>
   1ca28:	e7e6      	b.n	1c9f8 <SONG_NODE::import_song_info()+0x4c>
   1ca2a:	bf00      	nop
   1ca2c:	00028a5b 	.word	0x00028a5b
   1ca30:	00028a60 	.word	0x00028a60
   1ca34:	00028a69 	.word	0x00028a69
   1ca38:	00028a72 	.word	0x00028a72

0001ca3c <SONG_NODE::import_song_info(char*)>:
_ZN9SONG_NODE16import_song_infoEPc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:98
{
   1ca3c:	b510      	push	{r4, lr}
   1ca3e:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:99
    snprintf(FILE_NAME, sizeof(FILE_NAME), "%s", file_name);
   1ca40:	460b      	mov	r3, r1
   1ca42:	4a04      	ldr	r2, [pc, #16]	; (1ca54 <SONG_NODE::import_song_info(char*)+0x18>)
   1ca44:	2132      	movs	r1, #50	; 0x32
   1ca46:	f004 f9b7 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:100
    return import_song_info();
   1ca4a:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:101
}
   1ca4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:100
    return import_song_info();
   1ca50:	f7ff bfac 	b.w	1c9ac <SONG_NODE::import_song_info()>
   1ca54:	00028af9 	.word	0x00028af9

0001ca58 <SONG_DATABASE::import_songs(char*)>:
_ZN13SONG_DATABASE12import_songsEPc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:131
{
   1ca58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ca5c:	4605      	mov	r5, r0
   1ca5e:	b09e      	sub	sp, #120	; 0x78
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:132
	SONG_NODE * current = new SONG_NODE;
   1ca60:	f44f 70d0 	mov.w	r0, #416	; 0x1a0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:131
{
   1ca64:	460e      	mov	r6, r1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:132
	SONG_NODE * current = new SONG_NODE;
   1ca66:	f7fa fb41 	bl	170ec <operator new(unsigned int)>
   1ca6a:	4604      	mov	r4, r0
   1ca6c:	f7ff fedc 	bl	1c828 <SONG_NODE::SONG_NODE()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:139
    file_result = f_getlabel("1:", result_buffer, 0);
   1ca70:	2200      	movs	r2, #0
   1ca72:	a911      	add	r1, sp, #68	; 0x44
   1ca74:	4836      	ldr	r0, [pc, #216]	; (1cb50 <SONG_DATABASE::import_songs(char*)+0xf8>)
   1ca76:	f7f6 fe81 	bl	1377c <f_getlabel>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:140
    if(print_fresult_msg(file_result))
   1ca7a:	f7ff ff47 	bl	1c90c <print_fresult_msg(FRESULT)>
   1ca7e:	b118      	cbz	r0, 1ca88 <SONG_DATABASE::import_songs(char*)+0x30>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:142
        printf("LABEL:: %s\n", result_buffer);
   1ca80:	a911      	add	r1, sp, #68	; 0x44
   1ca82:	4834      	ldr	r0, [pc, #208]	; (1cb54 <SONG_DATABASE::import_songs(char*)+0xfc>)
   1ca84:	f003 fed2 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:145
    file_result = f_opendir(&directory, file_path);
   1ca88:	4631      	mov	r1, r6
   1ca8a:	a808      	add	r0, sp, #32
   1ca8c:	f7f6 fbe3 	bl	13256 <f_opendir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:146
    if(print_fresult_msg(file_result))
   1ca90:	f7ff ff3c 	bl	1c90c <print_fresult_msg(FRESULT)>
   1ca94:	4607      	mov	r7, r0
   1ca96:	2800      	cmp	r0, #0
   1ca98:	d056      	beq.n	1cb48 <SONG_DATABASE::import_songs(char*)+0xf0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:148
    	printf("SONG LIST: \n");
   1ca9a:	482f      	ldr	r0, [pc, #188]	; (1cb58 <SONG_DATABASE::import_songs(char*)+0x100>)
   1ca9c:	f003 ff3a 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:136
    int count = 0;
   1caa0:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:157
            else if((strstr(file_info.fname,".MP3") != NULL) || (strstr(file_info.fname,".mp3") != NULL))
   1caa2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 1cb68 <SONG_DATABASE::import_songs(char*)+0x110>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:173
                printf("%d: ", ++count);
   1caa6:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 1cb6c <SONG_DATABASE::import_songs(char*)+0x114>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:174
                printf("%s \n", current->get_song_title());
   1caaa:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 1cb70 <SONG_DATABASE::import_songs(char*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:151
            file_result = f_readdir(&directory, &file_info);
   1caae:	4669      	mov	r1, sp
   1cab0:	a808      	add	r0, sp, #32
   1cab2:	f7f6 fc20 	bl	132f6 <f_readdir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:152
            if((file_result != FR_OK) || (file_info.fname[0] == 0)) break;
   1cab6:	2800      	cmp	r0, #0
   1cab8:	d142      	bne.n	1cb40 <SONG_DATABASE::import_songs(char*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:152 (discriminator 1)
   1caba:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1cabe:	2b00      	cmp	r3, #0
   1cac0:	d03e      	beq.n	1cb40 <SONG_DATABASE::import_songs(char*)+0xe8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:153
            if(file_info.fattrib & AM_DIR)
   1cac2:	f89d 3008 	ldrb.w	r3, [sp, #8]
   1cac6:	06db      	lsls	r3, r3, #27
   1cac8:	d4f1      	bmi.n	1caae <SONG_DATABASE::import_songs(char*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:157
            else if((strstr(file_info.fname,".MP3") != NULL) || (strstr(file_info.fname,".mp3") != NULL))
   1caca:	4641      	mov	r1, r8
   1cacc:	f10d 0009 	add.w	r0, sp, #9
   1cad0:	f004 faef 	bl	210b2 <strstr>
   1cad4:	b928      	cbnz	r0, 1cae2 <SONG_DATABASE::import_songs(char*)+0x8a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:157 (discriminator 1)
   1cad6:	4921      	ldr	r1, [pc, #132]	; (1cb5c <SONG_DATABASE::import_songs(char*)+0x104>)
   1cad8:	f10d 0009 	add.w	r0, sp, #9
   1cadc:	f004 fae9 	bl	210b2 <strstr>
   1cae0:	b310      	cbz	r0, 1cb28 <SONG_DATABASE::import_songs(char*)+0xd0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:159
                if(HEAD == NULL)
   1cae2:	682b      	ldr	r3, [r5, #0]
   1cae4:	b99b      	cbnz	r3, 1cb0e <SONG_DATABASE::import_songs(char*)+0xb6>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:161
                	HEAD = current;
   1cae6:	602c      	str	r4, [r5, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:172
                current->import_song_info(file_info.fname);
   1cae8:	f10d 0109 	add.w	r1, sp, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:169
                	TAIL = current;
   1caec:	606c      	str	r4, [r5, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:172
                current->import_song_info(file_info.fname);
   1caee:	4620      	mov	r0, r4
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:173
                printf("%d: ", ++count);
   1caf0:	3601      	adds	r6, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:172
                current->import_song_info(file_info.fname);
   1caf2:	f7ff ffa3 	bl	1ca3c <SONG_NODE::import_song_info(char*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:173
                printf("%d: ", ++count);
   1caf6:	4631      	mov	r1, r6
   1caf8:	4648      	mov	r0, r9
   1cafa:	f003 fe97 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:174
                printf("%s \n", current->get_song_title());
   1cafe:	4620      	mov	r0, r4
   1cb00:	f7ff fee6 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1cb04:	4601      	mov	r1, r0
   1cb06:	4650      	mov	r0, sl
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:179
                printf("?: %s\n", file_info.fname);
   1cb08:	f003 fe90 	bl	2082c <iprintf>
   1cb0c:	e7cf      	b.n	1caae <SONG_DATABASE::import_songs(char*)+0x56>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:166
                	current = new SONG_NODE;
   1cb0e:	f44f 70d0 	mov.w	r0, #416	; 0x1a0
   1cb12:	f7fa faeb 	bl	170ec <operator new(unsigned int)>
   1cb16:	4604      	mov	r4, r0
   1cb18:	f7ff fe86 	bl	1c828 <SONG_NODE::SONG_NODE()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:167
                	current->set_prev(TAIL);
   1cb1c:	686b      	ldr	r3, [r5, #4]
_ZN9SONG_NODE8set_prevEPS_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:120
    PREV = prev;
   1cb1e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
_ZN9SONG_NODE8set_nextEPS_():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:115
    NEXT = next;
   1cb22:	f8c3 4198 	str.w	r4, [r3, #408]	; 0x198
   1cb26:	e7df      	b.n	1cae8 <SONG_DATABASE::import_songs(char*)+0x90>
_ZN13SONG_DATABASE12import_songsEPc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:176
            else if(strstr(file_info.fname,"?") != NULL)
   1cb28:	213f      	movs	r1, #63	; 0x3f
   1cb2a:	f10d 0009 	add.w	r0, sp, #9
   1cb2e:	f004 fa37 	bl	20fa0 <strchr>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:179
                printf("?: %s\n", file_info.fname);
   1cb32:	f10d 0109 	add.w	r1, sp, #9
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:176
            else if(strstr(file_info.fname,"?") != NULL)
   1cb36:	b108      	cbz	r0, 1cb3c <SONG_DATABASE::import_songs(char*)+0xe4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:179
                printf("?: %s\n", file_info.fname);
   1cb38:	4809      	ldr	r0, [pc, #36]	; (1cb60 <SONG_DATABASE::import_songs(char*)+0x108>)
   1cb3a:	e7e5      	b.n	1cb08 <SONG_DATABASE::import_songs(char*)+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:183
                printf("X: %s\n", file_info.fname);
   1cb3c:	4809      	ldr	r0, [pc, #36]	; (1cb64 <SONG_DATABASE::import_songs(char*)+0x10c>)
   1cb3e:	e7e3      	b.n	1cb08 <SONG_DATABASE::import_songs(char*)+0xb0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:186
        f_closedir(&directory);
   1cb40:	a808      	add	r0, sp, #32
   1cb42:	f7f6 fbcb 	bl	132dc <f_closedir>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:187
        number_of_songs_found = count;
   1cb46:	60ae      	str	r6, [r5, #8]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/song_database.cpp:192
}
   1cb48:	4638      	mov	r0, r7
   1cb4a:	b01e      	add	sp, #120	; 0x78
   1cb4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1cb50:	00028a19 	.word	0x00028a19
   1cb54:	00028a1c 	.word	0x00028a1c
   1cb58:	00028a28 	.word	0x00028a28
   1cb5c:	00028a39 	.word	0x00028a39
   1cb60:	00028a48 	.word	0x00028a48
   1cb64:	00028a4f 	.word	0x00028a4f
   1cb68:	00028a34 	.word	0x00028a34
   1cb6c:	00028a3e 	.word	0x00028a3e
   1cb70:	00028a43 	.word	0x00028a43

0001cb74 <LabGPIOInterrupts::LabGPIOInterrupts()>:
_ZN17LabGPIOInterruptsC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:9
 *  Created on: Jun 18, 2018
 *      Author: Leophin
 */
#include "labgpiointerrupt.h"

LabGPIOInterrupts::LabGPIOInterrupts()
   1cb74:	b510      	push	{r4, lr}
   1cb76:	4604      	mov	r4, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:11
{
    memset(ISRfunction, 0, sizeof(ISRfunction));
   1cb78:	f44f 7280 	mov.w	r2, #256	; 0x100
   1cb7c:	2100      	movs	r1, #0
   1cb7e:	f002 fca9 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:12
}
   1cb82:	4620      	mov	r0, r4
   1cb84:	bd10      	pop	{r4, pc}
   1cb86:	Address 0x000000000001cb86 is out of bounds.


0001cb88 <LabGPIOInterrupts::init()>:
_ZN17LabGPIOInterrupts4initEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   1cb88:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   1cb8c:	4b01      	ldr	r3, [pc, #4]	; (1cb94 <LabGPIOInterrupts::init()+0xc>)
   1cb8e:	601a      	str	r2, [r3, #0]
   1cb90:	4770      	bx	lr
   1cb92:	bf00      	nop
   1cb94:	e000e100 	.word	0xe000e100

0001cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>:
_ZN17LabGPIOInterrupts22attachInterruptHandlerEhmPFvvE20InterruptCondition_E():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:20
{
    NVIC_EnableIRQ(EINT3_IRQn);
}

bool LabGPIOInterrupts::attachInterruptHandler(uint8_t port, uint32_t pin, void (*pin_isr)(void), InterruptCondition_E condition)
{
   1cb98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:22
    //Check Pin
    if(pin < 0 || pin > 32) return false;
   1cb9c:	2a20      	cmp	r2, #32
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:20
{
   1cb9e:	461f      	mov	r7, r3
   1cba0:	4606      	mov	r6, r0
   1cba2:	460c      	mov	r4, r1
   1cba4:	4615      	mov	r5, r2
   1cba6:	f89d 3020 	ldrb.w	r3, [sp, #32]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:22
    if(pin < 0 || pin > 32) return false;
   1cbaa:	d802      	bhi.n	1cbb2 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:25

    //Check PORT
    switch(port)
   1cbac:	b119      	cbz	r1, 1cbb6 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x1e>
   1cbae:	2902      	cmp	r1, #2
   1cbb0:	d03b      	beq.n	1cc2a <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:65
                case both_edges:
                    LPC_GPIOINT->IO2IntEnR |= (1 << pin);
                    LPC_GPIOINT->IO2IntEnF |= (1 << pin);
                    break;
                default:
                    return false;
   1cbb2:	2000      	movs	r0, #0
   1cbb4:	e02c      	b.n	1cc10 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x78>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:29
            switch(condition)
   1cbb6:	2b01      	cmp	r3, #1
   1cbb8:	d02d      	beq.n	1cc16 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x7e>
   1cbba:	d307      	bcc.n	1cbcc <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x34>
   1cbbc:	2b02      	cmp	r3, #2
   1cbbe:	d1f8      	bne.n	1cbb2 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:40
                    LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   1cbc0:	2301      	movs	r3, #1
   1cbc2:	4a2a      	ldr	r2, [pc, #168]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cbc4:	40ab      	lsls	r3, r5
   1cbc6:	6911      	ldr	r1, [r2, #16]
   1cbc8:	4319      	orrs	r1, r3
   1cbca:	e029      	b.n	1cc20 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x88>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:32
                    LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   1cbcc:	2201      	movs	r2, #1
   1cbce:	4b27      	ldr	r3, [pc, #156]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cbd0:	40aa      	lsls	r2, r5
   1cbd2:	6919      	ldr	r1, [r3, #16]
   1cbd4:	4311      	orrs	r1, r2
   1cbd6:	6119      	str	r1, [r3, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:33
                    LPC_GPIOINT->IO0IntEnF &= ~(1 << pin);
   1cbd8:	6959      	ldr	r1, [r3, #20]
   1cbda:	ea21 0202 	bic.w	r2, r1, r2
   1cbde:	615a      	str	r2, [r3, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:73
            break;
        default:
            return false;
            break;
    }
    LabGPIO PIN(pin, port);
   1cbe0:	4622      	mov	r2, r4
   1cbe2:	b2e9      	uxtb	r1, r5
   1cbe4:	a801      	add	r0, sp, #4
   1cbe6:	f000 f887 	bl	1ccf8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:77
    PIN.setAsInput();

    //Attach Interrupt to pin
    if(ISRfunction[port][pin] != NULL)
   1cbea:	ea4f 1844 	mov.w	r8, r4, lsl #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:74
    PIN.setAsInput();
   1cbee:	a801      	add	r0, sp, #4
   1cbf0:	f000 f8a2 	bl	1cd38 <LabGPIO::setAsInput()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:77
    if(ISRfunction[port][pin] != NULL)
   1cbf4:	eb08 0305 	add.w	r3, r8, r5
   1cbf8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
   1cbfc:	b123      	cbz	r3, 1cc08 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x70>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:79
    {
        printf("Caution: Port %d Pin %d Interrupt was already set.\n", port, pin);
   1cbfe:	462a      	mov	r2, r5
   1cc00:	4621      	mov	r1, r4
   1cc02:	481b      	ldr	r0, [pc, #108]	; (1cc70 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd8>)
   1cc04:	f003 fe12 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:82
    }
    ISRfunction[port][pin] = pin_isr;
    return true;
   1cc08:	2001      	movs	r0, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:81
    ISRfunction[port][pin] = pin_isr;
   1cc0a:	4445      	add	r5, r8
   1cc0c:	f846 7025 	str.w	r7, [r6, r5, lsl #2]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:83
}
   1cc10:	b002      	add	sp, #8
   1cc12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:36
                    LPC_GPIOINT->IO0IntEnR &= ~(1 << pin);
   1cc16:	4a15      	ldr	r2, [pc, #84]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cc18:	40ab      	lsls	r3, r5
   1cc1a:	6911      	ldr	r1, [r2, #16]
   1cc1c:	ea21 0103 	bic.w	r1, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:40
                    LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   1cc20:	6111      	str	r1, [r2, #16]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:41
                    LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   1cc22:	6951      	ldr	r1, [r2, #20]
   1cc24:	430b      	orrs	r3, r1
   1cc26:	6153      	str	r3, [r2, #20]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:42
                    break;
   1cc28:	e7da      	b.n	1cbe0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:50
            switch(condition)
   1cc2a:	2b01      	cmp	r3, #1
   1cc2c:	d013      	beq.n	1cc56 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xbe>
   1cc2e:	d307      	bcc.n	1cc40 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xa8>
   1cc30:	2b02      	cmp	r3, #2
   1cc32:	d1be      	bne.n	1cbb2 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:61
                    LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   1cc34:	2301      	movs	r3, #1
   1cc36:	4a0d      	ldr	r2, [pc, #52]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cc38:	40ab      	lsls	r3, r5
   1cc3a:	6b11      	ldr	r1, [r2, #48]	; 0x30
   1cc3c:	4319      	orrs	r1, r3
   1cc3e:	e00f      	b.n	1cc60 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xc8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:53
                    LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   1cc40:	2201      	movs	r2, #1
   1cc42:	4b0a      	ldr	r3, [pc, #40]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cc44:	40aa      	lsls	r2, r5
   1cc46:	6b19      	ldr	r1, [r3, #48]	; 0x30
   1cc48:	4311      	orrs	r1, r2
   1cc4a:	6319      	str	r1, [r3, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:54
                    LPC_GPIOINT->IO2IntEnF &= ~(1 << pin);
   1cc4c:	6b59      	ldr	r1, [r3, #52]	; 0x34
   1cc4e:	ea21 0202 	bic.w	r2, r1, r2
   1cc52:	635a      	str	r2, [r3, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:55
                    break;
   1cc54:	e7c4      	b.n	1cbe0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x48>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:57
                    LPC_GPIOINT->IO2IntEnR &= ~(1 << pin);
   1cc56:	4a05      	ldr	r2, [pc, #20]	; (1cc6c <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0xd4>)
   1cc58:	40ab      	lsls	r3, r5
   1cc5a:	6b11      	ldr	r1, [r2, #48]	; 0x30
   1cc5c:	ea21 0103 	bic.w	r1, r1, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:61
                    LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   1cc60:	6311      	str	r1, [r2, #48]	; 0x30
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:62
                    LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   1cc62:	6b51      	ldr	r1, [r2, #52]	; 0x34
   1cc64:	430b      	orrs	r3, r1
   1cc66:	6353      	str	r3, [r2, #52]	; 0x34
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:63
                    break;
   1cc68:	e7ba      	b.n	1cbe0 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)+0x48>
   1cc6a:	bf00      	nop
   1cc6c:	40028080 	.word	0x40028080
   1cc70:	00028a88 	.word	0x00028a88

0001cc74 <LabGPIOInterrupts::handle_interrupt()>:
_ZN17LabGPIOInterrupts16handle_interruptEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:86

void LabGPIOInterrupts::handle_interrupt()
{
   1cc74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:88
    uint32_t int_flag = {0};
    if((LPC_GPIOINT->IO0IntStatR || LPC_GPIOINT->IO0IntStatF))
   1cc78:	4c1d      	ldr	r4, [pc, #116]	; (1ccf0 <LabGPIOInterrupts::handle_interrupt()+0x7c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:86
{
   1cc7a:	4606      	mov	r6, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:88
    if((LPC_GPIOINT->IO0IntStatR || LPC_GPIOINT->IO0IntStatF))
   1cc7c:	6865      	ldr	r5, [r4, #4]
   1cc7e:	b995      	cbnz	r5, 1cca6 <LabGPIOInterrupts::handle_interrupt()+0x32>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:88 (discriminator 2)
   1cc80:	68a3      	ldr	r3, [r4, #8]
   1cc82:	b1b3      	cbz	r3, 1ccb2 <LabGPIOInterrupts::handle_interrupt()+0x3e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:93
    {
        for(int i = 0; i < 32; i++)
        {
            int_flag = (LPC_GPIOINT->IO0IntStatR | LPC_GPIOINT->IO0IntStatF);
            if((1 << i) == int_flag)
   1cc84:	2701      	movs	r7, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:92
            int_flag = (LPC_GPIOINT->IO0IntStatR | LPC_GPIOINT->IO0IntStatF);
   1cc86:	6863      	ldr	r3, [r4, #4]
   1cc88:	68a2      	ldr	r2, [r4, #8]
   1cc8a:	4313      	orrs	r3, r2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:93
            if((1 << i) == int_flag)
   1cc8c:	fa07 f205 	lsl.w	r2, r7, r5
   1cc90:	4293      	cmp	r3, r2
   1cc92:	d103      	bne.n	1cc9c <LabGPIOInterrupts::handle_interrupt()+0x28>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:95
            {
                LPC_GPIOINT->IO0IntClr = (1 << i);
   1cc94:	60e3      	str	r3, [r4, #12]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:96
                (*ISRfunction[0][i])();
   1cc96:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1cc9a:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:90 (discriminator 2)
        for(int i = 0; i < 32; i++)
   1cc9c:	3501      	adds	r5, #1
   1cc9e:	2d20      	cmp	r5, #32
   1cca0:	d1f1      	bne.n	1cc86 <LabGPIOInterrupts::handle_interrupt()+0x12>
   1cca2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1cca6:	2500      	movs	r5, #0
   1cca8:	e7ec      	b.n	1cc84 <LabGPIOInterrupts::handle_interrupt()+0x10>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:101 (discriminator 2)
//                printf("INT_PIN: %d\n", i);
            }
        }
    }
    else if((LPC_GPIOINT->IO2IntStatR || LPC_GPIOINT->IO2IntStatF))
   1ccaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1ccac:	b923      	cbnz	r3, 1ccb8 <LabGPIOInterrupts::handle_interrupt()+0x44>
   1ccae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:101
   1ccb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1ccb4:	2b00      	cmp	r3, #0
   1ccb6:	d0f8      	beq.n	1ccaa <LabGPIOInterrupts::handle_interrupt()+0x36>
   1ccb8:	f506 7580 	add.w	r5, r6, #256	; 0x100
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:106
    {
        int_flag = (LPC_GPIOINT->IO2IntStatR | LPC_GPIOINT->IO2IntStatF);
        for(int i = 0; i < 32; i++)
        {
            if((1 << i) == int_flag)
   1ccbc:	f04f 0901 	mov.w	r9, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:104
        for(int i = 0; i < 32; i++)
   1ccc0:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:103
        int_flag = (LPC_GPIOINT->IO2IntStatR | LPC_GPIOINT->IO2IntStatF);
   1ccc2:	6a67      	ldr	r7, [r4, #36]	; 0x24
   1ccc4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:110
            {
                LPC_GPIOINT->IO2IntClr = (1 << i);
                (*ISRfunction[2][i])();
                printf("INT_PIN: %d\n", i);
   1ccc6:	f8df 802c 	ldr.w	r8, [pc, #44]	; 1ccf4 <LabGPIOInterrupts::handle_interrupt()+0x80>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:103
        int_flag = (LPC_GPIOINT->IO2IntStatR | LPC_GPIOINT->IO2IntStatF);
   1ccca:	431f      	orrs	r7, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:106
            if((1 << i) == int_flag)
   1cccc:	fa09 f306 	lsl.w	r3, r9, r6
   1ccd0:	429f      	cmp	r7, r3
   1ccd2:	d106      	bne.n	1cce2 <LabGPIOInterrupts::handle_interrupt()+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:108
                LPC_GPIOINT->IO2IntClr = (1 << i);
   1ccd4:	62e7      	str	r7, [r4, #44]	; 0x2c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:109
                (*ISRfunction[2][i])();
   1ccd6:	682b      	ldr	r3, [r5, #0]
   1ccd8:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:110
                printf("INT_PIN: %d\n", i);
   1ccda:	4631      	mov	r1, r6
   1ccdc:	4640      	mov	r0, r8
   1ccde:	f003 fda5 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpiointerrupt.cpp:104 (discriminator 2)
        for(int i = 0; i < 32; i++)
   1cce2:	3601      	adds	r6, #1
   1cce4:	2e20      	cmp	r6, #32
   1cce6:	f105 0504 	add.w	r5, r5, #4
   1ccea:	d1ef      	bne.n	1cccc <LabGPIOInterrupts::handle_interrupt()+0x58>
   1ccec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ccf0:	40028080 	.word	0x40028080
   1ccf4:	00028a7b 	.word	0x00028a7b

0001ccf8 <LabGPIO::LabGPIO(unsigned char, unsigned char)>:
_ZN7LabGPIOC2Ehh():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:13

LabGPIO::LabGPIO(uint8_t pin, uint8_t port)
{
    PIN = pin;
    PORT = port;
    switch(PORT)
   1ccf8:	2a01      	cmp	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:9
LabGPIO::LabGPIO(uint8_t pin, uint8_t port)
   1ccfa:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:11
    PIN = pin;
   1ccfc:	7001      	strb	r1, [r0, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:12
    PORT = port;
   1ccfe:	7042      	strb	r2, [r0, #1]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:13
    switch(PORT)
   1cd00:	d007      	beq.n	1cd12 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x1a>
   1cd02:	d302      	bcc.n	1cd0a <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x12>
   1cd04:	2a02      	cmp	r2, #2
   1cd06:	d00e      	beq.n	1cd26 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x2e>
   1cd08:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:16
    {
        case 0:
            LPC_GPIO0->FIODIR &= ~(1 << PIN);
   1cd0a:	4b08      	ldr	r3, [pc, #32]	; (1cd2c <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:24
        case 1:
            LPC_GPIO1->FIODIR &= ~(1 << PIN);
            LPC_GPIO1->FIODIR |= (1 << PIN);
            break;
        case 2:
            LPC_GPIO2->FIODIR &= ~(1 << PIN);
   1cd0c:	681c      	ldr	r4, [r3, #0]
   1cd0e:	2201      	movs	r2, #1
   1cd10:	e001      	b.n	1cd16 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x1e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:20
            LPC_GPIO1->FIODIR &= ~(1 << PIN);
   1cd12:	4b07      	ldr	r3, [pc, #28]	; (1cd30 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x38>)
   1cd14:	681c      	ldr	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:24
            LPC_GPIO2->FIODIR &= ~(1 << PIN);
   1cd16:	408a      	lsls	r2, r1
   1cd18:	ea24 0402 	bic.w	r4, r4, r2
   1cd1c:	601c      	str	r4, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:25
            LPC_GPIO2->FIODIR |= (1 << PIN);
   1cd1e:	6819      	ldr	r1, [r3, #0]
   1cd20:	430a      	orrs	r2, r1
   1cd22:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:30
            break;
        default:
            break;
    }
}
   1cd24:	bd10      	pop	{r4, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:24
            LPC_GPIO2->FIODIR &= ~(1 << PIN);
   1cd26:	4b03      	ldr	r3, [pc, #12]	; (1cd34 <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x3c>)
   1cd28:	e7f0      	b.n	1cd0c <LabGPIO::LabGPIO(unsigned char, unsigned char)+0x14>
   1cd2a:	bf00      	nop
   1cd2c:	2009c000 	.word	0x2009c000
   1cd30:	2009c020 	.word	0x2009c020
   1cd34:	2009c040 	.word	0x2009c040

0001cd38 <LabGPIO::setAsInput()>:
_ZN7LabGPIO10setAsInputEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:34

void LabGPIO::setAsInput()
{
    switch(PORT)
   1cd38:	7843      	ldrb	r3, [r0, #1]
   1cd3a:	2b01      	cmp	r3, #1
   1cd3c:	d00b      	beq.n	1cd56 <LabGPIO::setAsInput()+0x1e>
   1cd3e:	d302      	bcc.n	1cd46 <LabGPIO::setAsInput()+0xe>
   1cd40:	2b02      	cmp	r3, #2
   1cd42:	d010      	beq.n	1cd66 <LabGPIO::setAsInput()+0x2e>
   1cd44:	4770      	bx	lr
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:37
    {
        case 0:
            LPC_GPIO0->FIODIR &= ~(1 << PIN);
   1cd46:	4909      	ldr	r1, [pc, #36]	; (1cd6c <LabGPIO::setAsInput()+0x34>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:43
            break;
        case 1:
            LPC_GPIO1->FIODIR &= ~(1 << PIN);
            break;
        case 2:
            LPC_GPIO2->FIODIR &= ~(1 << PIN);
   1cd48:	2201      	movs	r2, #1
   1cd4a:	7800      	ldrb	r0, [r0, #0]
   1cd4c:	680b      	ldr	r3, [r1, #0]
   1cd4e:	4082      	lsls	r2, r0
   1cd50:	ea23 0302 	bic.w	r3, r3, r2
   1cd54:	e005      	b.n	1cd62 <LabGPIO::setAsInput()+0x2a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:40
            LPC_GPIO1->FIODIR &= ~(1 << PIN);
   1cd56:	4906      	ldr	r1, [pc, #24]	; (1cd70 <LabGPIO::setAsInput()+0x38>)
   1cd58:	7800      	ldrb	r0, [r0, #0]
   1cd5a:	680a      	ldr	r2, [r1, #0]
   1cd5c:	4083      	lsls	r3, r0
   1cd5e:	ea22 0303 	bic.w	r3, r2, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/labgpio0.cpp:43
            LPC_GPIO2->FIODIR &= ~(1 << PIN);
   1cd62:	600b      	str	r3, [r1, #0]
   1cd64:	4770      	bx	lr
   1cd66:	4903      	ldr	r1, [pc, #12]	; (1cd74 <LabGPIO::setAsInput()+0x3c>)
   1cd68:	e7ee      	b.n	1cd48 <LabGPIO::setAsInput()+0x10>
   1cd6a:	bf00      	nop
   1cd6c:	2009c000 	.word	0x2009c000
   1cd70:	2009c020 	.word	0x2009c020
   1cd74:	2009c040 	.word	0x2009c040

0001cd78 <LCDCOMMS::LCDCOMMS()>:
_ZN8LCDCOMMSC2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:8

Uart3 &lcdComms = Uart3::getInstance();

LCDCOMMS::LCDCOMMS()
{
}
   1cd78:	4770      	bx	lr

0001cd7a <LCDCOMMS::~LCDCOMMS()>:
_ZN8LCDCOMMSD2Ev():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:11
LCDCOMMS::~LCDCOMMS()
{
}
   1cd7a:	4770      	bx	lr

0001cd7c <LCDCOMMS::write(unsigned char, unsigned char, char*)>:
_ZN8LCDCOMMS5writeEhhPc():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:39
        CLR();
    }
}

void LCDCOMMS::write(uint8_t column, uint8_t row, char *string)
{
   1cd7c:	b538      	push	{r3, r4, r5, lr}
   1cd7e:	461d      	mov	r5, r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:40
    lcdComms.printf("$GOTO:%i:%i\n", column, row);
   1cd80:	4c06      	ldr	r4, [pc, #24]	; (1cd9c <LCDCOMMS::write(unsigned char, unsigned char, char*)+0x20>)
   1cd82:	4613      	mov	r3, r2
   1cd84:	6820      	ldr	r0, [r4, #0]
   1cd86:	460a      	mov	r2, r1
   1cd88:	4905      	ldr	r1, [pc, #20]	; (1cda0 <LCDCOMMS::write(unsigned char, unsigned char, char*)+0x24>)
   1cd8a:	f7fb f845 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:41
    lcdComms.printf("%s", string);
   1cd8e:	462a      	mov	r2, r5
   1cd90:	6820      	ldr	r0, [r4, #0]
   1cd92:	4904      	ldr	r1, [pc, #16]	; (1cda4 <LCDCOMMS::write(unsigned char, unsigned char, char*)+0x28>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:42
}
   1cd94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:41
    lcdComms.printf("%s", string);
   1cd98:	f7fb b83e 	b.w	17e18 <CharDev::printf(char const*, ...)>
   1cd9c:	2007c79c 	.word	0x2007c79c
   1cda0:	00028abc 	.word	0x00028abc
   1cda4:	00028af9 	.word	0x00028af9

0001cda8 <_GLOBAL__sub_I_lcdComms>:
_GLOBAL__sub_I_lcdComms():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:47

void LCDCOMMS::setL(uint8_t row, char *string)
{
    lcdComms.printf("$L:0:%s\n", string);
}
   1cda8:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1cdaa:	4c07      	ldr	r4, [pc, #28]	; (1cdc8 <_GLOBAL__sub_I_lcdComms+0x20>)
   1cdac:	6823      	ldr	r3, [r4, #0]
   1cdae:	b933      	cbnz	r3, 1cdbe <_GLOBAL__sub_I_lcdComms+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1cdb0:	202c      	movs	r0, #44	; 0x2c
   1cdb2:	f7fa f99b 	bl	170ec <operator new(unsigned int)>
   1cdb6:	4605      	mov	r5, r0
   1cdb8:	f7fb fac6 	bl	18348 <Uart3::Uart3()>
   1cdbc:	6025      	str	r5, [r4, #0]
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/LCDComms.cpp:4
Uart3 &lcdComms = Uart3::getInstance();
   1cdbe:	6822      	ldr	r2, [r4, #0]
   1cdc0:	4b02      	ldr	r3, [pc, #8]	; (1cdcc <_GLOBAL__sub_I_lcdComms+0x24>)
   1cdc2:	601a      	str	r2, [r3, #0]
   1cdc4:	bd38      	pop	{r3, r4, r5, pc}
   1cdc6:	bf00      	nop
   1cdc8:	2007c5f0 	.word	0x2007c5f0
   1cdcc:	2007c79c 	.word	0x2007c79c

0001cdd0 <playButton()>:
_Z10playButtonv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:338
    }
}

void playButton()
{
    if (mp3.state == MP3_DECODER::PLAY)
   1cdd0:	4b03      	ldr	r3, [pc, #12]	; (1cde0 <playButton()+0x10>)
   1cdd2:	795a      	ldrb	r2, [r3, #5]
   1cdd4:	b912      	cbnz	r2, 1cddc <playButton()+0xc>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:340
    {
        mp3.state = MP3_DECODER::PAUSE;
   1cdd6:	2201      	movs	r2, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:344
    }
    else
    {
        mp3.state = MP3_DECODER::PLAY;
   1cdd8:	715a      	strb	r2, [r3, #5]
   1cdda:	4770      	bx	lr
   1cddc:	2200      	movs	r2, #0
   1cdde:	e7fb      	b.n	1cdd8 <playButton()+0x8>
   1cde0:	2007c8dc 	.word	0x2007c8dc

0001cde4 <vPlaySong(void*)>:
_Z9vPlaySongPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:164
{
   1cde4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1cde8:	f5ad 6dbe 	sub.w	sp, sp, #1520	; 0x5f0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:165
    char data[512] = {0};
   1cdec:	f44f 7200 	mov.w	r2, #512	; 0x200
   1cdf0:	2100      	movs	r1, #0
   1cdf2:	a873      	add	r0, sp, #460	; 0x1cc
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:175
        if (xQueueReceive(song_selected, &current_playing_song, portMAX_DELAY))
   1cdf4:	4f3a      	ldr	r7, [pc, #232]	; (1cee0 <vPlaySong(void*)+0xfc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:165
    char data[512] = {0};
   1cdf6:	f002 fb6d 	bl	1f4d4 <memset>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:171
    SONG_NODE next_song;
   1cdfa:	a80b      	add	r0, sp, #44	; 0x2c
   1cdfc:	f7ff fd14 	bl	1c828 <SONG_NODE::SONG_NODE()>
   1ce00:	46b8      	mov	r8, r7
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:175
        if (xQueueReceive(song_selected, &current_playing_song, portMAX_DELAY))
   1ce02:	4c38      	ldr	r4, [pc, #224]	; (1cee4 <vPlaySong(void*)+0x100>)
   1ce04:	2300      	movs	r3, #0
   1ce06:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ce0a:	4936      	ldr	r1, [pc, #216]	; (1cee4 <vPlaySong(void*)+0x100>)
   1ce0c:	6838      	ldr	r0, [r7, #0]
   1ce0e:	f7fc f8f7 	bl	19000 <xQueueGenericReceive>
   1ce12:	2800      	cmp	r0, #0
   1ce14:	d0f6      	beq.n	1ce04 <vPlaySong(void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:177
            printf("Requested to play: %s.\n", current_playing_song->get_song_title());
   1ce16:	6820      	ldr	r0, [r4, #0]
   1ce18:	f7ff fd5a 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1ce1c:	4601      	mov	r1, r0
   1ce1e:	4832      	ldr	r0, [pc, #200]	; (1cee8 <vPlaySong(void*)+0x104>)
   1ce20:	f003 fd04 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:178
            snprintf(song_file, sizeof(song_file), "1:/%s", current_playing_song->get_file_name());
   1ce24:	6820      	ldr	r0, [r4, #0]
   1ce26:	f7ff fd69 	bl	1c8fc <SONG_NODE::get_file_name()>
   1ce2a:	4a30      	ldr	r2, [pc, #192]	; (1ceec <vPlaySong(void*)+0x108>)
   1ce2c:	4603      	mov	r3, r0
   1ce2e:	2128      	movs	r1, #40	; 0x28
   1ce30:	a801      	add	r0, sp, #4
   1ce32:	f003 ffc1 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:179
            file_result = f_open(&file_object, song_file, FA_READ);
   1ce36:	2201      	movs	r2, #1
   1ce38:	a901      	add	r1, sp, #4
   1ce3a:	a8f3      	add	r0, sp, #972	; 0x3cc
   1ce3c:	f7f5 fee8 	bl	12c10 <f_open>
   1ce40:	4605      	mov	r5, r0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:180
            printf("OPEN :: ");
   1ce42:	482b      	ldr	r0, [pc, #172]	; (1cef0 <vPlaySong(void*)+0x10c>)
   1ce44:	f003 fcf2 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:181
            if (print_fresult_msg(file_result))
   1ce48:	4628      	mov	r0, r5
   1ce4a:	f7ff fd5f 	bl	1c90c <print_fresult_msg(FRESULT)>
   1ce4e:	4606      	mov	r6, r0
   1ce50:	2800      	cmp	r0, #0
   1ce52:	d040      	beq.n	1ced6 <vPlaySong(void*)+0xf2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:183
                printf("READ :: ");
   1ce54:	4827      	ldr	r0, [pc, #156]	; (1cef4 <vPlaySong(void*)+0x110>)
   1ce56:	f003 fce9 	bl	2082c <iprintf>
   1ce5a:	2600      	movs	r6, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:193
                        xQueueSend(audio_data, data, portMAX_DELAY);
   1ce5c:	f8df 909c 	ldr.w	r9, [pc, #156]	; 1cefc <vPlaySong(void*)+0x118>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:184
                while (total_read <= f_size(&file_object))
   1ce60:	9bf6      	ldr	r3, [sp, #984]	; 0x3d8
   1ce62:	42b3      	cmp	r3, r6
   1ce64:	d327      	bcc.n	1ceb6 <vPlaySong(void*)+0xd2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:186
                    if (xQueuePeek(song_selected, &next_song, NULL))
   1ce66:	2301      	movs	r3, #1
   1ce68:	2200      	movs	r2, #0
   1ce6a:	a90b      	add	r1, sp, #44	; 0x2c
   1ce6c:	f8d8 0000 	ldr.w	r0, [r8]
   1ce70:	f7fc f8c6 	bl	19000 <xQueueGenericReceive>
   1ce74:	b9b0      	cbnz	r0, 1cea4 <vPlaySong(void*)+0xc0>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:190
                    f_read(&file_object, data, sizeof(data), &amount_read);
   1ce76:	466b      	mov	r3, sp
   1ce78:	f44f 7200 	mov.w	r2, #512	; 0x200
   1ce7c:	a973      	add	r1, sp, #460	; 0x1cc
   1ce7e:	a8f3      	add	r0, sp, #972	; 0x3cc
   1ce80:	f7f5 ff5d 	bl	12d3e <f_read>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:191
                    if (print_fresult_msg(file_result))
   1ce84:	4628      	mov	r0, r5
   1ce86:	f7ff fd41 	bl	1c90c <print_fresult_msg(FRESULT)>
   1ce8a:	2800      	cmp	r0, #0
   1ce8c:	d0e8      	beq.n	1ce60 <vPlaySong(void*)+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:193
                        xQueueSend(audio_data, data, portMAX_DELAY);
   1ce8e:	2300      	movs	r3, #0
   1ce90:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1ce94:	a973      	add	r1, sp, #460	; 0x1cc
   1ce96:	f8d9 0000 	ldr.w	r0, [r9]
   1ce9a:	f7fb ffa9 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:194
                        total_read += amount_read;
   1ce9e:	9b00      	ldr	r3, [sp, #0]
   1cea0:	441e      	add	r6, r3
   1cea2:	e7dd      	b.n	1ce60 <vPlaySong(void*)+0x7c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:188
                        if (next_song.get_file_name() != current_playing_song->get_file_name()) break;
   1cea4:	a80b      	add	r0, sp, #44	; 0x2c
   1cea6:	f7ff fd29 	bl	1c8fc <SONG_NODE::get_file_name()>
   1ceaa:	4682      	mov	sl, r0
   1ceac:	6820      	ldr	r0, [r4, #0]
   1ceae:	f7ff fd25 	bl	1c8fc <SONG_NODE::get_file_name()>
   1ceb2:	4582      	cmp	sl, r0
   1ceb4:	d0df      	beq.n	1ce76 <vPlaySong(void*)+0x92>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:197
                amount_read = 0;
   1ceb6:	2500      	movs	r5, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:199
                file_result = f_close(&file_object);
   1ceb8:	a8f3      	add	r0, sp, #972	; 0x3cc
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:197
                amount_read = 0;
   1ceba:	9500      	str	r5, [sp, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:199
                file_result = f_close(&file_object);
   1cebc:	f7f6 f912 	bl	130e4 <f_close>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:200
                print_fresult_msg(file_result);
   1cec0:	f7ff fd24 	bl	1c90c <print_fresult_msg(FRESULT)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:201
                printf("FINISHED: %s.\n", current_playing_song->get_song_title());
   1cec4:	6820      	ldr	r0, [r4, #0]
   1cec6:	f7ff fd03 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1ceca:	4601      	mov	r1, r0
   1cecc:	480a      	ldr	r0, [pc, #40]	; (1cef8 <vPlaySong(void*)+0x114>)
   1cece:	f003 fcad 	bl	2082c <iprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:202
                current_playing_song = NULL;
   1ced2:	6025      	str	r5, [r4, #0]
   1ced4:	e796      	b.n	1ce04 <vPlaySong(void*)+0x20>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:206
                print_fresult_msg(file_result);
   1ced6:	4628      	mov	r0, r5
   1ced8:	f7ff fd18 	bl	1c90c <print_fresult_msg(FRESULT)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:207
                current_playing_song = NULL;
   1cedc:	6026      	str	r6, [r4, #0]
   1cede:	e791      	b.n	1ce04 <vPlaySong(void*)+0x20>
   1cee0:	2007c918 	.word	0x2007c918
   1cee4:	2007c7c4 	.word	0x2007c7c4
   1cee8:	00028b2d 	.word	0x00028b2d
   1ceec:	00028b45 	.word	0x00028b45
   1cef0:	00028a60 	.word	0x00028a60
   1cef4:	00028a72 	.word	0x00028a72
   1cef8:	00028b4b 	.word	0x00028b4b
   1cefc:	2007c7a0 	.word	0x2007c7a0

0001cf00 <audioDecoderTask(void*)>:
_Z16audioDecoderTaskPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:300
{
   1cf00:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:303
    vTaskDelay(5);
   1cf02:	2005      	movs	r0, #5
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:300
{
   1cf04:	f5ad 7d01 	sub.w	sp, sp, #516	; 0x204
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:303
    vTaskDelay(5);
   1cf08:	f7fc fc58 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:304
    mp3.setVolume(70, 70);
   1cf0c:	2246      	movs	r2, #70	; 0x46
   1cf0e:	480c      	ldr	r0, [pc, #48]	; (1cf40 <audioDecoderTask(void*)+0x40>)
   1cf10:	4611      	mov	r1, r2
   1cf12:	f7ff fc83 	bl	1c81c <MP3_DECODER::setVolume(unsigned char, unsigned char)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:311
        if (mp3.state == MP3_DECODER::PLAY)
   1cf16:	4c0a      	ldr	r4, [pc, #40]	; (1cf40 <audioDecoderTask(void*)+0x40>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:314
            xQueueReceive(audio_data, data, portMAX_DELAY);
   1cf18:	4d0a      	ldr	r5, [pc, #40]	; (1cf44 <audioDecoderTask(void*)+0x44>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:311
        if (mp3.state == MP3_DECODER::PLAY)
   1cf1a:	7963      	ldrb	r3, [r4, #5]
   1cf1c:	b95b      	cbnz	r3, 1cf36 <audioDecoderTask(void*)+0x36>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:314
            xQueueReceive(audio_data, data, portMAX_DELAY);
   1cf1e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1cf22:	4669      	mov	r1, sp
   1cf24:	6828      	ldr	r0, [r5, #0]
   1cf26:	f7fc f86b 	bl	19000 <xQueueGenericReceive>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:315
            mp3.sendSDI(data, sizeof(data));
   1cf2a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1cf2e:	4669      	mov	r1, sp
   1cf30:	4620      	mov	r0, r4
   1cf32:	f7ff fc37 	bl	1c7a4 <MP3_DECODER::sendSDI(unsigned char*, unsigned int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:318
        vTaskDelay(10);
   1cf36:	200a      	movs	r0, #10
   1cf38:	f7fc fc40 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:311
        if (mp3.state == MP3_DECODER::PLAY)
   1cf3c:	e7ed      	b.n	1cf1a <audioDecoderTask(void*)+0x1a>
   1cf3e:	bf00      	nop
   1cf40:	2007c8dc 	.word	0x2007c8dc
   1cf44:	2007c7a0 	.word	0x2007c7a0

0001cf48 <c_eint3_handler()>:
_Z15c_eint3_handlerv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:324
    interrupts.handle_interrupt();
   1cf48:	4801      	ldr	r0, [pc, #4]	; (1cf50 <c_eint3_handler()+0x8>)
   1cf4a:	f7ff be93 	b.w	1cc74 <LabGPIOInterrupts::handle_interrupt()>
   1cf4e:	bf00      	nop
   1cf50:	2007c7d4 	.word	0x2007c7d4

0001cf54 <selectButton()>:
_Z12selectButtonv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:329
    if (cursor_song != NULL)
   1cf54:	4906      	ldr	r1, [pc, #24]	; (1cf70 <selectButton()+0x1c>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:328
{
   1cf56:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:329
    if (cursor_song != NULL)
   1cf58:	680b      	ldr	r3, [r1, #0]
   1cf5a:	b143      	cbz	r3, 1cf6e <selectButton()+0x1a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:331
        xQueueSendFromISR(song_selected, &cursor_song, NULL);
   1cf5c:	2300      	movs	r3, #0
   1cf5e:	4805      	ldr	r0, [pc, #20]	; (1cf74 <selectButton()+0x20>)
   1cf60:	461a      	mov	r2, r3
   1cf62:	6800      	ldr	r0, [r0, #0]
   1cf64:	f7fb ffd8 	bl	18f18 <xQueueGenericSendFromISR>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:332
        mp3.state = MP3_DECODER::PLAY;
   1cf68:	2200      	movs	r2, #0
   1cf6a:	4b03      	ldr	r3, [pc, #12]	; (1cf78 <selectButton()+0x24>)
   1cf6c:	715a      	strb	r2, [r3, #5]
   1cf6e:	bd08      	pop	{r3, pc}
   1cf70:	2007c7c8 	.word	0x2007c7c8
   1cf74:	2007c918 	.word	0x2007c918
   1cf78:	2007c8dc 	.word	0x2007c8dc

0001cf7c <main>:
main():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:54
{
   1cf7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:57
    song_selected = xQueueCreate(MAX_SONGS, sizeof(SONG_NODE *));
   1cf7e:	2200      	movs	r2, #0
   1cf80:	2104      	movs	r1, #4
   1cf82:	200a      	movs	r0, #10
   1cf84:	f7fb ff12 	bl	18dac <xQueueGenericCreate>
   1cf88:	4c4d      	ldr	r4, [pc, #308]	; (1d0c0 <main+0x144>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:58
    audio_data = xQueueCreate(3, sizeof(char[512]));
   1cf8a:	2200      	movs	r2, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:57
    song_selected = xQueueCreate(MAX_SONGS, sizeof(SONG_NODE *));
   1cf8c:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:58
    audio_data = xQueueCreate(3, sizeof(char[512]));
   1cf8e:	f44f 7100 	mov.w	r1, #512	; 0x200
   1cf92:	2003      	movs	r0, #3
   1cf94:	f7fb ff0a 	bl	18dac <xQueueGenericCreate>
   1cf98:	4b4a      	ldr	r3, [pc, #296]	; (1d0c4 <main+0x148>)
   1cf9a:	6018      	str	r0, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:59
    if (song_selected == NULL || audio_data == NULL)
   1cf9c:	6823      	ldr	r3, [r4, #0]
   1cf9e:	b103      	cbz	r3, 1cfa2 <main+0x26>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:59 (discriminator 1)
   1cfa0:	b910      	cbnz	r0, 1cfa8 <main+0x2c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:61
        printf("Error: Queues were not created.\n");
   1cfa2:	4849      	ldr	r0, [pc, #292]	; (1d0c8 <main+0x14c>)
   1cfa4:	f003 fcb6 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:64
    snprintf(current_directory, sizeof(current_directory), "1:");
   1cfa8:	4948      	ldr	r1, [pc, #288]	; (1d0cc <main+0x150>)
   1cfaa:	4849      	ldr	r0, [pc, #292]	; (1d0d0 <main+0x154>)
   1cfac:	f004 f810 	bl	20fd0 <strcpy>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:66
    if (song_database.import_songs(current_directory))
   1cfb0:	4947      	ldr	r1, [pc, #284]	; (1d0d0 <main+0x154>)
   1cfb2:	4848      	ldr	r0, [pc, #288]	; (1d0d4 <main+0x158>)
   1cfb4:	f7ff fd50 	bl	1ca58 <SONG_DATABASE::import_songs(char*)>
   1cfb8:	b150      	cbz	r0, 1cfd0 <main+0x54>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:68
        if (song_database.get_head() != NULL)
   1cfba:	4846      	ldr	r0, [pc, #280]	; (1d0d4 <main+0x158>)
   1cfbc:	f7ff fca4 	bl	1c908 <SONG_DATABASE::get_head()>
   1cfc0:	4c45      	ldr	r4, [pc, #276]	; (1d0d8 <main+0x15c>)
   1cfc2:	4605      	mov	r5, r0
   1cfc4:	2800      	cmp	r0, #0
   1cfc6:	d075      	beq.n	1d0b4 <main+0x138>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:70
            cursor_song = song_database.get_head();
   1cfc8:	4842      	ldr	r0, [pc, #264]	; (1d0d4 <main+0x158>)
   1cfca:	f7ff fc9d 	bl	1c908 <SONG_DATABASE::get_head()>
   1cfce:	6020      	str	r0, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:80
    interrupts.attachInterruptHandler(0, 30, d_req_int_handler, rising_edge);
   1cfd0:	2400      	movs	r4, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:79
    interrupts.init();
   1cfd2:	4842      	ldr	r0, [pc, #264]	; (1d0dc <main+0x160>)
   1cfd4:	f7ff fdd8 	bl	1cb88 <LabGPIOInterrupts::init()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:80
    interrupts.attachInterruptHandler(0, 30, d_req_int_handler, rising_edge);
   1cfd8:	4b41      	ldr	r3, [pc, #260]	; (1d0e0 <main+0x164>)
   1cfda:	221e      	movs	r2, #30
   1cfdc:	4621      	mov	r1, r4
   1cfde:	9400      	str	r4, [sp, #0]
   1cfe0:	483e      	ldr	r0, [pc, #248]	; (1d0dc <main+0x160>)
   1cfe2:	f7ff fdd9 	bl	1cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:81
    interrupts.attachInterruptHandler(0, 0, selectButton, rising_edge);
   1cfe6:	4b3f      	ldr	r3, [pc, #252]	; (1d0e4 <main+0x168>)
   1cfe8:	4622      	mov	r2, r4
   1cfea:	4621      	mov	r1, r4
   1cfec:	9400      	str	r4, [sp, #0]
   1cfee:	483b      	ldr	r0, [pc, #236]	; (1d0dc <main+0x160>)
   1cff0:	f7ff fdd2 	bl	1cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:82
    interrupts.attachInterruptHandler(0, 1, playButton, rising_edge);
   1cff4:	4b3c      	ldr	r3, [pc, #240]	; (1d0e8 <main+0x16c>)
   1cff6:	2201      	movs	r2, #1
   1cff8:	4621      	mov	r1, r4
   1cffa:	9400      	str	r4, [sp, #0]
   1cffc:	4837      	ldr	r0, [pc, #220]	; (1d0dc <main+0x160>)
   1cffe:	f7ff fdcb 	bl	1cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:83
    interrupts.attachInterruptHandler(2, 6, nextButton, rising_edge);
   1d002:	4b3a      	ldr	r3, [pc, #232]	; (1d0ec <main+0x170>)
   1d004:	2206      	movs	r2, #6
   1d006:	2102      	movs	r1, #2
   1d008:	9400      	str	r4, [sp, #0]
   1d00a:	4834      	ldr	r0, [pc, #208]	; (1d0dc <main+0x160>)
   1d00c:	f7ff fdc4 	bl	1cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:84
    interrupts.attachInterruptHandler(2, 7, prevButton, rising_edge);
   1d010:	4b37      	ldr	r3, [pc, #220]	; (1d0f0 <main+0x174>)
   1d012:	2207      	movs	r2, #7
   1d014:	2102      	movs	r1, #2
   1d016:	9400      	str	r4, [sp, #0]
   1d018:	4830      	ldr	r0, [pc, #192]	; (1d0dc <main+0x160>)
   1d01a:	f7ff fdbd 	bl	1cb98 <LabGPIOInterrupts::attachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition_E)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:86
    isr_register(EINT3_IRQn, c_eint3_handler);
   1d01e:	4935      	ldr	r1, [pc, #212]	; (1d0f4 <main+0x178>)
   1d020:	2015      	movs	r0, #21
   1d022:	f7f3 faf5 	bl	10610 <isr_register>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:88
    if (mp3.init(&rst, &dreq, &xcs, &xdcs))
   1d026:	4b34      	ldr	r3, [pc, #208]	; (1d0f8 <main+0x17c>)
   1d028:	4a34      	ldr	r2, [pc, #208]	; (1d0fc <main+0x180>)
   1d02a:	9300      	str	r3, [sp, #0]
   1d02c:	4934      	ldr	r1, [pc, #208]	; (1d100 <main+0x184>)
   1d02e:	4b35      	ldr	r3, [pc, #212]	; (1d104 <main+0x188>)
   1d030:	4835      	ldr	r0, [pc, #212]	; (1d108 <main+0x18c>)
   1d032:	f7ff fafd 	bl	1c630 <MP3_DECODER::init(GPIO*, GPIO*, GPIO*, GPIO*)>
   1d036:	b110      	cbz	r0, 1d03e <main+0xc2>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:90
        printf("RUNNING!\n");
   1d038:	4834      	ldr	r0, [pc, #208]	; (1d10c <main+0x190>)
   1d03a:	f003 fc6b 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:93
    xTaskCreate(vPlaySong, "PlaySong",  STACK_SIZE, NULL, PRIORITY_MEDIUM, NULL);
   1d03e:	2502      	movs	r5, #2
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:95
    xTaskCreate(audioDecoderTask, "MP3", STACK_SIZE, NULL, PRIORITY_HIGH, NULL);
   1d040:	2603      	movs	r6, #3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:93
    xTaskCreate(vPlaySong, "PlaySong",  STACK_SIZE, NULL, PRIORITY_MEDIUM, NULL);
   1d042:	9401      	str	r4, [sp, #4]
   1d044:	9500      	str	r5, [sp, #0]
   1d046:	2300      	movs	r3, #0
   1d048:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1d04c:	4930      	ldr	r1, [pc, #192]	; (1d110 <main+0x194>)
   1d04e:	4831      	ldr	r0, [pc, #196]	; (1d114 <main+0x198>)
   1d050:	f7fc f93e 	bl	192d0 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:94
    xTaskCreate(vlcd_display, "LCD",    STACK_SIZE, NULL, PRIORITY_MEDIUM, NULL);
   1d054:	9401      	str	r4, [sp, #4]
   1d056:	9500      	str	r5, [sp, #0]
   1d058:	2300      	movs	r3, #0
   1d05a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1d05e:	492e      	ldr	r1, [pc, #184]	; (1d118 <main+0x19c>)
   1d060:	482e      	ldr	r0, [pc, #184]	; (1d11c <main+0x1a0>)
   1d062:	f7fc f935 	bl	192d0 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:95
    xTaskCreate(audioDecoderTask, "MP3", STACK_SIZE, NULL, PRIORITY_HIGH, NULL);
   1d066:	9401      	str	r4, [sp, #4]
   1d068:	9600      	str	r6, [sp, #0]
   1d06a:	2300      	movs	r3, #0
   1d06c:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1d070:	492b      	ldr	r1, [pc, #172]	; (1d120 <main+0x1a4>)
   1d072:	482c      	ldr	r0, [pc, #176]	; (1d124 <main+0x1a8>)
   1d074:	f7fc f92c 	bl	192d0 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:96
    xTaskCreate(vbuttonTask, "BUTTONS", STACK_SIZE, NULL, PRIORITY_MEDIUM, NULL); //TO BE REMOVED. USE ISRs in FINAL
   1d078:	2300      	movs	r3, #0
   1d07a:	f44f 6200 	mov.w	r2, #2048	; 0x800
   1d07e:	9401      	str	r4, [sp, #4]
   1d080:	4929      	ldr	r1, [pc, #164]	; (1d128 <main+0x1ac>)
   1d082:	9500      	str	r5, [sp, #0]
   1d084:	4829      	ldr	r0, [pc, #164]	; (1d12c <main+0x1b0>)
   1d086:	f7fc f923 	bl	192d0 <xTaskCreate>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:97
    scheduler_add_task(new terminalTask(PRIORITY_HIGH));
   1d08a:	2090      	movs	r0, #144	; 0x90
   1d08c:	f7fa f82e 	bl	170ec <operator new(unsigned int)>
   1d090:	4604      	mov	r4, r0
   1d092:	4631      	mov	r1, r6
   1d094:	f7fe fb8e 	bl	1b7b4 <terminalTask::terminalTask(unsigned char)>
   1d098:	4620      	mov	r0, r4
   1d09a:	f7f9 f9d1 	bl	16440 <scheduler_add_task(scheduler_task*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:98
    printf("Initialization Done.\n");
   1d09e:	4824      	ldr	r0, [pc, #144]	; (1d130 <main+0x1b4>)
   1d0a0:	f003 fc38 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:100
    scheduler_start();
   1d0a4:	2100      	movs	r1, #0
   1d0a6:	4608      	mov	r0, r1
   1d0a8:	f7f9 f9d8 	bl	1645c <scheduler_start(bool, bool)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:103
}
   1d0ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1d0b0:	b002      	add	sp, #8
   1d0b2:	bd70      	pop	{r4, r5, r6, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:74
            printf("No songs were successfully imported.\n");
   1d0b4:	481f      	ldr	r0, [pc, #124]	; (1d134 <main+0x1b8>)
   1d0b6:	f003 fc2d 	bl	20914 <puts>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:75
            cursor_song = NULL;
   1d0ba:	6025      	str	r5, [r4, #0]
   1d0bc:	e788      	b.n	1cfd0 <main+0x54>
   1d0be:	bf00      	nop
   1d0c0:	2007c918 	.word	0x2007c918
   1d0c4:	2007c7a0 	.word	0x2007c7a0
   1d0c8:	00028b5a 	.word	0x00028b5a
   1d0cc:	00028a19 	.word	0x00028a19
   1d0d0:	2007c7a4 	.word	0x2007c7a4
   1d0d4:	2007c90c 	.word	0x2007c90c
   1d0d8:	2007c7c8 	.word	0x2007c7c8
   1d0dc:	2007c7d4 	.word	0x2007c7d4
   1d0e0:	0001c805 	.word	0x0001c805
   1d0e4:	0001cf55 	.word	0x0001cf55
   1d0e8:	0001cdd1 	.word	0x0001cdd1
   1d0ec:	0001d371 	.word	0x0001d371
   1d0f0:	0001d395 	.word	0x0001d395
   1d0f4:	0001cf49 	.word	0x0001cf49
   1d0f8:	2007c924 	.word	0x2007c924
   1d0fc:	2007c7cc 	.word	0x2007c7cc
   1d100:	2007c904 	.word	0x2007c904
   1d104:	2007c91c 	.word	0x2007c91c
   1d108:	2007c8dc 	.word	0x2007c8dc
   1d10c:	00028b9f 	.word	0x00028b9f
   1d110:	00028ba8 	.word	0x00028ba8
   1d114:	0001cde5 	.word	0x0001cde5
   1d118:	00028bb1 	.word	0x00028bb1
   1d11c:	0001d335 	.word	0x0001d335
   1d120:	00028a35 	.word	0x00028a35
   1d124:	0001cf01 	.word	0x0001cf01
   1d128:	00028bb5 	.word	0x00028bb5
   1d12c:	0001d3b9 	.word	0x0001d3b9
   1d130:	00028bbd 	.word	0x00028bbd
   1d134:	00028b7a 	.word	0x00028b7a

0001d138 <update_display()>:
_Z14update_displayv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:227
{
   1d138:	b530      	push	{r4, r5, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:229
    lcd.printf("$CLR_SCR\n");
   1d13a:	4b72      	ldr	r3, [pc, #456]	; (1d304 <update_display()+0x1cc>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:227
{
   1d13c:	b097      	sub	sp, #92	; 0x5c
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:229
    lcd.printf("$CLR_SCR\n");
   1d13e:	6818      	ldr	r0, [r3, #0]
   1d140:	4971      	ldr	r1, [pc, #452]	; (1d308 <update_display()+0x1d0>)
   1d142:	f7fa fe69 	bl	17e18 <CharDev::printf(char const*, ...)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:230
    if (current_playing_song != NULL)
   1d146:	4b71      	ldr	r3, [pc, #452]	; (1d30c <update_display()+0x1d4>)
   1d148:	6818      	ldr	r0, [r3, #0]
   1d14a:	b348      	cbz	r0, 1d1a0 <update_display()+0x68>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:232
        snprintf(line[0], sizeof(line[0]), "Playing:%s", current_playing_song->get_song_title());
   1d14c:	f7ff fbc0 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d150:	4a6f      	ldr	r2, [pc, #444]	; (1d310 <update_display()+0x1d8>)
   1d152:	4603      	mov	r3, r0
   1d154:	2115      	movs	r1, #21
   1d156:	a801      	add	r0, sp, #4
   1d158:	f003 fe2e 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:239
    if (cursor_song != NULL)
   1d15c:	4d6d      	ldr	r5, [pc, #436]	; (1d314 <update_display()+0x1dc>)
   1d15e:	6828      	ldr	r0, [r5, #0]
   1d160:	462c      	mov	r4, r5
   1d162:	2800      	cmp	r0, #0
   1d164:	f000 8089 	beq.w	1d27a <update_display()+0x142>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:241
        if ((cursor_song->get_prev() == NULL) && (cursor_song->get_next() == NULL))
   1d168:	f7ff fbc5 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d16c:	2800      	cmp	r0, #0
   1d16e:	f040 8097 	bne.w	1d2a0 <update_display()+0x168>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:241 (discriminator 1)
   1d172:	6828      	ldr	r0, [r5, #0]
   1d174:	f7ff fbbc 	bl	1c8f0 <SONG_NODE::get_next()>
   1d178:	2800      	cmp	r0, #0
   1d17a:	f040 8091 	bne.w	1d2a0 <update_display()+0x168>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:243
            snprintf(line[1], sizeof(line[1]), "                          ");
   1d17e:	4a66      	ldr	r2, [pc, #408]	; (1d318 <update_display()+0x1e0>)
   1d180:	2115      	movs	r1, #21
   1d182:	f10d 0019 	add.w	r0, sp, #25
   1d186:	f003 fe17 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:244
            snprintf(line[2], sizeof(line[2]), "%s", cursor_song->get_song_title());
   1d18a:	6828      	ldr	r0, [r5, #0]
   1d18c:	f7ff fba0 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d190:	4a62      	ldr	r2, [pc, #392]	; (1d31c <update_display()+0x1e4>)
   1d192:	4603      	mov	r3, r0
   1d194:	2115      	movs	r1, #21
   1d196:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
   1d19a:	f003 fe0d 	bl	20db8 <sniprintf>
   1d19e:	e078      	b.n	1d292 <update_display()+0x15a>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:236
        snprintf(line[0], sizeof(line[0]), "Nothing is playing.");
   1d1a0:	495f      	ldr	r1, [pc, #380]	; (1d320 <update_display()+0x1e8>)
   1d1a2:	a801      	add	r0, sp, #4
   1d1a4:	f003 ff14 	bl	20fd0 <strcpy>
   1d1a8:	e7d8      	b.n	1d15c <update_display()+0x24>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:259
        else if (cursor_song->get_next() == NULL)
   1d1aa:	6820      	ldr	r0, [r4, #0]
   1d1ac:	f7ff fba0 	bl	1c8f0 <SONG_NODE::get_next()>
   1d1b0:	2800      	cmp	r0, #0
   1d1b2:	d14a      	bne.n	1d24a <update_display()+0x112>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:261
            if (cursor_song->get_prev() != NULL)
   1d1b4:	6820      	ldr	r0, [r4, #0]
   1d1b6:	f7ff fb9e 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1ba:	b1f8      	cbz	r0, 1d1fc <update_display()+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:263
                if (cursor_song->get_prev()->get_prev() != NULL)
   1d1bc:	6820      	ldr	r0, [r4, #0]
   1d1be:	f7ff fb9a 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1c2:	f7ff fb98 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1c6:	b168      	cbz	r0, 1d1e4 <update_display()+0xac>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:265
                    snprintf(line[1], sizeof(line[1]), "  %s", cursor_song->get_prev()->get_prev()->get_song_title());
   1d1c8:	6820      	ldr	r0, [r4, #0]
   1d1ca:	f7ff fb94 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1ce:	f7ff fb92 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1d2:	f7ff fb7d 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d1d6:	4a53      	ldr	r2, [pc, #332]	; (1d324 <update_display()+0x1ec>)
   1d1d8:	4603      	mov	r3, r0
   1d1da:	2115      	movs	r1, #21
   1d1dc:	f10d 0019 	add.w	r0, sp, #25
   1d1e0:	f003 fdea 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:267
                snprintf(line[2], sizeof(line[2]), "  %s", cursor_song->get_prev()->get_song_title());
   1d1e4:	6820      	ldr	r0, [r4, #0]
   1d1e6:	f7ff fb86 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d1ea:	f7ff fb71 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d1ee:	4a4d      	ldr	r2, [pc, #308]	; (1d324 <update_display()+0x1ec>)
   1d1f0:	4603      	mov	r3, r0
   1d1f2:	2115      	movs	r1, #21
   1d1f4:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
   1d1f8:	f003 fdde 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:269
            snprintf(line[3], sizeof(line[3]), "->%s", cursor_song->get_song_title());
   1d1fc:	6820      	ldr	r0, [r4, #0]
   1d1fe:	f7ff fb67 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d202:	4603      	mov	r3, r0
   1d204:	4a48      	ldr	r2, [pc, #288]	; (1d328 <update_display()+0x1f0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:275
            snprintf(line[3], sizeof(line[3]), "  %s", cursor_song->get_next()->get_song_title());
   1d206:	2115      	movs	r1, #21
   1d208:	f10d 0043 	add.w	r0, sp, #67	; 0x43
   1d20c:	f003 fdd4 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:285
    lcd_display.write(0, 0, line[0]);
   1d210:	2200      	movs	r2, #0
   1d212:	ab01      	add	r3, sp, #4
   1d214:	4611      	mov	r1, r2
   1d216:	4845      	ldr	r0, [pc, #276]	; (1d32c <update_display()+0x1f4>)
   1d218:	f7ff fdb0 	bl	1cd7c <LCDCOMMS::write(unsigned char, unsigned char, char*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:286
    lcd_display.write(0, 1, line[1]);
   1d21c:	f10d 0319 	add.w	r3, sp, #25
   1d220:	2201      	movs	r2, #1
   1d222:	2100      	movs	r1, #0
   1d224:	4841      	ldr	r0, [pc, #260]	; (1d32c <update_display()+0x1f4>)
   1d226:	f7ff fda9 	bl	1cd7c <LCDCOMMS::write(unsigned char, unsigned char, char*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:287
    lcd_display.write(0, 2, line[2]);
   1d22a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
   1d22e:	2202      	movs	r2, #2
   1d230:	2100      	movs	r1, #0
   1d232:	483e      	ldr	r0, [pc, #248]	; (1d32c <update_display()+0x1f4>)
   1d234:	f7ff fda2 	bl	1cd7c <LCDCOMMS::write(unsigned char, unsigned char, char*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:288
    lcd_display.write(0, 3, line[3]);
   1d238:	f10d 0343 	add.w	r3, sp, #67	; 0x43
   1d23c:	2203      	movs	r2, #3
   1d23e:	2100      	movs	r1, #0
   1d240:	483a      	ldr	r0, [pc, #232]	; (1d32c <update_display()+0x1f4>)
   1d242:	f7ff fd9b 	bl	1cd7c <LCDCOMMS::write(unsigned char, unsigned char, char*)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:297
}
   1d246:	b017      	add	sp, #92	; 0x5c
   1d248:	bd30      	pop	{r4, r5, pc}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:273
            snprintf(line[1], sizeof(line[1]), "  %s", cursor_song->get_prev()->get_song_title());
   1d24a:	6820      	ldr	r0, [r4, #0]
   1d24c:	f7ff fb53 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d250:	f7ff fb3e 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d254:	4a33      	ldr	r2, [pc, #204]	; (1d324 <update_display()+0x1ec>)
   1d256:	4603      	mov	r3, r0
   1d258:	2115      	movs	r1, #21
   1d25a:	f10d 0019 	add.w	r0, sp, #25
   1d25e:	f003 fdab 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:274
            snprintf(line[2], sizeof(line[2]), "->%s", cursor_song->get_song_title());
   1d262:	6820      	ldr	r0, [r4, #0]
   1d264:	f7ff fb34 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d268:	4a2f      	ldr	r2, [pc, #188]	; (1d328 <update_display()+0x1f0>)
   1d26a:	4603      	mov	r3, r0
   1d26c:	2115      	movs	r1, #21
   1d26e:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
   1d272:	f003 fda1 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:275
            snprintf(line[3], sizeof(line[3]), "  %s", cursor_song->get_next()->get_song_title());
   1d276:	6820      	ldr	r0, [r4, #0]
   1d278:	e03d      	b.n	1d2f6 <update_display()+0x1be>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:280
        snprintf(line[1], sizeof(line[1]), "                          ");
   1d27a:	4a27      	ldr	r2, [pc, #156]	; (1d318 <update_display()+0x1e0>)
   1d27c:	2115      	movs	r1, #21
   1d27e:	f10d 0019 	add.w	r0, sp, #25
   1d282:	f003 fd99 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:281
        snprintf(line[2], sizeof(line[2]), "No songs were stored.");
   1d286:	4a2a      	ldr	r2, [pc, #168]	; (1d330 <update_display()+0x1f8>)
   1d288:	2115      	movs	r1, #21
   1d28a:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
   1d28e:	f003 fd93 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:282
        snprintf(line[3], sizeof(line[3]), "                          ");
   1d292:	4a21      	ldr	r2, [pc, #132]	; (1d318 <update_display()+0x1e0>)
   1d294:	2115      	movs	r1, #21
   1d296:	f10d 0043 	add.w	r0, sp, #67	; 0x43
   1d29a:	f003 fd8d 	bl	20db8 <sniprintf>
   1d29e:	e7b7      	b.n	1d210 <update_display()+0xd8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:247
        else if (cursor_song->get_prev() == NULL)
   1d2a0:	6820      	ldr	r0, [r4, #0]
   1d2a2:	f7ff fb28 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d2a6:	2800      	cmp	r0, #0
   1d2a8:	f47f af7f 	bne.w	1d1aa <update_display()+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:249
            snprintf(line[1], sizeof(line[1]), "->%s", cursor_song->get_song_title());
   1d2ac:	6820      	ldr	r0, [r4, #0]
   1d2ae:	f7ff fb0f 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d2b2:	4a1d      	ldr	r2, [pc, #116]	; (1d328 <update_display()+0x1f0>)
   1d2b4:	4603      	mov	r3, r0
   1d2b6:	2115      	movs	r1, #21
   1d2b8:	f10d 0019 	add.w	r0, sp, #25
   1d2bc:	f003 fd7c 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:250
            if (cursor_song->get_next() != NULL)
   1d2c0:	6820      	ldr	r0, [r4, #0]
   1d2c2:	f7ff fb15 	bl	1c8f0 <SONG_NODE::get_next()>
   1d2c6:	2800      	cmp	r0, #0
   1d2c8:	d0a2      	beq.n	1d210 <update_display()+0xd8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:252
                snprintf(line[2], sizeof(line[2]), "  %s", cursor_song->get_next()->get_song_title());
   1d2ca:	6820      	ldr	r0, [r4, #0]
   1d2cc:	f7ff fb10 	bl	1c8f0 <SONG_NODE::get_next()>
   1d2d0:	f7ff fafe 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d2d4:	4a13      	ldr	r2, [pc, #76]	; (1d324 <update_display()+0x1ec>)
   1d2d6:	4603      	mov	r3, r0
   1d2d8:	2115      	movs	r1, #21
   1d2da:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
   1d2de:	f003 fd6b 	bl	20db8 <sniprintf>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:253
                if (cursor_song->get_next()->get_next() != NULL)
   1d2e2:	6820      	ldr	r0, [r4, #0]
   1d2e4:	f7ff fb04 	bl	1c8f0 <SONG_NODE::get_next()>
   1d2e8:	f7ff fb02 	bl	1c8f0 <SONG_NODE::get_next()>
   1d2ec:	2800      	cmp	r0, #0
   1d2ee:	d08f      	beq.n	1d210 <update_display()+0xd8>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:255
                    snprintf(line[3], sizeof(line[3]), "  %s", cursor_song->get_next()->get_next()->get_song_title());
   1d2f0:	6820      	ldr	r0, [r4, #0]
   1d2f2:	f7ff fafd 	bl	1c8f0 <SONG_NODE::get_next()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:275
            snprintf(line[3], sizeof(line[3]), "  %s", cursor_song->get_next()->get_song_title());
   1d2f6:	f7ff fafb 	bl	1c8f0 <SONG_NODE::get_next()>
   1d2fa:	f7ff fae9 	bl	1c8d0 <SONG_NODE::get_song_title()>
   1d2fe:	4a09      	ldr	r2, [pc, #36]	; (1d324 <update_display()+0x1ec>)
   1d300:	4603      	mov	r3, r0
   1d302:	e780      	b.n	1d206 <update_display()+0xce>
   1d304:	2007c8d4 	.word	0x2007c8d4
   1d308:	00028ac9 	.word	0x00028ac9
   1d30c:	2007c7c4 	.word	0x2007c7c4
   1d310:	00028ad3 	.word	0x00028ad3
   1d314:	2007c7c8 	.word	0x2007c7c8
   1d318:	00028afc 	.word	0x00028afc
   1d31c:	00028af9 	.word	0x00028af9
   1d320:	00028ade 	.word	0x00028ade
   1d324:	00028af7 	.word	0x00028af7
   1d328:	00028af2 	.word	0x00028af2
   1d32c:	2007c8d8 	.word	0x2007c8d8
   1d330:	00028b17 	.word	0x00028b17

0001d334 <vlcd_display(void*)>:
_Z12vlcd_displayPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:215
    lcd.init(38400);                //Init UART Driver
   1d334:	4c0d      	ldr	r4, [pc, #52]	; (1d36c <vlcd_display(void*)+0x38>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:214
{
   1d336:	b508      	push	{r3, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:215
    lcd.init(38400);                //Init UART Driver
   1d338:	2220      	movs	r2, #32
   1d33a:	2340      	movs	r3, #64	; 0x40
   1d33c:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   1d340:	6820      	ldr	r0, [r4, #0]
   1d342:	f7fa ffe1 	bl	18308 <Uart3::init(unsigned int, int, int)>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:216
    vTaskDelay(100);
   1d346:	2064      	movs	r0, #100	; 0x64
   1d348:	f7fc fa38 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:217
    lcd.putChar(0xF0);              //Init Baudrate on LCD Display
   1d34c:	6820      	ldr	r0, [r4, #0]
   1d34e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1d352:	6803      	ldr	r3, [r0, #0]
   1d354:	21f0      	movs	r1, #240	; 0xf0
   1d356:	685b      	ldr	r3, [r3, #4]
   1d358:	4798      	blx	r3
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:218
    vTaskDelay(1000);
   1d35a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   1d35e:	f7fc fa2d 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:221
        update_display();
   1d362:	f7ff fee9 	bl	1d138 <update_display()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:222
        vTaskDelay(2000);
   1d366:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1d36a:	e7f8      	b.n	1d35e <vlcd_display(void*)+0x2a>
   1d36c:	2007c8d4 	.word	0x2007c8d4

0001d370 <nextButton()>:
_Z10nextButtonv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:349
    }
}

void nextButton()
{
   1d370:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:350
    if ((cursor_song != NULL) && (cursor_song->get_next() != NULL))
   1d372:	4c07      	ldr	r4, [pc, #28]	; (1d390 <nextButton()+0x20>)
   1d374:	6820      	ldr	r0, [r4, #0]
   1d376:	b110      	cbz	r0, 1d37e <nextButton()+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:350 (discriminator 1)
   1d378:	f7ff faba 	bl	1c8f0 <SONG_NODE::get_next()>
   1d37c:	b918      	cbnz	r0, 1d386 <nextButton()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:355
    {
        cursor_song = cursor_song->get_next();
    }
    update_display();
}
   1d37e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:354
    update_display();
   1d382:	f7ff bed9 	b.w	1d138 <update_display()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:352
        cursor_song = cursor_song->get_next();
   1d386:	6820      	ldr	r0, [r4, #0]
   1d388:	f7ff fab2 	bl	1c8f0 <SONG_NODE::get_next()>
   1d38c:	6020      	str	r0, [r4, #0]
   1d38e:	e7f6      	b.n	1d37e <nextButton()+0xe>
   1d390:	2007c7c8 	.word	0x2007c7c8

0001d394 <prevButton()>:
_Z10prevButtonv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:358

void prevButton()
{
   1d394:	b510      	push	{r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:359
    if ((cursor_song != NULL) && (cursor_song->get_prev() != NULL))
   1d396:	4c07      	ldr	r4, [pc, #28]	; (1d3b4 <prevButton()+0x20>)
   1d398:	6820      	ldr	r0, [r4, #0]
   1d39a:	b110      	cbz	r0, 1d3a2 <prevButton()+0xe>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:359 (discriminator 1)
   1d39c:	f7ff faab 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d3a0:	b918      	cbnz	r0, 1d3aa <prevButton()+0x16>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:364
    {
        cursor_song = cursor_song->get_prev();
    }
    update_display();
}
   1d3a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:363
    update_display();
   1d3a6:	f7ff bec7 	b.w	1d138 <update_display()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:361
        cursor_song = cursor_song->get_prev();
   1d3aa:	6820      	ldr	r0, [r4, #0]
   1d3ac:	f7ff faa3 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d3b0:	6020      	str	r0, [r4, #0]
   1d3b2:	e7f6      	b.n	1d3a2 <prevButton()+0xe>
   1d3b4:	2007c7c8 	.word	0x2007c7c8

0001d3b8 <vbuttonTask(void*)>:
_Z11vbuttonTaskPv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:108
    bool button_pressed[5] = {false};
   1d3b8:	2300      	movs	r3, #0
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:107
{
   1d3ba:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1d3be:	4c2e      	ldr	r4, [pc, #184]	; (1d478 <vbuttonTask(void*)+0xc0>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:131
                        xQueueSend(song_selected, &cursor_song, NULL);
   1d3c0:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 1d47c <vbuttonTask(void*)+0xc4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:108
    bool button_pressed[5] = {false};
   1d3c4:	9300      	str	r3, [sp, #0]
   1d3c6:	f88d 3004 	strb.w	r3, [sp, #4]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:111
        for (int i = 1; i < 5; i++)
   1d3ca:	2501      	movs	r5, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:132
                        mp3.state = MP3_DECODER::PLAY;
   1d3cc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 1d480 <vbuttonTask(void*)+0xc8>
   1d3d0:	f10d 0601 	add.w	r6, sp, #1
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:113
            if (SW.getSwitch(i) && (button_pressed[i] == false))
   1d3d4:	f7fe fe06 	bl	1bfe4 <SingletonTemplate<Switches>::getInstance()>
   1d3d8:	4629      	mov	r1, r5
   1d3da:	f7f7 fe0d 	bl	14ff8 <Switches::getSwitch(int)>
   1d3de:	b110      	cbz	r0, 1d3e6 <vbuttonTask(void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:113 (discriminator 1)
   1d3e0:	7833      	ldrb	r3, [r6, #0]
   1d3e2:	2b00      	cmp	r3, #0
   1d3e4:	d03f      	beq.n	1d466 <vbuttonTask(void*)+0xae>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:117
            if (button_pressed[i] && (SW.getSwitch(i) == false))
   1d3e6:	7833      	ldrb	r3, [r6, #0]
   1d3e8:	b30b      	cbz	r3, 1d42e <vbuttonTask(void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:117 (discriminator 1)
   1d3ea:	f7fe fdfb 	bl	1bfe4 <SingletonTemplate<Switches>::getInstance()>
   1d3ee:	4629      	mov	r1, r5
   1d3f0:	f7f7 fe02 	bl	14ff8 <Switches::getSwitch(int)>
   1d3f4:	4607      	mov	r7, r0
   1d3f6:	b9d0      	cbnz	r0, 1d42e <vbuttonTask(void*)+0x76>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:119
                switch (i)
   1d3f8:	2d03      	cmp	r5, #3
   1d3fa:	d021      	beq.n	1d440 <vbuttonTask(void*)+0x88>
   1d3fc:	2d04      	cmp	r5, #4
   1d3fe:	d02a      	beq.n	1d456 <vbuttonTask(void*)+0x9e>
   1d400:	2d02      	cmp	r5, #2
   1d402:	d10b      	bne.n	1d41c <vbuttonTask(void*)+0x64>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:129
                    if (cursor_song != NULL)
   1d404:	6823      	ldr	r3, [r4, #0]
   1d406:	b183      	cbz	r3, 1d42a <vbuttonTask(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:131
                        xQueueSend(song_selected, &cursor_song, NULL);
   1d408:	463b      	mov	r3, r7
   1d40a:	463a      	mov	r2, r7
   1d40c:	4621      	mov	r1, r4
   1d40e:	f8d9 0000 	ldr.w	r0, [r9]
   1d412:	f7fb fced 	bl	18df0 <xQueueGenericSend>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:150
                        mp3.state = MP3_DECODER::PLAY;
   1d416:	f888 7005 	strb.w	r7, [r8, #5]
   1d41a:	e006      	b.n	1d42a <vbuttonTask(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:122
                    if ((cursor_song != NULL) && (cursor_song->get_prev() != NULL))
   1d41c:	6820      	ldr	r0, [r4, #0]
   1d41e:	b110      	cbz	r0, 1d426 <vbuttonTask(void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:122 (discriminator 1)
   1d420:	f7ff fa69 	bl	1c8f6 <SONG_NODE::get_prev()>
   1d424:	bb10      	cbnz	r0, 1d46c <vbuttonTask(void*)+0xb4>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:126
                    update_display();
   1d426:	f7ff fe87 	bl	1d138 <update_display()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:156
                button_pressed[i] = false;
   1d42a:	2300      	movs	r3, #0
   1d42c:	7033      	strb	r3, [r6, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:111 (discriminator 2)
        for (int i = 1; i < 5; i++)
   1d42e:	3501      	adds	r5, #1
   1d430:	2d05      	cmp	r5, #5
   1d432:	f106 0601 	add.w	r6, r6, #1
   1d436:	d1cd      	bne.n	1d3d4 <vbuttonTask(void*)+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:159
        vTaskDelay(250);
   1d438:	20fa      	movs	r0, #250	; 0xfa
   1d43a:	f7fc f9bf 	bl	197bc <vTaskDelay>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:160
    }
   1d43e:	e7c4      	b.n	1d3ca <vbuttonTask(void*)+0x12>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:136
                    if ((cursor_song != NULL) && (cursor_song->get_next() != NULL))
   1d440:	6820      	ldr	r0, [r4, #0]
   1d442:	2800      	cmp	r0, #0
   1d444:	d0ef      	beq.n	1d426 <vbuttonTask(void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:136 (discriminator 1)
   1d446:	f7ff fa53 	bl	1c8f0 <SONG_NODE::get_next()>
   1d44a:	2800      	cmp	r0, #0
   1d44c:	d0eb      	beq.n	1d426 <vbuttonTask(void*)+0x6e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:138
                        cursor_song = cursor_song->get_next();
   1d44e:	6820      	ldr	r0, [r4, #0]
   1d450:	f7ff fa4e 	bl	1c8f0 <SONG_NODE::get_next()>
   1d454:	e00d      	b.n	1d472 <vbuttonTask(void*)+0xba>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:144
                    if (mp3.state == MP3_DECODER::PLAY)
   1d456:	f898 3005 	ldrb.w	r3, [r8, #5]
   1d45a:	2b00      	cmp	r3, #0
   1d45c:	d1db      	bne.n	1d416 <vbuttonTask(void*)+0x5e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:146
                        mp3.state = MP3_DECODER::PAUSE;
   1d45e:	2301      	movs	r3, #1
   1d460:	f888 3005 	strb.w	r3, [r8, #5]
   1d464:	e7e1      	b.n	1d42a <vbuttonTask(void*)+0x72>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:115
                button_pressed[i] = true;
   1d466:	2301      	movs	r3, #1
   1d468:	7033      	strb	r3, [r6, #0]
   1d46a:	e7bc      	b.n	1d3e6 <vbuttonTask(void*)+0x2e>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:124
                        cursor_song = cursor_song->get_prev();
   1d46c:	6820      	ldr	r0, [r4, #0]
   1d46e:	f7ff fa42 	bl	1c8f6 <SONG_NODE::get_prev()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:138
                        cursor_song = cursor_song->get_next();
   1d472:	6020      	str	r0, [r4, #0]
   1d474:	e7d7      	b.n	1d426 <vbuttonTask(void*)+0x6e>
   1d476:	bf00      	nop
   1d478:	2007c7c8 	.word	0x2007c7c8
   1d47c:	2007c918 	.word	0x2007c918
   1d480:	2007c8dc 	.word	0x2007c8dc

0001d484 <_GLOBAL__sub_I_song_database>:
_GLOBAL__sub_I_song_database():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:364
}
   1d484:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   1d486:	4c22      	ldr	r4, [pc, #136]	; (1d510 <_GLOBAL__sub_I_song_database+0x8c>)
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:20
SONG_DATABASE song_database;      //Listing of all songs found on SD card
   1d488:	4822      	ldr	r0, [pc, #136]	; (1d514 <_GLOBAL__sub_I_song_database+0x90>)
   1d48a:	f7ff fa38 	bl	1c8fe <SONG_DATABASE::SONG_DATABASE()>
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:103
   1d48e:	6823      	ldr	r3, [r4, #0]
   1d490:	b933      	cbnz	r3, 1d4a0 <_GLOBAL__sub_I_song_database+0x1c>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   1d492:	202c      	movs	r0, #44	; 0x2c
   1d494:	f7f9 fe2a 	bl	170ec <operator new(unsigned int)>
   1d498:	4605      	mov	r5, r0
   1d49a:	f7fa ff55 	bl	18348 <Uart3::Uart3()>
   1d49e:	6025      	str	r5, [r4, #0]
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:26
Uart3 &lcd = Uart3::getInstance();
   1d4a0:	4b1d      	ldr	r3, [pc, #116]	; (1d518 <_GLOBAL__sub_I_song_database+0x94>)
   1d4a2:	6822      	ldr	r2, [r4, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:27
LCDCOMMS lcd_display;
   1d4a4:	481d      	ldr	r0, [pc, #116]	; (1d51c <_GLOBAL__sub_I_song_database+0x98>)
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:26
Uart3 &lcd = Uart3::getInstance();
   1d4a6:	601a      	str	r2, [r3, #0]
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:27
LCDCOMMS lcd_display;
   1d4a8:	f7ff fc66 	bl	1cd78 <LCDCOMMS::LCDCOMMS()>
   1d4ac:	4a1c      	ldr	r2, [pc, #112]	; (1d520 <_GLOBAL__sub_I_song_database+0x9c>)
   1d4ae:	491d      	ldr	r1, [pc, #116]	; (1d524 <_GLOBAL__sub_I_song_database+0xa0>)
   1d4b0:	481a      	ldr	r0, [pc, #104]	; (1d51c <_GLOBAL__sub_I_song_database+0x98>)
   1d4b2:	f7f9 fe7d 	bl	171b0 <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:29
MP3_DECODER mp3;
   1d4b6:	481c      	ldr	r0, [pc, #112]	; (1d528 <_GLOBAL__sub_I_song_database+0xa4>)
   1d4b8:	f7ff f85a 	bl	1c570 <MP3_DECODER::MP3_DECODER()>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:30
GPIO rst(P1_29);
   1d4bc:	213d      	movs	r1, #61	; 0x3d
   1d4be:	481b      	ldr	r0, [pc, #108]	; (1d52c <_GLOBAL__sub_I_song_database+0xa8>)
   1d4c0:	f7f7 fb22 	bl	14b08 <GPIO::GPIO(LPC1758_GPIO_Type)>
   1d4c4:	4a16      	ldr	r2, [pc, #88]	; (1d520 <_GLOBAL__sub_I_song_database+0x9c>)
   1d4c6:	491a      	ldr	r1, [pc, #104]	; (1d530 <_GLOBAL__sub_I_song_database+0xac>)
   1d4c8:	4818      	ldr	r0, [pc, #96]	; (1d52c <_GLOBAL__sub_I_song_database+0xa8>)
   1d4ca:	f7f9 fe71 	bl	171b0 <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:31
GPIO xdcs(P1_28);
   1d4ce:	213c      	movs	r1, #60	; 0x3c
   1d4d0:	4818      	ldr	r0, [pc, #96]	; (1d534 <_GLOBAL__sub_I_song_database+0xb0>)
   1d4d2:	f7f7 fb19 	bl	14b08 <GPIO::GPIO(LPC1758_GPIO_Type)>
   1d4d6:	4a12      	ldr	r2, [pc, #72]	; (1d520 <_GLOBAL__sub_I_song_database+0x9c>)
   1d4d8:	4915      	ldr	r1, [pc, #84]	; (1d530 <_GLOBAL__sub_I_song_database+0xac>)
   1d4da:	4816      	ldr	r0, [pc, #88]	; (1d534 <_GLOBAL__sub_I_song_database+0xb0>)
   1d4dc:	f7f9 fe68 	bl	171b0 <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:32
GPIO xcs(P1_23);
   1d4e0:	2137      	movs	r1, #55	; 0x37
   1d4e2:	4815      	ldr	r0, [pc, #84]	; (1d538 <_GLOBAL__sub_I_song_database+0xb4>)
   1d4e4:	f7f7 fb10 	bl	14b08 <GPIO::GPIO(LPC1758_GPIO_Type)>
   1d4e8:	4a0d      	ldr	r2, [pc, #52]	; (1d520 <_GLOBAL__sub_I_song_database+0x9c>)
   1d4ea:	4911      	ldr	r1, [pc, #68]	; (1d530 <_GLOBAL__sub_I_song_database+0xac>)
   1d4ec:	4812      	ldr	r0, [pc, #72]	; (1d538 <_GLOBAL__sub_I_song_database+0xb4>)
   1d4ee:	f7f9 fe5f 	bl	171b0 <__aeabi_atexit>
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:33
GPIO dreq(P0_30);
   1d4f2:	211e      	movs	r1, #30
   1d4f4:	4811      	ldr	r0, [pc, #68]	; (1d53c <_GLOBAL__sub_I_song_database+0xb8>)
   1d4f6:	f7f7 fb07 	bl	14b08 <GPIO::GPIO(LPC1758_GPIO_Type)>
   1d4fa:	4a09      	ldr	r2, [pc, #36]	; (1d520 <_GLOBAL__sub_I_song_database+0x9c>)
   1d4fc:	490c      	ldr	r1, [pc, #48]	; (1d530 <_GLOBAL__sub_I_song_database+0xac>)
   1d4fe:	480f      	ldr	r0, [pc, #60]	; (1d53c <_GLOBAL__sub_I_song_database+0xb8>)
   1d500:	f7f9 fe56 	bl	171b0 <__aeabi_atexit>
_GLOBAL__sub_I_song_database():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:364
}
   1d504:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
__static_initialization_and_destruction_0():
/Users/akashv/Documents/Github/SJSU-Dev/firmware/MP3 Final/L5_Application/main.cpp:51
LabGPIOInterrupts interrupts;
   1d508:	480d      	ldr	r0, [pc, #52]	; (1d540 <_GLOBAL__sub_I_song_database+0xbc>)
   1d50a:	f7ff bb33 	b.w	1cb74 <LabGPIOInterrupts::LabGPIOInterrupts()>
   1d50e:	bf00      	nop
   1d510:	2007c5f0 	.word	0x2007c5f0
   1d514:	2007c90c 	.word	0x2007c90c
   1d518:	2007c8d4 	.word	0x2007c8d4
   1d51c:	2007c8d8 	.word	0x2007c8d8
   1d520:	2007c560 	.word	0x2007c560
   1d524:	0001cd7b 	.word	0x0001cd7b
   1d528:	2007c8dc 	.word	0x2007c8dc
   1d52c:	2007c904 	.word	0x2007c904
   1d530:	00014bf5 	.word	0x00014bf5
   1d534:	2007c924 	.word	0x2007c924
   1d538:	2007c91c 	.word	0x2007c91c
   1d53c:	2007c7cc 	.word	0x2007c7cc
   1d540:	2007c7d4 	.word	0x2007c7d4

0001d544 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1d544:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1d546:	2310      	movs	r3, #16
   1d548:	2400      	movs	r4, #0
   1d54a:	9302      	str	r3, [sp, #8]
   1d54c:	6803      	ldr	r3, [r0, #0]
   1d54e:	4615      	mov	r5, r2
   1d550:	699e      	ldr	r6, [r3, #24]
   1d552:	9400      	str	r4, [sp, #0]
   1d554:	466b      	mov	r3, sp
   1d556:	f88d 4004 	strb.w	r4, [sp, #4]
   1d55a:	9403      	str	r4, [sp, #12]
   1d55c:	6812      	ldr	r2, [r2, #0]
   1d55e:	47b0      	blx	r6
   1d560:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1d564:	f003 0306 	and.w	r3, r3, #6
   1d568:	2b06      	cmp	r3, #6
   1d56a:	bf09      	itett	eq
   1d56c:	2001      	moveq	r0, #1
   1d56e:	4620      	movne	r0, r4
   1d570:	9b00      	ldreq	r3, [sp, #0]
   1d572:	602b      	streq	r3, [r5, #0]
   1d574:	b004      	add	sp, #16
   1d576:	bd70      	pop	{r4, r5, r6, pc}

0001d578 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1d578:	9800      	ldr	r0, [sp, #0]
   1d57a:	4290      	cmp	r0, r2
   1d57c:	bf0c      	ite	eq
   1d57e:	2006      	moveq	r0, #6
   1d580:	2001      	movne	r0, #1
   1d582:	4770      	bx	lr

0001d584 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   1d584:	b510      	push	{r4, lr}
   1d586:	4604      	mov	r4, r0
   1d588:	4b02      	ldr	r3, [pc, #8]	; (1d594 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1d58a:	6003      	str	r3, [r0, #0]
   1d58c:	f000 f8e3 	bl	1d756 <std::type_info::~type_info()>
   1d590:	4620      	mov	r0, r4
   1d592:	bd10      	pop	{r4, pc}
   1d594:	00028c0c 	.word	0x00028c0c

0001d598 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1d598:	b510      	push	{r4, lr}
   1d59a:	4604      	mov	r4, r0
   1d59c:	f7ff fff2 	bl	1d584 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1d5a0:	4620      	mov	r0, r4
   1d5a2:	2108      	movs	r1, #8
   1d5a4:	f000 f83f 	bl	1d626 <operator delete(void*, unsigned int)>
   1d5a8:	4620      	mov	r0, r4
   1d5aa:	bd10      	pop	{r4, pc}

0001d5ac <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1d5ac:	b538      	push	{r3, r4, r5, lr}
   1d5ae:	4615      	mov	r5, r2
   1d5b0:	461c      	mov	r4, r3
   1d5b2:	f000 f8d3 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d5b6:	b120      	cbz	r0, 1d5c2 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   1d5b8:	2308      	movs	r3, #8
   1d5ba:	60e3      	str	r3, [r4, #12]
   1d5bc:	2306      	movs	r3, #6
   1d5be:	6025      	str	r5, [r4, #0]
   1d5c0:	7123      	strb	r3, [r4, #4]
   1d5c2:	bd38      	pop	{r3, r4, r5, pc}

0001d5c4 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1d5c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d5c8:	4605      	mov	r5, r0
   1d5ca:	460c      	mov	r4, r1
   1d5cc:	4616      	mov	r6, r2
   1d5ce:	461f      	mov	r7, r3
   1d5d0:	f000 f8c4 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d5d4:	b948      	cbnz	r0, 1d5ea <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1d5d6:	2f03      	cmp	r7, #3
   1d5d8:	d807      	bhi.n	1d5ea <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   1d5da:	6823      	ldr	r3, [r4, #0]
   1d5dc:	4632      	mov	r2, r6
   1d5de:	4629      	mov	r1, r5
   1d5e0:	4620      	mov	r0, r4
   1d5e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1d5e6:	695b      	ldr	r3, [r3, #20]
   1d5e8:	4718      	bx	r3
   1d5ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d5ee <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1d5ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d5f2:	9e06      	ldr	r6, [sp, #24]
   1d5f4:	4698      	mov	r8, r3
   1d5f6:	9b08      	ldr	r3, [sp, #32]
   1d5f8:	4607      	mov	r7, r0
   1d5fa:	429e      	cmp	r6, r3
   1d5fc:	4615      	mov	r5, r2
   1d5fe:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1d600:	d103      	bne.n	1d60a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1d602:	9907      	ldr	r1, [sp, #28]
   1d604:	f000 f8aa 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d608:	b958      	cbnz	r0, 1d622 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1d60a:	4641      	mov	r1, r8
   1d60c:	4638      	mov	r0, r7
   1d60e:	f000 f8a5 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d612:	b118      	cbz	r0, 1d61c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   1d614:	2301      	movs	r3, #1
   1d616:	6026      	str	r6, [r4, #0]
   1d618:	7125      	strb	r5, [r4, #4]
   1d61a:	71a3      	strb	r3, [r4, #6]
   1d61c:	2000      	movs	r0, #0
   1d61e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d622:	7165      	strb	r5, [r4, #5]
   1d624:	e7fa      	b.n	1d61c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>

0001d626 <operator delete(void*, unsigned int)>:
_ZdlPvj():
   1d626:	f7f9 bd65 	b.w	170f4 <operator delete(void*)>

0001d62a <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1d62a:	6803      	ldr	r3, [r0, #0]
   1d62c:	07db      	lsls	r3, r3, #31
   1d62e:	d406      	bmi.n	1d63e <__cxa_guard_acquire+0x14>
   1d630:	7843      	ldrb	r3, [r0, #1]
   1d632:	b103      	cbz	r3, 1d636 <__cxa_guard_acquire+0xc>
   1d634:	deff      	udf	#255	; 0xff
   1d636:	2301      	movs	r3, #1
   1d638:	7043      	strb	r3, [r0, #1]
   1d63a:	4618      	mov	r0, r3
   1d63c:	4770      	bx	lr
   1d63e:	2000      	movs	r0, #0
   1d640:	4770      	bx	lr

0001d642 <__cxa_guard_release>:
__cxa_guard_release():
   1d642:	2301      	movs	r3, #1
   1d644:	6003      	str	r3, [r0, #0]
   1d646:	4770      	bx	lr

0001d648 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1d648:	b508      	push	{r3, lr}
   1d64a:	f000 faeb 	bl	1dc24 <std::terminate()>
   1d64e:	Address 0x000000000001d64e is out of bounds.


0001d650 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   1d650:	b510      	push	{r4, lr}
   1d652:	4604      	mov	r4, r0
   1d654:	4b02      	ldr	r3, [pc, #8]	; (1d660 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1d656:	6003      	str	r3, [r0, #0]
   1d658:	f7ff ff94 	bl	1d584 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1d65c:	4620      	mov	r0, r4
   1d65e:	bd10      	pop	{r4, pc}
   1d660:	00028c6c 	.word	0x00028c6c

0001d664 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1d664:	b510      	push	{r4, lr}
   1d666:	4604      	mov	r4, r0
   1d668:	f7ff fff2 	bl	1d650 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1d66c:	4620      	mov	r0, r4
   1d66e:	210c      	movs	r1, #12
   1d670:	f7ff ffd9 	bl	1d626 <operator delete(void*, unsigned int)>
   1d674:	4620      	mov	r0, r4
   1d676:	bd10      	pop	{r4, pc}

0001d678 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1d678:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d67c:	9e06      	ldr	r6, [sp, #24]
   1d67e:	4680      	mov	r8, r0
   1d680:	4296      	cmp	r6, r2
   1d682:	460f      	mov	r7, r1
   1d684:	4614      	mov	r4, r2
   1d686:	461d      	mov	r5, r3
   1d688:	d103      	bne.n	1d692 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   1d68a:	4619      	mov	r1, r3
   1d68c:	f000 f866 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d690:	b958      	cbnz	r0, 1d6aa <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   1d692:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1d696:	4622      	mov	r2, r4
   1d698:	6803      	ldr	r3, [r0, #0]
   1d69a:	9606      	str	r6, [sp, #24]
   1d69c:	6a1e      	ldr	r6, [r3, #32]
   1d69e:	4639      	mov	r1, r7
   1d6a0:	462b      	mov	r3, r5
   1d6a2:	46b4      	mov	ip, r6
   1d6a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1d6a8:	4760      	bx	ip
   1d6aa:	2006      	movs	r0, #6
   1d6ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d6b0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1d6b0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6b4:	460e      	mov	r6, r1
   1d6b6:	4619      	mov	r1, r3
   1d6b8:	4683      	mov	fp, r0
   1d6ba:	4617      	mov	r7, r2
   1d6bc:	4699      	mov	r9, r3
   1d6be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1d6c0:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   1d6c4:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   1d6c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1d6ca:	f000 f847 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d6ce:	b190      	cbz	r0, 1d6f6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   1d6d0:	2e00      	cmp	r6, #0
   1d6d2:	602c      	str	r4, [r5, #0]
   1d6d4:	712f      	strb	r7, [r5, #4]
   1d6d6:	db09      	blt.n	1d6ec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   1d6d8:	4434      	add	r4, r6
   1d6da:	45a0      	cmp	r8, r4
   1d6dc:	bf0c      	ite	eq
   1d6de:	2406      	moveq	r4, #6
   1d6e0:	2401      	movne	r4, #1
   1d6e2:	71ac      	strb	r4, [r5, #6]
   1d6e4:	2000      	movs	r0, #0
   1d6e6:	b001      	add	sp, #4
   1d6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6ec:	3602      	adds	r6, #2
   1d6ee:	d1f9      	bne.n	1d6e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1d6f0:	2301      	movs	r3, #1
   1d6f2:	71ab      	strb	r3, [r5, #6]
   1d6f4:	e7f6      	b.n	1d6e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   1d6f6:	4544      	cmp	r4, r8
   1d6f8:	d104      	bne.n	1d704 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1d6fa:	4651      	mov	r1, sl
   1d6fc:	4658      	mov	r0, fp
   1d6fe:	f000 f82d 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d702:	b988      	cbnz	r0, 1d728 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   1d704:	f8db 0008 	ldr.w	r0, [fp, #8]
   1d708:	463a      	mov	r2, r7
   1d70a:	6803      	ldr	r3, [r0, #0]
   1d70c:	950d      	str	r5, [sp, #52]	; 0x34
   1d70e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   1d712:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   1d716:	940a      	str	r4, [sp, #40]	; 0x28
   1d718:	69dc      	ldr	r4, [r3, #28]
   1d71a:	4631      	mov	r1, r6
   1d71c:	464b      	mov	r3, r9
   1d71e:	46a4      	mov	ip, r4
   1d720:	b001      	add	sp, #4
   1d722:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d726:	4760      	bx	ip
   1d728:	716f      	strb	r7, [r5, #5]
   1d72a:	e7db      	b.n	1d6e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

0001d72c <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1d72c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d730:	4604      	mov	r4, r0
   1d732:	460d      	mov	r5, r1
   1d734:	4616      	mov	r6, r2
   1d736:	461f      	mov	r7, r3
   1d738:	f7ff ff38 	bl	1d5ac <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1d73c:	b948      	cbnz	r0, 1d752 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   1d73e:	68a0      	ldr	r0, [r4, #8]
   1d740:	4632      	mov	r2, r6
   1d742:	6803      	ldr	r3, [r0, #0]
   1d744:	4629      	mov	r1, r5
   1d746:	699c      	ldr	r4, [r3, #24]
   1d748:	463b      	mov	r3, r7
   1d74a:	46a4      	mov	ip, r4
   1d74c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1d750:	4760      	bx	ip
   1d752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d756 <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   1d756:	4770      	bx	lr

0001d758 <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1d758:	2000      	movs	r0, #0
   1d75a:	4770      	bx	lr

0001d75c <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1d75c:	4281      	cmp	r1, r0
   1d75e:	b508      	push	{r3, lr}
   1d760:	d00e      	beq.n	1d780 <std::type_info::operator==(std::type_info const&) const+0x24>
   1d762:	6840      	ldr	r0, [r0, #4]
   1d764:	7803      	ldrb	r3, [r0, #0]
   1d766:	2b2a      	cmp	r3, #42	; 0x2a
   1d768:	d00c      	beq.n	1d784 <std::type_info::operator==(std::type_info const&) const+0x28>
   1d76a:	6849      	ldr	r1, [r1, #4]
   1d76c:	780b      	ldrb	r3, [r1, #0]
   1d76e:	2b2a      	cmp	r3, #42	; 0x2a
   1d770:	bf08      	it	eq
   1d772:	3101      	addeq	r1, #1
   1d774:	f003 fc22 	bl	20fbc <strcmp>
   1d778:	fab0 f080 	clz	r0, r0
   1d77c:	0940      	lsrs	r0, r0, #5
   1d77e:	bd08      	pop	{r3, pc}
   1d780:	2001      	movs	r0, #1
   1d782:	bd08      	pop	{r3, pc}
   1d784:	2000      	movs	r0, #0
   1d786:	bd08      	pop	{r3, pc}

0001d788 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   1d788:	b510      	push	{r4, lr}
   1d78a:	4604      	mov	r4, r0
   1d78c:	4b02      	ldr	r3, [pc, #8]	; (1d798 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1d78e:	6003      	str	r3, [r0, #0]
   1d790:	f7ff fef8 	bl	1d584 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1d794:	4620      	mov	r0, r4
   1d796:	bd10      	pop	{r4, pc}
   1d798:	00028ce4 	.word	0x00028ce4

0001d79c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1d79c:	b510      	push	{r4, lr}
   1d79e:	4604      	mov	r4, r0
   1d7a0:	f7ff fff2 	bl	1d788 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1d7a4:	4620      	mov	r0, r4
   1d7a6:	2118      	movs	r1, #24
   1d7a8:	f7ff ff3d 	bl	1d626 <operator delete(void*, unsigned int)>
   1d7ac:	4620      	mov	r0, r4
   1d7ae:	bd10      	pop	{r4, pc}

0001d7b0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1d7b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   1d7b8:	4604      	mov	r4, r0
   1d7ba:	454a      	cmp	r2, r9
   1d7bc:	460f      	mov	r7, r1
   1d7be:	4616      	mov	r6, r2
   1d7c0:	4698      	mov	r8, r3
   1d7c2:	d103      	bne.n	1d7cc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   1d7c4:	4619      	mov	r1, r3
   1d7c6:	f7ff ffc9 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d7ca:	bb38      	cbnz	r0, 1d81c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1d7cc:	68e5      	ldr	r5, [r4, #12]
   1d7ce:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1d7d2:	e001      	b.n	1d7d8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   1d7d4:	3d01      	subs	r5, #1
   1d7d6:	3c08      	subs	r4, #8
   1d7d8:	b315      	cbz	r5, 1d820 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   1d7da:	68e3      	ldr	r3, [r4, #12]
   1d7dc:	079a      	lsls	r2, r3, #30
   1d7de:	d5f9      	bpl.n	1d7d4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1d7e0:	f013 0a01 	ands.w	sl, r3, #1
   1d7e4:	ea4f 2223 	mov.w	r2, r3, asr #8
   1d7e8:	d003      	beq.n	1d7f2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   1d7ea:	1cfb      	adds	r3, r7, #3
   1d7ec:	d0f2      	beq.n	1d7d4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1d7ee:	6833      	ldr	r3, [r6, #0]
   1d7f0:	589a      	ldr	r2, [r3, r2]
   1d7f2:	68a0      	ldr	r0, [r4, #8]
   1d7f4:	4432      	add	r2, r6
   1d7f6:	6803      	ldr	r3, [r0, #0]
   1d7f8:	f8cd 9000 	str.w	r9, [sp]
   1d7fc:	f8d3 b020 	ldr.w	fp, [r3, #32]
   1d800:	4639      	mov	r1, r7
   1d802:	4643      	mov	r3, r8
   1d804:	47d8      	blx	fp
   1d806:	2803      	cmp	r0, #3
   1d808:	dde4      	ble.n	1d7d4 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1d80a:	f1ba 0f00 	cmp.w	sl, #0
   1d80e:	d002      	beq.n	1d816 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1d810:	f040 0001 	orr.w	r0, r0, #1
   1d814:	b2c0      	uxtb	r0, r0
   1d816:	b003      	add	sp, #12
   1d818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d81c:	2006      	movs	r0, #6
   1d81e:	e7fa      	b.n	1d816 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   1d820:	2001      	movs	r0, #1
   1d822:	e7f8      	b.n	1d816 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

0001d824 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1d824:	b4f0      	push	{r4, r5, r6, r7}
   1d826:	1e0e      	subs	r6, r1, #0
   1d828:	9c04      	ldr	r4, [sp, #16]
   1d82a:	db06      	blt.n	1d83a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   1d82c:	1990      	adds	r0, r2, r6
   1d82e:	4284      	cmp	r4, r0
   1d830:	bf14      	ite	ne
   1d832:	2001      	movne	r0, #1
   1d834:	2006      	moveq	r0, #6
   1d836:	bcf0      	pop	{r4, r5, r6, r7}
   1d838:	4770      	bx	lr
   1d83a:	3602      	adds	r6, #2
   1d83c:	d005      	beq.n	1d84a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   1d83e:	6805      	ldr	r5, [r0, #0]
   1d840:	9404      	str	r4, [sp, #16]
   1d842:	6a2c      	ldr	r4, [r5, #32]
   1d844:	46a4      	mov	ip, r4
   1d846:	bcf0      	pop	{r4, r5, r6, r7}
   1d848:	4760      	bx	ip
   1d84a:	2001      	movs	r0, #1
   1d84c:	e7f3      	b.n	1d836 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

0001d84e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1d84e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d852:	b091      	sub	sp, #68	; 0x44
   1d854:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   1d856:	9308      	str	r3, [sp, #32]
   1d858:	68a3      	ldr	r3, [r4, #8]
   1d85a:	4688      	mov	r8, r1
   1d85c:	06d9      	lsls	r1, r3, #27
   1d85e:	bf48      	it	mi
   1d860:	6883      	ldrmi	r3, [r0, #8]
   1d862:	9207      	str	r2, [sp, #28]
   1d864:	bf48      	it	mi
   1d866:	60a3      	strmi	r3, [r4, #8]
   1d868:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1d86a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1d86c:	4681      	mov	r9, r0
   1d86e:	4293      	cmp	r3, r2
   1d870:	d105      	bne.n	1d87e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1d872:	991b      	ldr	r1, [sp, #108]	; 0x6c
   1d874:	f7ff ff72 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d878:	2800      	cmp	r0, #0
   1d87a:	f040 8119 	bne.w	1dab0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   1d87e:	9908      	ldr	r1, [sp, #32]
   1d880:	4648      	mov	r0, r9
   1d882:	f7ff ff6b 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1d886:	4682      	mov	sl, r0
   1d888:	2800      	cmp	r0, #0
   1d88a:	d16e      	bne.n	1d96a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   1d88c:	2600      	movs	r6, #0
   1d88e:	f1b8 0f00 	cmp.w	r8, #0
   1d892:	bfa8      	it	ge
   1d894:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   1d896:	46b3      	mov	fp, r6
   1d898:	bfa4      	itt	ge
   1d89a:	eba3 0308 	subge.w	r3, r3, r8
   1d89e:	9309      	strge	r3, [sp, #36]	; 0x24
   1d8a0:	f04f 0301 	mov.w	r3, #1
   1d8a4:	930a      	str	r3, [sp, #40]	; 0x28
   1d8a6:	9b07      	ldr	r3, [sp, #28]
   1d8a8:	bfb8      	it	lt
   1d8aa:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   1d8ae:	f043 0301 	orr.w	r3, r3, #1
   1d8b2:	9606      	str	r6, [sp, #24]
   1d8b4:	930b      	str	r3, [sp, #44]	; 0x2c
   1d8b6:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1d8ba:	9304      	str	r3, [sp, #16]
   1d8bc:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   1d8c0:	9305      	str	r3, [sp, #20]
   1d8c2:	9b04      	ldr	r3, [sp, #16]
   1d8c4:	2b00      	cmp	r3, #0
   1d8c6:	f000 80e9 	beq.w	1da9c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   1d8ca:	9b05      	ldr	r3, [sp, #20]
   1d8cc:	68a5      	ldr	r5, [r4, #8]
   1d8ce:	68db      	ldr	r3, [r3, #12]
   1d8d0:	950f      	str	r5, [sp, #60]	; 0x3c
   1d8d2:	07da      	lsls	r2, r3, #31
   1d8d4:	bf48      	it	mi
   1d8d6:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   1d8d8:	ea4f 2123 	mov.w	r1, r3, asr #8
   1d8dc:	bf48      	it	mi
   1d8de:	6800      	ldrmi	r0, [r0, #0]
   1d8e0:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   1d8e4:	bf48      	it	mi
   1d8e6:	5841      	ldrmi	r1, [r0, r1]
   1d8e8:	981a      	ldr	r0, [sp, #104]	; 0x68
   1d8ea:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   1d8ee:	4401      	add	r1, r0
   1d8f0:	9809      	ldr	r0, [sp, #36]	; 0x24
   1d8f2:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   1d8f6:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   1d8fa:	bf4c      	ite	mi
   1d8fc:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   1d8fe:	9a07      	ldrpl	r2, [sp, #28]
   1d900:	b138      	cbz	r0, 1d912 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   1d902:	4288      	cmp	r0, r1
   1d904:	bf2c      	ite	cs
   1d906:	2000      	movcs	r0, #0
   1d908:	2001      	movcc	r0, #1
   1d90a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   1d90c:	42b8      	cmp	r0, r7
   1d90e:	f000 80ba 	beq.w	1da86 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   1d912:	079b      	lsls	r3, r3, #30
   1d914:	d407      	bmi.n	1d926 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   1d916:	f118 0f02 	cmn.w	r8, #2
   1d91a:	d102      	bne.n	1d922 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   1d91c:	07af      	lsls	r7, r5, #30
   1d91e:	f000 80b4 	beq.w	1da8a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1d922:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1d926:	9b05      	ldr	r3, [sp, #20]
   1d928:	ad0d      	add	r5, sp, #52	; 0x34
   1d92a:	6898      	ldr	r0, [r3, #8]
   1d92c:	6803      	ldr	r3, [r0, #0]
   1d92e:	9503      	str	r5, [sp, #12]
   1d930:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   1d932:	9502      	str	r5, [sp, #8]
   1d934:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1d936:	e88d 0022 	stmia.w	sp, {r1, r5}
   1d93a:	4641      	mov	r1, r8
   1d93c:	69dd      	ldr	r5, [r3, #28]
   1d93e:	9b08      	ldr	r3, [sp, #32]
   1d940:	47a8      	blx	r5
   1d942:	7961      	ldrb	r1, [r4, #5]
   1d944:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   1d948:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   1d94c:	4311      	orrs	r1, r2
   1d94e:	2d06      	cmp	r5, #6
   1d950:	4603      	mov	r3, r0
   1d952:	7161      	strb	r1, [r4, #5]
   1d954:	d001      	beq.n	1d95a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   1d956:	2d02      	cmp	r5, #2
   1d958:	d122      	bne.n	1d9a0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   1d95a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1d95c:	71a5      	strb	r5, [r4, #6]
   1d95e:	6023      	str	r3, [r4, #0]
   1d960:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   1d964:	7123      	strb	r3, [r4, #4]
   1d966:	4682      	mov	sl, r0
   1d968:	e078      	b.n	1da5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1d96a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1d96c:	f1b8 0f00 	cmp.w	r8, #0
   1d970:	6023      	str	r3, [r4, #0]
   1d972:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1d976:	7123      	strb	r3, [r4, #4]
   1d978:	db0c      	blt.n	1d994 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   1d97a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1d97c:	4498      	add	r8, r3
   1d97e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1d980:	4543      	cmp	r3, r8
   1d982:	bf0c      	ite	eq
   1d984:	f04f 0806 	moveq.w	r8, #6
   1d988:	f04f 0801 	movne.w	r8, #1
   1d98c:	f884 8006 	strb.w	r8, [r4, #6]
   1d990:	2600      	movs	r6, #0
   1d992:	e064      	b.n	1da5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1d994:	f118 0f02 	cmn.w	r8, #2
   1d998:	d1fa      	bne.n	1d990 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1d99a:	2301      	movs	r3, #1
   1d99c:	71a3      	strb	r3, [r4, #6]
   1d99e:	e7f7      	b.n	1d990 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1d9a0:	6822      	ldr	r2, [r4, #0]
   1d9a2:	b986      	cbnz	r6, 1d9c6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1d9a4:	b97a      	cbnz	r2, 1d9c6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   1d9a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1d9a8:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   1d9ac:	6022      	str	r2, [r4, #0]
   1d9ae:	7125      	strb	r5, [r4, #4]
   1d9b0:	b122      	cbz	r2, 1d9bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1d9b2:	b119      	cbz	r1, 1d9bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1d9b4:	f8d9 2008 	ldr.w	r2, [r9, #8]
   1d9b8:	07d5      	lsls	r5, r2, #31
   1d9ba:	d5d4      	bpl.n	1d966 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   1d9bc:	7962      	ldrb	r2, [r4, #5]
   1d9be:	2a04      	cmp	r2, #4
   1d9c0:	d164      	bne.n	1da8c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   1d9c2:	469a      	mov	sl, r3
   1d9c4:	e04a      	b.n	1da5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1d9c6:	b15a      	cbz	r2, 1d9e0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   1d9c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1d9ca:	429a      	cmp	r2, r3
   1d9cc:	d106      	bne.n	1d9dc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   1d9ce:	7923      	ldrb	r3, [r4, #4]
   1d9d0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   1d9d4:	4313      	orrs	r3, r2
   1d9d6:	7123      	strb	r3, [r4, #4]
   1d9d8:	4633      	mov	r3, r6
   1d9da:	e7ef      	b.n	1d9bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1d9dc:	b92b      	cbnz	r3, 1d9ea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1d9de:	b920      	cbnz	r0, 1d9ea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1d9e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1d9e2:	2b00      	cmp	r3, #0
   1d9e4:	d0f8      	beq.n	1d9d8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1d9e6:	2e00      	cmp	r6, #0
   1d9e8:	d0f6      	beq.n	1d9d8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   1d9ea:	2903      	cmp	r1, #3
   1d9ec:	79a7      	ldrb	r7, [r4, #6]
   1d9ee:	d904      	bls.n	1d9fa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   1d9f0:	07c8      	lsls	r0, r1, #31
   1d9f2:	d561      	bpl.n	1dab8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d9f4:	68a3      	ldr	r3, [r4, #8]
   1d9f6:	0799      	lsls	r1, r3, #30
   1d9f8:	d55e      	bpl.n	1dab8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d9fa:	b97f      	cbnz	r7, 1da1c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   1d9fc:	2d03      	cmp	r5, #3
   1d9fe:	dd05      	ble.n	1da0c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1da00:	07eb      	lsls	r3, r5, #31
   1da02:	d560      	bpl.n	1dac6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   1da04:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1da08:	079f      	lsls	r7, r3, #30
   1da0a:	d52c      	bpl.n	1da66 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1da0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1da0e:	4641      	mov	r1, r8
   1da10:	9300      	str	r3, [sp, #0]
   1da12:	9808      	ldr	r0, [sp, #32]
   1da14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1da16:	f7ff ff05 	bl	1d824 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1da1a:	4607      	mov	r7, r0
   1da1c:	b945      	cbnz	r5, 1da30 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1da1e:	2f03      	cmp	r7, #3
   1da20:	dd54      	ble.n	1dacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1da22:	07fd      	lsls	r5, r7, #31
   1da24:	d503      	bpl.n	1da2e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   1da26:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1da2a:	0798      	lsls	r0, r3, #30
   1da2c:	d44e      	bmi.n	1dacc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   1da2e:	2501      	movs	r5, #1
   1da30:	ea85 0307 	eor.w	r3, r5, r7
   1da34:	b2db      	uxtb	r3, r3
   1da36:	2b03      	cmp	r3, #3
   1da38:	d917      	bls.n	1da6a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   1da3a:	2d03      	cmp	r5, #3
   1da3c:	bfc5      	ittet	gt
   1da3e:	462f      	movgt	r7, r5
   1da40:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   1da42:	4633      	movle	r3, r6
   1da44:	6023      	strgt	r3, [r4, #0]
   1da46:	bfc8      	it	gt
   1da48:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   1da4c:	71a7      	strb	r7, [r4, #6]
   1da4e:	bfc4      	itt	gt
   1da50:	7123      	strbgt	r3, [r4, #4]
   1da52:	2300      	movgt	r3, #0
   1da54:	07b9      	lsls	r1, r7, #30
   1da56:	d401      	bmi.n	1da5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1da58:	07fa      	lsls	r2, r7, #31
   1da5a:	d4af      	bmi.n	1d9bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1da5c:	4656      	mov	r6, sl
   1da5e:	4630      	mov	r0, r6
   1da60:	b011      	add	sp, #68	; 0x44
   1da62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da66:	2701      	movs	r7, #1
   1da68:	e7e2      	b.n	1da30 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1da6a:	403d      	ands	r5, r7
   1da6c:	b2ed      	uxtb	r5, r5
   1da6e:	2d03      	cmp	r5, #3
   1da70:	f8c4 b000 	str.w	fp, [r4]
   1da74:	d904      	bls.n	1da80 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   1da76:	2302      	movs	r3, #2
   1da78:	f04f 0a01 	mov.w	sl, #1
   1da7c:	71a3      	strb	r3, [r4, #6]
   1da7e:	e7ed      	b.n	1da5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1da80:	2301      	movs	r3, #1
   1da82:	71a3      	strb	r3, [r4, #6]
   1da84:	e79a      	b.n	1d9bc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1da86:	2301      	movs	r3, #1
   1da88:	9306      	str	r3, [sp, #24]
   1da8a:	4633      	mov	r3, r6
   1da8c:	9a04      	ldr	r2, [sp, #16]
   1da8e:	461e      	mov	r6, r3
   1da90:	3a01      	subs	r2, #1
   1da92:	9204      	str	r2, [sp, #16]
   1da94:	9a05      	ldr	r2, [sp, #20]
   1da96:	3a08      	subs	r2, #8
   1da98:	9205      	str	r2, [sp, #20]
   1da9a:	e712      	b.n	1d8c2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1da9c:	9b06      	ldr	r3, [sp, #24]
   1da9e:	2b00      	cmp	r3, #0
   1daa0:	d0dd      	beq.n	1da5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1daa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1daa4:	9306      	str	r3, [sp, #24]
   1daa6:	2b00      	cmp	r3, #0
   1daa8:	d0d9      	beq.n	1da5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1daaa:	9b04      	ldr	r3, [sp, #16]
   1daac:	930a      	str	r3, [sp, #40]	; 0x28
   1daae:	e702      	b.n	1d8b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   1dab0:	f89d 301c 	ldrb.w	r3, [sp, #28]
   1dab4:	7163      	strb	r3, [r4, #5]
   1dab6:	e76b      	b.n	1d990 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1dab8:	2f00      	cmp	r7, #0
   1daba:	bf08      	it	eq
   1dabc:	2701      	moveq	r7, #1
   1dabe:	2d00      	cmp	r5, #0
   1dac0:	bf08      	it	eq
   1dac2:	2501      	moveq	r5, #1
   1dac4:	e7b4      	b.n	1da30 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1dac6:	2d00      	cmp	r5, #0
   1dac8:	d1cd      	bne.n	1da66 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1daca:	2701      	movs	r7, #1
   1dacc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1dace:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1dad0:	9300      	str	r3, [sp, #0]
   1dad2:	4641      	mov	r1, r8
   1dad4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1dad6:	9808      	ldr	r0, [sp, #32]
   1dad8:	f7ff fea4 	bl	1d824 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1dadc:	4605      	mov	r5, r0
   1dade:	e7a7      	b.n	1da30 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

0001dae0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1dae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dae4:	b089      	sub	sp, #36	; 0x24
   1dae6:	4607      	mov	r7, r0
   1dae8:	9102      	str	r1, [sp, #8]
   1daea:	4692      	mov	sl, r2
   1daec:	461c      	mov	r4, r3
   1daee:	f7ff fd5d 	bl	1d5ac <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1daf2:	4605      	mov	r5, r0
   1daf4:	2800      	cmp	r0, #0
   1daf6:	d155      	bne.n	1dba4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1daf8:	f04f 0b00 	mov.w	fp, #0
   1dafc:	f8d4 8008 	ldr.w	r8, [r4, #8]
   1db00:	f8d7 900c 	ldr.w	r9, [r7, #12]
   1db04:	f018 0f10 	tst.w	r8, #16
   1db08:	bf18      	it	ne
   1db0a:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   1db0e:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   1db12:	f008 0301 	and.w	r3, r8, #1
   1db16:	9303      	str	r3, [sp, #12]
   1db18:	f1b9 0f00 	cmp.w	r9, #0
   1db1c:	d06b      	beq.n	1dbf6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   1db1e:	68f2      	ldr	r2, [r6, #12]
   1db20:	f8cd b010 	str.w	fp, [sp, #16]
   1db24:	f002 0301 	and.w	r3, r2, #1
   1db28:	9300      	str	r3, [sp, #0]
   1db2a:	f012 0302 	ands.w	r3, r2, #2
   1db2e:	f88d b014 	strb.w	fp, [sp, #20]
   1db32:	f8cd 8018 	str.w	r8, [sp, #24]
   1db36:	f8cd b01c 	str.w	fp, [sp, #28]
   1db3a:	9301      	str	r3, [sp, #4]
   1db3c:	d102      	bne.n	1db44 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   1db3e:	9b03      	ldr	r3, [sp, #12]
   1db40:	2b00      	cmp	r3, #0
   1db42:	d04a      	beq.n	1dbda <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1db44:	f1ba 0f00 	cmp.w	sl, #0
   1db48:	d030      	beq.n	1dbac <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   1db4a:	9b00      	ldr	r3, [sp, #0]
   1db4c:	1212      	asrs	r2, r2, #8
   1db4e:	b113      	cbz	r3, 1db56 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   1db50:	f8da 3000 	ldr.w	r3, [sl]
   1db54:	589a      	ldr	r2, [r3, r2]
   1db56:	4452      	add	r2, sl
   1db58:	68b0      	ldr	r0, [r6, #8]
   1db5a:	9902      	ldr	r1, [sp, #8]
   1db5c:	6803      	ldr	r3, [r0, #0]
   1db5e:	699d      	ldr	r5, [r3, #24]
   1db60:	ab04      	add	r3, sp, #16
   1db62:	47a8      	blx	r5
   1db64:	4605      	mov	r5, r0
   1db66:	2800      	cmp	r0, #0
   1db68:	d037      	beq.n	1dbda <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1db6a:	9b07      	ldr	r3, [sp, #28]
   1db6c:	2b08      	cmp	r3, #8
   1db6e:	d103      	bne.n	1db78 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1db70:	9b00      	ldr	r3, [sp, #0]
   1db72:	b10b      	cbz	r3, 1db78 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1db74:	68b3      	ldr	r3, [r6, #8]
   1db76:	9307      	str	r3, [sp, #28]
   1db78:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1db7c:	2b03      	cmp	r3, #3
   1db7e:	dd02      	ble.n	1db86 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1db80:	9a01      	ldr	r2, [sp, #4]
   1db82:	2a00      	cmp	r2, #0
   1db84:	d03c      	beq.n	1dc00 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1db86:	68e1      	ldr	r1, [r4, #12]
   1db88:	b9c1      	cbnz	r1, 1dbbc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   1db8a:	ab04      	add	r3, sp, #16
   1db8c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1db8e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1db92:	7923      	ldrb	r3, [r4, #4]
   1db94:	2b03      	cmp	r3, #3
   1db96:	dd05      	ble.n	1dba4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1db98:	079a      	lsls	r2, r3, #30
   1db9a:	d509      	bpl.n	1dbb0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   1db9c:	68bb      	ldr	r3, [r7, #8]
   1db9e:	f013 0f01 	tst.w	r3, #1
   1dba2:	d11a      	bne.n	1dbda <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   1dba4:	4628      	mov	r0, r5
   1dba6:	b009      	add	sp, #36	; 0x24
   1dba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbac:	4652      	mov	r2, sl
   1dbae:	e7d3      	b.n	1db58 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   1dbb0:	07db      	lsls	r3, r3, #31
   1dbb2:	d5f7      	bpl.n	1dba4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1dbb4:	68bb      	ldr	r3, [r7, #8]
   1dbb6:	f013 0f02 	tst.w	r3, #2
   1dbba:	e7f2      	b.n	1dba2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   1dbbc:	6823      	ldr	r3, [r4, #0]
   1dbbe:	9a04      	ldr	r2, [sp, #16]
   1dbc0:	4293      	cmp	r3, r2
   1dbc2:	d004      	beq.n	1dbce <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   1dbc4:	2300      	movs	r3, #0
   1dbc6:	6023      	str	r3, [r4, #0]
   1dbc8:	2302      	movs	r3, #2
   1dbca:	7123      	strb	r3, [r4, #4]
   1dbcc:	e7ea      	b.n	1dba4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1dbce:	b143      	cbz	r3, 1dbe2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   1dbd0:	7923      	ldrb	r3, [r4, #4]
   1dbd2:	f89d 2014 	ldrb.w	r2, [sp, #20]
   1dbd6:	4313      	orrs	r3, r2
   1dbd8:	7123      	strb	r3, [r4, #4]
   1dbda:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   1dbde:	3e08      	subs	r6, #8
   1dbe0:	e79a      	b.n	1db18 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   1dbe2:	9807      	ldr	r0, [sp, #28]
   1dbe4:	2808      	cmp	r0, #8
   1dbe6:	d0ef      	beq.n	1dbc8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1dbe8:	2908      	cmp	r1, #8
   1dbea:	d0ed      	beq.n	1dbc8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1dbec:	f7ff fdb6 	bl	1d75c <std::type_info::operator==(std::type_info const&) const>
   1dbf0:	2800      	cmp	r0, #0
   1dbf2:	d1ed      	bne.n	1dbd0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   1dbf4:	e7e8      	b.n	1dbc8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   1dbf6:	7925      	ldrb	r5, [r4, #4]
   1dbf8:	3500      	adds	r5, #0
   1dbfa:	bf18      	it	ne
   1dbfc:	2501      	movne	r5, #1
   1dbfe:	e7d1      	b.n	1dba4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1dc00:	f023 0302 	bic.w	r3, r3, #2
   1dc04:	f88d 3014 	strb.w	r3, [sp, #20]
   1dc08:	e7bd      	b.n	1db86 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

0001dc0a <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1dc0a:	b508      	push	{r3, lr}
   1dc0c:	4780      	blx	r0
   1dc0e:	f000 fe6f 	bl	1e8f0 <abort>
   1dc12:	Address 0x000000000001dc12 is out of bounds.


0001dc14 <std::get_terminate()>:
_ZSt13get_terminatev():
   1dc14:	4b02      	ldr	r3, [pc, #8]	; (1dc20 <std::get_terminate()+0xc>)
   1dc16:	6818      	ldr	r0, [r3, #0]
   1dc18:	f3bf 8f5b 	dmb	ish
   1dc1c:	4770      	bx	lr
   1dc1e:	bf00      	nop
   1dc20:	2007c0dc 	.word	0x2007c0dc

0001dc24 <std::terminate()>:
_ZSt9terminatev():
   1dc24:	b508      	push	{r3, lr}
   1dc26:	f7ff fff5 	bl	1dc14 <std::get_terminate()>
   1dc2a:	f7ff ffee 	bl	1dc0a <__cxxabiv1::__terminate(void (*)())>
   1dc2e:	Address 0x000000000001dc2e is out of bounds.


0001dc30 <__aeabi_llsl>:
__aeabi_llsl():
   1dc30:	4091      	lsls	r1, r2
   1dc32:	1c03      	adds	r3, r0, #0
   1dc34:	4090      	lsls	r0, r2
   1dc36:	469c      	mov	ip, r3
   1dc38:	3a20      	subs	r2, #32
   1dc3a:	4093      	lsls	r3, r2
   1dc3c:	4319      	orrs	r1, r3
   1dc3e:	4252      	negs	r2, r2
   1dc40:	4663      	mov	r3, ip
   1dc42:	40d3      	lsrs	r3, r2
   1dc44:	4319      	orrs	r1, r3
   1dc46:	4770      	bx	lr

0001dc48 <__aeabi_drsub>:
__aeabi_drsub():
   1dc48:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1dc4c:	e002      	b.n	1dc54 <__adddf3>
   1dc4e:	bf00      	nop

0001dc50 <__aeabi_dsub>:
__subdf3():
   1dc50:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001dc54 <__adddf3>:
__aeabi_dadd():
   1dc54:	b530      	push	{r4, r5, lr}
   1dc56:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1dc5a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1dc5e:	ea94 0f05 	teq	r4, r5
   1dc62:	bf08      	it	eq
   1dc64:	ea90 0f02 	teqeq	r0, r2
   1dc68:	bf1f      	itttt	ne
   1dc6a:	ea54 0c00 	orrsne.w	ip, r4, r0
   1dc6e:	ea55 0c02 	orrsne.w	ip, r5, r2
   1dc72:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1dc76:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1dc7a:	f000 80e2 	beq.w	1de42 <__adddf3+0x1ee>
   1dc7e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1dc82:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1dc86:	bfb8      	it	lt
   1dc88:	426d      	neglt	r5, r5
   1dc8a:	dd0c      	ble.n	1dca6 <__adddf3+0x52>
   1dc8c:	442c      	add	r4, r5
   1dc8e:	ea80 0202 	eor.w	r2, r0, r2
   1dc92:	ea81 0303 	eor.w	r3, r1, r3
   1dc96:	ea82 0000 	eor.w	r0, r2, r0
   1dc9a:	ea83 0101 	eor.w	r1, r3, r1
   1dc9e:	ea80 0202 	eor.w	r2, r0, r2
   1dca2:	ea81 0303 	eor.w	r3, r1, r3
   1dca6:	2d36      	cmp	r5, #54	; 0x36
   1dca8:	bf88      	it	hi
   1dcaa:	bd30      	pophi	{r4, r5, pc}
   1dcac:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1dcb0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1dcb4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1dcb8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1dcbc:	d002      	beq.n	1dcc4 <__adddf3+0x70>
   1dcbe:	4240      	negs	r0, r0
   1dcc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1dcc4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1dcc8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1dccc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1dcd0:	d002      	beq.n	1dcd8 <__adddf3+0x84>
   1dcd2:	4252      	negs	r2, r2
   1dcd4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1dcd8:	ea94 0f05 	teq	r4, r5
   1dcdc:	f000 80a7 	beq.w	1de2e <__adddf3+0x1da>
   1dce0:	f1a4 0401 	sub.w	r4, r4, #1
   1dce4:	f1d5 0e20 	rsbs	lr, r5, #32
   1dce8:	db0d      	blt.n	1dd06 <__adddf3+0xb2>
   1dcea:	fa02 fc0e 	lsl.w	ip, r2, lr
   1dcee:	fa22 f205 	lsr.w	r2, r2, r5
   1dcf2:	1880      	adds	r0, r0, r2
   1dcf4:	f141 0100 	adc.w	r1, r1, #0
   1dcf8:	fa03 f20e 	lsl.w	r2, r3, lr
   1dcfc:	1880      	adds	r0, r0, r2
   1dcfe:	fa43 f305 	asr.w	r3, r3, r5
   1dd02:	4159      	adcs	r1, r3
   1dd04:	e00e      	b.n	1dd24 <__adddf3+0xd0>
   1dd06:	f1a5 0520 	sub.w	r5, r5, #32
   1dd0a:	f10e 0e20 	add.w	lr, lr, #32
   1dd0e:	2a01      	cmp	r2, #1
   1dd10:	fa03 fc0e 	lsl.w	ip, r3, lr
   1dd14:	bf28      	it	cs
   1dd16:	f04c 0c02 	orrcs.w	ip, ip, #2
   1dd1a:	fa43 f305 	asr.w	r3, r3, r5
   1dd1e:	18c0      	adds	r0, r0, r3
   1dd20:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1dd24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1dd28:	d507      	bpl.n	1dd3a <__adddf3+0xe6>
   1dd2a:	f04f 0e00 	mov.w	lr, #0
   1dd2e:	f1dc 0c00 	rsbs	ip, ip, #0
   1dd32:	eb7e 0000 	sbcs.w	r0, lr, r0
   1dd36:	eb6e 0101 	sbc.w	r1, lr, r1
   1dd3a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1dd3e:	d31b      	bcc.n	1dd78 <__adddf3+0x124>
   1dd40:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1dd44:	d30c      	bcc.n	1dd60 <__adddf3+0x10c>
   1dd46:	0849      	lsrs	r1, r1, #1
   1dd48:	ea5f 0030 	movs.w	r0, r0, rrx
   1dd4c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1dd50:	f104 0401 	add.w	r4, r4, #1
   1dd54:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1dd58:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1dd5c:	f080 809a 	bcs.w	1de94 <__adddf3+0x240>
   1dd60:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1dd64:	bf08      	it	eq
   1dd66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1dd6a:	f150 0000 	adcs.w	r0, r0, #0
   1dd6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1dd72:	ea41 0105 	orr.w	r1, r1, r5
   1dd76:	bd30      	pop	{r4, r5, pc}
   1dd78:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1dd7c:	4140      	adcs	r0, r0
   1dd7e:	eb41 0101 	adc.w	r1, r1, r1
   1dd82:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1dd86:	f1a4 0401 	sub.w	r4, r4, #1
   1dd8a:	d1e9      	bne.n	1dd60 <__adddf3+0x10c>
   1dd8c:	f091 0f00 	teq	r1, #0
   1dd90:	bf04      	itt	eq
   1dd92:	4601      	moveq	r1, r0
   1dd94:	2000      	moveq	r0, #0
   1dd96:	fab1 f381 	clz	r3, r1
   1dd9a:	bf08      	it	eq
   1dd9c:	3320      	addeq	r3, #32
   1dd9e:	f1a3 030b 	sub.w	r3, r3, #11
   1dda2:	f1b3 0220 	subs.w	r2, r3, #32
   1dda6:	da0c      	bge.n	1ddc2 <__adddf3+0x16e>
   1dda8:	320c      	adds	r2, #12
   1ddaa:	dd08      	ble.n	1ddbe <__adddf3+0x16a>
   1ddac:	f102 0c14 	add.w	ip, r2, #20
   1ddb0:	f1c2 020c 	rsb	r2, r2, #12
   1ddb4:	fa01 f00c 	lsl.w	r0, r1, ip
   1ddb8:	fa21 f102 	lsr.w	r1, r1, r2
   1ddbc:	e00c      	b.n	1ddd8 <__adddf3+0x184>
   1ddbe:	f102 0214 	add.w	r2, r2, #20
   1ddc2:	bfd8      	it	le
   1ddc4:	f1c2 0c20 	rsble	ip, r2, #32
   1ddc8:	fa01 f102 	lsl.w	r1, r1, r2
   1ddcc:	fa20 fc0c 	lsr.w	ip, r0, ip
   1ddd0:	bfdc      	itt	le
   1ddd2:	ea41 010c 	orrle.w	r1, r1, ip
   1ddd6:	4090      	lslle	r0, r2
   1ddd8:	1ae4      	subs	r4, r4, r3
   1ddda:	bfa2      	ittt	ge
   1dddc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1dde0:	4329      	orrge	r1, r5
   1dde2:	bd30      	popge	{r4, r5, pc}
   1dde4:	ea6f 0404 	mvn.w	r4, r4
   1dde8:	3c1f      	subs	r4, #31
   1ddea:	da1c      	bge.n	1de26 <__adddf3+0x1d2>
   1ddec:	340c      	adds	r4, #12
   1ddee:	dc0e      	bgt.n	1de0e <__adddf3+0x1ba>
   1ddf0:	f104 0414 	add.w	r4, r4, #20
   1ddf4:	f1c4 0220 	rsb	r2, r4, #32
   1ddf8:	fa20 f004 	lsr.w	r0, r0, r4
   1ddfc:	fa01 f302 	lsl.w	r3, r1, r2
   1de00:	ea40 0003 	orr.w	r0, r0, r3
   1de04:	fa21 f304 	lsr.w	r3, r1, r4
   1de08:	ea45 0103 	orr.w	r1, r5, r3
   1de0c:	bd30      	pop	{r4, r5, pc}
   1de0e:	f1c4 040c 	rsb	r4, r4, #12
   1de12:	f1c4 0220 	rsb	r2, r4, #32
   1de16:	fa20 f002 	lsr.w	r0, r0, r2
   1de1a:	fa01 f304 	lsl.w	r3, r1, r4
   1de1e:	ea40 0003 	orr.w	r0, r0, r3
   1de22:	4629      	mov	r1, r5
   1de24:	bd30      	pop	{r4, r5, pc}
   1de26:	fa21 f004 	lsr.w	r0, r1, r4
   1de2a:	4629      	mov	r1, r5
   1de2c:	bd30      	pop	{r4, r5, pc}
   1de2e:	f094 0f00 	teq	r4, #0
   1de32:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1de36:	bf06      	itte	eq
   1de38:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1de3c:	3401      	addeq	r4, #1
   1de3e:	3d01      	subne	r5, #1
   1de40:	e74e      	b.n	1dce0 <__adddf3+0x8c>
   1de42:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1de46:	bf18      	it	ne
   1de48:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1de4c:	d029      	beq.n	1dea2 <__adddf3+0x24e>
   1de4e:	ea94 0f05 	teq	r4, r5
   1de52:	bf08      	it	eq
   1de54:	ea90 0f02 	teqeq	r0, r2
   1de58:	d005      	beq.n	1de66 <__adddf3+0x212>
   1de5a:	ea54 0c00 	orrs.w	ip, r4, r0
   1de5e:	bf04      	itt	eq
   1de60:	4619      	moveq	r1, r3
   1de62:	4610      	moveq	r0, r2
   1de64:	bd30      	pop	{r4, r5, pc}
   1de66:	ea91 0f03 	teq	r1, r3
   1de6a:	bf1e      	ittt	ne
   1de6c:	2100      	movne	r1, #0
   1de6e:	2000      	movne	r0, #0
   1de70:	bd30      	popne	{r4, r5, pc}
   1de72:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1de76:	d105      	bne.n	1de84 <__adddf3+0x230>
   1de78:	0040      	lsls	r0, r0, #1
   1de7a:	4149      	adcs	r1, r1
   1de7c:	bf28      	it	cs
   1de7e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1de82:	bd30      	pop	{r4, r5, pc}
   1de84:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1de88:	bf3c      	itt	cc
   1de8a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1de8e:	bd30      	popcc	{r4, r5, pc}
   1de90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1de94:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1de98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1de9c:	f04f 0000 	mov.w	r0, #0
   1dea0:	bd30      	pop	{r4, r5, pc}
   1dea2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1dea6:	bf1a      	itte	ne
   1dea8:	4619      	movne	r1, r3
   1deaa:	4610      	movne	r0, r2
   1deac:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1deb0:	bf1c      	itt	ne
   1deb2:	460b      	movne	r3, r1
   1deb4:	4602      	movne	r2, r0
   1deb6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1deba:	bf06      	itte	eq
   1debc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1dec0:	ea91 0f03 	teqeq	r1, r3
   1dec4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1dec8:	bd30      	pop	{r4, r5, pc}
   1deca:	bf00      	nop

0001decc <__aeabi_ui2d>:
__floatunsidf():
   1decc:	f090 0f00 	teq	r0, #0
   1ded0:	bf04      	itt	eq
   1ded2:	2100      	moveq	r1, #0
   1ded4:	4770      	bxeq	lr
   1ded6:	b530      	push	{r4, r5, lr}
   1ded8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1dedc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1dee0:	f04f 0500 	mov.w	r5, #0
   1dee4:	f04f 0100 	mov.w	r1, #0
   1dee8:	e750      	b.n	1dd8c <__adddf3+0x138>
   1deea:	bf00      	nop

0001deec <__aeabi_i2d>:
__aeabi_i2d():
   1deec:	f090 0f00 	teq	r0, #0
   1def0:	bf04      	itt	eq
   1def2:	2100      	moveq	r1, #0
   1def4:	4770      	bxeq	lr
   1def6:	b530      	push	{r4, r5, lr}
   1def8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1defc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1df00:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1df04:	bf48      	it	mi
   1df06:	4240      	negmi	r0, r0
   1df08:	f04f 0100 	mov.w	r1, #0
   1df0c:	e73e      	b.n	1dd8c <__adddf3+0x138>
   1df0e:	bf00      	nop

0001df10 <__aeabi_f2d>:
__aeabi_f2d():
   1df10:	0042      	lsls	r2, r0, #1
   1df12:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1df16:	ea4f 0131 	mov.w	r1, r1, rrx
   1df1a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1df1e:	bf1f      	itttt	ne
   1df20:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1df24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1df28:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1df2c:	4770      	bxne	lr
   1df2e:	f092 0f00 	teq	r2, #0
   1df32:	bf14      	ite	ne
   1df34:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1df38:	4770      	bxeq	lr
   1df3a:	b530      	push	{r4, r5, lr}
   1df3c:	f44f 7460 	mov.w	r4, #896	; 0x380
   1df40:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1df44:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1df48:	e720      	b.n	1dd8c <__adddf3+0x138>
   1df4a:	bf00      	nop

0001df4c <__aeabi_ul2d>:
__floatundidf():
   1df4c:	ea50 0201 	orrs.w	r2, r0, r1
   1df50:	bf08      	it	eq
   1df52:	4770      	bxeq	lr
   1df54:	b530      	push	{r4, r5, lr}
   1df56:	f04f 0500 	mov.w	r5, #0
   1df5a:	e00a      	b.n	1df72 <__aeabi_l2d+0x16>

0001df5c <__aeabi_l2d>:
__aeabi_l2d():
   1df5c:	ea50 0201 	orrs.w	r2, r0, r1
   1df60:	bf08      	it	eq
   1df62:	4770      	bxeq	lr
   1df64:	b530      	push	{r4, r5, lr}
   1df66:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1df6a:	d502      	bpl.n	1df72 <__aeabi_l2d+0x16>
   1df6c:	4240      	negs	r0, r0
   1df6e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1df72:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1df76:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1df7a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1df7e:	f43f aedc 	beq.w	1dd3a <__adddf3+0xe6>
   1df82:	f04f 0203 	mov.w	r2, #3
   1df86:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1df8a:	bf18      	it	ne
   1df8c:	3203      	addne	r2, #3
   1df8e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1df92:	bf18      	it	ne
   1df94:	3203      	addne	r2, #3
   1df96:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1df9a:	f1c2 0320 	rsb	r3, r2, #32
   1df9e:	fa00 fc03 	lsl.w	ip, r0, r3
   1dfa2:	fa20 f002 	lsr.w	r0, r0, r2
   1dfa6:	fa01 fe03 	lsl.w	lr, r1, r3
   1dfaa:	ea40 000e 	orr.w	r0, r0, lr
   1dfae:	fa21 f102 	lsr.w	r1, r1, r2
   1dfb2:	4414      	add	r4, r2
   1dfb4:	e6c1      	b.n	1dd3a <__adddf3+0xe6>
   1dfb6:	bf00      	nop

0001dfb8 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   1dfb8:	004a      	lsls	r2, r1, #1
   1dfba:	d211      	bcs.n	1dfe0 <__aeabi_d2uiz+0x28>
   1dfbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1dfc0:	d211      	bcs.n	1dfe6 <__aeabi_d2uiz+0x2e>
   1dfc2:	d50d      	bpl.n	1dfe0 <__aeabi_d2uiz+0x28>
   1dfc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1dfc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1dfcc:	d40e      	bmi.n	1dfec <__aeabi_d2uiz+0x34>
   1dfce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1dfd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1dfd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1dfda:	fa23 f002 	lsr.w	r0, r3, r2
   1dfde:	4770      	bx	lr
   1dfe0:	f04f 0000 	mov.w	r0, #0
   1dfe4:	4770      	bx	lr
   1dfe6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1dfea:	d102      	bne.n	1dff2 <__aeabi_d2uiz+0x3a>
   1dfec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1dff0:	4770      	bx	lr
   1dff2:	f04f 0000 	mov.w	r0, #0
   1dff6:	4770      	bx	lr

0001dff8 <__aeabi_d2f>:
__truncdfsf2():
   1dff8:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1dffc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1e000:	bf24      	itt	cs
   1e002:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1e006:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1e00a:	d90d      	bls.n	1e028 <__aeabi_d2f+0x30>
   1e00c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1e010:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1e014:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1e018:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1e01c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1e020:	bf08      	it	eq
   1e022:	f020 0001 	biceq.w	r0, r0, #1
   1e026:	4770      	bx	lr
   1e028:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1e02c:	d121      	bne.n	1e072 <__aeabi_d2f+0x7a>
   1e02e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1e032:	bfbc      	itt	lt
   1e034:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1e038:	4770      	bxlt	lr
   1e03a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1e03e:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1e042:	f1c2 0218 	rsb	r2, r2, #24
   1e046:	f1c2 0c20 	rsb	ip, r2, #32
   1e04a:	fa10 f30c 	lsls.w	r3, r0, ip
   1e04e:	fa20 f002 	lsr.w	r0, r0, r2
   1e052:	bf18      	it	ne
   1e054:	f040 0001 	orrne.w	r0, r0, #1
   1e058:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1e05c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1e060:	fa03 fc0c 	lsl.w	ip, r3, ip
   1e064:	ea40 000c 	orr.w	r0, r0, ip
   1e068:	fa23 f302 	lsr.w	r3, r3, r2
   1e06c:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1e070:	e7cc      	b.n	1e00c <__aeabi_d2f+0x14>
   1e072:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1e076:	d107      	bne.n	1e088 <__aeabi_d2f+0x90>
   1e078:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1e07c:	bf1e      	ittt	ne
   1e07e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1e082:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1e086:	4770      	bxne	lr
   1e088:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1e08c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1e090:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e094:	4770      	bx	lr
   1e096:	bf00      	nop

0001e098 <__aeabi_frsub>:
__aeabi_frsub():
   1e098:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1e09c:	e002      	b.n	1e0a4 <__addsf3>
   1e09e:	bf00      	nop

0001e0a0 <__aeabi_fsub>:
__aeabi_fsub():
   1e0a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001e0a4 <__addsf3>:
__addsf3():
   1e0a4:	0042      	lsls	r2, r0, #1
   1e0a6:	bf1f      	itttt	ne
   1e0a8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1e0ac:	ea92 0f03 	teqne	r2, r3
   1e0b0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1e0b4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1e0b8:	d06a      	beq.n	1e190 <__addsf3+0xec>
   1e0ba:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1e0be:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1e0c2:	bfc1      	itttt	gt
   1e0c4:	18d2      	addgt	r2, r2, r3
   1e0c6:	4041      	eorgt	r1, r0
   1e0c8:	4048      	eorgt	r0, r1
   1e0ca:	4041      	eorgt	r1, r0
   1e0cc:	bfb8      	it	lt
   1e0ce:	425b      	neglt	r3, r3
   1e0d0:	2b19      	cmp	r3, #25
   1e0d2:	bf88      	it	hi
   1e0d4:	4770      	bxhi	lr
   1e0d6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1e0da:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e0de:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1e0e2:	bf18      	it	ne
   1e0e4:	4240      	negne	r0, r0
   1e0e6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1e0ea:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1e0ee:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1e0f2:	bf18      	it	ne
   1e0f4:	4249      	negne	r1, r1
   1e0f6:	ea92 0f03 	teq	r2, r3
   1e0fa:	d03f      	beq.n	1e17c <__addsf3+0xd8>
   1e0fc:	f1a2 0201 	sub.w	r2, r2, #1
   1e100:	fa41 fc03 	asr.w	ip, r1, r3
   1e104:	eb10 000c 	adds.w	r0, r0, ip
   1e108:	f1c3 0320 	rsb	r3, r3, #32
   1e10c:	fa01 f103 	lsl.w	r1, r1, r3
   1e110:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1e114:	d502      	bpl.n	1e11c <__addsf3+0x78>
   1e116:	4249      	negs	r1, r1
   1e118:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1e11c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1e120:	d313      	bcc.n	1e14a <__addsf3+0xa6>
   1e122:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1e126:	d306      	bcc.n	1e136 <__addsf3+0x92>
   1e128:	0840      	lsrs	r0, r0, #1
   1e12a:	ea4f 0131 	mov.w	r1, r1, rrx
   1e12e:	f102 0201 	add.w	r2, r2, #1
   1e132:	2afe      	cmp	r2, #254	; 0xfe
   1e134:	d251      	bcs.n	1e1da <__addsf3+0x136>
   1e136:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1e13a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1e13e:	bf08      	it	eq
   1e140:	f020 0001 	biceq.w	r0, r0, #1
   1e144:	ea40 0003 	orr.w	r0, r0, r3
   1e148:	4770      	bx	lr
   1e14a:	0049      	lsls	r1, r1, #1
   1e14c:	eb40 0000 	adc.w	r0, r0, r0
   1e150:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1e154:	f1a2 0201 	sub.w	r2, r2, #1
   1e158:	d1ed      	bne.n	1e136 <__addsf3+0x92>
   1e15a:	fab0 fc80 	clz	ip, r0
   1e15e:	f1ac 0c08 	sub.w	ip, ip, #8
   1e162:	ebb2 020c 	subs.w	r2, r2, ip
   1e166:	fa00 f00c 	lsl.w	r0, r0, ip
   1e16a:	bfaa      	itet	ge
   1e16c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1e170:	4252      	neglt	r2, r2
   1e172:	4318      	orrge	r0, r3
   1e174:	bfbc      	itt	lt
   1e176:	40d0      	lsrlt	r0, r2
   1e178:	4318      	orrlt	r0, r3
   1e17a:	4770      	bx	lr
   1e17c:	f092 0f00 	teq	r2, #0
   1e180:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1e184:	bf06      	itte	eq
   1e186:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1e18a:	3201      	addeq	r2, #1
   1e18c:	3b01      	subne	r3, #1
   1e18e:	e7b5      	b.n	1e0fc <__addsf3+0x58>
   1e190:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1e194:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1e198:	bf18      	it	ne
   1e19a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1e19e:	d021      	beq.n	1e1e4 <__addsf3+0x140>
   1e1a0:	ea92 0f03 	teq	r2, r3
   1e1a4:	d004      	beq.n	1e1b0 <__addsf3+0x10c>
   1e1a6:	f092 0f00 	teq	r2, #0
   1e1aa:	bf08      	it	eq
   1e1ac:	4608      	moveq	r0, r1
   1e1ae:	4770      	bx	lr
   1e1b0:	ea90 0f01 	teq	r0, r1
   1e1b4:	bf1c      	itt	ne
   1e1b6:	2000      	movne	r0, #0
   1e1b8:	4770      	bxne	lr
   1e1ba:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1e1be:	d104      	bne.n	1e1ca <__addsf3+0x126>
   1e1c0:	0040      	lsls	r0, r0, #1
   1e1c2:	bf28      	it	cs
   1e1c4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1e1c8:	4770      	bx	lr
   1e1ca:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1e1ce:	bf3c      	itt	cc
   1e1d0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1e1d4:	4770      	bxcc	lr
   1e1d6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1e1da:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1e1de:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e1e2:	4770      	bx	lr
   1e1e4:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1e1e8:	bf16      	itet	ne
   1e1ea:	4608      	movne	r0, r1
   1e1ec:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1e1f0:	4601      	movne	r1, r0
   1e1f2:	0242      	lsls	r2, r0, #9
   1e1f4:	bf06      	itte	eq
   1e1f6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1e1fa:	ea90 0f01 	teqeq	r0, r1
   1e1fe:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1e202:	4770      	bx	lr

0001e204 <__aeabi_ui2f>:
__floatunsisf():
   1e204:	f04f 0300 	mov.w	r3, #0
   1e208:	e004      	b.n	1e214 <__aeabi_i2f+0x8>
   1e20a:	bf00      	nop

0001e20c <__aeabi_i2f>:
__floatsisf():
   1e20c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1e210:	bf48      	it	mi
   1e212:	4240      	negmi	r0, r0
   1e214:	ea5f 0c00 	movs.w	ip, r0
   1e218:	bf08      	it	eq
   1e21a:	4770      	bxeq	lr
   1e21c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1e220:	4601      	mov	r1, r0
   1e222:	f04f 0000 	mov.w	r0, #0
   1e226:	e01c      	b.n	1e262 <__aeabi_l2f+0x2a>

0001e228 <__aeabi_ul2f>:
__aeabi_ul2f():
   1e228:	ea50 0201 	orrs.w	r2, r0, r1
   1e22c:	bf08      	it	eq
   1e22e:	4770      	bxeq	lr
   1e230:	f04f 0300 	mov.w	r3, #0
   1e234:	e00a      	b.n	1e24c <__aeabi_l2f+0x14>
   1e236:	bf00      	nop

0001e238 <__aeabi_l2f>:
__aeabi_l2f():
   1e238:	ea50 0201 	orrs.w	r2, r0, r1
   1e23c:	bf08      	it	eq
   1e23e:	4770      	bxeq	lr
   1e240:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1e244:	d502      	bpl.n	1e24c <__aeabi_l2f+0x14>
   1e246:	4240      	negs	r0, r0
   1e248:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1e24c:	ea5f 0c01 	movs.w	ip, r1
   1e250:	bf02      	ittt	eq
   1e252:	4684      	moveq	ip, r0
   1e254:	4601      	moveq	r1, r0
   1e256:	2000      	moveq	r0, #0
   1e258:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1e25c:	bf08      	it	eq
   1e25e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1e262:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1e266:	fabc f28c 	clz	r2, ip
   1e26a:	3a08      	subs	r2, #8
   1e26c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1e270:	db10      	blt.n	1e294 <__aeabi_l2f+0x5c>
   1e272:	fa01 fc02 	lsl.w	ip, r1, r2
   1e276:	4463      	add	r3, ip
   1e278:	fa00 fc02 	lsl.w	ip, r0, r2
   1e27c:	f1c2 0220 	rsb	r2, r2, #32
   1e280:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1e284:	fa20 f202 	lsr.w	r2, r0, r2
   1e288:	eb43 0002 	adc.w	r0, r3, r2
   1e28c:	bf08      	it	eq
   1e28e:	f020 0001 	biceq.w	r0, r0, #1
   1e292:	4770      	bx	lr
   1e294:	f102 0220 	add.w	r2, r2, #32
   1e298:	fa01 fc02 	lsl.w	ip, r1, r2
   1e29c:	f1c2 0220 	rsb	r2, r2, #32
   1e2a0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1e2a4:	fa21 f202 	lsr.w	r2, r1, r2
   1e2a8:	eb43 0002 	adc.w	r0, r3, r2
   1e2ac:	bf08      	it	eq
   1e2ae:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1e2b2:	4770      	bx	lr

0001e2b4 <__aeabi_fmul>:
__aeabi_fmul():
   1e2b4:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1e2b8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1e2bc:	bf1e      	ittt	ne
   1e2be:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1e2c2:	ea92 0f0c 	teqne	r2, ip
   1e2c6:	ea93 0f0c 	teqne	r3, ip
   1e2ca:	d06f      	beq.n	1e3ac <__aeabi_fmul+0xf8>
   1e2cc:	441a      	add	r2, r3
   1e2ce:	ea80 0c01 	eor.w	ip, r0, r1
   1e2d2:	0240      	lsls	r0, r0, #9
   1e2d4:	bf18      	it	ne
   1e2d6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1e2da:	d01e      	beq.n	1e31a <__aeabi_fmul+0x66>
   1e2dc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1e2e0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1e2e4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1e2e8:	fba0 3101 	umull	r3, r1, r0, r1
   1e2ec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1e2f0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1e2f4:	bf3e      	ittt	cc
   1e2f6:	0049      	lslcc	r1, r1, #1
   1e2f8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1e2fc:	005b      	lslcc	r3, r3, #1
   1e2fe:	ea40 0001 	orr.w	r0, r0, r1
   1e302:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1e306:	2afd      	cmp	r2, #253	; 0xfd
   1e308:	d81d      	bhi.n	1e346 <__aeabi_fmul+0x92>
   1e30a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1e30e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1e312:	bf08      	it	eq
   1e314:	f020 0001 	biceq.w	r0, r0, #1
   1e318:	4770      	bx	lr
   1e31a:	f090 0f00 	teq	r0, #0
   1e31e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1e322:	bf08      	it	eq
   1e324:	0249      	lsleq	r1, r1, #9
   1e326:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1e32a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1e32e:	3a7f      	subs	r2, #127	; 0x7f
   1e330:	bfc2      	ittt	gt
   1e332:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1e336:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1e33a:	4770      	bxgt	lr
   1e33c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e340:	f04f 0300 	mov.w	r3, #0
   1e344:	3a01      	subs	r2, #1
   1e346:	dc5d      	bgt.n	1e404 <__aeabi_fmul+0x150>
   1e348:	f112 0f19 	cmn.w	r2, #25
   1e34c:	bfdc      	itt	le
   1e34e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1e352:	4770      	bxle	lr
   1e354:	f1c2 0200 	rsb	r2, r2, #0
   1e358:	0041      	lsls	r1, r0, #1
   1e35a:	fa21 f102 	lsr.w	r1, r1, r2
   1e35e:	f1c2 0220 	rsb	r2, r2, #32
   1e362:	fa00 fc02 	lsl.w	ip, r0, r2
   1e366:	ea5f 0031 	movs.w	r0, r1, rrx
   1e36a:	f140 0000 	adc.w	r0, r0, #0
   1e36e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1e372:	bf08      	it	eq
   1e374:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1e378:	4770      	bx	lr
   1e37a:	f092 0f00 	teq	r2, #0
   1e37e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1e382:	bf02      	ittt	eq
   1e384:	0040      	lsleq	r0, r0, #1
   1e386:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1e38a:	3a01      	subeq	r2, #1
   1e38c:	d0f9      	beq.n	1e382 <__aeabi_fmul+0xce>
   1e38e:	ea40 000c 	orr.w	r0, r0, ip
   1e392:	f093 0f00 	teq	r3, #0
   1e396:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1e39a:	bf02      	ittt	eq
   1e39c:	0049      	lsleq	r1, r1, #1
   1e39e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1e3a2:	3b01      	subeq	r3, #1
   1e3a4:	d0f9      	beq.n	1e39a <__aeabi_fmul+0xe6>
   1e3a6:	ea41 010c 	orr.w	r1, r1, ip
   1e3aa:	e78f      	b.n	1e2cc <__aeabi_fmul+0x18>
   1e3ac:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1e3b0:	ea92 0f0c 	teq	r2, ip
   1e3b4:	bf18      	it	ne
   1e3b6:	ea93 0f0c 	teqne	r3, ip
   1e3ba:	d00a      	beq.n	1e3d2 <__aeabi_fmul+0x11e>
   1e3bc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1e3c0:	bf18      	it	ne
   1e3c2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1e3c6:	d1d8      	bne.n	1e37a <__aeabi_fmul+0xc6>
   1e3c8:	ea80 0001 	eor.w	r0, r0, r1
   1e3cc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1e3d0:	4770      	bx	lr
   1e3d2:	f090 0f00 	teq	r0, #0
   1e3d6:	bf17      	itett	ne
   1e3d8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1e3dc:	4608      	moveq	r0, r1
   1e3de:	f091 0f00 	teqne	r1, #0
   1e3e2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1e3e6:	d014      	beq.n	1e412 <__aeabi_fmul+0x15e>
   1e3e8:	ea92 0f0c 	teq	r2, ip
   1e3ec:	d101      	bne.n	1e3f2 <__aeabi_fmul+0x13e>
   1e3ee:	0242      	lsls	r2, r0, #9
   1e3f0:	d10f      	bne.n	1e412 <__aeabi_fmul+0x15e>
   1e3f2:	ea93 0f0c 	teq	r3, ip
   1e3f6:	d103      	bne.n	1e400 <__aeabi_fmul+0x14c>
   1e3f8:	024b      	lsls	r3, r1, #9
   1e3fa:	bf18      	it	ne
   1e3fc:	4608      	movne	r0, r1
   1e3fe:	d108      	bne.n	1e412 <__aeabi_fmul+0x15e>
   1e400:	ea80 0001 	eor.w	r0, r0, r1
   1e404:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1e408:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1e40c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e410:	4770      	bx	lr
   1e412:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1e416:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1e41a:	4770      	bx	lr

0001e41c <__aeabi_fdiv>:
__aeabi_fdiv():
   1e41c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1e420:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1e424:	bf1e      	ittt	ne
   1e426:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1e42a:	ea92 0f0c 	teqne	r2, ip
   1e42e:	ea93 0f0c 	teqne	r3, ip
   1e432:	d069      	beq.n	1e508 <__aeabi_fdiv+0xec>
   1e434:	eba2 0203 	sub.w	r2, r2, r3
   1e438:	ea80 0c01 	eor.w	ip, r0, r1
   1e43c:	0249      	lsls	r1, r1, #9
   1e43e:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1e442:	d037      	beq.n	1e4b4 <__aeabi_fdiv+0x98>
   1e444:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1e448:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1e44c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1e450:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1e454:	428b      	cmp	r3, r1
   1e456:	bf38      	it	cc
   1e458:	005b      	lslcc	r3, r3, #1
   1e45a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1e45e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1e462:	428b      	cmp	r3, r1
   1e464:	bf24      	itt	cs
   1e466:	1a5b      	subcs	r3, r3, r1
   1e468:	ea40 000c 	orrcs.w	r0, r0, ip
   1e46c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1e470:	bf24      	itt	cs
   1e472:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1e476:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1e47a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1e47e:	bf24      	itt	cs
   1e480:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1e484:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1e488:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1e48c:	bf24      	itt	cs
   1e48e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1e492:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1e496:	011b      	lsls	r3, r3, #4
   1e498:	bf18      	it	ne
   1e49a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1e49e:	d1e0      	bne.n	1e462 <__aeabi_fdiv+0x46>
   1e4a0:	2afd      	cmp	r2, #253	; 0xfd
   1e4a2:	f63f af50 	bhi.w	1e346 <__aeabi_fmul+0x92>
   1e4a6:	428b      	cmp	r3, r1
   1e4a8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1e4ac:	bf08      	it	eq
   1e4ae:	f020 0001 	biceq.w	r0, r0, #1
   1e4b2:	4770      	bx	lr
   1e4b4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1e4b8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1e4bc:	327f      	adds	r2, #127	; 0x7f
   1e4be:	bfc2      	ittt	gt
   1e4c0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1e4c4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1e4c8:	4770      	bxgt	lr
   1e4ca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e4ce:	f04f 0300 	mov.w	r3, #0
   1e4d2:	3a01      	subs	r2, #1
   1e4d4:	e737      	b.n	1e346 <__aeabi_fmul+0x92>
   1e4d6:	f092 0f00 	teq	r2, #0
   1e4da:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1e4de:	bf02      	ittt	eq
   1e4e0:	0040      	lsleq	r0, r0, #1
   1e4e2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1e4e6:	3a01      	subeq	r2, #1
   1e4e8:	d0f9      	beq.n	1e4de <__aeabi_fdiv+0xc2>
   1e4ea:	ea40 000c 	orr.w	r0, r0, ip
   1e4ee:	f093 0f00 	teq	r3, #0
   1e4f2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1e4f6:	bf02      	ittt	eq
   1e4f8:	0049      	lsleq	r1, r1, #1
   1e4fa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1e4fe:	3b01      	subeq	r3, #1
   1e500:	d0f9      	beq.n	1e4f6 <__aeabi_fdiv+0xda>
   1e502:	ea41 010c 	orr.w	r1, r1, ip
   1e506:	e795      	b.n	1e434 <__aeabi_fdiv+0x18>
   1e508:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1e50c:	ea92 0f0c 	teq	r2, ip
   1e510:	d108      	bne.n	1e524 <__aeabi_fdiv+0x108>
   1e512:	0242      	lsls	r2, r0, #9
   1e514:	f47f af7d 	bne.w	1e412 <__aeabi_fmul+0x15e>
   1e518:	ea93 0f0c 	teq	r3, ip
   1e51c:	f47f af70 	bne.w	1e400 <__aeabi_fmul+0x14c>
   1e520:	4608      	mov	r0, r1
   1e522:	e776      	b.n	1e412 <__aeabi_fmul+0x15e>
   1e524:	ea93 0f0c 	teq	r3, ip
   1e528:	d104      	bne.n	1e534 <__aeabi_fdiv+0x118>
   1e52a:	024b      	lsls	r3, r1, #9
   1e52c:	f43f af4c 	beq.w	1e3c8 <__aeabi_fmul+0x114>
   1e530:	4608      	mov	r0, r1
   1e532:	e76e      	b.n	1e412 <__aeabi_fmul+0x15e>
   1e534:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1e538:	bf18      	it	ne
   1e53a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1e53e:	d1ca      	bne.n	1e4d6 <__aeabi_fdiv+0xba>
   1e540:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1e544:	f47f af5c 	bne.w	1e400 <__aeabi_fmul+0x14c>
   1e548:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1e54c:	f47f af3c 	bne.w	1e3c8 <__aeabi_fmul+0x114>
   1e550:	e75f      	b.n	1e412 <__aeabi_fmul+0x15e>
   1e552:	bf00      	nop

0001e554 <__aeabi_f2iz>:
__aeabi_f2iz():
   1e554:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1e558:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1e55c:	d30f      	bcc.n	1e57e <__aeabi_f2iz+0x2a>
   1e55e:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1e562:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1e566:	d90d      	bls.n	1e584 <__aeabi_f2iz+0x30>
   1e568:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1e56c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1e570:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1e574:	fa23 f002 	lsr.w	r0, r3, r2
   1e578:	bf18      	it	ne
   1e57a:	4240      	negne	r0, r0
   1e57c:	4770      	bx	lr
   1e57e:	f04f 0000 	mov.w	r0, #0
   1e582:	4770      	bx	lr
   1e584:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1e588:	d101      	bne.n	1e58e <__aeabi_f2iz+0x3a>
   1e58a:	0242      	lsls	r2, r0, #9
   1e58c:	d105      	bne.n	1e59a <__aeabi_f2iz+0x46>
   1e58e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1e592:	bf08      	it	eq
   1e594:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1e598:	4770      	bx	lr
   1e59a:	f04f 0000 	mov.w	r0, #0
   1e59e:	4770      	bx	lr

0001e5a0 <__aeabi_f2uiz>:
__fixunssfsi():
   1e5a0:	0042      	lsls	r2, r0, #1
   1e5a2:	d20e      	bcs.n	1e5c2 <__aeabi_f2uiz+0x22>
   1e5a4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1e5a8:	d30b      	bcc.n	1e5c2 <__aeabi_f2uiz+0x22>
   1e5aa:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1e5ae:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1e5b2:	d409      	bmi.n	1e5c8 <__aeabi_f2uiz+0x28>
   1e5b4:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1e5b8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1e5bc:	fa23 f002 	lsr.w	r0, r3, r2
   1e5c0:	4770      	bx	lr
   1e5c2:	f04f 0000 	mov.w	r0, #0
   1e5c6:	4770      	bx	lr
   1e5c8:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1e5cc:	d101      	bne.n	1e5d2 <__aeabi_f2uiz+0x32>
   1e5ce:	0242      	lsls	r2, r0, #9
   1e5d0:	d102      	bne.n	1e5d8 <__aeabi_f2uiz+0x38>
   1e5d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e5d6:	4770      	bx	lr
   1e5d8:	f04f 0000 	mov.w	r0, #0
   1e5dc:	4770      	bx	lr
   1e5de:	bf00      	nop

0001e5e0 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   1e5e0:	b953      	cbnz	r3, 1e5f8 <__aeabi_uldivmod+0x18>
   1e5e2:	b94a      	cbnz	r2, 1e5f8 <__aeabi_uldivmod+0x18>
   1e5e4:	2900      	cmp	r1, #0
   1e5e6:	bf08      	it	eq
   1e5e8:	2800      	cmpeq	r0, #0
   1e5ea:	bf1c      	itt	ne
   1e5ec:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1e5f0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1e5f4:	f000 b97a 	b.w	1e8ec <__aeabi_idiv0>
   1e5f8:	f1ad 0c08 	sub.w	ip, sp, #8
   1e5fc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1e600:	f000 f806 	bl	1e610 <__udivmoddi4>
   1e604:	f8dd e004 	ldr.w	lr, [sp, #4]
   1e608:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1e60c:	b004      	add	sp, #16
   1e60e:	4770      	bx	lr

0001e610 <__udivmoddi4>:
__udivmoddi4():
   1e610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e614:	468c      	mov	ip, r1
   1e616:	460e      	mov	r6, r1
   1e618:	4604      	mov	r4, r0
   1e61a:	9d08      	ldr	r5, [sp, #32]
   1e61c:	2b00      	cmp	r3, #0
   1e61e:	d150      	bne.n	1e6c2 <__udivmoddi4+0xb2>
   1e620:	428a      	cmp	r2, r1
   1e622:	4617      	mov	r7, r2
   1e624:	d96c      	bls.n	1e700 <__udivmoddi4+0xf0>
   1e626:	fab2 fe82 	clz	lr, r2
   1e62a:	f1be 0f00 	cmp.w	lr, #0
   1e62e:	d00b      	beq.n	1e648 <__udivmoddi4+0x38>
   1e630:	f1ce 0c20 	rsb	ip, lr, #32
   1e634:	fa01 f60e 	lsl.w	r6, r1, lr
   1e638:	fa20 fc0c 	lsr.w	ip, r0, ip
   1e63c:	fa02 f70e 	lsl.w	r7, r2, lr
   1e640:	ea4c 0c06 	orr.w	ip, ip, r6
   1e644:	fa00 f40e 	lsl.w	r4, r0, lr
   1e648:	0c3a      	lsrs	r2, r7, #16
   1e64a:	fbbc f9f2 	udiv	r9, ip, r2
   1e64e:	b2bb      	uxth	r3, r7
   1e650:	fb02 cc19 	mls	ip, r2, r9, ip
   1e654:	fb09 fa03 	mul.w	sl, r9, r3
   1e658:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1e65c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   1e660:	45b2      	cmp	sl, r6
   1e662:	d90a      	bls.n	1e67a <__udivmoddi4+0x6a>
   1e664:	19f6      	adds	r6, r6, r7
   1e666:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   1e66a:	f080 8125 	bcs.w	1e8b8 <__udivmoddi4+0x2a8>
   1e66e:	45b2      	cmp	sl, r6
   1e670:	f240 8122 	bls.w	1e8b8 <__udivmoddi4+0x2a8>
   1e674:	f1a9 0902 	sub.w	r9, r9, #2
   1e678:	443e      	add	r6, r7
   1e67a:	eba6 060a 	sub.w	r6, r6, sl
   1e67e:	fbb6 f0f2 	udiv	r0, r6, r2
   1e682:	fb02 6610 	mls	r6, r2, r0, r6
   1e686:	fb00 f303 	mul.w	r3, r0, r3
   1e68a:	b2a4      	uxth	r4, r4
   1e68c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   1e690:	42a3      	cmp	r3, r4
   1e692:	d909      	bls.n	1e6a8 <__udivmoddi4+0x98>
   1e694:	19e4      	adds	r4, r4, r7
   1e696:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1e69a:	f080 810b 	bcs.w	1e8b4 <__udivmoddi4+0x2a4>
   1e69e:	42a3      	cmp	r3, r4
   1e6a0:	f240 8108 	bls.w	1e8b4 <__udivmoddi4+0x2a4>
   1e6a4:	3802      	subs	r0, #2
   1e6a6:	443c      	add	r4, r7
   1e6a8:	2100      	movs	r1, #0
   1e6aa:	1ae4      	subs	r4, r4, r3
   1e6ac:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1e6b0:	2d00      	cmp	r5, #0
   1e6b2:	d062      	beq.n	1e77a <__udivmoddi4+0x16a>
   1e6b4:	2300      	movs	r3, #0
   1e6b6:	fa24 f40e 	lsr.w	r4, r4, lr
   1e6ba:	602c      	str	r4, [r5, #0]
   1e6bc:	606b      	str	r3, [r5, #4]
   1e6be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e6c2:	428b      	cmp	r3, r1
   1e6c4:	d907      	bls.n	1e6d6 <__udivmoddi4+0xc6>
   1e6c6:	2d00      	cmp	r5, #0
   1e6c8:	d055      	beq.n	1e776 <__udivmoddi4+0x166>
   1e6ca:	2100      	movs	r1, #0
   1e6cc:	e885 0041 	stmia.w	r5, {r0, r6}
   1e6d0:	4608      	mov	r0, r1
   1e6d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e6d6:	fab3 f183 	clz	r1, r3
   1e6da:	2900      	cmp	r1, #0
   1e6dc:	f040 808f 	bne.w	1e7fe <__udivmoddi4+0x1ee>
   1e6e0:	42b3      	cmp	r3, r6
   1e6e2:	d302      	bcc.n	1e6ea <__udivmoddi4+0xda>
   1e6e4:	4282      	cmp	r2, r0
   1e6e6:	f200 80fc 	bhi.w	1e8e2 <__udivmoddi4+0x2d2>
   1e6ea:	1a84      	subs	r4, r0, r2
   1e6ec:	eb66 0603 	sbc.w	r6, r6, r3
   1e6f0:	2001      	movs	r0, #1
   1e6f2:	46b4      	mov	ip, r6
   1e6f4:	2d00      	cmp	r5, #0
   1e6f6:	d040      	beq.n	1e77a <__udivmoddi4+0x16a>
   1e6f8:	e885 1010 	stmia.w	r5, {r4, ip}
   1e6fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e700:	b912      	cbnz	r2, 1e708 <__udivmoddi4+0xf8>
   1e702:	2701      	movs	r7, #1
   1e704:	fbb7 f7f2 	udiv	r7, r7, r2
   1e708:	fab7 fe87 	clz	lr, r7
   1e70c:	f1be 0f00 	cmp.w	lr, #0
   1e710:	d135      	bne.n	1e77e <__udivmoddi4+0x16e>
   1e712:	2101      	movs	r1, #1
   1e714:	1bf6      	subs	r6, r6, r7
   1e716:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1e71a:	fa1f f887 	uxth.w	r8, r7
   1e71e:	fbb6 f2fc 	udiv	r2, r6, ip
   1e722:	fb0c 6612 	mls	r6, ip, r2, r6
   1e726:	fb08 f002 	mul.w	r0, r8, r2
   1e72a:	0c23      	lsrs	r3, r4, #16
   1e72c:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   1e730:	42b0      	cmp	r0, r6
   1e732:	d907      	bls.n	1e744 <__udivmoddi4+0x134>
   1e734:	19f6      	adds	r6, r6, r7
   1e736:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   1e73a:	d202      	bcs.n	1e742 <__udivmoddi4+0x132>
   1e73c:	42b0      	cmp	r0, r6
   1e73e:	f200 80d2 	bhi.w	1e8e6 <__udivmoddi4+0x2d6>
   1e742:	461a      	mov	r2, r3
   1e744:	1a36      	subs	r6, r6, r0
   1e746:	fbb6 f0fc 	udiv	r0, r6, ip
   1e74a:	fb0c 6610 	mls	r6, ip, r0, r6
   1e74e:	fb08 f800 	mul.w	r8, r8, r0
   1e752:	b2a3      	uxth	r3, r4
   1e754:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   1e758:	45a0      	cmp	r8, r4
   1e75a:	d907      	bls.n	1e76c <__udivmoddi4+0x15c>
   1e75c:	19e4      	adds	r4, r4, r7
   1e75e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1e762:	d202      	bcs.n	1e76a <__udivmoddi4+0x15a>
   1e764:	45a0      	cmp	r8, r4
   1e766:	f200 80b9 	bhi.w	1e8dc <__udivmoddi4+0x2cc>
   1e76a:	4618      	mov	r0, r3
   1e76c:	eba4 0408 	sub.w	r4, r4, r8
   1e770:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   1e774:	e79c      	b.n	1e6b0 <__udivmoddi4+0xa0>
   1e776:	4629      	mov	r1, r5
   1e778:	4628      	mov	r0, r5
   1e77a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e77e:	fa07 f70e 	lsl.w	r7, r7, lr
   1e782:	f1ce 0320 	rsb	r3, lr, #32
   1e786:	fa26 f203 	lsr.w	r2, r6, r3
   1e78a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   1e78e:	fbb2 f1fc 	udiv	r1, r2, ip
   1e792:	fa1f f887 	uxth.w	r8, r7
   1e796:	fb0c 2211 	mls	r2, ip, r1, r2
   1e79a:	fa06 f60e 	lsl.w	r6, r6, lr
   1e79e:	fa20 f303 	lsr.w	r3, r0, r3
   1e7a2:	fb01 f908 	mul.w	r9, r1, r8
   1e7a6:	4333      	orrs	r3, r6
   1e7a8:	0c1e      	lsrs	r6, r3, #16
   1e7aa:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1e7ae:	45b1      	cmp	r9, r6
   1e7b0:	fa00 f40e 	lsl.w	r4, r0, lr
   1e7b4:	d909      	bls.n	1e7ca <__udivmoddi4+0x1ba>
   1e7b6:	19f6      	adds	r6, r6, r7
   1e7b8:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   1e7bc:	f080 808c 	bcs.w	1e8d8 <__udivmoddi4+0x2c8>
   1e7c0:	45b1      	cmp	r9, r6
   1e7c2:	f240 8089 	bls.w	1e8d8 <__udivmoddi4+0x2c8>
   1e7c6:	3902      	subs	r1, #2
   1e7c8:	443e      	add	r6, r7
   1e7ca:	eba6 0609 	sub.w	r6, r6, r9
   1e7ce:	fbb6 f0fc 	udiv	r0, r6, ip
   1e7d2:	fb0c 6210 	mls	r2, ip, r0, r6
   1e7d6:	fb00 f908 	mul.w	r9, r0, r8
   1e7da:	b29e      	uxth	r6, r3
   1e7dc:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   1e7e0:	45b1      	cmp	r9, r6
   1e7e2:	d907      	bls.n	1e7f4 <__udivmoddi4+0x1e4>
   1e7e4:	19f6      	adds	r6, r6, r7
   1e7e6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1e7ea:	d271      	bcs.n	1e8d0 <__udivmoddi4+0x2c0>
   1e7ec:	45b1      	cmp	r9, r6
   1e7ee:	d96f      	bls.n	1e8d0 <__udivmoddi4+0x2c0>
   1e7f0:	3802      	subs	r0, #2
   1e7f2:	443e      	add	r6, r7
   1e7f4:	eba6 0609 	sub.w	r6, r6, r9
   1e7f8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   1e7fc:	e78f      	b.n	1e71e <__udivmoddi4+0x10e>
   1e7fe:	f1c1 0720 	rsb	r7, r1, #32
   1e802:	fa22 f807 	lsr.w	r8, r2, r7
   1e806:	408b      	lsls	r3, r1
   1e808:	ea48 0303 	orr.w	r3, r8, r3
   1e80c:	fa26 f407 	lsr.w	r4, r6, r7
   1e810:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   1e814:	fbb4 f9fe 	udiv	r9, r4, lr
   1e818:	fa1f fc83 	uxth.w	ip, r3
   1e81c:	fb0e 4419 	mls	r4, lr, r9, r4
   1e820:	408e      	lsls	r6, r1
   1e822:	fa20 f807 	lsr.w	r8, r0, r7
   1e826:	fb09 fa0c 	mul.w	sl, r9, ip
   1e82a:	ea48 0806 	orr.w	r8, r8, r6
   1e82e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   1e832:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   1e836:	45a2      	cmp	sl, r4
   1e838:	fa02 f201 	lsl.w	r2, r2, r1
   1e83c:	fa00 f601 	lsl.w	r6, r0, r1
   1e840:	d908      	bls.n	1e854 <__udivmoddi4+0x244>
   1e842:	18e4      	adds	r4, r4, r3
   1e844:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   1e848:	d244      	bcs.n	1e8d4 <__udivmoddi4+0x2c4>
   1e84a:	45a2      	cmp	sl, r4
   1e84c:	d942      	bls.n	1e8d4 <__udivmoddi4+0x2c4>
   1e84e:	f1a9 0902 	sub.w	r9, r9, #2
   1e852:	441c      	add	r4, r3
   1e854:	eba4 040a 	sub.w	r4, r4, sl
   1e858:	fbb4 f0fe 	udiv	r0, r4, lr
   1e85c:	fb0e 4410 	mls	r4, lr, r0, r4
   1e860:	fb00 fc0c 	mul.w	ip, r0, ip
   1e864:	fa1f f888 	uxth.w	r8, r8
   1e868:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   1e86c:	45a4      	cmp	ip, r4
   1e86e:	d907      	bls.n	1e880 <__udivmoddi4+0x270>
   1e870:	18e4      	adds	r4, r4, r3
   1e872:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1e876:	d229      	bcs.n	1e8cc <__udivmoddi4+0x2bc>
   1e878:	45a4      	cmp	ip, r4
   1e87a:	d927      	bls.n	1e8cc <__udivmoddi4+0x2bc>
   1e87c:	3802      	subs	r0, #2
   1e87e:	441c      	add	r4, r3
   1e880:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1e884:	fba0 8902 	umull	r8, r9, r0, r2
   1e888:	eba4 0c0c 	sub.w	ip, r4, ip
   1e88c:	45cc      	cmp	ip, r9
   1e88e:	46c2      	mov	sl, r8
   1e890:	46ce      	mov	lr, r9
   1e892:	d315      	bcc.n	1e8c0 <__udivmoddi4+0x2b0>
   1e894:	d012      	beq.n	1e8bc <__udivmoddi4+0x2ac>
   1e896:	b155      	cbz	r5, 1e8ae <__udivmoddi4+0x29e>
   1e898:	ebb6 030a 	subs.w	r3, r6, sl
   1e89c:	eb6c 060e 	sbc.w	r6, ip, lr
   1e8a0:	fa06 f707 	lsl.w	r7, r6, r7
   1e8a4:	40cb      	lsrs	r3, r1
   1e8a6:	431f      	orrs	r7, r3
   1e8a8:	40ce      	lsrs	r6, r1
   1e8aa:	602f      	str	r7, [r5, #0]
   1e8ac:	606e      	str	r6, [r5, #4]
   1e8ae:	2100      	movs	r1, #0
   1e8b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e8b4:	4610      	mov	r0, r2
   1e8b6:	e6f7      	b.n	1e6a8 <__udivmoddi4+0x98>
   1e8b8:	4689      	mov	r9, r1
   1e8ba:	e6de      	b.n	1e67a <__udivmoddi4+0x6a>
   1e8bc:	4546      	cmp	r6, r8
   1e8be:	d2ea      	bcs.n	1e896 <__udivmoddi4+0x286>
   1e8c0:	ebb8 0a02 	subs.w	sl, r8, r2
   1e8c4:	eb69 0e03 	sbc.w	lr, r9, r3
   1e8c8:	3801      	subs	r0, #1
   1e8ca:	e7e4      	b.n	1e896 <__udivmoddi4+0x286>
   1e8cc:	4670      	mov	r0, lr
   1e8ce:	e7d7      	b.n	1e880 <__udivmoddi4+0x270>
   1e8d0:	4618      	mov	r0, r3
   1e8d2:	e78f      	b.n	1e7f4 <__udivmoddi4+0x1e4>
   1e8d4:	4681      	mov	r9, r0
   1e8d6:	e7bd      	b.n	1e854 <__udivmoddi4+0x244>
   1e8d8:	4611      	mov	r1, r2
   1e8da:	e776      	b.n	1e7ca <__udivmoddi4+0x1ba>
   1e8dc:	3802      	subs	r0, #2
   1e8de:	443c      	add	r4, r7
   1e8e0:	e744      	b.n	1e76c <__udivmoddi4+0x15c>
   1e8e2:	4608      	mov	r0, r1
   1e8e4:	e706      	b.n	1e6f4 <__udivmoddi4+0xe4>
   1e8e6:	3a02      	subs	r2, #2
   1e8e8:	443e      	add	r6, r7
   1e8ea:	e72b      	b.n	1e744 <__udivmoddi4+0x134>

0001e8ec <__aeabi_idiv0>:
__aeabi_idiv0():
   1e8ec:	4770      	bx	lr
   1e8ee:	bf00      	nop

0001e8f0 <abort>:
abort():
   1e8f0:	b508      	push	{r3, lr}
   1e8f2:	2006      	movs	r0, #6
   1e8f4:	f002 fa44 	bl	20d80 <raise>
   1e8f8:	2001      	movs	r0, #1
   1e8fa:	f7f8 fd15 	bl	17328 <_exit>

0001e8fe <atoi>:
atoi():
   1e8fe:	220a      	movs	r2, #10
   1e900:	2100      	movs	r1, #0
   1e902:	f003 badb 	b.w	21ebc <strtol>
   1e906:	Address 0x000000000001e906 is out of bounds.


0001e908 <calloc>:
calloc():
   1e908:	4b02      	ldr	r3, [pc, #8]	; (1e914 <calloc+0xc>)
   1e90a:	460a      	mov	r2, r1
   1e90c:	4601      	mov	r1, r0
   1e90e:	6818      	ldr	r0, [r3, #0]
   1e910:	f001 b84e 	b.w	1f9b0 <_calloc_r>
   1e914:	2007c0e0 	.word	0x2007c0e0

0001e918 <ctime>:
ctime():
   1e918:	b508      	push	{r3, lr}
   1e91a:	f000 fc0b 	bl	1f134 <localtime>
   1e91e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1e922:	f003 be89 	b.w	22638 <asctime>
   1e926:	Address 0x000000000001e926 is out of bounds.


0001e928 <__errno>:
__errno():
   1e928:	4b01      	ldr	r3, [pc, #4]	; (1e930 <__errno+0x8>)
   1e92a:	6818      	ldr	r0, [r3, #0]
   1e92c:	4770      	bx	lr
   1e92e:	bf00      	nop
   1e930:	2007c0e0 	.word	0x2007c0e0

0001e934 <_fclose_r>:
_fclose_r():
   1e934:	b570      	push	{r4, r5, r6, lr}
   1e936:	4605      	mov	r5, r0
   1e938:	460c      	mov	r4, r1
   1e93a:	b911      	cbnz	r1, 1e942 <_fclose_r+0xe>
   1e93c:	2600      	movs	r6, #0
   1e93e:	4630      	mov	r0, r6
   1e940:	bd70      	pop	{r4, r5, r6, pc}
   1e942:	b118      	cbz	r0, 1e94c <_fclose_r+0x18>
   1e944:	6983      	ldr	r3, [r0, #24]
   1e946:	b90b      	cbnz	r3, 1e94c <_fclose_r+0x18>
   1e948:	f000 f9f2 	bl	1ed30 <__sinit>
   1e94c:	4b1f      	ldr	r3, [pc, #124]	; (1e9cc <_fclose_r+0x98>)
   1e94e:	429c      	cmp	r4, r3
   1e950:	d132      	bne.n	1e9b8 <_fclose_r+0x84>
   1e952:	686c      	ldr	r4, [r5, #4]
   1e954:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1e958:	2b00      	cmp	r3, #0
   1e95a:	d0ef      	beq.n	1e93c <_fclose_r+0x8>
   1e95c:	4621      	mov	r1, r4
   1e95e:	4628      	mov	r0, r5
   1e960:	f000 f842 	bl	1e9e8 <__sflush_r>
   1e964:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1e966:	4606      	mov	r6, r0
   1e968:	b133      	cbz	r3, 1e978 <_fclose_r+0x44>
   1e96a:	6a21      	ldr	r1, [r4, #32]
   1e96c:	4628      	mov	r0, r5
   1e96e:	4798      	blx	r3
   1e970:	2800      	cmp	r0, #0
   1e972:	bfb8      	it	lt
   1e974:	f04f 36ff 	movlt.w	r6, #4294967295	; 0xffffffff
   1e978:	89a3      	ldrh	r3, [r4, #12]
   1e97a:	061b      	lsls	r3, r3, #24
   1e97c:	d503      	bpl.n	1e986 <_fclose_r+0x52>
   1e97e:	6921      	ldr	r1, [r4, #16]
   1e980:	4628      	mov	r0, r5
   1e982:	f001 f823 	bl	1f9cc <_free_r>
   1e986:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1e988:	b141      	cbz	r1, 1e99c <_fclose_r+0x68>
   1e98a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1e98e:	4299      	cmp	r1, r3
   1e990:	d002      	beq.n	1e998 <_fclose_r+0x64>
   1e992:	4628      	mov	r0, r5
   1e994:	f001 f81a 	bl	1f9cc <_free_r>
   1e998:	2300      	movs	r3, #0
   1e99a:	6363      	str	r3, [r4, #52]	; 0x34
   1e99c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
   1e99e:	b121      	cbz	r1, 1e9aa <_fclose_r+0x76>
   1e9a0:	4628      	mov	r0, r5
   1e9a2:	f001 f813 	bl	1f9cc <_free_r>
   1e9a6:	2300      	movs	r3, #0
   1e9a8:	64a3      	str	r3, [r4, #72]	; 0x48
   1e9aa:	f000 fa2d 	bl	1ee08 <__sfp_lock_acquire>
   1e9ae:	2300      	movs	r3, #0
   1e9b0:	81a3      	strh	r3, [r4, #12]
   1e9b2:	f000 fa2a 	bl	1ee0a <__sfp_lock_release>
   1e9b6:	e7c2      	b.n	1e93e <_fclose_r+0xa>
   1e9b8:	4b05      	ldr	r3, [pc, #20]	; (1e9d0 <_fclose_r+0x9c>)
   1e9ba:	429c      	cmp	r4, r3
   1e9bc:	d101      	bne.n	1e9c2 <_fclose_r+0x8e>
   1e9be:	68ac      	ldr	r4, [r5, #8]
   1e9c0:	e7c8      	b.n	1e954 <_fclose_r+0x20>
   1e9c2:	4b04      	ldr	r3, [pc, #16]	; (1e9d4 <_fclose_r+0xa0>)
   1e9c4:	429c      	cmp	r4, r3
   1e9c6:	bf08      	it	eq
   1e9c8:	68ec      	ldreq	r4, [r5, #12]
   1e9ca:	e7c3      	b.n	1e954 <_fclose_r+0x20>
   1e9cc:	00028d28 	.word	0x00028d28
   1e9d0:	00028d48 	.word	0x00028d48
   1e9d4:	00028d08 	.word	0x00028d08

0001e9d8 <fclose>:
fclose():
   1e9d8:	4b02      	ldr	r3, [pc, #8]	; (1e9e4 <fclose+0xc>)
   1e9da:	4601      	mov	r1, r0
   1e9dc:	6818      	ldr	r0, [r3, #0]
   1e9de:	f7ff bfa9 	b.w	1e934 <_fclose_r>
   1e9e2:	bf00      	nop
   1e9e4:	2007c0e0 	.word	0x2007c0e0

0001e9e8 <__sflush_r>:
__sflush_r():
   1e9e8:	898a      	ldrh	r2, [r1, #12]
   1e9ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e9ee:	4605      	mov	r5, r0
   1e9f0:	0710      	lsls	r0, r2, #28
   1e9f2:	460c      	mov	r4, r1
   1e9f4:	d45a      	bmi.n	1eaac <__sflush_r+0xc4>
   1e9f6:	684b      	ldr	r3, [r1, #4]
   1e9f8:	2b00      	cmp	r3, #0
   1e9fa:	dc05      	bgt.n	1ea08 <__sflush_r+0x20>
   1e9fc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1e9fe:	2b00      	cmp	r3, #0
   1ea00:	dc02      	bgt.n	1ea08 <__sflush_r+0x20>
   1ea02:	2000      	movs	r0, #0
   1ea04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ea08:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1ea0a:	2e00      	cmp	r6, #0
   1ea0c:	d0f9      	beq.n	1ea02 <__sflush_r+0x1a>
   1ea0e:	2300      	movs	r3, #0
   1ea10:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1ea14:	682f      	ldr	r7, [r5, #0]
   1ea16:	602b      	str	r3, [r5, #0]
   1ea18:	d033      	beq.n	1ea82 <__sflush_r+0x9a>
   1ea1a:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1ea1c:	89a3      	ldrh	r3, [r4, #12]
   1ea1e:	075a      	lsls	r2, r3, #29
   1ea20:	d505      	bpl.n	1ea2e <__sflush_r+0x46>
   1ea22:	6863      	ldr	r3, [r4, #4]
   1ea24:	1ac0      	subs	r0, r0, r3
   1ea26:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1ea28:	b10b      	cbz	r3, 1ea2e <__sflush_r+0x46>
   1ea2a:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1ea2c:	1ac0      	subs	r0, r0, r3
   1ea2e:	2300      	movs	r3, #0
   1ea30:	4602      	mov	r2, r0
   1ea32:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1ea34:	6a21      	ldr	r1, [r4, #32]
   1ea36:	4628      	mov	r0, r5
   1ea38:	47b0      	blx	r6
   1ea3a:	1c43      	adds	r3, r0, #1
   1ea3c:	89a3      	ldrh	r3, [r4, #12]
   1ea3e:	d106      	bne.n	1ea4e <__sflush_r+0x66>
   1ea40:	6829      	ldr	r1, [r5, #0]
   1ea42:	291d      	cmp	r1, #29
   1ea44:	d84b      	bhi.n	1eade <__sflush_r+0xf6>
   1ea46:	4a2b      	ldr	r2, [pc, #172]	; (1eaf4 <__sflush_r+0x10c>)
   1ea48:	40ca      	lsrs	r2, r1
   1ea4a:	07d6      	lsls	r6, r2, #31
   1ea4c:	d547      	bpl.n	1eade <__sflush_r+0xf6>
   1ea4e:	2200      	movs	r2, #0
   1ea50:	6062      	str	r2, [r4, #4]
   1ea52:	6922      	ldr	r2, [r4, #16]
   1ea54:	04d9      	lsls	r1, r3, #19
   1ea56:	6022      	str	r2, [r4, #0]
   1ea58:	d504      	bpl.n	1ea64 <__sflush_r+0x7c>
   1ea5a:	1c42      	adds	r2, r0, #1
   1ea5c:	d101      	bne.n	1ea62 <__sflush_r+0x7a>
   1ea5e:	682b      	ldr	r3, [r5, #0]
   1ea60:	b903      	cbnz	r3, 1ea64 <__sflush_r+0x7c>
   1ea62:	6560      	str	r0, [r4, #84]	; 0x54
   1ea64:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1ea66:	602f      	str	r7, [r5, #0]
   1ea68:	2900      	cmp	r1, #0
   1ea6a:	d0ca      	beq.n	1ea02 <__sflush_r+0x1a>
   1ea6c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ea70:	4299      	cmp	r1, r3
   1ea72:	d002      	beq.n	1ea7a <__sflush_r+0x92>
   1ea74:	4628      	mov	r0, r5
   1ea76:	f000 ffa9 	bl	1f9cc <_free_r>
   1ea7a:	2000      	movs	r0, #0
   1ea7c:	6360      	str	r0, [r4, #52]	; 0x34
   1ea7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ea82:	6a21      	ldr	r1, [r4, #32]
   1ea84:	2301      	movs	r3, #1
   1ea86:	4628      	mov	r0, r5
   1ea88:	47b0      	blx	r6
   1ea8a:	1c41      	adds	r1, r0, #1
   1ea8c:	d1c6      	bne.n	1ea1c <__sflush_r+0x34>
   1ea8e:	682b      	ldr	r3, [r5, #0]
   1ea90:	2b00      	cmp	r3, #0
   1ea92:	d0c3      	beq.n	1ea1c <__sflush_r+0x34>
   1ea94:	2b1d      	cmp	r3, #29
   1ea96:	d001      	beq.n	1ea9c <__sflush_r+0xb4>
   1ea98:	2b16      	cmp	r3, #22
   1ea9a:	d101      	bne.n	1eaa0 <__sflush_r+0xb8>
   1ea9c:	602f      	str	r7, [r5, #0]
   1ea9e:	e7b0      	b.n	1ea02 <__sflush_r+0x1a>
   1eaa0:	89a3      	ldrh	r3, [r4, #12]
   1eaa2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1eaa6:	81a3      	strh	r3, [r4, #12]
   1eaa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1eaac:	690f      	ldr	r7, [r1, #16]
   1eaae:	2f00      	cmp	r7, #0
   1eab0:	d0a7      	beq.n	1ea02 <__sflush_r+0x1a>
   1eab2:	0793      	lsls	r3, r2, #30
   1eab4:	bf18      	it	ne
   1eab6:	2300      	movne	r3, #0
   1eab8:	680e      	ldr	r6, [r1, #0]
   1eaba:	bf08      	it	eq
   1eabc:	694b      	ldreq	r3, [r1, #20]
   1eabe:	eba6 0807 	sub.w	r8, r6, r7
   1eac2:	600f      	str	r7, [r1, #0]
   1eac4:	608b      	str	r3, [r1, #8]
   1eac6:	f1b8 0f00 	cmp.w	r8, #0
   1eaca:	dd9a      	ble.n	1ea02 <__sflush_r+0x1a>
   1eacc:	4643      	mov	r3, r8
   1eace:	463a      	mov	r2, r7
   1ead0:	6a21      	ldr	r1, [r4, #32]
   1ead2:	4628      	mov	r0, r5
   1ead4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1ead6:	47b0      	blx	r6
   1ead8:	2800      	cmp	r0, #0
   1eada:	dc07      	bgt.n	1eaec <__sflush_r+0x104>
   1eadc:	89a3      	ldrh	r3, [r4, #12]
   1eade:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1eae2:	81a3      	strh	r3, [r4, #12]
   1eae4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1eae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1eaec:	4407      	add	r7, r0
   1eaee:	eba8 0800 	sub.w	r8, r8, r0
   1eaf2:	e7e8      	b.n	1eac6 <__sflush_r+0xde>
   1eaf4:	20400001 	.word	0x20400001

0001eaf8 <_fflush_r>:
_fflush_r():
   1eaf8:	b538      	push	{r3, r4, r5, lr}
   1eafa:	690b      	ldr	r3, [r1, #16]
   1eafc:	4605      	mov	r5, r0
   1eafe:	460c      	mov	r4, r1
   1eb00:	b1db      	cbz	r3, 1eb3a <_fflush_r+0x42>
   1eb02:	b118      	cbz	r0, 1eb0c <_fflush_r+0x14>
   1eb04:	6983      	ldr	r3, [r0, #24]
   1eb06:	b90b      	cbnz	r3, 1eb0c <_fflush_r+0x14>
   1eb08:	f000 f912 	bl	1ed30 <__sinit>
   1eb0c:	4b0c      	ldr	r3, [pc, #48]	; (1eb40 <_fflush_r+0x48>)
   1eb0e:	429c      	cmp	r4, r3
   1eb10:	d109      	bne.n	1eb26 <_fflush_r+0x2e>
   1eb12:	686c      	ldr	r4, [r5, #4]
   1eb14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1eb18:	b17b      	cbz	r3, 1eb3a <_fflush_r+0x42>
   1eb1a:	4621      	mov	r1, r4
   1eb1c:	4628      	mov	r0, r5
   1eb1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1eb22:	f7ff bf61 	b.w	1e9e8 <__sflush_r>
   1eb26:	4b07      	ldr	r3, [pc, #28]	; (1eb44 <_fflush_r+0x4c>)
   1eb28:	429c      	cmp	r4, r3
   1eb2a:	d101      	bne.n	1eb30 <_fflush_r+0x38>
   1eb2c:	68ac      	ldr	r4, [r5, #8]
   1eb2e:	e7f1      	b.n	1eb14 <_fflush_r+0x1c>
   1eb30:	4b05      	ldr	r3, [pc, #20]	; (1eb48 <_fflush_r+0x50>)
   1eb32:	429c      	cmp	r4, r3
   1eb34:	bf08      	it	eq
   1eb36:	68ec      	ldreq	r4, [r5, #12]
   1eb38:	e7ec      	b.n	1eb14 <_fflush_r+0x1c>
   1eb3a:	2000      	movs	r0, #0
   1eb3c:	bd38      	pop	{r3, r4, r5, pc}
   1eb3e:	bf00      	nop
   1eb40:	00028d28 	.word	0x00028d28
   1eb44:	00028d48 	.word	0x00028d48
   1eb48:	00028d08 	.word	0x00028d08

0001eb4c <fflush>:
fflush():
   1eb4c:	4601      	mov	r1, r0
   1eb4e:	b920      	cbnz	r0, 1eb5a <fflush+0xe>
   1eb50:	4b04      	ldr	r3, [pc, #16]	; (1eb64 <fflush+0x18>)
   1eb52:	4905      	ldr	r1, [pc, #20]	; (1eb68 <fflush+0x1c>)
   1eb54:	6818      	ldr	r0, [r3, #0]
   1eb56:	f000 ba4f 	b.w	1eff8 <_fwalk_reent>
   1eb5a:	4b04      	ldr	r3, [pc, #16]	; (1eb6c <fflush+0x20>)
   1eb5c:	6818      	ldr	r0, [r3, #0]
   1eb5e:	f7ff bfcb 	b.w	1eaf8 <_fflush_r>
   1eb62:	bf00      	nop
   1eb64:	00028d68 	.word	0x00028d68
   1eb68:	0001eaf9 	.word	0x0001eaf9
   1eb6c:	2007c0e0 	.word	0x2007c0e0

0001eb70 <_fgetc_r>:
_fgetc_r():
   1eb70:	b538      	push	{r3, r4, r5, lr}
   1eb72:	460c      	mov	r4, r1
   1eb74:	4605      	mov	r5, r0
   1eb76:	b118      	cbz	r0, 1eb80 <_fgetc_r+0x10>
   1eb78:	6983      	ldr	r3, [r0, #24]
   1eb7a:	b90b      	cbnz	r3, 1eb80 <_fgetc_r+0x10>
   1eb7c:	f000 f8d8 	bl	1ed30 <__sinit>
   1eb80:	4b0e      	ldr	r3, [pc, #56]	; (1ebbc <_fgetc_r+0x4c>)
   1eb82:	429c      	cmp	r4, r3
   1eb84:	d10b      	bne.n	1eb9e <_fgetc_r+0x2e>
   1eb86:	686c      	ldr	r4, [r5, #4]
   1eb88:	6863      	ldr	r3, [r4, #4]
   1eb8a:	3b01      	subs	r3, #1
   1eb8c:	2b00      	cmp	r3, #0
   1eb8e:	6063      	str	r3, [r4, #4]
   1eb90:	da0f      	bge.n	1ebb2 <_fgetc_r+0x42>
   1eb92:	4621      	mov	r1, r4
   1eb94:	4628      	mov	r0, r5
   1eb96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1eb9a:	f001 bfc3 	b.w	20b24 <__srget_r>
   1eb9e:	4b08      	ldr	r3, [pc, #32]	; (1ebc0 <_fgetc_r+0x50>)
   1eba0:	429c      	cmp	r4, r3
   1eba2:	d101      	bne.n	1eba8 <_fgetc_r+0x38>
   1eba4:	68ac      	ldr	r4, [r5, #8]
   1eba6:	e7ef      	b.n	1eb88 <_fgetc_r+0x18>
   1eba8:	4b06      	ldr	r3, [pc, #24]	; (1ebc4 <_fgetc_r+0x54>)
   1ebaa:	429c      	cmp	r4, r3
   1ebac:	bf08      	it	eq
   1ebae:	68ec      	ldreq	r4, [r5, #12]
   1ebb0:	e7ea      	b.n	1eb88 <_fgetc_r+0x18>
   1ebb2:	6823      	ldr	r3, [r4, #0]
   1ebb4:	1c5a      	adds	r2, r3, #1
   1ebb6:	6022      	str	r2, [r4, #0]
   1ebb8:	7818      	ldrb	r0, [r3, #0]
   1ebba:	bd38      	pop	{r3, r4, r5, pc}
   1ebbc:	00028d28 	.word	0x00028d28
   1ebc0:	00028d48 	.word	0x00028d48
   1ebc4:	00028d08 	.word	0x00028d08

0001ebc8 <fgetc>:
fgetc():
   1ebc8:	4b02      	ldr	r3, [pc, #8]	; (1ebd4 <fgetc+0xc>)
   1ebca:	4601      	mov	r1, r0
   1ebcc:	6818      	ldr	r0, [r3, #0]
   1ebce:	f7ff bfcf 	b.w	1eb70 <_fgetc_r>
   1ebd2:	bf00      	nop
   1ebd4:	2007c0e0 	.word	0x2007c0e0

0001ebd8 <_fgets_r>:
_fgets_r():
   1ebd8:	2a01      	cmp	r2, #1
   1ebda:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ebde:	4681      	mov	r9, r0
   1ebe0:	460e      	mov	r6, r1
   1ebe2:	4690      	mov	r8, r2
   1ebe4:	461c      	mov	r4, r3
   1ebe6:	dc02      	bgt.n	1ebee <_fgets_r+0x16>
   1ebe8:	2000      	movs	r0, #0
   1ebea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ebee:	b118      	cbz	r0, 1ebf8 <_fgets_r+0x20>
   1ebf0:	6983      	ldr	r3, [r0, #24]
   1ebf2:	b90b      	cbnz	r3, 1ebf8 <_fgets_r+0x20>
   1ebf4:	f000 f89c 	bl	1ed30 <__sinit>
   1ebf8:	4b25      	ldr	r3, [pc, #148]	; (1ec90 <_fgets_r+0xb8>)
   1ebfa:	429c      	cmp	r4, r3
   1ebfc:	d110      	bne.n	1ec20 <_fgets_r+0x48>
   1ebfe:	f8d9 4004 	ldr.w	r4, [r9, #4]
   1ec02:	4637      	mov	r7, r6
   1ec04:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   1ec08:	6865      	ldr	r5, [r4, #4]
   1ec0a:	b9b5      	cbnz	r5, 1ec3a <_fgets_r+0x62>
   1ec0c:	4621      	mov	r1, r4
   1ec0e:	4648      	mov	r0, r9
   1ec10:	f001 fefc 	bl	20a0c <__srefill_r>
   1ec14:	b180      	cbz	r0, 1ec38 <_fgets_r+0x60>
   1ec16:	42b7      	cmp	r7, r6
   1ec18:	d0e6      	beq.n	1ebe8 <_fgets_r+0x10>
   1ec1a:	2300      	movs	r3, #0
   1ec1c:	703b      	strb	r3, [r7, #0]
   1ec1e:	e025      	b.n	1ec6c <_fgets_r+0x94>
   1ec20:	4b1c      	ldr	r3, [pc, #112]	; (1ec94 <_fgets_r+0xbc>)
   1ec22:	429c      	cmp	r4, r3
   1ec24:	d102      	bne.n	1ec2c <_fgets_r+0x54>
   1ec26:	f8d9 4008 	ldr.w	r4, [r9, #8]
   1ec2a:	e7ea      	b.n	1ec02 <_fgets_r+0x2a>
   1ec2c:	4b1a      	ldr	r3, [pc, #104]	; (1ec98 <_fgets_r+0xc0>)
   1ec2e:	429c      	cmp	r4, r3
   1ec30:	bf08      	it	eq
   1ec32:	f8d9 400c 	ldreq.w	r4, [r9, #12]
   1ec36:	e7e4      	b.n	1ec02 <_fgets_r+0x2a>
   1ec38:	6865      	ldr	r5, [r4, #4]
   1ec3a:	4545      	cmp	r5, r8
   1ec3c:	bf28      	it	cs
   1ec3e:	4645      	movcs	r5, r8
   1ec40:	f8d4 a000 	ldr.w	sl, [r4]
   1ec44:	462a      	mov	r2, r5
   1ec46:	210a      	movs	r1, #10
   1ec48:	4650      	mov	r0, sl
   1ec4a:	f000 fc01 	bl	1f450 <memchr>
   1ec4e:	6863      	ldr	r3, [r4, #4]
   1ec50:	b178      	cbz	r0, 1ec72 <_fgets_r+0x9a>
   1ec52:	3001      	adds	r0, #1
   1ec54:	eba0 050a 	sub.w	r5, r0, sl
   1ec58:	1b5b      	subs	r3, r3, r5
   1ec5a:	e884 0009 	stmia.w	r4, {r0, r3}
   1ec5e:	462a      	mov	r2, r5
   1ec60:	4651      	mov	r1, sl
   1ec62:	4638      	mov	r0, r7
   1ec64:	f000 fc11 	bl	1f48a <memcpy>
   1ec68:	2300      	movs	r3, #0
   1ec6a:	557b      	strb	r3, [r7, r5]
   1ec6c:	4630      	mov	r0, r6
   1ec6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ec72:	1b5b      	subs	r3, r3, r5
   1ec74:	6063      	str	r3, [r4, #4]
   1ec76:	6823      	ldr	r3, [r4, #0]
   1ec78:	4638      	mov	r0, r7
   1ec7a:	442b      	add	r3, r5
   1ec7c:	6023      	str	r3, [r4, #0]
   1ec7e:	462a      	mov	r2, r5
   1ec80:	4651      	mov	r1, sl
   1ec82:	f000 fc02 	bl	1f48a <memcpy>
   1ec86:	ebb8 0805 	subs.w	r8, r8, r5
   1ec8a:	442f      	add	r7, r5
   1ec8c:	d1bc      	bne.n	1ec08 <_fgets_r+0x30>
   1ec8e:	e7c4      	b.n	1ec1a <_fgets_r+0x42>
   1ec90:	00028d28 	.word	0x00028d28
   1ec94:	00028d48 	.word	0x00028d48
   1ec98:	00028d08 	.word	0x00028d08

0001ec9c <fgets>:
fgets():
   1ec9c:	4613      	mov	r3, r2
   1ec9e:	460a      	mov	r2, r1
   1eca0:	4601      	mov	r1, r0
   1eca2:	4802      	ldr	r0, [pc, #8]	; (1ecac <fgets+0x10>)
   1eca4:	6800      	ldr	r0, [r0, #0]
   1eca6:	f7ff bf97 	b.w	1ebd8 <_fgets_r>
   1ecaa:	bf00      	nop
   1ecac:	2007c0e0 	.word	0x2007c0e0

0001ecb0 <_cleanup_r>:
_cleanup_r():
   1ecb0:	4901      	ldr	r1, [pc, #4]	; (1ecb8 <_cleanup_r+0x8>)
   1ecb2:	f000 b9a1 	b.w	1eff8 <_fwalk_reent>
   1ecb6:	bf00      	nop
   1ecb8:	0001eaf9 	.word	0x0001eaf9

0001ecbc <std.isra.0>:
std.isra.0():
   1ecbc:	2300      	movs	r3, #0
   1ecbe:	b510      	push	{r4, lr}
   1ecc0:	4604      	mov	r4, r0
   1ecc2:	6003      	str	r3, [r0, #0]
   1ecc4:	6043      	str	r3, [r0, #4]
   1ecc6:	6083      	str	r3, [r0, #8]
   1ecc8:	8181      	strh	r1, [r0, #12]
   1ecca:	6643      	str	r3, [r0, #100]	; 0x64
   1eccc:	81c2      	strh	r2, [r0, #14]
   1ecce:	6103      	str	r3, [r0, #16]
   1ecd0:	6143      	str	r3, [r0, #20]
   1ecd2:	6183      	str	r3, [r0, #24]
   1ecd4:	4619      	mov	r1, r3
   1ecd6:	2208      	movs	r2, #8
   1ecd8:	305c      	adds	r0, #92	; 0x5c
   1ecda:	f000 fbfb 	bl	1f4d4 <memset>
   1ecde:	4b05      	ldr	r3, [pc, #20]	; (1ecf4 <std.isra.0+0x38>)
   1ece0:	6224      	str	r4, [r4, #32]
   1ece2:	6263      	str	r3, [r4, #36]	; 0x24
   1ece4:	4b04      	ldr	r3, [pc, #16]	; (1ecf8 <std.isra.0+0x3c>)
   1ece6:	62a3      	str	r3, [r4, #40]	; 0x28
   1ece8:	4b04      	ldr	r3, [pc, #16]	; (1ecfc <std.isra.0+0x40>)
   1ecea:	62e3      	str	r3, [r4, #44]	; 0x2c
   1ecec:	4b04      	ldr	r3, [pc, #16]	; (1ed00 <std.isra.0+0x44>)
   1ecee:	6323      	str	r3, [r4, #48]	; 0x30
   1ecf0:	bd10      	pop	{r4, pc}
   1ecf2:	bf00      	nop
   1ecf4:	00020ebd 	.word	0x00020ebd
   1ecf8:	00020ee3 	.word	0x00020ee3
   1ecfc:	00020f1b 	.word	0x00020f1b
   1ed00:	00020f3f 	.word	0x00020f3f

0001ed04 <__sfmoreglue>:
__sfmoreglue():
   1ed04:	b570      	push	{r4, r5, r6, lr}
   1ed06:	2568      	movs	r5, #104	; 0x68
   1ed08:	1e4a      	subs	r2, r1, #1
   1ed0a:	4355      	muls	r5, r2
   1ed0c:	460e      	mov	r6, r1
   1ed0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1ed12:	f000 fed9 	bl	1fac8 <_malloc_r>
   1ed16:	4604      	mov	r4, r0
   1ed18:	b140      	cbz	r0, 1ed2c <__sfmoreglue+0x28>
   1ed1a:	2100      	movs	r1, #0
   1ed1c:	e880 0042 	stmia.w	r0, {r1, r6}
   1ed20:	300c      	adds	r0, #12
   1ed22:	60a0      	str	r0, [r4, #8]
   1ed24:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1ed28:	f000 fbd4 	bl	1f4d4 <memset>
   1ed2c:	4620      	mov	r0, r4
   1ed2e:	bd70      	pop	{r4, r5, r6, pc}

0001ed30 <__sinit>:
__sinit():
   1ed30:	6983      	ldr	r3, [r0, #24]
   1ed32:	b510      	push	{r4, lr}
   1ed34:	4604      	mov	r4, r0
   1ed36:	bb33      	cbnz	r3, 1ed86 <__sinit+0x56>
   1ed38:	6483      	str	r3, [r0, #72]	; 0x48
   1ed3a:	64c3      	str	r3, [r0, #76]	; 0x4c
   1ed3c:	6503      	str	r3, [r0, #80]	; 0x50
   1ed3e:	4b12      	ldr	r3, [pc, #72]	; (1ed88 <__sinit+0x58>)
   1ed40:	4a12      	ldr	r2, [pc, #72]	; (1ed8c <__sinit+0x5c>)
   1ed42:	681b      	ldr	r3, [r3, #0]
   1ed44:	6282      	str	r2, [r0, #40]	; 0x28
   1ed46:	4298      	cmp	r0, r3
   1ed48:	bf04      	itt	eq
   1ed4a:	2301      	moveq	r3, #1
   1ed4c:	6183      	streq	r3, [r0, #24]
   1ed4e:	f000 f81f 	bl	1ed90 <__sfp>
   1ed52:	6060      	str	r0, [r4, #4]
   1ed54:	4620      	mov	r0, r4
   1ed56:	f000 f81b 	bl	1ed90 <__sfp>
   1ed5a:	60a0      	str	r0, [r4, #8]
   1ed5c:	4620      	mov	r0, r4
   1ed5e:	f000 f817 	bl	1ed90 <__sfp>
   1ed62:	2200      	movs	r2, #0
   1ed64:	60e0      	str	r0, [r4, #12]
   1ed66:	2104      	movs	r1, #4
   1ed68:	6860      	ldr	r0, [r4, #4]
   1ed6a:	f7ff ffa7 	bl	1ecbc <std.isra.0>
   1ed6e:	2201      	movs	r2, #1
   1ed70:	2109      	movs	r1, #9
   1ed72:	68a0      	ldr	r0, [r4, #8]
   1ed74:	f7ff ffa2 	bl	1ecbc <std.isra.0>
   1ed78:	2202      	movs	r2, #2
   1ed7a:	2112      	movs	r1, #18
   1ed7c:	68e0      	ldr	r0, [r4, #12]
   1ed7e:	f7ff ff9d 	bl	1ecbc <std.isra.0>
   1ed82:	2301      	movs	r3, #1
   1ed84:	61a3      	str	r3, [r4, #24]
   1ed86:	bd10      	pop	{r4, pc}
   1ed88:	00028d68 	.word	0x00028d68
   1ed8c:	0001ecb1 	.word	0x0001ecb1

0001ed90 <__sfp>:
__sfp():
   1ed90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ed92:	4b1c      	ldr	r3, [pc, #112]	; (1ee04 <__sfp+0x74>)
   1ed94:	4607      	mov	r7, r0
   1ed96:	681e      	ldr	r6, [r3, #0]
   1ed98:	69b3      	ldr	r3, [r6, #24]
   1ed9a:	b913      	cbnz	r3, 1eda2 <__sfp+0x12>
   1ed9c:	4630      	mov	r0, r6
   1ed9e:	f7ff ffc7 	bl	1ed30 <__sinit>
   1eda2:	3648      	adds	r6, #72	; 0x48
   1eda4:	68b4      	ldr	r4, [r6, #8]
   1eda6:	6873      	ldr	r3, [r6, #4]
   1eda8:	3b01      	subs	r3, #1
   1edaa:	d503      	bpl.n	1edb4 <__sfp+0x24>
   1edac:	6833      	ldr	r3, [r6, #0]
   1edae:	b133      	cbz	r3, 1edbe <__sfp+0x2e>
   1edb0:	6836      	ldr	r6, [r6, #0]
   1edb2:	e7f7      	b.n	1eda4 <__sfp+0x14>
   1edb4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1edb8:	b16d      	cbz	r5, 1edd6 <__sfp+0x46>
   1edba:	3468      	adds	r4, #104	; 0x68
   1edbc:	e7f4      	b.n	1eda8 <__sfp+0x18>
   1edbe:	2104      	movs	r1, #4
   1edc0:	4638      	mov	r0, r7
   1edc2:	f7ff ff9f 	bl	1ed04 <__sfmoreglue>
   1edc6:	6030      	str	r0, [r6, #0]
   1edc8:	2800      	cmp	r0, #0
   1edca:	d1f1      	bne.n	1edb0 <__sfp+0x20>
   1edcc:	230c      	movs	r3, #12
   1edce:	4604      	mov	r4, r0
   1edd0:	603b      	str	r3, [r7, #0]
   1edd2:	4620      	mov	r0, r4
   1edd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1edd6:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1edda:	81e3      	strh	r3, [r4, #14]
   1eddc:	2301      	movs	r3, #1
   1edde:	6665      	str	r5, [r4, #100]	; 0x64
   1ede0:	81a3      	strh	r3, [r4, #12]
   1ede2:	6025      	str	r5, [r4, #0]
   1ede4:	60a5      	str	r5, [r4, #8]
   1ede6:	6065      	str	r5, [r4, #4]
   1ede8:	6125      	str	r5, [r4, #16]
   1edea:	6165      	str	r5, [r4, #20]
   1edec:	61a5      	str	r5, [r4, #24]
   1edee:	2208      	movs	r2, #8
   1edf0:	4629      	mov	r1, r5
   1edf2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1edf6:	f000 fb6d 	bl	1f4d4 <memset>
   1edfa:	6365      	str	r5, [r4, #52]	; 0x34
   1edfc:	63a5      	str	r5, [r4, #56]	; 0x38
   1edfe:	64a5      	str	r5, [r4, #72]	; 0x48
   1ee00:	64e5      	str	r5, [r4, #76]	; 0x4c
   1ee02:	e7e6      	b.n	1edd2 <__sfp+0x42>
   1ee04:	00028d68 	.word	0x00028d68

0001ee08 <__sfp_lock_acquire>:
__sfp_lock_acquire():
   1ee08:	4770      	bx	lr

0001ee0a <__sfp_lock_release>:
__sfp_lock_release():
   1ee0a:	4770      	bx	lr

0001ee0c <_fopen_r>:
_fopen_r():
   1ee0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ee0e:	460f      	mov	r7, r1
   1ee10:	4611      	mov	r1, r2
   1ee12:	aa01      	add	r2, sp, #4
   1ee14:	4605      	mov	r5, r0
   1ee16:	f004 facf 	bl	233b8 <__sflags>
   1ee1a:	4606      	mov	r6, r0
   1ee1c:	b918      	cbnz	r0, 1ee26 <_fopen_r+0x1a>
   1ee1e:	2400      	movs	r4, #0
   1ee20:	4620      	mov	r0, r4
   1ee22:	b003      	add	sp, #12
   1ee24:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ee26:	4628      	mov	r0, r5
   1ee28:	f7ff ffb2 	bl	1ed90 <__sfp>
   1ee2c:	4604      	mov	r4, r0
   1ee2e:	2800      	cmp	r0, #0
   1ee30:	d0f5      	beq.n	1ee1e <_fopen_r+0x12>
   1ee32:	f44f 73db 	mov.w	r3, #438	; 0x1b6
   1ee36:	9a01      	ldr	r2, [sp, #4]
   1ee38:	4639      	mov	r1, r7
   1ee3a:	4628      	mov	r0, r5
   1ee3c:	f001 fce4 	bl	20808 <_open_r>
   1ee40:	2800      	cmp	r0, #0
   1ee42:	da06      	bge.n	1ee52 <_fopen_r+0x46>
   1ee44:	2500      	movs	r5, #0
   1ee46:	f7ff ffdf 	bl	1ee08 <__sfp_lock_acquire>
   1ee4a:	81a5      	strh	r5, [r4, #12]
   1ee4c:	f7ff ffdd 	bl	1ee0a <__sfp_lock_release>
   1ee50:	e7e5      	b.n	1ee1e <_fopen_r+0x12>
   1ee52:	4b0a      	ldr	r3, [pc, #40]	; (1ee7c <_fopen_r+0x70>)
   1ee54:	81e0      	strh	r0, [r4, #14]
   1ee56:	6263      	str	r3, [r4, #36]	; 0x24
   1ee58:	4b09      	ldr	r3, [pc, #36]	; (1ee80 <_fopen_r+0x74>)
   1ee5a:	81a6      	strh	r6, [r4, #12]
   1ee5c:	62a3      	str	r3, [r4, #40]	; 0x28
   1ee5e:	4b09      	ldr	r3, [pc, #36]	; (1ee84 <_fopen_r+0x78>)
   1ee60:	6224      	str	r4, [r4, #32]
   1ee62:	62e3      	str	r3, [r4, #44]	; 0x2c
   1ee64:	4b08      	ldr	r3, [pc, #32]	; (1ee88 <_fopen_r+0x7c>)
   1ee66:	6323      	str	r3, [r4, #48]	; 0x30
   1ee68:	05f3      	lsls	r3, r6, #23
   1ee6a:	d5d9      	bpl.n	1ee20 <_fopen_r+0x14>
   1ee6c:	2302      	movs	r3, #2
   1ee6e:	2200      	movs	r2, #0
   1ee70:	4621      	mov	r1, r4
   1ee72:	4628      	mov	r0, r5
   1ee74:	f000 f812 	bl	1ee9c <_fseek_r>
   1ee78:	e7d2      	b.n	1ee20 <_fopen_r+0x14>
   1ee7a:	bf00      	nop
   1ee7c:	00020ebd 	.word	0x00020ebd
   1ee80:	00020ee3 	.word	0x00020ee3
   1ee84:	00020f1b 	.word	0x00020f1b
   1ee88:	00020f3f 	.word	0x00020f3f

0001ee8c <fopen>:
fopen():
   1ee8c:	4b02      	ldr	r3, [pc, #8]	; (1ee98 <fopen+0xc>)
   1ee8e:	460a      	mov	r2, r1
   1ee90:	4601      	mov	r1, r0
   1ee92:	6818      	ldr	r0, [r3, #0]
   1ee94:	f7ff bfba 	b.w	1ee0c <_fopen_r>
   1ee98:	2007c0e0 	.word	0x2007c0e0

0001ee9c <_fseek_r>:
_fseek_r():
   1ee9c:	f000 b800 	b.w	1eea0 <_fseeko_r>

0001eea0 <_fseeko_r>:
_fseeko_r():
   1eea0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1eea4:	460c      	mov	r4, r1
   1eea6:	4691      	mov	r9, r2
   1eea8:	461e      	mov	r6, r3
   1eeaa:	4605      	mov	r5, r0
   1eeac:	b118      	cbz	r0, 1eeb6 <_fseeko_r+0x16>
   1eeae:	6983      	ldr	r3, [r0, #24]
   1eeb0:	b90b      	cbnz	r3, 1eeb6 <_fseeko_r+0x16>
   1eeb2:	f7ff ff3d 	bl	1ed30 <__sinit>
   1eeb6:	4b3f      	ldr	r3, [pc, #252]	; (1efb4 <_fseeko_r+0x114>)
   1eeb8:	429c      	cmp	r4, r3
   1eeba:	d112      	bne.n	1eee2 <_fseeko_r+0x42>
   1eebc:	686c      	ldr	r4, [r5, #4]
   1eebe:	89a3      	ldrh	r3, [r4, #12]
   1eec0:	f403 7384 	and.w	r3, r3, #264	; 0x108
   1eec4:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   1eec8:	d103      	bne.n	1eed2 <_fseeko_r+0x32>
   1eeca:	4621      	mov	r1, r4
   1eecc:	4628      	mov	r0, r5
   1eece:	f7ff fe13 	bl	1eaf8 <_fflush_r>
   1eed2:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
   1eed6:	f1b8 0f00 	cmp.w	r8, #0
   1eeda:	d10c      	bne.n	1eef6 <_fseeko_r+0x56>
   1eedc:	231d      	movs	r3, #29
   1eede:	602b      	str	r3, [r5, #0]
   1eee0:	e057      	b.n	1ef92 <_fseeko_r+0xf2>
   1eee2:	4b35      	ldr	r3, [pc, #212]	; (1efb8 <_fseeko_r+0x118>)
   1eee4:	429c      	cmp	r4, r3
   1eee6:	d101      	bne.n	1eeec <_fseeko_r+0x4c>
   1eee8:	68ac      	ldr	r4, [r5, #8]
   1eeea:	e7e8      	b.n	1eebe <_fseeko_r+0x1e>
   1eeec:	4b33      	ldr	r3, [pc, #204]	; (1efbc <_fseeko_r+0x11c>)
   1eeee:	429c      	cmp	r4, r3
   1eef0:	bf08      	it	eq
   1eef2:	68ec      	ldreq	r4, [r5, #12]
   1eef4:	e7e3      	b.n	1eebe <_fseeko_r+0x1e>
   1eef6:	2e01      	cmp	r6, #1
   1eef8:	d030      	beq.n	1ef5c <_fseeko_r+0xbc>
   1eefa:	2e02      	cmp	r6, #2
   1eefc:	d001      	beq.n	1ef02 <_fseeko_r+0x62>
   1eefe:	2e00      	cmp	r6, #0
   1ef00:	d155      	bne.n	1efae <_fseeko_r+0x10e>
   1ef02:	6923      	ldr	r3, [r4, #16]
   1ef04:	b91b      	cbnz	r3, 1ef0e <_fseeko_r+0x6e>
   1ef06:	4621      	mov	r1, r4
   1ef08:	4628      	mov	r0, r5
   1ef0a:	f000 fa3f 	bl	1f38c <__smakebuf_r>
   1ef0e:	4621      	mov	r1, r4
   1ef10:	4628      	mov	r0, r5
   1ef12:	f7ff fdf1 	bl	1eaf8 <_fflush_r>
   1ef16:	4607      	mov	r7, r0
   1ef18:	2800      	cmp	r0, #0
   1ef1a:	d13a      	bne.n	1ef92 <_fseeko_r+0xf2>
   1ef1c:	4633      	mov	r3, r6
   1ef1e:	464a      	mov	r2, r9
   1ef20:	6a21      	ldr	r1, [r4, #32]
   1ef22:	4628      	mov	r0, r5
   1ef24:	47c0      	blx	r8
   1ef26:	3001      	adds	r0, #1
   1ef28:	d033      	beq.n	1ef92 <_fseeko_r+0xf2>
   1ef2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1ef2c:	b141      	cbz	r1, 1ef40 <_fseeko_r+0xa0>
   1ef2e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1ef32:	4299      	cmp	r1, r3
   1ef34:	d002      	beq.n	1ef3c <_fseeko_r+0x9c>
   1ef36:	4628      	mov	r0, r5
   1ef38:	f000 fd48 	bl	1f9cc <_free_r>
   1ef3c:	2300      	movs	r3, #0
   1ef3e:	6363      	str	r3, [r4, #52]	; 0x34
   1ef40:	2100      	movs	r1, #0
   1ef42:	6923      	ldr	r3, [r4, #16]
   1ef44:	6061      	str	r1, [r4, #4]
   1ef46:	6023      	str	r3, [r4, #0]
   1ef48:	89a3      	ldrh	r3, [r4, #12]
   1ef4a:	2208      	movs	r2, #8
   1ef4c:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
   1ef50:	81a3      	strh	r3, [r4, #12]
   1ef52:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1ef56:	f000 fabd 	bl	1f4d4 <memset>
   1ef5a:	e01c      	b.n	1ef96 <_fseeko_r+0xf6>
   1ef5c:	4621      	mov	r1, r4
   1ef5e:	4628      	mov	r0, r5
   1ef60:	f7ff fdca 	bl	1eaf8 <_fflush_r>
   1ef64:	89a2      	ldrh	r2, [r4, #12]
   1ef66:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   1ef6a:	d00c      	beq.n	1ef86 <_fseeko_r+0xe6>
   1ef6c:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1ef6e:	89a3      	ldrh	r3, [r4, #12]
   1ef70:	075a      	lsls	r2, r3, #29
   1ef72:	d513      	bpl.n	1ef9c <_fseeko_r+0xfc>
   1ef74:	6863      	ldr	r3, [r4, #4]
   1ef76:	1ac0      	subs	r0, r0, r3
   1ef78:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1ef7a:	b10b      	cbz	r3, 1ef80 <_fseeko_r+0xe0>
   1ef7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1ef7e:	1ac0      	subs	r0, r0, r3
   1ef80:	4481      	add	r9, r0
   1ef82:	2600      	movs	r6, #0
   1ef84:	e7bd      	b.n	1ef02 <_fseeko_r+0x62>
   1ef86:	6a21      	ldr	r1, [r4, #32]
   1ef88:	4633      	mov	r3, r6
   1ef8a:	4628      	mov	r0, r5
   1ef8c:	47c0      	blx	r8
   1ef8e:	1c41      	adds	r1, r0, #1
   1ef90:	d1ed      	bne.n	1ef6e <_fseeko_r+0xce>
   1ef92:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1ef96:	4638      	mov	r0, r7
   1ef98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ef9c:	071b      	lsls	r3, r3, #28
   1ef9e:	d5ef      	bpl.n	1ef80 <_fseeko_r+0xe0>
   1efa0:	6823      	ldr	r3, [r4, #0]
   1efa2:	2b00      	cmp	r3, #0
   1efa4:	d0ec      	beq.n	1ef80 <_fseeko_r+0xe0>
   1efa6:	6922      	ldr	r2, [r4, #16]
   1efa8:	1a9b      	subs	r3, r3, r2
   1efaa:	4418      	add	r0, r3
   1efac:	e7e8      	b.n	1ef80 <_fseeko_r+0xe0>
   1efae:	2316      	movs	r3, #22
   1efb0:	e795      	b.n	1eede <_fseeko_r+0x3e>
   1efb2:	bf00      	nop
   1efb4:	00028d28 	.word	0x00028d28
   1efb8:	00028d48 	.word	0x00028d48
   1efbc:	00028d08 	.word	0x00028d08

0001efc0 <_fwalk>:
_fwalk():
   1efc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1efc4:	4688      	mov	r8, r1
   1efc6:	2600      	movs	r6, #0
   1efc8:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1efcc:	b914      	cbnz	r4, 1efd4 <_fwalk+0x14>
   1efce:	4630      	mov	r0, r6
   1efd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1efd4:	68a5      	ldr	r5, [r4, #8]
   1efd6:	6867      	ldr	r7, [r4, #4]
   1efd8:	3f01      	subs	r7, #1
   1efda:	d501      	bpl.n	1efe0 <_fwalk+0x20>
   1efdc:	6824      	ldr	r4, [r4, #0]
   1efde:	e7f5      	b.n	1efcc <_fwalk+0xc>
   1efe0:	89ab      	ldrh	r3, [r5, #12]
   1efe2:	2b01      	cmp	r3, #1
   1efe4:	d906      	bls.n	1eff4 <_fwalk+0x34>
   1efe6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1efea:	3301      	adds	r3, #1
   1efec:	d002      	beq.n	1eff4 <_fwalk+0x34>
   1efee:	4628      	mov	r0, r5
   1eff0:	47c0      	blx	r8
   1eff2:	4306      	orrs	r6, r0
   1eff4:	3568      	adds	r5, #104	; 0x68
   1eff6:	e7ef      	b.n	1efd8 <_fwalk+0x18>

0001eff8 <_fwalk_reent>:
_fwalk_reent():
   1eff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1effc:	4680      	mov	r8, r0
   1effe:	4689      	mov	r9, r1
   1f000:	2600      	movs	r6, #0
   1f002:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1f006:	b914      	cbnz	r4, 1f00e <_fwalk_reent+0x16>
   1f008:	4630      	mov	r0, r6
   1f00a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f00e:	68a5      	ldr	r5, [r4, #8]
   1f010:	6867      	ldr	r7, [r4, #4]
   1f012:	3f01      	subs	r7, #1
   1f014:	d501      	bpl.n	1f01a <_fwalk_reent+0x22>
   1f016:	6824      	ldr	r4, [r4, #0]
   1f018:	e7f5      	b.n	1f006 <_fwalk_reent+0xe>
   1f01a:	89ab      	ldrh	r3, [r5, #12]
   1f01c:	2b01      	cmp	r3, #1
   1f01e:	d907      	bls.n	1f030 <_fwalk_reent+0x38>
   1f020:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1f024:	3301      	adds	r3, #1
   1f026:	d003      	beq.n	1f030 <_fwalk_reent+0x38>
   1f028:	4629      	mov	r1, r5
   1f02a:	4640      	mov	r0, r8
   1f02c:	47c8      	blx	r9
   1f02e:	4306      	orrs	r6, r0
   1f030:	3568      	adds	r5, #104	; 0x68
   1f032:	e7ee      	b.n	1f012 <_fwalk_reent+0x1a>

0001f034 <_fwrite_r>:
_fwrite_r():
   1f034:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f038:	9c08      	ldr	r4, [sp, #32]
   1f03a:	4689      	mov	r9, r1
   1f03c:	4617      	mov	r7, r2
   1f03e:	fb02 f803 	mul.w	r8, r2, r3
   1f042:	4606      	mov	r6, r0
   1f044:	b118      	cbz	r0, 1f04e <_fwrite_r+0x1a>
   1f046:	6983      	ldr	r3, [r0, #24]
   1f048:	b90b      	cbnz	r3, 1f04e <_fwrite_r+0x1a>
   1f04a:	f7ff fe71 	bl	1ed30 <__sinit>
   1f04e:	4b1d      	ldr	r3, [pc, #116]	; (1f0c4 <_fwrite_r+0x90>)
   1f050:	429c      	cmp	r4, r3
   1f052:	d11a      	bne.n	1f08a <_fwrite_r+0x56>
   1f054:	6874      	ldr	r4, [r6, #4]
   1f056:	89a3      	ldrh	r3, [r4, #12]
   1f058:	071b      	lsls	r3, r3, #28
   1f05a:	d520      	bpl.n	1f09e <_fwrite_r+0x6a>
   1f05c:	6923      	ldr	r3, [r4, #16]
   1f05e:	b1f3      	cbz	r3, 1f09e <_fwrite_r+0x6a>
   1f060:	2500      	movs	r5, #0
   1f062:	4545      	cmp	r5, r8
   1f064:	d029      	beq.n	1f0ba <_fwrite_r+0x86>
   1f066:	68a3      	ldr	r3, [r4, #8]
   1f068:	f819 1005 	ldrb.w	r1, [r9, r5]
   1f06c:	3b01      	subs	r3, #1
   1f06e:	2b00      	cmp	r3, #0
   1f070:	60a3      	str	r3, [r4, #8]
   1f072:	da04      	bge.n	1f07e <_fwrite_r+0x4a>
   1f074:	69a2      	ldr	r2, [r4, #24]
   1f076:	4293      	cmp	r3, r2
   1f078:	db19      	blt.n	1f0ae <_fwrite_r+0x7a>
   1f07a:	290a      	cmp	r1, #10
   1f07c:	d017      	beq.n	1f0ae <_fwrite_r+0x7a>
   1f07e:	6823      	ldr	r3, [r4, #0]
   1f080:	1c5a      	adds	r2, r3, #1
   1f082:	6022      	str	r2, [r4, #0]
   1f084:	7019      	strb	r1, [r3, #0]
   1f086:	3501      	adds	r5, #1
   1f088:	e7eb      	b.n	1f062 <_fwrite_r+0x2e>
   1f08a:	4b0f      	ldr	r3, [pc, #60]	; (1f0c8 <_fwrite_r+0x94>)
   1f08c:	429c      	cmp	r4, r3
   1f08e:	d101      	bne.n	1f094 <_fwrite_r+0x60>
   1f090:	68b4      	ldr	r4, [r6, #8]
   1f092:	e7e0      	b.n	1f056 <_fwrite_r+0x22>
   1f094:	4b0d      	ldr	r3, [pc, #52]	; (1f0cc <_fwrite_r+0x98>)
   1f096:	429c      	cmp	r4, r3
   1f098:	bf08      	it	eq
   1f09a:	68f4      	ldreq	r4, [r6, #12]
   1f09c:	e7db      	b.n	1f056 <_fwrite_r+0x22>
   1f09e:	4621      	mov	r1, r4
   1f0a0:	4630      	mov	r0, r6
   1f0a2:	f003 fa5b 	bl	2255c <__swsetup_r>
   1f0a6:	2800      	cmp	r0, #0
   1f0a8:	d0da      	beq.n	1f060 <_fwrite_r+0x2c>
   1f0aa:	2500      	movs	r5, #0
   1f0ac:	e005      	b.n	1f0ba <_fwrite_r+0x86>
   1f0ae:	4622      	mov	r2, r4
   1f0b0:	4630      	mov	r0, r6
   1f0b2:	f003 f9e1 	bl	22478 <__swbuf_r>
   1f0b6:	3001      	adds	r0, #1
   1f0b8:	d1e5      	bne.n	1f086 <_fwrite_r+0x52>
   1f0ba:	fbb5 f0f7 	udiv	r0, r5, r7
   1f0be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f0c2:	bf00      	nop
   1f0c4:	00028d28 	.word	0x00028d28
   1f0c8:	00028d48 	.word	0x00028d48
   1f0cc:	00028d08 	.word	0x00028d08

0001f0d0 <fwrite>:
fwrite():
   1f0d0:	b507      	push	{r0, r1, r2, lr}
   1f0d2:	9300      	str	r3, [sp, #0]
   1f0d4:	4613      	mov	r3, r2
   1f0d6:	460a      	mov	r2, r1
   1f0d8:	4601      	mov	r1, r0
   1f0da:	4803      	ldr	r0, [pc, #12]	; (1f0e8 <fwrite+0x18>)
   1f0dc:	6800      	ldr	r0, [r0, #0]
   1f0de:	f7ff ffa9 	bl	1f034 <_fwrite_r>
   1f0e2:	b003      	add	sp, #12
   1f0e4:	f85d fb04 	ldr.w	pc, [sp], #4
   1f0e8:	2007c0e0 	.word	0x2007c0e0

0001f0ec <__libc_init_array>:
__libc_init_array():
   1f0ec:	b570      	push	{r4, r5, r6, lr}
   1f0ee:	2500      	movs	r5, #0
   1f0f0:	4e0c      	ldr	r6, [pc, #48]	; (1f124 <__libc_init_array+0x38>)
   1f0f2:	4c0d      	ldr	r4, [pc, #52]	; (1f128 <__libc_init_array+0x3c>)
   1f0f4:	1ba4      	subs	r4, r4, r6
   1f0f6:	10a4      	asrs	r4, r4, #2
   1f0f8:	42a5      	cmp	r5, r4
   1f0fa:	d109      	bne.n	1f110 <__libc_init_array+0x24>
   1f0fc:	f7f8 f91e 	bl	1733c <_init>
   1f100:	2500      	movs	r5, #0
   1f102:	4e0a      	ldr	r6, [pc, #40]	; (1f12c <__libc_init_array+0x40>)
   1f104:	4c0a      	ldr	r4, [pc, #40]	; (1f130 <__libc_init_array+0x44>)
   1f106:	1ba4      	subs	r4, r4, r6
   1f108:	10a4      	asrs	r4, r4, #2
   1f10a:	42a5      	cmp	r5, r4
   1f10c:	d105      	bne.n	1f11a <__libc_init_array+0x2e>
   1f10e:	bd70      	pop	{r4, r5, r6, pc}
   1f110:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1f114:	4798      	blx	r3
   1f116:	3501      	adds	r5, #1
   1f118:	e7ee      	b.n	1f0f8 <__libc_init_array+0xc>
   1f11a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1f11e:	4798      	blx	r3
   1f120:	3501      	adds	r5, #1
   1f122:	e7f2      	b.n	1f10a <__libc_init_array+0x1e>
   1f124:	000291a0 	.word	0x000291a0
   1f128:	000291a0 	.word	0x000291a0
   1f12c:	000291a0 	.word	0x000291a0
   1f130:	000291a8 	.word	0x000291a8

0001f134 <localtime>:
localtime():
   1f134:	b538      	push	{r3, r4, r5, lr}
   1f136:	4b07      	ldr	r3, [pc, #28]	; (1f154 <localtime+0x20>)
   1f138:	4605      	mov	r5, r0
   1f13a:	681c      	ldr	r4, [r3, #0]
   1f13c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1f13e:	b91b      	cbnz	r3, 1f148 <localtime+0x14>
   1f140:	2024      	movs	r0, #36	; 0x24
   1f142:	f000 f963 	bl	1f40c <malloc>
   1f146:	63e0      	str	r0, [r4, #60]	; 0x3c
   1f148:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1f14a:	4628      	mov	r0, r5
   1f14c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1f150:	f000 b802 	b.w	1f158 <localtime_r>
   1f154:	2007c0e0 	.word	0x2007c0e0

0001f158 <localtime_r>:
localtime_r():
   1f158:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f15c:	460c      	mov	r4, r1
   1f15e:	4680      	mov	r8, r0
   1f160:	f004 fcea 	bl	23b38 <__gettzinfo>
   1f164:	4621      	mov	r1, r4
   1f166:	4607      	mov	r7, r0
   1f168:	4640      	mov	r0, r8
   1f16a:	f004 fce9 	bl	23b40 <gmtime_r>
   1f16e:	6946      	ldr	r6, [r0, #20]
   1f170:	4604      	mov	r4, r0
   1f172:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1f176:	07b3      	lsls	r3, r6, #30
   1f178:	d105      	bne.n	1f186 <localtime_r+0x2e>
   1f17a:	2264      	movs	r2, #100	; 0x64
   1f17c:	fb96 f3f2 	sdiv	r3, r6, r2
   1f180:	fb02 6313 	mls	r3, r2, r3, r6
   1f184:	b9fb      	cbnz	r3, 1f1c6 <localtime_r+0x6e>
   1f186:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1f18a:	fb96 f5f3 	sdiv	r5, r6, r3
   1f18e:	fb03 6515 	mls	r5, r3, r5, r6
   1f192:	fab5 f585 	clz	r5, r5
   1f196:	096d      	lsrs	r5, r5, #5
   1f198:	2230      	movs	r2, #48	; 0x30
   1f19a:	4b5f      	ldr	r3, [pc, #380]	; (1f318 <localtime_r+0x1c0>)
   1f19c:	fb02 3505 	mla	r5, r2, r5, r3
   1f1a0:	f002 ff78 	bl	22094 <__tz_lock>
   1f1a4:	f002 ff78 	bl	22098 <_tzset_unlocked>
   1f1a8:	4b5c      	ldr	r3, [pc, #368]	; (1f31c <localtime_r+0x1c4>)
   1f1aa:	681b      	ldr	r3, [r3, #0]
   1f1ac:	b1e3      	cbz	r3, 1f1e8 <localtime_r+0x90>
   1f1ae:	687b      	ldr	r3, [r7, #4]
   1f1b0:	429e      	cmp	r6, r3
   1f1b2:	d10a      	bne.n	1f1ca <localtime_r+0x72>
   1f1b4:	6839      	ldr	r1, [r7, #0]
   1f1b6:	f8d8 3000 	ldr.w	r3, [r8]
   1f1ba:	69fa      	ldr	r2, [r7, #28]
   1f1bc:	b969      	cbnz	r1, 1f1da <localtime_r+0x82>
   1f1be:	4293      	cmp	r3, r2
   1f1c0:	db0d      	blt.n	1f1de <localtime_r+0x86>
   1f1c2:	2301      	movs	r3, #1
   1f1c4:	e010      	b.n	1f1e8 <localtime_r+0x90>
   1f1c6:	2501      	movs	r5, #1
   1f1c8:	e7e6      	b.n	1f198 <localtime_r+0x40>
   1f1ca:	4630      	mov	r0, r6
   1f1cc:	f002 feba 	bl	21f44 <__tzcalc_limits>
   1f1d0:	2800      	cmp	r0, #0
   1f1d2:	d1ef      	bne.n	1f1b4 <localtime_r+0x5c>
   1f1d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1f1d8:	e006      	b.n	1f1e8 <localtime_r+0x90>
   1f1da:	4293      	cmp	r3, r2
   1f1dc:	db54      	blt.n	1f288 <localtime_r+0x130>
   1f1de:	6bba      	ldr	r2, [r7, #56]	; 0x38
   1f1e0:	4293      	cmp	r3, r2
   1f1e2:	bfac      	ite	ge
   1f1e4:	2300      	movge	r3, #0
   1f1e6:	2301      	movlt	r3, #1
   1f1e8:	6223      	str	r3, [r4, #32]
   1f1ea:	6a23      	ldr	r3, [r4, #32]
   1f1ec:	203c      	movs	r0, #60	; 0x3c
   1f1ee:	2b01      	cmp	r3, #1
   1f1f0:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   1f1f4:	bf0c      	ite	eq
   1f1f6:	6bf9      	ldreq	r1, [r7, #60]	; 0x3c
   1f1f8:	6a39      	ldrne	r1, [r7, #32]
   1f1fa:	fb91 f6f3 	sdiv	r6, r1, r3
   1f1fe:	fb03 1316 	mls	r3, r3, r6, r1
   1f202:	fb93 f2f0 	sdiv	r2, r3, r0
   1f206:	fb00 3012 	mls	r0, r0, r2, r3
   1f20a:	6861      	ldr	r1, [r4, #4]
   1f20c:	6823      	ldr	r3, [r4, #0]
   1f20e:	1a89      	subs	r1, r1, r2
   1f210:	68a2      	ldr	r2, [r4, #8]
   1f212:	1a1b      	subs	r3, r3, r0
   1f214:	1b92      	subs	r2, r2, r6
   1f216:	2b3b      	cmp	r3, #59	; 0x3b
   1f218:	6023      	str	r3, [r4, #0]
   1f21a:	6061      	str	r1, [r4, #4]
   1f21c:	60a2      	str	r2, [r4, #8]
   1f21e:	dd35      	ble.n	1f28c <localtime_r+0x134>
   1f220:	3101      	adds	r1, #1
   1f222:	6061      	str	r1, [r4, #4]
   1f224:	3b3c      	subs	r3, #60	; 0x3c
   1f226:	6023      	str	r3, [r4, #0]
   1f228:	6863      	ldr	r3, [r4, #4]
   1f22a:	2b3b      	cmp	r3, #59	; 0x3b
   1f22c:	dd34      	ble.n	1f298 <localtime_r+0x140>
   1f22e:	3201      	adds	r2, #1
   1f230:	60a2      	str	r2, [r4, #8]
   1f232:	3b3c      	subs	r3, #60	; 0x3c
   1f234:	6063      	str	r3, [r4, #4]
   1f236:	68a3      	ldr	r3, [r4, #8]
   1f238:	2b17      	cmp	r3, #23
   1f23a:	dd33      	ble.n	1f2a4 <localtime_r+0x14c>
   1f23c:	69e2      	ldr	r2, [r4, #28]
   1f23e:	3b18      	subs	r3, #24
   1f240:	3201      	adds	r2, #1
   1f242:	61e2      	str	r2, [r4, #28]
   1f244:	69a2      	ldr	r2, [r4, #24]
   1f246:	60a3      	str	r3, [r4, #8]
   1f248:	3201      	adds	r2, #1
   1f24a:	2a06      	cmp	r2, #6
   1f24c:	bfc8      	it	gt
   1f24e:	2200      	movgt	r2, #0
   1f250:	61a2      	str	r2, [r4, #24]
   1f252:	68e2      	ldr	r2, [r4, #12]
   1f254:	6923      	ldr	r3, [r4, #16]
   1f256:	3201      	adds	r2, #1
   1f258:	60e2      	str	r2, [r4, #12]
   1f25a:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
   1f25e:	428a      	cmp	r2, r1
   1f260:	dd0d      	ble.n	1f27e <localtime_r+0x126>
   1f262:	3301      	adds	r3, #1
   1f264:	2b0c      	cmp	r3, #12
   1f266:	eba2 0201 	sub.w	r2, r2, r1
   1f26a:	60e2      	str	r2, [r4, #12]
   1f26c:	bf05      	ittet	eq
   1f26e:	2200      	moveq	r2, #0
   1f270:	6963      	ldreq	r3, [r4, #20]
   1f272:	6123      	strne	r3, [r4, #16]
   1f274:	3301      	addeq	r3, #1
   1f276:	bf02      	ittt	eq
   1f278:	6122      	streq	r2, [r4, #16]
   1f27a:	6163      	streq	r3, [r4, #20]
   1f27c:	61e2      	streq	r2, [r4, #28]
   1f27e:	f002 ff0a 	bl	22096 <__tz_unlock>
   1f282:	4620      	mov	r0, r4
   1f284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f288:	2300      	movs	r3, #0
   1f28a:	e7ad      	b.n	1f1e8 <localtime_r+0x90>
   1f28c:	2b00      	cmp	r3, #0
   1f28e:	dacb      	bge.n	1f228 <localtime_r+0xd0>
   1f290:	3901      	subs	r1, #1
   1f292:	6061      	str	r1, [r4, #4]
   1f294:	333c      	adds	r3, #60	; 0x3c
   1f296:	e7c6      	b.n	1f226 <localtime_r+0xce>
   1f298:	2b00      	cmp	r3, #0
   1f29a:	dacc      	bge.n	1f236 <localtime_r+0xde>
   1f29c:	3a01      	subs	r2, #1
   1f29e:	60a2      	str	r2, [r4, #8]
   1f2a0:	333c      	adds	r3, #60	; 0x3c
   1f2a2:	e7c7      	b.n	1f234 <localtime_r+0xdc>
   1f2a4:	2b00      	cmp	r3, #0
   1f2a6:	daea      	bge.n	1f27e <localtime_r+0x126>
   1f2a8:	69e2      	ldr	r2, [r4, #28]
   1f2aa:	3318      	adds	r3, #24
   1f2ac:	3a01      	subs	r2, #1
   1f2ae:	61e2      	str	r2, [r4, #28]
   1f2b0:	69a2      	ldr	r2, [r4, #24]
   1f2b2:	60a3      	str	r3, [r4, #8]
   1f2b4:	3a01      	subs	r2, #1
   1f2b6:	bf48      	it	mi
   1f2b8:	2206      	movmi	r2, #6
   1f2ba:	61a2      	str	r2, [r4, #24]
   1f2bc:	68e2      	ldr	r2, [r4, #12]
   1f2be:	3a01      	subs	r2, #1
   1f2c0:	60e2      	str	r2, [r4, #12]
   1f2c2:	2a00      	cmp	r2, #0
   1f2c4:	d1db      	bne.n	1f27e <localtime_r+0x126>
   1f2c6:	6923      	ldr	r3, [r4, #16]
   1f2c8:	3b01      	subs	r3, #1
   1f2ca:	d405      	bmi.n	1f2d8 <localtime_r+0x180>
   1f2cc:	6123      	str	r3, [r4, #16]
   1f2ce:	6923      	ldr	r3, [r4, #16]
   1f2d0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
   1f2d4:	60e3      	str	r3, [r4, #12]
   1f2d6:	e7d2      	b.n	1f27e <localtime_r+0x126>
   1f2d8:	230b      	movs	r3, #11
   1f2da:	6123      	str	r3, [r4, #16]
   1f2dc:	6963      	ldr	r3, [r4, #20]
   1f2de:	1e5a      	subs	r2, r3, #1
   1f2e0:	f012 0f03 	tst.w	r2, #3
   1f2e4:	6162      	str	r2, [r4, #20]
   1f2e6:	f203 726b 	addw	r2, r3, #1899	; 0x76b
   1f2ea:	d105      	bne.n	1f2f8 <localtime_r+0x1a0>
   1f2ec:	2164      	movs	r1, #100	; 0x64
   1f2ee:	fb92 f3f1 	sdiv	r3, r2, r1
   1f2f2:	fb01 2313 	mls	r3, r1, r3, r2
   1f2f6:	b963      	cbnz	r3, 1f312 <localtime_r+0x1ba>
   1f2f8:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1f2fc:	fb92 f3f1 	sdiv	r3, r2, r1
   1f300:	fb01 2313 	mls	r3, r1, r3, r2
   1f304:	fab3 f383 	clz	r3, r3
   1f308:	095b      	lsrs	r3, r3, #5
   1f30a:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1f30e:	61e3      	str	r3, [r4, #28]
   1f310:	e7dd      	b.n	1f2ce <localtime_r+0x176>
   1f312:	2301      	movs	r3, #1
   1f314:	e7f9      	b.n	1f30a <localtime_r+0x1b2>
   1f316:	bf00      	nop
   1f318:	00028dd4 	.word	0x00028dd4
   1f31c:	2007c978 	.word	0x2007c978

0001f320 <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   1f320:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   1f324:	4770      	bx	lr
   1f326:	Address 0x000000000001f326 is out of bounds.


0001f328 <__locale_ctype_ptr>:
__locale_ctype_ptr():
   1f328:	4b04      	ldr	r3, [pc, #16]	; (1f33c <__locale_ctype_ptr+0x14>)
   1f32a:	4a05      	ldr	r2, [pc, #20]	; (1f340 <__locale_ctype_ptr+0x18>)
   1f32c:	681b      	ldr	r3, [r3, #0]
   1f32e:	6a1b      	ldr	r3, [r3, #32]
   1f330:	2b00      	cmp	r3, #0
   1f332:	bf08      	it	eq
   1f334:	4613      	moveq	r3, r2
   1f336:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   1f33a:	4770      	bx	lr
   1f33c:	2007c0e0 	.word	0x2007c0e0
   1f340:	2007c144 	.word	0x2007c144

0001f344 <__swhatbuf_r>:
__swhatbuf_r():
   1f344:	b570      	push	{r4, r5, r6, lr}
   1f346:	460e      	mov	r6, r1
   1f348:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1f34c:	b090      	sub	sp, #64	; 0x40
   1f34e:	2900      	cmp	r1, #0
   1f350:	4614      	mov	r4, r2
   1f352:	461d      	mov	r5, r3
   1f354:	da07      	bge.n	1f366 <__swhatbuf_r+0x22>
   1f356:	2300      	movs	r3, #0
   1f358:	602b      	str	r3, [r5, #0]
   1f35a:	89b3      	ldrh	r3, [r6, #12]
   1f35c:	061a      	lsls	r2, r3, #24
   1f35e:	d410      	bmi.n	1f382 <__swhatbuf_r+0x3e>
   1f360:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1f364:	e00e      	b.n	1f384 <__swhatbuf_r+0x40>
   1f366:	aa01      	add	r2, sp, #4
   1f368:	f004 f85c 	bl	23424 <_fstat_r>
   1f36c:	2800      	cmp	r0, #0
   1f36e:	dbf2      	blt.n	1f356 <__swhatbuf_r+0x12>
   1f370:	9a02      	ldr	r2, [sp, #8]
   1f372:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   1f376:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   1f37a:	425a      	negs	r2, r3
   1f37c:	415a      	adcs	r2, r3
   1f37e:	602a      	str	r2, [r5, #0]
   1f380:	e7ee      	b.n	1f360 <__swhatbuf_r+0x1c>
   1f382:	2340      	movs	r3, #64	; 0x40
   1f384:	2000      	movs	r0, #0
   1f386:	6023      	str	r3, [r4, #0]
   1f388:	b010      	add	sp, #64	; 0x40
   1f38a:	bd70      	pop	{r4, r5, r6, pc}

0001f38c <__smakebuf_r>:
__smakebuf_r():
   1f38c:	898b      	ldrh	r3, [r1, #12]
   1f38e:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1f390:	079d      	lsls	r5, r3, #30
   1f392:	4606      	mov	r6, r0
   1f394:	460c      	mov	r4, r1
   1f396:	d507      	bpl.n	1f3a8 <__smakebuf_r+0x1c>
   1f398:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1f39c:	6023      	str	r3, [r4, #0]
   1f39e:	6123      	str	r3, [r4, #16]
   1f3a0:	2301      	movs	r3, #1
   1f3a2:	6163      	str	r3, [r4, #20]
   1f3a4:	b002      	add	sp, #8
   1f3a6:	bd70      	pop	{r4, r5, r6, pc}
   1f3a8:	ab01      	add	r3, sp, #4
   1f3aa:	466a      	mov	r2, sp
   1f3ac:	f7ff ffca 	bl	1f344 <__swhatbuf_r>
   1f3b0:	9900      	ldr	r1, [sp, #0]
   1f3b2:	4605      	mov	r5, r0
   1f3b4:	4630      	mov	r0, r6
   1f3b6:	f000 fb87 	bl	1fac8 <_malloc_r>
   1f3ba:	b948      	cbnz	r0, 1f3d0 <__smakebuf_r+0x44>
   1f3bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1f3c0:	059a      	lsls	r2, r3, #22
   1f3c2:	d4ef      	bmi.n	1f3a4 <__smakebuf_r+0x18>
   1f3c4:	f023 0303 	bic.w	r3, r3, #3
   1f3c8:	f043 0302 	orr.w	r3, r3, #2
   1f3cc:	81a3      	strh	r3, [r4, #12]
   1f3ce:	e7e3      	b.n	1f398 <__smakebuf_r+0xc>
   1f3d0:	4b0d      	ldr	r3, [pc, #52]	; (1f408 <__smakebuf_r+0x7c>)
   1f3d2:	62b3      	str	r3, [r6, #40]	; 0x28
   1f3d4:	89a3      	ldrh	r3, [r4, #12]
   1f3d6:	6020      	str	r0, [r4, #0]
   1f3d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1f3dc:	81a3      	strh	r3, [r4, #12]
   1f3de:	9b00      	ldr	r3, [sp, #0]
   1f3e0:	6120      	str	r0, [r4, #16]
   1f3e2:	6163      	str	r3, [r4, #20]
   1f3e4:	9b01      	ldr	r3, [sp, #4]
   1f3e6:	b15b      	cbz	r3, 1f400 <__smakebuf_r+0x74>
   1f3e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1f3ec:	4630      	mov	r0, r6
   1f3ee:	f004 fc3f 	bl	23c70 <_isatty_r>
   1f3f2:	b128      	cbz	r0, 1f400 <__smakebuf_r+0x74>
   1f3f4:	89a3      	ldrh	r3, [r4, #12]
   1f3f6:	f023 0303 	bic.w	r3, r3, #3
   1f3fa:	f043 0301 	orr.w	r3, r3, #1
   1f3fe:	81a3      	strh	r3, [r4, #12]
   1f400:	89a3      	ldrh	r3, [r4, #12]
   1f402:	431d      	orrs	r5, r3
   1f404:	81a5      	strh	r5, [r4, #12]
   1f406:	e7cd      	b.n	1f3a4 <__smakebuf_r+0x18>
   1f408:	0001ecb1 	.word	0x0001ecb1

0001f40c <malloc>:
malloc():
   1f40c:	4b02      	ldr	r3, [pc, #8]	; (1f418 <malloc+0xc>)
   1f40e:	4601      	mov	r1, r0
   1f410:	6818      	ldr	r0, [r3, #0]
   1f412:	f000 bb59 	b.w	1fac8 <_malloc_r>
   1f416:	bf00      	nop
   1f418:	2007c0e0 	.word	0x2007c0e0

0001f41c <free>:
free():
   1f41c:	4b02      	ldr	r3, [pc, #8]	; (1f428 <free+0xc>)
   1f41e:	4601      	mov	r1, r0
   1f420:	6818      	ldr	r0, [r3, #0]
   1f422:	f000 bad3 	b.w	1f9cc <_free_r>
   1f426:	bf00      	nop
   1f428:	2007c0e0 	.word	0x2007c0e0

0001f42c <__ascii_mbtowc>:
__ascii_mbtowc():
   1f42c:	b082      	sub	sp, #8
   1f42e:	b901      	cbnz	r1, 1f432 <__ascii_mbtowc+0x6>
   1f430:	a901      	add	r1, sp, #4
   1f432:	b142      	cbz	r2, 1f446 <__ascii_mbtowc+0x1a>
   1f434:	b14b      	cbz	r3, 1f44a <__ascii_mbtowc+0x1e>
   1f436:	7813      	ldrb	r3, [r2, #0]
   1f438:	600b      	str	r3, [r1, #0]
   1f43a:	7812      	ldrb	r2, [r2, #0]
   1f43c:	1c10      	adds	r0, r2, #0
   1f43e:	bf18      	it	ne
   1f440:	2001      	movne	r0, #1
   1f442:	b002      	add	sp, #8
   1f444:	4770      	bx	lr
   1f446:	4610      	mov	r0, r2
   1f448:	e7fb      	b.n	1f442 <__ascii_mbtowc+0x16>
   1f44a:	f06f 0001 	mvn.w	r0, #1
   1f44e:	e7f8      	b.n	1f442 <__ascii_mbtowc+0x16>

0001f450 <memchr>:
memchr():
   1f450:	b510      	push	{r4, lr}
   1f452:	b2c9      	uxtb	r1, r1
   1f454:	4402      	add	r2, r0
   1f456:	4290      	cmp	r0, r2
   1f458:	4603      	mov	r3, r0
   1f45a:	d101      	bne.n	1f460 <memchr+0x10>
   1f45c:	2000      	movs	r0, #0
   1f45e:	bd10      	pop	{r4, pc}
   1f460:	781c      	ldrb	r4, [r3, #0]
   1f462:	3001      	adds	r0, #1
   1f464:	428c      	cmp	r4, r1
   1f466:	d1f6      	bne.n	1f456 <memchr+0x6>
   1f468:	4618      	mov	r0, r3
   1f46a:	bd10      	pop	{r4, pc}

0001f46c <memcmp>:
memcmp():
   1f46c:	b510      	push	{r4, lr}
   1f46e:	3901      	subs	r1, #1
   1f470:	4402      	add	r2, r0
   1f472:	4290      	cmp	r0, r2
   1f474:	d101      	bne.n	1f47a <memcmp+0xe>
   1f476:	2000      	movs	r0, #0
   1f478:	bd10      	pop	{r4, pc}
   1f47a:	f810 3b01 	ldrb.w	r3, [r0], #1
   1f47e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   1f482:	42a3      	cmp	r3, r4
   1f484:	d0f5      	beq.n	1f472 <memcmp+0x6>
   1f486:	1b18      	subs	r0, r3, r4
   1f488:	bd10      	pop	{r4, pc}

0001f48a <memcpy>:
memcpy():
   1f48a:	b510      	push	{r4, lr}
   1f48c:	1e43      	subs	r3, r0, #1
   1f48e:	440a      	add	r2, r1
   1f490:	4291      	cmp	r1, r2
   1f492:	d100      	bne.n	1f496 <memcpy+0xc>
   1f494:	bd10      	pop	{r4, pc}
   1f496:	f811 4b01 	ldrb.w	r4, [r1], #1
   1f49a:	f803 4f01 	strb.w	r4, [r3, #1]!
   1f49e:	e7f7      	b.n	1f490 <memcpy+0x6>

0001f4a0 <memmove>:
memmove():
   1f4a0:	4288      	cmp	r0, r1
   1f4a2:	b510      	push	{r4, lr}
   1f4a4:	eb01 0302 	add.w	r3, r1, r2
   1f4a8:	d803      	bhi.n	1f4b2 <memmove+0x12>
   1f4aa:	1e42      	subs	r2, r0, #1
   1f4ac:	4299      	cmp	r1, r3
   1f4ae:	d10c      	bne.n	1f4ca <memmove+0x2a>
   1f4b0:	bd10      	pop	{r4, pc}
   1f4b2:	4298      	cmp	r0, r3
   1f4b4:	d2f9      	bcs.n	1f4aa <memmove+0xa>
   1f4b6:	1881      	adds	r1, r0, r2
   1f4b8:	1ad2      	subs	r2, r2, r3
   1f4ba:	42d3      	cmn	r3, r2
   1f4bc:	d100      	bne.n	1f4c0 <memmove+0x20>
   1f4be:	bd10      	pop	{r4, pc}
   1f4c0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   1f4c4:	f801 4d01 	strb.w	r4, [r1, #-1]!
   1f4c8:	e7f7      	b.n	1f4ba <memmove+0x1a>
   1f4ca:	f811 4b01 	ldrb.w	r4, [r1], #1
   1f4ce:	f802 4f01 	strb.w	r4, [r2, #1]!
   1f4d2:	e7eb      	b.n	1f4ac <memmove+0xc>

0001f4d4 <memset>:
memset():
   1f4d4:	4603      	mov	r3, r0
   1f4d6:	4402      	add	r2, r0
   1f4d8:	4293      	cmp	r3, r2
   1f4da:	d100      	bne.n	1f4de <memset+0xa>
   1f4dc:	4770      	bx	lr
   1f4de:	f803 1b01 	strb.w	r1, [r3], #1
   1f4e2:	e7f9      	b.n	1f4d8 <memset+0x4>

0001f4e4 <validate_structure>:
validate_structure():
   1f4e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1f4e6:	6801      	ldr	r1, [r0, #0]
   1f4e8:	4604      	mov	r4, r0
   1f4ea:	293b      	cmp	r1, #59	; 0x3b
   1f4ec:	d911      	bls.n	1f512 <validate_structure+0x2e>
   1f4ee:	223c      	movs	r2, #60	; 0x3c
   1f4f0:	4668      	mov	r0, sp
   1f4f2:	f003 f8ed 	bl	226d0 <div>
   1f4f6:	9a01      	ldr	r2, [sp, #4]
   1f4f8:	6863      	ldr	r3, [r4, #4]
   1f4fa:	9900      	ldr	r1, [sp, #0]
   1f4fc:	2a00      	cmp	r2, #0
   1f4fe:	440b      	add	r3, r1
   1f500:	6063      	str	r3, [r4, #4]
   1f502:	bfbb      	ittet	lt
   1f504:	323c      	addlt	r2, #60	; 0x3c
   1f506:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1f50a:	6022      	strge	r2, [r4, #0]
   1f50c:	6022      	strlt	r2, [r4, #0]
   1f50e:	bfb8      	it	lt
   1f510:	6063      	strlt	r3, [r4, #4]
   1f512:	6861      	ldr	r1, [r4, #4]
   1f514:	293b      	cmp	r1, #59	; 0x3b
   1f516:	d911      	bls.n	1f53c <validate_structure+0x58>
   1f518:	223c      	movs	r2, #60	; 0x3c
   1f51a:	4668      	mov	r0, sp
   1f51c:	f003 f8d8 	bl	226d0 <div>
   1f520:	9a01      	ldr	r2, [sp, #4]
   1f522:	68a3      	ldr	r3, [r4, #8]
   1f524:	9900      	ldr	r1, [sp, #0]
   1f526:	2a00      	cmp	r2, #0
   1f528:	440b      	add	r3, r1
   1f52a:	60a3      	str	r3, [r4, #8]
   1f52c:	bfbb      	ittet	lt
   1f52e:	323c      	addlt	r2, #60	; 0x3c
   1f530:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1f534:	6062      	strge	r2, [r4, #4]
   1f536:	6062      	strlt	r2, [r4, #4]
   1f538:	bfb8      	it	lt
   1f53a:	60a3      	strlt	r3, [r4, #8]
   1f53c:	68a1      	ldr	r1, [r4, #8]
   1f53e:	2917      	cmp	r1, #23
   1f540:	d911      	bls.n	1f566 <validate_structure+0x82>
   1f542:	2218      	movs	r2, #24
   1f544:	4668      	mov	r0, sp
   1f546:	f003 f8c3 	bl	226d0 <div>
   1f54a:	9a01      	ldr	r2, [sp, #4]
   1f54c:	68e3      	ldr	r3, [r4, #12]
   1f54e:	9900      	ldr	r1, [sp, #0]
   1f550:	2a00      	cmp	r2, #0
   1f552:	440b      	add	r3, r1
   1f554:	60e3      	str	r3, [r4, #12]
   1f556:	bfbb      	ittet	lt
   1f558:	3218      	addlt	r2, #24
   1f55a:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1f55e:	60a2      	strge	r2, [r4, #8]
   1f560:	60a2      	strlt	r2, [r4, #8]
   1f562:	bfb8      	it	lt
   1f564:	60e3      	strlt	r3, [r4, #12]
   1f566:	6921      	ldr	r1, [r4, #16]
   1f568:	290b      	cmp	r1, #11
   1f56a:	d911      	bls.n	1f590 <validate_structure+0xac>
   1f56c:	220c      	movs	r2, #12
   1f56e:	4668      	mov	r0, sp
   1f570:	f003 f8ae 	bl	226d0 <div>
   1f574:	9a01      	ldr	r2, [sp, #4]
   1f576:	6963      	ldr	r3, [r4, #20]
   1f578:	9900      	ldr	r1, [sp, #0]
   1f57a:	2a00      	cmp	r2, #0
   1f57c:	440b      	add	r3, r1
   1f57e:	6163      	str	r3, [r4, #20]
   1f580:	bfbb      	ittet	lt
   1f582:	320c      	addlt	r2, #12
   1f584:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   1f588:	6122      	strge	r2, [r4, #16]
   1f58a:	6122      	strlt	r2, [r4, #16]
   1f58c:	bfb8      	it	lt
   1f58e:	6163      	strlt	r3, [r4, #20]
   1f590:	6963      	ldr	r3, [r4, #20]
   1f592:	0799      	lsls	r1, r3, #30
   1f594:	d143      	bne.n	1f61e <validate_structure+0x13a>
   1f596:	2164      	movs	r1, #100	; 0x64
   1f598:	fb93 f2f1 	sdiv	r2, r3, r1
   1f59c:	fb01 3212 	mls	r2, r1, r2, r3
   1f5a0:	2a00      	cmp	r2, #0
   1f5a2:	d13e      	bne.n	1f622 <validate_structure+0x13e>
   1f5a4:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1f5a8:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1f5ac:	fb93 f2f1 	sdiv	r2, r3, r1
   1f5b0:	fb01 3312 	mls	r3, r1, r2, r3
   1f5b4:	2b00      	cmp	r3, #0
   1f5b6:	bf14      	ite	ne
   1f5b8:	231c      	movne	r3, #28
   1f5ba:	231d      	moveq	r3, #29
   1f5bc:	68e2      	ldr	r2, [r4, #12]
   1f5be:	2a00      	cmp	r2, #0
   1f5c0:	dd31      	ble.n	1f626 <validate_structure+0x142>
   1f5c2:	2602      	movs	r6, #2
   1f5c4:	f04f 0e00 	mov.w	lr, #0
   1f5c8:	2064      	movs	r0, #100	; 0x64
   1f5ca:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1f5ce:	4f34      	ldr	r7, [pc, #208]	; (1f6a0 <validate_structure+0x1bc>)
   1f5d0:	6921      	ldr	r1, [r4, #16]
   1f5d2:	68e2      	ldr	r2, [r4, #12]
   1f5d4:	2901      	cmp	r1, #1
   1f5d6:	d05d      	beq.n	1f694 <validate_structure+0x1b0>
   1f5d8:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   1f5dc:	4562      	cmp	r2, ip
   1f5de:	dd2c      	ble.n	1f63a <validate_structure+0x156>
   1f5e0:	3101      	adds	r1, #1
   1f5e2:	eba2 020c 	sub.w	r2, r2, ip
   1f5e6:	290c      	cmp	r1, #12
   1f5e8:	60e2      	str	r2, [r4, #12]
   1f5ea:	6121      	str	r1, [r4, #16]
   1f5ec:	d1f0      	bne.n	1f5d0 <validate_structure+0xec>
   1f5ee:	6963      	ldr	r3, [r4, #20]
   1f5f0:	f8c4 e010 	str.w	lr, [r4, #16]
   1f5f4:	1c5a      	adds	r2, r3, #1
   1f5f6:	0791      	lsls	r1, r2, #30
   1f5f8:	6162      	str	r2, [r4, #20]
   1f5fa:	d147      	bne.n	1f68c <validate_structure+0x1a8>
   1f5fc:	fb92 f1f0 	sdiv	r1, r2, r0
   1f600:	fb00 2211 	mls	r2, r0, r1, r2
   1f604:	2a00      	cmp	r2, #0
   1f606:	d143      	bne.n	1f690 <validate_structure+0x1ac>
   1f608:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   1f60c:	fb93 f2f5 	sdiv	r2, r3, r5
   1f610:	fb05 3312 	mls	r3, r5, r2, r3
   1f614:	2b00      	cmp	r3, #0
   1f616:	bf14      	ite	ne
   1f618:	231c      	movne	r3, #28
   1f61a:	231d      	moveq	r3, #29
   1f61c:	e7d8      	b.n	1f5d0 <validate_structure+0xec>
   1f61e:	231c      	movs	r3, #28
   1f620:	e7cc      	b.n	1f5bc <validate_structure+0xd8>
   1f622:	231d      	movs	r3, #29
   1f624:	e7ca      	b.n	1f5bc <validate_structure+0xd8>
   1f626:	260b      	movs	r6, #11
   1f628:	2064      	movs	r0, #100	; 0x64
   1f62a:	f44f 75c8 	mov.w	r5, #400	; 0x190
   1f62e:	4f1c      	ldr	r7, [pc, #112]	; (1f6a0 <validate_structure+0x1bc>)
   1f630:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   1f634:	f1be 0f00 	cmp.w	lr, #0
   1f638:	dd01      	ble.n	1f63e <validate_structure+0x15a>
   1f63a:	b003      	add	sp, #12
   1f63c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1f63e:	6921      	ldr	r1, [r4, #16]
   1f640:	3901      	subs	r1, #1
   1f642:	6121      	str	r1, [r4, #16]
   1f644:	3101      	adds	r1, #1
   1f646:	d114      	bne.n	1f672 <validate_structure+0x18e>
   1f648:	6963      	ldr	r3, [r4, #20]
   1f64a:	6126      	str	r6, [r4, #16]
   1f64c:	1e59      	subs	r1, r3, #1
   1f64e:	078a      	lsls	r2, r1, #30
   1f650:	6161      	str	r1, [r4, #20]
   1f652:	d117      	bne.n	1f684 <validate_structure+0x1a0>
   1f654:	fb91 f2f0 	sdiv	r2, r1, r0
   1f658:	fb00 1112 	mls	r1, r0, r2, r1
   1f65c:	b9a1      	cbnz	r1, 1f688 <validate_structure+0x1a4>
   1f65e:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1f662:	fb93 f2f5 	sdiv	r2, r3, r5
   1f666:	fb05 3312 	mls	r3, r5, r2, r3
   1f66a:	2b00      	cmp	r3, #0
   1f66c:	bf14      	ite	ne
   1f66e:	231c      	movne	r3, #28
   1f670:	231d      	moveq	r3, #29
   1f672:	6922      	ldr	r2, [r4, #16]
   1f674:	2a01      	cmp	r2, #1
   1f676:	bf0c      	ite	eq
   1f678:	461a      	moveq	r2, r3
   1f67a:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   1f67e:	4472      	add	r2, lr
   1f680:	60e2      	str	r2, [r4, #12]
   1f682:	e7d5      	b.n	1f630 <validate_structure+0x14c>
   1f684:	231c      	movs	r3, #28
   1f686:	e7f4      	b.n	1f672 <validate_structure+0x18e>
   1f688:	231d      	movs	r3, #29
   1f68a:	e7f2      	b.n	1f672 <validate_structure+0x18e>
   1f68c:	231c      	movs	r3, #28
   1f68e:	e79f      	b.n	1f5d0 <validate_structure+0xec>
   1f690:	231d      	movs	r3, #29
   1f692:	e79d      	b.n	1f5d0 <validate_structure+0xec>
   1f694:	4293      	cmp	r3, r2
   1f696:	dad0      	bge.n	1f63a <validate_structure+0x156>
   1f698:	1ad2      	subs	r2, r2, r3
   1f69a:	60e2      	str	r2, [r4, #12]
   1f69c:	6126      	str	r6, [r4, #16]
   1f69e:	e797      	b.n	1f5d0 <validate_structure+0xec>
   1f6a0:	00028d74 	.word	0x00028d74

0001f6a4 <mktime>:
mktime():
   1f6a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f6a8:	4681      	mov	r9, r0
   1f6aa:	f004 fa45 	bl	23b38 <__gettzinfo>
   1f6ae:	253c      	movs	r5, #60	; 0x3c
   1f6b0:	4680      	mov	r8, r0
   1f6b2:	4648      	mov	r0, r9
   1f6b4:	f7ff ff16 	bl	1f4e4 <validate_structure>
   1f6b8:	e899 0081 	ldmia.w	r9, {r0, r7}
   1f6bc:	fb05 0707 	mla	r7, r5, r7, r0
   1f6c0:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   1f6c4:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1f6c8:	4ab1      	ldr	r2, [pc, #708]	; (1f990 <mktime+0x2ec>)
   1f6ca:	f8d9 400c 	ldr.w	r4, [r9, #12]
   1f6ce:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1f6d2:	f8d9 0008 	ldr.w	r0, [r9, #8]
   1f6d6:	3c01      	subs	r4, #1
   1f6d8:	2b01      	cmp	r3, #1
   1f6da:	fb05 7000 	mla	r0, r5, r0, r7
   1f6de:	4414      	add	r4, r2
   1f6e0:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1f6e4:	dd11      	ble.n	1f70a <mktime+0x66>
   1f6e6:	0799      	lsls	r1, r3, #30
   1f6e8:	d10f      	bne.n	1f70a <mktime+0x66>
   1f6ea:	2164      	movs	r1, #100	; 0x64
   1f6ec:	fb93 f2f1 	sdiv	r2, r3, r1
   1f6f0:	fb01 3212 	mls	r2, r1, r2, r3
   1f6f4:	b942      	cbnz	r2, 1f708 <mktime+0x64>
   1f6f6:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1f6fa:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1f6fe:	fb95 f2f1 	sdiv	r2, r5, r1
   1f702:	fb01 5212 	mls	r2, r1, r2, r5
   1f706:	b902      	cbnz	r2, 1f70a <mktime+0x66>
   1f708:	3401      	adds	r4, #1
   1f70a:	f644 6120 	movw	r1, #20000	; 0x4e20
   1f70e:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1f712:	3210      	adds	r2, #16
   1f714:	428a      	cmp	r2, r1
   1f716:	f8c9 401c 	str.w	r4, [r9, #28]
   1f71a:	f200 812d 	bhi.w	1f978 <mktime+0x2d4>
   1f71e:	2b46      	cmp	r3, #70	; 0x46
   1f720:	dd70      	ble.n	1f804 <mktime+0x160>
   1f722:	2546      	movs	r5, #70	; 0x46
   1f724:	f240 176d 	movw	r7, #365	; 0x16d
   1f728:	2164      	movs	r1, #100	; 0x64
   1f72a:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1f72e:	07aa      	lsls	r2, r5, #30
   1f730:	d162      	bne.n	1f7f8 <mktime+0x154>
   1f732:	fb95 f2f1 	sdiv	r2, r5, r1
   1f736:	fb01 5212 	mls	r2, r1, r2, r5
   1f73a:	2a00      	cmp	r2, #0
   1f73c:	d15f      	bne.n	1f7fe <mktime+0x15a>
   1f73e:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   1f742:	fb9e f2f6 	sdiv	r2, lr, r6
   1f746:	fb06 e212 	mls	r2, r6, r2, lr
   1f74a:	2a00      	cmp	r2, #0
   1f74c:	bf14      	ite	ne
   1f74e:	463a      	movne	r2, r7
   1f750:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1f754:	3501      	adds	r5, #1
   1f756:	42ab      	cmp	r3, r5
   1f758:	4414      	add	r4, r2
   1f75a:	d1e8      	bne.n	1f72e <mktime+0x8a>
   1f75c:	4f8d      	ldr	r7, [pc, #564]	; (1f994 <mktime+0x2f0>)
   1f75e:	fb07 0704 	mla	r7, r7, r4, r0
   1f762:	f002 fc97 	bl	22094 <__tz_lock>
   1f766:	f002 fc97 	bl	22098 <_tzset_unlocked>
   1f76a:	4b8b      	ldr	r3, [pc, #556]	; (1f998 <mktime+0x2f4>)
   1f76c:	681e      	ldr	r6, [r3, #0]
   1f76e:	2e00      	cmp	r6, #0
   1f770:	f000 810a 	beq.w	1f988 <mktime+0x2e4>
   1f774:	f8d9 3020 	ldr.w	r3, [r9, #32]
   1f778:	f8d9 0014 	ldr.w	r0, [r9, #20]
   1f77c:	2b01      	cmp	r3, #1
   1f77e:	bfa8      	it	ge
   1f780:	2301      	movge	r3, #1
   1f782:	469a      	mov	sl, r3
   1f784:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1f788:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1f78c:	4298      	cmp	r0, r3
   1f78e:	d17c      	bne.n	1f88a <mktime+0x1e6>
   1f790:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   1f794:	f8d8 3020 	ldr.w	r3, [r8, #32]
   1f798:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   1f79c:	f8d8 101c 	ldr.w	r1, [r8, #28]
   1f7a0:	1ad6      	subs	r6, r2, r3
   1f7a2:	42b7      	cmp	r7, r6
   1f7a4:	eba1 0100 	sub.w	r1, r1, r0
   1f7a8:	da76      	bge.n	1f898 <mktime+0x1f4>
   1f7aa:	f8d8 2000 	ldr.w	r2, [r8]
   1f7ae:	2a00      	cmp	r2, #0
   1f7b0:	d076      	beq.n	1f8a0 <mktime+0x1fc>
   1f7b2:	428f      	cmp	r7, r1
   1f7b4:	f2c0 80e3 	blt.w	1f97e <mktime+0x2da>
   1f7b8:	42b7      	cmp	r7, r6
   1f7ba:	bfac      	ite	ge
   1f7bc:	2600      	movge	r6, #0
   1f7be:	2601      	movlt	r6, #1
   1f7c0:	f1ba 0f00 	cmp.w	sl, #0
   1f7c4:	da72      	bge.n	1f8ac <mktime+0x208>
   1f7c6:	2e01      	cmp	r6, #1
   1f7c8:	f040 80de 	bne.w	1f988 <mktime+0x2e4>
   1f7cc:	2601      	movs	r6, #1
   1f7ce:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1f7d2:	443d      	add	r5, r7
   1f7d4:	f002 fc5f 	bl	22096 <__tz_unlock>
   1f7d8:	2307      	movs	r3, #7
   1f7da:	3404      	adds	r4, #4
   1f7dc:	fb94 f3f3 	sdiv	r3, r4, r3
   1f7e0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1f7e4:	1ae4      	subs	r4, r4, r3
   1f7e6:	bf48      	it	mi
   1f7e8:	3407      	addmi	r4, #7
   1f7ea:	f8c9 6020 	str.w	r6, [r9, #32]
   1f7ee:	f8c9 4018 	str.w	r4, [r9, #24]
   1f7f2:	4628      	mov	r0, r5
   1f7f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f7f8:	f240 126d 	movw	r2, #365	; 0x16d
   1f7fc:	e7aa      	b.n	1f754 <mktime+0xb0>
   1f7fe:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1f802:	e7a7      	b.n	1f754 <mktime+0xb0>
   1f804:	d01e      	beq.n	1f844 <mktime+0x1a0>
   1f806:	2245      	movs	r2, #69	; 0x45
   1f808:	f240 176d 	movw	r7, #365	; 0x16d
   1f80c:	2564      	movs	r5, #100	; 0x64
   1f80e:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1f812:	429a      	cmp	r2, r3
   1f814:	dc18      	bgt.n	1f848 <mktime+0x1a4>
   1f816:	079d      	lsls	r5, r3, #30
   1f818:	d131      	bne.n	1f87e <mktime+0x1da>
   1f81a:	2164      	movs	r1, #100	; 0x64
   1f81c:	fb93 f2f1 	sdiv	r2, r3, r1
   1f820:	fb01 3212 	mls	r2, r1, r2, r3
   1f824:	bb72      	cbnz	r2, 1f884 <mktime+0x1e0>
   1f826:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1f82a:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1f82e:	fb95 f2f1 	sdiv	r2, r5, r1
   1f832:	fb01 5212 	mls	r2, r1, r2, r5
   1f836:	2a00      	cmp	r2, #0
   1f838:	f240 126d 	movw	r2, #365	; 0x16d
   1f83c:	bf08      	it	eq
   1f83e:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1f842:	1aa4      	subs	r4, r4, r2
   1f844:	461d      	mov	r5, r3
   1f846:	e789      	b.n	1f75c <mktime+0xb8>
   1f848:	0791      	lsls	r1, r2, #30
   1f84a:	d112      	bne.n	1f872 <mktime+0x1ce>
   1f84c:	fb92 f1f5 	sdiv	r1, r2, r5
   1f850:	fb05 2111 	mls	r1, r5, r1, r2
   1f854:	b981      	cbnz	r1, 1f878 <mktime+0x1d4>
   1f856:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1f85a:	fb9e f1f6 	sdiv	r1, lr, r6
   1f85e:	fb06 e111 	mls	r1, r6, r1, lr
   1f862:	2900      	cmp	r1, #0
   1f864:	bf14      	ite	ne
   1f866:	4639      	movne	r1, r7
   1f868:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1f86c:	1a64      	subs	r4, r4, r1
   1f86e:	3a01      	subs	r2, #1
   1f870:	e7cf      	b.n	1f812 <mktime+0x16e>
   1f872:	f240 116d 	movw	r1, #365	; 0x16d
   1f876:	e7f9      	b.n	1f86c <mktime+0x1c8>
   1f878:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1f87c:	e7f6      	b.n	1f86c <mktime+0x1c8>
   1f87e:	f240 126d 	movw	r2, #365	; 0x16d
   1f882:	e7de      	b.n	1f842 <mktime+0x19e>
   1f884:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1f888:	e7db      	b.n	1f842 <mktime+0x19e>
   1f88a:	f002 fb5b 	bl	21f44 <__tzcalc_limits>
   1f88e:	2800      	cmp	r0, #0
   1f890:	f47f af7e 	bne.w	1f790 <mktime+0xec>
   1f894:	4656      	mov	r6, sl
   1f896:	e796      	b.n	1f7c6 <mktime+0x122>
   1f898:	1a12      	subs	r2, r2, r0
   1f89a:	4297      	cmp	r7, r2
   1f89c:	dbfa      	blt.n	1f894 <mktime+0x1f0>
   1f89e:	e784      	b.n	1f7aa <mktime+0x106>
   1f8a0:	428f      	cmp	r7, r1
   1f8a2:	db89      	blt.n	1f7b8 <mktime+0x114>
   1f8a4:	f1ba 0f00 	cmp.w	sl, #0
   1f8a8:	db90      	blt.n	1f7cc <mktime+0x128>
   1f8aa:	2601      	movs	r6, #1
   1f8ac:	ea8a 0a06 	eor.w	sl, sl, r6
   1f8b0:	f1ba 0f01 	cmp.w	sl, #1
   1f8b4:	d187      	bne.n	1f7c6 <mktime+0x122>
   1f8b6:	1a1b      	subs	r3, r3, r0
   1f8b8:	b906      	cbnz	r6, 1f8bc <mktime+0x218>
   1f8ba:	425b      	negs	r3, r3
   1f8bc:	f8d9 2000 	ldr.w	r2, [r9]
   1f8c0:	4648      	mov	r0, r9
   1f8c2:	441a      	add	r2, r3
   1f8c4:	f8c9 2000 	str.w	r2, [r9]
   1f8c8:	441f      	add	r7, r3
   1f8ca:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   1f8ce:	f7ff fe09 	bl	1f4e4 <validate_structure>
   1f8d2:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1f8d6:	ebb3 030a 	subs.w	r3, r3, sl
   1f8da:	f43f af74 	beq.w	1f7c6 <mktime+0x122>
   1f8de:	2b01      	cmp	r3, #1
   1f8e0:	dc21      	bgt.n	1f926 <mktime+0x282>
   1f8e2:	1c98      	adds	r0, r3, #2
   1f8e4:	bfd8      	it	le
   1f8e6:	2301      	movle	r3, #1
   1f8e8:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1f8ec:	441c      	add	r4, r3
   1f8ee:	189b      	adds	r3, r3, r2
   1f8f0:	d522      	bpl.n	1f938 <mktime+0x294>
   1f8f2:	1e6a      	subs	r2, r5, #1
   1f8f4:	0791      	lsls	r1, r2, #30
   1f8f6:	d119      	bne.n	1f92c <mktime+0x288>
   1f8f8:	2164      	movs	r1, #100	; 0x64
   1f8fa:	fb92 f3f1 	sdiv	r3, r2, r1
   1f8fe:	fb01 2313 	mls	r3, r1, r3, r2
   1f902:	b9b3      	cbnz	r3, 1f932 <mktime+0x28e>
   1f904:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1f908:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1f90c:	fb95 f3f2 	sdiv	r3, r5, r2
   1f910:	fb02 5513 	mls	r5, r2, r3, r5
   1f914:	2d00      	cmp	r5, #0
   1f916:	f240 136d 	movw	r3, #365	; 0x16d
   1f91a:	bf18      	it	ne
   1f91c:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1f920:	f8c9 301c 	str.w	r3, [r9, #28]
   1f924:	e74f      	b.n	1f7c6 <mktime+0x122>
   1f926:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1f92a:	e7dd      	b.n	1f8e8 <mktime+0x244>
   1f92c:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1f930:	e7f6      	b.n	1f920 <mktime+0x27c>
   1f932:	f240 136d 	movw	r3, #365	; 0x16d
   1f936:	e7f3      	b.n	1f920 <mktime+0x27c>
   1f938:	07aa      	lsls	r2, r5, #30
   1f93a:	d117      	bne.n	1f96c <mktime+0x2c8>
   1f93c:	2164      	movs	r1, #100	; 0x64
   1f93e:	fb95 f2f1 	sdiv	r2, r5, r1
   1f942:	fb01 5212 	mls	r2, r1, r2, r5
   1f946:	b9a2      	cbnz	r2, 1f972 <mktime+0x2ce>
   1f948:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1f94c:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   1f950:	fb95 f2f1 	sdiv	r2, r5, r1
   1f954:	fb01 5512 	mls	r5, r1, r2, r5
   1f958:	2d00      	cmp	r5, #0
   1f95a:	f240 126d 	movw	r2, #365	; 0x16d
   1f95e:	bf08      	it	eq
   1f960:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1f964:	429a      	cmp	r2, r3
   1f966:	bfd8      	it	le
   1f968:	1a9b      	suble	r3, r3, r2
   1f96a:	e7d9      	b.n	1f920 <mktime+0x27c>
   1f96c:	f240 126d 	movw	r2, #365	; 0x16d
   1f970:	e7f8      	b.n	1f964 <mktime+0x2c0>
   1f972:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1f976:	e7f5      	b.n	1f964 <mktime+0x2c0>
   1f978:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1f97c:	e739      	b.n	1f7f2 <mktime+0x14e>
   1f97e:	f1ba 0f00 	cmp.w	sl, #0
   1f982:	f04f 0600 	mov.w	r6, #0
   1f986:	da91      	bge.n	1f8ac <mktime+0x208>
   1f988:	f8d8 5020 	ldr.w	r5, [r8, #32]
   1f98c:	443d      	add	r5, r7
   1f98e:	e721      	b.n	1f7d4 <mktime+0x130>
   1f990:	00028da4 	.word	0x00028da4
   1f994:	00015180 	.word	0x00015180
   1f998:	2007c978 	.word	0x2007c978

0001f99c <mallinfo>:
mallinfo():
   1f99c:	b510      	push	{r4, lr}
   1f99e:	4604      	mov	r4, r0
   1f9a0:	4b02      	ldr	r3, [pc, #8]	; (1f9ac <mallinfo+0x10>)
   1f9a2:	6819      	ldr	r1, [r3, #0]
   1f9a4:	f000 f85e 	bl	1fa64 <_mallinfo_r>
   1f9a8:	4620      	mov	r0, r4
   1f9aa:	bd10      	pop	{r4, pc}
   1f9ac:	2007c0e0 	.word	0x2007c0e0

0001f9b0 <_calloc_r>:
_calloc_r():
   1f9b0:	b538      	push	{r3, r4, r5, lr}
   1f9b2:	fb02 f401 	mul.w	r4, r2, r1
   1f9b6:	4621      	mov	r1, r4
   1f9b8:	f000 f886 	bl	1fac8 <_malloc_r>
   1f9bc:	4605      	mov	r5, r0
   1f9be:	b118      	cbz	r0, 1f9c8 <_calloc_r+0x18>
   1f9c0:	4622      	mov	r2, r4
   1f9c2:	2100      	movs	r1, #0
   1f9c4:	f7ff fd86 	bl	1f4d4 <memset>
   1f9c8:	4628      	mov	r0, r5
   1f9ca:	bd38      	pop	{r3, r4, r5, pc}

0001f9cc <_free_r>:
_free_r():
   1f9cc:	b538      	push	{r3, r4, r5, lr}
   1f9ce:	4605      	mov	r5, r0
   1f9d0:	2900      	cmp	r1, #0
   1f9d2:	d043      	beq.n	1fa5c <_free_r+0x90>
   1f9d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1f9d8:	1f0c      	subs	r4, r1, #4
   1f9da:	2b00      	cmp	r3, #0
   1f9dc:	bfb8      	it	lt
   1f9de:	18e4      	addlt	r4, r4, r3
   1f9e0:	f7f7 fbe8 	bl	171b4 <__malloc_lock>
   1f9e4:	4a1e      	ldr	r2, [pc, #120]	; (1fa60 <_free_r+0x94>)
   1f9e6:	6813      	ldr	r3, [r2, #0]
   1f9e8:	4610      	mov	r0, r2
   1f9ea:	b933      	cbnz	r3, 1f9fa <_free_r+0x2e>
   1f9ec:	6063      	str	r3, [r4, #4]
   1f9ee:	6014      	str	r4, [r2, #0]
   1f9f0:	4628      	mov	r0, r5
   1f9f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1f9f6:	f7f7 bbdf 	b.w	171b8 <__malloc_unlock>
   1f9fa:	42a3      	cmp	r3, r4
   1f9fc:	d90b      	bls.n	1fa16 <_free_r+0x4a>
   1f9fe:	6821      	ldr	r1, [r4, #0]
   1fa00:	1862      	adds	r2, r4, r1
   1fa02:	4293      	cmp	r3, r2
   1fa04:	bf01      	itttt	eq
   1fa06:	681a      	ldreq	r2, [r3, #0]
   1fa08:	685b      	ldreq	r3, [r3, #4]
   1fa0a:	1852      	addeq	r2, r2, r1
   1fa0c:	6022      	streq	r2, [r4, #0]
   1fa0e:	6063      	str	r3, [r4, #4]
   1fa10:	6004      	str	r4, [r0, #0]
   1fa12:	e7ed      	b.n	1f9f0 <_free_r+0x24>
   1fa14:	4613      	mov	r3, r2
   1fa16:	685a      	ldr	r2, [r3, #4]
   1fa18:	b10a      	cbz	r2, 1fa1e <_free_r+0x52>
   1fa1a:	42a2      	cmp	r2, r4
   1fa1c:	d9fa      	bls.n	1fa14 <_free_r+0x48>
   1fa1e:	6819      	ldr	r1, [r3, #0]
   1fa20:	1858      	adds	r0, r3, r1
   1fa22:	42a0      	cmp	r0, r4
   1fa24:	d10b      	bne.n	1fa3e <_free_r+0x72>
   1fa26:	6820      	ldr	r0, [r4, #0]
   1fa28:	4401      	add	r1, r0
   1fa2a:	1858      	adds	r0, r3, r1
   1fa2c:	4282      	cmp	r2, r0
   1fa2e:	6019      	str	r1, [r3, #0]
   1fa30:	d1de      	bne.n	1f9f0 <_free_r+0x24>
   1fa32:	6810      	ldr	r0, [r2, #0]
   1fa34:	6852      	ldr	r2, [r2, #4]
   1fa36:	4401      	add	r1, r0
   1fa38:	6019      	str	r1, [r3, #0]
   1fa3a:	605a      	str	r2, [r3, #4]
   1fa3c:	e7d8      	b.n	1f9f0 <_free_r+0x24>
   1fa3e:	d902      	bls.n	1fa46 <_free_r+0x7a>
   1fa40:	230c      	movs	r3, #12
   1fa42:	602b      	str	r3, [r5, #0]
   1fa44:	e7d4      	b.n	1f9f0 <_free_r+0x24>
   1fa46:	6820      	ldr	r0, [r4, #0]
   1fa48:	1821      	adds	r1, r4, r0
   1fa4a:	428a      	cmp	r2, r1
   1fa4c:	bf01      	itttt	eq
   1fa4e:	6811      	ldreq	r1, [r2, #0]
   1fa50:	6852      	ldreq	r2, [r2, #4]
   1fa52:	1809      	addeq	r1, r1, r0
   1fa54:	6021      	streq	r1, [r4, #0]
   1fa56:	6062      	str	r2, [r4, #4]
   1fa58:	605c      	str	r4, [r3, #4]
   1fa5a:	e7c9      	b.n	1f9f0 <_free_r+0x24>
   1fa5c:	bd38      	pop	{r3, r4, r5, pc}
   1fa5e:	bf00      	nop
   1fa60:	2007c954 	.word	0x2007c954

0001fa64 <_mallinfo_r>:
_mallinfo_r():
   1fa64:	b570      	push	{r4, r5, r6, lr}
   1fa66:	4c15      	ldr	r4, [pc, #84]	; (1fabc <_mallinfo_r+0x58>)
   1fa68:	4606      	mov	r6, r0
   1fa6a:	4608      	mov	r0, r1
   1fa6c:	460d      	mov	r5, r1
   1fa6e:	f7f7 fba1 	bl	171b4 <__malloc_lock>
   1fa72:	6820      	ldr	r0, [r4, #0]
   1fa74:	b138      	cbz	r0, 1fa86 <_mallinfo_r+0x22>
   1fa76:	2100      	movs	r1, #0
   1fa78:	4628      	mov	r0, r5
   1fa7a:	f001 f87f 	bl	20b7c <_sbrk_r>
   1fa7e:	1c43      	adds	r3, r0, #1
   1fa80:	bf1c      	itt	ne
   1fa82:	6823      	ldrne	r3, [r4, #0]
   1fa84:	1ac0      	subne	r0, r0, r3
   1fa86:	4b0e      	ldr	r3, [pc, #56]	; (1fac0 <_mallinfo_r+0x5c>)
   1fa88:	681a      	ldr	r2, [r3, #0]
   1fa8a:	2300      	movs	r3, #0
   1fa8c:	b992      	cbnz	r2, 1fab4 <_mallinfo_r+0x50>
   1fa8e:	4c0d      	ldr	r4, [pc, #52]	; (1fac4 <_mallinfo_r+0x60>)
   1fa90:	6020      	str	r0, [r4, #0]
   1fa92:	1ac0      	subs	r0, r0, r3
   1fa94:	61e0      	str	r0, [r4, #28]
   1fa96:	4628      	mov	r0, r5
   1fa98:	4635      	mov	r5, r6
   1fa9a:	6223      	str	r3, [r4, #32]
   1fa9c:	f7f7 fb8c 	bl	171b8 <__malloc_unlock>
   1faa0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1faa2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1faa4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1faa6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1faa8:	e894 0003 	ldmia.w	r4, {r0, r1}
   1faac:	e885 0003 	stmia.w	r5, {r0, r1}
   1fab0:	4630      	mov	r0, r6
   1fab2:	bd70      	pop	{r4, r5, r6, pc}
   1fab4:	6811      	ldr	r1, [r2, #0]
   1fab6:	6852      	ldr	r2, [r2, #4]
   1fab8:	440b      	add	r3, r1
   1faba:	e7e7      	b.n	1fa8c <_mallinfo_r+0x28>
   1fabc:	2007c958 	.word	0x2007c958
   1fac0:	2007c954 	.word	0x2007c954
   1fac4:	2007c92c 	.word	0x2007c92c

0001fac8 <_malloc_r>:
_malloc_r():
   1fac8:	b570      	push	{r4, r5, r6, lr}
   1faca:	1ccd      	adds	r5, r1, #3
   1facc:	f025 0503 	bic.w	r5, r5, #3
   1fad0:	3508      	adds	r5, #8
   1fad2:	2d0c      	cmp	r5, #12
   1fad4:	bf38      	it	cc
   1fad6:	250c      	movcc	r5, #12
   1fad8:	2d00      	cmp	r5, #0
   1fada:	4606      	mov	r6, r0
   1fadc:	db01      	blt.n	1fae2 <_malloc_r+0x1a>
   1fade:	42a9      	cmp	r1, r5
   1fae0:	d903      	bls.n	1faea <_malloc_r+0x22>
   1fae2:	230c      	movs	r3, #12
   1fae4:	6033      	str	r3, [r6, #0]
   1fae6:	2000      	movs	r0, #0
   1fae8:	bd70      	pop	{r4, r5, r6, pc}
   1faea:	f7f7 fb63 	bl	171b4 <__malloc_lock>
   1faee:	4a23      	ldr	r2, [pc, #140]	; (1fb7c <_malloc_r+0xb4>)
   1faf0:	6814      	ldr	r4, [r2, #0]
   1faf2:	4621      	mov	r1, r4
   1faf4:	b991      	cbnz	r1, 1fb1c <_malloc_r+0x54>
   1faf6:	4c22      	ldr	r4, [pc, #136]	; (1fb80 <_malloc_r+0xb8>)
   1faf8:	6823      	ldr	r3, [r4, #0]
   1fafa:	b91b      	cbnz	r3, 1fb04 <_malloc_r+0x3c>
   1fafc:	4630      	mov	r0, r6
   1fafe:	f001 f83d 	bl	20b7c <_sbrk_r>
   1fb02:	6020      	str	r0, [r4, #0]
   1fb04:	4629      	mov	r1, r5
   1fb06:	4630      	mov	r0, r6
   1fb08:	f001 f838 	bl	20b7c <_sbrk_r>
   1fb0c:	1c43      	adds	r3, r0, #1
   1fb0e:	d126      	bne.n	1fb5e <_malloc_r+0x96>
   1fb10:	230c      	movs	r3, #12
   1fb12:	4630      	mov	r0, r6
   1fb14:	6033      	str	r3, [r6, #0]
   1fb16:	f7f7 fb4f 	bl	171b8 <__malloc_unlock>
   1fb1a:	e7e4      	b.n	1fae6 <_malloc_r+0x1e>
   1fb1c:	680b      	ldr	r3, [r1, #0]
   1fb1e:	1b5b      	subs	r3, r3, r5
   1fb20:	d41a      	bmi.n	1fb58 <_malloc_r+0x90>
   1fb22:	2b0b      	cmp	r3, #11
   1fb24:	d90f      	bls.n	1fb46 <_malloc_r+0x7e>
   1fb26:	600b      	str	r3, [r1, #0]
   1fb28:	18cc      	adds	r4, r1, r3
   1fb2a:	50cd      	str	r5, [r1, r3]
   1fb2c:	4630      	mov	r0, r6
   1fb2e:	f7f7 fb43 	bl	171b8 <__malloc_unlock>
   1fb32:	f104 000b 	add.w	r0, r4, #11
   1fb36:	1d23      	adds	r3, r4, #4
   1fb38:	f020 0007 	bic.w	r0, r0, #7
   1fb3c:	1ac3      	subs	r3, r0, r3
   1fb3e:	d01b      	beq.n	1fb78 <_malloc_r+0xb0>
   1fb40:	425a      	negs	r2, r3
   1fb42:	50e2      	str	r2, [r4, r3]
   1fb44:	bd70      	pop	{r4, r5, r6, pc}
   1fb46:	428c      	cmp	r4, r1
   1fb48:	bf0b      	itete	eq
   1fb4a:	6863      	ldreq	r3, [r4, #4]
   1fb4c:	684b      	ldrne	r3, [r1, #4]
   1fb4e:	6013      	streq	r3, [r2, #0]
   1fb50:	6063      	strne	r3, [r4, #4]
   1fb52:	bf18      	it	ne
   1fb54:	460c      	movne	r4, r1
   1fb56:	e7e9      	b.n	1fb2c <_malloc_r+0x64>
   1fb58:	460c      	mov	r4, r1
   1fb5a:	6849      	ldr	r1, [r1, #4]
   1fb5c:	e7ca      	b.n	1faf4 <_malloc_r+0x2c>
   1fb5e:	1cc4      	adds	r4, r0, #3
   1fb60:	f024 0403 	bic.w	r4, r4, #3
   1fb64:	42a0      	cmp	r0, r4
   1fb66:	d005      	beq.n	1fb74 <_malloc_r+0xac>
   1fb68:	1a21      	subs	r1, r4, r0
   1fb6a:	4630      	mov	r0, r6
   1fb6c:	f001 f806 	bl	20b7c <_sbrk_r>
   1fb70:	3001      	adds	r0, #1
   1fb72:	d0cd      	beq.n	1fb10 <_malloc_r+0x48>
   1fb74:	6025      	str	r5, [r4, #0]
   1fb76:	e7d9      	b.n	1fb2c <_malloc_r+0x64>
   1fb78:	bd70      	pop	{r4, r5, r6, pc}
   1fb7a:	bf00      	nop
   1fb7c:	2007c954 	.word	0x2007c954
   1fb80:	2007c958 	.word	0x2007c958

0001fb84 <__cvt>:
__cvt():
   1fb84:	2b00      	cmp	r3, #0
   1fb86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1fb8a:	461e      	mov	r6, r3
   1fb8c:	bfbb      	ittet	lt
   1fb8e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1fb92:	461e      	movlt	r6, r3
   1fb94:	2300      	movge	r3, #0
   1fb96:	232d      	movlt	r3, #45	; 0x2d
   1fb98:	b088      	sub	sp, #32
   1fb9a:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1fb9c:	9912      	ldr	r1, [sp, #72]	; 0x48
   1fb9e:	f027 0720 	bic.w	r7, r7, #32
   1fba2:	2f46      	cmp	r7, #70	; 0x46
   1fba4:	4614      	mov	r4, r2
   1fba6:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1fba8:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1fbac:	700b      	strb	r3, [r1, #0]
   1fbae:	d004      	beq.n	1fbba <__cvt+0x36>
   1fbb0:	2f45      	cmp	r7, #69	; 0x45
   1fbb2:	d100      	bne.n	1fbb6 <__cvt+0x32>
   1fbb4:	3501      	adds	r5, #1
   1fbb6:	2302      	movs	r3, #2
   1fbb8:	e000      	b.n	1fbbc <__cvt+0x38>
   1fbba:	2303      	movs	r3, #3
   1fbbc:	aa07      	add	r2, sp, #28
   1fbbe:	9204      	str	r2, [sp, #16]
   1fbc0:	aa06      	add	r2, sp, #24
   1fbc2:	9203      	str	r2, [sp, #12]
   1fbc4:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1fbc8:	4622      	mov	r2, r4
   1fbca:	4633      	mov	r3, r6
   1fbcc:	f002 fe20 	bl	22810 <_dtoa_r>
   1fbd0:	2f47      	cmp	r7, #71	; 0x47
   1fbd2:	4680      	mov	r8, r0
   1fbd4:	d102      	bne.n	1fbdc <__cvt+0x58>
   1fbd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1fbd8:	07db      	lsls	r3, r3, #31
   1fbda:	d526      	bpl.n	1fc2a <__cvt+0xa6>
   1fbdc:	2f46      	cmp	r7, #70	; 0x46
   1fbde:	eb08 0905 	add.w	r9, r8, r5
   1fbe2:	d111      	bne.n	1fc08 <__cvt+0x84>
   1fbe4:	f898 3000 	ldrb.w	r3, [r8]
   1fbe8:	2b30      	cmp	r3, #48	; 0x30
   1fbea:	d10a      	bne.n	1fc02 <__cvt+0x7e>
   1fbec:	2200      	movs	r2, #0
   1fbee:	2300      	movs	r3, #0
   1fbf0:	4620      	mov	r0, r4
   1fbf2:	4631      	mov	r1, r6
   1fbf4:	f005 ff94 	bl	25b20 <__aeabi_dcmpeq>
   1fbf8:	b918      	cbnz	r0, 1fc02 <__cvt+0x7e>
   1fbfa:	f1c5 0501 	rsb	r5, r5, #1
   1fbfe:	f8ca 5000 	str.w	r5, [sl]
   1fc02:	f8da 3000 	ldr.w	r3, [sl]
   1fc06:	4499      	add	r9, r3
   1fc08:	2200      	movs	r2, #0
   1fc0a:	2300      	movs	r3, #0
   1fc0c:	4620      	mov	r0, r4
   1fc0e:	4631      	mov	r1, r6
   1fc10:	f005 ff86 	bl	25b20 <__aeabi_dcmpeq>
   1fc14:	b938      	cbnz	r0, 1fc26 <__cvt+0xa2>
   1fc16:	2230      	movs	r2, #48	; 0x30
   1fc18:	9b07      	ldr	r3, [sp, #28]
   1fc1a:	4599      	cmp	r9, r3
   1fc1c:	d905      	bls.n	1fc2a <__cvt+0xa6>
   1fc1e:	1c59      	adds	r1, r3, #1
   1fc20:	9107      	str	r1, [sp, #28]
   1fc22:	701a      	strb	r2, [r3, #0]
   1fc24:	e7f8      	b.n	1fc18 <__cvt+0x94>
   1fc26:	f8cd 901c 	str.w	r9, [sp, #28]
   1fc2a:	4640      	mov	r0, r8
   1fc2c:	9b07      	ldr	r3, [sp, #28]
   1fc2e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1fc30:	eba3 0308 	sub.w	r3, r3, r8
   1fc34:	6013      	str	r3, [r2, #0]
   1fc36:	b008      	add	sp, #32
   1fc38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001fc3c <__exponent>:
__exponent():
   1fc3c:	4603      	mov	r3, r0
   1fc3e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1fc40:	2900      	cmp	r1, #0
   1fc42:	f803 2b02 	strb.w	r2, [r3], #2
   1fc46:	bfb6      	itet	lt
   1fc48:	222d      	movlt	r2, #45	; 0x2d
   1fc4a:	222b      	movge	r2, #43	; 0x2b
   1fc4c:	4249      	neglt	r1, r1
   1fc4e:	2909      	cmp	r1, #9
   1fc50:	7042      	strb	r2, [r0, #1]
   1fc52:	dd21      	ble.n	1fc98 <__exponent+0x5c>
   1fc54:	f10d 0207 	add.w	r2, sp, #7
   1fc58:	4617      	mov	r7, r2
   1fc5a:	260a      	movs	r6, #10
   1fc5c:	fb91 f5f6 	sdiv	r5, r1, r6
   1fc60:	fb06 1115 	mls	r1, r6, r5, r1
   1fc64:	2d09      	cmp	r5, #9
   1fc66:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1fc6a:	f802 1c01 	strb.w	r1, [r2, #-1]
   1fc6e:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   1fc72:	4629      	mov	r1, r5
   1fc74:	dc09      	bgt.n	1fc8a <__exponent+0x4e>
   1fc76:	3130      	adds	r1, #48	; 0x30
   1fc78:	3a02      	subs	r2, #2
   1fc7a:	f804 1c01 	strb.w	r1, [r4, #-1]
   1fc7e:	42ba      	cmp	r2, r7
   1fc80:	461c      	mov	r4, r3
   1fc82:	d304      	bcc.n	1fc8e <__exponent+0x52>
   1fc84:	1a20      	subs	r0, r4, r0
   1fc86:	b003      	add	sp, #12
   1fc88:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fc8a:	4622      	mov	r2, r4
   1fc8c:	e7e6      	b.n	1fc5c <__exponent+0x20>
   1fc8e:	f812 1b01 	ldrb.w	r1, [r2], #1
   1fc92:	f803 1b01 	strb.w	r1, [r3], #1
   1fc96:	e7f2      	b.n	1fc7e <__exponent+0x42>
   1fc98:	2230      	movs	r2, #48	; 0x30
   1fc9a:	461c      	mov	r4, r3
   1fc9c:	4411      	add	r1, r2
   1fc9e:	f804 2b02 	strb.w	r2, [r4], #2
   1fca2:	7059      	strb	r1, [r3, #1]
   1fca4:	e7ee      	b.n	1fc84 <__exponent+0x48>
   1fca6:	Address 0x000000000001fca6 is out of bounds.


0001fca8 <_printf_float>:
_printf_float():
   1fca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcac:	b091      	sub	sp, #68	; 0x44
   1fcae:	460c      	mov	r4, r1
   1fcb0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   1fcb2:	4693      	mov	fp, r2
   1fcb4:	461e      	mov	r6, r3
   1fcb6:	4605      	mov	r5, r0
   1fcb8:	f003 ffec 	bl	23c94 <_localeconv_r>
   1fcbc:	6803      	ldr	r3, [r0, #0]
   1fcbe:	4618      	mov	r0, r3
   1fcc0:	9309      	str	r3, [sp, #36]	; 0x24
   1fcc2:	f001 f98d 	bl	20fe0 <strlen>
   1fcc6:	2300      	movs	r3, #0
   1fcc8:	930e      	str	r3, [sp, #56]	; 0x38
   1fcca:	683b      	ldr	r3, [r7, #0]
   1fccc:	900a      	str	r0, [sp, #40]	; 0x28
   1fcce:	3307      	adds	r3, #7
   1fcd0:	f023 0307 	bic.w	r3, r3, #7
   1fcd4:	f103 0208 	add.w	r2, r3, #8
   1fcd8:	f894 8018 	ldrb.w	r8, [r4, #24]
   1fcdc:	f8d4 a000 	ldr.w	sl, [r4]
   1fce0:	603a      	str	r2, [r7, #0]
   1fce2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1fce6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1fcea:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   1fcee:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   1fcf0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1fcf4:	930b      	str	r3, [sp, #44]	; 0x2c
   1fcf6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1fcfa:	4ba6      	ldr	r3, [pc, #664]	; (1ff94 <_printf_float+0x2ec>)
   1fcfc:	4638      	mov	r0, r7
   1fcfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1fd00:	f005 ff40 	bl	25b84 <__aeabi_dcmpun>
   1fd04:	2800      	cmp	r0, #0
   1fd06:	f040 81f7 	bne.w	200f8 <_printf_float+0x450>
   1fd0a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1fd0e:	4ba1      	ldr	r3, [pc, #644]	; (1ff94 <_printf_float+0x2ec>)
   1fd10:	4638      	mov	r0, r7
   1fd12:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1fd14:	f005 ff18 	bl	25b48 <__aeabi_dcmple>
   1fd18:	2800      	cmp	r0, #0
   1fd1a:	f040 81ed 	bne.w	200f8 <_printf_float+0x450>
   1fd1e:	2200      	movs	r2, #0
   1fd20:	2300      	movs	r3, #0
   1fd22:	4638      	mov	r0, r7
   1fd24:	4649      	mov	r1, r9
   1fd26:	f005 ff05 	bl	25b34 <__aeabi_dcmplt>
   1fd2a:	b110      	cbz	r0, 1fd32 <_printf_float+0x8a>
   1fd2c:	232d      	movs	r3, #45	; 0x2d
   1fd2e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1fd32:	4b99      	ldr	r3, [pc, #612]	; (1ff98 <_printf_float+0x2f0>)
   1fd34:	4f99      	ldr	r7, [pc, #612]	; (1ff9c <_printf_float+0x2f4>)
   1fd36:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1fd3a:	bf98      	it	ls
   1fd3c:	461f      	movls	r7, r3
   1fd3e:	2303      	movs	r3, #3
   1fd40:	f04f 0900 	mov.w	r9, #0
   1fd44:	6123      	str	r3, [r4, #16]
   1fd46:	f02a 0304 	bic.w	r3, sl, #4
   1fd4a:	6023      	str	r3, [r4, #0]
   1fd4c:	9600      	str	r6, [sp, #0]
   1fd4e:	465b      	mov	r3, fp
   1fd50:	aa0f      	add	r2, sp, #60	; 0x3c
   1fd52:	4621      	mov	r1, r4
   1fd54:	4628      	mov	r0, r5
   1fd56:	f000 f9df 	bl	20118 <_printf_common>
   1fd5a:	3001      	adds	r0, #1
   1fd5c:	f040 809a 	bne.w	1fe94 <_printf_float+0x1ec>
   1fd60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1fd64:	b011      	add	sp, #68	; 0x44
   1fd66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd6a:	6862      	ldr	r2, [r4, #4]
   1fd6c:	a80e      	add	r0, sp, #56	; 0x38
   1fd6e:	1c53      	adds	r3, r2, #1
   1fd70:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1fd74:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   1fd78:	d141      	bne.n	1fdfe <_printf_float+0x156>
   1fd7a:	2206      	movs	r2, #6
   1fd7c:	6062      	str	r2, [r4, #4]
   1fd7e:	2100      	movs	r1, #0
   1fd80:	6023      	str	r3, [r4, #0]
   1fd82:	9301      	str	r3, [sp, #4]
   1fd84:	6863      	ldr	r3, [r4, #4]
   1fd86:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1fd8a:	9005      	str	r0, [sp, #20]
   1fd8c:	9202      	str	r2, [sp, #8]
   1fd8e:	9300      	str	r3, [sp, #0]
   1fd90:	463a      	mov	r2, r7
   1fd92:	464b      	mov	r3, r9
   1fd94:	9106      	str	r1, [sp, #24]
   1fd96:	f8cd 8010 	str.w	r8, [sp, #16]
   1fd9a:	f8cd e00c 	str.w	lr, [sp, #12]
   1fd9e:	4628      	mov	r0, r5
   1fda0:	f7ff fef0 	bl	1fb84 <__cvt>
   1fda4:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   1fda8:	2b47      	cmp	r3, #71	; 0x47
   1fdaa:	4607      	mov	r7, r0
   1fdac:	d109      	bne.n	1fdc2 <_printf_float+0x11a>
   1fdae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1fdb0:	1cd8      	adds	r0, r3, #3
   1fdb2:	db02      	blt.n	1fdba <_printf_float+0x112>
   1fdb4:	6862      	ldr	r2, [r4, #4]
   1fdb6:	4293      	cmp	r3, r2
   1fdb8:	dd59      	ble.n	1fe6e <_printf_float+0x1c6>
   1fdba:	f1a8 0802 	sub.w	r8, r8, #2
   1fdbe:	fa5f f888 	uxtb.w	r8, r8
   1fdc2:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1fdc6:	990d      	ldr	r1, [sp, #52]	; 0x34
   1fdc8:	d836      	bhi.n	1fe38 <_printf_float+0x190>
   1fdca:	3901      	subs	r1, #1
   1fdcc:	4642      	mov	r2, r8
   1fdce:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1fdd2:	910d      	str	r1, [sp, #52]	; 0x34
   1fdd4:	f7ff ff32 	bl	1fc3c <__exponent>
   1fdd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1fdda:	4681      	mov	r9, r0
   1fddc:	1883      	adds	r3, r0, r2
   1fdde:	2a01      	cmp	r2, #1
   1fde0:	6123      	str	r3, [r4, #16]
   1fde2:	dc02      	bgt.n	1fdea <_printf_float+0x142>
   1fde4:	6822      	ldr	r2, [r4, #0]
   1fde6:	07d1      	lsls	r1, r2, #31
   1fde8:	d501      	bpl.n	1fdee <_printf_float+0x146>
   1fdea:	3301      	adds	r3, #1
   1fdec:	6123      	str	r3, [r4, #16]
   1fdee:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1fdf2:	2b00      	cmp	r3, #0
   1fdf4:	d0aa      	beq.n	1fd4c <_printf_float+0xa4>
   1fdf6:	232d      	movs	r3, #45	; 0x2d
   1fdf8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1fdfc:	e7a6      	b.n	1fd4c <_printf_float+0xa4>
   1fdfe:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1fe02:	d002      	beq.n	1fe0a <_printf_float+0x162>
   1fe04:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1fe08:	d1b9      	bne.n	1fd7e <_printf_float+0xd6>
   1fe0a:	b19a      	cbz	r2, 1fe34 <_printf_float+0x18c>
   1fe0c:	2100      	movs	r1, #0
   1fe0e:	9106      	str	r1, [sp, #24]
   1fe10:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1fe14:	e88d 000c 	stmia.w	sp, {r2, r3}
   1fe18:	6023      	str	r3, [r4, #0]
   1fe1a:	9005      	str	r0, [sp, #20]
   1fe1c:	463a      	mov	r2, r7
   1fe1e:	f8cd 8010 	str.w	r8, [sp, #16]
   1fe22:	f8cd e00c 	str.w	lr, [sp, #12]
   1fe26:	9102      	str	r1, [sp, #8]
   1fe28:	464b      	mov	r3, r9
   1fe2a:	4628      	mov	r0, r5
   1fe2c:	f7ff feaa 	bl	1fb84 <__cvt>
   1fe30:	4607      	mov	r7, r0
   1fe32:	e7bc      	b.n	1fdae <_printf_float+0x106>
   1fe34:	2201      	movs	r2, #1
   1fe36:	e7a1      	b.n	1fd7c <_printf_float+0xd4>
   1fe38:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   1fe3c:	d119      	bne.n	1fe72 <_printf_float+0x1ca>
   1fe3e:	2900      	cmp	r1, #0
   1fe40:	6863      	ldr	r3, [r4, #4]
   1fe42:	dd0c      	ble.n	1fe5e <_printf_float+0x1b6>
   1fe44:	6121      	str	r1, [r4, #16]
   1fe46:	b913      	cbnz	r3, 1fe4e <_printf_float+0x1a6>
   1fe48:	6822      	ldr	r2, [r4, #0]
   1fe4a:	07d2      	lsls	r2, r2, #31
   1fe4c:	d502      	bpl.n	1fe54 <_printf_float+0x1ac>
   1fe4e:	3301      	adds	r3, #1
   1fe50:	440b      	add	r3, r1
   1fe52:	6123      	str	r3, [r4, #16]
   1fe54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1fe56:	f04f 0900 	mov.w	r9, #0
   1fe5a:	65a3      	str	r3, [r4, #88]	; 0x58
   1fe5c:	e7c7      	b.n	1fdee <_printf_float+0x146>
   1fe5e:	b913      	cbnz	r3, 1fe66 <_printf_float+0x1be>
   1fe60:	6822      	ldr	r2, [r4, #0]
   1fe62:	07d0      	lsls	r0, r2, #31
   1fe64:	d501      	bpl.n	1fe6a <_printf_float+0x1c2>
   1fe66:	3302      	adds	r3, #2
   1fe68:	e7f3      	b.n	1fe52 <_printf_float+0x1aa>
   1fe6a:	2301      	movs	r3, #1
   1fe6c:	e7f1      	b.n	1fe52 <_printf_float+0x1aa>
   1fe6e:	f04f 0867 	mov.w	r8, #103	; 0x67
   1fe72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1fe74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1fe76:	4293      	cmp	r3, r2
   1fe78:	db05      	blt.n	1fe86 <_printf_float+0x1de>
   1fe7a:	6822      	ldr	r2, [r4, #0]
   1fe7c:	6123      	str	r3, [r4, #16]
   1fe7e:	07d1      	lsls	r1, r2, #31
   1fe80:	d5e8      	bpl.n	1fe54 <_printf_float+0x1ac>
   1fe82:	3301      	adds	r3, #1
   1fe84:	e7e5      	b.n	1fe52 <_printf_float+0x1aa>
   1fe86:	2b00      	cmp	r3, #0
   1fe88:	bfcc      	ite	gt
   1fe8a:	2301      	movgt	r3, #1
   1fe8c:	f1c3 0302 	rsble	r3, r3, #2
   1fe90:	4413      	add	r3, r2
   1fe92:	e7de      	b.n	1fe52 <_printf_float+0x1aa>
   1fe94:	6823      	ldr	r3, [r4, #0]
   1fe96:	055a      	lsls	r2, r3, #21
   1fe98:	d407      	bmi.n	1feaa <_printf_float+0x202>
   1fe9a:	6923      	ldr	r3, [r4, #16]
   1fe9c:	463a      	mov	r2, r7
   1fe9e:	4659      	mov	r1, fp
   1fea0:	4628      	mov	r0, r5
   1fea2:	47b0      	blx	r6
   1fea4:	3001      	adds	r0, #1
   1fea6:	d12a      	bne.n	1fefe <_printf_float+0x256>
   1fea8:	e75a      	b.n	1fd60 <_printf_float+0xb8>
   1feaa:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1feae:	f240 80dc 	bls.w	2006a <_printf_float+0x3c2>
   1feb2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1feb6:	2200      	movs	r2, #0
   1feb8:	2300      	movs	r3, #0
   1feba:	f005 fe31 	bl	25b20 <__aeabi_dcmpeq>
   1febe:	2800      	cmp	r0, #0
   1fec0:	d039      	beq.n	1ff36 <_printf_float+0x28e>
   1fec2:	2301      	movs	r3, #1
   1fec4:	4a36      	ldr	r2, [pc, #216]	; (1ffa0 <_printf_float+0x2f8>)
   1fec6:	4659      	mov	r1, fp
   1fec8:	4628      	mov	r0, r5
   1feca:	47b0      	blx	r6
   1fecc:	3001      	adds	r0, #1
   1fece:	f43f af47 	beq.w	1fd60 <_printf_float+0xb8>
   1fed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1fed4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1fed6:	429a      	cmp	r2, r3
   1fed8:	db02      	blt.n	1fee0 <_printf_float+0x238>
   1feda:	6823      	ldr	r3, [r4, #0]
   1fedc:	07d8      	lsls	r0, r3, #31
   1fede:	d50e      	bpl.n	1fefe <_printf_float+0x256>
   1fee0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1fee2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1fee4:	4659      	mov	r1, fp
   1fee6:	4628      	mov	r0, r5
   1fee8:	47b0      	blx	r6
   1feea:	3001      	adds	r0, #1
   1feec:	f43f af38 	beq.w	1fd60 <_printf_float+0xb8>
   1fef0:	2700      	movs	r7, #0
   1fef2:	f104 081a 	add.w	r8, r4, #26
   1fef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1fef8:	3b01      	subs	r3, #1
   1fefa:	429f      	cmp	r7, r3
   1fefc:	db11      	blt.n	1ff22 <_printf_float+0x27a>
   1fefe:	6823      	ldr	r3, [r4, #0]
   1ff00:	079f      	lsls	r7, r3, #30
   1ff02:	d508      	bpl.n	1ff16 <_printf_float+0x26e>
   1ff04:	2700      	movs	r7, #0
   1ff06:	f104 0819 	add.w	r8, r4, #25
   1ff0a:	68e3      	ldr	r3, [r4, #12]
   1ff0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1ff0e:	1a9b      	subs	r3, r3, r2
   1ff10:	429f      	cmp	r7, r3
   1ff12:	f2c0 80e7 	blt.w	200e4 <_printf_float+0x43c>
   1ff16:	68e0      	ldr	r0, [r4, #12]
   1ff18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1ff1a:	4298      	cmp	r0, r3
   1ff1c:	bfb8      	it	lt
   1ff1e:	4618      	movlt	r0, r3
   1ff20:	e720      	b.n	1fd64 <_printf_float+0xbc>
   1ff22:	2301      	movs	r3, #1
   1ff24:	4642      	mov	r2, r8
   1ff26:	4659      	mov	r1, fp
   1ff28:	4628      	mov	r0, r5
   1ff2a:	47b0      	blx	r6
   1ff2c:	3001      	adds	r0, #1
   1ff2e:	f43f af17 	beq.w	1fd60 <_printf_float+0xb8>
   1ff32:	3701      	adds	r7, #1
   1ff34:	e7df      	b.n	1fef6 <_printf_float+0x24e>
   1ff36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ff38:	2b00      	cmp	r3, #0
   1ff3a:	dc33      	bgt.n	1ffa4 <_printf_float+0x2fc>
   1ff3c:	2301      	movs	r3, #1
   1ff3e:	4a18      	ldr	r2, [pc, #96]	; (1ffa0 <_printf_float+0x2f8>)
   1ff40:	4659      	mov	r1, fp
   1ff42:	4628      	mov	r0, r5
   1ff44:	47b0      	blx	r6
   1ff46:	3001      	adds	r0, #1
   1ff48:	f43f af0a 	beq.w	1fd60 <_printf_float+0xb8>
   1ff4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ff4e:	b923      	cbnz	r3, 1ff5a <_printf_float+0x2b2>
   1ff50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ff52:	b913      	cbnz	r3, 1ff5a <_printf_float+0x2b2>
   1ff54:	6823      	ldr	r3, [r4, #0]
   1ff56:	07d9      	lsls	r1, r3, #31
   1ff58:	d5d1      	bpl.n	1fefe <_printf_float+0x256>
   1ff5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ff5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1ff5e:	4659      	mov	r1, fp
   1ff60:	4628      	mov	r0, r5
   1ff62:	47b0      	blx	r6
   1ff64:	3001      	adds	r0, #1
   1ff66:	f43f aefb 	beq.w	1fd60 <_printf_float+0xb8>
   1ff6a:	f04f 0800 	mov.w	r8, #0
   1ff6e:	f104 091a 	add.w	r9, r4, #26
   1ff72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ff74:	425b      	negs	r3, r3
   1ff76:	4598      	cmp	r8, r3
   1ff78:	db01      	blt.n	1ff7e <_printf_float+0x2d6>
   1ff7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ff7c:	e78e      	b.n	1fe9c <_printf_float+0x1f4>
   1ff7e:	2301      	movs	r3, #1
   1ff80:	464a      	mov	r2, r9
   1ff82:	4659      	mov	r1, fp
   1ff84:	4628      	mov	r0, r5
   1ff86:	47b0      	blx	r6
   1ff88:	3001      	adds	r0, #1
   1ff8a:	f43f aee9 	beq.w	1fd60 <_printf_float+0xb8>
   1ff8e:	f108 0801 	add.w	r8, r8, #1
   1ff92:	e7ee      	b.n	1ff72 <_printf_float+0x2ca>
   1ff94:	7fefffff 	.word	0x7fefffff
   1ff98:	00028e34 	.word	0x00028e34
   1ff9c:	00028e38 	.word	0x00028e38
   1ffa0:	00025eb2 	.word	0x00025eb2
   1ffa4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1ffa6:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1ffa8:	429a      	cmp	r2, r3
   1ffaa:	bfa8      	it	ge
   1ffac:	461a      	movge	r2, r3
   1ffae:	2a00      	cmp	r2, #0
   1ffb0:	4690      	mov	r8, r2
   1ffb2:	dc36      	bgt.n	20022 <_printf_float+0x37a>
   1ffb4:	f04f 0a00 	mov.w	sl, #0
   1ffb8:	f104 031a 	add.w	r3, r4, #26
   1ffbc:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1ffc0:	930b      	str	r3, [sp, #44]	; 0x2c
   1ffc2:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   1ffc6:	eba9 0308 	sub.w	r3, r9, r8
   1ffca:	459a      	cmp	sl, r3
   1ffcc:	db31      	blt.n	20032 <_printf_float+0x38a>
   1ffce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ffd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1ffd2:	429a      	cmp	r2, r3
   1ffd4:	db38      	blt.n	20048 <_printf_float+0x3a0>
   1ffd6:	6823      	ldr	r3, [r4, #0]
   1ffd8:	07da      	lsls	r2, r3, #31
   1ffda:	d435      	bmi.n	20048 <_printf_float+0x3a0>
   1ffdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1ffde:	990d      	ldr	r1, [sp, #52]	; 0x34
   1ffe0:	eba3 0209 	sub.w	r2, r3, r9
   1ffe4:	eba3 0801 	sub.w	r8, r3, r1
   1ffe8:	4590      	cmp	r8, r2
   1ffea:	bfa8      	it	ge
   1ffec:	4690      	movge	r8, r2
   1ffee:	f1b8 0f00 	cmp.w	r8, #0
   1fff2:	dc31      	bgt.n	20058 <_printf_float+0x3b0>
   1fff4:	2700      	movs	r7, #0
   1fff6:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1fffa:	f104 091a 	add.w	r9, r4, #26
   1fffe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   20000:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   20002:	1a9b      	subs	r3, r3, r2
   20004:	eba3 0308 	sub.w	r3, r3, r8
   20008:	429f      	cmp	r7, r3
   2000a:	f6bf af78 	bge.w	1fefe <_printf_float+0x256>
   2000e:	2301      	movs	r3, #1
   20010:	464a      	mov	r2, r9
   20012:	4659      	mov	r1, fp
   20014:	4628      	mov	r0, r5
   20016:	47b0      	blx	r6
   20018:	3001      	adds	r0, #1
   2001a:	f43f aea1 	beq.w	1fd60 <_printf_float+0xb8>
   2001e:	3701      	adds	r7, #1
   20020:	e7ed      	b.n	1fffe <_printf_float+0x356>
   20022:	4613      	mov	r3, r2
   20024:	4659      	mov	r1, fp
   20026:	463a      	mov	r2, r7
   20028:	4628      	mov	r0, r5
   2002a:	47b0      	blx	r6
   2002c:	3001      	adds	r0, #1
   2002e:	d1c1      	bne.n	1ffb4 <_printf_float+0x30c>
   20030:	e696      	b.n	1fd60 <_printf_float+0xb8>
   20032:	2301      	movs	r3, #1
   20034:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   20036:	4659      	mov	r1, fp
   20038:	4628      	mov	r0, r5
   2003a:	47b0      	blx	r6
   2003c:	3001      	adds	r0, #1
   2003e:	f43f ae8f 	beq.w	1fd60 <_printf_float+0xb8>
   20042:	f10a 0a01 	add.w	sl, sl, #1
   20046:	e7bc      	b.n	1ffc2 <_printf_float+0x31a>
   20048:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2004a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   2004c:	4659      	mov	r1, fp
   2004e:	4628      	mov	r0, r5
   20050:	47b0      	blx	r6
   20052:	3001      	adds	r0, #1
   20054:	d1c2      	bne.n	1ffdc <_printf_float+0x334>
   20056:	e683      	b.n	1fd60 <_printf_float+0xb8>
   20058:	4643      	mov	r3, r8
   2005a:	eb07 0209 	add.w	r2, r7, r9
   2005e:	4659      	mov	r1, fp
   20060:	4628      	mov	r0, r5
   20062:	47b0      	blx	r6
   20064:	3001      	adds	r0, #1
   20066:	d1c5      	bne.n	1fff4 <_printf_float+0x34c>
   20068:	e67a      	b.n	1fd60 <_printf_float+0xb8>
   2006a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   2006c:	2a01      	cmp	r2, #1
   2006e:	dc01      	bgt.n	20074 <_printf_float+0x3cc>
   20070:	07db      	lsls	r3, r3, #31
   20072:	d534      	bpl.n	200de <_printf_float+0x436>
   20074:	2301      	movs	r3, #1
   20076:	463a      	mov	r2, r7
   20078:	4659      	mov	r1, fp
   2007a:	4628      	mov	r0, r5
   2007c:	47b0      	blx	r6
   2007e:	3001      	adds	r0, #1
   20080:	f43f ae6e 	beq.w	1fd60 <_printf_float+0xb8>
   20084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   20086:	9a09      	ldr	r2, [sp, #36]	; 0x24
   20088:	4659      	mov	r1, fp
   2008a:	4628      	mov	r0, r5
   2008c:	47b0      	blx	r6
   2008e:	3001      	adds	r0, #1
   20090:	f43f ae66 	beq.w	1fd60 <_printf_float+0xb8>
   20094:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   20098:	2200      	movs	r2, #0
   2009a:	2300      	movs	r3, #0
   2009c:	f005 fd40 	bl	25b20 <__aeabi_dcmpeq>
   200a0:	b150      	cbz	r0, 200b8 <_printf_float+0x410>
   200a2:	2700      	movs	r7, #0
   200a4:	f104 081a 	add.w	r8, r4, #26
   200a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   200aa:	3b01      	subs	r3, #1
   200ac:	429f      	cmp	r7, r3
   200ae:	db0c      	blt.n	200ca <_printf_float+0x422>
   200b0:	464b      	mov	r3, r9
   200b2:	f104 0250 	add.w	r2, r4, #80	; 0x50
   200b6:	e6f2      	b.n	1fe9e <_printf_float+0x1f6>
   200b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   200ba:	1c7a      	adds	r2, r7, #1
   200bc:	3b01      	subs	r3, #1
   200be:	4659      	mov	r1, fp
   200c0:	4628      	mov	r0, r5
   200c2:	47b0      	blx	r6
   200c4:	3001      	adds	r0, #1
   200c6:	d1f3      	bne.n	200b0 <_printf_float+0x408>
   200c8:	e64a      	b.n	1fd60 <_printf_float+0xb8>
   200ca:	2301      	movs	r3, #1
   200cc:	4642      	mov	r2, r8
   200ce:	4659      	mov	r1, fp
   200d0:	4628      	mov	r0, r5
   200d2:	47b0      	blx	r6
   200d4:	3001      	adds	r0, #1
   200d6:	f43f ae43 	beq.w	1fd60 <_printf_float+0xb8>
   200da:	3701      	adds	r7, #1
   200dc:	e7e4      	b.n	200a8 <_printf_float+0x400>
   200de:	2301      	movs	r3, #1
   200e0:	463a      	mov	r2, r7
   200e2:	e7ec      	b.n	200be <_printf_float+0x416>
   200e4:	2301      	movs	r3, #1
   200e6:	4642      	mov	r2, r8
   200e8:	4659      	mov	r1, fp
   200ea:	4628      	mov	r0, r5
   200ec:	47b0      	blx	r6
   200ee:	3001      	adds	r0, #1
   200f0:	f43f ae36 	beq.w	1fd60 <_printf_float+0xb8>
   200f4:	3701      	adds	r7, #1
   200f6:	e708      	b.n	1ff0a <_printf_float+0x262>
   200f8:	463a      	mov	r2, r7
   200fa:	464b      	mov	r3, r9
   200fc:	4638      	mov	r0, r7
   200fe:	4649      	mov	r1, r9
   20100:	f005 fd40 	bl	25b84 <__aeabi_dcmpun>
   20104:	2800      	cmp	r0, #0
   20106:	f43f ae30 	beq.w	1fd6a <_printf_float+0xc2>
   2010a:	4b01      	ldr	r3, [pc, #4]	; (20110 <_printf_float+0x468>)
   2010c:	4f01      	ldr	r7, [pc, #4]	; (20114 <_printf_float+0x46c>)
   2010e:	e612      	b.n	1fd36 <_printf_float+0x8e>
   20110:	00028e3c 	.word	0x00028e3c
   20114:	00028e40 	.word	0x00028e40

00020118 <_printf_common>:
_printf_common():
   20118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2011c:	4691      	mov	r9, r2
   2011e:	461f      	mov	r7, r3
   20120:	688a      	ldr	r2, [r1, #8]
   20122:	690b      	ldr	r3, [r1, #16]
   20124:	4606      	mov	r6, r0
   20126:	4293      	cmp	r3, r2
   20128:	bfb8      	it	lt
   2012a:	4613      	movlt	r3, r2
   2012c:	f8c9 3000 	str.w	r3, [r9]
   20130:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   20134:	460c      	mov	r4, r1
   20136:	f8dd 8020 	ldr.w	r8, [sp, #32]
   2013a:	b112      	cbz	r2, 20142 <_printf_common+0x2a>
   2013c:	3301      	adds	r3, #1
   2013e:	f8c9 3000 	str.w	r3, [r9]
   20142:	6823      	ldr	r3, [r4, #0]
   20144:	0699      	lsls	r1, r3, #26
   20146:	bf42      	ittt	mi
   20148:	f8d9 3000 	ldrmi.w	r3, [r9]
   2014c:	3302      	addmi	r3, #2
   2014e:	f8c9 3000 	strmi.w	r3, [r9]
   20152:	6825      	ldr	r5, [r4, #0]
   20154:	f015 0506 	ands.w	r5, r5, #6
   20158:	d107      	bne.n	2016a <_printf_common+0x52>
   2015a:	f104 0a19 	add.w	sl, r4, #25
   2015e:	68e3      	ldr	r3, [r4, #12]
   20160:	f8d9 2000 	ldr.w	r2, [r9]
   20164:	1a9b      	subs	r3, r3, r2
   20166:	429d      	cmp	r5, r3
   20168:	db2a      	blt.n	201c0 <_printf_common+0xa8>
   2016a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   2016e:	6822      	ldr	r2, [r4, #0]
   20170:	3300      	adds	r3, #0
   20172:	bf18      	it	ne
   20174:	2301      	movne	r3, #1
   20176:	0692      	lsls	r2, r2, #26
   20178:	d42f      	bmi.n	201da <_printf_common+0xc2>
   2017a:	f104 0243 	add.w	r2, r4, #67	; 0x43
   2017e:	4639      	mov	r1, r7
   20180:	4630      	mov	r0, r6
   20182:	47c0      	blx	r8
   20184:	3001      	adds	r0, #1
   20186:	d022      	beq.n	201ce <_printf_common+0xb6>
   20188:	6823      	ldr	r3, [r4, #0]
   2018a:	68e5      	ldr	r5, [r4, #12]
   2018c:	f003 0306 	and.w	r3, r3, #6
   20190:	2b04      	cmp	r3, #4
   20192:	bf18      	it	ne
   20194:	2500      	movne	r5, #0
   20196:	f8d9 2000 	ldr.w	r2, [r9]
   2019a:	f04f 0900 	mov.w	r9, #0
   2019e:	bf08      	it	eq
   201a0:	1aad      	subeq	r5, r5, r2
   201a2:	68a3      	ldr	r3, [r4, #8]
   201a4:	6922      	ldr	r2, [r4, #16]
   201a6:	bf08      	it	eq
   201a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   201ac:	4293      	cmp	r3, r2
   201ae:	bfc4      	itt	gt
   201b0:	1a9b      	subgt	r3, r3, r2
   201b2:	18ed      	addgt	r5, r5, r3
   201b4:	341a      	adds	r4, #26
   201b6:	454d      	cmp	r5, r9
   201b8:	d11b      	bne.n	201f2 <_printf_common+0xda>
   201ba:	2000      	movs	r0, #0
   201bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   201c0:	2301      	movs	r3, #1
   201c2:	4652      	mov	r2, sl
   201c4:	4639      	mov	r1, r7
   201c6:	4630      	mov	r0, r6
   201c8:	47c0      	blx	r8
   201ca:	3001      	adds	r0, #1
   201cc:	d103      	bne.n	201d6 <_printf_common+0xbe>
   201ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   201d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   201d6:	3501      	adds	r5, #1
   201d8:	e7c1      	b.n	2015e <_printf_common+0x46>
   201da:	2030      	movs	r0, #48	; 0x30
   201dc:	18e1      	adds	r1, r4, r3
   201de:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   201e2:	1c5a      	adds	r2, r3, #1
   201e4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   201e8:	4422      	add	r2, r4
   201ea:	3302      	adds	r3, #2
   201ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   201f0:	e7c3      	b.n	2017a <_printf_common+0x62>
   201f2:	2301      	movs	r3, #1
   201f4:	4622      	mov	r2, r4
   201f6:	4639      	mov	r1, r7
   201f8:	4630      	mov	r0, r6
   201fa:	47c0      	blx	r8
   201fc:	3001      	adds	r0, #1
   201fe:	d0e6      	beq.n	201ce <_printf_common+0xb6>
   20200:	f109 0901 	add.w	r9, r9, #1
   20204:	e7d7      	b.n	201b6 <_printf_common+0x9e>
   20206:	Address 0x0000000000020206 is out of bounds.


00020208 <_printf_i>:
_printf_i():
   20208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2020c:	4617      	mov	r7, r2
   2020e:	7e0a      	ldrb	r2, [r1, #24]
   20210:	b085      	sub	sp, #20
   20212:	2a6e      	cmp	r2, #110	; 0x6e
   20214:	4698      	mov	r8, r3
   20216:	4606      	mov	r6, r0
   20218:	460c      	mov	r4, r1
   2021a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   2021c:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   20220:	f000 80bc 	beq.w	2039c <_printf_i+0x194>
   20224:	d81a      	bhi.n	2025c <_printf_i+0x54>
   20226:	2a63      	cmp	r2, #99	; 0x63
   20228:	d02e      	beq.n	20288 <_printf_i+0x80>
   2022a:	d80a      	bhi.n	20242 <_printf_i+0x3a>
   2022c:	2a00      	cmp	r2, #0
   2022e:	f000 80c8 	beq.w	203c2 <_printf_i+0x1ba>
   20232:	2a58      	cmp	r2, #88	; 0x58
   20234:	f000 808a 	beq.w	2034c <_printf_i+0x144>
   20238:	f104 0542 	add.w	r5, r4, #66	; 0x42
   2023c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   20240:	e02a      	b.n	20298 <_printf_i+0x90>
   20242:	2a64      	cmp	r2, #100	; 0x64
   20244:	d001      	beq.n	2024a <_printf_i+0x42>
   20246:	2a69      	cmp	r2, #105	; 0x69
   20248:	d1f6      	bne.n	20238 <_printf_i+0x30>
   2024a:	6821      	ldr	r1, [r4, #0]
   2024c:	681a      	ldr	r2, [r3, #0]
   2024e:	f011 0f80 	tst.w	r1, #128	; 0x80
   20252:	d023      	beq.n	2029c <_printf_i+0x94>
   20254:	1d11      	adds	r1, r2, #4
   20256:	6019      	str	r1, [r3, #0]
   20258:	6813      	ldr	r3, [r2, #0]
   2025a:	e027      	b.n	202ac <_printf_i+0xa4>
   2025c:	2a73      	cmp	r2, #115	; 0x73
   2025e:	f000 80b4 	beq.w	203ca <_printf_i+0x1c2>
   20262:	d808      	bhi.n	20276 <_printf_i+0x6e>
   20264:	2a6f      	cmp	r2, #111	; 0x6f
   20266:	d02a      	beq.n	202be <_printf_i+0xb6>
   20268:	2a70      	cmp	r2, #112	; 0x70
   2026a:	d1e5      	bne.n	20238 <_printf_i+0x30>
   2026c:	680a      	ldr	r2, [r1, #0]
   2026e:	f042 0220 	orr.w	r2, r2, #32
   20272:	600a      	str	r2, [r1, #0]
   20274:	e003      	b.n	2027e <_printf_i+0x76>
   20276:	2a75      	cmp	r2, #117	; 0x75
   20278:	d021      	beq.n	202be <_printf_i+0xb6>
   2027a:	2a78      	cmp	r2, #120	; 0x78
   2027c:	d1dc      	bne.n	20238 <_printf_i+0x30>
   2027e:	2278      	movs	r2, #120	; 0x78
   20280:	496f      	ldr	r1, [pc, #444]	; (20440 <_printf_i+0x238>)
   20282:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   20286:	e064      	b.n	20352 <_printf_i+0x14a>
   20288:	681a      	ldr	r2, [r3, #0]
   2028a:	f101 0542 	add.w	r5, r1, #66	; 0x42
   2028e:	1d11      	adds	r1, r2, #4
   20290:	6019      	str	r1, [r3, #0]
   20292:	6813      	ldr	r3, [r2, #0]
   20294:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   20298:	2301      	movs	r3, #1
   2029a:	e0a3      	b.n	203e4 <_printf_i+0x1dc>
   2029c:	f011 0f40 	tst.w	r1, #64	; 0x40
   202a0:	f102 0104 	add.w	r1, r2, #4
   202a4:	6019      	str	r1, [r3, #0]
   202a6:	d0d7      	beq.n	20258 <_printf_i+0x50>
   202a8:	f9b2 3000 	ldrsh.w	r3, [r2]
   202ac:	2b00      	cmp	r3, #0
   202ae:	da03      	bge.n	202b8 <_printf_i+0xb0>
   202b0:	222d      	movs	r2, #45	; 0x2d
   202b2:	425b      	negs	r3, r3
   202b4:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   202b8:	4962      	ldr	r1, [pc, #392]	; (20444 <_printf_i+0x23c>)
   202ba:	220a      	movs	r2, #10
   202bc:	e017      	b.n	202ee <_printf_i+0xe6>
   202be:	6820      	ldr	r0, [r4, #0]
   202c0:	6819      	ldr	r1, [r3, #0]
   202c2:	f010 0f80 	tst.w	r0, #128	; 0x80
   202c6:	d003      	beq.n	202d0 <_printf_i+0xc8>
   202c8:	1d08      	adds	r0, r1, #4
   202ca:	6018      	str	r0, [r3, #0]
   202cc:	680b      	ldr	r3, [r1, #0]
   202ce:	e006      	b.n	202de <_printf_i+0xd6>
   202d0:	f010 0f40 	tst.w	r0, #64	; 0x40
   202d4:	f101 0004 	add.w	r0, r1, #4
   202d8:	6018      	str	r0, [r3, #0]
   202da:	d0f7      	beq.n	202cc <_printf_i+0xc4>
   202dc:	880b      	ldrh	r3, [r1, #0]
   202de:	2a6f      	cmp	r2, #111	; 0x6f
   202e0:	bf14      	ite	ne
   202e2:	220a      	movne	r2, #10
   202e4:	2208      	moveq	r2, #8
   202e6:	4957      	ldr	r1, [pc, #348]	; (20444 <_printf_i+0x23c>)
   202e8:	2000      	movs	r0, #0
   202ea:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   202ee:	6865      	ldr	r5, [r4, #4]
   202f0:	2d00      	cmp	r5, #0
   202f2:	60a5      	str	r5, [r4, #8]
   202f4:	f2c0 809c 	blt.w	20430 <_printf_i+0x228>
   202f8:	6820      	ldr	r0, [r4, #0]
   202fa:	f020 0004 	bic.w	r0, r0, #4
   202fe:	6020      	str	r0, [r4, #0]
   20300:	2b00      	cmp	r3, #0
   20302:	d13f      	bne.n	20384 <_printf_i+0x17c>
   20304:	2d00      	cmp	r5, #0
   20306:	f040 8095 	bne.w	20434 <_printf_i+0x22c>
   2030a:	4675      	mov	r5, lr
   2030c:	2a08      	cmp	r2, #8
   2030e:	d10b      	bne.n	20328 <_printf_i+0x120>
   20310:	6823      	ldr	r3, [r4, #0]
   20312:	07da      	lsls	r2, r3, #31
   20314:	d508      	bpl.n	20328 <_printf_i+0x120>
   20316:	6923      	ldr	r3, [r4, #16]
   20318:	6862      	ldr	r2, [r4, #4]
   2031a:	429a      	cmp	r2, r3
   2031c:	bfde      	ittt	le
   2031e:	2330      	movle	r3, #48	; 0x30
   20320:	f805 3c01 	strble.w	r3, [r5, #-1]
   20324:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   20328:	ebae 0305 	sub.w	r3, lr, r5
   2032c:	6123      	str	r3, [r4, #16]
   2032e:	f8cd 8000 	str.w	r8, [sp]
   20332:	463b      	mov	r3, r7
   20334:	aa03      	add	r2, sp, #12
   20336:	4621      	mov	r1, r4
   20338:	4630      	mov	r0, r6
   2033a:	f7ff feed 	bl	20118 <_printf_common>
   2033e:	3001      	adds	r0, #1
   20340:	d155      	bne.n	203ee <_printf_i+0x1e6>
   20342:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20346:	b005      	add	sp, #20
   20348:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2034c:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   20350:	493c      	ldr	r1, [pc, #240]	; (20444 <_printf_i+0x23c>)
   20352:	6822      	ldr	r2, [r4, #0]
   20354:	6818      	ldr	r0, [r3, #0]
   20356:	f012 0f80 	tst.w	r2, #128	; 0x80
   2035a:	f100 0504 	add.w	r5, r0, #4
   2035e:	601d      	str	r5, [r3, #0]
   20360:	d001      	beq.n	20366 <_printf_i+0x15e>
   20362:	6803      	ldr	r3, [r0, #0]
   20364:	e002      	b.n	2036c <_printf_i+0x164>
   20366:	0655      	lsls	r5, r2, #25
   20368:	d5fb      	bpl.n	20362 <_printf_i+0x15a>
   2036a:	8803      	ldrh	r3, [r0, #0]
   2036c:	07d0      	lsls	r0, r2, #31
   2036e:	bf44      	itt	mi
   20370:	f042 0220 	orrmi.w	r2, r2, #32
   20374:	6022      	strmi	r2, [r4, #0]
   20376:	b91b      	cbnz	r3, 20380 <_printf_i+0x178>
   20378:	6822      	ldr	r2, [r4, #0]
   2037a:	f022 0220 	bic.w	r2, r2, #32
   2037e:	6022      	str	r2, [r4, #0]
   20380:	2210      	movs	r2, #16
   20382:	e7b1      	b.n	202e8 <_printf_i+0xe0>
   20384:	4675      	mov	r5, lr
   20386:	fbb3 f0f2 	udiv	r0, r3, r2
   2038a:	fb02 3310 	mls	r3, r2, r0, r3
   2038e:	5ccb      	ldrb	r3, [r1, r3]
   20390:	f805 3d01 	strb.w	r3, [r5, #-1]!
   20394:	4603      	mov	r3, r0
   20396:	2800      	cmp	r0, #0
   20398:	d1f5      	bne.n	20386 <_printf_i+0x17e>
   2039a:	e7b7      	b.n	2030c <_printf_i+0x104>
   2039c:	6808      	ldr	r0, [r1, #0]
   2039e:	681a      	ldr	r2, [r3, #0]
   203a0:	f010 0f80 	tst.w	r0, #128	; 0x80
   203a4:	6949      	ldr	r1, [r1, #20]
   203a6:	d004      	beq.n	203b2 <_printf_i+0x1aa>
   203a8:	1d10      	adds	r0, r2, #4
   203aa:	6018      	str	r0, [r3, #0]
   203ac:	6813      	ldr	r3, [r2, #0]
   203ae:	6019      	str	r1, [r3, #0]
   203b0:	e007      	b.n	203c2 <_printf_i+0x1ba>
   203b2:	f010 0f40 	tst.w	r0, #64	; 0x40
   203b6:	f102 0004 	add.w	r0, r2, #4
   203ba:	6018      	str	r0, [r3, #0]
   203bc:	6813      	ldr	r3, [r2, #0]
   203be:	d0f6      	beq.n	203ae <_printf_i+0x1a6>
   203c0:	8019      	strh	r1, [r3, #0]
   203c2:	2300      	movs	r3, #0
   203c4:	4675      	mov	r5, lr
   203c6:	6123      	str	r3, [r4, #16]
   203c8:	e7b1      	b.n	2032e <_printf_i+0x126>
   203ca:	681a      	ldr	r2, [r3, #0]
   203cc:	1d11      	adds	r1, r2, #4
   203ce:	6019      	str	r1, [r3, #0]
   203d0:	6815      	ldr	r5, [r2, #0]
   203d2:	2100      	movs	r1, #0
   203d4:	6862      	ldr	r2, [r4, #4]
   203d6:	4628      	mov	r0, r5
   203d8:	f7ff f83a 	bl	1f450 <memchr>
   203dc:	b108      	cbz	r0, 203e2 <_printf_i+0x1da>
   203de:	1b40      	subs	r0, r0, r5
   203e0:	6060      	str	r0, [r4, #4]
   203e2:	6863      	ldr	r3, [r4, #4]
   203e4:	6123      	str	r3, [r4, #16]
   203e6:	2300      	movs	r3, #0
   203e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   203ec:	e79f      	b.n	2032e <_printf_i+0x126>
   203ee:	6923      	ldr	r3, [r4, #16]
   203f0:	462a      	mov	r2, r5
   203f2:	4639      	mov	r1, r7
   203f4:	4630      	mov	r0, r6
   203f6:	47c0      	blx	r8
   203f8:	3001      	adds	r0, #1
   203fa:	d0a2      	beq.n	20342 <_printf_i+0x13a>
   203fc:	6823      	ldr	r3, [r4, #0]
   203fe:	079b      	lsls	r3, r3, #30
   20400:	d507      	bpl.n	20412 <_printf_i+0x20a>
   20402:	2500      	movs	r5, #0
   20404:	f104 0919 	add.w	r9, r4, #25
   20408:	68e3      	ldr	r3, [r4, #12]
   2040a:	9a03      	ldr	r2, [sp, #12]
   2040c:	1a9b      	subs	r3, r3, r2
   2040e:	429d      	cmp	r5, r3
   20410:	db05      	blt.n	2041e <_printf_i+0x216>
   20412:	68e0      	ldr	r0, [r4, #12]
   20414:	9b03      	ldr	r3, [sp, #12]
   20416:	4298      	cmp	r0, r3
   20418:	bfb8      	it	lt
   2041a:	4618      	movlt	r0, r3
   2041c:	e793      	b.n	20346 <_printf_i+0x13e>
   2041e:	2301      	movs	r3, #1
   20420:	464a      	mov	r2, r9
   20422:	4639      	mov	r1, r7
   20424:	4630      	mov	r0, r6
   20426:	47c0      	blx	r8
   20428:	3001      	adds	r0, #1
   2042a:	d08a      	beq.n	20342 <_printf_i+0x13a>
   2042c:	3501      	adds	r5, #1
   2042e:	e7eb      	b.n	20408 <_printf_i+0x200>
   20430:	2b00      	cmp	r3, #0
   20432:	d1a7      	bne.n	20384 <_printf_i+0x17c>
   20434:	780b      	ldrb	r3, [r1, #0]
   20436:	f104 0542 	add.w	r5, r4, #66	; 0x42
   2043a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   2043e:	e765      	b.n	2030c <_printf_i+0x104>
   20440:	00028e55 	.word	0x00028e55
   20444:	00028e44 	.word	0x00028e44

00020448 <_scanf_float>:
_scanf_float():
   20448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2044c:	469a      	mov	sl, r3
   2044e:	688b      	ldr	r3, [r1, #8]
   20450:	4616      	mov	r6, r2
   20452:	1e5a      	subs	r2, r3, #1
   20454:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   20458:	bf88      	it	hi
   2045a:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   2045e:	b087      	sub	sp, #28
   20460:	bf85      	ittet	hi
   20462:	189b      	addhi	r3, r3, r2
   20464:	9301      	strhi	r3, [sp, #4]
   20466:	2300      	movls	r3, #0
   20468:	f240 135d 	movwhi	r3, #349	; 0x15d
   2046c:	4688      	mov	r8, r1
   2046e:	f04f 0b00 	mov.w	fp, #0
   20472:	bf8c      	ite	hi
   20474:	608b      	strhi	r3, [r1, #8]
   20476:	9301      	strls	r3, [sp, #4]
   20478:	680b      	ldr	r3, [r1, #0]
   2047a:	4607      	mov	r7, r0
   2047c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   20480:	f848 3b1c 	str.w	r3, [r8], #28
   20484:	460c      	mov	r4, r1
   20486:	4645      	mov	r5, r8
   20488:	465a      	mov	r2, fp
   2048a:	46d9      	mov	r9, fp
   2048c:	f8cd b010 	str.w	fp, [sp, #16]
   20490:	f8cd b00c 	str.w	fp, [sp, #12]
   20494:	f8cd b008 	str.w	fp, [sp, #8]
   20498:	68a1      	ldr	r1, [r4, #8]
   2049a:	b181      	cbz	r1, 204be <_scanf_float+0x76>
   2049c:	6833      	ldr	r3, [r6, #0]
   2049e:	781b      	ldrb	r3, [r3, #0]
   204a0:	2b49      	cmp	r3, #73	; 0x49
   204a2:	d071      	beq.n	20588 <_scanf_float+0x140>
   204a4:	d84d      	bhi.n	20542 <_scanf_float+0xfa>
   204a6:	2b39      	cmp	r3, #57	; 0x39
   204a8:	d840      	bhi.n	2052c <_scanf_float+0xe4>
   204aa:	2b31      	cmp	r3, #49	; 0x31
   204ac:	f080 8088 	bcs.w	205c0 <_scanf_float+0x178>
   204b0:	2b2d      	cmp	r3, #45	; 0x2d
   204b2:	f000 8090 	beq.w	205d6 <_scanf_float+0x18e>
   204b6:	d815      	bhi.n	204e4 <_scanf_float+0x9c>
   204b8:	2b2b      	cmp	r3, #43	; 0x2b
   204ba:	f000 808c 	beq.w	205d6 <_scanf_float+0x18e>
   204be:	f1b9 0f00 	cmp.w	r9, #0
   204c2:	d003      	beq.n	204cc <_scanf_float+0x84>
   204c4:	6823      	ldr	r3, [r4, #0]
   204c6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   204ca:	6023      	str	r3, [r4, #0]
   204cc:	3a01      	subs	r2, #1
   204ce:	2a01      	cmp	r2, #1
   204d0:	f200 80ea 	bhi.w	206a8 <_scanf_float+0x260>
   204d4:	4545      	cmp	r5, r8
   204d6:	f200 80dc 	bhi.w	20692 <_scanf_float+0x24a>
   204da:	2601      	movs	r6, #1
   204dc:	4630      	mov	r0, r6
   204de:	b007      	add	sp, #28
   204e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204e4:	2b2e      	cmp	r3, #46	; 0x2e
   204e6:	f000 809f 	beq.w	20628 <_scanf_float+0x1e0>
   204ea:	2b30      	cmp	r3, #48	; 0x30
   204ec:	d1e7      	bne.n	204be <_scanf_float+0x76>
   204ee:	6820      	ldr	r0, [r4, #0]
   204f0:	f410 7f80 	tst.w	r0, #256	; 0x100
   204f4:	d064      	beq.n	205c0 <_scanf_float+0x178>
   204f6:	9b01      	ldr	r3, [sp, #4]
   204f8:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   204fc:	6020      	str	r0, [r4, #0]
   204fe:	f109 0901 	add.w	r9, r9, #1
   20502:	b11b      	cbz	r3, 2050c <_scanf_float+0xc4>
   20504:	3b01      	subs	r3, #1
   20506:	3101      	adds	r1, #1
   20508:	9301      	str	r3, [sp, #4]
   2050a:	60a1      	str	r1, [r4, #8]
   2050c:	68a3      	ldr	r3, [r4, #8]
   2050e:	3b01      	subs	r3, #1
   20510:	60a3      	str	r3, [r4, #8]
   20512:	6923      	ldr	r3, [r4, #16]
   20514:	3301      	adds	r3, #1
   20516:	6123      	str	r3, [r4, #16]
   20518:	6873      	ldr	r3, [r6, #4]
   2051a:	3b01      	subs	r3, #1
   2051c:	2b00      	cmp	r3, #0
   2051e:	6073      	str	r3, [r6, #4]
   20520:	f340 80ac 	ble.w	2067c <_scanf_float+0x234>
   20524:	6833      	ldr	r3, [r6, #0]
   20526:	3301      	adds	r3, #1
   20528:	6033      	str	r3, [r6, #0]
   2052a:	e7b5      	b.n	20498 <_scanf_float+0x50>
   2052c:	2b45      	cmp	r3, #69	; 0x45
   2052e:	f000 8085 	beq.w	2063c <_scanf_float+0x1f4>
   20532:	2b46      	cmp	r3, #70	; 0x46
   20534:	d06a      	beq.n	2060c <_scanf_float+0x1c4>
   20536:	2b41      	cmp	r3, #65	; 0x41
   20538:	d1c1      	bne.n	204be <_scanf_float+0x76>
   2053a:	2a01      	cmp	r2, #1
   2053c:	d1bf      	bne.n	204be <_scanf_float+0x76>
   2053e:	2202      	movs	r2, #2
   20540:	e046      	b.n	205d0 <_scanf_float+0x188>
   20542:	2b65      	cmp	r3, #101	; 0x65
   20544:	d07a      	beq.n	2063c <_scanf_float+0x1f4>
   20546:	d818      	bhi.n	2057a <_scanf_float+0x132>
   20548:	2b54      	cmp	r3, #84	; 0x54
   2054a:	d066      	beq.n	2061a <_scanf_float+0x1d2>
   2054c:	d811      	bhi.n	20572 <_scanf_float+0x12a>
   2054e:	2b4e      	cmp	r3, #78	; 0x4e
   20550:	d1b5      	bne.n	204be <_scanf_float+0x76>
   20552:	2a00      	cmp	r2, #0
   20554:	d146      	bne.n	205e4 <_scanf_float+0x19c>
   20556:	f1b9 0f00 	cmp.w	r9, #0
   2055a:	d145      	bne.n	205e8 <_scanf_float+0x1a0>
   2055c:	6821      	ldr	r1, [r4, #0]
   2055e:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   20562:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   20566:	d13f      	bne.n	205e8 <_scanf_float+0x1a0>
   20568:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   2056c:	6021      	str	r1, [r4, #0]
   2056e:	2201      	movs	r2, #1
   20570:	e02e      	b.n	205d0 <_scanf_float+0x188>
   20572:	2b59      	cmp	r3, #89	; 0x59
   20574:	d01e      	beq.n	205b4 <_scanf_float+0x16c>
   20576:	2b61      	cmp	r3, #97	; 0x61
   20578:	e7de      	b.n	20538 <_scanf_float+0xf0>
   2057a:	2b6e      	cmp	r3, #110	; 0x6e
   2057c:	d0e9      	beq.n	20552 <_scanf_float+0x10a>
   2057e:	d815      	bhi.n	205ac <_scanf_float+0x164>
   20580:	2b66      	cmp	r3, #102	; 0x66
   20582:	d043      	beq.n	2060c <_scanf_float+0x1c4>
   20584:	2b69      	cmp	r3, #105	; 0x69
   20586:	d19a      	bne.n	204be <_scanf_float+0x76>
   20588:	f1bb 0f00 	cmp.w	fp, #0
   2058c:	d138      	bne.n	20600 <_scanf_float+0x1b8>
   2058e:	f1b9 0f00 	cmp.w	r9, #0
   20592:	d197      	bne.n	204c4 <_scanf_float+0x7c>
   20594:	6821      	ldr	r1, [r4, #0]
   20596:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   2059a:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   2059e:	d195      	bne.n	204cc <_scanf_float+0x84>
   205a0:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   205a4:	6021      	str	r1, [r4, #0]
   205a6:	f04f 0b01 	mov.w	fp, #1
   205aa:	e011      	b.n	205d0 <_scanf_float+0x188>
   205ac:	2b74      	cmp	r3, #116	; 0x74
   205ae:	d034      	beq.n	2061a <_scanf_float+0x1d2>
   205b0:	2b79      	cmp	r3, #121	; 0x79
   205b2:	d184      	bne.n	204be <_scanf_float+0x76>
   205b4:	f1bb 0f07 	cmp.w	fp, #7
   205b8:	d181      	bne.n	204be <_scanf_float+0x76>
   205ba:	f04f 0b08 	mov.w	fp, #8
   205be:	e007      	b.n	205d0 <_scanf_float+0x188>
   205c0:	eb12 0f0b 	cmn.w	r2, fp
   205c4:	f47f af7b 	bne.w	204be <_scanf_float+0x76>
   205c8:	6821      	ldr	r1, [r4, #0]
   205ca:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   205ce:	6021      	str	r1, [r4, #0]
   205d0:	702b      	strb	r3, [r5, #0]
   205d2:	3501      	adds	r5, #1
   205d4:	e79a      	b.n	2050c <_scanf_float+0xc4>
   205d6:	6821      	ldr	r1, [r4, #0]
   205d8:	0608      	lsls	r0, r1, #24
   205da:	f57f af70 	bpl.w	204be <_scanf_float+0x76>
   205de:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   205e2:	e7f4      	b.n	205ce <_scanf_float+0x186>
   205e4:	2a02      	cmp	r2, #2
   205e6:	d047      	beq.n	20678 <_scanf_float+0x230>
   205e8:	f1bb 0f01 	cmp.w	fp, #1
   205ec:	d003      	beq.n	205f6 <_scanf_float+0x1ae>
   205ee:	f1bb 0f04 	cmp.w	fp, #4
   205f2:	f47f af64 	bne.w	204be <_scanf_float+0x76>
   205f6:	f10b 0b01 	add.w	fp, fp, #1
   205fa:	fa5f fb8b 	uxtb.w	fp, fp
   205fe:	e7e7      	b.n	205d0 <_scanf_float+0x188>
   20600:	f1bb 0f03 	cmp.w	fp, #3
   20604:	d0f7      	beq.n	205f6 <_scanf_float+0x1ae>
   20606:	f1bb 0f05 	cmp.w	fp, #5
   2060a:	e7f2      	b.n	205f2 <_scanf_float+0x1aa>
   2060c:	f1bb 0f02 	cmp.w	fp, #2
   20610:	f47f af55 	bne.w	204be <_scanf_float+0x76>
   20614:	f04f 0b03 	mov.w	fp, #3
   20618:	e7da      	b.n	205d0 <_scanf_float+0x188>
   2061a:	f1bb 0f06 	cmp.w	fp, #6
   2061e:	f47f af4e 	bne.w	204be <_scanf_float+0x76>
   20622:	f04f 0b07 	mov.w	fp, #7
   20626:	e7d3      	b.n	205d0 <_scanf_float+0x188>
   20628:	6821      	ldr	r1, [r4, #0]
   2062a:	0588      	lsls	r0, r1, #22
   2062c:	f57f af47 	bpl.w	204be <_scanf_float+0x76>
   20630:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   20634:	6021      	str	r1, [r4, #0]
   20636:	f8cd 9008 	str.w	r9, [sp, #8]
   2063a:	e7c9      	b.n	205d0 <_scanf_float+0x188>
   2063c:	6821      	ldr	r1, [r4, #0]
   2063e:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   20642:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   20646:	d006      	beq.n	20656 <_scanf_float+0x20e>
   20648:	0548      	lsls	r0, r1, #21
   2064a:	f57f af38 	bpl.w	204be <_scanf_float+0x76>
   2064e:	f1b9 0f00 	cmp.w	r9, #0
   20652:	f43f af3b 	beq.w	204cc <_scanf_float+0x84>
   20656:	0588      	lsls	r0, r1, #22
   20658:	bf58      	it	pl
   2065a:	9802      	ldrpl	r0, [sp, #8]
   2065c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   20660:	bf58      	it	pl
   20662:	eba9 0000 	subpl.w	r0, r9, r0
   20666:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   2066a:	bf5c      	itt	pl
   2066c:	9003      	strpl	r0, [sp, #12]
   2066e:	9504      	strpl	r5, [sp, #16]
   20670:	6021      	str	r1, [r4, #0]
   20672:	f04f 0900 	mov.w	r9, #0
   20676:	e7ab      	b.n	205d0 <_scanf_float+0x188>
   20678:	2203      	movs	r2, #3
   2067a:	e7a9      	b.n	205d0 <_scanf_float+0x188>
   2067c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   20680:	4631      	mov	r1, r6
   20682:	4638      	mov	r0, r7
   20684:	9205      	str	r2, [sp, #20]
   20686:	4798      	blx	r3
   20688:	9a05      	ldr	r2, [sp, #20]
   2068a:	2800      	cmp	r0, #0
   2068c:	f43f af04 	beq.w	20498 <_scanf_float+0x50>
   20690:	e715      	b.n	204be <_scanf_float+0x76>
   20692:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   20696:	4632      	mov	r2, r6
   20698:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   2069c:	4638      	mov	r0, r7
   2069e:	4798      	blx	r3
   206a0:	6923      	ldr	r3, [r4, #16]
   206a2:	3b01      	subs	r3, #1
   206a4:	6123      	str	r3, [r4, #16]
   206a6:	e715      	b.n	204d4 <_scanf_float+0x8c>
   206a8:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   206ac:	2b06      	cmp	r3, #6
   206ae:	d80a      	bhi.n	206c6 <_scanf_float+0x27e>
   206b0:	f1bb 0f02 	cmp.w	fp, #2
   206b4:	d92f      	bls.n	20716 <_scanf_float+0x2ce>
   206b6:	f1ab 0b03 	sub.w	fp, fp, #3
   206ba:	fa5f fb8b 	uxtb.w	fp, fp
   206be:	eba5 0b0b 	sub.w	fp, r5, fp
   206c2:	455d      	cmp	r5, fp
   206c4:	d112      	bne.n	206ec <_scanf_float+0x2a4>
   206c6:	6823      	ldr	r3, [r4, #0]
   206c8:	05da      	lsls	r2, r3, #23
   206ca:	d545      	bpl.n	20758 <_scanf_float+0x310>
   206cc:	055b      	lsls	r3, r3, #21
   206ce:	d525      	bpl.n	2071c <_scanf_float+0x2d4>
   206d0:	4545      	cmp	r5, r8
   206d2:	f67f af02 	bls.w	204da <_scanf_float+0x92>
   206d6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   206da:	4632      	mov	r2, r6
   206dc:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   206e0:	4638      	mov	r0, r7
   206e2:	4798      	blx	r3
   206e4:	6923      	ldr	r3, [r4, #16]
   206e6:	3b01      	subs	r3, #1
   206e8:	6123      	str	r3, [r4, #16]
   206ea:	e7f1      	b.n	206d0 <_scanf_float+0x288>
   206ec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   206f0:	4632      	mov	r2, r6
   206f2:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   206f6:	4638      	mov	r0, r7
   206f8:	4798      	blx	r3
   206fa:	6923      	ldr	r3, [r4, #16]
   206fc:	3b01      	subs	r3, #1
   206fe:	6123      	str	r3, [r4, #16]
   20700:	e7df      	b.n	206c2 <_scanf_float+0x27a>
   20702:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   20706:	4632      	mov	r2, r6
   20708:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   2070c:	4638      	mov	r0, r7
   2070e:	4798      	blx	r3
   20710:	6923      	ldr	r3, [r4, #16]
   20712:	3b01      	subs	r3, #1
   20714:	6123      	str	r3, [r4, #16]
   20716:	4545      	cmp	r5, r8
   20718:	d8f3      	bhi.n	20702 <_scanf_float+0x2ba>
   2071a:	e6de      	b.n	204da <_scanf_float+0x92>
   2071c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   20720:	6923      	ldr	r3, [r4, #16]
   20722:	2965      	cmp	r1, #101	; 0x65
   20724:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   20728:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   2072c:	6123      	str	r3, [r4, #16]
   2072e:	d00d      	beq.n	2074c <_scanf_float+0x304>
   20730:	2945      	cmp	r1, #69	; 0x45
   20732:	d00b      	beq.n	2074c <_scanf_float+0x304>
   20734:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   20738:	4632      	mov	r2, r6
   2073a:	4638      	mov	r0, r7
   2073c:	4798      	blx	r3
   2073e:	6923      	ldr	r3, [r4, #16]
   20740:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   20744:	3b01      	subs	r3, #1
   20746:	f1a5 0b02 	sub.w	fp, r5, #2
   2074a:	6123      	str	r3, [r4, #16]
   2074c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   20750:	4632      	mov	r2, r6
   20752:	4638      	mov	r0, r7
   20754:	4798      	blx	r3
   20756:	465d      	mov	r5, fp
   20758:	6826      	ldr	r6, [r4, #0]
   2075a:	f016 0610 	ands.w	r6, r6, #16
   2075e:	d14e      	bne.n	207fe <_scanf_float+0x3b6>
   20760:	702e      	strb	r6, [r5, #0]
   20762:	6823      	ldr	r3, [r4, #0]
   20764:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   20768:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   2076c:	d11c      	bne.n	207a8 <_scanf_float+0x360>
   2076e:	9b02      	ldr	r3, [sp, #8]
   20770:	eba9 0303 	sub.w	r3, r9, r3
   20774:	425a      	negs	r2, r3
   20776:	bb23      	cbnz	r3, 207c2 <_scanf_float+0x37a>
   20778:	2200      	movs	r2, #0
   2077a:	4641      	mov	r1, r8
   2077c:	4638      	mov	r0, r7
   2077e:	f001 facf 	bl	21d20 <_strtod_r>
   20782:	6825      	ldr	r5, [r4, #0]
   20784:	f8da 3000 	ldr.w	r3, [sl]
   20788:	f015 0f02 	tst.w	r5, #2
   2078c:	f103 0204 	add.w	r2, r3, #4
   20790:	4680      	mov	r8, r0
   20792:	4689      	mov	r9, r1
   20794:	f8ca 2000 	str.w	r2, [sl]
   20798:	d01e      	beq.n	207d8 <_scanf_float+0x390>
   2079a:	681b      	ldr	r3, [r3, #0]
   2079c:	e9c3 8900 	strd	r8, r9, [r3]
   207a0:	68e3      	ldr	r3, [r4, #12]
   207a2:	3301      	adds	r3, #1
   207a4:	60e3      	str	r3, [r4, #12]
   207a6:	e699      	b.n	204dc <_scanf_float+0x94>
   207a8:	9b03      	ldr	r3, [sp, #12]
   207aa:	2b00      	cmp	r3, #0
   207ac:	d0e4      	beq.n	20778 <_scanf_float+0x330>
   207ae:	9904      	ldr	r1, [sp, #16]
   207b0:	230a      	movs	r3, #10
   207b2:	4632      	mov	r2, r6
   207b4:	3101      	adds	r1, #1
   207b6:	4638      	mov	r0, r7
   207b8:	f001 fb6e 	bl	21e98 <_strtol_r>
   207bc:	9b03      	ldr	r3, [sp, #12]
   207be:	9d04      	ldr	r5, [sp, #16]
   207c0:	1ac2      	subs	r2, r0, r3
   207c2:	f204 136f 	addw	r3, r4, #367	; 0x16f
   207c6:	429d      	cmp	r5, r3
   207c8:	bf28      	it	cs
   207ca:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   207ce:	490d      	ldr	r1, [pc, #52]	; (20804 <_scanf_float+0x3bc>)
   207d0:	4628      	mov	r0, r5
   207d2:	f000 fb25 	bl	20e20 <siprintf>
   207d6:	e7cf      	b.n	20778 <_scanf_float+0x330>
   207d8:	f015 0504 	ands.w	r5, r5, #4
   207dc:	d1dd      	bne.n	2079a <_scanf_float+0x352>
   207de:	681f      	ldr	r7, [r3, #0]
   207e0:	4602      	mov	r2, r0
   207e2:	460b      	mov	r3, r1
   207e4:	f005 f9ce 	bl	25b84 <__aeabi_dcmpun>
   207e8:	b120      	cbz	r0, 207f4 <_scanf_float+0x3ac>
   207ea:	4628      	mov	r0, r5
   207ec:	f000 fa9c 	bl	20d28 <nanf>
   207f0:	6038      	str	r0, [r7, #0]
   207f2:	e7d5      	b.n	207a0 <_scanf_float+0x358>
   207f4:	4640      	mov	r0, r8
   207f6:	4649      	mov	r1, r9
   207f8:	f7fd fbfe 	bl	1dff8 <__aeabi_d2f>
   207fc:	e7f8      	b.n	207f0 <_scanf_float+0x3a8>
   207fe:	2600      	movs	r6, #0
   20800:	e66c      	b.n	204dc <_scanf_float+0x94>
   20802:	bf00      	nop
   20804:	00028e66 	.word	0x00028e66

00020808 <_open_r>:
_open_r():
   20808:	b538      	push	{r3, r4, r5, lr}
   2080a:	4605      	mov	r5, r0
   2080c:	4608      	mov	r0, r1
   2080e:	4611      	mov	r1, r2
   20810:	2200      	movs	r2, #0
   20812:	4c05      	ldr	r4, [pc, #20]	; (20828 <_open_r+0x20>)
   20814:	6022      	str	r2, [r4, #0]
   20816:	461a      	mov	r2, r3
   20818:	f7f6 fe7c 	bl	17514 <_open>
   2081c:	1c43      	adds	r3, r0, #1
   2081e:	d102      	bne.n	20826 <_open_r+0x1e>
   20820:	6823      	ldr	r3, [r4, #0]
   20822:	b103      	cbz	r3, 20826 <_open_r+0x1e>
   20824:	602b      	str	r3, [r5, #0]
   20826:	bd38      	pop	{r3, r4, r5, pc}
   20828:	2007c984 	.word	0x2007c984

0002082c <iprintf>:
iprintf():
   2082c:	b40f      	push	{r0, r1, r2, r3}
   2082e:	4b0a      	ldr	r3, [pc, #40]	; (20858 <iprintf+0x2c>)
   20830:	b513      	push	{r0, r1, r4, lr}
   20832:	681c      	ldr	r4, [r3, #0]
   20834:	b124      	cbz	r4, 20840 <iprintf+0x14>
   20836:	69a3      	ldr	r3, [r4, #24]
   20838:	b913      	cbnz	r3, 20840 <iprintf+0x14>
   2083a:	4620      	mov	r0, r4
   2083c:	f7fe fa78 	bl	1ed30 <__sinit>
   20840:	ab05      	add	r3, sp, #20
   20842:	9a04      	ldr	r2, [sp, #16]
   20844:	68a1      	ldr	r1, [r4, #8]
   20846:	4620      	mov	r0, r4
   20848:	9301      	str	r3, [sp, #4]
   2084a:	f004 f977 	bl	24b3c <_vfiprintf_r>
   2084e:	b002      	add	sp, #8
   20850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   20854:	b004      	add	sp, #16
   20856:	4770      	bx	lr
   20858:	2007c0e0 	.word	0x2007c0e0

0002085c <_puts_r>:
_puts_r():
   2085c:	b570      	push	{r4, r5, r6, lr}
   2085e:	460e      	mov	r6, r1
   20860:	4605      	mov	r5, r0
   20862:	b118      	cbz	r0, 2086c <_puts_r+0x10>
   20864:	6983      	ldr	r3, [r0, #24]
   20866:	b90b      	cbnz	r3, 2086c <_puts_r+0x10>
   20868:	f7fe fa62 	bl	1ed30 <__sinit>
   2086c:	69ab      	ldr	r3, [r5, #24]
   2086e:	68ac      	ldr	r4, [r5, #8]
   20870:	b913      	cbnz	r3, 20878 <_puts_r+0x1c>
   20872:	4628      	mov	r0, r5
   20874:	f7fe fa5c 	bl	1ed30 <__sinit>
   20878:	4b23      	ldr	r3, [pc, #140]	; (20908 <_puts_r+0xac>)
   2087a:	429c      	cmp	r4, r3
   2087c:	d117      	bne.n	208ae <_puts_r+0x52>
   2087e:	686c      	ldr	r4, [r5, #4]
   20880:	89a3      	ldrh	r3, [r4, #12]
   20882:	071b      	lsls	r3, r3, #28
   20884:	d51d      	bpl.n	208c2 <_puts_r+0x66>
   20886:	6923      	ldr	r3, [r4, #16]
   20888:	b1db      	cbz	r3, 208c2 <_puts_r+0x66>
   2088a:	3e01      	subs	r6, #1
   2088c:	68a3      	ldr	r3, [r4, #8]
   2088e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   20892:	3b01      	subs	r3, #1
   20894:	60a3      	str	r3, [r4, #8]
   20896:	b9e9      	cbnz	r1, 208d4 <_puts_r+0x78>
   20898:	2b00      	cmp	r3, #0
   2089a:	da2e      	bge.n	208fa <_puts_r+0x9e>
   2089c:	4622      	mov	r2, r4
   2089e:	210a      	movs	r1, #10
   208a0:	4628      	mov	r0, r5
   208a2:	f001 fde9 	bl	22478 <__swbuf_r>
   208a6:	3001      	adds	r0, #1
   208a8:	d011      	beq.n	208ce <_puts_r+0x72>
   208aa:	200a      	movs	r0, #10
   208ac:	bd70      	pop	{r4, r5, r6, pc}
   208ae:	4b17      	ldr	r3, [pc, #92]	; (2090c <_puts_r+0xb0>)
   208b0:	429c      	cmp	r4, r3
   208b2:	d101      	bne.n	208b8 <_puts_r+0x5c>
   208b4:	68ac      	ldr	r4, [r5, #8]
   208b6:	e7e3      	b.n	20880 <_puts_r+0x24>
   208b8:	4b15      	ldr	r3, [pc, #84]	; (20910 <_puts_r+0xb4>)
   208ba:	429c      	cmp	r4, r3
   208bc:	bf08      	it	eq
   208be:	68ec      	ldreq	r4, [r5, #12]
   208c0:	e7de      	b.n	20880 <_puts_r+0x24>
   208c2:	4621      	mov	r1, r4
   208c4:	4628      	mov	r0, r5
   208c6:	f001 fe49 	bl	2255c <__swsetup_r>
   208ca:	2800      	cmp	r0, #0
   208cc:	d0dd      	beq.n	2088a <_puts_r+0x2e>
   208ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   208d2:	bd70      	pop	{r4, r5, r6, pc}
   208d4:	2b00      	cmp	r3, #0
   208d6:	da04      	bge.n	208e2 <_puts_r+0x86>
   208d8:	69a2      	ldr	r2, [r4, #24]
   208da:	4293      	cmp	r3, r2
   208dc:	db06      	blt.n	208ec <_puts_r+0x90>
   208de:	290a      	cmp	r1, #10
   208e0:	d004      	beq.n	208ec <_puts_r+0x90>
   208e2:	6823      	ldr	r3, [r4, #0]
   208e4:	1c5a      	adds	r2, r3, #1
   208e6:	6022      	str	r2, [r4, #0]
   208e8:	7019      	strb	r1, [r3, #0]
   208ea:	e7cf      	b.n	2088c <_puts_r+0x30>
   208ec:	4622      	mov	r2, r4
   208ee:	4628      	mov	r0, r5
   208f0:	f001 fdc2 	bl	22478 <__swbuf_r>
   208f4:	3001      	adds	r0, #1
   208f6:	d1c9      	bne.n	2088c <_puts_r+0x30>
   208f8:	e7e9      	b.n	208ce <_puts_r+0x72>
   208fa:	200a      	movs	r0, #10
   208fc:	6823      	ldr	r3, [r4, #0]
   208fe:	1c5a      	adds	r2, r3, #1
   20900:	6022      	str	r2, [r4, #0]
   20902:	7018      	strb	r0, [r3, #0]
   20904:	bd70      	pop	{r4, r5, r6, pc}
   20906:	bf00      	nop
   20908:	00028d28 	.word	0x00028d28
   2090c:	00028d48 	.word	0x00028d48
   20910:	00028d08 	.word	0x00028d08

00020914 <puts>:
puts():
   20914:	4b02      	ldr	r3, [pc, #8]	; (20920 <puts+0xc>)
   20916:	4601      	mov	r1, r0
   20918:	6818      	ldr	r0, [r3, #0]
   2091a:	f7ff bf9f 	b.w	2085c <_puts_r>
   2091e:	bf00      	nop
   20920:	2007c0e0 	.word	0x2007c0e0

00020924 <srand>:
srand():
   20924:	b538      	push	{r3, r4, r5, lr}
   20926:	4b12      	ldr	r3, [pc, #72]	; (20970 <srand+0x4c>)
   20928:	4605      	mov	r5, r0
   2092a:	681c      	ldr	r4, [r3, #0]
   2092c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2092e:	b9d3      	cbnz	r3, 20966 <srand+0x42>
   20930:	2018      	movs	r0, #24
   20932:	f7fe fd6b 	bl	1f40c <malloc>
   20936:	f243 330e 	movw	r3, #13070	; 0x330e
   2093a:	63a0      	str	r0, [r4, #56]	; 0x38
   2093c:	8003      	strh	r3, [r0, #0]
   2093e:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   20942:	8043      	strh	r3, [r0, #2]
   20944:	f241 2334 	movw	r3, #4660	; 0x1234
   20948:	8083      	strh	r3, [r0, #4]
   2094a:	f24e 636d 	movw	r3, #58989	; 0xe66d
   2094e:	80c3      	strh	r3, [r0, #6]
   20950:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   20954:	8103      	strh	r3, [r0, #8]
   20956:	2305      	movs	r3, #5
   20958:	8143      	strh	r3, [r0, #10]
   2095a:	230b      	movs	r3, #11
   2095c:	2201      	movs	r2, #1
   2095e:	8183      	strh	r3, [r0, #12]
   20960:	2300      	movs	r3, #0
   20962:	e9c0 2304 	strd	r2, r3, [r0, #16]
   20966:	2200      	movs	r2, #0
   20968:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2096a:	611d      	str	r5, [r3, #16]
   2096c:	615a      	str	r2, [r3, #20]
   2096e:	bd38      	pop	{r3, r4, r5, pc}
   20970:	2007c0e0 	.word	0x2007c0e0

00020974 <rand>:
rand():
   20974:	4b19      	ldr	r3, [pc, #100]	; (209dc <rand+0x68>)
   20976:	b510      	push	{r4, lr}
   20978:	681c      	ldr	r4, [r3, #0]
   2097a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2097c:	b9d3      	cbnz	r3, 209b4 <rand+0x40>
   2097e:	2018      	movs	r0, #24
   20980:	f7fe fd44 	bl	1f40c <malloc>
   20984:	f243 330e 	movw	r3, #13070	; 0x330e
   20988:	63a0      	str	r0, [r4, #56]	; 0x38
   2098a:	8003      	strh	r3, [r0, #0]
   2098c:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   20990:	8043      	strh	r3, [r0, #2]
   20992:	f241 2334 	movw	r3, #4660	; 0x1234
   20996:	8083      	strh	r3, [r0, #4]
   20998:	f24e 636d 	movw	r3, #58989	; 0xe66d
   2099c:	80c3      	strh	r3, [r0, #6]
   2099e:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   209a2:	8103      	strh	r3, [r0, #8]
   209a4:	2305      	movs	r3, #5
   209a6:	8143      	strh	r3, [r0, #10]
   209a8:	230b      	movs	r3, #11
   209aa:	2201      	movs	r2, #1
   209ac:	8183      	strh	r3, [r0, #12]
   209ae:	2300      	movs	r3, #0
   209b0:	e9c0 2304 	strd	r2, r3, [r0, #16]
   209b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   209b6:	480a      	ldr	r0, [pc, #40]	; (209e0 <rand+0x6c>)
   209b8:	690a      	ldr	r2, [r1, #16]
   209ba:	694b      	ldr	r3, [r1, #20]
   209bc:	4350      	muls	r0, r2
   209be:	4c09      	ldr	r4, [pc, #36]	; (209e4 <rand+0x70>)
   209c0:	fb04 0003 	mla	r0, r4, r3, r0
   209c4:	fba2 2304 	umull	r2, r3, r2, r4
   209c8:	3201      	adds	r2, #1
   209ca:	4403      	add	r3, r0
   209cc:	f143 0300 	adc.w	r3, r3, #0
   209d0:	e9c1 2304 	strd	r2, r3, [r1, #16]
   209d4:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   209d8:	bd10      	pop	{r4, pc}
   209da:	bf00      	nop
   209dc:	2007c0e0 	.word	0x2007c0e0
   209e0:	5851f42d 	.word	0x5851f42d
   209e4:	4c957f2d 	.word	0x4c957f2d

000209e8 <realloc>:
realloc():
   209e8:	4b02      	ldr	r3, [pc, #8]	; (209f4 <realloc+0xc>)
   209ea:	460a      	mov	r2, r1
   209ec:	4601      	mov	r1, r0
   209ee:	6818      	ldr	r0, [r3, #0]
   209f0:	f003 bd58 	b.w	244a4 <_realloc_r>
   209f4:	2007c0e0 	.word	0x2007c0e0

000209f8 <lflush>:
lflush():
   209f8:	8983      	ldrh	r3, [r0, #12]
   209fa:	f003 0309 	and.w	r3, r3, #9
   209fe:	2b09      	cmp	r3, #9
   20a00:	d101      	bne.n	20a06 <lflush+0xe>
   20a02:	f7fe b8a3 	b.w	1eb4c <fflush>
   20a06:	2000      	movs	r0, #0
   20a08:	4770      	bx	lr
   20a0a:	Address 0x0000000000020a0a is out of bounds.


00020a0c <__srefill_r>:
__srefill_r():
   20a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   20a0e:	460c      	mov	r4, r1
   20a10:	4605      	mov	r5, r0
   20a12:	b118      	cbz	r0, 20a1c <__srefill_r+0x10>
   20a14:	6983      	ldr	r3, [r0, #24]
   20a16:	b90b      	cbnz	r3, 20a1c <__srefill_r+0x10>
   20a18:	f7fe f98a 	bl	1ed30 <__sinit>
   20a1c:	4b3c      	ldr	r3, [pc, #240]	; (20b10 <__srefill_r+0x104>)
   20a1e:	429c      	cmp	r4, r3
   20a20:	d10a      	bne.n	20a38 <__srefill_r+0x2c>
   20a22:	686c      	ldr	r4, [r5, #4]
   20a24:	2300      	movs	r3, #0
   20a26:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   20a2a:	6063      	str	r3, [r4, #4]
   20a2c:	b293      	uxth	r3, r2
   20a2e:	069e      	lsls	r6, r3, #26
   20a30:	d50c      	bpl.n	20a4c <__srefill_r+0x40>
   20a32:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20a36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   20a38:	4b36      	ldr	r3, [pc, #216]	; (20b14 <__srefill_r+0x108>)
   20a3a:	429c      	cmp	r4, r3
   20a3c:	d101      	bne.n	20a42 <__srefill_r+0x36>
   20a3e:	68ac      	ldr	r4, [r5, #8]
   20a40:	e7f0      	b.n	20a24 <__srefill_r+0x18>
   20a42:	4b35      	ldr	r3, [pc, #212]	; (20b18 <__srefill_r+0x10c>)
   20a44:	429c      	cmp	r4, r3
   20a46:	bf08      	it	eq
   20a48:	68ec      	ldreq	r4, [r5, #12]
   20a4a:	e7eb      	b.n	20a24 <__srefill_r+0x18>
   20a4c:	0758      	lsls	r0, r3, #29
   20a4e:	d449      	bmi.n	20ae4 <__srefill_r+0xd8>
   20a50:	06d9      	lsls	r1, r3, #27
   20a52:	d405      	bmi.n	20a60 <__srefill_r+0x54>
   20a54:	2309      	movs	r3, #9
   20a56:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   20a5a:	602b      	str	r3, [r5, #0]
   20a5c:	81a2      	strh	r2, [r4, #12]
   20a5e:	e7e8      	b.n	20a32 <__srefill_r+0x26>
   20a60:	071a      	lsls	r2, r3, #28
   20a62:	d50b      	bpl.n	20a7c <__srefill_r+0x70>
   20a64:	4621      	mov	r1, r4
   20a66:	4628      	mov	r0, r5
   20a68:	f7fe f846 	bl	1eaf8 <_fflush_r>
   20a6c:	2800      	cmp	r0, #0
   20a6e:	d1e0      	bne.n	20a32 <__srefill_r+0x26>
   20a70:	89a3      	ldrh	r3, [r4, #12]
   20a72:	60a0      	str	r0, [r4, #8]
   20a74:	f023 0308 	bic.w	r3, r3, #8
   20a78:	81a3      	strh	r3, [r4, #12]
   20a7a:	61a0      	str	r0, [r4, #24]
   20a7c:	89a3      	ldrh	r3, [r4, #12]
   20a7e:	f043 0304 	orr.w	r3, r3, #4
   20a82:	81a3      	strh	r3, [r4, #12]
   20a84:	6923      	ldr	r3, [r4, #16]
   20a86:	b91b      	cbnz	r3, 20a90 <__srefill_r+0x84>
   20a88:	4621      	mov	r1, r4
   20a8a:	4628      	mov	r0, r5
   20a8c:	f7fe fc7e 	bl	1f38c <__smakebuf_r>
   20a90:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   20a94:	b2be      	uxth	r6, r7
   20a96:	07b3      	lsls	r3, r6, #30
   20a98:	d00f      	beq.n	20aba <__srefill_r+0xae>
   20a9a:	2301      	movs	r3, #1
   20a9c:	81a3      	strh	r3, [r4, #12]
   20a9e:	4b1f      	ldr	r3, [pc, #124]	; (20b1c <__srefill_r+0x110>)
   20aa0:	491f      	ldr	r1, [pc, #124]	; (20b20 <__srefill_r+0x114>)
   20aa2:	6818      	ldr	r0, [r3, #0]
   20aa4:	f006 0609 	and.w	r6, r6, #9
   20aa8:	f7fe fa8a 	bl	1efc0 <_fwalk>
   20aac:	2e09      	cmp	r6, #9
   20aae:	81a7      	strh	r7, [r4, #12]
   20ab0:	d103      	bne.n	20aba <__srefill_r+0xae>
   20ab2:	4621      	mov	r1, r4
   20ab4:	4628      	mov	r0, r5
   20ab6:	f7fd ff97 	bl	1e9e8 <__sflush_r>
   20aba:	6922      	ldr	r2, [r4, #16]
   20abc:	6a66      	ldr	r6, [r4, #36]	; 0x24
   20abe:	6022      	str	r2, [r4, #0]
   20ac0:	6963      	ldr	r3, [r4, #20]
   20ac2:	6a21      	ldr	r1, [r4, #32]
   20ac4:	4628      	mov	r0, r5
   20ac6:	47b0      	blx	r6
   20ac8:	2800      	cmp	r0, #0
   20aca:	6060      	str	r0, [r4, #4]
   20acc:	dc1d      	bgt.n	20b0a <__srefill_r+0xfe>
   20ace:	bf18      	it	ne
   20ad0:	2200      	movne	r2, #0
   20ad2:	89a3      	ldrh	r3, [r4, #12]
   20ad4:	bf16      	itet	ne
   20ad6:	6062      	strne	r2, [r4, #4]
   20ad8:	f043 0320 	orreq.w	r3, r3, #32
   20adc:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   20ae0:	81a3      	strh	r3, [r4, #12]
   20ae2:	e7a6      	b.n	20a32 <__srefill_r+0x26>
   20ae4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   20ae6:	2900      	cmp	r1, #0
   20ae8:	d0cc      	beq.n	20a84 <__srefill_r+0x78>
   20aea:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20aee:	4299      	cmp	r1, r3
   20af0:	d002      	beq.n	20af8 <__srefill_r+0xec>
   20af2:	4628      	mov	r0, r5
   20af4:	f7fe ff6a 	bl	1f9cc <_free_r>
   20af8:	2000      	movs	r0, #0
   20afa:	6c23      	ldr	r3, [r4, #64]	; 0x40
   20afc:	6360      	str	r0, [r4, #52]	; 0x34
   20afe:	6063      	str	r3, [r4, #4]
   20b00:	2b00      	cmp	r3, #0
   20b02:	d0bf      	beq.n	20a84 <__srefill_r+0x78>
   20b04:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   20b06:	6023      	str	r3, [r4, #0]
   20b08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   20b0a:	2000      	movs	r0, #0
   20b0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   20b0e:	bf00      	nop
   20b10:	00028d28 	.word	0x00028d28
   20b14:	00028d48 	.word	0x00028d48
   20b18:	00028d08 	.word	0x00028d08
   20b1c:	00028d68 	.word	0x00028d68
   20b20:	000209f9 	.word	0x000209f9

00020b24 <__srget_r>:
__srget_r():
   20b24:	b538      	push	{r3, r4, r5, lr}
   20b26:	460c      	mov	r4, r1
   20b28:	4605      	mov	r5, r0
   20b2a:	b118      	cbz	r0, 20b34 <__srget_r+0x10>
   20b2c:	6983      	ldr	r3, [r0, #24]
   20b2e:	b90b      	cbnz	r3, 20b34 <__srget_r+0x10>
   20b30:	f7fe f8fe 	bl	1ed30 <__sinit>
   20b34:	4b0e      	ldr	r3, [pc, #56]	; (20b70 <__srget_r+0x4c>)
   20b36:	429c      	cmp	r4, r3
   20b38:	d10d      	bne.n	20b56 <__srget_r+0x32>
   20b3a:	686c      	ldr	r4, [r5, #4]
   20b3c:	4621      	mov	r1, r4
   20b3e:	4628      	mov	r0, r5
   20b40:	f7ff ff64 	bl	20a0c <__srefill_r>
   20b44:	b988      	cbnz	r0, 20b6a <__srget_r+0x46>
   20b46:	6863      	ldr	r3, [r4, #4]
   20b48:	3b01      	subs	r3, #1
   20b4a:	6063      	str	r3, [r4, #4]
   20b4c:	6823      	ldr	r3, [r4, #0]
   20b4e:	1c5a      	adds	r2, r3, #1
   20b50:	6022      	str	r2, [r4, #0]
   20b52:	7818      	ldrb	r0, [r3, #0]
   20b54:	bd38      	pop	{r3, r4, r5, pc}
   20b56:	4b07      	ldr	r3, [pc, #28]	; (20b74 <__srget_r+0x50>)
   20b58:	429c      	cmp	r4, r3
   20b5a:	d101      	bne.n	20b60 <__srget_r+0x3c>
   20b5c:	68ac      	ldr	r4, [r5, #8]
   20b5e:	e7ed      	b.n	20b3c <__srget_r+0x18>
   20b60:	4b05      	ldr	r3, [pc, #20]	; (20b78 <__srget_r+0x54>)
   20b62:	429c      	cmp	r4, r3
   20b64:	bf08      	it	eq
   20b66:	68ec      	ldreq	r4, [r5, #12]
   20b68:	e7e8      	b.n	20b3c <__srget_r+0x18>
   20b6a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20b6e:	bd38      	pop	{r3, r4, r5, pc}
   20b70:	00028d28 	.word	0x00028d28
   20b74:	00028d48 	.word	0x00028d48
   20b78:	00028d08 	.word	0x00028d08

00020b7c <_sbrk_r>:
_sbrk_r():
   20b7c:	b538      	push	{r3, r4, r5, lr}
   20b7e:	2300      	movs	r3, #0
   20b80:	4c05      	ldr	r4, [pc, #20]	; (20b98 <_sbrk_r+0x1c>)
   20b82:	4605      	mov	r5, r0
   20b84:	4608      	mov	r0, r1
   20b86:	6023      	str	r3, [r4, #0]
   20b88:	f7f6 fa7a 	bl	17080 <_sbrk>
   20b8c:	1c43      	adds	r3, r0, #1
   20b8e:	d102      	bne.n	20b96 <_sbrk_r+0x1a>
   20b90:	6823      	ldr	r3, [r4, #0]
   20b92:	b103      	cbz	r3, 20b96 <_sbrk_r+0x1a>
   20b94:	602b      	str	r3, [r5, #0]
   20b96:	bd38      	pop	{r3, r4, r5, pc}
   20b98:	2007c984 	.word	0x2007c984

00020b9c <iscanf>:
scanf():
   20b9c:	b40f      	push	{r0, r1, r2, r3}
   20b9e:	4b0a      	ldr	r3, [pc, #40]	; (20bc8 <iscanf+0x2c>)
   20ba0:	b513      	push	{r0, r1, r4, lr}
   20ba2:	681c      	ldr	r4, [r3, #0]
   20ba4:	b124      	cbz	r4, 20bb0 <iscanf+0x14>
   20ba6:	69a3      	ldr	r3, [r4, #24]
   20ba8:	b913      	cbnz	r3, 20bb0 <iscanf+0x14>
   20baa:	4620      	mov	r0, r4
   20bac:	f7fe f8c0 	bl	1ed30 <__sinit>
   20bb0:	ab05      	add	r3, sp, #20
   20bb2:	9a04      	ldr	r2, [sp, #16]
   20bb4:	6861      	ldr	r1, [r4, #4]
   20bb6:	4620      	mov	r0, r4
   20bb8:	9301      	str	r3, [sp, #4]
   20bba:	f004 fa29 	bl	25010 <_vfiscanf_r>
   20bbe:	b002      	add	sp, #8
   20bc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   20bc4:	b004      	add	sp, #16
   20bc6:	4770      	bx	lr
   20bc8:	2007c0e0 	.word	0x2007c0e0

00020bcc <setvbuf>:
setvbuf():
   20bcc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   20bd0:	461d      	mov	r5, r3
   20bd2:	4b51      	ldr	r3, [pc, #324]	; (20d18 <setvbuf+0x14c>)
   20bd4:	4604      	mov	r4, r0
   20bd6:	681e      	ldr	r6, [r3, #0]
   20bd8:	460f      	mov	r7, r1
   20bda:	4690      	mov	r8, r2
   20bdc:	b126      	cbz	r6, 20be8 <setvbuf+0x1c>
   20bde:	69b3      	ldr	r3, [r6, #24]
   20be0:	b913      	cbnz	r3, 20be8 <setvbuf+0x1c>
   20be2:	4630      	mov	r0, r6
   20be4:	f7fe f8a4 	bl	1ed30 <__sinit>
   20be8:	4b4c      	ldr	r3, [pc, #304]	; (20d1c <setvbuf+0x150>)
   20bea:	429c      	cmp	r4, r3
   20bec:	d152      	bne.n	20c94 <setvbuf+0xc8>
   20bee:	6874      	ldr	r4, [r6, #4]
   20bf0:	f1b8 0f02 	cmp.w	r8, #2
   20bf4:	d006      	beq.n	20c04 <setvbuf+0x38>
   20bf6:	f1b8 0f01 	cmp.w	r8, #1
   20bfa:	f200 8089 	bhi.w	20d10 <setvbuf+0x144>
   20bfe:	2d00      	cmp	r5, #0
   20c00:	f2c0 8086 	blt.w	20d10 <setvbuf+0x144>
   20c04:	4621      	mov	r1, r4
   20c06:	4630      	mov	r0, r6
   20c08:	f7fd ff76 	bl	1eaf8 <_fflush_r>
   20c0c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   20c0e:	b141      	cbz	r1, 20c22 <setvbuf+0x56>
   20c10:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20c14:	4299      	cmp	r1, r3
   20c16:	d002      	beq.n	20c1e <setvbuf+0x52>
   20c18:	4630      	mov	r0, r6
   20c1a:	f7fe fed7 	bl	1f9cc <_free_r>
   20c1e:	2300      	movs	r3, #0
   20c20:	6363      	str	r3, [r4, #52]	; 0x34
   20c22:	2300      	movs	r3, #0
   20c24:	61a3      	str	r3, [r4, #24]
   20c26:	6063      	str	r3, [r4, #4]
   20c28:	89a3      	ldrh	r3, [r4, #12]
   20c2a:	061b      	lsls	r3, r3, #24
   20c2c:	d503      	bpl.n	20c36 <setvbuf+0x6a>
   20c2e:	6921      	ldr	r1, [r4, #16]
   20c30:	4630      	mov	r0, r6
   20c32:	f7fe fecb 	bl	1f9cc <_free_r>
   20c36:	89a3      	ldrh	r3, [r4, #12]
   20c38:	f1b8 0f02 	cmp.w	r8, #2
   20c3c:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   20c40:	f023 0303 	bic.w	r3, r3, #3
   20c44:	81a3      	strh	r3, [r4, #12]
   20c46:	d05d      	beq.n	20d04 <setvbuf+0x138>
   20c48:	ab01      	add	r3, sp, #4
   20c4a:	466a      	mov	r2, sp
   20c4c:	4621      	mov	r1, r4
   20c4e:	4630      	mov	r0, r6
   20c50:	f7fe fb78 	bl	1f344 <__swhatbuf_r>
   20c54:	89a3      	ldrh	r3, [r4, #12]
   20c56:	4318      	orrs	r0, r3
   20c58:	81a0      	strh	r0, [r4, #12]
   20c5a:	bb2d      	cbnz	r5, 20ca8 <setvbuf+0xdc>
   20c5c:	9d00      	ldr	r5, [sp, #0]
   20c5e:	4628      	mov	r0, r5
   20c60:	f7fe fbd4 	bl	1f40c <malloc>
   20c64:	4607      	mov	r7, r0
   20c66:	2800      	cmp	r0, #0
   20c68:	d14e      	bne.n	20d08 <setvbuf+0x13c>
   20c6a:	f8dd 9000 	ldr.w	r9, [sp]
   20c6e:	45a9      	cmp	r9, r5
   20c70:	d13c      	bne.n	20cec <setvbuf+0x120>
   20c72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20c76:	89a3      	ldrh	r3, [r4, #12]
   20c78:	f043 0302 	orr.w	r3, r3, #2
   20c7c:	81a3      	strh	r3, [r4, #12]
   20c7e:	2300      	movs	r3, #0
   20c80:	60a3      	str	r3, [r4, #8]
   20c82:	f104 0347 	add.w	r3, r4, #71	; 0x47
   20c86:	6023      	str	r3, [r4, #0]
   20c88:	6123      	str	r3, [r4, #16]
   20c8a:	2301      	movs	r3, #1
   20c8c:	6163      	str	r3, [r4, #20]
   20c8e:	b003      	add	sp, #12
   20c90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20c94:	4b22      	ldr	r3, [pc, #136]	; (20d20 <setvbuf+0x154>)
   20c96:	429c      	cmp	r4, r3
   20c98:	d101      	bne.n	20c9e <setvbuf+0xd2>
   20c9a:	68b4      	ldr	r4, [r6, #8]
   20c9c:	e7a8      	b.n	20bf0 <setvbuf+0x24>
   20c9e:	4b21      	ldr	r3, [pc, #132]	; (20d24 <setvbuf+0x158>)
   20ca0:	429c      	cmp	r4, r3
   20ca2:	bf08      	it	eq
   20ca4:	68f4      	ldreq	r4, [r6, #12]
   20ca6:	e7a3      	b.n	20bf0 <setvbuf+0x24>
   20ca8:	2f00      	cmp	r7, #0
   20caa:	d0d8      	beq.n	20c5e <setvbuf+0x92>
   20cac:	69b3      	ldr	r3, [r6, #24]
   20cae:	b913      	cbnz	r3, 20cb6 <setvbuf+0xea>
   20cb0:	4630      	mov	r0, r6
   20cb2:	f7fe f83d 	bl	1ed30 <__sinit>
   20cb6:	f1b8 0f01 	cmp.w	r8, #1
   20cba:	bf08      	it	eq
   20cbc:	89a3      	ldrheq	r3, [r4, #12]
   20cbe:	6027      	str	r7, [r4, #0]
   20cc0:	bf04      	itt	eq
   20cc2:	f043 0301 	orreq.w	r3, r3, #1
   20cc6:	81a3      	strheq	r3, [r4, #12]
   20cc8:	89a3      	ldrh	r3, [r4, #12]
   20cca:	6127      	str	r7, [r4, #16]
   20ccc:	f013 0008 	ands.w	r0, r3, #8
   20cd0:	6165      	str	r5, [r4, #20]
   20cd2:	d01b      	beq.n	20d0c <setvbuf+0x140>
   20cd4:	f013 0001 	ands.w	r0, r3, #1
   20cd8:	f04f 0300 	mov.w	r3, #0
   20cdc:	bf1f      	itttt	ne
   20cde:	426d      	negne	r5, r5
   20ce0:	60a3      	strne	r3, [r4, #8]
   20ce2:	61a5      	strne	r5, [r4, #24]
   20ce4:	4618      	movne	r0, r3
   20ce6:	bf08      	it	eq
   20ce8:	60a5      	streq	r5, [r4, #8]
   20cea:	e7d0      	b.n	20c8e <setvbuf+0xc2>
   20cec:	4648      	mov	r0, r9
   20cee:	f7fe fb8d 	bl	1f40c <malloc>
   20cf2:	4607      	mov	r7, r0
   20cf4:	2800      	cmp	r0, #0
   20cf6:	d0bc      	beq.n	20c72 <setvbuf+0xa6>
   20cf8:	89a3      	ldrh	r3, [r4, #12]
   20cfa:	464d      	mov	r5, r9
   20cfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   20d00:	81a3      	strh	r3, [r4, #12]
   20d02:	e7d3      	b.n	20cac <setvbuf+0xe0>
   20d04:	2000      	movs	r0, #0
   20d06:	e7b6      	b.n	20c76 <setvbuf+0xaa>
   20d08:	46a9      	mov	r9, r5
   20d0a:	e7f5      	b.n	20cf8 <setvbuf+0x12c>
   20d0c:	60a0      	str	r0, [r4, #8]
   20d0e:	e7be      	b.n	20c8e <setvbuf+0xc2>
   20d10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20d14:	e7bb      	b.n	20c8e <setvbuf+0xc2>
   20d16:	bf00      	nop
   20d18:	2007c0e0 	.word	0x2007c0e0
   20d1c:	00028d28 	.word	0x00028d28
   20d20:	00028d48 	.word	0x00028d48
   20d24:	00028d08 	.word	0x00028d08

00020d28 <nanf>:
nanf():
   20d28:	4800      	ldr	r0, [pc, #0]	; (20d2c <nanf+0x4>)
   20d2a:	4770      	bx	lr
   20d2c:	7fc00000 	.word	0x7fc00000

00020d30 <_raise_r>:
_raise_r():
   20d30:	291f      	cmp	r1, #31
   20d32:	b538      	push	{r3, r4, r5, lr}
   20d34:	4604      	mov	r4, r0
   20d36:	460d      	mov	r5, r1
   20d38:	d904      	bls.n	20d44 <_raise_r+0x14>
   20d3a:	2316      	movs	r3, #22
   20d3c:	6003      	str	r3, [r0, #0]
   20d3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20d42:	bd38      	pop	{r3, r4, r5, pc}
   20d44:	6c42      	ldr	r2, [r0, #68]	; 0x44
   20d46:	b112      	cbz	r2, 20d4e <_raise_r+0x1e>
   20d48:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   20d4c:	b94b      	cbnz	r3, 20d62 <_raise_r+0x32>
   20d4e:	4620      	mov	r0, r4
   20d50:	f000 f830 	bl	20db4 <_getpid_r>
   20d54:	462a      	mov	r2, r5
   20d56:	4601      	mov	r1, r0
   20d58:	4620      	mov	r0, r4
   20d5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   20d5e:	f000 b817 	b.w	20d90 <_kill_r>
   20d62:	2b01      	cmp	r3, #1
   20d64:	d00a      	beq.n	20d7c <_raise_r+0x4c>
   20d66:	1c59      	adds	r1, r3, #1
   20d68:	d103      	bne.n	20d72 <_raise_r+0x42>
   20d6a:	2316      	movs	r3, #22
   20d6c:	6003      	str	r3, [r0, #0]
   20d6e:	2001      	movs	r0, #1
   20d70:	bd38      	pop	{r3, r4, r5, pc}
   20d72:	2400      	movs	r4, #0
   20d74:	4628      	mov	r0, r5
   20d76:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   20d7a:	4798      	blx	r3
   20d7c:	2000      	movs	r0, #0
   20d7e:	bd38      	pop	{r3, r4, r5, pc}

00020d80 <raise>:
raise():
   20d80:	4b02      	ldr	r3, [pc, #8]	; (20d8c <raise+0xc>)
   20d82:	4601      	mov	r1, r0
   20d84:	6818      	ldr	r0, [r3, #0]
   20d86:	f7ff bfd3 	b.w	20d30 <_raise_r>
   20d8a:	bf00      	nop
   20d8c:	2007c0e0 	.word	0x2007c0e0

00020d90 <_kill_r>:
_kill_r():
   20d90:	b538      	push	{r3, r4, r5, lr}
   20d92:	2300      	movs	r3, #0
   20d94:	4c06      	ldr	r4, [pc, #24]	; (20db0 <_kill_r+0x20>)
   20d96:	4605      	mov	r5, r0
   20d98:	4608      	mov	r0, r1
   20d9a:	4611      	mov	r1, r2
   20d9c:	6023      	str	r3, [r4, #0]
   20d9e:	f7f6 fabb 	bl	17318 <_kill>
   20da2:	1c43      	adds	r3, r0, #1
   20da4:	d102      	bne.n	20dac <_kill_r+0x1c>
   20da6:	6823      	ldr	r3, [r4, #0]
   20da8:	b103      	cbz	r3, 20dac <_kill_r+0x1c>
   20daa:	602b      	str	r3, [r5, #0]
   20dac:	bd38      	pop	{r3, r4, r5, pc}
   20dae:	bf00      	nop
   20db0:	2007c984 	.word	0x2007c984

00020db4 <_getpid_r>:
_getpid_r():
   20db4:	f7f6 bac0 	b.w	17338 <_getpid>

00020db8 <sniprintf>:
sniprintf():
   20db8:	b40c      	push	{r2, r3}
   20dba:	b530      	push	{r4, r5, lr}
   20dbc:	4b17      	ldr	r3, [pc, #92]	; (20e1c <sniprintf+0x64>)
   20dbe:	1e0c      	subs	r4, r1, #0
   20dc0:	b09d      	sub	sp, #116	; 0x74
   20dc2:	681d      	ldr	r5, [r3, #0]
   20dc4:	da08      	bge.n	20dd8 <sniprintf+0x20>
   20dc6:	238b      	movs	r3, #139	; 0x8b
   20dc8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   20dcc:	602b      	str	r3, [r5, #0]
   20dce:	b01d      	add	sp, #116	; 0x74
   20dd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   20dd4:	b002      	add	sp, #8
   20dd6:	4770      	bx	lr
   20dd8:	f44f 7302 	mov.w	r3, #520	; 0x208
   20ddc:	f8ad 3014 	strh.w	r3, [sp, #20]
   20de0:	bf0c      	ite	eq
   20de2:	4623      	moveq	r3, r4
   20de4:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   20de8:	9304      	str	r3, [sp, #16]
   20dea:	9307      	str	r3, [sp, #28]
   20dec:	f64f 73ff 	movw	r3, #65535	; 0xffff
   20df0:	9002      	str	r0, [sp, #8]
   20df2:	9006      	str	r0, [sp, #24]
   20df4:	f8ad 3016 	strh.w	r3, [sp, #22]
   20df8:	9a20      	ldr	r2, [sp, #128]	; 0x80
   20dfa:	ab21      	add	r3, sp, #132	; 0x84
   20dfc:	a902      	add	r1, sp, #8
   20dfe:	4628      	mov	r0, r5
   20e00:	9301      	str	r3, [sp, #4]
   20e02:	f003 fbd1 	bl	245a8 <_svfiprintf_r>
   20e06:	1c43      	adds	r3, r0, #1
   20e08:	bfbc      	itt	lt
   20e0a:	238b      	movlt	r3, #139	; 0x8b
   20e0c:	602b      	strlt	r3, [r5, #0]
   20e0e:	2c00      	cmp	r4, #0
   20e10:	d0dd      	beq.n	20dce <sniprintf+0x16>
   20e12:	2200      	movs	r2, #0
   20e14:	9b02      	ldr	r3, [sp, #8]
   20e16:	701a      	strb	r2, [r3, #0]
   20e18:	e7d9      	b.n	20dce <sniprintf+0x16>
   20e1a:	bf00      	nop
   20e1c:	2007c0e0 	.word	0x2007c0e0

00020e20 <siprintf>:
siprintf():
   20e20:	b40e      	push	{r1, r2, r3}
   20e22:	f44f 7102 	mov.w	r1, #520	; 0x208
   20e26:	b500      	push	{lr}
   20e28:	b09c      	sub	sp, #112	; 0x70
   20e2a:	f8ad 1014 	strh.w	r1, [sp, #20]
   20e2e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   20e32:	9104      	str	r1, [sp, #16]
   20e34:	9107      	str	r1, [sp, #28]
   20e36:	f64f 71ff 	movw	r1, #65535	; 0xffff
   20e3a:	ab1d      	add	r3, sp, #116	; 0x74
   20e3c:	9002      	str	r0, [sp, #8]
   20e3e:	9006      	str	r0, [sp, #24]
   20e40:	4808      	ldr	r0, [pc, #32]	; (20e64 <siprintf+0x44>)
   20e42:	f853 2b04 	ldr.w	r2, [r3], #4
   20e46:	f8ad 1016 	strh.w	r1, [sp, #22]
   20e4a:	6800      	ldr	r0, [r0, #0]
   20e4c:	a902      	add	r1, sp, #8
   20e4e:	9301      	str	r3, [sp, #4]
   20e50:	f003 fbaa 	bl	245a8 <_svfiprintf_r>
   20e54:	2200      	movs	r2, #0
   20e56:	9b02      	ldr	r3, [sp, #8]
   20e58:	701a      	strb	r2, [r3, #0]
   20e5a:	b01c      	add	sp, #112	; 0x70
   20e5c:	f85d eb04 	ldr.w	lr, [sp], #4
   20e60:	b003      	add	sp, #12
   20e62:	4770      	bx	lr
   20e64:	2007c0e0 	.word	0x2007c0e0

00020e68 <siscanf>:
siscanf():
   20e68:	b40e      	push	{r1, r2, r3}
   20e6a:	f44f 7201 	mov.w	r2, #516	; 0x204
   20e6e:	b530      	push	{r4, r5, lr}
   20e70:	b09c      	sub	sp, #112	; 0x70
   20e72:	ac1f      	add	r4, sp, #124	; 0x7c
   20e74:	f854 5b04 	ldr.w	r5, [r4], #4
   20e78:	f8ad 2014 	strh.w	r2, [sp, #20]
   20e7c:	9002      	str	r0, [sp, #8]
   20e7e:	9006      	str	r0, [sp, #24]
   20e80:	f000 f8ae 	bl	20fe0 <strlen>
   20e84:	4b0b      	ldr	r3, [pc, #44]	; (20eb4 <siscanf+0x4c>)
   20e86:	9003      	str	r0, [sp, #12]
   20e88:	930b      	str	r3, [sp, #44]	; 0x2c
   20e8a:	2300      	movs	r3, #0
   20e8c:	930f      	str	r3, [sp, #60]	; 0x3c
   20e8e:	9314      	str	r3, [sp, #80]	; 0x50
   20e90:	f64f 73ff 	movw	r3, #65535	; 0xffff
   20e94:	9007      	str	r0, [sp, #28]
   20e96:	4808      	ldr	r0, [pc, #32]	; (20eb8 <siscanf+0x50>)
   20e98:	f8ad 3016 	strh.w	r3, [sp, #22]
   20e9c:	462a      	mov	r2, r5
   20e9e:	4623      	mov	r3, r4
   20ea0:	a902      	add	r1, sp, #8
   20ea2:	6800      	ldr	r0, [r0, #0]
   20ea4:	9401      	str	r4, [sp, #4]
   20ea6:	f003 fccd 	bl	24844 <__ssvfiscanf_r>
   20eaa:	b01c      	add	sp, #112	; 0x70
   20eac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   20eb0:	b003      	add	sp, #12
   20eb2:	4770      	bx	lr
   20eb4:	00020edf 	.word	0x00020edf
   20eb8:	2007c0e0 	.word	0x2007c0e0

00020ebc <__sread>:
__sread():
   20ebc:	b510      	push	{r4, lr}
   20ebe:	460c      	mov	r4, r1
   20ec0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   20ec4:	f004 fa26 	bl	25314 <_read_r>
   20ec8:	2800      	cmp	r0, #0
   20eca:	bfab      	itete	ge
   20ecc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   20ece:	89a3      	ldrhlt	r3, [r4, #12]
   20ed0:	181b      	addge	r3, r3, r0
   20ed2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   20ed6:	bfac      	ite	ge
   20ed8:	6563      	strge	r3, [r4, #84]	; 0x54
   20eda:	81a3      	strhlt	r3, [r4, #12]
   20edc:	bd10      	pop	{r4, pc}

00020ede <__seofread>:
__seofread():
   20ede:	2000      	movs	r0, #0
   20ee0:	4770      	bx	lr

00020ee2 <__swrite>:
__swrite():
   20ee2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20ee6:	461f      	mov	r7, r3
   20ee8:	898b      	ldrh	r3, [r1, #12]
   20eea:	4605      	mov	r5, r0
   20eec:	05db      	lsls	r3, r3, #23
   20eee:	460c      	mov	r4, r1
   20ef0:	4616      	mov	r6, r2
   20ef2:	d505      	bpl.n	20f00 <__swrite+0x1e>
   20ef4:	2302      	movs	r3, #2
   20ef6:	2200      	movs	r2, #0
   20ef8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   20efc:	f002 fed8 	bl	23cb0 <_lseek_r>
   20f00:	89a3      	ldrh	r3, [r4, #12]
   20f02:	4632      	mov	r2, r6
   20f04:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   20f08:	81a3      	strh	r3, [r4, #12]
   20f0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   20f0e:	463b      	mov	r3, r7
   20f10:	4628      	mov	r0, r5
   20f12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   20f16:	f001 bb0f 	b.w	22538 <_write_r>

00020f1a <__sseek>:
__sseek():
   20f1a:	b510      	push	{r4, lr}
   20f1c:	460c      	mov	r4, r1
   20f1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   20f22:	f002 fec5 	bl	23cb0 <_lseek_r>
   20f26:	1c43      	adds	r3, r0, #1
   20f28:	89a3      	ldrh	r3, [r4, #12]
   20f2a:	bf15      	itete	ne
   20f2c:	6560      	strne	r0, [r4, #84]	; 0x54
   20f2e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   20f32:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   20f36:	81a3      	strheq	r3, [r4, #12]
   20f38:	bf18      	it	ne
   20f3a:	81a3      	strhne	r3, [r4, #12]
   20f3c:	bd10      	pop	{r4, pc}

00020f3e <__sclose>:
__sclose():
   20f3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   20f42:	f001 bbb5 	b.w	226b0 <_close_r>

00020f46 <strcasecmp>:
strcasecmp():
   20f46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   20f48:	4606      	mov	r6, r0
   20f4a:	460f      	mov	r7, r1
   20f4c:	f816 4b01 	ldrb.w	r4, [r6], #1
   20f50:	f7fe f9ea 	bl	1f328 <__locale_ctype_ptr>
   20f54:	4420      	add	r0, r4
   20f56:	7843      	ldrb	r3, [r0, #1]
   20f58:	f817 5b01 	ldrb.w	r5, [r7], #1
   20f5c:	f003 0303 	and.w	r3, r3, #3
   20f60:	2b01      	cmp	r3, #1
   20f62:	bf08      	it	eq
   20f64:	3420      	addeq	r4, #32
   20f66:	f7fe f9df 	bl	1f328 <__locale_ctype_ptr>
   20f6a:	4428      	add	r0, r5
   20f6c:	7843      	ldrb	r3, [r0, #1]
   20f6e:	f003 0303 	and.w	r3, r3, #3
   20f72:	2b01      	cmp	r3, #1
   20f74:	bf08      	it	eq
   20f76:	3520      	addeq	r5, #32
   20f78:	1b60      	subs	r0, r4, r5
   20f7a:	d101      	bne.n	20f80 <strcasecmp+0x3a>
   20f7c:	2d00      	cmp	r5, #0
   20f7e:	d1e5      	bne.n	20f4c <strcasecmp+0x6>
   20f80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00020f82 <strcat>:
strcat():
   20f82:	4602      	mov	r2, r0
   20f84:	b510      	push	{r4, lr}
   20f86:	4613      	mov	r3, r2
   20f88:	781c      	ldrb	r4, [r3, #0]
   20f8a:	3201      	adds	r2, #1
   20f8c:	2c00      	cmp	r4, #0
   20f8e:	d1fa      	bne.n	20f86 <strcat+0x4>
   20f90:	3b01      	subs	r3, #1
   20f92:	f811 2b01 	ldrb.w	r2, [r1], #1
   20f96:	f803 2f01 	strb.w	r2, [r3, #1]!
   20f9a:	2a00      	cmp	r2, #0
   20f9c:	d1f9      	bne.n	20f92 <strcat+0x10>
   20f9e:	bd10      	pop	{r4, pc}

00020fa0 <strchr>:
strchr():
   20fa0:	b2c9      	uxtb	r1, r1
   20fa2:	4603      	mov	r3, r0
   20fa4:	f810 2b01 	ldrb.w	r2, [r0], #1
   20fa8:	b11a      	cbz	r2, 20fb2 <strchr+0x12>
   20faa:	4291      	cmp	r1, r2
   20fac:	d1f9      	bne.n	20fa2 <strchr+0x2>
   20fae:	4618      	mov	r0, r3
   20fb0:	4770      	bx	lr
   20fb2:	2900      	cmp	r1, #0
   20fb4:	bf0c      	ite	eq
   20fb6:	4618      	moveq	r0, r3
   20fb8:	2000      	movne	r0, #0
   20fba:	4770      	bx	lr

00020fbc <strcmp>:
strcmp():
   20fbc:	f810 2b01 	ldrb.w	r2, [r0], #1
   20fc0:	f811 3b01 	ldrb.w	r3, [r1], #1
   20fc4:	2a01      	cmp	r2, #1
   20fc6:	bf28      	it	cs
   20fc8:	429a      	cmpcs	r2, r3
   20fca:	d0f7      	beq.n	20fbc <strcmp>
   20fcc:	1ad0      	subs	r0, r2, r3
   20fce:	4770      	bx	lr

00020fd0 <strcpy>:
strcpy():
   20fd0:	4603      	mov	r3, r0
   20fd2:	f811 2b01 	ldrb.w	r2, [r1], #1
   20fd6:	f803 2b01 	strb.w	r2, [r3], #1
   20fda:	2a00      	cmp	r2, #0
   20fdc:	d1f9      	bne.n	20fd2 <strcpy+0x2>
   20fde:	4770      	bx	lr

00020fe0 <strlen>:
strlen():
   20fe0:	4603      	mov	r3, r0
   20fe2:	f813 2b01 	ldrb.w	r2, [r3], #1
   20fe6:	2a00      	cmp	r2, #0
   20fe8:	d1fb      	bne.n	20fe2 <strlen+0x2>
   20fea:	1a18      	subs	r0, r3, r0
   20fec:	3801      	subs	r0, #1
   20fee:	4770      	bx	lr

00020ff0 <strncasecmp>:
strncasecmp():
   20ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20ff4:	4606      	mov	r6, r0
   20ff6:	460f      	mov	r7, r1
   20ff8:	eb00 0802 	add.w	r8, r0, r2
   20ffc:	4546      	cmp	r6, r8
   20ffe:	d019      	beq.n	21034 <strncasecmp+0x44>
   21000:	f816 4b01 	ldrb.w	r4, [r6], #1
   21004:	f7fe f990 	bl	1f328 <__locale_ctype_ptr>
   21008:	4420      	add	r0, r4
   2100a:	7843      	ldrb	r3, [r0, #1]
   2100c:	f817 5b01 	ldrb.w	r5, [r7], #1
   21010:	f003 0303 	and.w	r3, r3, #3
   21014:	2b01      	cmp	r3, #1
   21016:	bf08      	it	eq
   21018:	3420      	addeq	r4, #32
   2101a:	f7fe f985 	bl	1f328 <__locale_ctype_ptr>
   2101e:	4428      	add	r0, r5
   21020:	7843      	ldrb	r3, [r0, #1]
   21022:	f003 0303 	and.w	r3, r3, #3
   21026:	2b01      	cmp	r3, #1
   21028:	bf08      	it	eq
   2102a:	3520      	addeq	r5, #32
   2102c:	1b60      	subs	r0, r4, r5
   2102e:	d104      	bne.n	2103a <strncasecmp+0x4a>
   21030:	2d00      	cmp	r5, #0
   21032:	d1e3      	bne.n	20ffc <strncasecmp+0xc>
   21034:	2000      	movs	r0, #0
   21036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2103a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0002103e <strncmp>:
strncmp():
   2103e:	b510      	push	{r4, lr}
   21040:	b16a      	cbz	r2, 2105e <strncmp+0x20>
   21042:	3901      	subs	r1, #1
   21044:	1884      	adds	r4, r0, r2
   21046:	f810 3b01 	ldrb.w	r3, [r0], #1
   2104a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   2104e:	4293      	cmp	r3, r2
   21050:	d103      	bne.n	2105a <strncmp+0x1c>
   21052:	42a0      	cmp	r0, r4
   21054:	d001      	beq.n	2105a <strncmp+0x1c>
   21056:	2b00      	cmp	r3, #0
   21058:	d1f5      	bne.n	21046 <strncmp+0x8>
   2105a:	1a98      	subs	r0, r3, r2
   2105c:	bd10      	pop	{r4, pc}
   2105e:	4610      	mov	r0, r2
   21060:	bd10      	pop	{r4, pc}

00021062 <strncpy>:
strncpy():
   21062:	b570      	push	{r4, r5, r6, lr}
   21064:	4604      	mov	r4, r0
   21066:	b902      	cbnz	r2, 2106a <strncpy+0x8>
   21068:	bd70      	pop	{r4, r5, r6, pc}
   2106a:	4623      	mov	r3, r4
   2106c:	f811 5b01 	ldrb.w	r5, [r1], #1
   21070:	1e56      	subs	r6, r2, #1
   21072:	f803 5b01 	strb.w	r5, [r3], #1
   21076:	b91d      	cbnz	r5, 21080 <strncpy+0x1e>
   21078:	4414      	add	r4, r2
   2107a:	42a3      	cmp	r3, r4
   2107c:	d103      	bne.n	21086 <strncpy+0x24>
   2107e:	bd70      	pop	{r4, r5, r6, pc}
   21080:	461c      	mov	r4, r3
   21082:	4632      	mov	r2, r6
   21084:	e7ef      	b.n	21066 <strncpy+0x4>
   21086:	f803 5b01 	strb.w	r5, [r3], #1
   2108a:	e7f6      	b.n	2107a <strncpy+0x18>

0002108c <strrchr>:
strrchr():
   2108c:	b538      	push	{r3, r4, r5, lr}
   2108e:	4603      	mov	r3, r0
   21090:	460d      	mov	r5, r1
   21092:	b151      	cbz	r1, 210aa <strrchr+0x1e>
   21094:	2400      	movs	r4, #0
   21096:	4629      	mov	r1, r5
   21098:	4618      	mov	r0, r3
   2109a:	f7ff ff81 	bl	20fa0 <strchr>
   2109e:	b908      	cbnz	r0, 210a4 <strrchr+0x18>
   210a0:	4620      	mov	r0, r4
   210a2:	bd38      	pop	{r3, r4, r5, pc}
   210a4:	1c43      	adds	r3, r0, #1
   210a6:	4604      	mov	r4, r0
   210a8:	e7f5      	b.n	21096 <strrchr+0xa>
   210aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   210ae:	f7ff bf77 	b.w	20fa0 <strchr>

000210b2 <strstr>:
strstr():
   210b2:	b5f0      	push	{r4, r5, r6, r7, lr}
   210b4:	7803      	ldrb	r3, [r0, #0]
   210b6:	b133      	cbz	r3, 210c6 <strstr+0x14>
   210b8:	4603      	mov	r3, r0
   210ba:	4618      	mov	r0, r3
   210bc:	1c5e      	adds	r6, r3, #1
   210be:	781b      	ldrb	r3, [r3, #0]
   210c0:	b933      	cbnz	r3, 210d0 <strstr+0x1e>
   210c2:	4618      	mov	r0, r3
   210c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   210c6:	780b      	ldrb	r3, [r1, #0]
   210c8:	2b00      	cmp	r3, #0
   210ca:	bf18      	it	ne
   210cc:	2000      	movne	r0, #0
   210ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
   210d0:	1e4d      	subs	r5, r1, #1
   210d2:	1e44      	subs	r4, r0, #1
   210d4:	f815 2f01 	ldrb.w	r2, [r5, #1]!
   210d8:	2a00      	cmp	r2, #0
   210da:	d0f3      	beq.n	210c4 <strstr+0x12>
   210dc:	f814 7f01 	ldrb.w	r7, [r4, #1]!
   210e0:	4633      	mov	r3, r6
   210e2:	4297      	cmp	r7, r2
   210e4:	d0f6      	beq.n	210d4 <strstr+0x22>
   210e6:	e7e8      	b.n	210ba <strstr+0x8>

000210e8 <sulp>:
sulp():
   210e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   210ec:	460f      	mov	r7, r1
   210ee:	4690      	mov	r8, r2
   210f0:	f003 f8b0 	bl	24254 <__ulp>
   210f4:	4604      	mov	r4, r0
   210f6:	460d      	mov	r5, r1
   210f8:	f1b8 0f00 	cmp.w	r8, #0
   210fc:	d011      	beq.n	21122 <sulp+0x3a>
   210fe:	f3c7 530a 	ubfx	r3, r7, #20, #11
   21102:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   21106:	2b00      	cmp	r3, #0
   21108:	dd0b      	ble.n	21122 <sulp+0x3a>
   2110a:	2400      	movs	r4, #0
   2110c:	051b      	lsls	r3, r3, #20
   2110e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   21112:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   21116:	4622      	mov	r2, r4
   21118:	462b      	mov	r3, r5
   2111a:	f004 fa99 	bl	25650 <__aeabi_dmul>
   2111e:	4604      	mov	r4, r0
   21120:	460d      	mov	r5, r1
   21122:	4620      	mov	r0, r4
   21124:	4629      	mov	r1, r5
   21126:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2112a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
   2112e:	Address 0x000000000002112e is out of bounds.


00021130 <_strtod_l>:
_strtod_l():
   21130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21134:	4699      	mov	r9, r3
   21136:	2300      	movs	r3, #0
   21138:	b09f      	sub	sp, #124	; 0x7c
   2113a:	4680      	mov	r8, r0
   2113c:	4648      	mov	r0, r9
   2113e:	460c      	mov	r4, r1
   21140:	9215      	str	r2, [sp, #84]	; 0x54
   21142:	931a      	str	r3, [sp, #104]	; 0x68
   21144:	f002 fda4 	bl	23c90 <__localeconv_l>
   21148:	4607      	mov	r7, r0
   2114a:	6800      	ldr	r0, [r0, #0]
   2114c:	f7ff ff48 	bl	20fe0 <strlen>
   21150:	f04f 0a00 	mov.w	sl, #0
   21154:	4605      	mov	r5, r0
   21156:	f04f 0b00 	mov.w	fp, #0
   2115a:	9419      	str	r4, [sp, #100]	; 0x64
   2115c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2115e:	781a      	ldrb	r2, [r3, #0]
   21160:	2a0d      	cmp	r2, #13
   21162:	d833      	bhi.n	211cc <_strtod_l+0x9c>
   21164:	2a09      	cmp	r2, #9
   21166:	d237      	bcs.n	211d8 <_strtod_l+0xa8>
   21168:	2a00      	cmp	r2, #0
   2116a:	d03f      	beq.n	211ec <_strtod_l+0xbc>
   2116c:	2300      	movs	r3, #0
   2116e:	9309      	str	r3, [sp, #36]	; 0x24
   21170:	9e19      	ldr	r6, [sp, #100]	; 0x64
   21172:	7833      	ldrb	r3, [r6, #0]
   21174:	2b30      	cmp	r3, #48	; 0x30
   21176:	f040 8101 	bne.w	2137c <_strtod_l+0x24c>
   2117a:	7873      	ldrb	r3, [r6, #1]
   2117c:	2b58      	cmp	r3, #88	; 0x58
   2117e:	d001      	beq.n	21184 <_strtod_l+0x54>
   21180:	2b78      	cmp	r3, #120	; 0x78
   21182:	d16b      	bne.n	2125c <_strtod_l+0x12c>
   21184:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21186:	f8cd 9008 	str.w	r9, [sp, #8]
   2118a:	9301      	str	r3, [sp, #4]
   2118c:	ab1a      	add	r3, sp, #104	; 0x68
   2118e:	9300      	str	r3, [sp, #0]
   21190:	4aaa      	ldr	r2, [pc, #680]	; (2143c <_strtod_l+0x30c>)
   21192:	ab1b      	add	r3, sp, #108	; 0x6c
   21194:	a919      	add	r1, sp, #100	; 0x64
   21196:	4640      	mov	r0, r8
   21198:	f002 f9a0 	bl	234dc <__gethex>
   2119c:	f010 0407 	ands.w	r4, r0, #7
   211a0:	4605      	mov	r5, r0
   211a2:	d005      	beq.n	211b0 <_strtod_l+0x80>
   211a4:	2c06      	cmp	r4, #6
   211a6:	d12b      	bne.n	21200 <_strtod_l+0xd0>
   211a8:	2300      	movs	r3, #0
   211aa:	3601      	adds	r6, #1
   211ac:	9619      	str	r6, [sp, #100]	; 0x64
   211ae:	9309      	str	r3, [sp, #36]	; 0x24
   211b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   211b2:	2b00      	cmp	r3, #0
   211b4:	f040 859d 	bne.w	21cf2 <_strtod_l+0xbc2>
   211b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   211ba:	b1e3      	cbz	r3, 211f6 <_strtod_l+0xc6>
   211bc:	4652      	mov	r2, sl
   211be:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   211c2:	4610      	mov	r0, r2
   211c4:	4619      	mov	r1, r3
   211c6:	b01f      	add	sp, #124	; 0x7c
   211c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211cc:	2a2b      	cmp	r2, #43	; 0x2b
   211ce:	d006      	beq.n	211de <_strtod_l+0xae>
   211d0:	2a2d      	cmp	r2, #45	; 0x2d
   211d2:	d013      	beq.n	211fc <_strtod_l+0xcc>
   211d4:	2a20      	cmp	r2, #32
   211d6:	d1c9      	bne.n	2116c <_strtod_l+0x3c>
   211d8:	3301      	adds	r3, #1
   211da:	9319      	str	r3, [sp, #100]	; 0x64
   211dc:	e7be      	b.n	2115c <_strtod_l+0x2c>
   211de:	2200      	movs	r2, #0
   211e0:	9209      	str	r2, [sp, #36]	; 0x24
   211e2:	1c5a      	adds	r2, r3, #1
   211e4:	9219      	str	r2, [sp, #100]	; 0x64
   211e6:	785b      	ldrb	r3, [r3, #1]
   211e8:	2b00      	cmp	r3, #0
   211ea:	d1c1      	bne.n	21170 <_strtod_l+0x40>
   211ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
   211ee:	9419      	str	r4, [sp, #100]	; 0x64
   211f0:	2b00      	cmp	r3, #0
   211f2:	f040 857c 	bne.w	21cee <_strtod_l+0xbbe>
   211f6:	4652      	mov	r2, sl
   211f8:	465b      	mov	r3, fp
   211fa:	e7e2      	b.n	211c2 <_strtod_l+0x92>
   211fc:	2201      	movs	r2, #1
   211fe:	e7ef      	b.n	211e0 <_strtod_l+0xb0>
   21200:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   21202:	b13a      	cbz	r2, 21214 <_strtod_l+0xe4>
   21204:	2135      	movs	r1, #53	; 0x35
   21206:	a81c      	add	r0, sp, #112	; 0x70
   21208:	f003 f911 	bl	2442e <__copybits>
   2120c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2120e:	4640      	mov	r0, r8
   21210:	f002 fd94 	bl	23d3c <_Bfree>
   21214:	3c01      	subs	r4, #1
   21216:	2c04      	cmp	r4, #4
   21218:	d808      	bhi.n	2122c <_strtod_l+0xfc>
   2121a:	e8df f004 	tbb	[pc, r4]
   2121e:	030c      	.short	0x030c
   21220:	1a17      	.short	0x1a17
   21222:	0c          	.byte	0x0c
   21223:	00          	.byte	0x00
   21224:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   21228:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   2122c:	0729      	lsls	r1, r5, #28
   2122e:	d5bf      	bpl.n	211b0 <_strtod_l+0x80>
   21230:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   21234:	e7bc      	b.n	211b0 <_strtod_l+0x80>
   21236:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   21238:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   2123a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   2123e:	f202 4233 	addw	r2, r2, #1075	; 0x433
   21242:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   21246:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   2124a:	e7ef      	b.n	2122c <_strtod_l+0xfc>
   2124c:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 21448 <_strtod_l+0x318>
   21250:	e7ec      	b.n	2122c <_strtod_l+0xfc>
   21252:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   21256:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   2125a:	e7e7      	b.n	2122c <_strtod_l+0xfc>
   2125c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2125e:	1c5a      	adds	r2, r3, #1
   21260:	9219      	str	r2, [sp, #100]	; 0x64
   21262:	785b      	ldrb	r3, [r3, #1]
   21264:	2b30      	cmp	r3, #48	; 0x30
   21266:	d0f9      	beq.n	2125c <_strtod_l+0x12c>
   21268:	2b00      	cmp	r3, #0
   2126a:	d0a1      	beq.n	211b0 <_strtod_l+0x80>
   2126c:	2301      	movs	r3, #1
   2126e:	9308      	str	r3, [sp, #32]
   21270:	9b19      	ldr	r3, [sp, #100]	; 0x64
   21272:	220a      	movs	r2, #10
   21274:	930a      	str	r3, [sp, #40]	; 0x28
   21276:	2300      	movs	r3, #0
   21278:	9305      	str	r3, [sp, #20]
   2127a:	9306      	str	r3, [sp, #24]
   2127c:	9304      	str	r3, [sp, #16]
   2127e:	9819      	ldr	r0, [sp, #100]	; 0x64
   21280:	7806      	ldrb	r6, [r0, #0]
   21282:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   21286:	b2d9      	uxtb	r1, r3
   21288:	2909      	cmp	r1, #9
   2128a:	d979      	bls.n	21380 <_strtod_l+0x250>
   2128c:	462a      	mov	r2, r5
   2128e:	6839      	ldr	r1, [r7, #0]
   21290:	f7ff fed5 	bl	2103e <strncmp>
   21294:	2800      	cmp	r0, #0
   21296:	f000 8085 	beq.w	213a4 <_strtod_l+0x274>
   2129a:	2000      	movs	r0, #0
   2129c:	4633      	mov	r3, r6
   2129e:	4602      	mov	r2, r0
   212a0:	4601      	mov	r1, r0
   212a2:	9d04      	ldr	r5, [sp, #16]
   212a4:	2b65      	cmp	r3, #101	; 0x65
   212a6:	d002      	beq.n	212ae <_strtod_l+0x17e>
   212a8:	2b45      	cmp	r3, #69	; 0x45
   212aa:	f040 80ef 	bne.w	2148c <_strtod_l+0x35c>
   212ae:	b925      	cbnz	r5, 212ba <_strtod_l+0x18a>
   212b0:	b910      	cbnz	r0, 212b8 <_strtod_l+0x188>
   212b2:	9b08      	ldr	r3, [sp, #32]
   212b4:	2b00      	cmp	r3, #0
   212b6:	d099      	beq.n	211ec <_strtod_l+0xbc>
   212b8:	2500      	movs	r5, #0
   212ba:	9c19      	ldr	r4, [sp, #100]	; 0x64
   212bc:	1c63      	adds	r3, r4, #1
   212be:	9319      	str	r3, [sp, #100]	; 0x64
   212c0:	7863      	ldrb	r3, [r4, #1]
   212c2:	2b2b      	cmp	r3, #43	; 0x2b
   212c4:	f000 80cf 	beq.w	21466 <_strtod_l+0x336>
   212c8:	2b2d      	cmp	r3, #45	; 0x2d
   212ca:	f000 80d2 	beq.w	21472 <_strtod_l+0x342>
   212ce:	2600      	movs	r6, #0
   212d0:	9607      	str	r6, [sp, #28]
   212d2:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   212d6:	2e09      	cmp	r6, #9
   212d8:	f200 80d7 	bhi.w	2148a <_strtod_l+0x35a>
   212dc:	2b30      	cmp	r3, #48	; 0x30
   212de:	f000 80ca 	beq.w	21476 <_strtod_l+0x346>
   212e2:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   212e6:	2e08      	cmp	r6, #8
   212e8:	f200 80d0 	bhi.w	2148c <_strtod_l+0x35c>
   212ec:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   212f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
   212f2:	f04f 0c0a 	mov.w	ip, #10
   212f6:	461f      	mov	r7, r3
   212f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   212fa:	1c5e      	adds	r6, r3, #1
   212fc:	9619      	str	r6, [sp, #100]	; 0x64
   212fe:	785b      	ldrb	r3, [r3, #1]
   21300:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   21304:	f1b9 0f09 	cmp.w	r9, #9
   21308:	f240 80ba 	bls.w	21480 <_strtod_l+0x350>
   2130c:	1bf6      	subs	r6, r6, r7
   2130e:	2e08      	cmp	r6, #8
   21310:	f644 691f 	movw	r9, #19999	; 0x4e1f
   21314:	dc02      	bgt.n	2131c <_strtod_l+0x1ec>
   21316:	45f1      	cmp	r9, lr
   21318:	bfa8      	it	ge
   2131a:	46f1      	movge	r9, lr
   2131c:	9e07      	ldr	r6, [sp, #28]
   2131e:	b10e      	cbz	r6, 21324 <_strtod_l+0x1f4>
   21320:	f1c9 0900 	rsb	r9, r9, #0
   21324:	2d00      	cmp	r5, #0
   21326:	f040 80d7 	bne.w	214d8 <_strtod_l+0x3a8>
   2132a:	2800      	cmp	r0, #0
   2132c:	f47f af40 	bne.w	211b0 <_strtod_l+0x80>
   21330:	9a08      	ldr	r2, [sp, #32]
   21332:	2a00      	cmp	r2, #0
   21334:	f47f af3c 	bne.w	211b0 <_strtod_l+0x80>
   21338:	2900      	cmp	r1, #0
   2133a:	f47f af57 	bne.w	211ec <_strtod_l+0xbc>
   2133e:	2b4e      	cmp	r3, #78	; 0x4e
   21340:	f000 80ad 	beq.w	2149e <_strtod_l+0x36e>
   21344:	f300 80a5 	bgt.w	21492 <_strtod_l+0x362>
   21348:	2b49      	cmp	r3, #73	; 0x49
   2134a:	f47f af4f 	bne.w	211ec <_strtod_l+0xbc>
   2134e:	493c      	ldr	r1, [pc, #240]	; (21440 <_strtod_l+0x310>)
   21350:	a819      	add	r0, sp, #100	; 0x64
   21352:	f002 faf4 	bl	2393e <__match>
   21356:	2800      	cmp	r0, #0
   21358:	f43f af48 	beq.w	211ec <_strtod_l+0xbc>
   2135c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2135e:	4939      	ldr	r1, [pc, #228]	; (21444 <_strtod_l+0x314>)
   21360:	3b01      	subs	r3, #1
   21362:	a819      	add	r0, sp, #100	; 0x64
   21364:	9319      	str	r3, [sp, #100]	; 0x64
   21366:	f002 faea 	bl	2393e <__match>
   2136a:	b910      	cbnz	r0, 21372 <_strtod_l+0x242>
   2136c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2136e:	3301      	adds	r3, #1
   21370:	9319      	str	r3, [sp, #100]	; 0x64
   21372:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 21448 <_strtod_l+0x318>
   21376:	f04f 0a00 	mov.w	sl, #0
   2137a:	e719      	b.n	211b0 <_strtod_l+0x80>
   2137c:	2300      	movs	r3, #0
   2137e:	e776      	b.n	2126e <_strtod_l+0x13e>
   21380:	9904      	ldr	r1, [sp, #16]
   21382:	3001      	adds	r0, #1
   21384:	2908      	cmp	r1, #8
   21386:	bfd5      	itete	le
   21388:	9906      	ldrle	r1, [sp, #24]
   2138a:	9905      	ldrgt	r1, [sp, #20]
   2138c:	fb02 3301 	mlale	r3, r2, r1, r3
   21390:	fb02 3301 	mlagt	r3, r2, r1, r3
   21394:	bfd4      	ite	le
   21396:	9306      	strle	r3, [sp, #24]
   21398:	9305      	strgt	r3, [sp, #20]
   2139a:	9b04      	ldr	r3, [sp, #16]
   2139c:	9019      	str	r0, [sp, #100]	; 0x64
   2139e:	3301      	adds	r3, #1
   213a0:	9304      	str	r3, [sp, #16]
   213a2:	e76c      	b.n	2127e <_strtod_l+0x14e>
   213a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   213a6:	195a      	adds	r2, r3, r5
   213a8:	9219      	str	r2, [sp, #100]	; 0x64
   213aa:	9a04      	ldr	r2, [sp, #16]
   213ac:	5d5b      	ldrb	r3, [r3, r5]
   213ae:	2a00      	cmp	r2, #0
   213b0:	d154      	bne.n	2145c <_strtod_l+0x32c>
   213b2:	4610      	mov	r0, r2
   213b4:	2b30      	cmp	r3, #48	; 0x30
   213b6:	d02a      	beq.n	2140e <_strtod_l+0x2de>
   213b8:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   213bc:	2a08      	cmp	r2, #8
   213be:	f200 849d 	bhi.w	21cfc <_strtod_l+0xbcc>
   213c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   213c4:	920a      	str	r2, [sp, #40]	; 0x28
   213c6:	4602      	mov	r2, r0
   213c8:	2000      	movs	r0, #0
   213ca:	4605      	mov	r5, r0
   213cc:	3b30      	subs	r3, #48	; 0x30
   213ce:	f100 0101 	add.w	r1, r0, #1
   213d2:	d011      	beq.n	213f8 <_strtod_l+0x2c8>
   213d4:	440a      	add	r2, r1
   213d6:	260a      	movs	r6, #10
   213d8:	4629      	mov	r1, r5
   213da:	eb00 0c05 	add.w	ip, r0, r5
   213de:	4561      	cmp	r1, ip
   213e0:	d11b      	bne.n	2141a <_strtod_l+0x2ea>
   213e2:	4428      	add	r0, r5
   213e4:	2808      	cmp	r0, #8
   213e6:	f100 0501 	add.w	r5, r0, #1
   213ea:	dc2f      	bgt.n	2144c <_strtod_l+0x31c>
   213ec:	210a      	movs	r1, #10
   213ee:	9806      	ldr	r0, [sp, #24]
   213f0:	fb01 3300 	mla	r3, r1, r0, r3
   213f4:	9306      	str	r3, [sp, #24]
   213f6:	2100      	movs	r1, #0
   213f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   213fa:	1c58      	adds	r0, r3, #1
   213fc:	9019      	str	r0, [sp, #100]	; 0x64
   213fe:	4608      	mov	r0, r1
   21400:	785b      	ldrb	r3, [r3, #1]
   21402:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   21406:	2909      	cmp	r1, #9
   21408:	d9e0      	bls.n	213cc <_strtod_l+0x29c>
   2140a:	2101      	movs	r1, #1
   2140c:	e74a      	b.n	212a4 <_strtod_l+0x174>
   2140e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   21410:	3001      	adds	r0, #1
   21412:	1c5a      	adds	r2, r3, #1
   21414:	9219      	str	r2, [sp, #100]	; 0x64
   21416:	785b      	ldrb	r3, [r3, #1]
   21418:	e7cc      	b.n	213b4 <_strtod_l+0x284>
   2141a:	3101      	adds	r1, #1
   2141c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   21420:	f1be 0f08 	cmp.w	lr, #8
   21424:	dc03      	bgt.n	2142e <_strtod_l+0x2fe>
   21426:	9f06      	ldr	r7, [sp, #24]
   21428:	4377      	muls	r7, r6
   2142a:	9706      	str	r7, [sp, #24]
   2142c:	e7d7      	b.n	213de <_strtod_l+0x2ae>
   2142e:	2910      	cmp	r1, #16
   21430:	bfde      	ittt	le
   21432:	9f05      	ldrle	r7, [sp, #20]
   21434:	4377      	mulle	r7, r6
   21436:	9705      	strle	r7, [sp, #20]
   21438:	e7d1      	b.n	213de <_strtod_l+0x2ae>
   2143a:	bf00      	nop
   2143c:	00028e6c 	.word	0x00028e6c
   21440:	00028e39 	.word	0x00028e39
   21444:	00029059 	.word	0x00029059
   21448:	7ff00000 	.word	0x7ff00000
   2144c:	2d10      	cmp	r5, #16
   2144e:	bfdf      	itttt	le
   21450:	210a      	movle	r1, #10
   21452:	9805      	ldrle	r0, [sp, #20]
   21454:	fb01 3300 	mlale	r3, r1, r0, r3
   21458:	9305      	strle	r3, [sp, #20]
   2145a:	e7cc      	b.n	213f6 <_strtod_l+0x2c6>
   2145c:	4602      	mov	r2, r0
   2145e:	9d04      	ldr	r5, [sp, #16]
   21460:	e7cf      	b.n	21402 <_strtod_l+0x2d2>
   21462:	2101      	movs	r1, #1
   21464:	e724      	b.n	212b0 <_strtod_l+0x180>
   21466:	2300      	movs	r3, #0
   21468:	9307      	str	r3, [sp, #28]
   2146a:	1ca3      	adds	r3, r4, #2
   2146c:	9319      	str	r3, [sp, #100]	; 0x64
   2146e:	78a3      	ldrb	r3, [r4, #2]
   21470:	e72f      	b.n	212d2 <_strtod_l+0x1a2>
   21472:	2301      	movs	r3, #1
   21474:	e7f8      	b.n	21468 <_strtod_l+0x338>
   21476:	9b19      	ldr	r3, [sp, #100]	; 0x64
   21478:	1c5e      	adds	r6, r3, #1
   2147a:	9619      	str	r6, [sp, #100]	; 0x64
   2147c:	785b      	ldrb	r3, [r3, #1]
   2147e:	e72d      	b.n	212dc <_strtod_l+0x1ac>
   21480:	fb0c 3e0e 	mla	lr, ip, lr, r3
   21484:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   21488:	e736      	b.n	212f8 <_strtod_l+0x1c8>
   2148a:	9419      	str	r4, [sp, #100]	; 0x64
   2148c:	f04f 0900 	mov.w	r9, #0
   21490:	e748      	b.n	21324 <_strtod_l+0x1f4>
   21492:	2b69      	cmp	r3, #105	; 0x69
   21494:	f43f af5b 	beq.w	2134e <_strtod_l+0x21e>
   21498:	2b6e      	cmp	r3, #110	; 0x6e
   2149a:	f47f aea7 	bne.w	211ec <_strtod_l+0xbc>
   2149e:	498c      	ldr	r1, [pc, #560]	; (216d0 <_strtod_l+0x5a0>)
   214a0:	a819      	add	r0, sp, #100	; 0x64
   214a2:	f002 fa4c 	bl	2393e <__match>
   214a6:	2800      	cmp	r0, #0
   214a8:	f43f aea0 	beq.w	211ec <_strtod_l+0xbc>
   214ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
   214ae:	781b      	ldrb	r3, [r3, #0]
   214b0:	2b28      	cmp	r3, #40	; 0x28
   214b2:	d10e      	bne.n	214d2 <_strtod_l+0x3a2>
   214b4:	aa1c      	add	r2, sp, #112	; 0x70
   214b6:	4987      	ldr	r1, [pc, #540]	; (216d4 <_strtod_l+0x5a4>)
   214b8:	a819      	add	r0, sp, #100	; 0x64
   214ba:	f002 fa53 	bl	23964 <__hexnan>
   214be:	2805      	cmp	r0, #5
   214c0:	d107      	bne.n	214d2 <_strtod_l+0x3a2>
   214c2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   214c4:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   214c8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   214cc:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   214d0:	e66e      	b.n	211b0 <_strtod_l+0x80>
   214d2:	f8df b210 	ldr.w	fp, [pc, #528]	; 216e4 <_strtod_l+0x5b4>
   214d6:	e74e      	b.n	21376 <_strtod_l+0x246>
   214d8:	9b04      	ldr	r3, [sp, #16]
   214da:	462c      	mov	r4, r5
   214dc:	2b00      	cmp	r3, #0
   214de:	bf08      	it	eq
   214e0:	462b      	moveq	r3, r5
   214e2:	2d10      	cmp	r5, #16
   214e4:	bfa8      	it	ge
   214e6:	2410      	movge	r4, #16
   214e8:	9806      	ldr	r0, [sp, #24]
   214ea:	eba9 0902 	sub.w	r9, r9, r2
   214ee:	9304      	str	r3, [sp, #16]
   214f0:	f7fc fcec 	bl	1decc <__aeabi_ui2d>
   214f4:	2c09      	cmp	r4, #9
   214f6:	4682      	mov	sl, r0
   214f8:	468b      	mov	fp, r1
   214fa:	dd13      	ble.n	21524 <_strtod_l+0x3f4>
   214fc:	4b76      	ldr	r3, [pc, #472]	; (216d8 <_strtod_l+0x5a8>)
   214fe:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   21502:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   21506:	f004 f8a3 	bl	25650 <__aeabi_dmul>
   2150a:	4606      	mov	r6, r0
   2150c:	9805      	ldr	r0, [sp, #20]
   2150e:	460f      	mov	r7, r1
   21510:	f7fc fcdc 	bl	1decc <__aeabi_ui2d>
   21514:	4602      	mov	r2, r0
   21516:	460b      	mov	r3, r1
   21518:	4630      	mov	r0, r6
   2151a:	4639      	mov	r1, r7
   2151c:	f7fc fb9a 	bl	1dc54 <__adddf3>
   21520:	4682      	mov	sl, r0
   21522:	468b      	mov	fp, r1
   21524:	2d0f      	cmp	r5, #15
   21526:	dc36      	bgt.n	21596 <_strtod_l+0x466>
   21528:	f1b9 0f00 	cmp.w	r9, #0
   2152c:	f43f ae40 	beq.w	211b0 <_strtod_l+0x80>
   21530:	dd24      	ble.n	2157c <_strtod_l+0x44c>
   21532:	f1b9 0f16 	cmp.w	r9, #22
   21536:	dc0b      	bgt.n	21550 <_strtod_l+0x420>
   21538:	4652      	mov	r2, sl
   2153a:	465b      	mov	r3, fp
   2153c:	4d66      	ldr	r5, [pc, #408]	; (216d8 <_strtod_l+0x5a8>)
   2153e:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   21542:	e9d9 0100 	ldrd	r0, r1, [r9]
   21546:	f004 f883 	bl	25650 <__aeabi_dmul>
   2154a:	4682      	mov	sl, r0
   2154c:	468b      	mov	fp, r1
   2154e:	e62f      	b.n	211b0 <_strtod_l+0x80>
   21550:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   21554:	4599      	cmp	r9, r3
   21556:	dc1e      	bgt.n	21596 <_strtod_l+0x466>
   21558:	4c5f      	ldr	r4, [pc, #380]	; (216d8 <_strtod_l+0x5a8>)
   2155a:	f1c5 050f 	rsb	r5, r5, #15
   2155e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   21562:	eba9 0505 	sub.w	r5, r9, r5
   21566:	4652      	mov	r2, sl
   21568:	e9d1 0100 	ldrd	r0, r1, [r1]
   2156c:	465b      	mov	r3, fp
   2156e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   21572:	f004 f86d 	bl	25650 <__aeabi_dmul>
   21576:	e9d4 2300 	ldrd	r2, r3, [r4]
   2157a:	e7e4      	b.n	21546 <_strtod_l+0x416>
   2157c:	f119 0f16 	cmn.w	r9, #22
   21580:	db09      	blt.n	21596 <_strtod_l+0x466>
   21582:	4d55      	ldr	r5, [pc, #340]	; (216d8 <_strtod_l+0x5a8>)
   21584:	4650      	mov	r0, sl
   21586:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   2158a:	e9d9 2300 	ldrd	r2, r3, [r9]
   2158e:	4659      	mov	r1, fp
   21590:	f004 f988 	bl	258a4 <__aeabi_ddiv>
   21594:	e7d9      	b.n	2154a <_strtod_l+0x41a>
   21596:	1b2c      	subs	r4, r5, r4
   21598:	444c      	add	r4, r9
   2159a:	2c00      	cmp	r4, #0
   2159c:	dd73      	ble.n	21686 <_strtod_l+0x556>
   2159e:	f014 030f 	ands.w	r3, r4, #15
   215a2:	d00a      	beq.n	215ba <_strtod_l+0x48a>
   215a4:	494c      	ldr	r1, [pc, #304]	; (216d8 <_strtod_l+0x5a8>)
   215a6:	4652      	mov	r2, sl
   215a8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   215ac:	e9d1 0100 	ldrd	r0, r1, [r1]
   215b0:	465b      	mov	r3, fp
   215b2:	f004 f84d 	bl	25650 <__aeabi_dmul>
   215b6:	4682      	mov	sl, r0
   215b8:	468b      	mov	fp, r1
   215ba:	f034 040f 	bics.w	r4, r4, #15
   215be:	d054      	beq.n	2166a <_strtod_l+0x53a>
   215c0:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   215c4:	dd27      	ble.n	21616 <_strtod_l+0x4e6>
   215c6:	f04f 0900 	mov.w	r9, #0
   215ca:	f8cd 9010 	str.w	r9, [sp, #16]
   215ce:	f8cd 901c 	str.w	r9, [sp, #28]
   215d2:	f8cd 9018 	str.w	r9, [sp, #24]
   215d6:	2322      	movs	r3, #34	; 0x22
   215d8:	f04f 0a00 	mov.w	sl, #0
   215dc:	f8df b108 	ldr.w	fp, [pc, #264]	; 216e8 <_strtod_l+0x5b8>
   215e0:	f8c8 3000 	str.w	r3, [r8]
   215e4:	9b07      	ldr	r3, [sp, #28]
   215e6:	2b00      	cmp	r3, #0
   215e8:	f43f ade2 	beq.w	211b0 <_strtod_l+0x80>
   215ec:	991a      	ldr	r1, [sp, #104]	; 0x68
   215ee:	4640      	mov	r0, r8
   215f0:	f002 fba4 	bl	23d3c <_Bfree>
   215f4:	9906      	ldr	r1, [sp, #24]
   215f6:	4640      	mov	r0, r8
   215f8:	f002 fba0 	bl	23d3c <_Bfree>
   215fc:	9904      	ldr	r1, [sp, #16]
   215fe:	4640      	mov	r0, r8
   21600:	f002 fb9c 	bl	23d3c <_Bfree>
   21604:	9907      	ldr	r1, [sp, #28]
   21606:	4640      	mov	r0, r8
   21608:	f002 fb98 	bl	23d3c <_Bfree>
   2160c:	4649      	mov	r1, r9
   2160e:	4640      	mov	r0, r8
   21610:	f002 fb94 	bl	23d3c <_Bfree>
   21614:	e5cc      	b.n	211b0 <_strtod_l+0x80>
   21616:	2300      	movs	r3, #0
   21618:	4650      	mov	r0, sl
   2161a:	4659      	mov	r1, fp
   2161c:	461f      	mov	r7, r3
   2161e:	4e2f      	ldr	r6, [pc, #188]	; (216dc <_strtod_l+0x5ac>)
   21620:	1124      	asrs	r4, r4, #4
   21622:	2c01      	cmp	r4, #1
   21624:	dc24      	bgt.n	21670 <_strtod_l+0x540>
   21626:	b10b      	cbz	r3, 2162c <_strtod_l+0x4fc>
   21628:	4682      	mov	sl, r0
   2162a:	468b      	mov	fp, r1
   2162c:	4b2b      	ldr	r3, [pc, #172]	; (216dc <_strtod_l+0x5ac>)
   2162e:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   21632:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   21636:	4652      	mov	r2, sl
   21638:	e9d7 0100 	ldrd	r0, r1, [r7]
   2163c:	465b      	mov	r3, fp
   2163e:	f004 f807 	bl	25650 <__aeabi_dmul>
   21642:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   21646:	468b      	mov	fp, r1
   21648:	460a      	mov	r2, r1
   2164a:	0d1b      	lsrs	r3, r3, #20
   2164c:	4924      	ldr	r1, [pc, #144]	; (216e0 <_strtod_l+0x5b0>)
   2164e:	051b      	lsls	r3, r3, #20
   21650:	428b      	cmp	r3, r1
   21652:	4682      	mov	sl, r0
   21654:	d8b7      	bhi.n	215c6 <_strtod_l+0x496>
   21656:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   2165a:	428b      	cmp	r3, r1
   2165c:	bf86      	itte	hi
   2165e:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   21662:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 216ec <_strtod_l+0x5bc>
   21666:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   2166a:	2300      	movs	r3, #0
   2166c:	9305      	str	r3, [sp, #20]
   2166e:	e070      	b.n	21752 <_strtod_l+0x622>
   21670:	07e2      	lsls	r2, r4, #31
   21672:	d504      	bpl.n	2167e <_strtod_l+0x54e>
   21674:	e9d6 2300 	ldrd	r2, r3, [r6]
   21678:	f003 ffea 	bl	25650 <__aeabi_dmul>
   2167c:	2301      	movs	r3, #1
   2167e:	3701      	adds	r7, #1
   21680:	1064      	asrs	r4, r4, #1
   21682:	3608      	adds	r6, #8
   21684:	e7cd      	b.n	21622 <_strtod_l+0x4f2>
   21686:	d0f0      	beq.n	2166a <_strtod_l+0x53a>
   21688:	4264      	negs	r4, r4
   2168a:	f014 020f 	ands.w	r2, r4, #15
   2168e:	d00a      	beq.n	216a6 <_strtod_l+0x576>
   21690:	4b11      	ldr	r3, [pc, #68]	; (216d8 <_strtod_l+0x5a8>)
   21692:	4650      	mov	r0, sl
   21694:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   21698:	4659      	mov	r1, fp
   2169a:	e9d3 2300 	ldrd	r2, r3, [r3]
   2169e:	f004 f901 	bl	258a4 <__aeabi_ddiv>
   216a2:	4682      	mov	sl, r0
   216a4:	468b      	mov	fp, r1
   216a6:	1124      	asrs	r4, r4, #4
   216a8:	d0df      	beq.n	2166a <_strtod_l+0x53a>
   216aa:	2c1f      	cmp	r4, #31
   216ac:	dd20      	ble.n	216f0 <_strtod_l+0x5c0>
   216ae:	f04f 0900 	mov.w	r9, #0
   216b2:	f8cd 9010 	str.w	r9, [sp, #16]
   216b6:	f8cd 901c 	str.w	r9, [sp, #28]
   216ba:	f8cd 9018 	str.w	r9, [sp, #24]
   216be:	2322      	movs	r3, #34	; 0x22
   216c0:	f04f 0a00 	mov.w	sl, #0
   216c4:	f04f 0b00 	mov.w	fp, #0
   216c8:	f8c8 3000 	str.w	r3, [r8]
   216cc:	e78a      	b.n	215e4 <_strtod_l+0x4b4>
   216ce:	bf00      	nop
   216d0:	00028e41 	.word	0x00028e41
   216d4:	00028e80 	.word	0x00028e80
   216d8:	00029090 	.word	0x00029090
   216dc:	00029068 	.word	0x00029068
   216e0:	7ca00000 	.word	0x7ca00000
   216e4:	fff80000 	.word	0xfff80000
   216e8:	7ff00000 	.word	0x7ff00000
   216ec:	7fefffff 	.word	0x7fefffff
   216f0:	f014 0310 	ands.w	r3, r4, #16
   216f4:	bf18      	it	ne
   216f6:	236a      	movne	r3, #106	; 0x6a
   216f8:	4650      	mov	r0, sl
   216fa:	9305      	str	r3, [sp, #20]
   216fc:	4659      	mov	r1, fp
   216fe:	2300      	movs	r3, #0
   21700:	4e9f      	ldr	r6, [pc, #636]	; (21980 <_strtod_l+0x850>)
   21702:	2c00      	cmp	r4, #0
   21704:	f300 8109 	bgt.w	2191a <_strtod_l+0x7ea>
   21708:	b10b      	cbz	r3, 2170e <_strtod_l+0x5de>
   2170a:	4682      	mov	sl, r0
   2170c:	468b      	mov	fp, r1
   2170e:	9b05      	ldr	r3, [sp, #20]
   21710:	b1bb      	cbz	r3, 21742 <_strtod_l+0x612>
   21712:	f3cb 530a 	ubfx	r3, fp, #20, #11
   21716:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   2171a:	2b00      	cmp	r3, #0
   2171c:	4659      	mov	r1, fp
   2171e:	dd10      	ble.n	21742 <_strtod_l+0x612>
   21720:	2b1f      	cmp	r3, #31
   21722:	f340 8104 	ble.w	2192e <_strtod_l+0x7fe>
   21726:	2b34      	cmp	r3, #52	; 0x34
   21728:	bfd8      	it	le
   2172a:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   2172e:	f04f 0a00 	mov.w	sl, #0
   21732:	bfcf      	iteee	gt
   21734:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   21738:	3b20      	suble	r3, #32
   2173a:	fa02 f303 	lslle.w	r3, r2, r3
   2173e:	ea03 0b01 	andle.w	fp, r3, r1
   21742:	2200      	movs	r2, #0
   21744:	2300      	movs	r3, #0
   21746:	4650      	mov	r0, sl
   21748:	4659      	mov	r1, fp
   2174a:	f004 f9e9 	bl	25b20 <__aeabi_dcmpeq>
   2174e:	2800      	cmp	r0, #0
   21750:	d1ad      	bne.n	216ae <_strtod_l+0x57e>
   21752:	9b06      	ldr	r3, [sp, #24]
   21754:	9a04      	ldr	r2, [sp, #16]
   21756:	9300      	str	r3, [sp, #0]
   21758:	990a      	ldr	r1, [sp, #40]	; 0x28
   2175a:	462b      	mov	r3, r5
   2175c:	4640      	mov	r0, r8
   2175e:	f002 fb3f 	bl	23de0 <__s2b>
   21762:	9007      	str	r0, [sp, #28]
   21764:	2800      	cmp	r0, #0
   21766:	f43f af2e 	beq.w	215c6 <_strtod_l+0x496>
   2176a:	f1b9 0f00 	cmp.w	r9, #0
   2176e:	f1c9 0300 	rsb	r3, r9, #0
   21772:	bfa8      	it	ge
   21774:	2300      	movge	r3, #0
   21776:	930e      	str	r3, [sp, #56]	; 0x38
   21778:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   2177c:	f04f 0900 	mov.w	r9, #0
   21780:	930f      	str	r3, [sp, #60]	; 0x3c
   21782:	f8cd 9010 	str.w	r9, [sp, #16]
   21786:	9b07      	ldr	r3, [sp, #28]
   21788:	4640      	mov	r0, r8
   2178a:	6859      	ldr	r1, [r3, #4]
   2178c:	f002 faa2 	bl	23cd4 <_Balloc>
   21790:	9006      	str	r0, [sp, #24]
   21792:	2800      	cmp	r0, #0
   21794:	f43f af1f 	beq.w	215d6 <_strtod_l+0x4a6>
   21798:	9b07      	ldr	r3, [sp, #28]
   2179a:	300c      	adds	r0, #12
   2179c:	691a      	ldr	r2, [r3, #16]
   2179e:	f103 010c 	add.w	r1, r3, #12
   217a2:	3202      	adds	r2, #2
   217a4:	0092      	lsls	r2, r2, #2
   217a6:	f7fd fe70 	bl	1f48a <memcpy>
   217aa:	ab1c      	add	r3, sp, #112	; 0x70
   217ac:	9301      	str	r3, [sp, #4]
   217ae:	ab1b      	add	r3, sp, #108	; 0x6c
   217b0:	9300      	str	r3, [sp, #0]
   217b2:	4652      	mov	r2, sl
   217b4:	465b      	mov	r3, fp
   217b6:	4640      	mov	r0, r8
   217b8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   217bc:	f002 fdc0 	bl	24340 <__d2b>
   217c0:	901a      	str	r0, [sp, #104]	; 0x68
   217c2:	2800      	cmp	r0, #0
   217c4:	f43f af07 	beq.w	215d6 <_strtod_l+0x4a6>
   217c8:	2101      	movs	r1, #1
   217ca:	4640      	mov	r0, r8
   217cc:	f002 fb94 	bl	23ef8 <__i2b>
   217d0:	9004      	str	r0, [sp, #16]
   217d2:	4603      	mov	r3, r0
   217d4:	2800      	cmp	r0, #0
   217d6:	f43f aefe 	beq.w	215d6 <_strtod_l+0x4a6>
   217da:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   217dc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   217de:	2d00      	cmp	r5, #0
   217e0:	bfab      	itete	ge
   217e2:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   217e4:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   217e6:	195e      	addge	r6, r3, r5
   217e8:	1b5c      	sublt	r4, r3, r5
   217ea:	9b05      	ldr	r3, [sp, #20]
   217ec:	bfa8      	it	ge
   217ee:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   217f0:	eba5 0503 	sub.w	r5, r5, r3
   217f4:	4415      	add	r5, r2
   217f6:	4b63      	ldr	r3, [pc, #396]	; (21984 <_strtod_l+0x854>)
   217f8:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   217fc:	bfb8      	it	lt
   217fe:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   21800:	429d      	cmp	r5, r3
   21802:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   21806:	f280 80a4 	bge.w	21952 <_strtod_l+0x822>
   2180a:	1b5b      	subs	r3, r3, r5
   2180c:	2b1f      	cmp	r3, #31
   2180e:	eba2 0203 	sub.w	r2, r2, r3
   21812:	f04f 0701 	mov.w	r7, #1
   21816:	f300 8091 	bgt.w	2193c <_strtod_l+0x80c>
   2181a:	2500      	movs	r5, #0
   2181c:	fa07 f303 	lsl.w	r3, r7, r3
   21820:	9314      	str	r3, [sp, #80]	; 0x50
   21822:	18b7      	adds	r7, r6, r2
   21824:	9b05      	ldr	r3, [sp, #20]
   21826:	42be      	cmp	r6, r7
   21828:	4414      	add	r4, r2
   2182a:	441c      	add	r4, r3
   2182c:	4633      	mov	r3, r6
   2182e:	bfa8      	it	ge
   21830:	463b      	movge	r3, r7
   21832:	42a3      	cmp	r3, r4
   21834:	bfa8      	it	ge
   21836:	4623      	movge	r3, r4
   21838:	2b00      	cmp	r3, #0
   2183a:	bfc2      	ittt	gt
   2183c:	1aff      	subgt	r7, r7, r3
   2183e:	1ae4      	subgt	r4, r4, r3
   21840:	1af6      	subgt	r6, r6, r3
   21842:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   21844:	b1bb      	cbz	r3, 21876 <_strtod_l+0x746>
   21846:	461a      	mov	r2, r3
   21848:	9904      	ldr	r1, [sp, #16]
   2184a:	4640      	mov	r0, r8
   2184c:	f002 fbea 	bl	24024 <__pow5mult>
   21850:	9004      	str	r0, [sp, #16]
   21852:	2800      	cmp	r0, #0
   21854:	f43f aebf 	beq.w	215d6 <_strtod_l+0x4a6>
   21858:	4601      	mov	r1, r0
   2185a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   2185c:	4640      	mov	r0, r8
   2185e:	f002 fb54 	bl	23f0a <__multiply>
   21862:	9008      	str	r0, [sp, #32]
   21864:	2800      	cmp	r0, #0
   21866:	f43f aeb6 	beq.w	215d6 <_strtod_l+0x4a6>
   2186a:	991a      	ldr	r1, [sp, #104]	; 0x68
   2186c:	4640      	mov	r0, r8
   2186e:	f002 fa65 	bl	23d3c <_Bfree>
   21872:	9b08      	ldr	r3, [sp, #32]
   21874:	931a      	str	r3, [sp, #104]	; 0x68
   21876:	2f00      	cmp	r7, #0
   21878:	dc6f      	bgt.n	2195a <_strtod_l+0x82a>
   2187a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   2187c:	2b00      	cmp	r3, #0
   2187e:	d175      	bne.n	2196c <_strtod_l+0x83c>
   21880:	2c00      	cmp	r4, #0
   21882:	dd08      	ble.n	21896 <_strtod_l+0x766>
   21884:	4622      	mov	r2, r4
   21886:	9906      	ldr	r1, [sp, #24]
   21888:	4640      	mov	r0, r8
   2188a:	f002 fc19 	bl	240c0 <__lshift>
   2188e:	9006      	str	r0, [sp, #24]
   21890:	2800      	cmp	r0, #0
   21892:	f43f aea0 	beq.w	215d6 <_strtod_l+0x4a6>
   21896:	2e00      	cmp	r6, #0
   21898:	dd08      	ble.n	218ac <_strtod_l+0x77c>
   2189a:	4632      	mov	r2, r6
   2189c:	9904      	ldr	r1, [sp, #16]
   2189e:	4640      	mov	r0, r8
   218a0:	f002 fc0e 	bl	240c0 <__lshift>
   218a4:	9004      	str	r0, [sp, #16]
   218a6:	2800      	cmp	r0, #0
   218a8:	f43f ae95 	beq.w	215d6 <_strtod_l+0x4a6>
   218ac:	9a06      	ldr	r2, [sp, #24]
   218ae:	991a      	ldr	r1, [sp, #104]	; 0x68
   218b0:	4640      	mov	r0, r8
   218b2:	f002 fc70 	bl	24196 <__mdiff>
   218b6:	4681      	mov	r9, r0
   218b8:	2800      	cmp	r0, #0
   218ba:	f43f ae8c 	beq.w	215d6 <_strtod_l+0x4a6>
   218be:	2400      	movs	r4, #0
   218c0:	68c3      	ldr	r3, [r0, #12]
   218c2:	9904      	ldr	r1, [sp, #16]
   218c4:	60c4      	str	r4, [r0, #12]
   218c6:	9308      	str	r3, [sp, #32]
   218c8:	f002 fc4b 	bl	24162 <__mcmp>
   218cc:	42a0      	cmp	r0, r4
   218ce:	da5b      	bge.n	21988 <_strtod_l+0x858>
   218d0:	9b08      	ldr	r3, [sp, #32]
   218d2:	b9f3      	cbnz	r3, 21912 <_strtod_l+0x7e2>
   218d4:	f1ba 0f00 	cmp.w	sl, #0
   218d8:	d11b      	bne.n	21912 <_strtod_l+0x7e2>
   218da:	f3cb 0313 	ubfx	r3, fp, #0, #20
   218de:	b9c3      	cbnz	r3, 21912 <_strtod_l+0x7e2>
   218e0:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   218e4:	0d1b      	lsrs	r3, r3, #20
   218e6:	051b      	lsls	r3, r3, #20
   218e8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   218ec:	d911      	bls.n	21912 <_strtod_l+0x7e2>
   218ee:	f8d9 3014 	ldr.w	r3, [r9, #20]
   218f2:	b91b      	cbnz	r3, 218fc <_strtod_l+0x7cc>
   218f4:	f8d9 3010 	ldr.w	r3, [r9, #16]
   218f8:	2b01      	cmp	r3, #1
   218fa:	dd0a      	ble.n	21912 <_strtod_l+0x7e2>
   218fc:	4649      	mov	r1, r9
   218fe:	2201      	movs	r2, #1
   21900:	4640      	mov	r0, r8
   21902:	f002 fbdd 	bl	240c0 <__lshift>
   21906:	9904      	ldr	r1, [sp, #16]
   21908:	4681      	mov	r9, r0
   2190a:	f002 fc2a 	bl	24162 <__mcmp>
   2190e:	2800      	cmp	r0, #0
   21910:	dc6b      	bgt.n	219ea <_strtod_l+0x8ba>
   21912:	9b05      	ldr	r3, [sp, #20]
   21914:	2b00      	cmp	r3, #0
   21916:	d175      	bne.n	21a04 <_strtod_l+0x8d4>
   21918:	e668      	b.n	215ec <_strtod_l+0x4bc>
   2191a:	07e2      	lsls	r2, r4, #31
   2191c:	d504      	bpl.n	21928 <_strtod_l+0x7f8>
   2191e:	e9d6 2300 	ldrd	r2, r3, [r6]
   21922:	f003 fe95 	bl	25650 <__aeabi_dmul>
   21926:	2301      	movs	r3, #1
   21928:	1064      	asrs	r4, r4, #1
   2192a:	3608      	adds	r6, #8
   2192c:	e6e9      	b.n	21702 <_strtod_l+0x5d2>
   2192e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   21932:	fa02 f303 	lsl.w	r3, r2, r3
   21936:	ea03 0a0a 	and.w	sl, r3, sl
   2193a:	e702      	b.n	21742 <_strtod_l+0x612>
   2193c:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   21940:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   21944:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   21948:	35e2      	adds	r5, #226	; 0xe2
   2194a:	fa07 f505 	lsl.w	r5, r7, r5
   2194e:	9714      	str	r7, [sp, #80]	; 0x50
   21950:	e767      	b.n	21822 <_strtod_l+0x6f2>
   21952:	2301      	movs	r3, #1
   21954:	2500      	movs	r5, #0
   21956:	9314      	str	r3, [sp, #80]	; 0x50
   21958:	e763      	b.n	21822 <_strtod_l+0x6f2>
   2195a:	463a      	mov	r2, r7
   2195c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2195e:	4640      	mov	r0, r8
   21960:	f002 fbae 	bl	240c0 <__lshift>
   21964:	901a      	str	r0, [sp, #104]	; 0x68
   21966:	2800      	cmp	r0, #0
   21968:	d187      	bne.n	2187a <_strtod_l+0x74a>
   2196a:	e634      	b.n	215d6 <_strtod_l+0x4a6>
   2196c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   2196e:	9906      	ldr	r1, [sp, #24]
   21970:	4640      	mov	r0, r8
   21972:	f002 fb57 	bl	24024 <__pow5mult>
   21976:	9006      	str	r0, [sp, #24]
   21978:	2800      	cmp	r0, #0
   2197a:	d181      	bne.n	21880 <_strtod_l+0x750>
   2197c:	e62b      	b.n	215d6 <_strtod_l+0x4a6>
   2197e:	bf00      	nop
   21980:	00028e98 	.word	0x00028e98
   21984:	fffffc02 	.word	0xfffffc02
   21988:	f040 8086 	bne.w	21a98 <_strtod_l+0x968>
   2198c:	9a08      	ldr	r2, [sp, #32]
   2198e:	f3cb 0313 	ubfx	r3, fp, #0, #20
   21992:	b332      	cbz	r2, 219e2 <_strtod_l+0x8b2>
   21994:	4aac      	ldr	r2, [pc, #688]	; (21c48 <_strtod_l+0xb18>)
   21996:	4659      	mov	r1, fp
   21998:	4293      	cmp	r3, r2
   2199a:	d152      	bne.n	21a42 <_strtod_l+0x912>
   2199c:	9b05      	ldr	r3, [sp, #20]
   2199e:	4650      	mov	r0, sl
   219a0:	b1d3      	cbz	r3, 219d8 <_strtod_l+0x8a8>
   219a2:	4aaa      	ldr	r2, [pc, #680]	; (21c4c <_strtod_l+0xb1c>)
   219a4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   219a8:	400a      	ands	r2, r1
   219aa:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   219ae:	d816      	bhi.n	219de <_strtod_l+0x8ae>
   219b0:	0d12      	lsrs	r2, r2, #20
   219b2:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   219b6:	fa04 f303 	lsl.w	r3, r4, r3
   219ba:	4283      	cmp	r3, r0
   219bc:	d141      	bne.n	21a42 <_strtod_l+0x912>
   219be:	4aa4      	ldr	r2, [pc, #656]	; (21c50 <_strtod_l+0xb20>)
   219c0:	4291      	cmp	r1, r2
   219c2:	d102      	bne.n	219ca <_strtod_l+0x89a>
   219c4:	3301      	adds	r3, #1
   219c6:	f43f ae06 	beq.w	215d6 <_strtod_l+0x4a6>
   219ca:	4ba0      	ldr	r3, [pc, #640]	; (21c4c <_strtod_l+0xb1c>)
   219cc:	f04f 0a00 	mov.w	sl, #0
   219d0:	400b      	ands	r3, r1
   219d2:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   219d6:	e79c      	b.n	21912 <_strtod_l+0x7e2>
   219d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   219dc:	e7ed      	b.n	219ba <_strtod_l+0x88a>
   219de:	4623      	mov	r3, r4
   219e0:	e7eb      	b.n	219ba <_strtod_l+0x88a>
   219e2:	bb73      	cbnz	r3, 21a42 <_strtod_l+0x912>
   219e4:	f1ba 0f00 	cmp.w	sl, #0
   219e8:	d12b      	bne.n	21a42 <_strtod_l+0x912>
   219ea:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   219ee:	9a05      	ldr	r2, [sp, #20]
   219f0:	0d1b      	lsrs	r3, r3, #20
   219f2:	051b      	lsls	r3, r3, #20
   219f4:	b1e2      	cbz	r2, 21a30 <_strtod_l+0x900>
   219f6:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   219fa:	dc19      	bgt.n	21a30 <_strtod_l+0x900>
   219fc:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   21a00:	f77f ae5d 	ble.w	216be <_strtod_l+0x58e>
   21a04:	4b93      	ldr	r3, [pc, #588]	; (21c54 <_strtod_l+0xb24>)
   21a06:	4650      	mov	r0, sl
   21a08:	930d      	str	r3, [sp, #52]	; 0x34
   21a0a:	2300      	movs	r3, #0
   21a0c:	930c      	str	r3, [sp, #48]	; 0x30
   21a0e:	4659      	mov	r1, fp
   21a10:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   21a14:	f003 fe1c 	bl	25650 <__aeabi_dmul>
   21a18:	4682      	mov	sl, r0
   21a1a:	468b      	mov	fp, r1
   21a1c:	2900      	cmp	r1, #0
   21a1e:	f47f ade5 	bne.w	215ec <_strtod_l+0x4bc>
   21a22:	2800      	cmp	r0, #0
   21a24:	f47f ade2 	bne.w	215ec <_strtod_l+0x4bc>
   21a28:	2322      	movs	r3, #34	; 0x22
   21a2a:	f8c8 3000 	str.w	r3, [r8]
   21a2e:	e5dd      	b.n	215ec <_strtod_l+0x4bc>
   21a30:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   21a34:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   21a38:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   21a3c:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   21a40:	e767      	b.n	21912 <_strtod_l+0x7e2>
   21a42:	b19d      	cbz	r5, 21a6c <_strtod_l+0x93c>
   21a44:	ea15 0f0b 	tst.w	r5, fp
   21a48:	f43f af63 	beq.w	21912 <_strtod_l+0x7e2>
   21a4c:	9b08      	ldr	r3, [sp, #32]
   21a4e:	9a05      	ldr	r2, [sp, #20]
   21a50:	4650      	mov	r0, sl
   21a52:	4659      	mov	r1, fp
   21a54:	b173      	cbz	r3, 21a74 <_strtod_l+0x944>
   21a56:	f7ff fb47 	bl	210e8 <sulp>
   21a5a:	4602      	mov	r2, r0
   21a5c:	460b      	mov	r3, r1
   21a5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21a62:	f7fc f8f7 	bl	1dc54 <__adddf3>
   21a66:	4682      	mov	sl, r0
   21a68:	468b      	mov	fp, r1
   21a6a:	e752      	b.n	21912 <_strtod_l+0x7e2>
   21a6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   21a6e:	ea13 0f0a 	tst.w	r3, sl
   21a72:	e7e9      	b.n	21a48 <_strtod_l+0x918>
   21a74:	f7ff fb38 	bl	210e8 <sulp>
   21a78:	4602      	mov	r2, r0
   21a7a:	460b      	mov	r3, r1
   21a7c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21a80:	f7fc f8e6 	bl	1dc50 <__aeabi_dsub>
   21a84:	2200      	movs	r2, #0
   21a86:	2300      	movs	r3, #0
   21a88:	4682      	mov	sl, r0
   21a8a:	468b      	mov	fp, r1
   21a8c:	f004 f848 	bl	25b20 <__aeabi_dcmpeq>
   21a90:	2800      	cmp	r0, #0
   21a92:	f47f ae14 	bne.w	216be <_strtod_l+0x58e>
   21a96:	e73c      	b.n	21912 <_strtod_l+0x7e2>
   21a98:	9904      	ldr	r1, [sp, #16]
   21a9a:	4648      	mov	r0, r9
   21a9c:	f002 fc9f 	bl	243de <__ratio>
   21aa0:	2200      	movs	r2, #0
   21aa2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   21aa6:	4606      	mov	r6, r0
   21aa8:	460f      	mov	r7, r1
   21aaa:	f004 f84d 	bl	25b48 <__aeabi_dcmple>
   21aae:	2800      	cmp	r0, #0
   21ab0:	d070      	beq.n	21b94 <_strtod_l+0xa64>
   21ab2:	9b08      	ldr	r3, [sp, #32]
   21ab4:	2b00      	cmp	r3, #0
   21ab6:	d043      	beq.n	21b40 <_strtod_l+0xa10>
   21ab8:	2600      	movs	r6, #0
   21aba:	4f67      	ldr	r7, [pc, #412]	; (21c58 <_strtod_l+0xb28>)
   21abc:	4d66      	ldr	r5, [pc, #408]	; (21c58 <_strtod_l+0xb28>)
   21abe:	4b63      	ldr	r3, [pc, #396]	; (21c4c <_strtod_l+0xb1c>)
   21ac0:	ea0b 0303 	and.w	r3, fp, r3
   21ac4:	9314      	str	r3, [sp, #80]	; 0x50
   21ac6:	9a14      	ldr	r2, [sp, #80]	; 0x50
   21ac8:	4b64      	ldr	r3, [pc, #400]	; (21c5c <_strtod_l+0xb2c>)
   21aca:	429a      	cmp	r2, r3
   21acc:	f040 80ce 	bne.w	21c6c <_strtod_l+0xb3c>
   21ad0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21ad4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   21ad8:	4650      	mov	r0, sl
   21ada:	4659      	mov	r1, fp
   21adc:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   21ae0:	f002 fbb8 	bl	24254 <__ulp>
   21ae4:	4602      	mov	r2, r0
   21ae6:	460b      	mov	r3, r1
   21ae8:	4630      	mov	r0, r6
   21aea:	4639      	mov	r1, r7
   21aec:	f003 fdb0 	bl	25650 <__aeabi_dmul>
   21af0:	4652      	mov	r2, sl
   21af2:	465b      	mov	r3, fp
   21af4:	f7fc f8ae 	bl	1dc54 <__adddf3>
   21af8:	4a54      	ldr	r2, [pc, #336]	; (21c4c <_strtod_l+0xb1c>)
   21afa:	4b59      	ldr	r3, [pc, #356]	; (21c60 <_strtod_l+0xb30>)
   21afc:	400a      	ands	r2, r1
   21afe:	429a      	cmp	r2, r3
   21b00:	4682      	mov	sl, r0
   21b02:	d95d      	bls.n	21bc0 <_strtod_l+0xa90>
   21b04:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   21b06:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   21b0a:	429a      	cmp	r2, r3
   21b0c:	d103      	bne.n	21b16 <_strtod_l+0x9e6>
   21b0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   21b10:	3301      	adds	r3, #1
   21b12:	f43f ad60 	beq.w	215d6 <_strtod_l+0x4a6>
   21b16:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   21b1a:	f8df b134 	ldr.w	fp, [pc, #308]	; 21c50 <_strtod_l+0xb20>
   21b1e:	991a      	ldr	r1, [sp, #104]	; 0x68
   21b20:	4640      	mov	r0, r8
   21b22:	f002 f90b 	bl	23d3c <_Bfree>
   21b26:	9906      	ldr	r1, [sp, #24]
   21b28:	4640      	mov	r0, r8
   21b2a:	f002 f907 	bl	23d3c <_Bfree>
   21b2e:	9904      	ldr	r1, [sp, #16]
   21b30:	4640      	mov	r0, r8
   21b32:	f002 f903 	bl	23d3c <_Bfree>
   21b36:	4649      	mov	r1, r9
   21b38:	4640      	mov	r0, r8
   21b3a:	f002 f8ff 	bl	23d3c <_Bfree>
   21b3e:	e622      	b.n	21786 <_strtod_l+0x656>
   21b40:	f1ba 0f00 	cmp.w	sl, #0
   21b44:	d118      	bne.n	21b78 <_strtod_l+0xa48>
   21b46:	f3cb 0313 	ubfx	r3, fp, #0, #20
   21b4a:	b9e3      	cbnz	r3, 21b86 <_strtod_l+0xa56>
   21b4c:	2200      	movs	r2, #0
   21b4e:	4b42      	ldr	r3, [pc, #264]	; (21c58 <_strtod_l+0xb28>)
   21b50:	4630      	mov	r0, r6
   21b52:	4639      	mov	r1, r7
   21b54:	f003 ffee 	bl	25b34 <__aeabi_dcmplt>
   21b58:	b9c8      	cbnz	r0, 21b8e <_strtod_l+0xa5e>
   21b5a:	2200      	movs	r2, #0
   21b5c:	4b41      	ldr	r3, [pc, #260]	; (21c64 <_strtod_l+0xb34>)
   21b5e:	4630      	mov	r0, r6
   21b60:	4639      	mov	r1, r7
   21b62:	f003 fd75 	bl	25650 <__aeabi_dmul>
   21b66:	4604      	mov	r4, r0
   21b68:	460d      	mov	r5, r1
   21b6a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   21b6e:	9416      	str	r4, [sp, #88]	; 0x58
   21b70:	9317      	str	r3, [sp, #92]	; 0x5c
   21b72:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   21b76:	e7a2      	b.n	21abe <_strtod_l+0x98e>
   21b78:	f1ba 0f01 	cmp.w	sl, #1
   21b7c:	d103      	bne.n	21b86 <_strtod_l+0xa56>
   21b7e:	f1bb 0f00 	cmp.w	fp, #0
   21b82:	f43f ad9c 	beq.w	216be <_strtod_l+0x58e>
   21b86:	2600      	movs	r6, #0
   21b88:	4f37      	ldr	r7, [pc, #220]	; (21c68 <_strtod_l+0xb38>)
   21b8a:	2400      	movs	r4, #0
   21b8c:	e796      	b.n	21abc <_strtod_l+0x98c>
   21b8e:	9c08      	ldr	r4, [sp, #32]
   21b90:	4d34      	ldr	r5, [pc, #208]	; (21c64 <_strtod_l+0xb34>)
   21b92:	e7ea      	b.n	21b6a <_strtod_l+0xa3a>
   21b94:	4b33      	ldr	r3, [pc, #204]	; (21c64 <_strtod_l+0xb34>)
   21b96:	2200      	movs	r2, #0
   21b98:	4630      	mov	r0, r6
   21b9a:	4639      	mov	r1, r7
   21b9c:	f003 fd58 	bl	25650 <__aeabi_dmul>
   21ba0:	9b08      	ldr	r3, [sp, #32]
   21ba2:	4604      	mov	r4, r0
   21ba4:	460d      	mov	r5, r1
   21ba6:	b933      	cbnz	r3, 21bb6 <_strtod_l+0xa86>
   21ba8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   21bac:	9010      	str	r0, [sp, #64]	; 0x40
   21bae:	9311      	str	r3, [sp, #68]	; 0x44
   21bb0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   21bb4:	e783      	b.n	21abe <_strtod_l+0x98e>
   21bb6:	4602      	mov	r2, r0
   21bb8:	460b      	mov	r3, r1
   21bba:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   21bbe:	e7f7      	b.n	21bb0 <_strtod_l+0xa80>
   21bc0:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   21bc4:	9b05      	ldr	r3, [sp, #20]
   21bc6:	2b00      	cmp	r3, #0
   21bc8:	d1a9      	bne.n	21b1e <_strtod_l+0x9ee>
   21bca:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   21bce:	0d1b      	lsrs	r3, r3, #20
   21bd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
   21bd2:	051b      	lsls	r3, r3, #20
   21bd4:	429a      	cmp	r2, r3
   21bd6:	465e      	mov	r6, fp
   21bd8:	d1a1      	bne.n	21b1e <_strtod_l+0x9ee>
   21bda:	4629      	mov	r1, r5
   21bdc:	4620      	mov	r0, r4
   21bde:	f003 ffe7 	bl	25bb0 <__aeabi_d2iz>
   21be2:	f7fc f983 	bl	1deec <__aeabi_i2d>
   21be6:	460b      	mov	r3, r1
   21be8:	4602      	mov	r2, r0
   21bea:	4629      	mov	r1, r5
   21bec:	4620      	mov	r0, r4
   21bee:	f7fc f82f 	bl	1dc50 <__aeabi_dsub>
   21bf2:	9b08      	ldr	r3, [sp, #32]
   21bf4:	4604      	mov	r4, r0
   21bf6:	460d      	mov	r5, r1
   21bf8:	b933      	cbnz	r3, 21c08 <_strtod_l+0xad8>
   21bfa:	f1ba 0f00 	cmp.w	sl, #0
   21bfe:	d103      	bne.n	21c08 <_strtod_l+0xad8>
   21c00:	f3cb 0613 	ubfx	r6, fp, #0, #20
   21c04:	2e00      	cmp	r6, #0
   21c06:	d06c      	beq.n	21ce2 <_strtod_l+0xbb2>
   21c08:	a30b      	add	r3, pc, #44	; (adr r3, 21c38 <_strtod_l+0xb08>)
   21c0a:	e9d3 2300 	ldrd	r2, r3, [r3]
   21c0e:	4620      	mov	r0, r4
   21c10:	4629      	mov	r1, r5
   21c12:	f003 ff8f 	bl	25b34 <__aeabi_dcmplt>
   21c16:	2800      	cmp	r0, #0
   21c18:	f47f ace8 	bne.w	215ec <_strtod_l+0x4bc>
   21c1c:	a308      	add	r3, pc, #32	; (adr r3, 21c40 <_strtod_l+0xb10>)
   21c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
   21c22:	4620      	mov	r0, r4
   21c24:	4629      	mov	r1, r5
   21c26:	f003 ffa3 	bl	25b70 <__aeabi_dcmpgt>
   21c2a:	2800      	cmp	r0, #0
   21c2c:	f43f af77 	beq.w	21b1e <_strtod_l+0x9ee>
   21c30:	e4dc      	b.n	215ec <_strtod_l+0x4bc>
   21c32:	bf00      	nop
   21c34:	f3af 8000 	nop.w
   21c38:	94a03595 	.word	0x94a03595
   21c3c:	3fdfffff 	.word	0x3fdfffff
   21c40:	35afe535 	.word	0x35afe535
   21c44:	3fe00000 	.word	0x3fe00000
   21c48:	000fffff 	.word	0x000fffff
   21c4c:	7ff00000 	.word	0x7ff00000
   21c50:	7fefffff 	.word	0x7fefffff
   21c54:	39500000 	.word	0x39500000
   21c58:	3ff00000 	.word	0x3ff00000
   21c5c:	7fe00000 	.word	0x7fe00000
   21c60:	7c9fffff 	.word	0x7c9fffff
   21c64:	3fe00000 	.word	0x3fe00000
   21c68:	bff00000 	.word	0xbff00000
   21c6c:	9b05      	ldr	r3, [sp, #20]
   21c6e:	b313      	cbz	r3, 21cb6 <_strtod_l+0xb86>
   21c70:	9b14      	ldr	r3, [sp, #80]	; 0x50
   21c72:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   21c76:	d81e      	bhi.n	21cb6 <_strtod_l+0xb86>
   21c78:	a325      	add	r3, pc, #148	; (adr r3, 21d10 <_strtod_l+0xbe0>)
   21c7a:	e9d3 2300 	ldrd	r2, r3, [r3]
   21c7e:	4620      	mov	r0, r4
   21c80:	4629      	mov	r1, r5
   21c82:	f003 ff61 	bl	25b48 <__aeabi_dcmple>
   21c86:	b190      	cbz	r0, 21cae <_strtod_l+0xb7e>
   21c88:	4629      	mov	r1, r5
   21c8a:	4620      	mov	r0, r4
   21c8c:	f7fc f994 	bl	1dfb8 <__aeabi_d2uiz>
   21c90:	2800      	cmp	r0, #0
   21c92:	bf08      	it	eq
   21c94:	2001      	moveq	r0, #1
   21c96:	f7fc f919 	bl	1decc <__aeabi_ui2d>
   21c9a:	9b08      	ldr	r3, [sp, #32]
   21c9c:	4604      	mov	r4, r0
   21c9e:	460d      	mov	r5, r1
   21ca0:	b9d3      	cbnz	r3, 21cd8 <_strtod_l+0xba8>
   21ca2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   21ca6:	9012      	str	r0, [sp, #72]	; 0x48
   21ca8:	9313      	str	r3, [sp, #76]	; 0x4c
   21caa:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   21cae:	9a14      	ldr	r2, [sp, #80]	; 0x50
   21cb0:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   21cb4:	1a9f      	subs	r7, r3, r2
   21cb6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   21cba:	f002 facb 	bl	24254 <__ulp>
   21cbe:	4602      	mov	r2, r0
   21cc0:	460b      	mov	r3, r1
   21cc2:	4630      	mov	r0, r6
   21cc4:	4639      	mov	r1, r7
   21cc6:	f003 fcc3 	bl	25650 <__aeabi_dmul>
   21cca:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   21cce:	f7fb ffc1 	bl	1dc54 <__adddf3>
   21cd2:	4682      	mov	sl, r0
   21cd4:	468b      	mov	fp, r1
   21cd6:	e775      	b.n	21bc4 <_strtod_l+0xa94>
   21cd8:	4602      	mov	r2, r0
   21cda:	460b      	mov	r3, r1
   21cdc:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   21ce0:	e7e3      	b.n	21caa <_strtod_l+0xb7a>
   21ce2:	a30d      	add	r3, pc, #52	; (adr r3, 21d18 <_strtod_l+0xbe8>)
   21ce4:	e9d3 2300 	ldrd	r2, r3, [r3]
   21ce8:	f003 ff24 	bl	25b34 <__aeabi_dcmplt>
   21cec:	e79d      	b.n	21c2a <_strtod_l+0xafa>
   21cee:	2300      	movs	r3, #0
   21cf0:	9309      	str	r3, [sp, #36]	; 0x24
   21cf2:	9b19      	ldr	r3, [sp, #100]	; 0x64
   21cf4:	9a15      	ldr	r2, [sp, #84]	; 0x54
   21cf6:	6013      	str	r3, [r2, #0]
   21cf8:	f7ff ba5e 	b.w	211b8 <_strtod_l+0x88>
   21cfc:	2b65      	cmp	r3, #101	; 0x65
   21cfe:	f04f 0200 	mov.w	r2, #0
   21d02:	f43f abae 	beq.w	21462 <_strtod_l+0x332>
   21d06:	4615      	mov	r5, r2
   21d08:	2101      	movs	r1, #1
   21d0a:	f7ff bacd 	b.w	212a8 <_strtod_l+0x178>
   21d0e:	bf00      	nop
   21d10:	ffc00000 	.word	0xffc00000
   21d14:	41dfffff 	.word	0x41dfffff
   21d18:	94a03595 	.word	0x94a03595
   21d1c:	3fcfffff 	.word	0x3fcfffff

00021d20 <_strtod_r>:
_strtod_r():
   21d20:	4b05      	ldr	r3, [pc, #20]	; (21d38 <_strtod_r+0x18>)
   21d22:	b410      	push	{r4}
   21d24:	681b      	ldr	r3, [r3, #0]
   21d26:	4c05      	ldr	r4, [pc, #20]	; (21d3c <_strtod_r+0x1c>)
   21d28:	6a1b      	ldr	r3, [r3, #32]
   21d2a:	2b00      	cmp	r3, #0
   21d2c:	bf08      	it	eq
   21d2e:	4623      	moveq	r3, r4
   21d30:	bc10      	pop	{r4}
   21d32:	f7ff b9fd 	b.w	21130 <_strtod_l>
   21d36:	bf00      	nop
   21d38:	2007c0e0 	.word	0x2007c0e0
   21d3c:	2007c144 	.word	0x2007c144

00021d40 <__strtok_r>:
__strtok_r():
   21d40:	b5f0      	push	{r4, r5, r6, r7, lr}
   21d42:	b918      	cbnz	r0, 21d4c <__strtok_r+0xc>
   21d44:	6810      	ldr	r0, [r2, #0]
   21d46:	b908      	cbnz	r0, 21d4c <__strtok_r+0xc>
   21d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
   21d4a:	4620      	mov	r0, r4
   21d4c:	4604      	mov	r4, r0
   21d4e:	460f      	mov	r7, r1
   21d50:	f814 5b01 	ldrb.w	r5, [r4], #1
   21d54:	f817 6b01 	ldrb.w	r6, [r7], #1
   21d58:	b91e      	cbnz	r6, 21d62 <__strtok_r+0x22>
   21d5a:	b965      	cbnz	r5, 21d76 <__strtok_r+0x36>
   21d5c:	6015      	str	r5, [r2, #0]
   21d5e:	4628      	mov	r0, r5
   21d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
   21d62:	42b5      	cmp	r5, r6
   21d64:	d1f6      	bne.n	21d54 <__strtok_r+0x14>
   21d66:	2b00      	cmp	r3, #0
   21d68:	d1ef      	bne.n	21d4a <__strtok_r+0xa>
   21d6a:	6014      	str	r4, [r2, #0]
   21d6c:	7003      	strb	r3, [r0, #0]
   21d6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   21d70:	461c      	mov	r4, r3
   21d72:	e00c      	b.n	21d8e <__strtok_r+0x4e>
   21d74:	b915      	cbnz	r5, 21d7c <__strtok_r+0x3c>
   21d76:	460e      	mov	r6, r1
   21d78:	f814 3b01 	ldrb.w	r3, [r4], #1
   21d7c:	f816 5b01 	ldrb.w	r5, [r6], #1
   21d80:	42ab      	cmp	r3, r5
   21d82:	d1f7      	bne.n	21d74 <__strtok_r+0x34>
   21d84:	2b00      	cmp	r3, #0
   21d86:	d0f3      	beq.n	21d70 <__strtok_r+0x30>
   21d88:	2300      	movs	r3, #0
   21d8a:	f804 3c01 	strb.w	r3, [r4, #-1]
   21d8e:	6014      	str	r4, [r2, #0]
   21d90:	bdf0      	pop	{r4, r5, r6, r7, pc}

00021d92 <strtok_r>:
strtok_r():
   21d92:	2301      	movs	r3, #1
   21d94:	f7ff bfd4 	b.w	21d40 <__strtok_r>

00021d98 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   21d98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d9c:	4680      	mov	r8, r0
   21d9e:	4689      	mov	r9, r1
   21da0:	4692      	mov	sl, r2
   21da2:	461f      	mov	r7, r3
   21da4:	468b      	mov	fp, r1
   21da6:	465d      	mov	r5, fp
   21da8:	980a      	ldr	r0, [sp, #40]	; 0x28
   21daa:	f815 4b01 	ldrb.w	r4, [r5], #1
   21dae:	f7fd fab7 	bl	1f320 <__locale_ctype_ptr_l>
   21db2:	4420      	add	r0, r4
   21db4:	7846      	ldrb	r6, [r0, #1]
   21db6:	f016 0608 	ands.w	r6, r6, #8
   21dba:	d10b      	bne.n	21dd4 <_strtol_l.isra.0+0x3c>
   21dbc:	2c2d      	cmp	r4, #45	; 0x2d
   21dbe:	d10b      	bne.n	21dd8 <_strtol_l.isra.0+0x40>
   21dc0:	2601      	movs	r6, #1
   21dc2:	782c      	ldrb	r4, [r5, #0]
   21dc4:	f10b 0502 	add.w	r5, fp, #2
   21dc8:	b167      	cbz	r7, 21de4 <_strtol_l.isra.0+0x4c>
   21dca:	2f10      	cmp	r7, #16
   21dcc:	d114      	bne.n	21df8 <_strtol_l.isra.0+0x60>
   21dce:	2c30      	cmp	r4, #48	; 0x30
   21dd0:	d00a      	beq.n	21de8 <_strtol_l.isra.0+0x50>
   21dd2:	e011      	b.n	21df8 <_strtol_l.isra.0+0x60>
   21dd4:	46ab      	mov	fp, r5
   21dd6:	e7e6      	b.n	21da6 <_strtol_l.isra.0+0xe>
   21dd8:	2c2b      	cmp	r4, #43	; 0x2b
   21dda:	bf04      	itt	eq
   21ddc:	782c      	ldrbeq	r4, [r5, #0]
   21dde:	f10b 0502 	addeq.w	r5, fp, #2
   21de2:	e7f1      	b.n	21dc8 <_strtol_l.isra.0+0x30>
   21de4:	2c30      	cmp	r4, #48	; 0x30
   21de6:	d127      	bne.n	21e38 <_strtol_l.isra.0+0xa0>
   21de8:	782b      	ldrb	r3, [r5, #0]
   21dea:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   21dee:	2b58      	cmp	r3, #88	; 0x58
   21df0:	d14b      	bne.n	21e8a <_strtol_l.isra.0+0xf2>
   21df2:	2710      	movs	r7, #16
   21df4:	786c      	ldrb	r4, [r5, #1]
   21df6:	3502      	adds	r5, #2
   21df8:	2e00      	cmp	r6, #0
   21dfa:	bf0c      	ite	eq
   21dfc:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   21e00:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   21e04:	2200      	movs	r2, #0
   21e06:	fbb1 fef7 	udiv	lr, r1, r7
   21e0a:	4610      	mov	r0, r2
   21e0c:	fb07 1c1e 	mls	ip, r7, lr, r1
   21e10:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   21e14:	2b09      	cmp	r3, #9
   21e16:	d811      	bhi.n	21e3c <_strtol_l.isra.0+0xa4>
   21e18:	461c      	mov	r4, r3
   21e1a:	42a7      	cmp	r7, r4
   21e1c:	dd1d      	ble.n	21e5a <_strtol_l.isra.0+0xc2>
   21e1e:	1c53      	adds	r3, r2, #1
   21e20:	d007      	beq.n	21e32 <_strtol_l.isra.0+0x9a>
   21e22:	4586      	cmp	lr, r0
   21e24:	d316      	bcc.n	21e54 <_strtol_l.isra.0+0xbc>
   21e26:	d101      	bne.n	21e2c <_strtol_l.isra.0+0x94>
   21e28:	45a4      	cmp	ip, r4
   21e2a:	db13      	blt.n	21e54 <_strtol_l.isra.0+0xbc>
   21e2c:	2201      	movs	r2, #1
   21e2e:	fb00 4007 	mla	r0, r0, r7, r4
   21e32:	f815 4b01 	ldrb.w	r4, [r5], #1
   21e36:	e7eb      	b.n	21e10 <_strtol_l.isra.0+0x78>
   21e38:	270a      	movs	r7, #10
   21e3a:	e7dd      	b.n	21df8 <_strtol_l.isra.0+0x60>
   21e3c:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   21e40:	2b19      	cmp	r3, #25
   21e42:	d801      	bhi.n	21e48 <_strtol_l.isra.0+0xb0>
   21e44:	3c37      	subs	r4, #55	; 0x37
   21e46:	e7e8      	b.n	21e1a <_strtol_l.isra.0+0x82>
   21e48:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   21e4c:	2b19      	cmp	r3, #25
   21e4e:	d804      	bhi.n	21e5a <_strtol_l.isra.0+0xc2>
   21e50:	3c57      	subs	r4, #87	; 0x57
   21e52:	e7e2      	b.n	21e1a <_strtol_l.isra.0+0x82>
   21e54:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   21e58:	e7eb      	b.n	21e32 <_strtol_l.isra.0+0x9a>
   21e5a:	1c53      	adds	r3, r2, #1
   21e5c:	d108      	bne.n	21e70 <_strtol_l.isra.0+0xd8>
   21e5e:	2322      	movs	r3, #34	; 0x22
   21e60:	4608      	mov	r0, r1
   21e62:	f8c8 3000 	str.w	r3, [r8]
   21e66:	f1ba 0f00 	cmp.w	sl, #0
   21e6a:	d107      	bne.n	21e7c <_strtol_l.isra.0+0xe4>
   21e6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e70:	b106      	cbz	r6, 21e74 <_strtol_l.isra.0+0xdc>
   21e72:	4240      	negs	r0, r0
   21e74:	f1ba 0f00 	cmp.w	sl, #0
   21e78:	d00c      	beq.n	21e94 <_strtol_l.isra.0+0xfc>
   21e7a:	b122      	cbz	r2, 21e86 <_strtol_l.isra.0+0xee>
   21e7c:	3d01      	subs	r5, #1
   21e7e:	f8ca 5000 	str.w	r5, [sl]
   21e82:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e86:	464d      	mov	r5, r9
   21e88:	e7f9      	b.n	21e7e <_strtol_l.isra.0+0xe6>
   21e8a:	2430      	movs	r4, #48	; 0x30
   21e8c:	2f00      	cmp	r7, #0
   21e8e:	d1b3      	bne.n	21df8 <_strtol_l.isra.0+0x60>
   21e90:	2708      	movs	r7, #8
   21e92:	e7b1      	b.n	21df8 <_strtol_l.isra.0+0x60>
   21e94:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021e98 <_strtol_r>:
_strtol_r():
   21e98:	b537      	push	{r0, r1, r2, r4, r5, lr}
   21e9a:	4c06      	ldr	r4, [pc, #24]	; (21eb4 <_strtol_r+0x1c>)
   21e9c:	4d06      	ldr	r5, [pc, #24]	; (21eb8 <_strtol_r+0x20>)
   21e9e:	6824      	ldr	r4, [r4, #0]
   21ea0:	6a24      	ldr	r4, [r4, #32]
   21ea2:	2c00      	cmp	r4, #0
   21ea4:	bf08      	it	eq
   21ea6:	462c      	moveq	r4, r5
   21ea8:	9400      	str	r4, [sp, #0]
   21eaa:	f7ff ff75 	bl	21d98 <_strtol_l.isra.0>
   21eae:	b003      	add	sp, #12
   21eb0:	bd30      	pop	{r4, r5, pc}
   21eb2:	bf00      	nop
   21eb4:	2007c0e0 	.word	0x2007c0e0
   21eb8:	2007c144 	.word	0x2007c144

00021ebc <strtol>:
strtol():
   21ebc:	4b08      	ldr	r3, [pc, #32]	; (21ee0 <strtol+0x24>)
   21ebe:	b537      	push	{r0, r1, r2, r4, r5, lr}
   21ec0:	681c      	ldr	r4, [r3, #0]
   21ec2:	4d08      	ldr	r5, [pc, #32]	; (21ee4 <strtol+0x28>)
   21ec4:	6a23      	ldr	r3, [r4, #32]
   21ec6:	2b00      	cmp	r3, #0
   21ec8:	bf08      	it	eq
   21eca:	462b      	moveq	r3, r5
   21ecc:	9300      	str	r3, [sp, #0]
   21ece:	4613      	mov	r3, r2
   21ed0:	460a      	mov	r2, r1
   21ed2:	4601      	mov	r1, r0
   21ed4:	4620      	mov	r0, r4
   21ed6:	f7ff ff5f 	bl	21d98 <_strtol_l.isra.0>
   21eda:	b003      	add	sp, #12
   21edc:	bd30      	pop	{r4, r5, pc}
   21ede:	bf00      	nop
   21ee0:	2007c0e0 	.word	0x2007c0e0
   21ee4:	2007c144 	.word	0x2007c144

00021ee8 <time>:
time():
   21ee8:	b513      	push	{r0, r1, r4, lr}
   21eea:	4b08      	ldr	r3, [pc, #32]	; (21f0c <time+0x24>)
   21eec:	4604      	mov	r4, r0
   21eee:	2200      	movs	r2, #0
   21ef0:	6818      	ldr	r0, [r3, #0]
   21ef2:	4669      	mov	r1, sp
   21ef4:	f001 fe0e 	bl	23b14 <_gettimeofday_r>
   21ef8:	2800      	cmp	r0, #0
   21efa:	bfbc      	itt	lt
   21efc:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   21f00:	9300      	strlt	r3, [sp, #0]
   21f02:	9800      	ldr	r0, [sp, #0]
   21f04:	b104      	cbz	r4, 21f08 <time+0x20>
   21f06:	6020      	str	r0, [r4, #0]
   21f08:	b002      	add	sp, #8
   21f0a:	bd10      	pop	{r4, pc}
   21f0c:	2007c0e0 	.word	0x2007c0e0

00021f10 <tolower>:
tolower():
   21f10:	b510      	push	{r4, lr}
   21f12:	4604      	mov	r4, r0
   21f14:	f7fd fa08 	bl	1f328 <__locale_ctype_ptr>
   21f18:	4420      	add	r0, r4
   21f1a:	7843      	ldrb	r3, [r0, #1]
   21f1c:	f003 0303 	and.w	r3, r3, #3
   21f20:	2b01      	cmp	r3, #1
   21f22:	bf08      	it	eq
   21f24:	3420      	addeq	r4, #32
   21f26:	4620      	mov	r0, r4
   21f28:	bd10      	pop	{r4, pc}

00021f2a <toupper>:
toupper():
   21f2a:	b510      	push	{r4, lr}
   21f2c:	4604      	mov	r4, r0
   21f2e:	f7fd f9fb 	bl	1f328 <__locale_ctype_ptr>
   21f32:	4420      	add	r0, r4
   21f34:	7843      	ldrb	r3, [r0, #1]
   21f36:	f003 0303 	and.w	r3, r3, #3
   21f3a:	2b02      	cmp	r3, #2
   21f3c:	bf08      	it	eq
   21f3e:	3c20      	subeq	r4, #32
   21f40:	4620      	mov	r0, r4
   21f42:	bd10      	pop	{r4, pc}

00021f44 <__tzcalc_limits>:
__tzcalc_limits():
   21f44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f48:	4604      	mov	r4, r0
   21f4a:	f001 fdf5 	bl	23b38 <__gettzinfo>
   21f4e:	f240 73b1 	movw	r3, #1969	; 0x7b1
   21f52:	429c      	cmp	r4, r3
   21f54:	f340 8098 	ble.w	22088 <__tzcalc_limits+0x144>
   21f58:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   21f5c:	f240 126d 	movw	r2, #365	; 0x16d
   21f60:	18e3      	adds	r3, r4, r3
   21f62:	109b      	asrs	r3, r3, #2
   21f64:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   21f68:	fb02 3505 	mla	r5, r2, r5, r3
   21f6c:	f06f 0263 	mvn.w	r2, #99	; 0x63
   21f70:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   21f74:	fb93 f3f2 	sdiv	r3, r3, r2
   21f78:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   21f7c:	441d      	add	r5, r3
   21f7e:	f44f 73c8 	mov.w	r3, #400	; 0x190
   21f82:	18a2      	adds	r2, r4, r2
   21f84:	fb92 f2f3 	sdiv	r2, r2, r3
   21f88:	fb94 f7f3 	sdiv	r7, r4, r3
   21f8c:	4415      	add	r5, r2
   21f8e:	2264      	movs	r2, #100	; 0x64
   21f90:	fb03 4717 	mls	r7, r3, r7, r4
   21f94:	fb94 f6f2 	sdiv	r6, r4, r2
   21f98:	fab7 fe87 	clz	lr, r7
   21f9c:	4601      	mov	r1, r0
   21f9e:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   21fa2:	fb02 4616 	mls	r6, r2, r6, r4
   21fa6:	f100 0338 	add.w	r3, r0, #56	; 0x38
   21faa:	9301      	str	r3, [sp, #4]
   21fac:	f004 0303 	and.w	r3, r4, #3
   21fb0:	6044      	str	r4, [r0, #4]
   21fb2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   21fb6:	9300      	str	r3, [sp, #0]
   21fb8:	7a0b      	ldrb	r3, [r1, #8]
   21fba:	2b4a      	cmp	r3, #74	; 0x4a
   21fbc:	d123      	bne.n	22006 <__tzcalc_limits+0xc2>
   21fbe:	694c      	ldr	r4, [r1, #20]
   21fc0:	9a00      	ldr	r2, [sp, #0]
   21fc2:	192b      	adds	r3, r5, r4
   21fc4:	b902      	cbnz	r2, 21fc8 <__tzcalc_limits+0x84>
   21fc6:	b906      	cbnz	r6, 21fca <__tzcalc_limits+0x86>
   21fc8:	b9df      	cbnz	r7, 22002 <__tzcalc_limits+0xbe>
   21fca:	2c3b      	cmp	r4, #59	; 0x3b
   21fcc:	bfd4      	ite	le
   21fce:	2400      	movle	r4, #0
   21fd0:	2401      	movgt	r4, #1
   21fd2:	441c      	add	r4, r3
   21fd4:	3c01      	subs	r4, #1
   21fd6:	4b2d      	ldr	r3, [pc, #180]	; (2208c <__tzcalc_limits+0x148>)
   21fd8:	698a      	ldr	r2, [r1, #24]
   21fda:	fb03 2404 	mla	r4, r3, r4, r2
   21fde:	6a0b      	ldr	r3, [r1, #32]
   21fe0:	441c      	add	r4, r3
   21fe2:	9b01      	ldr	r3, [sp, #4]
   21fe4:	f841 4f1c 	str.w	r4, [r1, #28]!
   21fe8:	428b      	cmp	r3, r1
   21fea:	d1e5      	bne.n	21fb8 <__tzcalc_limits+0x74>
   21fec:	69c3      	ldr	r3, [r0, #28]
   21fee:	6b82      	ldr	r2, [r0, #56]	; 0x38
   21ff0:	4293      	cmp	r3, r2
   21ff2:	bfac      	ite	ge
   21ff4:	2300      	movge	r3, #0
   21ff6:	2301      	movlt	r3, #1
   21ff8:	6003      	str	r3, [r0, #0]
   21ffa:	2001      	movs	r0, #1
   21ffc:	b003      	add	sp, #12
   21ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22002:	2400      	movs	r4, #0
   22004:	e7e5      	b.n	21fd2 <__tzcalc_limits+0x8e>
   22006:	2b44      	cmp	r3, #68	; 0x44
   22008:	d102      	bne.n	22010 <__tzcalc_limits+0xcc>
   2200a:	694b      	ldr	r3, [r1, #20]
   2200c:	18ec      	adds	r4, r5, r3
   2200e:	e7e2      	b.n	21fd6 <__tzcalc_limits+0x92>
   22010:	9b00      	ldr	r3, [sp, #0]
   22012:	bb7b      	cbnz	r3, 22074 <__tzcalc_limits+0x130>
   22014:	2e00      	cmp	r6, #0
   22016:	bf0c      	ite	eq
   22018:	46f0      	moveq	r8, lr
   2201a:	f04f 0801 	movne.w	r8, #1
   2201e:	2230      	movs	r2, #48	; 0x30
   22020:	4b1b      	ldr	r3, [pc, #108]	; (22090 <__tzcalc_limits+0x14c>)
   22022:	f04f 0901 	mov.w	r9, #1
   22026:	fb02 3808 	mla	r8, r2, r8, r3
   2202a:	462b      	mov	r3, r5
   2202c:	68cc      	ldr	r4, [r1, #12]
   2202e:	f1a8 0a04 	sub.w	sl, r8, #4
   22032:	45a1      	cmp	r9, r4
   22034:	db20      	blt.n	22078 <__tzcalc_limits+0x134>
   22036:	2207      	movs	r2, #7
   22038:	2c01      	cmp	r4, #1
   2203a:	bfb8      	it	lt
   2203c:	2401      	movlt	r4, #1
   2203e:	f103 0b04 	add.w	fp, r3, #4
   22042:	fb9b faf2 	sdiv	sl, fp, r2
   22046:	46a1      	mov	r9, r4
   22048:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   2204c:	694c      	ldr	r4, [r1, #20]
   2204e:	ebab 0a0a 	sub.w	sl, fp, sl
   22052:	ebb4 0a0a 	subs.w	sl, r4, sl
   22056:	690c      	ldr	r4, [r1, #16]
   22058:	44e1      	add	r9, ip
   2205a:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   2205e:	bf48      	it	mi
   22060:	4492      	addmi	sl, r2
   22062:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   22066:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   2206a:	4454      	add	r4, sl
   2206c:	4544      	cmp	r4, r8
   2206e:	da09      	bge.n	22084 <__tzcalc_limits+0x140>
   22070:	441c      	add	r4, r3
   22072:	e7b0      	b.n	21fd6 <__tzcalc_limits+0x92>
   22074:	46f0      	mov	r8, lr
   22076:	e7d2      	b.n	2201e <__tzcalc_limits+0xda>
   22078:	f85a bf04 	ldr.w	fp, [sl, #4]!
   2207c:	f109 0901 	add.w	r9, r9, #1
   22080:	445b      	add	r3, fp
   22082:	e7d6      	b.n	22032 <__tzcalc_limits+0xee>
   22084:	3c07      	subs	r4, #7
   22086:	e7f1      	b.n	2206c <__tzcalc_limits+0x128>
   22088:	2000      	movs	r0, #0
   2208a:	e7b7      	b.n	21ffc <__tzcalc_limits+0xb8>
   2208c:	00015180 	.word	0x00015180
   22090:	00028dd4 	.word	0x00028dd4

00022094 <__tz_lock>:
__tz_lock():
   22094:	4770      	bx	lr

00022096 <__tz_unlock>:
__tz_unlock():
   22096:	4770      	bx	lr

00022098 <_tzset_unlocked>:
_tzset_unlocked():
   22098:	4b01      	ldr	r3, [pc, #4]	; (220a0 <_tzset_unlocked+0x8>)
   2209a:	6818      	ldr	r0, [r3, #0]
   2209c:	f000 b802 	b.w	220a4 <_tzset_unlocked_r>
   220a0:	2007c0e0 	.word	0x2007c0e0

000220a4 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   220a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220a8:	b08d      	sub	sp, #52	; 0x34
   220aa:	4607      	mov	r7, r0
   220ac:	f001 fd44 	bl	23b38 <__gettzinfo>
   220b0:	49b1      	ldr	r1, [pc, #708]	; (22378 <_tzset_unlocked_r+0x2d4>)
   220b2:	4605      	mov	r5, r0
   220b4:	4638      	mov	r0, r7
   220b6:	f001 fd25 	bl	23b04 <_getenv_r>
   220ba:	4eb0      	ldr	r6, [pc, #704]	; (2237c <_tzset_unlocked_r+0x2d8>)
   220bc:	4604      	mov	r4, r0
   220be:	b970      	cbnz	r0, 220de <_tzset_unlocked_r+0x3a>
   220c0:	4baf      	ldr	r3, [pc, #700]	; (22380 <_tzset_unlocked_r+0x2dc>)
   220c2:	4ab0      	ldr	r2, [pc, #704]	; (22384 <_tzset_unlocked_r+0x2e0>)
   220c4:	6018      	str	r0, [r3, #0]
   220c6:	4bb0      	ldr	r3, [pc, #704]	; (22388 <_tzset_unlocked_r+0x2e4>)
   220c8:	6018      	str	r0, [r3, #0]
   220ca:	4bb0      	ldr	r3, [pc, #704]	; (2238c <_tzset_unlocked_r+0x2e8>)
   220cc:	6830      	ldr	r0, [r6, #0]
   220ce:	601a      	str	r2, [r3, #0]
   220d0:	605a      	str	r2, [r3, #4]
   220d2:	f7fd f9a3 	bl	1f41c <free>
   220d6:	6034      	str	r4, [r6, #0]
   220d8:	b00d      	add	sp, #52	; 0x34
   220da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220de:	6831      	ldr	r1, [r6, #0]
   220e0:	2900      	cmp	r1, #0
   220e2:	d160      	bne.n	221a6 <_tzset_unlocked_r+0x102>
   220e4:	6830      	ldr	r0, [r6, #0]
   220e6:	f7fd f999 	bl	1f41c <free>
   220ea:	4620      	mov	r0, r4
   220ec:	f7fe ff78 	bl	20fe0 <strlen>
   220f0:	1c41      	adds	r1, r0, #1
   220f2:	4638      	mov	r0, r7
   220f4:	f7fd fce8 	bl	1fac8 <_malloc_r>
   220f8:	6030      	str	r0, [r6, #0]
   220fa:	2800      	cmp	r0, #0
   220fc:	d158      	bne.n	221b0 <_tzset_unlocked_r+0x10c>
   220fe:	7823      	ldrb	r3, [r4, #0]
   22100:	ae0a      	add	r6, sp, #40	; 0x28
   22102:	2b3a      	cmp	r3, #58	; 0x3a
   22104:	bf08      	it	eq
   22106:	3401      	addeq	r4, #1
   22108:	4633      	mov	r3, r6
   2210a:	4aa1      	ldr	r2, [pc, #644]	; (22390 <_tzset_unlocked_r+0x2ec>)
   2210c:	49a1      	ldr	r1, [pc, #644]	; (22394 <_tzset_unlocked_r+0x2f0>)
   2210e:	4620      	mov	r0, r4
   22110:	f7fe feaa 	bl	20e68 <siscanf>
   22114:	2800      	cmp	r0, #0
   22116:	dddf      	ble.n	220d8 <_tzset_unlocked_r+0x34>
   22118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   2211a:	18e7      	adds	r7, r4, r3
   2211c:	5ce3      	ldrb	r3, [r4, r3]
   2211e:	2b2d      	cmp	r3, #45	; 0x2d
   22120:	d14a      	bne.n	221b8 <_tzset_unlocked_r+0x114>
   22122:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   22126:	3701      	adds	r7, #1
   22128:	f04f 0800 	mov.w	r8, #0
   2212c:	f10d 0a20 	add.w	sl, sp, #32
   22130:	f10d 0b1e 	add.w	fp, sp, #30
   22134:	9603      	str	r6, [sp, #12]
   22136:	f8cd a008 	str.w	sl, [sp, #8]
   2213a:	9601      	str	r6, [sp, #4]
   2213c:	f8cd b000 	str.w	fp, [sp]
   22140:	4633      	mov	r3, r6
   22142:	aa07      	add	r2, sp, #28
   22144:	4994      	ldr	r1, [pc, #592]	; (22398 <_tzset_unlocked_r+0x2f4>)
   22146:	4638      	mov	r0, r7
   22148:	f8ad 801e 	strh.w	r8, [sp, #30]
   2214c:	f8ad 8020 	strh.w	r8, [sp, #32]
   22150:	f7fe fe8a 	bl	20e68 <siscanf>
   22154:	4540      	cmp	r0, r8
   22156:	ddbf      	ble.n	220d8 <_tzset_unlocked_r+0x34>
   22158:	213c      	movs	r1, #60	; 0x3c
   2215a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   2215e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   22162:	f8df 9240 	ldr.w	r9, [pc, #576]	; 223a4 <_tzset_unlocked_r+0x300>
   22166:	fb01 2203 	mla	r2, r1, r3, r2
   2216a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   2216e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   22172:	fb01 2303 	mla	r3, r1, r3, r2
   22176:	435c      	muls	r4, r3
   22178:	4b85      	ldr	r3, [pc, #532]	; (22390 <_tzset_unlocked_r+0x2ec>)
   2217a:	622c      	str	r4, [r5, #32]
   2217c:	4c83      	ldr	r4, [pc, #524]	; (2238c <_tzset_unlocked_r+0x2e8>)
   2217e:	464a      	mov	r2, r9
   22180:	6023      	str	r3, [r4, #0]
   22182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   22184:	4983      	ldr	r1, [pc, #524]	; (22394 <_tzset_unlocked_r+0x2f0>)
   22186:	441f      	add	r7, r3
   22188:	4638      	mov	r0, r7
   2218a:	4633      	mov	r3, r6
   2218c:	f7fe fe6c 	bl	20e68 <siscanf>
   22190:	4540      	cmp	r0, r8
   22192:	dc16      	bgt.n	221c2 <_tzset_unlocked_r+0x11e>
   22194:	6823      	ldr	r3, [r4, #0]
   22196:	6a2a      	ldr	r2, [r5, #32]
   22198:	6063      	str	r3, [r4, #4]
   2219a:	4b79      	ldr	r3, [pc, #484]	; (22380 <_tzset_unlocked_r+0x2dc>)
   2219c:	601a      	str	r2, [r3, #0]
   2219e:	4b7a      	ldr	r3, [pc, #488]	; (22388 <_tzset_unlocked_r+0x2e4>)
   221a0:	f8c3 8000 	str.w	r8, [r3]
   221a4:	e798      	b.n	220d8 <_tzset_unlocked_r+0x34>
   221a6:	f7fe ff09 	bl	20fbc <strcmp>
   221aa:	2800      	cmp	r0, #0
   221ac:	d094      	beq.n	220d8 <_tzset_unlocked_r+0x34>
   221ae:	e799      	b.n	220e4 <_tzset_unlocked_r+0x40>
   221b0:	4621      	mov	r1, r4
   221b2:	f7fe ff0d 	bl	20fd0 <strcpy>
   221b6:	e7a2      	b.n	220fe <_tzset_unlocked_r+0x5a>
   221b8:	2b2b      	cmp	r3, #43	; 0x2b
   221ba:	bf08      	it	eq
   221bc:	3701      	addeq	r7, #1
   221be:	2401      	movs	r4, #1
   221c0:	e7b2      	b.n	22128 <_tzset_unlocked_r+0x84>
   221c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   221c4:	f8c4 9004 	str.w	r9, [r4, #4]
   221c8:	18fc      	adds	r4, r7, r3
   221ca:	5cfb      	ldrb	r3, [r7, r3]
   221cc:	2b2d      	cmp	r3, #45	; 0x2d
   221ce:	f040 8092 	bne.w	222f6 <_tzset_unlocked_r+0x252>
   221d2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   221d6:	3401      	adds	r4, #1
   221d8:	2300      	movs	r3, #0
   221da:	9603      	str	r6, [sp, #12]
   221dc:	f8ad 301c 	strh.w	r3, [sp, #28]
   221e0:	f8ad 301e 	strh.w	r3, [sp, #30]
   221e4:	f8ad 3020 	strh.w	r3, [sp, #32]
   221e8:	930a      	str	r3, [sp, #40]	; 0x28
   221ea:	f8cd a008 	str.w	sl, [sp, #8]
   221ee:	9601      	str	r6, [sp, #4]
   221f0:	f8cd b000 	str.w	fp, [sp]
   221f4:	4633      	mov	r3, r6
   221f6:	aa07      	add	r2, sp, #28
   221f8:	4967      	ldr	r1, [pc, #412]	; (22398 <_tzset_unlocked_r+0x2f4>)
   221fa:	4620      	mov	r0, r4
   221fc:	f7fe fe34 	bl	20e68 <siscanf>
   22200:	2800      	cmp	r0, #0
   22202:	dc7d      	bgt.n	22300 <_tzset_unlocked_r+0x25c>
   22204:	6a2b      	ldr	r3, [r5, #32]
   22206:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   2220a:	63eb      	str	r3, [r5, #60]	; 0x3c
   2220c:	462f      	mov	r7, r5
   2220e:	f04f 0900 	mov.w	r9, #0
   22212:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   22214:	441c      	add	r4, r3
   22216:	7823      	ldrb	r3, [r4, #0]
   22218:	2b2c      	cmp	r3, #44	; 0x2c
   2221a:	bf08      	it	eq
   2221c:	3401      	addeq	r4, #1
   2221e:	f894 8000 	ldrb.w	r8, [r4]
   22222:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   22226:	d17b      	bne.n	22320 <_tzset_unlocked_r+0x27c>
   22228:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   2222c:	9302      	str	r3, [sp, #8]
   2222e:	ab09      	add	r3, sp, #36	; 0x24
   22230:	9300      	str	r3, [sp, #0]
   22232:	9603      	str	r6, [sp, #12]
   22234:	9601      	str	r6, [sp, #4]
   22236:	4633      	mov	r3, r6
   22238:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   2223c:	4957      	ldr	r1, [pc, #348]	; (2239c <_tzset_unlocked_r+0x2f8>)
   2223e:	4620      	mov	r0, r4
   22240:	f7fe fe12 	bl	20e68 <siscanf>
   22244:	2803      	cmp	r0, #3
   22246:	f47f af47 	bne.w	220d8 <_tzset_unlocked_r+0x34>
   2224a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   2224e:	1e4b      	subs	r3, r1, #1
   22250:	2b0b      	cmp	r3, #11
   22252:	f63f af41 	bhi.w	220d8 <_tzset_unlocked_r+0x34>
   22256:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   2225a:	1e53      	subs	r3, r2, #1
   2225c:	2b04      	cmp	r3, #4
   2225e:	f63f af3b 	bhi.w	220d8 <_tzset_unlocked_r+0x34>
   22262:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   22266:	2b06      	cmp	r3, #6
   22268:	f63f af36 	bhi.w	220d8 <_tzset_unlocked_r+0x34>
   2226c:	f887 8008 	strb.w	r8, [r7, #8]
   22270:	60f9      	str	r1, [r7, #12]
   22272:	613a      	str	r2, [r7, #16]
   22274:	617b      	str	r3, [r7, #20]
   22276:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   22278:	eb04 0803 	add.w	r8, r4, r3
   2227c:	2302      	movs	r3, #2
   2227e:	f8ad 301c 	strh.w	r3, [sp, #28]
   22282:	2300      	movs	r3, #0
   22284:	f8ad 301e 	strh.w	r3, [sp, #30]
   22288:	f8ad 3020 	strh.w	r3, [sp, #32]
   2228c:	930a      	str	r3, [sp, #40]	; 0x28
   2228e:	f898 3000 	ldrb.w	r3, [r8]
   22292:	2b2f      	cmp	r3, #47	; 0x2f
   22294:	d10b      	bne.n	222ae <_tzset_unlocked_r+0x20a>
   22296:	9603      	str	r6, [sp, #12]
   22298:	f8cd a008 	str.w	sl, [sp, #8]
   2229c:	9601      	str	r6, [sp, #4]
   2229e:	f8cd b000 	str.w	fp, [sp]
   222a2:	4633      	mov	r3, r6
   222a4:	aa07      	add	r2, sp, #28
   222a6:	493e      	ldr	r1, [pc, #248]	; (223a0 <_tzset_unlocked_r+0x2fc>)
   222a8:	4640      	mov	r0, r8
   222aa:	f7fe fddd 	bl	20e68 <siscanf>
   222ae:	213c      	movs	r1, #60	; 0x3c
   222b0:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   222b4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   222b8:	f109 0901 	add.w	r9, r9, #1
   222bc:	fb01 2203 	mla	r2, r1, r3, r2
   222c0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   222c4:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   222c8:	f1b9 0f02 	cmp.w	r9, #2
   222cc:	fb01 2303 	mla	r3, r1, r3, r2
   222d0:	61bb      	str	r3, [r7, #24]
   222d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   222d4:	f107 071c 	add.w	r7, r7, #28
   222d8:	4444      	add	r4, r8
   222da:	d19c      	bne.n	22216 <_tzset_unlocked_r+0x172>
   222dc:	6868      	ldr	r0, [r5, #4]
   222de:	f7ff fe31 	bl	21f44 <__tzcalc_limits>
   222e2:	6a2a      	ldr	r2, [r5, #32]
   222e4:	4b26      	ldr	r3, [pc, #152]	; (22380 <_tzset_unlocked_r+0x2dc>)
   222e6:	601a      	str	r2, [r3, #0]
   222e8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   222ea:	1a9b      	subs	r3, r3, r2
   222ec:	bf18      	it	ne
   222ee:	2301      	movne	r3, #1
   222f0:	4a25      	ldr	r2, [pc, #148]	; (22388 <_tzset_unlocked_r+0x2e4>)
   222f2:	6013      	str	r3, [r2, #0]
   222f4:	e6f0      	b.n	220d8 <_tzset_unlocked_r+0x34>
   222f6:	2b2b      	cmp	r3, #43	; 0x2b
   222f8:	bf08      	it	eq
   222fa:	3401      	addeq	r4, #1
   222fc:	2701      	movs	r7, #1
   222fe:	e76b      	b.n	221d8 <_tzset_unlocked_r+0x134>
   22300:	213c      	movs	r1, #60	; 0x3c
   22302:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   22306:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   2230a:	fb01 2203 	mla	r2, r1, r3, r2
   2230e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   22312:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   22316:	fb01 2303 	mla	r3, r1, r3, r2
   2231a:	435f      	muls	r7, r3
   2231c:	63ef      	str	r7, [r5, #60]	; 0x3c
   2231e:	e775      	b.n	2220c <_tzset_unlocked_r+0x168>
   22320:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   22324:	bf0a      	itet	eq
   22326:	4643      	moveq	r3, r8
   22328:	2344      	movne	r3, #68	; 0x44
   2232a:	3401      	addeq	r4, #1
   2232c:	220a      	movs	r2, #10
   2232e:	a90b      	add	r1, sp, #44	; 0x2c
   22330:	4620      	mov	r0, r4
   22332:	9305      	str	r3, [sp, #20]
   22334:	f003 f8be 	bl	254b4 <strtoul>
   22338:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   2233c:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   22340:	4544      	cmp	r4, r8
   22342:	9b05      	ldr	r3, [sp, #20]
   22344:	d114      	bne.n	22370 <_tzset_unlocked_r+0x2cc>
   22346:	234d      	movs	r3, #77	; 0x4d
   22348:	f1b9 0f00 	cmp.w	r9, #0
   2234c:	d107      	bne.n	2235e <_tzset_unlocked_r+0x2ba>
   2234e:	722b      	strb	r3, [r5, #8]
   22350:	2303      	movs	r3, #3
   22352:	60eb      	str	r3, [r5, #12]
   22354:	2302      	movs	r3, #2
   22356:	f8c5 9014 	str.w	r9, [r5, #20]
   2235a:	612b      	str	r3, [r5, #16]
   2235c:	e78e      	b.n	2227c <_tzset_unlocked_r+0x1d8>
   2235e:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   22362:	230b      	movs	r3, #11
   22364:	62ab      	str	r3, [r5, #40]	; 0x28
   22366:	2301      	movs	r3, #1
   22368:	62eb      	str	r3, [r5, #44]	; 0x2c
   2236a:	2300      	movs	r3, #0
   2236c:	632b      	str	r3, [r5, #48]	; 0x30
   2236e:	e785      	b.n	2227c <_tzset_unlocked_r+0x1d8>
   22370:	b280      	uxth	r0, r0
   22372:	723b      	strb	r3, [r7, #8]
   22374:	6178      	str	r0, [r7, #20]
   22376:	e781      	b.n	2227c <_tzset_unlocked_r+0x1d8>
   22378:	00028ec0 	.word	0x00028ec0
   2237c:	2007c974 	.word	0x2007c974
   22380:	2007c97c 	.word	0x2007c97c
   22384:	00028ec3 	.word	0x00028ec3
   22388:	2007c978 	.word	0x2007c978
   2238c:	2007c2b0 	.word	0x2007c2b0
   22390:	2007c967 	.word	0x2007c967
   22394:	00028ec7 	.word	0x00028ec7
   22398:	00028eea 	.word	0x00028eea
   2239c:	00028ed6 	.word	0x00028ed6
   223a0:	00028ee9 	.word	0x00028ee9
   223a4:	2007c95c 	.word	0x2007c95c

000223a8 <_vsniprintf_r>:
_vsniprintf_r():
   223a8:	b530      	push	{r4, r5, lr}
   223aa:	1e14      	subs	r4, r2, #0
   223ac:	4605      	mov	r5, r0
   223ae:	b09b      	sub	sp, #108	; 0x6c
   223b0:	4618      	mov	r0, r3
   223b2:	da05      	bge.n	223c0 <_vsniprintf_r+0x18>
   223b4:	238b      	movs	r3, #139	; 0x8b
   223b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   223ba:	602b      	str	r3, [r5, #0]
   223bc:	b01b      	add	sp, #108	; 0x6c
   223be:	bd30      	pop	{r4, r5, pc}
   223c0:	f44f 7302 	mov.w	r3, #520	; 0x208
   223c4:	f8ad 300c 	strh.w	r3, [sp, #12]
   223c8:	bf0c      	ite	eq
   223ca:	4623      	moveq	r3, r4
   223cc:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   223d0:	9302      	str	r3, [sp, #8]
   223d2:	9305      	str	r3, [sp, #20]
   223d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   223d8:	9100      	str	r1, [sp, #0]
   223da:	9104      	str	r1, [sp, #16]
   223dc:	f8ad 300e 	strh.w	r3, [sp, #14]
   223e0:	4602      	mov	r2, r0
   223e2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   223e4:	4669      	mov	r1, sp
   223e6:	4628      	mov	r0, r5
   223e8:	f002 f8de 	bl	245a8 <_svfiprintf_r>
   223ec:	1c43      	adds	r3, r0, #1
   223ee:	bfbc      	itt	lt
   223f0:	238b      	movlt	r3, #139	; 0x8b
   223f2:	602b      	strlt	r3, [r5, #0]
   223f4:	2c00      	cmp	r4, #0
   223f6:	d0e1      	beq.n	223bc <_vsniprintf_r+0x14>
   223f8:	2200      	movs	r2, #0
   223fa:	9b00      	ldr	r3, [sp, #0]
   223fc:	701a      	strb	r2, [r3, #0]
   223fe:	e7dd      	b.n	223bc <_vsniprintf_r+0x14>

00022400 <vsniprintf>:
vsniprintf():
   22400:	b507      	push	{r0, r1, r2, lr}
   22402:	9300      	str	r3, [sp, #0]
   22404:	4613      	mov	r3, r2
   22406:	460a      	mov	r2, r1
   22408:	4601      	mov	r1, r0
   2240a:	4803      	ldr	r0, [pc, #12]	; (22418 <vsniprintf+0x18>)
   2240c:	6800      	ldr	r0, [r0, #0]
   2240e:	f7ff ffcb 	bl	223a8 <_vsniprintf_r>
   22412:	b003      	add	sp, #12
   22414:	f85d fb04 	ldr.w	pc, [sp], #4
   22418:	2007c0e0 	.word	0x2007c0e0

0002241c <_vsiscanf_r>:
_vsscanf_r():
   2241c:	b570      	push	{r4, r5, r6, lr}
   2241e:	461e      	mov	r6, r3
   22420:	f44f 7301 	mov.w	r3, #516	; 0x204
   22424:	b09a      	sub	sp, #104	; 0x68
   22426:	4604      	mov	r4, r0
   22428:	4608      	mov	r0, r1
   2242a:	4615      	mov	r5, r2
   2242c:	f8ad 300c 	strh.w	r3, [sp, #12]
   22430:	9100      	str	r1, [sp, #0]
   22432:	9104      	str	r1, [sp, #16]
   22434:	f7fe fdd4 	bl	20fe0 <strlen>
   22438:	4b09      	ldr	r3, [pc, #36]	; (22460 <_vsiscanf_r+0x44>)
   2243a:	2100      	movs	r1, #0
   2243c:	9309      	str	r3, [sp, #36]	; 0x24
   2243e:	f64f 73ff 	movw	r3, #65535	; 0xffff
   22442:	9001      	str	r0, [sp, #4]
   22444:	9005      	str	r0, [sp, #20]
   22446:	910d      	str	r1, [sp, #52]	; 0x34
   22448:	9112      	str	r1, [sp, #72]	; 0x48
   2244a:	f8ad 300e 	strh.w	r3, [sp, #14]
   2244e:	462a      	mov	r2, r5
   22450:	4633      	mov	r3, r6
   22452:	4669      	mov	r1, sp
   22454:	4620      	mov	r0, r4
   22456:	f002 f9f5 	bl	24844 <__ssvfiscanf_r>
   2245a:	b01a      	add	sp, #104	; 0x68
   2245c:	bd70      	pop	{r4, r5, r6, pc}
   2245e:	bf00      	nop
   22460:	00020edf 	.word	0x00020edf

00022464 <vsiscanf>:
vsiscanf():
   22464:	4613      	mov	r3, r2
   22466:	460a      	mov	r2, r1
   22468:	4601      	mov	r1, r0
   2246a:	4802      	ldr	r0, [pc, #8]	; (22474 <vsiscanf+0x10>)
   2246c:	6800      	ldr	r0, [r0, #0]
   2246e:	f7ff bfd5 	b.w	2241c <_vsiscanf_r>
   22472:	bf00      	nop
   22474:	2007c0e0 	.word	0x2007c0e0

00022478 <__swbuf_r>:
__swbuf_r():
   22478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2247a:	460e      	mov	r6, r1
   2247c:	4614      	mov	r4, r2
   2247e:	4605      	mov	r5, r0
   22480:	b118      	cbz	r0, 2248a <__swbuf_r+0x12>
   22482:	6983      	ldr	r3, [r0, #24]
   22484:	b90b      	cbnz	r3, 2248a <__swbuf_r+0x12>
   22486:	f7fc fc53 	bl	1ed30 <__sinit>
   2248a:	4b21      	ldr	r3, [pc, #132]	; (22510 <__swbuf_r+0x98>)
   2248c:	429c      	cmp	r4, r3
   2248e:	d12a      	bne.n	224e6 <__swbuf_r+0x6e>
   22490:	686c      	ldr	r4, [r5, #4]
   22492:	69a3      	ldr	r3, [r4, #24]
   22494:	60a3      	str	r3, [r4, #8]
   22496:	89a3      	ldrh	r3, [r4, #12]
   22498:	071a      	lsls	r2, r3, #28
   2249a:	d52e      	bpl.n	224fa <__swbuf_r+0x82>
   2249c:	6923      	ldr	r3, [r4, #16]
   2249e:	b363      	cbz	r3, 224fa <__swbuf_r+0x82>
   224a0:	6923      	ldr	r3, [r4, #16]
   224a2:	6820      	ldr	r0, [r4, #0]
   224a4:	b2f6      	uxtb	r6, r6
   224a6:	1ac0      	subs	r0, r0, r3
   224a8:	6963      	ldr	r3, [r4, #20]
   224aa:	4637      	mov	r7, r6
   224ac:	4298      	cmp	r0, r3
   224ae:	db04      	blt.n	224ba <__swbuf_r+0x42>
   224b0:	4621      	mov	r1, r4
   224b2:	4628      	mov	r0, r5
   224b4:	f7fc fb20 	bl	1eaf8 <_fflush_r>
   224b8:	bb28      	cbnz	r0, 22506 <__swbuf_r+0x8e>
   224ba:	68a3      	ldr	r3, [r4, #8]
   224bc:	3001      	adds	r0, #1
   224be:	3b01      	subs	r3, #1
   224c0:	60a3      	str	r3, [r4, #8]
   224c2:	6823      	ldr	r3, [r4, #0]
   224c4:	1c5a      	adds	r2, r3, #1
   224c6:	6022      	str	r2, [r4, #0]
   224c8:	701e      	strb	r6, [r3, #0]
   224ca:	6963      	ldr	r3, [r4, #20]
   224cc:	4298      	cmp	r0, r3
   224ce:	d004      	beq.n	224da <__swbuf_r+0x62>
   224d0:	89a3      	ldrh	r3, [r4, #12]
   224d2:	07db      	lsls	r3, r3, #31
   224d4:	d519      	bpl.n	2250a <__swbuf_r+0x92>
   224d6:	2e0a      	cmp	r6, #10
   224d8:	d117      	bne.n	2250a <__swbuf_r+0x92>
   224da:	4621      	mov	r1, r4
   224dc:	4628      	mov	r0, r5
   224de:	f7fc fb0b 	bl	1eaf8 <_fflush_r>
   224e2:	b190      	cbz	r0, 2250a <__swbuf_r+0x92>
   224e4:	e00f      	b.n	22506 <__swbuf_r+0x8e>
   224e6:	4b0b      	ldr	r3, [pc, #44]	; (22514 <__swbuf_r+0x9c>)
   224e8:	429c      	cmp	r4, r3
   224ea:	d101      	bne.n	224f0 <__swbuf_r+0x78>
   224ec:	68ac      	ldr	r4, [r5, #8]
   224ee:	e7d0      	b.n	22492 <__swbuf_r+0x1a>
   224f0:	4b09      	ldr	r3, [pc, #36]	; (22518 <__swbuf_r+0xa0>)
   224f2:	429c      	cmp	r4, r3
   224f4:	bf08      	it	eq
   224f6:	68ec      	ldreq	r4, [r5, #12]
   224f8:	e7cb      	b.n	22492 <__swbuf_r+0x1a>
   224fa:	4621      	mov	r1, r4
   224fc:	4628      	mov	r0, r5
   224fe:	f000 f82d 	bl	2255c <__swsetup_r>
   22502:	2800      	cmp	r0, #0
   22504:	d0cc      	beq.n	224a0 <__swbuf_r+0x28>
   22506:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   2250a:	4638      	mov	r0, r7
   2250c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2250e:	bf00      	nop
   22510:	00028d28 	.word	0x00028d28
   22514:	00028d48 	.word	0x00028d48
   22518:	00028d08 	.word	0x00028d08

0002251c <__ascii_wctomb>:
__ascii_wctomb():
   2251c:	b149      	cbz	r1, 22532 <__ascii_wctomb+0x16>
   2251e:	2aff      	cmp	r2, #255	; 0xff
   22520:	bf8b      	itete	hi
   22522:	238a      	movhi	r3, #138	; 0x8a
   22524:	700a      	strbls	r2, [r1, #0]
   22526:	6003      	strhi	r3, [r0, #0]
   22528:	2001      	movls	r0, #1
   2252a:	bf88      	it	hi
   2252c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   22530:	4770      	bx	lr
   22532:	4608      	mov	r0, r1
   22534:	4770      	bx	lr
   22536:	Address 0x0000000000022536 is out of bounds.


00022538 <_write_r>:
_write_r():
   22538:	b538      	push	{r3, r4, r5, lr}
   2253a:	4605      	mov	r5, r0
   2253c:	4608      	mov	r0, r1
   2253e:	4611      	mov	r1, r2
   22540:	2200      	movs	r2, #0
   22542:	4c05      	ldr	r4, [pc, #20]	; (22558 <_write_r+0x20>)
   22544:	6022      	str	r2, [r4, #0]
   22546:	461a      	mov	r2, r3
   22548:	f7f4 ff92 	bl	17470 <_write>
   2254c:	1c43      	adds	r3, r0, #1
   2254e:	d102      	bne.n	22556 <_write_r+0x1e>
   22550:	6823      	ldr	r3, [r4, #0]
   22552:	b103      	cbz	r3, 22556 <_write_r+0x1e>
   22554:	602b      	str	r3, [r5, #0]
   22556:	bd38      	pop	{r3, r4, r5, pc}
   22558:	2007c984 	.word	0x2007c984

0002255c <__swsetup_r>:
__swsetup_r():
   2255c:	4b32      	ldr	r3, [pc, #200]	; (22628 <__swsetup_r+0xcc>)
   2255e:	b570      	push	{r4, r5, r6, lr}
   22560:	681d      	ldr	r5, [r3, #0]
   22562:	4606      	mov	r6, r0
   22564:	460c      	mov	r4, r1
   22566:	b125      	cbz	r5, 22572 <__swsetup_r+0x16>
   22568:	69ab      	ldr	r3, [r5, #24]
   2256a:	b913      	cbnz	r3, 22572 <__swsetup_r+0x16>
   2256c:	4628      	mov	r0, r5
   2256e:	f7fc fbdf 	bl	1ed30 <__sinit>
   22572:	4b2e      	ldr	r3, [pc, #184]	; (2262c <__swsetup_r+0xd0>)
   22574:	429c      	cmp	r4, r3
   22576:	d10f      	bne.n	22598 <__swsetup_r+0x3c>
   22578:	686c      	ldr	r4, [r5, #4]
   2257a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2257e:	b29a      	uxth	r2, r3
   22580:	0715      	lsls	r5, r2, #28
   22582:	d42c      	bmi.n	225de <__swsetup_r+0x82>
   22584:	06d0      	lsls	r0, r2, #27
   22586:	d411      	bmi.n	225ac <__swsetup_r+0x50>
   22588:	2209      	movs	r2, #9
   2258a:	6032      	str	r2, [r6, #0]
   2258c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22590:	81a3      	strh	r3, [r4, #12]
   22592:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   22596:	bd70      	pop	{r4, r5, r6, pc}
   22598:	4b25      	ldr	r3, [pc, #148]	; (22630 <__swsetup_r+0xd4>)
   2259a:	429c      	cmp	r4, r3
   2259c:	d101      	bne.n	225a2 <__swsetup_r+0x46>
   2259e:	68ac      	ldr	r4, [r5, #8]
   225a0:	e7eb      	b.n	2257a <__swsetup_r+0x1e>
   225a2:	4b24      	ldr	r3, [pc, #144]	; (22634 <__swsetup_r+0xd8>)
   225a4:	429c      	cmp	r4, r3
   225a6:	bf08      	it	eq
   225a8:	68ec      	ldreq	r4, [r5, #12]
   225aa:	e7e6      	b.n	2257a <__swsetup_r+0x1e>
   225ac:	0751      	lsls	r1, r2, #29
   225ae:	d512      	bpl.n	225d6 <__swsetup_r+0x7a>
   225b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
   225b2:	b141      	cbz	r1, 225c6 <__swsetup_r+0x6a>
   225b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
   225b8:	4299      	cmp	r1, r3
   225ba:	d002      	beq.n	225c2 <__swsetup_r+0x66>
   225bc:	4630      	mov	r0, r6
   225be:	f7fd fa05 	bl	1f9cc <_free_r>
   225c2:	2300      	movs	r3, #0
   225c4:	6363      	str	r3, [r4, #52]	; 0x34
   225c6:	89a3      	ldrh	r3, [r4, #12]
   225c8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   225cc:	81a3      	strh	r3, [r4, #12]
   225ce:	2300      	movs	r3, #0
   225d0:	6063      	str	r3, [r4, #4]
   225d2:	6923      	ldr	r3, [r4, #16]
   225d4:	6023      	str	r3, [r4, #0]
   225d6:	89a3      	ldrh	r3, [r4, #12]
   225d8:	f043 0308 	orr.w	r3, r3, #8
   225dc:	81a3      	strh	r3, [r4, #12]
   225de:	6923      	ldr	r3, [r4, #16]
   225e0:	b94b      	cbnz	r3, 225f6 <__swsetup_r+0x9a>
   225e2:	89a3      	ldrh	r3, [r4, #12]
   225e4:	f403 7320 	and.w	r3, r3, #640	; 0x280
   225e8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   225ec:	d003      	beq.n	225f6 <__swsetup_r+0x9a>
   225ee:	4621      	mov	r1, r4
   225f0:	4630      	mov	r0, r6
   225f2:	f7fc fecb 	bl	1f38c <__smakebuf_r>
   225f6:	89a2      	ldrh	r2, [r4, #12]
   225f8:	f012 0301 	ands.w	r3, r2, #1
   225fc:	d00c      	beq.n	22618 <__swsetup_r+0xbc>
   225fe:	2300      	movs	r3, #0
   22600:	60a3      	str	r3, [r4, #8]
   22602:	6963      	ldr	r3, [r4, #20]
   22604:	425b      	negs	r3, r3
   22606:	61a3      	str	r3, [r4, #24]
   22608:	6923      	ldr	r3, [r4, #16]
   2260a:	b953      	cbnz	r3, 22622 <__swsetup_r+0xc6>
   2260c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22610:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   22614:	d1ba      	bne.n	2258c <__swsetup_r+0x30>
   22616:	bd70      	pop	{r4, r5, r6, pc}
   22618:	0792      	lsls	r2, r2, #30
   2261a:	bf58      	it	pl
   2261c:	6963      	ldrpl	r3, [r4, #20]
   2261e:	60a3      	str	r3, [r4, #8]
   22620:	e7f2      	b.n	22608 <__swsetup_r+0xac>
   22622:	2000      	movs	r0, #0
   22624:	e7f7      	b.n	22616 <__swsetup_r+0xba>
   22626:	bf00      	nop
   22628:	2007c0e0 	.word	0x2007c0e0
   2262c:	00028d28 	.word	0x00028d28
   22630:	00028d48 	.word	0x00028d48
   22634:	00028d08 	.word	0x00028d08

00022638 <asctime>:
asctime():
   22638:	4b09      	ldr	r3, [pc, #36]	; (22660 <asctime+0x28>)
   2263a:	b570      	push	{r4, r5, r6, lr}
   2263c:	681c      	ldr	r4, [r3, #0]
   2263e:	4606      	mov	r6, r0
   22640:	6c25      	ldr	r5, [r4, #64]	; 0x40
   22642:	b93d      	cbnz	r5, 22654 <asctime+0x1c>
   22644:	201a      	movs	r0, #26
   22646:	f7fc fee1 	bl	1f40c <malloc>
   2264a:	221a      	movs	r2, #26
   2264c:	6420      	str	r0, [r4, #64]	; 0x40
   2264e:	4629      	mov	r1, r5
   22650:	f7fc ff40 	bl	1f4d4 <memset>
   22654:	6c21      	ldr	r1, [r4, #64]	; 0x40
   22656:	4630      	mov	r0, r6
   22658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   2265c:	f000 b802 	b.w	22664 <asctime_r>
   22660:	2007c0e0 	.word	0x2007c0e0

00022664 <asctime_r>:
asctime_r():
   22664:	b510      	push	{r4, lr}
   22666:	460c      	mov	r4, r1
   22668:	6941      	ldr	r1, [r0, #20]
   2266a:	b086      	sub	sp, #24
   2266c:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   22670:	6903      	ldr	r3, [r0, #16]
   22672:	6982      	ldr	r2, [r0, #24]
   22674:	9104      	str	r1, [sp, #16]
   22676:	6801      	ldr	r1, [r0, #0]
   22678:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   2267c:	9103      	str	r1, [sp, #12]
   2267e:	6841      	ldr	r1, [r0, #4]
   22680:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   22684:	9102      	str	r1, [sp, #8]
   22686:	6881      	ldr	r1, [r0, #8]
   22688:	9101      	str	r1, [sp, #4]
   2268a:	68c1      	ldr	r1, [r0, #12]
   2268c:	4620      	mov	r0, r4
   2268e:	9100      	str	r1, [sp, #0]
   22690:	4904      	ldr	r1, [pc, #16]	; (226a4 <asctime_r+0x40>)
   22692:	440b      	add	r3, r1
   22694:	4904      	ldr	r1, [pc, #16]	; (226a8 <asctime_r+0x44>)
   22696:	440a      	add	r2, r1
   22698:	4904      	ldr	r1, [pc, #16]	; (226ac <asctime_r+0x48>)
   2269a:	f7fe fbc1 	bl	20e20 <siprintf>
   2269e:	4620      	mov	r0, r4
   226a0:	b006      	add	sp, #24
   226a2:	bd10      	pop	{r4, pc}
   226a4:	00028f31 	.word	0x00028f31
   226a8:	00028f1c 	.word	0x00028f1c
   226ac:	00028efc 	.word	0x00028efc

000226b0 <_close_r>:
_close_r():
   226b0:	b538      	push	{r3, r4, r5, lr}
   226b2:	2300      	movs	r3, #0
   226b4:	4c05      	ldr	r4, [pc, #20]	; (226cc <_close_r+0x1c>)
   226b6:	4605      	mov	r5, r0
   226b8:	4608      	mov	r0, r1
   226ba:	6023      	str	r3, [r4, #0]
   226bc:	f7f4 ffd0 	bl	17660 <_close>
   226c0:	1c43      	adds	r3, r0, #1
   226c2:	d102      	bne.n	226ca <_close_r+0x1a>
   226c4:	6823      	ldr	r3, [r4, #0]
   226c6:	b103      	cbz	r3, 226ca <_close_r+0x1a>
   226c8:	602b      	str	r3, [r5, #0]
   226ca:	bd38      	pop	{r3, r4, r5, pc}
   226cc:	2007c984 	.word	0x2007c984

000226d0 <div>:
div():
   226d0:	b510      	push	{r4, lr}
   226d2:	fb91 f4f2 	sdiv	r4, r1, r2
   226d6:	2900      	cmp	r1, #0
   226d8:	fb02 1314 	mls	r3, r2, r4, r1
   226dc:	db06      	blt.n	226ec <div+0x1c>
   226de:	2b00      	cmp	r3, #0
   226e0:	da01      	bge.n	226e6 <div+0x16>
   226e2:	3401      	adds	r4, #1
   226e4:	1a9b      	subs	r3, r3, r2
   226e6:	6004      	str	r4, [r0, #0]
   226e8:	6043      	str	r3, [r0, #4]
   226ea:	bd10      	pop	{r4, pc}
   226ec:	2b00      	cmp	r3, #0
   226ee:	bfc4      	itt	gt
   226f0:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   226f4:	189b      	addgt	r3, r3, r2
   226f6:	e7f6      	b.n	226e6 <div+0x16>

000226f8 <quorem>:
quorem():
   226f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226fc:	6903      	ldr	r3, [r0, #16]
   226fe:	690c      	ldr	r4, [r1, #16]
   22700:	4680      	mov	r8, r0
   22702:	429c      	cmp	r4, r3
   22704:	f300 8082 	bgt.w	2280c <quorem+0x114>
   22708:	3c01      	subs	r4, #1
   2270a:	f101 0714 	add.w	r7, r1, #20
   2270e:	f100 0614 	add.w	r6, r0, #20
   22712:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   22716:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   2271a:	3501      	adds	r5, #1
   2271c:	fbb0 f5f5 	udiv	r5, r0, r5
   22720:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   22724:	eb06 030e 	add.w	r3, r6, lr
   22728:	eb07 090e 	add.w	r9, r7, lr
   2272c:	9301      	str	r3, [sp, #4]
   2272e:	b38d      	cbz	r5, 22794 <quorem+0x9c>
   22730:	f04f 0a00 	mov.w	sl, #0
   22734:	4638      	mov	r0, r7
   22736:	46b4      	mov	ip, r6
   22738:	46d3      	mov	fp, sl
   2273a:	f850 2b04 	ldr.w	r2, [r0], #4
   2273e:	b293      	uxth	r3, r2
   22740:	fb05 a303 	mla	r3, r5, r3, sl
   22744:	0c12      	lsrs	r2, r2, #16
   22746:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   2274a:	fb05 a202 	mla	r2, r5, r2, sl
   2274e:	b29b      	uxth	r3, r3
   22750:	ebab 0303 	sub.w	r3, fp, r3
   22754:	f8bc b000 	ldrh.w	fp, [ip]
   22758:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   2275c:	445b      	add	r3, fp
   2275e:	fa1f fb82 	uxth.w	fp, r2
   22762:	f8dc 2000 	ldr.w	r2, [ip]
   22766:	4581      	cmp	r9, r0
   22768:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   2276c:	eb02 4223 	add.w	r2, r2, r3, asr #16
   22770:	b29b      	uxth	r3, r3
   22772:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   22776:	ea4f 4b22 	mov.w	fp, r2, asr #16
   2277a:	f84c 3b04 	str.w	r3, [ip], #4
   2277e:	d2dc      	bcs.n	2273a <quorem+0x42>
   22780:	f856 300e 	ldr.w	r3, [r6, lr]
   22784:	b933      	cbnz	r3, 22794 <quorem+0x9c>
   22786:	9b01      	ldr	r3, [sp, #4]
   22788:	3b04      	subs	r3, #4
   2278a:	429e      	cmp	r6, r3
   2278c:	461a      	mov	r2, r3
   2278e:	d331      	bcc.n	227f4 <quorem+0xfc>
   22790:	f8c8 4010 	str.w	r4, [r8, #16]
   22794:	4640      	mov	r0, r8
   22796:	f001 fce4 	bl	24162 <__mcmp>
   2279a:	2800      	cmp	r0, #0
   2279c:	db26      	blt.n	227ec <quorem+0xf4>
   2279e:	4630      	mov	r0, r6
   227a0:	f04f 0e00 	mov.w	lr, #0
   227a4:	3501      	adds	r5, #1
   227a6:	f857 1b04 	ldr.w	r1, [r7], #4
   227aa:	f8d0 c000 	ldr.w	ip, [r0]
   227ae:	b28b      	uxth	r3, r1
   227b0:	ebae 0303 	sub.w	r3, lr, r3
   227b4:	fa1f f28c 	uxth.w	r2, ip
   227b8:	4413      	add	r3, r2
   227ba:	0c0a      	lsrs	r2, r1, #16
   227bc:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   227c0:	eb02 4223 	add.w	r2, r2, r3, asr #16
   227c4:	b29b      	uxth	r3, r3
   227c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   227ca:	45b9      	cmp	r9, r7
   227cc:	ea4f 4e22 	mov.w	lr, r2, asr #16
   227d0:	f840 3b04 	str.w	r3, [r0], #4
   227d4:	d2e7      	bcs.n	227a6 <quorem+0xae>
   227d6:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   227da:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   227de:	b92a      	cbnz	r2, 227ec <quorem+0xf4>
   227e0:	3b04      	subs	r3, #4
   227e2:	429e      	cmp	r6, r3
   227e4:	461a      	mov	r2, r3
   227e6:	d30b      	bcc.n	22800 <quorem+0x108>
   227e8:	f8c8 4010 	str.w	r4, [r8, #16]
   227ec:	4628      	mov	r0, r5
   227ee:	b003      	add	sp, #12
   227f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227f4:	6812      	ldr	r2, [r2, #0]
   227f6:	3b04      	subs	r3, #4
   227f8:	2a00      	cmp	r2, #0
   227fa:	d1c9      	bne.n	22790 <quorem+0x98>
   227fc:	3c01      	subs	r4, #1
   227fe:	e7c4      	b.n	2278a <quorem+0x92>
   22800:	6812      	ldr	r2, [r2, #0]
   22802:	3b04      	subs	r3, #4
   22804:	2a00      	cmp	r2, #0
   22806:	d1ef      	bne.n	227e8 <quorem+0xf0>
   22808:	3c01      	subs	r4, #1
   2280a:	e7ea      	b.n	227e2 <quorem+0xea>
   2280c:	2000      	movs	r0, #0
   2280e:	e7ee      	b.n	227ee <quorem+0xf6>

00022810 <_dtoa_r>:
_dtoa_r():
   22810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22814:	6a46      	ldr	r6, [r0, #36]	; 0x24
   22816:	b095      	sub	sp, #84	; 0x54
   22818:	4604      	mov	r4, r0
   2281a:	9d21      	ldr	r5, [sp, #132]	; 0x84
   2281c:	e9cd 2302 	strd	r2, r3, [sp, #8]
   22820:	b93e      	cbnz	r6, 22832 <_dtoa_r+0x22>
   22822:	2010      	movs	r0, #16
   22824:	f7fc fdf2 	bl	1f40c <malloc>
   22828:	6260      	str	r0, [r4, #36]	; 0x24
   2282a:	6046      	str	r6, [r0, #4]
   2282c:	6086      	str	r6, [r0, #8]
   2282e:	6006      	str	r6, [r0, #0]
   22830:	60c6      	str	r6, [r0, #12]
   22832:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22834:	6819      	ldr	r1, [r3, #0]
   22836:	b151      	cbz	r1, 2284e <_dtoa_r+0x3e>
   22838:	685a      	ldr	r2, [r3, #4]
   2283a:	2301      	movs	r3, #1
   2283c:	4093      	lsls	r3, r2
   2283e:	604a      	str	r2, [r1, #4]
   22840:	608b      	str	r3, [r1, #8]
   22842:	4620      	mov	r0, r4
   22844:	f001 fa7a 	bl	23d3c <_Bfree>
   22848:	2200      	movs	r2, #0
   2284a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   2284c:	601a      	str	r2, [r3, #0]
   2284e:	9b03      	ldr	r3, [sp, #12]
   22850:	2b00      	cmp	r3, #0
   22852:	bfb7      	itett	lt
   22854:	2301      	movlt	r3, #1
   22856:	2300      	movge	r3, #0
   22858:	602b      	strlt	r3, [r5, #0]
   2285a:	9b03      	ldrlt	r3, [sp, #12]
   2285c:	bfae      	itee	ge
   2285e:	602b      	strge	r3, [r5, #0]
   22860:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   22864:	9303      	strlt	r3, [sp, #12]
   22866:	f8dd 900c 	ldr.w	r9, [sp, #12]
   2286a:	4bab      	ldr	r3, [pc, #684]	; (22b18 <_dtoa_r+0x308>)
   2286c:	ea33 0309 	bics.w	r3, r3, r9
   22870:	d11b      	bne.n	228aa <_dtoa_r+0x9a>
   22872:	f242 730f 	movw	r3, #9999	; 0x270f
   22876:	9a20      	ldr	r2, [sp, #128]	; 0x80
   22878:	6013      	str	r3, [r2, #0]
   2287a:	9b02      	ldr	r3, [sp, #8]
   2287c:	b923      	cbnz	r3, 22888 <_dtoa_r+0x78>
   2287e:	f3c9 0013 	ubfx	r0, r9, #0, #20
   22882:	2800      	cmp	r0, #0
   22884:	f000 8583 	beq.w	2338e <_dtoa_r+0xb7e>
   22888:	9b22      	ldr	r3, [sp, #136]	; 0x88
   2288a:	b953      	cbnz	r3, 228a2 <_dtoa_r+0x92>
   2288c:	4ba3      	ldr	r3, [pc, #652]	; (22b1c <_dtoa_r+0x30c>)
   2288e:	e021      	b.n	228d4 <_dtoa_r+0xc4>
   22890:	4ba3      	ldr	r3, [pc, #652]	; (22b20 <_dtoa_r+0x310>)
   22892:	9306      	str	r3, [sp, #24]
   22894:	3308      	adds	r3, #8
   22896:	9a22      	ldr	r2, [sp, #136]	; 0x88
   22898:	6013      	str	r3, [r2, #0]
   2289a:	9806      	ldr	r0, [sp, #24]
   2289c:	b015      	add	sp, #84	; 0x54
   2289e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228a2:	4b9e      	ldr	r3, [pc, #632]	; (22b1c <_dtoa_r+0x30c>)
   228a4:	9306      	str	r3, [sp, #24]
   228a6:	3303      	adds	r3, #3
   228a8:	e7f5      	b.n	22896 <_dtoa_r+0x86>
   228aa:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   228ae:	2200      	movs	r2, #0
   228b0:	2300      	movs	r3, #0
   228b2:	4630      	mov	r0, r6
   228b4:	4639      	mov	r1, r7
   228b6:	f003 f933 	bl	25b20 <__aeabi_dcmpeq>
   228ba:	4680      	mov	r8, r0
   228bc:	b160      	cbz	r0, 228d8 <_dtoa_r+0xc8>
   228be:	2301      	movs	r3, #1
   228c0:	9a20      	ldr	r2, [sp, #128]	; 0x80
   228c2:	6013      	str	r3, [r2, #0]
   228c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   228c6:	2b00      	cmp	r3, #0
   228c8:	f000 855e 	beq.w	23388 <_dtoa_r+0xb78>
   228cc:	4b95      	ldr	r3, [pc, #596]	; (22b24 <_dtoa_r+0x314>)
   228ce:	9a22      	ldr	r2, [sp, #136]	; 0x88
   228d0:	6013      	str	r3, [r2, #0]
   228d2:	3b01      	subs	r3, #1
   228d4:	9306      	str	r3, [sp, #24]
   228d6:	e7e0      	b.n	2289a <_dtoa_r+0x8a>
   228d8:	ab12      	add	r3, sp, #72	; 0x48
   228da:	9301      	str	r3, [sp, #4]
   228dc:	ab13      	add	r3, sp, #76	; 0x4c
   228de:	9300      	str	r3, [sp, #0]
   228e0:	4632      	mov	r2, r6
   228e2:	463b      	mov	r3, r7
   228e4:	4620      	mov	r0, r4
   228e6:	f001 fd2b 	bl	24340 <__d2b>
   228ea:	f3c9 550a 	ubfx	r5, r9, #20, #11
   228ee:	4682      	mov	sl, r0
   228f0:	2d00      	cmp	r5, #0
   228f2:	d07d      	beq.n	229f0 <_dtoa_r+0x1e0>
   228f4:	4630      	mov	r0, r6
   228f6:	f3c7 0313 	ubfx	r3, r7, #0, #20
   228fa:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   228fe:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   22902:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   22906:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   2290a:	2200      	movs	r2, #0
   2290c:	4b86      	ldr	r3, [pc, #536]	; (22b28 <_dtoa_r+0x318>)
   2290e:	f7fb f99f 	bl	1dc50 <__aeabi_dsub>
   22912:	a37b      	add	r3, pc, #492	; (adr r3, 22b00 <_dtoa_r+0x2f0>)
   22914:	e9d3 2300 	ldrd	r2, r3, [r3]
   22918:	f002 fe9a 	bl	25650 <__aeabi_dmul>
   2291c:	a37a      	add	r3, pc, #488	; (adr r3, 22b08 <_dtoa_r+0x2f8>)
   2291e:	e9d3 2300 	ldrd	r2, r3, [r3]
   22922:	f7fb f997 	bl	1dc54 <__adddf3>
   22926:	4606      	mov	r6, r0
   22928:	4628      	mov	r0, r5
   2292a:	460f      	mov	r7, r1
   2292c:	f7fb fade 	bl	1deec <__aeabi_i2d>
   22930:	a377      	add	r3, pc, #476	; (adr r3, 22b10 <_dtoa_r+0x300>)
   22932:	e9d3 2300 	ldrd	r2, r3, [r3]
   22936:	f002 fe8b 	bl	25650 <__aeabi_dmul>
   2293a:	4602      	mov	r2, r0
   2293c:	460b      	mov	r3, r1
   2293e:	4630      	mov	r0, r6
   22940:	4639      	mov	r1, r7
   22942:	f7fb f987 	bl	1dc54 <__adddf3>
   22946:	4606      	mov	r6, r0
   22948:	460f      	mov	r7, r1
   2294a:	f003 f931 	bl	25bb0 <__aeabi_d2iz>
   2294e:	2200      	movs	r2, #0
   22950:	4683      	mov	fp, r0
   22952:	2300      	movs	r3, #0
   22954:	4630      	mov	r0, r6
   22956:	4639      	mov	r1, r7
   22958:	f003 f8ec 	bl	25b34 <__aeabi_dcmplt>
   2295c:	b158      	cbz	r0, 22976 <_dtoa_r+0x166>
   2295e:	4658      	mov	r0, fp
   22960:	f7fb fac4 	bl	1deec <__aeabi_i2d>
   22964:	4602      	mov	r2, r0
   22966:	460b      	mov	r3, r1
   22968:	4630      	mov	r0, r6
   2296a:	4639      	mov	r1, r7
   2296c:	f003 f8d8 	bl	25b20 <__aeabi_dcmpeq>
   22970:	b908      	cbnz	r0, 22976 <_dtoa_r+0x166>
   22972:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   22976:	f1bb 0f16 	cmp.w	fp, #22
   2297a:	d858      	bhi.n	22a2e <_dtoa_r+0x21e>
   2297c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22980:	496a      	ldr	r1, [pc, #424]	; (22b2c <_dtoa_r+0x31c>)
   22982:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   22986:	e9d1 0100 	ldrd	r0, r1, [r1]
   2298a:	f003 f8f1 	bl	25b70 <__aeabi_dcmpgt>
   2298e:	2800      	cmp	r0, #0
   22990:	d04f      	beq.n	22a32 <_dtoa_r+0x222>
   22992:	2300      	movs	r3, #0
   22994:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   22998:	930d      	str	r3, [sp, #52]	; 0x34
   2299a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   2299c:	1b5d      	subs	r5, r3, r5
   2299e:	1e6b      	subs	r3, r5, #1
   229a0:	9307      	str	r3, [sp, #28]
   229a2:	bf43      	ittte	mi
   229a4:	2300      	movmi	r3, #0
   229a6:	f1c5 0801 	rsbmi	r8, r5, #1
   229aa:	9307      	strmi	r3, [sp, #28]
   229ac:	f04f 0800 	movpl.w	r8, #0
   229b0:	f1bb 0f00 	cmp.w	fp, #0
   229b4:	db3f      	blt.n	22a36 <_dtoa_r+0x226>
   229b6:	9b07      	ldr	r3, [sp, #28]
   229b8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   229bc:	445b      	add	r3, fp
   229be:	9307      	str	r3, [sp, #28]
   229c0:	2300      	movs	r3, #0
   229c2:	9308      	str	r3, [sp, #32]
   229c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   229c6:	2b09      	cmp	r3, #9
   229c8:	f200 80b4 	bhi.w	22b34 <_dtoa_r+0x324>
   229cc:	2b05      	cmp	r3, #5
   229ce:	bfc4      	itt	gt
   229d0:	3b04      	subgt	r3, #4
   229d2:	931e      	strgt	r3, [sp, #120]	; 0x78
   229d4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   229d6:	bfc8      	it	gt
   229d8:	2600      	movgt	r6, #0
   229da:	f1a3 0302 	sub.w	r3, r3, #2
   229de:	bfd8      	it	le
   229e0:	2601      	movle	r6, #1
   229e2:	2b03      	cmp	r3, #3
   229e4:	f200 80b2 	bhi.w	22b4c <_dtoa_r+0x33c>
   229e8:	e8df f003 	tbb	[pc, r3]
   229ec:	782d8684 	.word	0x782d8684
   229f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   229f2:	9d12      	ldr	r5, [sp, #72]	; 0x48
   229f4:	441d      	add	r5, r3
   229f6:	f205 4332 	addw	r3, r5, #1074	; 0x432
   229fa:	2b20      	cmp	r3, #32
   229fc:	dd11      	ble.n	22a22 <_dtoa_r+0x212>
   229fe:	9a02      	ldr	r2, [sp, #8]
   22a00:	f205 4012 	addw	r0, r5, #1042	; 0x412
   22a04:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   22a08:	fa22 f000 	lsr.w	r0, r2, r0
   22a0c:	fa09 f303 	lsl.w	r3, r9, r3
   22a10:	4318      	orrs	r0, r3
   22a12:	f7fb fa5b 	bl	1decc <__aeabi_ui2d>
   22a16:	2301      	movs	r3, #1
   22a18:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   22a1c:	3d01      	subs	r5, #1
   22a1e:	9310      	str	r3, [sp, #64]	; 0x40
   22a20:	e773      	b.n	2290a <_dtoa_r+0xfa>
   22a22:	f1c3 0020 	rsb	r0, r3, #32
   22a26:	9b02      	ldr	r3, [sp, #8]
   22a28:	fa03 f000 	lsl.w	r0, r3, r0
   22a2c:	e7f1      	b.n	22a12 <_dtoa_r+0x202>
   22a2e:	2301      	movs	r3, #1
   22a30:	e7b2      	b.n	22998 <_dtoa_r+0x188>
   22a32:	900d      	str	r0, [sp, #52]	; 0x34
   22a34:	e7b1      	b.n	2299a <_dtoa_r+0x18a>
   22a36:	f1cb 0300 	rsb	r3, fp, #0
   22a3a:	9308      	str	r3, [sp, #32]
   22a3c:	2300      	movs	r3, #0
   22a3e:	eba8 080b 	sub.w	r8, r8, fp
   22a42:	930c      	str	r3, [sp, #48]	; 0x30
   22a44:	e7be      	b.n	229c4 <_dtoa_r+0x1b4>
   22a46:	2301      	movs	r3, #1
   22a48:	9309      	str	r3, [sp, #36]	; 0x24
   22a4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   22a4c:	2b00      	cmp	r3, #0
   22a4e:	f340 8080 	ble.w	22b52 <_dtoa_r+0x342>
   22a52:	4699      	mov	r9, r3
   22a54:	9304      	str	r3, [sp, #16]
   22a56:	2200      	movs	r2, #0
   22a58:	2104      	movs	r1, #4
   22a5a:	6a65      	ldr	r5, [r4, #36]	; 0x24
   22a5c:	606a      	str	r2, [r5, #4]
   22a5e:	f101 0214 	add.w	r2, r1, #20
   22a62:	429a      	cmp	r2, r3
   22a64:	d97a      	bls.n	22b5c <_dtoa_r+0x34c>
   22a66:	6869      	ldr	r1, [r5, #4]
   22a68:	4620      	mov	r0, r4
   22a6a:	f001 f933 	bl	23cd4 <_Balloc>
   22a6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   22a70:	6028      	str	r0, [r5, #0]
   22a72:	681b      	ldr	r3, [r3, #0]
   22a74:	f1b9 0f0e 	cmp.w	r9, #14
   22a78:	9306      	str	r3, [sp, #24]
   22a7a:	f200 80f0 	bhi.w	22c5e <_dtoa_r+0x44e>
   22a7e:	2e00      	cmp	r6, #0
   22a80:	f000 80ed 	beq.w	22c5e <_dtoa_r+0x44e>
   22a84:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22a88:	f1bb 0f00 	cmp.w	fp, #0
   22a8c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   22a90:	dd79      	ble.n	22b86 <_dtoa_r+0x376>
   22a92:	4a26      	ldr	r2, [pc, #152]	; (22b2c <_dtoa_r+0x31c>)
   22a94:	f00b 030f 	and.w	r3, fp, #15
   22a98:	ea4f 162b 	mov.w	r6, fp, asr #4
   22a9c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   22aa0:	06f0      	lsls	r0, r6, #27
   22aa2:	e9d3 2300 	ldrd	r2, r3, [r3]
   22aa6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   22aaa:	d55c      	bpl.n	22b66 <_dtoa_r+0x356>
   22aac:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   22ab0:	4b1f      	ldr	r3, [pc, #124]	; (22b30 <_dtoa_r+0x320>)
   22ab2:	2503      	movs	r5, #3
   22ab4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   22ab8:	f002 fef4 	bl	258a4 <__aeabi_ddiv>
   22abc:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22ac0:	f006 060f 	and.w	r6, r6, #15
   22ac4:	4f1a      	ldr	r7, [pc, #104]	; (22b30 <_dtoa_r+0x320>)
   22ac6:	2e00      	cmp	r6, #0
   22ac8:	d14f      	bne.n	22b6a <_dtoa_r+0x35a>
   22aca:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22ace:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22ad2:	f002 fee7 	bl	258a4 <__aeabi_ddiv>
   22ad6:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22ada:	e06e      	b.n	22bba <_dtoa_r+0x3aa>
   22adc:	2301      	movs	r3, #1
   22ade:	9309      	str	r3, [sp, #36]	; 0x24
   22ae0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   22ae2:	445b      	add	r3, fp
   22ae4:	f103 0901 	add.w	r9, r3, #1
   22ae8:	9304      	str	r3, [sp, #16]
   22aea:	464b      	mov	r3, r9
   22aec:	2b01      	cmp	r3, #1
   22aee:	bfb8      	it	lt
   22af0:	2301      	movlt	r3, #1
   22af2:	e7b0      	b.n	22a56 <_dtoa_r+0x246>
   22af4:	2300      	movs	r3, #0
   22af6:	e7a7      	b.n	22a48 <_dtoa_r+0x238>
   22af8:	2300      	movs	r3, #0
   22afa:	e7f0      	b.n	22ade <_dtoa_r+0x2ce>
   22afc:	f3af 8000 	nop.w
   22b00:	636f4361 	.word	0x636f4361
   22b04:	3fd287a7 	.word	0x3fd287a7
   22b08:	8b60c8b3 	.word	0x8b60c8b3
   22b0c:	3fc68a28 	.word	0x3fc68a28
   22b10:	509f79fb 	.word	0x509f79fb
   22b14:	3fd34413 	.word	0x3fd34413
   22b18:	7ff00000 	.word	0x7ff00000
   22b1c:	0002905f 	.word	0x0002905f
   22b20:	00029056 	.word	0x00029056
   22b24:	00025eb3 	.word	0x00025eb3
   22b28:	3ff80000 	.word	0x3ff80000
   22b2c:	00029090 	.word	0x00029090
   22b30:	00029068 	.word	0x00029068
   22b34:	2601      	movs	r6, #1
   22b36:	2300      	movs	r3, #0
   22b38:	9609      	str	r6, [sp, #36]	; 0x24
   22b3a:	931e      	str	r3, [sp, #120]	; 0x78
   22b3c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   22b40:	2200      	movs	r2, #0
   22b42:	9304      	str	r3, [sp, #16]
   22b44:	4699      	mov	r9, r3
   22b46:	2312      	movs	r3, #18
   22b48:	921f      	str	r2, [sp, #124]	; 0x7c
   22b4a:	e784      	b.n	22a56 <_dtoa_r+0x246>
   22b4c:	2301      	movs	r3, #1
   22b4e:	9309      	str	r3, [sp, #36]	; 0x24
   22b50:	e7f4      	b.n	22b3c <_dtoa_r+0x32c>
   22b52:	2301      	movs	r3, #1
   22b54:	9304      	str	r3, [sp, #16]
   22b56:	4699      	mov	r9, r3
   22b58:	461a      	mov	r2, r3
   22b5a:	e7f5      	b.n	22b48 <_dtoa_r+0x338>
   22b5c:	686a      	ldr	r2, [r5, #4]
   22b5e:	0049      	lsls	r1, r1, #1
   22b60:	3201      	adds	r2, #1
   22b62:	606a      	str	r2, [r5, #4]
   22b64:	e77b      	b.n	22a5e <_dtoa_r+0x24e>
   22b66:	2502      	movs	r5, #2
   22b68:	e7ac      	b.n	22ac4 <_dtoa_r+0x2b4>
   22b6a:	07f1      	lsls	r1, r6, #31
   22b6c:	d508      	bpl.n	22b80 <_dtoa_r+0x370>
   22b6e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   22b72:	e9d7 2300 	ldrd	r2, r3, [r7]
   22b76:	f002 fd6b 	bl	25650 <__aeabi_dmul>
   22b7a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   22b7e:	3501      	adds	r5, #1
   22b80:	1076      	asrs	r6, r6, #1
   22b82:	3708      	adds	r7, #8
   22b84:	e79f      	b.n	22ac6 <_dtoa_r+0x2b6>
   22b86:	f000 80a5 	beq.w	22cd4 <_dtoa_r+0x4c4>
   22b8a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   22b8e:	f1cb 0600 	rsb	r6, fp, #0
   22b92:	4ba2      	ldr	r3, [pc, #648]	; (22e1c <_dtoa_r+0x60c>)
   22b94:	f006 020f 	and.w	r2, r6, #15
   22b98:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   22b9c:	e9d3 2300 	ldrd	r2, r3, [r3]
   22ba0:	f002 fd56 	bl	25650 <__aeabi_dmul>
   22ba4:	2502      	movs	r5, #2
   22ba6:	2300      	movs	r3, #0
   22ba8:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22bac:	4f9c      	ldr	r7, [pc, #624]	; (22e20 <_dtoa_r+0x610>)
   22bae:	1136      	asrs	r6, r6, #4
   22bb0:	2e00      	cmp	r6, #0
   22bb2:	f040 8084 	bne.w	22cbe <_dtoa_r+0x4ae>
   22bb6:	2b00      	cmp	r3, #0
   22bb8:	d18d      	bne.n	22ad6 <_dtoa_r+0x2c6>
   22bba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   22bbc:	2b00      	cmp	r3, #0
   22bbe:	f000 808b 	beq.w	22cd8 <_dtoa_r+0x4c8>
   22bc2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22bc6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   22bca:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   22bce:	2200      	movs	r2, #0
   22bd0:	4b94      	ldr	r3, [pc, #592]	; (22e24 <_dtoa_r+0x614>)
   22bd2:	f002 ffaf 	bl	25b34 <__aeabi_dcmplt>
   22bd6:	2800      	cmp	r0, #0
   22bd8:	d07e      	beq.n	22cd8 <_dtoa_r+0x4c8>
   22bda:	f1b9 0f00 	cmp.w	r9, #0
   22bde:	d07b      	beq.n	22cd8 <_dtoa_r+0x4c8>
   22be0:	9b04      	ldr	r3, [sp, #16]
   22be2:	2b00      	cmp	r3, #0
   22be4:	dd37      	ble.n	22c56 <_dtoa_r+0x446>
   22be6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   22bea:	2200      	movs	r2, #0
   22bec:	4b8e      	ldr	r3, [pc, #568]	; (22e28 <_dtoa_r+0x618>)
   22bee:	f002 fd2f 	bl	25650 <__aeabi_dmul>
   22bf2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22bf6:	9e04      	ldr	r6, [sp, #16]
   22bf8:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   22bfc:	3501      	adds	r5, #1
   22bfe:	4628      	mov	r0, r5
   22c00:	f7fb f974 	bl	1deec <__aeabi_i2d>
   22c04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22c08:	f002 fd22 	bl	25650 <__aeabi_dmul>
   22c0c:	4b87      	ldr	r3, [pc, #540]	; (22e2c <_dtoa_r+0x61c>)
   22c0e:	2200      	movs	r2, #0
   22c10:	f7fb f820 	bl	1dc54 <__adddf3>
   22c14:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   22c18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   22c1a:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   22c1e:	950b      	str	r5, [sp, #44]	; 0x2c
   22c20:	2e00      	cmp	r6, #0
   22c22:	d15c      	bne.n	22cde <_dtoa_r+0x4ce>
   22c24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22c28:	2200      	movs	r2, #0
   22c2a:	4b81      	ldr	r3, [pc, #516]	; (22e30 <_dtoa_r+0x620>)
   22c2c:	f7fb f810 	bl	1dc50 <__aeabi_dsub>
   22c30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   22c32:	462b      	mov	r3, r5
   22c34:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22c38:	f002 ff9a 	bl	25b70 <__aeabi_dcmpgt>
   22c3c:	2800      	cmp	r0, #0
   22c3e:	f040 82f7 	bne.w	23230 <_dtoa_r+0xa20>
   22c42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22c46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   22c48:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   22c4c:	f002 ff72 	bl	25b34 <__aeabi_dcmplt>
   22c50:	2800      	cmp	r0, #0
   22c52:	f040 82eb 	bne.w	2322c <_dtoa_r+0xa1c>
   22c56:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   22c5a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   22c5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   22c60:	2b00      	cmp	r3, #0
   22c62:	f2c0 8150 	blt.w	22f06 <_dtoa_r+0x6f6>
   22c66:	f1bb 0f0e 	cmp.w	fp, #14
   22c6a:	f300 814c 	bgt.w	22f06 <_dtoa_r+0x6f6>
   22c6e:	4b6b      	ldr	r3, [pc, #428]	; (22e1c <_dtoa_r+0x60c>)
   22c70:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   22c74:	e9d3 2300 	ldrd	r2, r3, [r3]
   22c78:	e9cd 2304 	strd	r2, r3, [sp, #16]
   22c7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   22c7e:	2b00      	cmp	r3, #0
   22c80:	f280 80da 	bge.w	22e38 <_dtoa_r+0x628>
   22c84:	f1b9 0f00 	cmp.w	r9, #0
   22c88:	f300 80d6 	bgt.w	22e38 <_dtoa_r+0x628>
   22c8c:	f040 82cd 	bne.w	2322a <_dtoa_r+0xa1a>
   22c90:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22c94:	2200      	movs	r2, #0
   22c96:	4b66      	ldr	r3, [pc, #408]	; (22e30 <_dtoa_r+0x620>)
   22c98:	f002 fcda 	bl	25650 <__aeabi_dmul>
   22c9c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22ca0:	f002 ff5c 	bl	25b5c <__aeabi_dcmpge>
   22ca4:	464e      	mov	r6, r9
   22ca6:	464f      	mov	r7, r9
   22ca8:	2800      	cmp	r0, #0
   22caa:	f040 82a4 	bne.w	231f6 <_dtoa_r+0x9e6>
   22cae:	9b06      	ldr	r3, [sp, #24]
   22cb0:	9a06      	ldr	r2, [sp, #24]
   22cb2:	1c5d      	adds	r5, r3, #1
   22cb4:	2331      	movs	r3, #49	; 0x31
   22cb6:	f10b 0b01 	add.w	fp, fp, #1
   22cba:	7013      	strb	r3, [r2, #0]
   22cbc:	e29f      	b.n	231fe <_dtoa_r+0x9ee>
   22cbe:	07f2      	lsls	r2, r6, #31
   22cc0:	d505      	bpl.n	22cce <_dtoa_r+0x4be>
   22cc2:	e9d7 2300 	ldrd	r2, r3, [r7]
   22cc6:	f002 fcc3 	bl	25650 <__aeabi_dmul>
   22cca:	2301      	movs	r3, #1
   22ccc:	3501      	adds	r5, #1
   22cce:	1076      	asrs	r6, r6, #1
   22cd0:	3708      	adds	r7, #8
   22cd2:	e76d      	b.n	22bb0 <_dtoa_r+0x3a0>
   22cd4:	2502      	movs	r5, #2
   22cd6:	e770      	b.n	22bba <_dtoa_r+0x3aa>
   22cd8:	465f      	mov	r7, fp
   22cda:	464e      	mov	r6, r9
   22cdc:	e78f      	b.n	22bfe <_dtoa_r+0x3ee>
   22cde:	9a06      	ldr	r2, [sp, #24]
   22ce0:	4b4e      	ldr	r3, [pc, #312]	; (22e1c <_dtoa_r+0x60c>)
   22ce2:	4432      	add	r2, r6
   22ce4:	9211      	str	r2, [sp, #68]	; 0x44
   22ce6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   22ce8:	1e71      	subs	r1, r6, #1
   22cea:	2a00      	cmp	r2, #0
   22cec:	d048      	beq.n	22d80 <_dtoa_r+0x570>
   22cee:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   22cf2:	e9d3 2300 	ldrd	r2, r3, [r3]
   22cf6:	2000      	movs	r0, #0
   22cf8:	494e      	ldr	r1, [pc, #312]	; (22e34 <_dtoa_r+0x624>)
   22cfa:	f002 fdd3 	bl	258a4 <__aeabi_ddiv>
   22cfe:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22d02:	f7fa ffa5 	bl	1dc50 <__aeabi_dsub>
   22d06:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   22d0a:	9d06      	ldr	r5, [sp, #24]
   22d0c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22d10:	f002 ff4e 	bl	25bb0 <__aeabi_d2iz>
   22d14:	4606      	mov	r6, r0
   22d16:	f7fb f8e9 	bl	1deec <__aeabi_i2d>
   22d1a:	4602      	mov	r2, r0
   22d1c:	460b      	mov	r3, r1
   22d1e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22d22:	f7fa ff95 	bl	1dc50 <__aeabi_dsub>
   22d26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22d2a:	3630      	adds	r6, #48	; 0x30
   22d2c:	f805 6b01 	strb.w	r6, [r5], #1
   22d30:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22d34:	f002 fefe 	bl	25b34 <__aeabi_dcmplt>
   22d38:	2800      	cmp	r0, #0
   22d3a:	d164      	bne.n	22e06 <_dtoa_r+0x5f6>
   22d3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   22d40:	2000      	movs	r0, #0
   22d42:	4938      	ldr	r1, [pc, #224]	; (22e24 <_dtoa_r+0x614>)
   22d44:	f7fa ff84 	bl	1dc50 <__aeabi_dsub>
   22d48:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22d4c:	f002 fef2 	bl	25b34 <__aeabi_dcmplt>
   22d50:	2800      	cmp	r0, #0
   22d52:	f040 80b9 	bne.w	22ec8 <_dtoa_r+0x6b8>
   22d56:	9b11      	ldr	r3, [sp, #68]	; 0x44
   22d58:	429d      	cmp	r5, r3
   22d5a:	f43f af7c 	beq.w	22c56 <_dtoa_r+0x446>
   22d5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   22d62:	2200      	movs	r2, #0
   22d64:	4b30      	ldr	r3, [pc, #192]	; (22e28 <_dtoa_r+0x618>)
   22d66:	f002 fc73 	bl	25650 <__aeabi_dmul>
   22d6a:	2200      	movs	r2, #0
   22d6c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   22d70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22d74:	4b2c      	ldr	r3, [pc, #176]	; (22e28 <_dtoa_r+0x618>)
   22d76:	f002 fc6b 	bl	25650 <__aeabi_dmul>
   22d7a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22d7e:	e7c5      	b.n	22d0c <_dtoa_r+0x4fc>
   22d80:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   22d84:	e9d1 0100 	ldrd	r0, r1, [r1]
   22d88:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22d8c:	f002 fc60 	bl	25650 <__aeabi_dmul>
   22d90:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   22d94:	9d06      	ldr	r5, [sp, #24]
   22d96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22d9a:	f002 ff09 	bl	25bb0 <__aeabi_d2iz>
   22d9e:	4606      	mov	r6, r0
   22da0:	f7fb f8a4 	bl	1deec <__aeabi_i2d>
   22da4:	4602      	mov	r2, r0
   22da6:	460b      	mov	r3, r1
   22da8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22dac:	f7fa ff50 	bl	1dc50 <__aeabi_dsub>
   22db0:	3630      	adds	r6, #48	; 0x30
   22db2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   22db4:	f805 6b01 	strb.w	r6, [r5], #1
   22db8:	42ab      	cmp	r3, r5
   22dba:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22dbe:	f04f 0200 	mov.w	r2, #0
   22dc2:	d124      	bne.n	22e0e <_dtoa_r+0x5fe>
   22dc4:	4b1b      	ldr	r3, [pc, #108]	; (22e34 <_dtoa_r+0x624>)
   22dc6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   22dca:	f7fa ff43 	bl	1dc54 <__adddf3>
   22dce:	4602      	mov	r2, r0
   22dd0:	460b      	mov	r3, r1
   22dd2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22dd6:	f002 fecb 	bl	25b70 <__aeabi_dcmpgt>
   22dda:	2800      	cmp	r0, #0
   22ddc:	d174      	bne.n	22ec8 <_dtoa_r+0x6b8>
   22dde:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   22de2:	2000      	movs	r0, #0
   22de4:	4913      	ldr	r1, [pc, #76]	; (22e34 <_dtoa_r+0x624>)
   22de6:	f7fa ff33 	bl	1dc50 <__aeabi_dsub>
   22dea:	4602      	mov	r2, r0
   22dec:	460b      	mov	r3, r1
   22dee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   22df2:	f002 fe9f 	bl	25b34 <__aeabi_dcmplt>
   22df6:	2800      	cmp	r0, #0
   22df8:	f43f af2d 	beq.w	22c56 <_dtoa_r+0x446>
   22dfc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   22e00:	1e6a      	subs	r2, r5, #1
   22e02:	2b30      	cmp	r3, #48	; 0x30
   22e04:	d001      	beq.n	22e0a <_dtoa_r+0x5fa>
   22e06:	46bb      	mov	fp, r7
   22e08:	e04d      	b.n	22ea6 <_dtoa_r+0x696>
   22e0a:	4615      	mov	r5, r2
   22e0c:	e7f6      	b.n	22dfc <_dtoa_r+0x5ec>
   22e0e:	4b06      	ldr	r3, [pc, #24]	; (22e28 <_dtoa_r+0x618>)
   22e10:	f002 fc1e 	bl	25650 <__aeabi_dmul>
   22e14:	e9cd 0102 	strd	r0, r1, [sp, #8]
   22e18:	e7bd      	b.n	22d96 <_dtoa_r+0x586>
   22e1a:	bf00      	nop
   22e1c:	00029090 	.word	0x00029090
   22e20:	00029068 	.word	0x00029068
   22e24:	3ff00000 	.word	0x3ff00000
   22e28:	40240000 	.word	0x40240000
   22e2c:	401c0000 	.word	0x401c0000
   22e30:	40140000 	.word	0x40140000
   22e34:	3fe00000 	.word	0x3fe00000
   22e38:	9d06      	ldr	r5, [sp, #24]
   22e3a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   22e3e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   22e42:	4630      	mov	r0, r6
   22e44:	4639      	mov	r1, r7
   22e46:	f002 fd2d 	bl	258a4 <__aeabi_ddiv>
   22e4a:	f002 feb1 	bl	25bb0 <__aeabi_d2iz>
   22e4e:	4680      	mov	r8, r0
   22e50:	f7fb f84c 	bl	1deec <__aeabi_i2d>
   22e54:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   22e58:	f002 fbfa 	bl	25650 <__aeabi_dmul>
   22e5c:	4602      	mov	r2, r0
   22e5e:	460b      	mov	r3, r1
   22e60:	4630      	mov	r0, r6
   22e62:	4639      	mov	r1, r7
   22e64:	f7fa fef4 	bl	1dc50 <__aeabi_dsub>
   22e68:	f108 0630 	add.w	r6, r8, #48	; 0x30
   22e6c:	f805 6b01 	strb.w	r6, [r5], #1
   22e70:	9e06      	ldr	r6, [sp, #24]
   22e72:	4602      	mov	r2, r0
   22e74:	1bae      	subs	r6, r5, r6
   22e76:	45b1      	cmp	r9, r6
   22e78:	460b      	mov	r3, r1
   22e7a:	d137      	bne.n	22eec <_dtoa_r+0x6dc>
   22e7c:	f7fa feea 	bl	1dc54 <__adddf3>
   22e80:	4606      	mov	r6, r0
   22e82:	460f      	mov	r7, r1
   22e84:	4602      	mov	r2, r0
   22e86:	460b      	mov	r3, r1
   22e88:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22e8c:	f002 fe52 	bl	25b34 <__aeabi_dcmplt>
   22e90:	b9c8      	cbnz	r0, 22ec6 <_dtoa_r+0x6b6>
   22e92:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22e96:	4632      	mov	r2, r6
   22e98:	463b      	mov	r3, r7
   22e9a:	f002 fe41 	bl	25b20 <__aeabi_dcmpeq>
   22e9e:	b110      	cbz	r0, 22ea6 <_dtoa_r+0x696>
   22ea0:	f018 0f01 	tst.w	r8, #1
   22ea4:	d10f      	bne.n	22ec6 <_dtoa_r+0x6b6>
   22ea6:	4651      	mov	r1, sl
   22ea8:	4620      	mov	r0, r4
   22eaa:	f000 ff47 	bl	23d3c <_Bfree>
   22eae:	2300      	movs	r3, #0
   22eb0:	9a20      	ldr	r2, [sp, #128]	; 0x80
   22eb2:	702b      	strb	r3, [r5, #0]
   22eb4:	f10b 0301 	add.w	r3, fp, #1
   22eb8:	6013      	str	r3, [r2, #0]
   22eba:	9b22      	ldr	r3, [sp, #136]	; 0x88
   22ebc:	2b00      	cmp	r3, #0
   22ebe:	f43f acec 	beq.w	2289a <_dtoa_r+0x8a>
   22ec2:	601d      	str	r5, [r3, #0]
   22ec4:	e4e9      	b.n	2289a <_dtoa_r+0x8a>
   22ec6:	465f      	mov	r7, fp
   22ec8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   22ecc:	1e6b      	subs	r3, r5, #1
   22ece:	2a39      	cmp	r2, #57	; 0x39
   22ed0:	d106      	bne.n	22ee0 <_dtoa_r+0x6d0>
   22ed2:	9a06      	ldr	r2, [sp, #24]
   22ed4:	429a      	cmp	r2, r3
   22ed6:	d107      	bne.n	22ee8 <_dtoa_r+0x6d8>
   22ed8:	2330      	movs	r3, #48	; 0x30
   22eda:	7013      	strb	r3, [r2, #0]
   22edc:	4613      	mov	r3, r2
   22ede:	3701      	adds	r7, #1
   22ee0:	781a      	ldrb	r2, [r3, #0]
   22ee2:	3201      	adds	r2, #1
   22ee4:	701a      	strb	r2, [r3, #0]
   22ee6:	e78e      	b.n	22e06 <_dtoa_r+0x5f6>
   22ee8:	461d      	mov	r5, r3
   22eea:	e7ed      	b.n	22ec8 <_dtoa_r+0x6b8>
   22eec:	2200      	movs	r2, #0
   22eee:	4bb5      	ldr	r3, [pc, #724]	; (231c4 <_dtoa_r+0x9b4>)
   22ef0:	f002 fbae 	bl	25650 <__aeabi_dmul>
   22ef4:	2200      	movs	r2, #0
   22ef6:	2300      	movs	r3, #0
   22ef8:	4606      	mov	r6, r0
   22efa:	460f      	mov	r7, r1
   22efc:	f002 fe10 	bl	25b20 <__aeabi_dcmpeq>
   22f00:	2800      	cmp	r0, #0
   22f02:	d09c      	beq.n	22e3e <_dtoa_r+0x62e>
   22f04:	e7cf      	b.n	22ea6 <_dtoa_r+0x696>
   22f06:	9a09      	ldr	r2, [sp, #36]	; 0x24
   22f08:	2a00      	cmp	r2, #0
   22f0a:	f000 8129 	beq.w	23160 <_dtoa_r+0x950>
   22f0e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   22f10:	2a01      	cmp	r2, #1
   22f12:	f300 810e 	bgt.w	23132 <_dtoa_r+0x922>
   22f16:	9a10      	ldr	r2, [sp, #64]	; 0x40
   22f18:	2a00      	cmp	r2, #0
   22f1a:	f000 8106 	beq.w	2312a <_dtoa_r+0x91a>
   22f1e:	f203 4333 	addw	r3, r3, #1075	; 0x433
   22f22:	4645      	mov	r5, r8
   22f24:	9e08      	ldr	r6, [sp, #32]
   22f26:	9a07      	ldr	r2, [sp, #28]
   22f28:	2101      	movs	r1, #1
   22f2a:	441a      	add	r2, r3
   22f2c:	4620      	mov	r0, r4
   22f2e:	4498      	add	r8, r3
   22f30:	9207      	str	r2, [sp, #28]
   22f32:	f000 ffe1 	bl	23ef8 <__i2b>
   22f36:	4607      	mov	r7, r0
   22f38:	2d00      	cmp	r5, #0
   22f3a:	dd0b      	ble.n	22f54 <_dtoa_r+0x744>
   22f3c:	9b07      	ldr	r3, [sp, #28]
   22f3e:	2b00      	cmp	r3, #0
   22f40:	dd08      	ble.n	22f54 <_dtoa_r+0x744>
   22f42:	42ab      	cmp	r3, r5
   22f44:	bfa8      	it	ge
   22f46:	462b      	movge	r3, r5
   22f48:	9a07      	ldr	r2, [sp, #28]
   22f4a:	eba8 0803 	sub.w	r8, r8, r3
   22f4e:	1aed      	subs	r5, r5, r3
   22f50:	1ad3      	subs	r3, r2, r3
   22f52:	9307      	str	r3, [sp, #28]
   22f54:	9b08      	ldr	r3, [sp, #32]
   22f56:	b1fb      	cbz	r3, 22f98 <_dtoa_r+0x788>
   22f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22f5a:	2b00      	cmp	r3, #0
   22f5c:	f000 8104 	beq.w	23168 <_dtoa_r+0x958>
   22f60:	2e00      	cmp	r6, #0
   22f62:	dd11      	ble.n	22f88 <_dtoa_r+0x778>
   22f64:	4639      	mov	r1, r7
   22f66:	4632      	mov	r2, r6
   22f68:	4620      	mov	r0, r4
   22f6a:	f001 f85b 	bl	24024 <__pow5mult>
   22f6e:	4652      	mov	r2, sl
   22f70:	4601      	mov	r1, r0
   22f72:	4607      	mov	r7, r0
   22f74:	4620      	mov	r0, r4
   22f76:	f000 ffc8 	bl	23f0a <__multiply>
   22f7a:	4651      	mov	r1, sl
   22f7c:	900a      	str	r0, [sp, #40]	; 0x28
   22f7e:	4620      	mov	r0, r4
   22f80:	f000 fedc 	bl	23d3c <_Bfree>
   22f84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   22f86:	469a      	mov	sl, r3
   22f88:	9b08      	ldr	r3, [sp, #32]
   22f8a:	1b9a      	subs	r2, r3, r6
   22f8c:	d004      	beq.n	22f98 <_dtoa_r+0x788>
   22f8e:	4651      	mov	r1, sl
   22f90:	4620      	mov	r0, r4
   22f92:	f001 f847 	bl	24024 <__pow5mult>
   22f96:	4682      	mov	sl, r0
   22f98:	2101      	movs	r1, #1
   22f9a:	4620      	mov	r0, r4
   22f9c:	f000 ffac 	bl	23ef8 <__i2b>
   22fa0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   22fa2:	4606      	mov	r6, r0
   22fa4:	2b00      	cmp	r3, #0
   22fa6:	f340 80e1 	ble.w	2316c <_dtoa_r+0x95c>
   22faa:	461a      	mov	r2, r3
   22fac:	4601      	mov	r1, r0
   22fae:	4620      	mov	r0, r4
   22fb0:	f001 f838 	bl	24024 <__pow5mult>
   22fb4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   22fb6:	4606      	mov	r6, r0
   22fb8:	2b01      	cmp	r3, #1
   22fba:	f340 80da 	ble.w	23172 <_dtoa_r+0x962>
   22fbe:	2300      	movs	r3, #0
   22fc0:	9308      	str	r3, [sp, #32]
   22fc2:	6933      	ldr	r3, [r6, #16]
   22fc4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   22fc8:	6918      	ldr	r0, [r3, #16]
   22fca:	f000 ff47 	bl	23e5c <__hi0bits>
   22fce:	f1c0 0020 	rsb	r0, r0, #32
   22fd2:	9b07      	ldr	r3, [sp, #28]
   22fd4:	4418      	add	r0, r3
   22fd6:	f010 001f 	ands.w	r0, r0, #31
   22fda:	f000 80f0 	beq.w	231be <_dtoa_r+0x9ae>
   22fde:	f1c0 0320 	rsb	r3, r0, #32
   22fe2:	2b04      	cmp	r3, #4
   22fe4:	f340 80e2 	ble.w	231ac <_dtoa_r+0x99c>
   22fe8:	9b07      	ldr	r3, [sp, #28]
   22fea:	f1c0 001c 	rsb	r0, r0, #28
   22fee:	4480      	add	r8, r0
   22ff0:	4405      	add	r5, r0
   22ff2:	4403      	add	r3, r0
   22ff4:	9307      	str	r3, [sp, #28]
   22ff6:	f1b8 0f00 	cmp.w	r8, #0
   22ffa:	dd05      	ble.n	23008 <_dtoa_r+0x7f8>
   22ffc:	4651      	mov	r1, sl
   22ffe:	4642      	mov	r2, r8
   23000:	4620      	mov	r0, r4
   23002:	f001 f85d 	bl	240c0 <__lshift>
   23006:	4682      	mov	sl, r0
   23008:	9b07      	ldr	r3, [sp, #28]
   2300a:	2b00      	cmp	r3, #0
   2300c:	dd05      	ble.n	2301a <_dtoa_r+0x80a>
   2300e:	4631      	mov	r1, r6
   23010:	461a      	mov	r2, r3
   23012:	4620      	mov	r0, r4
   23014:	f001 f854 	bl	240c0 <__lshift>
   23018:	4606      	mov	r6, r0
   2301a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   2301c:	2b00      	cmp	r3, #0
   2301e:	f000 80d3 	beq.w	231c8 <_dtoa_r+0x9b8>
   23022:	4631      	mov	r1, r6
   23024:	4650      	mov	r0, sl
   23026:	f001 f89c 	bl	24162 <__mcmp>
   2302a:	2800      	cmp	r0, #0
   2302c:	f280 80cc 	bge.w	231c8 <_dtoa_r+0x9b8>
   23030:	2300      	movs	r3, #0
   23032:	4651      	mov	r1, sl
   23034:	220a      	movs	r2, #10
   23036:	4620      	mov	r0, r4
   23038:	f000 fe97 	bl	23d6a <__multadd>
   2303c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2303e:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   23042:	4682      	mov	sl, r0
   23044:	2b00      	cmp	r3, #0
   23046:	f000 81a9 	beq.w	2339c <_dtoa_r+0xb8c>
   2304a:	2300      	movs	r3, #0
   2304c:	4639      	mov	r1, r7
   2304e:	220a      	movs	r2, #10
   23050:	4620      	mov	r0, r4
   23052:	f000 fe8a 	bl	23d6a <__multadd>
   23056:	9b04      	ldr	r3, [sp, #16]
   23058:	4607      	mov	r7, r0
   2305a:	2b00      	cmp	r3, #0
   2305c:	dc03      	bgt.n	23066 <_dtoa_r+0x856>
   2305e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   23060:	2b02      	cmp	r3, #2
   23062:	f300 80b9 	bgt.w	231d8 <_dtoa_r+0x9c8>
   23066:	2d00      	cmp	r5, #0
   23068:	dd05      	ble.n	23076 <_dtoa_r+0x866>
   2306a:	4639      	mov	r1, r7
   2306c:	462a      	mov	r2, r5
   2306e:	4620      	mov	r0, r4
   23070:	f001 f826 	bl	240c0 <__lshift>
   23074:	4607      	mov	r7, r0
   23076:	9b08      	ldr	r3, [sp, #32]
   23078:	2b00      	cmp	r3, #0
   2307a:	f000 8110 	beq.w	2329e <_dtoa_r+0xa8e>
   2307e:	6879      	ldr	r1, [r7, #4]
   23080:	4620      	mov	r0, r4
   23082:	f000 fe27 	bl	23cd4 <_Balloc>
   23086:	4605      	mov	r5, r0
   23088:	693a      	ldr	r2, [r7, #16]
   2308a:	f107 010c 	add.w	r1, r7, #12
   2308e:	3202      	adds	r2, #2
   23090:	0092      	lsls	r2, r2, #2
   23092:	300c      	adds	r0, #12
   23094:	f7fc f9f9 	bl	1f48a <memcpy>
   23098:	2201      	movs	r2, #1
   2309a:	4629      	mov	r1, r5
   2309c:	4620      	mov	r0, r4
   2309e:	f001 f80f 	bl	240c0 <__lshift>
   230a2:	9707      	str	r7, [sp, #28]
   230a4:	4607      	mov	r7, r0
   230a6:	9b02      	ldr	r3, [sp, #8]
   230a8:	f8dd 8018 	ldr.w	r8, [sp, #24]
   230ac:	f003 0301 	and.w	r3, r3, #1
   230b0:	9308      	str	r3, [sp, #32]
   230b2:	4631      	mov	r1, r6
   230b4:	4650      	mov	r0, sl
   230b6:	f7ff fb1f 	bl	226f8 <quorem>
   230ba:	9907      	ldr	r1, [sp, #28]
   230bc:	4605      	mov	r5, r0
   230be:	f100 0930 	add.w	r9, r0, #48	; 0x30
   230c2:	4650      	mov	r0, sl
   230c4:	f001 f84d 	bl	24162 <__mcmp>
   230c8:	463a      	mov	r2, r7
   230ca:	9002      	str	r0, [sp, #8]
   230cc:	4631      	mov	r1, r6
   230ce:	4620      	mov	r0, r4
   230d0:	f001 f861 	bl	24196 <__mdiff>
   230d4:	68c3      	ldr	r3, [r0, #12]
   230d6:	4602      	mov	r2, r0
   230d8:	2b00      	cmp	r3, #0
   230da:	f040 80e2 	bne.w	232a2 <_dtoa_r+0xa92>
   230de:	4601      	mov	r1, r0
   230e0:	9009      	str	r0, [sp, #36]	; 0x24
   230e2:	4650      	mov	r0, sl
   230e4:	f001 f83d 	bl	24162 <__mcmp>
   230e8:	4603      	mov	r3, r0
   230ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
   230ec:	4611      	mov	r1, r2
   230ee:	4620      	mov	r0, r4
   230f0:	9309      	str	r3, [sp, #36]	; 0x24
   230f2:	f000 fe23 	bl	23d3c <_Bfree>
   230f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   230f8:	2b00      	cmp	r3, #0
   230fa:	f040 80d4 	bne.w	232a6 <_dtoa_r+0xa96>
   230fe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   23100:	2a00      	cmp	r2, #0
   23102:	f040 80d0 	bne.w	232a6 <_dtoa_r+0xa96>
   23106:	9a08      	ldr	r2, [sp, #32]
   23108:	2a00      	cmp	r2, #0
   2310a:	f040 80cc 	bne.w	232a6 <_dtoa_r+0xa96>
   2310e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   23112:	f000 80e8 	beq.w	232e6 <_dtoa_r+0xad6>
   23116:	9b02      	ldr	r3, [sp, #8]
   23118:	2b00      	cmp	r3, #0
   2311a:	dd01      	ble.n	23120 <_dtoa_r+0x910>
   2311c:	f105 0931 	add.w	r9, r5, #49	; 0x31
   23120:	f108 0501 	add.w	r5, r8, #1
   23124:	f888 9000 	strb.w	r9, [r8]
   23128:	e06b      	b.n	23202 <_dtoa_r+0x9f2>
   2312a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   2312c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   23130:	e6f7      	b.n	22f22 <_dtoa_r+0x712>
   23132:	9b08      	ldr	r3, [sp, #32]
   23134:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   23138:	42b3      	cmp	r3, r6
   2313a:	bfb7      	itett	lt
   2313c:	9b08      	ldrlt	r3, [sp, #32]
   2313e:	1b9e      	subge	r6, r3, r6
   23140:	1af2      	sublt	r2, r6, r3
   23142:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   23144:	bfbf      	itttt	lt
   23146:	9608      	strlt	r6, [sp, #32]
   23148:	189b      	addlt	r3, r3, r2
   2314a:	930c      	strlt	r3, [sp, #48]	; 0x30
   2314c:	2600      	movlt	r6, #0
   2314e:	f1b9 0f00 	cmp.w	r9, #0
   23152:	bfb9      	ittee	lt
   23154:	eba8 0509 	sublt.w	r5, r8, r9
   23158:	2300      	movlt	r3, #0
   2315a:	4645      	movge	r5, r8
   2315c:	464b      	movge	r3, r9
   2315e:	e6e2      	b.n	22f26 <_dtoa_r+0x716>
   23160:	9e08      	ldr	r6, [sp, #32]
   23162:	4645      	mov	r5, r8
   23164:	9f09      	ldr	r7, [sp, #36]	; 0x24
   23166:	e6e7      	b.n	22f38 <_dtoa_r+0x728>
   23168:	9a08      	ldr	r2, [sp, #32]
   2316a:	e710      	b.n	22f8e <_dtoa_r+0x77e>
   2316c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   2316e:	2b01      	cmp	r3, #1
   23170:	dc18      	bgt.n	231a4 <_dtoa_r+0x994>
   23172:	9b02      	ldr	r3, [sp, #8]
   23174:	b9b3      	cbnz	r3, 231a4 <_dtoa_r+0x994>
   23176:	9b03      	ldr	r3, [sp, #12]
   23178:	f3c3 0313 	ubfx	r3, r3, #0, #20
   2317c:	b9a3      	cbnz	r3, 231a8 <_dtoa_r+0x998>
   2317e:	9b03      	ldr	r3, [sp, #12]
   23180:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   23184:	0d1b      	lsrs	r3, r3, #20
   23186:	051b      	lsls	r3, r3, #20
   23188:	b12b      	cbz	r3, 23196 <_dtoa_r+0x986>
   2318a:	9b07      	ldr	r3, [sp, #28]
   2318c:	f108 0801 	add.w	r8, r8, #1
   23190:	3301      	adds	r3, #1
   23192:	9307      	str	r3, [sp, #28]
   23194:	2301      	movs	r3, #1
   23196:	9308      	str	r3, [sp, #32]
   23198:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   2319a:	2b00      	cmp	r3, #0
   2319c:	f47f af11 	bne.w	22fc2 <_dtoa_r+0x7b2>
   231a0:	2001      	movs	r0, #1
   231a2:	e716      	b.n	22fd2 <_dtoa_r+0x7c2>
   231a4:	2300      	movs	r3, #0
   231a6:	e7f6      	b.n	23196 <_dtoa_r+0x986>
   231a8:	9b02      	ldr	r3, [sp, #8]
   231aa:	e7f4      	b.n	23196 <_dtoa_r+0x986>
   231ac:	f43f af23 	beq.w	22ff6 <_dtoa_r+0x7e6>
   231b0:	9a07      	ldr	r2, [sp, #28]
   231b2:	331c      	adds	r3, #28
   231b4:	441a      	add	r2, r3
   231b6:	4498      	add	r8, r3
   231b8:	441d      	add	r5, r3
   231ba:	4613      	mov	r3, r2
   231bc:	e71a      	b.n	22ff4 <_dtoa_r+0x7e4>
   231be:	4603      	mov	r3, r0
   231c0:	e7f6      	b.n	231b0 <_dtoa_r+0x9a0>
   231c2:	bf00      	nop
   231c4:	40240000 	.word	0x40240000
   231c8:	f1b9 0f00 	cmp.w	r9, #0
   231cc:	dc33      	bgt.n	23236 <_dtoa_r+0xa26>
   231ce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   231d0:	2b02      	cmp	r3, #2
   231d2:	dd30      	ble.n	23236 <_dtoa_r+0xa26>
   231d4:	f8cd 9010 	str.w	r9, [sp, #16]
   231d8:	9b04      	ldr	r3, [sp, #16]
   231da:	b963      	cbnz	r3, 231f6 <_dtoa_r+0x9e6>
   231dc:	4631      	mov	r1, r6
   231de:	2205      	movs	r2, #5
   231e0:	4620      	mov	r0, r4
   231e2:	f000 fdc2 	bl	23d6a <__multadd>
   231e6:	4601      	mov	r1, r0
   231e8:	4606      	mov	r6, r0
   231ea:	4650      	mov	r0, sl
   231ec:	f000 ffb9 	bl	24162 <__mcmp>
   231f0:	2800      	cmp	r0, #0
   231f2:	f73f ad5c 	bgt.w	22cae <_dtoa_r+0x49e>
   231f6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   231f8:	9d06      	ldr	r5, [sp, #24]
   231fa:	ea6f 0b03 	mvn.w	fp, r3
   231fe:	2300      	movs	r3, #0
   23200:	9307      	str	r3, [sp, #28]
   23202:	4631      	mov	r1, r6
   23204:	4620      	mov	r0, r4
   23206:	f000 fd99 	bl	23d3c <_Bfree>
   2320a:	2f00      	cmp	r7, #0
   2320c:	f43f ae4b 	beq.w	22ea6 <_dtoa_r+0x696>
   23210:	9b07      	ldr	r3, [sp, #28]
   23212:	b12b      	cbz	r3, 23220 <_dtoa_r+0xa10>
   23214:	42bb      	cmp	r3, r7
   23216:	d003      	beq.n	23220 <_dtoa_r+0xa10>
   23218:	4619      	mov	r1, r3
   2321a:	4620      	mov	r0, r4
   2321c:	f000 fd8e 	bl	23d3c <_Bfree>
   23220:	4639      	mov	r1, r7
   23222:	4620      	mov	r0, r4
   23224:	f000 fd8a 	bl	23d3c <_Bfree>
   23228:	e63d      	b.n	22ea6 <_dtoa_r+0x696>
   2322a:	2600      	movs	r6, #0
   2322c:	4637      	mov	r7, r6
   2322e:	e7e2      	b.n	231f6 <_dtoa_r+0x9e6>
   23230:	46bb      	mov	fp, r7
   23232:	4637      	mov	r7, r6
   23234:	e53b      	b.n	22cae <_dtoa_r+0x49e>
   23236:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23238:	f8cd 9010 	str.w	r9, [sp, #16]
   2323c:	2b00      	cmp	r3, #0
   2323e:	f47f af12 	bne.w	23066 <_dtoa_r+0x856>
   23242:	9d06      	ldr	r5, [sp, #24]
   23244:	4631      	mov	r1, r6
   23246:	4650      	mov	r0, sl
   23248:	f7ff fa56 	bl	226f8 <quorem>
   2324c:	9b06      	ldr	r3, [sp, #24]
   2324e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   23252:	f805 9b01 	strb.w	r9, [r5], #1
   23256:	9a04      	ldr	r2, [sp, #16]
   23258:	1aeb      	subs	r3, r5, r3
   2325a:	429a      	cmp	r2, r3
   2325c:	f300 8081 	bgt.w	23362 <_dtoa_r+0xb52>
   23260:	9b06      	ldr	r3, [sp, #24]
   23262:	2a01      	cmp	r2, #1
   23264:	bfac      	ite	ge
   23266:	189b      	addge	r3, r3, r2
   23268:	3301      	addlt	r3, #1
   2326a:	4698      	mov	r8, r3
   2326c:	2300      	movs	r3, #0
   2326e:	9307      	str	r3, [sp, #28]
   23270:	4651      	mov	r1, sl
   23272:	2201      	movs	r2, #1
   23274:	4620      	mov	r0, r4
   23276:	f000 ff23 	bl	240c0 <__lshift>
   2327a:	4631      	mov	r1, r6
   2327c:	4682      	mov	sl, r0
   2327e:	f000 ff70 	bl	24162 <__mcmp>
   23282:	2800      	cmp	r0, #0
   23284:	dc34      	bgt.n	232f0 <_dtoa_r+0xae0>
   23286:	d102      	bne.n	2328e <_dtoa_r+0xa7e>
   23288:	f019 0f01 	tst.w	r9, #1
   2328c:	d130      	bne.n	232f0 <_dtoa_r+0xae0>
   2328e:	4645      	mov	r5, r8
   23290:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   23294:	1e6a      	subs	r2, r5, #1
   23296:	2b30      	cmp	r3, #48	; 0x30
   23298:	d1b3      	bne.n	23202 <_dtoa_r+0x9f2>
   2329a:	4615      	mov	r5, r2
   2329c:	e7f8      	b.n	23290 <_dtoa_r+0xa80>
   2329e:	4638      	mov	r0, r7
   232a0:	e6ff      	b.n	230a2 <_dtoa_r+0x892>
   232a2:	2301      	movs	r3, #1
   232a4:	e722      	b.n	230ec <_dtoa_r+0x8dc>
   232a6:	9a02      	ldr	r2, [sp, #8]
   232a8:	2a00      	cmp	r2, #0
   232aa:	db04      	blt.n	232b6 <_dtoa_r+0xaa6>
   232ac:	d128      	bne.n	23300 <_dtoa_r+0xaf0>
   232ae:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   232b0:	bb32      	cbnz	r2, 23300 <_dtoa_r+0xaf0>
   232b2:	9a08      	ldr	r2, [sp, #32]
   232b4:	bb22      	cbnz	r2, 23300 <_dtoa_r+0xaf0>
   232b6:	2b00      	cmp	r3, #0
   232b8:	f77f af32 	ble.w	23120 <_dtoa_r+0x910>
   232bc:	4651      	mov	r1, sl
   232be:	2201      	movs	r2, #1
   232c0:	4620      	mov	r0, r4
   232c2:	f000 fefd 	bl	240c0 <__lshift>
   232c6:	4631      	mov	r1, r6
   232c8:	4682      	mov	sl, r0
   232ca:	f000 ff4a 	bl	24162 <__mcmp>
   232ce:	2800      	cmp	r0, #0
   232d0:	dc05      	bgt.n	232de <_dtoa_r+0xace>
   232d2:	f47f af25 	bne.w	23120 <_dtoa_r+0x910>
   232d6:	f019 0f01 	tst.w	r9, #1
   232da:	f43f af21 	beq.w	23120 <_dtoa_r+0x910>
   232de:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   232e2:	f47f af1b 	bne.w	2311c <_dtoa_r+0x90c>
   232e6:	2339      	movs	r3, #57	; 0x39
   232e8:	f108 0801 	add.w	r8, r8, #1
   232ec:	f808 3c01 	strb.w	r3, [r8, #-1]
   232f0:	4645      	mov	r5, r8
   232f2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   232f6:	1e6a      	subs	r2, r5, #1
   232f8:	2b39      	cmp	r3, #57	; 0x39
   232fa:	d03a      	beq.n	23372 <_dtoa_r+0xb62>
   232fc:	3301      	adds	r3, #1
   232fe:	e03f      	b.n	23380 <_dtoa_r+0xb70>
   23300:	2b00      	cmp	r3, #0
   23302:	f108 0501 	add.w	r5, r8, #1
   23306:	dd05      	ble.n	23314 <_dtoa_r+0xb04>
   23308:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   2330c:	d0eb      	beq.n	232e6 <_dtoa_r+0xad6>
   2330e:	f109 0901 	add.w	r9, r9, #1
   23312:	e707      	b.n	23124 <_dtoa_r+0x914>
   23314:	9b06      	ldr	r3, [sp, #24]
   23316:	9a04      	ldr	r2, [sp, #16]
   23318:	1aeb      	subs	r3, r5, r3
   2331a:	4293      	cmp	r3, r2
   2331c:	46a8      	mov	r8, r5
   2331e:	f805 9c01 	strb.w	r9, [r5, #-1]
   23322:	d0a5      	beq.n	23270 <_dtoa_r+0xa60>
   23324:	4651      	mov	r1, sl
   23326:	2300      	movs	r3, #0
   23328:	220a      	movs	r2, #10
   2332a:	4620      	mov	r0, r4
   2332c:	f000 fd1d 	bl	23d6a <__multadd>
   23330:	9b07      	ldr	r3, [sp, #28]
   23332:	4682      	mov	sl, r0
   23334:	42bb      	cmp	r3, r7
   23336:	f04f 020a 	mov.w	r2, #10
   2333a:	f04f 0300 	mov.w	r3, #0
   2333e:	9907      	ldr	r1, [sp, #28]
   23340:	4620      	mov	r0, r4
   23342:	d104      	bne.n	2334e <_dtoa_r+0xb3e>
   23344:	f000 fd11 	bl	23d6a <__multadd>
   23348:	9007      	str	r0, [sp, #28]
   2334a:	4607      	mov	r7, r0
   2334c:	e6b1      	b.n	230b2 <_dtoa_r+0x8a2>
   2334e:	f000 fd0c 	bl	23d6a <__multadd>
   23352:	2300      	movs	r3, #0
   23354:	9007      	str	r0, [sp, #28]
   23356:	220a      	movs	r2, #10
   23358:	4639      	mov	r1, r7
   2335a:	4620      	mov	r0, r4
   2335c:	f000 fd05 	bl	23d6a <__multadd>
   23360:	e7f3      	b.n	2334a <_dtoa_r+0xb3a>
   23362:	4651      	mov	r1, sl
   23364:	2300      	movs	r3, #0
   23366:	220a      	movs	r2, #10
   23368:	4620      	mov	r0, r4
   2336a:	f000 fcfe 	bl	23d6a <__multadd>
   2336e:	4682      	mov	sl, r0
   23370:	e768      	b.n	23244 <_dtoa_r+0xa34>
   23372:	9b06      	ldr	r3, [sp, #24]
   23374:	4293      	cmp	r3, r2
   23376:	d105      	bne.n	23384 <_dtoa_r+0xb74>
   23378:	2331      	movs	r3, #49	; 0x31
   2337a:	9a06      	ldr	r2, [sp, #24]
   2337c:	f10b 0b01 	add.w	fp, fp, #1
   23380:	7013      	strb	r3, [r2, #0]
   23382:	e73e      	b.n	23202 <_dtoa_r+0x9f2>
   23384:	4615      	mov	r5, r2
   23386:	e7b4      	b.n	232f2 <_dtoa_r+0xae2>
   23388:	4b09      	ldr	r3, [pc, #36]	; (233b0 <_dtoa_r+0xba0>)
   2338a:	f7ff baa3 	b.w	228d4 <_dtoa_r+0xc4>
   2338e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   23390:	2b00      	cmp	r3, #0
   23392:	f47f aa7d 	bne.w	22890 <_dtoa_r+0x80>
   23396:	4b07      	ldr	r3, [pc, #28]	; (233b4 <_dtoa_r+0xba4>)
   23398:	f7ff ba9c 	b.w	228d4 <_dtoa_r+0xc4>
   2339c:	9b04      	ldr	r3, [sp, #16]
   2339e:	2b00      	cmp	r3, #0
   233a0:	f73f af4f 	bgt.w	23242 <_dtoa_r+0xa32>
   233a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   233a6:	2b02      	cmp	r3, #2
   233a8:	f77f af4b 	ble.w	23242 <_dtoa_r+0xa32>
   233ac:	e714      	b.n	231d8 <_dtoa_r+0x9c8>
   233ae:	bf00      	nop
   233b0:	00025eb2 	.word	0x00025eb2
   233b4:	00029056 	.word	0x00029056

000233b8 <__sflags>:
__sflags():
   233b8:	780b      	ldrb	r3, [r1, #0]
   233ba:	b530      	push	{r4, r5, lr}
   233bc:	2b72      	cmp	r3, #114	; 0x72
   233be:	d013      	beq.n	233e8 <__sflags+0x30>
   233c0:	2b77      	cmp	r3, #119	; 0x77
   233c2:	d007      	beq.n	233d4 <__sflags+0x1c>
   233c4:	2b61      	cmp	r3, #97	; 0x61
   233c6:	d113      	bne.n	233f0 <__sflags+0x38>
   233c8:	f44f 7402 	mov.w	r4, #520	; 0x208
   233cc:	2301      	movs	r3, #1
   233ce:	f44f 7084 	mov.w	r0, #264	; 0x108
   233d2:	e003      	b.n	233dc <__sflags+0x24>
   233d4:	f44f 64c0 	mov.w	r4, #1536	; 0x600
   233d8:	2301      	movs	r3, #1
   233da:	2008      	movs	r0, #8
   233dc:	f811 5f01 	ldrb.w	r5, [r1, #1]!
   233e0:	b955      	cbnz	r5, 233f8 <__sflags+0x40>
   233e2:	4323      	orrs	r3, r4
   233e4:	6013      	str	r3, [r2, #0]
   233e6:	bd30      	pop	{r4, r5, pc}
   233e8:	2400      	movs	r4, #0
   233ea:	2004      	movs	r0, #4
   233ec:	4623      	mov	r3, r4
   233ee:	e7f5      	b.n	233dc <__sflags+0x24>
   233f0:	2316      	movs	r3, #22
   233f2:	6003      	str	r3, [r0, #0]
   233f4:	2000      	movs	r0, #0
   233f6:	bd30      	pop	{r4, r5, pc}
   233f8:	2d62      	cmp	r5, #98	; 0x62
   233fa:	d00c      	beq.n	23416 <__sflags+0x5e>
   233fc:	2d78      	cmp	r5, #120	; 0x78
   233fe:	d00d      	beq.n	2341c <__sflags+0x64>
   23400:	2d2b      	cmp	r5, #43	; 0x2b
   23402:	d1eb      	bne.n	233dc <__sflags+0x24>
   23404:	f020 001c 	bic.w	r0, r0, #28
   23408:	f023 0303 	bic.w	r3, r3, #3
   2340c:	f040 0010 	orr.w	r0, r0, #16
   23410:	f043 0302 	orr.w	r3, r3, #2
   23414:	e7e2      	b.n	233dc <__sflags+0x24>
   23416:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   2341a:	e7df      	b.n	233dc <__sflags+0x24>
   2341c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   23420:	e7dc      	b.n	233dc <__sflags+0x24>
   23422:	Address 0x0000000000023422 is out of bounds.


00023424 <_fstat_r>:
_fstat_r():
   23424:	b538      	push	{r3, r4, r5, lr}
   23426:	2300      	movs	r3, #0
   23428:	4c06      	ldr	r4, [pc, #24]	; (23444 <_fstat_r+0x20>)
   2342a:	4605      	mov	r5, r0
   2342c:	4608      	mov	r0, r1
   2342e:	4611      	mov	r1, r2
   23430:	6023      	str	r3, [r4, #0]
   23432:	f7f4 f93f 	bl	176b4 <_fstat>
   23436:	1c43      	adds	r3, r0, #1
   23438:	d102      	bne.n	23440 <_fstat_r+0x1c>
   2343a:	6823      	ldr	r3, [r4, #0]
   2343c:	b103      	cbz	r3, 23440 <_fstat_r+0x1c>
   2343e:	602b      	str	r3, [r5, #0]
   23440:	bd38      	pop	{r3, r4, r5, pc}
   23442:	bf00      	nop
   23444:	2007c984 	.word	0x2007c984

00023448 <rshift>:
rshift():
   23448:	b5f0      	push	{r4, r5, r6, r7, lr}
   2344a:	6906      	ldr	r6, [r0, #16]
   2344c:	114b      	asrs	r3, r1, #5
   2344e:	42b3      	cmp	r3, r6
   23450:	f100 0514 	add.w	r5, r0, #20
   23454:	da2b      	bge.n	234ae <rshift+0x66>
   23456:	f011 011f 	ands.w	r1, r1, #31
   2345a:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   2345e:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   23462:	d108      	bne.n	23476 <rshift+0x2e>
   23464:	4629      	mov	r1, r5
   23466:	42b2      	cmp	r2, r6
   23468:	460b      	mov	r3, r1
   2346a:	d210      	bcs.n	2348e <rshift+0x46>
   2346c:	f852 3b04 	ldr.w	r3, [r2], #4
   23470:	f841 3b04 	str.w	r3, [r1], #4
   23474:	e7f7      	b.n	23466 <rshift+0x1e>
   23476:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   2347a:	462b      	mov	r3, r5
   2347c:	f1c1 0e20 	rsb	lr, r1, #32
   23480:	3204      	adds	r2, #4
   23482:	40cc      	lsrs	r4, r1
   23484:	42b2      	cmp	r2, r6
   23486:	d308      	bcc.n	2349a <rshift+0x52>
   23488:	601c      	str	r4, [r3, #0]
   2348a:	b104      	cbz	r4, 2348e <rshift+0x46>
   2348c:	3304      	adds	r3, #4
   2348e:	1b5b      	subs	r3, r3, r5
   23490:	109b      	asrs	r3, r3, #2
   23492:	6103      	str	r3, [r0, #16]
   23494:	b903      	cbnz	r3, 23498 <rshift+0x50>
   23496:	6143      	str	r3, [r0, #20]
   23498:	bdf0      	pop	{r4, r5, r6, r7, pc}
   2349a:	6817      	ldr	r7, [r2, #0]
   2349c:	fa07 f70e 	lsl.w	r7, r7, lr
   234a0:	433c      	orrs	r4, r7
   234a2:	f843 4b04 	str.w	r4, [r3], #4
   234a6:	f852 4b04 	ldr.w	r4, [r2], #4
   234aa:	40cc      	lsrs	r4, r1
   234ac:	e7ea      	b.n	23484 <rshift+0x3c>
   234ae:	462b      	mov	r3, r5
   234b0:	e7ed      	b.n	2348e <rshift+0x46>

000234b2 <__hexdig_fun>:
__hexdig_fun():
   234b2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   234b6:	2b09      	cmp	r3, #9
   234b8:	d802      	bhi.n	234c0 <__hexdig_fun+0xe>
   234ba:	3820      	subs	r0, #32
   234bc:	b2c0      	uxtb	r0, r0
   234be:	4770      	bx	lr
   234c0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   234c4:	2b05      	cmp	r3, #5
   234c6:	d801      	bhi.n	234cc <__hexdig_fun+0x1a>
   234c8:	3847      	subs	r0, #71	; 0x47
   234ca:	e7f7      	b.n	234bc <__hexdig_fun+0xa>
   234cc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   234d0:	2b05      	cmp	r3, #5
   234d2:	d801      	bhi.n	234d8 <__hexdig_fun+0x26>
   234d4:	3827      	subs	r0, #39	; 0x27
   234d6:	e7f1      	b.n	234bc <__hexdig_fun+0xa>
   234d8:	2000      	movs	r0, #0
   234da:	4770      	bx	lr

000234dc <__gethex>:
__gethex():
   234dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234e0:	b08b      	sub	sp, #44	; 0x2c
   234e2:	9002      	str	r0, [sp, #8]
   234e4:	9816      	ldr	r0, [sp, #88]	; 0x58
   234e6:	468a      	mov	sl, r1
   234e8:	4690      	mov	r8, r2
   234ea:	9306      	str	r3, [sp, #24]
   234ec:	f000 fbd0 	bl	23c90 <__localeconv_l>
   234f0:	6803      	ldr	r3, [r0, #0]
   234f2:	f04f 0b00 	mov.w	fp, #0
   234f6:	4618      	mov	r0, r3
   234f8:	9303      	str	r3, [sp, #12]
   234fa:	f7fd fd71 	bl	20fe0 <strlen>
   234fe:	9b03      	ldr	r3, [sp, #12]
   23500:	9001      	str	r0, [sp, #4]
   23502:	4403      	add	r3, r0
   23504:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   23508:	9307      	str	r3, [sp, #28]
   2350a:	f8da 3000 	ldr.w	r3, [sl]
   2350e:	3302      	adds	r3, #2
   23510:	461f      	mov	r7, r3
   23512:	f813 0b01 	ldrb.w	r0, [r3], #1
   23516:	2830      	cmp	r0, #48	; 0x30
   23518:	d06c      	beq.n	235f4 <__gethex+0x118>
   2351a:	f7ff ffca 	bl	234b2 <__hexdig_fun>
   2351e:	4604      	mov	r4, r0
   23520:	2800      	cmp	r0, #0
   23522:	d16a      	bne.n	235fa <__gethex+0x11e>
   23524:	9a01      	ldr	r2, [sp, #4]
   23526:	9903      	ldr	r1, [sp, #12]
   23528:	4638      	mov	r0, r7
   2352a:	f7fd fd88 	bl	2103e <strncmp>
   2352e:	2800      	cmp	r0, #0
   23530:	d166      	bne.n	23600 <__gethex+0x124>
   23532:	9b01      	ldr	r3, [sp, #4]
   23534:	5cf8      	ldrb	r0, [r7, r3]
   23536:	18fe      	adds	r6, r7, r3
   23538:	f7ff ffbb 	bl	234b2 <__hexdig_fun>
   2353c:	2800      	cmp	r0, #0
   2353e:	d062      	beq.n	23606 <__gethex+0x12a>
   23540:	4633      	mov	r3, r6
   23542:	7818      	ldrb	r0, [r3, #0]
   23544:	461f      	mov	r7, r3
   23546:	2830      	cmp	r0, #48	; 0x30
   23548:	f103 0301 	add.w	r3, r3, #1
   2354c:	d0f9      	beq.n	23542 <__gethex+0x66>
   2354e:	f7ff ffb0 	bl	234b2 <__hexdig_fun>
   23552:	fab0 f580 	clz	r5, r0
   23556:	4634      	mov	r4, r6
   23558:	f04f 0b01 	mov.w	fp, #1
   2355c:	096d      	lsrs	r5, r5, #5
   2355e:	463a      	mov	r2, r7
   23560:	4616      	mov	r6, r2
   23562:	7830      	ldrb	r0, [r6, #0]
   23564:	3201      	adds	r2, #1
   23566:	f7ff ffa4 	bl	234b2 <__hexdig_fun>
   2356a:	2800      	cmp	r0, #0
   2356c:	d1f8      	bne.n	23560 <__gethex+0x84>
   2356e:	9a01      	ldr	r2, [sp, #4]
   23570:	9903      	ldr	r1, [sp, #12]
   23572:	4630      	mov	r0, r6
   23574:	f7fd fd63 	bl	2103e <strncmp>
   23578:	b950      	cbnz	r0, 23590 <__gethex+0xb4>
   2357a:	b954      	cbnz	r4, 23592 <__gethex+0xb6>
   2357c:	9b01      	ldr	r3, [sp, #4]
   2357e:	18f4      	adds	r4, r6, r3
   23580:	4622      	mov	r2, r4
   23582:	4616      	mov	r6, r2
   23584:	7830      	ldrb	r0, [r6, #0]
   23586:	3201      	adds	r2, #1
   23588:	f7ff ff93 	bl	234b2 <__hexdig_fun>
   2358c:	2800      	cmp	r0, #0
   2358e:	d1f8      	bne.n	23582 <__gethex+0xa6>
   23590:	b10c      	cbz	r4, 23596 <__gethex+0xba>
   23592:	1ba4      	subs	r4, r4, r6
   23594:	00a4      	lsls	r4, r4, #2
   23596:	7833      	ldrb	r3, [r6, #0]
   23598:	2b50      	cmp	r3, #80	; 0x50
   2359a:	d001      	beq.n	235a0 <__gethex+0xc4>
   2359c:	2b70      	cmp	r3, #112	; 0x70
   2359e:	d140      	bne.n	23622 <__gethex+0x146>
   235a0:	7873      	ldrb	r3, [r6, #1]
   235a2:	2b2b      	cmp	r3, #43	; 0x2b
   235a4:	d035      	beq.n	23612 <__gethex+0x136>
   235a6:	2b2d      	cmp	r3, #45	; 0x2d
   235a8:	d02f      	beq.n	2360a <__gethex+0x12e>
   235aa:	f04f 0900 	mov.w	r9, #0
   235ae:	1c71      	adds	r1, r6, #1
   235b0:	7808      	ldrb	r0, [r1, #0]
   235b2:	f7ff ff7e 	bl	234b2 <__hexdig_fun>
   235b6:	1e43      	subs	r3, r0, #1
   235b8:	b2db      	uxtb	r3, r3
   235ba:	2b18      	cmp	r3, #24
   235bc:	d831      	bhi.n	23622 <__gethex+0x146>
   235be:	f1a0 0210 	sub.w	r2, r0, #16
   235c2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   235c6:	f7ff ff74 	bl	234b2 <__hexdig_fun>
   235ca:	1e43      	subs	r3, r0, #1
   235cc:	b2db      	uxtb	r3, r3
   235ce:	2b18      	cmp	r3, #24
   235d0:	d922      	bls.n	23618 <__gethex+0x13c>
   235d2:	f1b9 0f00 	cmp.w	r9, #0
   235d6:	d000      	beq.n	235da <__gethex+0xfe>
   235d8:	4252      	negs	r2, r2
   235da:	4414      	add	r4, r2
   235dc:	f8ca 1000 	str.w	r1, [sl]
   235e0:	b30d      	cbz	r5, 23626 <__gethex+0x14a>
   235e2:	f1bb 0f00 	cmp.w	fp, #0
   235e6:	bf14      	ite	ne
   235e8:	2700      	movne	r7, #0
   235ea:	2706      	moveq	r7, #6
   235ec:	4638      	mov	r0, r7
   235ee:	b00b      	add	sp, #44	; 0x2c
   235f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235f4:	f10b 0b01 	add.w	fp, fp, #1
   235f8:	e78a      	b.n	23510 <__gethex+0x34>
   235fa:	2500      	movs	r5, #0
   235fc:	462c      	mov	r4, r5
   235fe:	e7ae      	b.n	2355e <__gethex+0x82>
   23600:	463e      	mov	r6, r7
   23602:	2501      	movs	r5, #1
   23604:	e7c7      	b.n	23596 <__gethex+0xba>
   23606:	4604      	mov	r4, r0
   23608:	e7fb      	b.n	23602 <__gethex+0x126>
   2360a:	f04f 0901 	mov.w	r9, #1
   2360e:	1cb1      	adds	r1, r6, #2
   23610:	e7ce      	b.n	235b0 <__gethex+0xd4>
   23612:	f04f 0900 	mov.w	r9, #0
   23616:	e7fa      	b.n	2360e <__gethex+0x132>
   23618:	230a      	movs	r3, #10
   2361a:	fb03 0202 	mla	r2, r3, r2, r0
   2361e:	3a10      	subs	r2, #16
   23620:	e7cf      	b.n	235c2 <__gethex+0xe6>
   23622:	4631      	mov	r1, r6
   23624:	e7da      	b.n	235dc <__gethex+0x100>
   23626:	4629      	mov	r1, r5
   23628:	1bf3      	subs	r3, r6, r7
   2362a:	3b01      	subs	r3, #1
   2362c:	2b07      	cmp	r3, #7
   2362e:	dc49      	bgt.n	236c4 <__gethex+0x1e8>
   23630:	9802      	ldr	r0, [sp, #8]
   23632:	f000 fb4f 	bl	23cd4 <_Balloc>
   23636:	f04f 0b00 	mov.w	fp, #0
   2363a:	4605      	mov	r5, r0
   2363c:	46da      	mov	sl, fp
   2363e:	9b01      	ldr	r3, [sp, #4]
   23640:	f100 0914 	add.w	r9, r0, #20
   23644:	f1c3 0301 	rsb	r3, r3, #1
   23648:	f8cd 9010 	str.w	r9, [sp, #16]
   2364c:	9308      	str	r3, [sp, #32]
   2364e:	42b7      	cmp	r7, r6
   23650:	d33b      	bcc.n	236ca <__gethex+0x1ee>
   23652:	9804      	ldr	r0, [sp, #16]
   23654:	f840 ab04 	str.w	sl, [r0], #4
   23658:	eba0 0009 	sub.w	r0, r0, r9
   2365c:	1080      	asrs	r0, r0, #2
   2365e:	6128      	str	r0, [r5, #16]
   23660:	0147      	lsls	r7, r0, #5
   23662:	4650      	mov	r0, sl
   23664:	f000 fbfa 	bl	23e5c <__hi0bits>
   23668:	f8d8 6000 	ldr.w	r6, [r8]
   2366c:	1a3f      	subs	r7, r7, r0
   2366e:	42b7      	cmp	r7, r6
   23670:	dd64      	ble.n	2373c <__gethex+0x260>
   23672:	1bbf      	subs	r7, r7, r6
   23674:	4639      	mov	r1, r7
   23676:	4628      	mov	r0, r5
   23678:	f000 fef3 	bl	24462 <__any_on>
   2367c:	4682      	mov	sl, r0
   2367e:	b178      	cbz	r0, 236a0 <__gethex+0x1c4>
   23680:	f04f 0a01 	mov.w	sl, #1
   23684:	1e7b      	subs	r3, r7, #1
   23686:	1159      	asrs	r1, r3, #5
   23688:	f003 021f 	and.w	r2, r3, #31
   2368c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   23690:	fa0a f202 	lsl.w	r2, sl, r2
   23694:	420a      	tst	r2, r1
   23696:	d003      	beq.n	236a0 <__gethex+0x1c4>
   23698:	4553      	cmp	r3, sl
   2369a:	dc46      	bgt.n	2372a <__gethex+0x24e>
   2369c:	f04f 0a02 	mov.w	sl, #2
   236a0:	4639      	mov	r1, r7
   236a2:	4628      	mov	r0, r5
   236a4:	f7ff fed0 	bl	23448 <rshift>
   236a8:	443c      	add	r4, r7
   236aa:	f8d8 3008 	ldr.w	r3, [r8, #8]
   236ae:	429c      	cmp	r4, r3
   236b0:	dd52      	ble.n	23758 <__gethex+0x27c>
   236b2:	4629      	mov	r1, r5
   236b4:	9802      	ldr	r0, [sp, #8]
   236b6:	f000 fb41 	bl	23d3c <_Bfree>
   236ba:	2300      	movs	r3, #0
   236bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
   236be:	27a3      	movs	r7, #163	; 0xa3
   236c0:	6013      	str	r3, [r2, #0]
   236c2:	e793      	b.n	235ec <__gethex+0x110>
   236c4:	3101      	adds	r1, #1
   236c6:	105b      	asrs	r3, r3, #1
   236c8:	e7b0      	b.n	2362c <__gethex+0x150>
   236ca:	1e73      	subs	r3, r6, #1
   236cc:	9305      	str	r3, [sp, #20]
   236ce:	9a07      	ldr	r2, [sp, #28]
   236d0:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   236d4:	4293      	cmp	r3, r2
   236d6:	d018      	beq.n	2370a <__gethex+0x22e>
   236d8:	f1bb 0f20 	cmp.w	fp, #32
   236dc:	d107      	bne.n	236ee <__gethex+0x212>
   236de:	9b04      	ldr	r3, [sp, #16]
   236e0:	f8c3 a000 	str.w	sl, [r3]
   236e4:	f04f 0a00 	mov.w	sl, #0
   236e8:	46d3      	mov	fp, sl
   236ea:	3304      	adds	r3, #4
   236ec:	9304      	str	r3, [sp, #16]
   236ee:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   236f2:	f7ff fede 	bl	234b2 <__hexdig_fun>
   236f6:	f000 000f 	and.w	r0, r0, #15
   236fa:	fa00 f00b 	lsl.w	r0, r0, fp
   236fe:	ea4a 0a00 	orr.w	sl, sl, r0
   23702:	f10b 0b04 	add.w	fp, fp, #4
   23706:	9b05      	ldr	r3, [sp, #20]
   23708:	e00d      	b.n	23726 <__gethex+0x24a>
   2370a:	9b05      	ldr	r3, [sp, #20]
   2370c:	9a08      	ldr	r2, [sp, #32]
   2370e:	4413      	add	r3, r2
   23710:	429f      	cmp	r7, r3
   23712:	d8e1      	bhi.n	236d8 <__gethex+0x1fc>
   23714:	4618      	mov	r0, r3
   23716:	9a01      	ldr	r2, [sp, #4]
   23718:	9903      	ldr	r1, [sp, #12]
   2371a:	9309      	str	r3, [sp, #36]	; 0x24
   2371c:	f7fd fc8f 	bl	2103e <strncmp>
   23720:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23722:	2800      	cmp	r0, #0
   23724:	d1d8      	bne.n	236d8 <__gethex+0x1fc>
   23726:	461e      	mov	r6, r3
   23728:	e791      	b.n	2364e <__gethex+0x172>
   2372a:	1eb9      	subs	r1, r7, #2
   2372c:	4628      	mov	r0, r5
   2372e:	f000 fe98 	bl	24462 <__any_on>
   23732:	2800      	cmp	r0, #0
   23734:	d0b2      	beq.n	2369c <__gethex+0x1c0>
   23736:	f04f 0a03 	mov.w	sl, #3
   2373a:	e7b1      	b.n	236a0 <__gethex+0x1c4>
   2373c:	da09      	bge.n	23752 <__gethex+0x276>
   2373e:	1bf7      	subs	r7, r6, r7
   23740:	4629      	mov	r1, r5
   23742:	463a      	mov	r2, r7
   23744:	9802      	ldr	r0, [sp, #8]
   23746:	f000 fcbb 	bl	240c0 <__lshift>
   2374a:	4605      	mov	r5, r0
   2374c:	1be4      	subs	r4, r4, r7
   2374e:	f100 0914 	add.w	r9, r0, #20
   23752:	f04f 0a00 	mov.w	sl, #0
   23756:	e7a8      	b.n	236aa <__gethex+0x1ce>
   23758:	f8d8 0004 	ldr.w	r0, [r8, #4]
   2375c:	4284      	cmp	r4, r0
   2375e:	da6b      	bge.n	23838 <__gethex+0x35c>
   23760:	1b04      	subs	r4, r0, r4
   23762:	42a6      	cmp	r6, r4
   23764:	dc2e      	bgt.n	237c4 <__gethex+0x2e8>
   23766:	f8d8 300c 	ldr.w	r3, [r8, #12]
   2376a:	2b02      	cmp	r3, #2
   2376c:	d022      	beq.n	237b4 <__gethex+0x2d8>
   2376e:	2b03      	cmp	r3, #3
   23770:	d024      	beq.n	237bc <__gethex+0x2e0>
   23772:	2b01      	cmp	r3, #1
   23774:	d115      	bne.n	237a2 <__gethex+0x2c6>
   23776:	42a6      	cmp	r6, r4
   23778:	d113      	bne.n	237a2 <__gethex+0x2c6>
   2377a:	2e01      	cmp	r6, #1
   2377c:	dc0b      	bgt.n	23796 <__gethex+0x2ba>
   2377e:	f8d8 3004 	ldr.w	r3, [r8, #4]
   23782:	9a06      	ldr	r2, [sp, #24]
   23784:	2762      	movs	r7, #98	; 0x62
   23786:	6013      	str	r3, [r2, #0]
   23788:	2301      	movs	r3, #1
   2378a:	612b      	str	r3, [r5, #16]
   2378c:	f8c9 3000 	str.w	r3, [r9]
   23790:	9b14      	ldr	r3, [sp, #80]	; 0x50
   23792:	601d      	str	r5, [r3, #0]
   23794:	e72a      	b.n	235ec <__gethex+0x110>
   23796:	1e71      	subs	r1, r6, #1
   23798:	4628      	mov	r0, r5
   2379a:	f000 fe62 	bl	24462 <__any_on>
   2379e:	2800      	cmp	r0, #0
   237a0:	d1ed      	bne.n	2377e <__gethex+0x2a2>
   237a2:	4629      	mov	r1, r5
   237a4:	9802      	ldr	r0, [sp, #8]
   237a6:	f000 fac9 	bl	23d3c <_Bfree>
   237aa:	2300      	movs	r3, #0
   237ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
   237ae:	2750      	movs	r7, #80	; 0x50
   237b0:	6013      	str	r3, [r2, #0]
   237b2:	e71b      	b.n	235ec <__gethex+0x110>
   237b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   237b6:	2b00      	cmp	r3, #0
   237b8:	d0e1      	beq.n	2377e <__gethex+0x2a2>
   237ba:	e7f2      	b.n	237a2 <__gethex+0x2c6>
   237bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   237be:	2b00      	cmp	r3, #0
   237c0:	d1dd      	bne.n	2377e <__gethex+0x2a2>
   237c2:	e7ee      	b.n	237a2 <__gethex+0x2c6>
   237c4:	1e67      	subs	r7, r4, #1
   237c6:	f1ba 0f00 	cmp.w	sl, #0
   237ca:	d132      	bne.n	23832 <__gethex+0x356>
   237cc:	b127      	cbz	r7, 237d8 <__gethex+0x2fc>
   237ce:	4639      	mov	r1, r7
   237d0:	4628      	mov	r0, r5
   237d2:	f000 fe46 	bl	24462 <__any_on>
   237d6:	4682      	mov	sl, r0
   237d8:	2301      	movs	r3, #1
   237da:	117a      	asrs	r2, r7, #5
   237dc:	f007 071f 	and.w	r7, r7, #31
   237e0:	fa03 f707 	lsl.w	r7, r3, r7
   237e4:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   237e8:	4621      	mov	r1, r4
   237ea:	421f      	tst	r7, r3
   237ec:	f04f 0702 	mov.w	r7, #2
   237f0:	4628      	mov	r0, r5
   237f2:	bf18      	it	ne
   237f4:	f04a 0a02 	orrne.w	sl, sl, #2
   237f8:	1b36      	subs	r6, r6, r4
   237fa:	f7ff fe25 	bl	23448 <rshift>
   237fe:	f8d8 4004 	ldr.w	r4, [r8, #4]
   23802:	f1ba 0f00 	cmp.w	sl, #0
   23806:	d045      	beq.n	23894 <__gethex+0x3b8>
   23808:	f8d8 300c 	ldr.w	r3, [r8, #12]
   2380c:	2b02      	cmp	r3, #2
   2380e:	d015      	beq.n	2383c <__gethex+0x360>
   23810:	2b03      	cmp	r3, #3
   23812:	d017      	beq.n	23844 <__gethex+0x368>
   23814:	2b01      	cmp	r3, #1
   23816:	d109      	bne.n	2382c <__gethex+0x350>
   23818:	f01a 0f02 	tst.w	sl, #2
   2381c:	d006      	beq.n	2382c <__gethex+0x350>
   2381e:	f8d9 3000 	ldr.w	r3, [r9]
   23822:	ea4a 0a03 	orr.w	sl, sl, r3
   23826:	f01a 0f01 	tst.w	sl, #1
   2382a:	d10e      	bne.n	2384a <__gethex+0x36e>
   2382c:	f047 0710 	orr.w	r7, r7, #16
   23830:	e030      	b.n	23894 <__gethex+0x3b8>
   23832:	f04f 0a01 	mov.w	sl, #1
   23836:	e7cf      	b.n	237d8 <__gethex+0x2fc>
   23838:	2701      	movs	r7, #1
   2383a:	e7e2      	b.n	23802 <__gethex+0x326>
   2383c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   2383e:	f1c3 0301 	rsb	r3, r3, #1
   23842:	9315      	str	r3, [sp, #84]	; 0x54
   23844:	9b15      	ldr	r3, [sp, #84]	; 0x54
   23846:	2b00      	cmp	r3, #0
   23848:	d0f0      	beq.n	2382c <__gethex+0x350>
   2384a:	2000      	movs	r0, #0
   2384c:	f8d5 9010 	ldr.w	r9, [r5, #16]
   23850:	f105 0314 	add.w	r3, r5, #20
   23854:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   23858:	eb03 010a 	add.w	r1, r3, sl
   2385c:	681a      	ldr	r2, [r3, #0]
   2385e:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   23862:	d01c      	beq.n	2389e <__gethex+0x3c2>
   23864:	3201      	adds	r2, #1
   23866:	601a      	str	r2, [r3, #0]
   23868:	2f02      	cmp	r7, #2
   2386a:	f105 0314 	add.w	r3, r5, #20
   2386e:	d138      	bne.n	238e2 <__gethex+0x406>
   23870:	f8d8 2000 	ldr.w	r2, [r8]
   23874:	3a01      	subs	r2, #1
   23876:	4296      	cmp	r6, r2
   23878:	d10a      	bne.n	23890 <__gethex+0x3b4>
   2387a:	2201      	movs	r2, #1
   2387c:	1171      	asrs	r1, r6, #5
   2387e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   23882:	f006 061f 	and.w	r6, r6, #31
   23886:	fa02 f606 	lsl.w	r6, r2, r6
   2388a:	421e      	tst	r6, r3
   2388c:	bf18      	it	ne
   2388e:	4617      	movne	r7, r2
   23890:	f047 0720 	orr.w	r7, r7, #32
   23894:	9b14      	ldr	r3, [sp, #80]	; 0x50
   23896:	601d      	str	r5, [r3, #0]
   23898:	9b06      	ldr	r3, [sp, #24]
   2389a:	601c      	str	r4, [r3, #0]
   2389c:	e6a6      	b.n	235ec <__gethex+0x110>
   2389e:	f843 0b04 	str.w	r0, [r3], #4
   238a2:	4299      	cmp	r1, r3
   238a4:	d8da      	bhi.n	2385c <__gethex+0x380>
   238a6:	68ab      	ldr	r3, [r5, #8]
   238a8:	4599      	cmp	r9, r3
   238aa:	db12      	blt.n	238d2 <__gethex+0x3f6>
   238ac:	6869      	ldr	r1, [r5, #4]
   238ae:	9802      	ldr	r0, [sp, #8]
   238b0:	3101      	adds	r1, #1
   238b2:	f000 fa0f 	bl	23cd4 <_Balloc>
   238b6:	4683      	mov	fp, r0
   238b8:	692a      	ldr	r2, [r5, #16]
   238ba:	f105 010c 	add.w	r1, r5, #12
   238be:	3202      	adds	r2, #2
   238c0:	0092      	lsls	r2, r2, #2
   238c2:	300c      	adds	r0, #12
   238c4:	f7fb fde1 	bl	1f48a <memcpy>
   238c8:	4629      	mov	r1, r5
   238ca:	9802      	ldr	r0, [sp, #8]
   238cc:	f000 fa36 	bl	23d3c <_Bfree>
   238d0:	465d      	mov	r5, fp
   238d2:	692b      	ldr	r3, [r5, #16]
   238d4:	1c5a      	adds	r2, r3, #1
   238d6:	612a      	str	r2, [r5, #16]
   238d8:	2201      	movs	r2, #1
   238da:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   238de:	615a      	str	r2, [r3, #20]
   238e0:	e7c2      	b.n	23868 <__gethex+0x38c>
   238e2:	692a      	ldr	r2, [r5, #16]
   238e4:	4591      	cmp	r9, r2
   238e6:	da0b      	bge.n	23900 <__gethex+0x424>
   238e8:	2101      	movs	r1, #1
   238ea:	4628      	mov	r0, r5
   238ec:	f7ff fdac 	bl	23448 <rshift>
   238f0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   238f4:	3401      	adds	r4, #1
   238f6:	429c      	cmp	r4, r3
   238f8:	f73f aedb 	bgt.w	236b2 <__gethex+0x1d6>
   238fc:	2701      	movs	r7, #1
   238fe:	e7c7      	b.n	23890 <__gethex+0x3b4>
   23900:	f016 061f 	ands.w	r6, r6, #31
   23904:	d0fa      	beq.n	238fc <__gethex+0x420>
   23906:	449a      	add	sl, r3
   23908:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   2390c:	f000 faa6 	bl	23e5c <__hi0bits>
   23910:	f1c6 0620 	rsb	r6, r6, #32
   23914:	42b0      	cmp	r0, r6
   23916:	dbe7      	blt.n	238e8 <__gethex+0x40c>
   23918:	e7f0      	b.n	238fc <__gethex+0x420>

0002391a <L_shift>:
L_shift():
   2391a:	f1c2 0208 	rsb	r2, r2, #8
   2391e:	0092      	lsls	r2, r2, #2
   23920:	b570      	push	{r4, r5, r6, lr}
   23922:	f1c2 0620 	rsb	r6, r2, #32
   23926:	6843      	ldr	r3, [r0, #4]
   23928:	6804      	ldr	r4, [r0, #0]
   2392a:	fa03 f506 	lsl.w	r5, r3, r6
   2392e:	432c      	orrs	r4, r5
   23930:	40d3      	lsrs	r3, r2
   23932:	6004      	str	r4, [r0, #0]
   23934:	f840 3f04 	str.w	r3, [r0, #4]!
   23938:	4288      	cmp	r0, r1
   2393a:	d3f4      	bcc.n	23926 <L_shift+0xc>
   2393c:	bd70      	pop	{r4, r5, r6, pc}

0002393e <__match>:
__match():
   2393e:	b530      	push	{r4, r5, lr}
   23940:	6803      	ldr	r3, [r0, #0]
   23942:	f811 4b01 	ldrb.w	r4, [r1], #1
   23946:	3301      	adds	r3, #1
   23948:	b914      	cbnz	r4, 23950 <__match+0x12>
   2394a:	6003      	str	r3, [r0, #0]
   2394c:	2001      	movs	r0, #1
   2394e:	bd30      	pop	{r4, r5, pc}
   23950:	781a      	ldrb	r2, [r3, #0]
   23952:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   23956:	2d19      	cmp	r5, #25
   23958:	bf98      	it	ls
   2395a:	3220      	addls	r2, #32
   2395c:	42a2      	cmp	r2, r4
   2395e:	d0f0      	beq.n	23942 <__match+0x4>
   23960:	2000      	movs	r0, #0
   23962:	bd30      	pop	{r4, r5, pc}

00023964 <__hexnan>:
__hexnan():
   23964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23968:	2500      	movs	r5, #0
   2396a:	680b      	ldr	r3, [r1, #0]
   2396c:	4682      	mov	sl, r0
   2396e:	115f      	asrs	r7, r3, #5
   23970:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   23974:	f013 031f 	ands.w	r3, r3, #31
   23978:	bf18      	it	ne
   2397a:	3704      	addne	r7, #4
   2397c:	1f3e      	subs	r6, r7, #4
   2397e:	4690      	mov	r8, r2
   23980:	46b1      	mov	r9, r6
   23982:	4634      	mov	r4, r6
   23984:	46ab      	mov	fp, r5
   23986:	b087      	sub	sp, #28
   23988:	6801      	ldr	r1, [r0, #0]
   2398a:	9302      	str	r3, [sp, #8]
   2398c:	f847 5c04 	str.w	r5, [r7, #-4]
   23990:	9501      	str	r5, [sp, #4]
   23992:	784a      	ldrb	r2, [r1, #1]
   23994:	1c4b      	adds	r3, r1, #1
   23996:	9303      	str	r3, [sp, #12]
   23998:	b342      	cbz	r2, 239ec <__hexnan+0x88>
   2399a:	4610      	mov	r0, r2
   2399c:	9105      	str	r1, [sp, #20]
   2399e:	9204      	str	r2, [sp, #16]
   239a0:	f7ff fd87 	bl	234b2 <__hexdig_fun>
   239a4:	2800      	cmp	r0, #0
   239a6:	d143      	bne.n	23a30 <__hexnan+0xcc>
   239a8:	9a04      	ldr	r2, [sp, #16]
   239aa:	9905      	ldr	r1, [sp, #20]
   239ac:	2a20      	cmp	r2, #32
   239ae:	d818      	bhi.n	239e2 <__hexnan+0x7e>
   239b0:	9b01      	ldr	r3, [sp, #4]
   239b2:	459b      	cmp	fp, r3
   239b4:	dd13      	ble.n	239de <__hexnan+0x7a>
   239b6:	454c      	cmp	r4, r9
   239b8:	d206      	bcs.n	239c8 <__hexnan+0x64>
   239ba:	2d07      	cmp	r5, #7
   239bc:	dc04      	bgt.n	239c8 <__hexnan+0x64>
   239be:	462a      	mov	r2, r5
   239c0:	4649      	mov	r1, r9
   239c2:	4620      	mov	r0, r4
   239c4:	f7ff ffa9 	bl	2391a <L_shift>
   239c8:	4544      	cmp	r4, r8
   239ca:	d944      	bls.n	23a56 <__hexnan+0xf2>
   239cc:	2300      	movs	r3, #0
   239ce:	f1a4 0904 	sub.w	r9, r4, #4
   239d2:	f844 3c04 	str.w	r3, [r4, #-4]
   239d6:	461d      	mov	r5, r3
   239d8:	464c      	mov	r4, r9
   239da:	f8cd b004 	str.w	fp, [sp, #4]
   239de:	9903      	ldr	r1, [sp, #12]
   239e0:	e7d7      	b.n	23992 <__hexnan+0x2e>
   239e2:	2a29      	cmp	r2, #41	; 0x29
   239e4:	d14a      	bne.n	23a7c <__hexnan+0x118>
   239e6:	3102      	adds	r1, #2
   239e8:	f8ca 1000 	str.w	r1, [sl]
   239ec:	f1bb 0f00 	cmp.w	fp, #0
   239f0:	d044      	beq.n	23a7c <__hexnan+0x118>
   239f2:	454c      	cmp	r4, r9
   239f4:	d206      	bcs.n	23a04 <__hexnan+0xa0>
   239f6:	2d07      	cmp	r5, #7
   239f8:	dc04      	bgt.n	23a04 <__hexnan+0xa0>
   239fa:	462a      	mov	r2, r5
   239fc:	4649      	mov	r1, r9
   239fe:	4620      	mov	r0, r4
   23a00:	f7ff ff8b 	bl	2391a <L_shift>
   23a04:	4544      	cmp	r4, r8
   23a06:	d928      	bls.n	23a5a <__hexnan+0xf6>
   23a08:	4643      	mov	r3, r8
   23a0a:	f854 2b04 	ldr.w	r2, [r4], #4
   23a0e:	42a6      	cmp	r6, r4
   23a10:	f843 2b04 	str.w	r2, [r3], #4
   23a14:	d2f9      	bcs.n	23a0a <__hexnan+0xa6>
   23a16:	2200      	movs	r2, #0
   23a18:	f843 2b04 	str.w	r2, [r3], #4
   23a1c:	429e      	cmp	r6, r3
   23a1e:	d2fb      	bcs.n	23a18 <__hexnan+0xb4>
   23a20:	6833      	ldr	r3, [r6, #0]
   23a22:	b91b      	cbnz	r3, 23a2c <__hexnan+0xc8>
   23a24:	4546      	cmp	r6, r8
   23a26:	d127      	bne.n	23a78 <__hexnan+0x114>
   23a28:	2301      	movs	r3, #1
   23a2a:	6033      	str	r3, [r6, #0]
   23a2c:	2005      	movs	r0, #5
   23a2e:	e026      	b.n	23a7e <__hexnan+0x11a>
   23a30:	3501      	adds	r5, #1
   23a32:	2d08      	cmp	r5, #8
   23a34:	f10b 0b01 	add.w	fp, fp, #1
   23a38:	dd06      	ble.n	23a48 <__hexnan+0xe4>
   23a3a:	4544      	cmp	r4, r8
   23a3c:	d9cf      	bls.n	239de <__hexnan+0x7a>
   23a3e:	2300      	movs	r3, #0
   23a40:	2501      	movs	r5, #1
   23a42:	f844 3c04 	str.w	r3, [r4, #-4]
   23a46:	3c04      	subs	r4, #4
   23a48:	6822      	ldr	r2, [r4, #0]
   23a4a:	f000 000f 	and.w	r0, r0, #15
   23a4e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   23a52:	6020      	str	r0, [r4, #0]
   23a54:	e7c3      	b.n	239de <__hexnan+0x7a>
   23a56:	2508      	movs	r5, #8
   23a58:	e7c1      	b.n	239de <__hexnan+0x7a>
   23a5a:	9b02      	ldr	r3, [sp, #8]
   23a5c:	2b00      	cmp	r3, #0
   23a5e:	d0df      	beq.n	23a20 <__hexnan+0xbc>
   23a60:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   23a64:	f1c3 0320 	rsb	r3, r3, #32
   23a68:	fa22 f303 	lsr.w	r3, r2, r3
   23a6c:	f857 2c04 	ldr.w	r2, [r7, #-4]
   23a70:	401a      	ands	r2, r3
   23a72:	f847 2c04 	str.w	r2, [r7, #-4]
   23a76:	e7d3      	b.n	23a20 <__hexnan+0xbc>
   23a78:	3e04      	subs	r6, #4
   23a7a:	e7d1      	b.n	23a20 <__hexnan+0xbc>
   23a7c:	2004      	movs	r0, #4
   23a7e:	b007      	add	sp, #28
   23a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023a84 <_findenv_r>:
_findenv_r():
   23a84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23a88:	4606      	mov	r6, r0
   23a8a:	468a      	mov	sl, r1
   23a8c:	4617      	mov	r7, r2
   23a8e:	f001 fdd3 	bl	25638 <__env_lock>
   23a92:	4b1b      	ldr	r3, [pc, #108]	; (23b00 <_findenv_r+0x7c>)
   23a94:	f8d3 8000 	ldr.w	r8, [r3]
   23a98:	4699      	mov	r9, r3
   23a9a:	f1b8 0f00 	cmp.w	r8, #0
   23a9e:	d007      	beq.n	23ab0 <_findenv_r+0x2c>
   23aa0:	4654      	mov	r4, sl
   23aa2:	4623      	mov	r3, r4
   23aa4:	f813 2b01 	ldrb.w	r2, [r3], #1
   23aa8:	b332      	cbz	r2, 23af8 <_findenv_r+0x74>
   23aaa:	2a3d      	cmp	r2, #61	; 0x3d
   23aac:	461c      	mov	r4, r3
   23aae:	d1f8      	bne.n	23aa2 <_findenv_r+0x1e>
   23ab0:	4630      	mov	r0, r6
   23ab2:	f001 fdc2 	bl	2563a <__env_unlock>
   23ab6:	2000      	movs	r0, #0
   23ab8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23abc:	f108 0804 	add.w	r8, r8, #4
   23ac0:	f8d8 0000 	ldr.w	r0, [r8]
   23ac4:	2800      	cmp	r0, #0
   23ac6:	d0f3      	beq.n	23ab0 <_findenv_r+0x2c>
   23ac8:	4622      	mov	r2, r4
   23aca:	4651      	mov	r1, sl
   23acc:	f7fd fab7 	bl	2103e <strncmp>
   23ad0:	2800      	cmp	r0, #0
   23ad2:	d1f3      	bne.n	23abc <_findenv_r+0x38>
   23ad4:	f8d8 3000 	ldr.w	r3, [r8]
   23ad8:	191d      	adds	r5, r3, r4
   23ada:	5d1b      	ldrb	r3, [r3, r4]
   23adc:	2b3d      	cmp	r3, #61	; 0x3d
   23ade:	d1ed      	bne.n	23abc <_findenv_r+0x38>
   23ae0:	f8d9 3000 	ldr.w	r3, [r9]
   23ae4:	4630      	mov	r0, r6
   23ae6:	eba8 0303 	sub.w	r3, r8, r3
   23aea:	109b      	asrs	r3, r3, #2
   23aec:	603b      	str	r3, [r7, #0]
   23aee:	f001 fda4 	bl	2563a <__env_unlock>
   23af2:	1c68      	adds	r0, r5, #1
   23af4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23af8:	eba4 040a 	sub.w	r4, r4, sl
   23afc:	e7e0      	b.n	23ac0 <_findenv_r+0x3c>
   23afe:	bf00      	nop
   23b00:	2007c2f8 	.word	0x2007c2f8

00023b04 <_getenv_r>:
_getenv_r():
   23b04:	b507      	push	{r0, r1, r2, lr}
   23b06:	aa01      	add	r2, sp, #4
   23b08:	f7ff ffbc 	bl	23a84 <_findenv_r>
   23b0c:	b003      	add	sp, #12
   23b0e:	f85d fb04 	ldr.w	pc, [sp], #4
   23b12:	Address 0x0000000000023b12 is out of bounds.


00023b14 <_gettimeofday_r>:
_gettimeofday_r():
   23b14:	b538      	push	{r3, r4, r5, lr}
   23b16:	2300      	movs	r3, #0
   23b18:	4c06      	ldr	r4, [pc, #24]	; (23b34 <_gettimeofday_r+0x20>)
   23b1a:	4605      	mov	r5, r0
   23b1c:	4608      	mov	r0, r1
   23b1e:	4611      	mov	r1, r2
   23b20:	6023      	str	r3, [r4, #0]
   23b22:	f7f3 fb4b 	bl	171bc <_gettimeofday>
   23b26:	1c43      	adds	r3, r0, #1
   23b28:	d102      	bne.n	23b30 <_gettimeofday_r+0x1c>
   23b2a:	6823      	ldr	r3, [r4, #0]
   23b2c:	b103      	cbz	r3, 23b30 <_gettimeofday_r+0x1c>
   23b2e:	602b      	str	r3, [r5, #0]
   23b30:	bd38      	pop	{r3, r4, r5, pc}
   23b32:	bf00      	nop
   23b34:	2007c984 	.word	0x2007c984

00023b38 <__gettzinfo>:
__gettzinfo():
   23b38:	4800      	ldr	r0, [pc, #0]	; (23b3c <__gettzinfo+0x4>)
   23b3a:	4770      	bx	lr
   23b3c:	2007c2b8 	.word	0x2007c2b8

00023b40 <gmtime_r>:
gmtime_r():
   23b40:	6802      	ldr	r2, [r0, #0]
   23b42:	4847      	ldr	r0, [pc, #284]	; (23c60 <gmtime_r+0x120>)
   23b44:	b5f0      	push	{r4, r5, r6, r7, lr}
   23b46:	fb92 f3f0 	sdiv	r3, r2, r0
   23b4a:	f44f 6461 	mov.w	r4, #3600	; 0xe10
   23b4e:	fb00 2013 	mls	r0, r0, r3, r2
   23b52:	2800      	cmp	r0, #0
   23b54:	bfbc      	itt	lt
   23b56:	f500 30a8 	addlt.w	r0, r0, #86016	; 0x15000
   23b5a:	f500 70c0 	addlt.w	r0, r0, #384	; 0x180
   23b5e:	fb90 f2f4 	sdiv	r2, r0, r4
   23b62:	fb04 0012 	mls	r0, r4, r2, r0
   23b66:	f04f 043c 	mov.w	r4, #60	; 0x3c
   23b6a:	608a      	str	r2, [r1, #8]
   23b6c:	fb90 f2f4 	sdiv	r2, r0, r4
   23b70:	fb04 0012 	mls	r0, r4, r2, r0
   23b74:	604a      	str	r2, [r1, #4]
   23b76:	f04f 0207 	mov.w	r2, #7
   23b7a:	f503 232f 	add.w	r3, r3, #716800	; 0xaf000
   23b7e:	bfac      	ite	ge
   23b80:	f603 236c 	addwge	r3, r3, #2668	; 0xa6c
   23b84:	f603 236b 	addwlt	r3, r3, #2667	; 0xa6b
   23b88:	6008      	str	r0, [r1, #0]
   23b8a:	1cd8      	adds	r0, r3, #3
   23b8c:	fb90 f2f2 	sdiv	r2, r0, r2
   23b90:	4c34      	ldr	r4, [pc, #208]	; (23c64 <gmtime_r+0x124>)
   23b92:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   23b96:	fb93 f4f4 	sdiv	r4, r3, r4
   23b9a:	1a82      	subs	r2, r0, r2
   23b9c:	f648 60ac 	movw	r0, #36524	; 0x8eac
   23ba0:	f240 57b4 	movw	r7, #1460	; 0x5b4
   23ba4:	618a      	str	r2, [r1, #24]
   23ba6:	4a30      	ldr	r2, [pc, #192]	; (23c68 <gmtime_r+0x128>)
   23ba8:	f240 166d 	movw	r6, #365	; 0x16d
   23bac:	fb02 3304 	mla	r3, r2, r4, r3
   23bb0:	fbb3 f0f0 	udiv	r0, r3, r0
   23bb4:	fbb3 f2f7 	udiv	r2, r3, r7
   23bb8:	4418      	add	r0, r3
   23bba:	1a80      	subs	r0, r0, r2
   23bbc:	4a2b      	ldr	r2, [pc, #172]	; (23c6c <gmtime_r+0x12c>)
   23bbe:	fbb3 f2f2 	udiv	r2, r3, r2
   23bc2:	1a82      	subs	r2, r0, r2
   23bc4:	f648 6094 	movw	r0, #36500	; 0x8e94
   23bc8:	fbb2 f0f0 	udiv	r0, r2, r0
   23bcc:	fbb2 f5f6 	udiv	r5, r2, r6
   23bd0:	fbb2 f2f7 	udiv	r2, r2, r7
   23bd4:	4403      	add	r3, r0
   23bd6:	2099      	movs	r0, #153	; 0x99
   23bd8:	1a9a      	subs	r2, r3, r2
   23bda:	fb06 2315 	mls	r3, r6, r5, r2
   23bde:	eb03 0283 	add.w	r2, r3, r3, lsl #2
   23be2:	3202      	adds	r2, #2
   23be4:	fbb2 f2f0 	udiv	r2, r2, r0
   23be8:	2705      	movs	r7, #5
   23bea:	4350      	muls	r0, r2
   23bec:	3002      	adds	r0, #2
   23bee:	fbb0 f0f7 	udiv	r0, r0, r7
   23bf2:	2a0a      	cmp	r2, #10
   23bf4:	f103 0601 	add.w	r6, r3, #1
   23bf8:	eba6 0000 	sub.w	r0, r6, r0
   23bfc:	bf34      	ite	cc
   23bfe:	2602      	movcc	r6, #2
   23c00:	f06f 0609 	mvncs.w	r6, #9
   23c04:	4416      	add	r6, r2
   23c06:	f44f 72c8 	mov.w	r2, #400	; 0x190
   23c0a:	fb02 5404 	mla	r4, r2, r4, r5
   23c0e:	2e01      	cmp	r6, #1
   23c10:	bf98      	it	ls
   23c12:	3401      	addls	r4, #1
   23c14:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
   23c18:	d30b      	bcc.n	23c32 <gmtime_r+0xf2>
   23c1a:	f5a3 7399 	sub.w	r3, r3, #306	; 0x132
   23c1e:	61cb      	str	r3, [r1, #28]
   23c20:	2300      	movs	r3, #0
   23c22:	f2a4 746c 	subw	r4, r4, #1900	; 0x76c
   23c26:	60c8      	str	r0, [r1, #12]
   23c28:	614c      	str	r4, [r1, #20]
   23c2a:	610e      	str	r6, [r1, #16]
   23c2c:	620b      	str	r3, [r1, #32]
   23c2e:	4608      	mov	r0, r1
   23c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
   23c32:	07aa      	lsls	r2, r5, #30
   23c34:	d105      	bne.n	23c42 <gmtime_r+0x102>
   23c36:	2764      	movs	r7, #100	; 0x64
   23c38:	fbb5 f2f7 	udiv	r2, r5, r7
   23c3c:	fb07 5212 	mls	r2, r7, r2, r5
   23c40:	b95a      	cbnz	r2, 23c5a <gmtime_r+0x11a>
   23c42:	f44f 77c8 	mov.w	r7, #400	; 0x190
   23c46:	fbb5 f2f7 	udiv	r2, r5, r7
   23c4a:	fb07 5212 	mls	r2, r7, r2, r5
   23c4e:	fab2 f282 	clz	r2, r2
   23c52:	0952      	lsrs	r2, r2, #5
   23c54:	333b      	adds	r3, #59	; 0x3b
   23c56:	4413      	add	r3, r2
   23c58:	e7e1      	b.n	23c1e <gmtime_r+0xde>
   23c5a:	2201      	movs	r2, #1
   23c5c:	e7fa      	b.n	23c54 <gmtime_r+0x114>
   23c5e:	bf00      	nop
   23c60:	00015180 	.word	0x00015180
   23c64:	00023ab1 	.word	0x00023ab1
   23c68:	fffdc54f 	.word	0xfffdc54f
   23c6c:	00023ab0 	.word	0x00023ab0

00023c70 <_isatty_r>:
_isatty_r():
   23c70:	b538      	push	{r3, r4, r5, lr}
   23c72:	2300      	movs	r3, #0
   23c74:	4c05      	ldr	r4, [pc, #20]	; (23c8c <_isatty_r+0x1c>)
   23c76:	4605      	mov	r5, r0
   23c78:	4608      	mov	r0, r1
   23c7a:	6023      	str	r3, [r4, #0]
   23c7c:	f7f3 fd22 	bl	176c4 <_isatty>
   23c80:	1c43      	adds	r3, r0, #1
   23c82:	d102      	bne.n	23c8a <_isatty_r+0x1a>
   23c84:	6823      	ldr	r3, [r4, #0]
   23c86:	b103      	cbz	r3, 23c8a <_isatty_r+0x1a>
   23c88:	602b      	str	r3, [r5, #0]
   23c8a:	bd38      	pop	{r3, r4, r5, pc}
   23c8c:	2007c984 	.word	0x2007c984

00023c90 <__localeconv_l>:
__localeconv_l():
   23c90:	30f0      	adds	r0, #240	; 0xf0
   23c92:	4770      	bx	lr

00023c94 <_localeconv_r>:
_localeconv_r():
   23c94:	4b04      	ldr	r3, [pc, #16]	; (23ca8 <_localeconv_r+0x14>)
   23c96:	681b      	ldr	r3, [r3, #0]
   23c98:	6a18      	ldr	r0, [r3, #32]
   23c9a:	4b04      	ldr	r3, [pc, #16]	; (23cac <_localeconv_r+0x18>)
   23c9c:	2800      	cmp	r0, #0
   23c9e:	bf08      	it	eq
   23ca0:	4618      	moveq	r0, r3
   23ca2:	30f0      	adds	r0, #240	; 0xf0
   23ca4:	4770      	bx	lr
   23ca6:	bf00      	nop
   23ca8:	2007c0e0 	.word	0x2007c0e0
   23cac:	2007c144 	.word	0x2007c144

00023cb0 <_lseek_r>:
_lseek_r():
   23cb0:	b538      	push	{r3, r4, r5, lr}
   23cb2:	4605      	mov	r5, r0
   23cb4:	4608      	mov	r0, r1
   23cb6:	4611      	mov	r1, r2
   23cb8:	2200      	movs	r2, #0
   23cba:	4c05      	ldr	r4, [pc, #20]	; (23cd0 <_lseek_r+0x20>)
   23cbc:	6022      	str	r2, [r4, #0]
   23cbe:	461a      	mov	r2, r3
   23cc0:	f7f3 fba6 	bl	17410 <_lseek>
   23cc4:	1c43      	adds	r3, r0, #1
   23cc6:	d102      	bne.n	23cce <_lseek_r+0x1e>
   23cc8:	6823      	ldr	r3, [r4, #0]
   23cca:	b103      	cbz	r3, 23cce <_lseek_r+0x1e>
   23ccc:	602b      	str	r3, [r5, #0]
   23cce:	bd38      	pop	{r3, r4, r5, pc}
   23cd0:	2007c984 	.word	0x2007c984

00023cd4 <_Balloc>:
_Balloc():
   23cd4:	b570      	push	{r4, r5, r6, lr}
   23cd6:	6a45      	ldr	r5, [r0, #36]	; 0x24
   23cd8:	4604      	mov	r4, r0
   23cda:	460e      	mov	r6, r1
   23cdc:	b93d      	cbnz	r5, 23cee <_Balloc+0x1a>
   23cde:	2010      	movs	r0, #16
   23ce0:	f7fb fb94 	bl	1f40c <malloc>
   23ce4:	6260      	str	r0, [r4, #36]	; 0x24
   23ce6:	6045      	str	r5, [r0, #4]
   23ce8:	6085      	str	r5, [r0, #8]
   23cea:	6005      	str	r5, [r0, #0]
   23cec:	60c5      	str	r5, [r0, #12]
   23cee:	6a65      	ldr	r5, [r4, #36]	; 0x24
   23cf0:	68eb      	ldr	r3, [r5, #12]
   23cf2:	b183      	cbz	r3, 23d16 <_Balloc+0x42>
   23cf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
   23cf6:	68db      	ldr	r3, [r3, #12]
   23cf8:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   23cfc:	b9b8      	cbnz	r0, 23d2e <_Balloc+0x5a>
   23cfe:	2101      	movs	r1, #1
   23d00:	fa01 f506 	lsl.w	r5, r1, r6
   23d04:	1d6a      	adds	r2, r5, #5
   23d06:	0092      	lsls	r2, r2, #2
   23d08:	4620      	mov	r0, r4
   23d0a:	f7fb fe51 	bl	1f9b0 <_calloc_r>
   23d0e:	b160      	cbz	r0, 23d2a <_Balloc+0x56>
   23d10:	6046      	str	r6, [r0, #4]
   23d12:	6085      	str	r5, [r0, #8]
   23d14:	e00e      	b.n	23d34 <_Balloc+0x60>
   23d16:	2221      	movs	r2, #33	; 0x21
   23d18:	2104      	movs	r1, #4
   23d1a:	4620      	mov	r0, r4
   23d1c:	f7fb fe48 	bl	1f9b0 <_calloc_r>
   23d20:	6a63      	ldr	r3, [r4, #36]	; 0x24
   23d22:	60e8      	str	r0, [r5, #12]
   23d24:	68db      	ldr	r3, [r3, #12]
   23d26:	2b00      	cmp	r3, #0
   23d28:	d1e4      	bne.n	23cf4 <_Balloc+0x20>
   23d2a:	2000      	movs	r0, #0
   23d2c:	bd70      	pop	{r4, r5, r6, pc}
   23d2e:	6802      	ldr	r2, [r0, #0]
   23d30:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   23d34:	2300      	movs	r3, #0
   23d36:	6103      	str	r3, [r0, #16]
   23d38:	60c3      	str	r3, [r0, #12]
   23d3a:	bd70      	pop	{r4, r5, r6, pc}

00023d3c <_Bfree>:
_Bfree():
   23d3c:	b570      	push	{r4, r5, r6, lr}
   23d3e:	6a44      	ldr	r4, [r0, #36]	; 0x24
   23d40:	4606      	mov	r6, r0
   23d42:	460d      	mov	r5, r1
   23d44:	b93c      	cbnz	r4, 23d56 <_Bfree+0x1a>
   23d46:	2010      	movs	r0, #16
   23d48:	f7fb fb60 	bl	1f40c <malloc>
   23d4c:	6270      	str	r0, [r6, #36]	; 0x24
   23d4e:	6044      	str	r4, [r0, #4]
   23d50:	6084      	str	r4, [r0, #8]
   23d52:	6004      	str	r4, [r0, #0]
   23d54:	60c4      	str	r4, [r0, #12]
   23d56:	b13d      	cbz	r5, 23d68 <_Bfree+0x2c>
   23d58:	6a73      	ldr	r3, [r6, #36]	; 0x24
   23d5a:	686a      	ldr	r2, [r5, #4]
   23d5c:	68db      	ldr	r3, [r3, #12]
   23d5e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   23d62:	6029      	str	r1, [r5, #0]
   23d64:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   23d68:	bd70      	pop	{r4, r5, r6, pc}

00023d6a <__multadd>:
__multadd():
   23d6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   23d6e:	461f      	mov	r7, r3
   23d70:	4606      	mov	r6, r0
   23d72:	460c      	mov	r4, r1
   23d74:	2300      	movs	r3, #0
   23d76:	690d      	ldr	r5, [r1, #16]
   23d78:	f101 0e14 	add.w	lr, r1, #20
   23d7c:	f8de 0000 	ldr.w	r0, [lr]
   23d80:	3301      	adds	r3, #1
   23d82:	b281      	uxth	r1, r0
   23d84:	fb02 7101 	mla	r1, r2, r1, r7
   23d88:	0c00      	lsrs	r0, r0, #16
   23d8a:	0c0f      	lsrs	r7, r1, #16
   23d8c:	fb02 7000 	mla	r0, r2, r0, r7
   23d90:	b289      	uxth	r1, r1
   23d92:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   23d96:	429d      	cmp	r5, r3
   23d98:	ea4f 4710 	mov.w	r7, r0, lsr #16
   23d9c:	f84e 1b04 	str.w	r1, [lr], #4
   23da0:	dcec      	bgt.n	23d7c <__multadd+0x12>
   23da2:	b1d7      	cbz	r7, 23dda <__multadd+0x70>
   23da4:	68a3      	ldr	r3, [r4, #8]
   23da6:	429d      	cmp	r5, r3
   23da8:	db12      	blt.n	23dd0 <__multadd+0x66>
   23daa:	6861      	ldr	r1, [r4, #4]
   23dac:	4630      	mov	r0, r6
   23dae:	3101      	adds	r1, #1
   23db0:	f7ff ff90 	bl	23cd4 <_Balloc>
   23db4:	4680      	mov	r8, r0
   23db6:	6922      	ldr	r2, [r4, #16]
   23db8:	f104 010c 	add.w	r1, r4, #12
   23dbc:	3202      	adds	r2, #2
   23dbe:	0092      	lsls	r2, r2, #2
   23dc0:	300c      	adds	r0, #12
   23dc2:	f7fb fb62 	bl	1f48a <memcpy>
   23dc6:	4621      	mov	r1, r4
   23dc8:	4630      	mov	r0, r6
   23dca:	f7ff ffb7 	bl	23d3c <_Bfree>
   23dce:	4644      	mov	r4, r8
   23dd0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   23dd4:	3501      	adds	r5, #1
   23dd6:	615f      	str	r7, [r3, #20]
   23dd8:	6125      	str	r5, [r4, #16]
   23dda:	4620      	mov	r0, r4
   23ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00023de0 <__s2b>:
__s2b():
   23de0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   23de4:	4615      	mov	r5, r2
   23de6:	2209      	movs	r2, #9
   23de8:	461f      	mov	r7, r3
   23dea:	3308      	adds	r3, #8
   23dec:	460c      	mov	r4, r1
   23dee:	fb93 f3f2 	sdiv	r3, r3, r2
   23df2:	4606      	mov	r6, r0
   23df4:	2201      	movs	r2, #1
   23df6:	2100      	movs	r1, #0
   23df8:	429a      	cmp	r2, r3
   23dfa:	db20      	blt.n	23e3e <__s2b+0x5e>
   23dfc:	4630      	mov	r0, r6
   23dfe:	f7ff ff69 	bl	23cd4 <_Balloc>
   23e02:	9b08      	ldr	r3, [sp, #32]
   23e04:	2d09      	cmp	r5, #9
   23e06:	6143      	str	r3, [r0, #20]
   23e08:	f04f 0301 	mov.w	r3, #1
   23e0c:	6103      	str	r3, [r0, #16]
   23e0e:	dd19      	ble.n	23e44 <__s2b+0x64>
   23e10:	f104 0909 	add.w	r9, r4, #9
   23e14:	46c8      	mov	r8, r9
   23e16:	442c      	add	r4, r5
   23e18:	f818 3b01 	ldrb.w	r3, [r8], #1
   23e1c:	4601      	mov	r1, r0
   23e1e:	3b30      	subs	r3, #48	; 0x30
   23e20:	220a      	movs	r2, #10
   23e22:	4630      	mov	r0, r6
   23e24:	f7ff ffa1 	bl	23d6a <__multadd>
   23e28:	45a0      	cmp	r8, r4
   23e2a:	d1f5      	bne.n	23e18 <__s2b+0x38>
   23e2c:	f1a5 0408 	sub.w	r4, r5, #8
   23e30:	444c      	add	r4, r9
   23e32:	1b2d      	subs	r5, r5, r4
   23e34:	1963      	adds	r3, r4, r5
   23e36:	42bb      	cmp	r3, r7
   23e38:	db07      	blt.n	23e4a <__s2b+0x6a>
   23e3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   23e3e:	0052      	lsls	r2, r2, #1
   23e40:	3101      	adds	r1, #1
   23e42:	e7d9      	b.n	23df8 <__s2b+0x18>
   23e44:	340a      	adds	r4, #10
   23e46:	2509      	movs	r5, #9
   23e48:	e7f3      	b.n	23e32 <__s2b+0x52>
   23e4a:	f814 3b01 	ldrb.w	r3, [r4], #1
   23e4e:	4601      	mov	r1, r0
   23e50:	3b30      	subs	r3, #48	; 0x30
   23e52:	220a      	movs	r2, #10
   23e54:	4630      	mov	r0, r6
   23e56:	f7ff ff88 	bl	23d6a <__multadd>
   23e5a:	e7eb      	b.n	23e34 <__s2b+0x54>

00023e5c <__hi0bits>:
__hi0bits():
   23e5c:	0c02      	lsrs	r2, r0, #16
   23e5e:	0412      	lsls	r2, r2, #16
   23e60:	4603      	mov	r3, r0
   23e62:	b9b2      	cbnz	r2, 23e92 <__hi0bits+0x36>
   23e64:	0403      	lsls	r3, r0, #16
   23e66:	2010      	movs	r0, #16
   23e68:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   23e6c:	bf04      	itt	eq
   23e6e:	021b      	lsleq	r3, r3, #8
   23e70:	3008      	addeq	r0, #8
   23e72:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   23e76:	bf04      	itt	eq
   23e78:	011b      	lsleq	r3, r3, #4
   23e7a:	3004      	addeq	r0, #4
   23e7c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   23e80:	bf04      	itt	eq
   23e82:	009b      	lsleq	r3, r3, #2
   23e84:	3002      	addeq	r0, #2
   23e86:	2b00      	cmp	r3, #0
   23e88:	db06      	blt.n	23e98 <__hi0bits+0x3c>
   23e8a:	005b      	lsls	r3, r3, #1
   23e8c:	d503      	bpl.n	23e96 <__hi0bits+0x3a>
   23e8e:	3001      	adds	r0, #1
   23e90:	4770      	bx	lr
   23e92:	2000      	movs	r0, #0
   23e94:	e7e8      	b.n	23e68 <__hi0bits+0xc>
   23e96:	2020      	movs	r0, #32
   23e98:	4770      	bx	lr

00023e9a <__lo0bits>:
__lo0bits():
   23e9a:	6803      	ldr	r3, [r0, #0]
   23e9c:	4601      	mov	r1, r0
   23e9e:	f013 0207 	ands.w	r2, r3, #7
   23ea2:	d00b      	beq.n	23ebc <__lo0bits+0x22>
   23ea4:	07da      	lsls	r2, r3, #31
   23ea6:	d423      	bmi.n	23ef0 <__lo0bits+0x56>
   23ea8:	0798      	lsls	r0, r3, #30
   23eaa:	bf49      	itett	mi
   23eac:	085b      	lsrmi	r3, r3, #1
   23eae:	089b      	lsrpl	r3, r3, #2
   23eb0:	2001      	movmi	r0, #1
   23eb2:	600b      	strmi	r3, [r1, #0]
   23eb4:	bf5c      	itt	pl
   23eb6:	600b      	strpl	r3, [r1, #0]
   23eb8:	2002      	movpl	r0, #2
   23eba:	4770      	bx	lr
   23ebc:	b298      	uxth	r0, r3
   23ebe:	b9a8      	cbnz	r0, 23eec <__lo0bits+0x52>
   23ec0:	2010      	movs	r0, #16
   23ec2:	0c1b      	lsrs	r3, r3, #16
   23ec4:	f013 0fff 	tst.w	r3, #255	; 0xff
   23ec8:	bf04      	itt	eq
   23eca:	0a1b      	lsreq	r3, r3, #8
   23ecc:	3008      	addeq	r0, #8
   23ece:	071a      	lsls	r2, r3, #28
   23ed0:	bf04      	itt	eq
   23ed2:	091b      	lsreq	r3, r3, #4
   23ed4:	3004      	addeq	r0, #4
   23ed6:	079a      	lsls	r2, r3, #30
   23ed8:	bf04      	itt	eq
   23eda:	089b      	lsreq	r3, r3, #2
   23edc:	3002      	addeq	r0, #2
   23ede:	07da      	lsls	r2, r3, #31
   23ee0:	d402      	bmi.n	23ee8 <__lo0bits+0x4e>
   23ee2:	085b      	lsrs	r3, r3, #1
   23ee4:	d006      	beq.n	23ef4 <__lo0bits+0x5a>
   23ee6:	3001      	adds	r0, #1
   23ee8:	600b      	str	r3, [r1, #0]
   23eea:	4770      	bx	lr
   23eec:	4610      	mov	r0, r2
   23eee:	e7e9      	b.n	23ec4 <__lo0bits+0x2a>
   23ef0:	2000      	movs	r0, #0
   23ef2:	4770      	bx	lr
   23ef4:	2020      	movs	r0, #32
   23ef6:	4770      	bx	lr

00023ef8 <__i2b>:
__i2b():
   23ef8:	b510      	push	{r4, lr}
   23efa:	460c      	mov	r4, r1
   23efc:	2101      	movs	r1, #1
   23efe:	f7ff fee9 	bl	23cd4 <_Balloc>
   23f02:	2201      	movs	r2, #1
   23f04:	6144      	str	r4, [r0, #20]
   23f06:	6102      	str	r2, [r0, #16]
   23f08:	bd10      	pop	{r4, pc}

00023f0a <__multiply>:
__multiply():
   23f0a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f0e:	4614      	mov	r4, r2
   23f10:	690a      	ldr	r2, [r1, #16]
   23f12:	6923      	ldr	r3, [r4, #16]
   23f14:	4689      	mov	r9, r1
   23f16:	429a      	cmp	r2, r3
   23f18:	bfbe      	ittt	lt
   23f1a:	460b      	movlt	r3, r1
   23f1c:	46a1      	movlt	r9, r4
   23f1e:	461c      	movlt	r4, r3
   23f20:	f8d9 7010 	ldr.w	r7, [r9, #16]
   23f24:	f8d4 a010 	ldr.w	sl, [r4, #16]
   23f28:	f8d9 3008 	ldr.w	r3, [r9, #8]
   23f2c:	f8d9 1004 	ldr.w	r1, [r9, #4]
   23f30:	eb07 060a 	add.w	r6, r7, sl
   23f34:	429e      	cmp	r6, r3
   23f36:	bfc8      	it	gt
   23f38:	3101      	addgt	r1, #1
   23f3a:	f7ff fecb 	bl	23cd4 <_Balloc>
   23f3e:	f100 0514 	add.w	r5, r0, #20
   23f42:	462b      	mov	r3, r5
   23f44:	2200      	movs	r2, #0
   23f46:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   23f4a:	4543      	cmp	r3, r8
   23f4c:	d316      	bcc.n	23f7c <__multiply+0x72>
   23f4e:	f104 0214 	add.w	r2, r4, #20
   23f52:	f109 0114 	add.w	r1, r9, #20
   23f56:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   23f5a:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   23f5e:	9301      	str	r3, [sp, #4]
   23f60:	9c01      	ldr	r4, [sp, #4]
   23f62:	4613      	mov	r3, r2
   23f64:	4294      	cmp	r4, r2
   23f66:	d80c      	bhi.n	23f82 <__multiply+0x78>
   23f68:	2e00      	cmp	r6, #0
   23f6a:	dd03      	ble.n	23f74 <__multiply+0x6a>
   23f6c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   23f70:	2b00      	cmp	r3, #0
   23f72:	d054      	beq.n	2401e <__multiply+0x114>
   23f74:	6106      	str	r6, [r0, #16]
   23f76:	b003      	add	sp, #12
   23f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f7c:	f843 2b04 	str.w	r2, [r3], #4
   23f80:	e7e3      	b.n	23f4a <__multiply+0x40>
   23f82:	f8b3 a000 	ldrh.w	sl, [r3]
   23f86:	3204      	adds	r2, #4
   23f88:	f1ba 0f00 	cmp.w	sl, #0
   23f8c:	d020      	beq.n	23fd0 <__multiply+0xc6>
   23f8e:	46ae      	mov	lr, r5
   23f90:	4689      	mov	r9, r1
   23f92:	f04f 0c00 	mov.w	ip, #0
   23f96:	f859 4b04 	ldr.w	r4, [r9], #4
   23f9a:	f8be b000 	ldrh.w	fp, [lr]
   23f9e:	b2a3      	uxth	r3, r4
   23fa0:	fb0a b303 	mla	r3, sl, r3, fp
   23fa4:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   23fa8:	f8de 4000 	ldr.w	r4, [lr]
   23fac:	4463      	add	r3, ip
   23fae:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   23fb2:	fb0a c40b 	mla	r4, sl, fp, ip
   23fb6:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   23fba:	b29b      	uxth	r3, r3
   23fbc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   23fc0:	454f      	cmp	r7, r9
   23fc2:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   23fc6:	f84e 3b04 	str.w	r3, [lr], #4
   23fca:	d8e4      	bhi.n	23f96 <__multiply+0x8c>
   23fcc:	f8ce c000 	str.w	ip, [lr]
   23fd0:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   23fd4:	f1b9 0f00 	cmp.w	r9, #0
   23fd8:	d01f      	beq.n	2401a <__multiply+0x110>
   23fda:	46ae      	mov	lr, r5
   23fdc:	468c      	mov	ip, r1
   23fde:	f04f 0a00 	mov.w	sl, #0
   23fe2:	682b      	ldr	r3, [r5, #0]
   23fe4:	f8bc 4000 	ldrh.w	r4, [ip]
   23fe8:	f8be b002 	ldrh.w	fp, [lr, #2]
   23fec:	b29b      	uxth	r3, r3
   23fee:	fb09 b404 	mla	r4, r9, r4, fp
   23ff2:	44a2      	add	sl, r4
   23ff4:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   23ff8:	f84e 3b04 	str.w	r3, [lr], #4
   23ffc:	f85c 3b04 	ldr.w	r3, [ip], #4
   24000:	f8be 4000 	ldrh.w	r4, [lr]
   24004:	0c1b      	lsrs	r3, r3, #16
   24006:	fb09 4303 	mla	r3, r9, r3, r4
   2400a:	4567      	cmp	r7, ip
   2400c:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   24010:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   24014:	d8e6      	bhi.n	23fe4 <__multiply+0xda>
   24016:	f8ce 3000 	str.w	r3, [lr]
   2401a:	3504      	adds	r5, #4
   2401c:	e7a0      	b.n	23f60 <__multiply+0x56>
   2401e:	3e01      	subs	r6, #1
   24020:	e7a2      	b.n	23f68 <__multiply+0x5e>
   24022:	Address 0x0000000000024022 is out of bounds.


00024024 <__pow5mult>:
__pow5mult():
   24024:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   24028:	4615      	mov	r5, r2
   2402a:	f012 0203 	ands.w	r2, r2, #3
   2402e:	4606      	mov	r6, r0
   24030:	460f      	mov	r7, r1
   24032:	d007      	beq.n	24044 <__pow5mult+0x20>
   24034:	4c21      	ldr	r4, [pc, #132]	; (240bc <__pow5mult+0x98>)
   24036:	3a01      	subs	r2, #1
   24038:	2300      	movs	r3, #0
   2403a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   2403e:	f7ff fe94 	bl	23d6a <__multadd>
   24042:	4607      	mov	r7, r0
   24044:	10ad      	asrs	r5, r5, #2
   24046:	d035      	beq.n	240b4 <__pow5mult+0x90>
   24048:	6a74      	ldr	r4, [r6, #36]	; 0x24
   2404a:	b93c      	cbnz	r4, 2405c <__pow5mult+0x38>
   2404c:	2010      	movs	r0, #16
   2404e:	f7fb f9dd 	bl	1f40c <malloc>
   24052:	6270      	str	r0, [r6, #36]	; 0x24
   24054:	6044      	str	r4, [r0, #4]
   24056:	6084      	str	r4, [r0, #8]
   24058:	6004      	str	r4, [r0, #0]
   2405a:	60c4      	str	r4, [r0, #12]
   2405c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   24060:	f8d8 4008 	ldr.w	r4, [r8, #8]
   24064:	b94c      	cbnz	r4, 2407a <__pow5mult+0x56>
   24066:	f240 2171 	movw	r1, #625	; 0x271
   2406a:	4630      	mov	r0, r6
   2406c:	f7ff ff44 	bl	23ef8 <__i2b>
   24070:	2300      	movs	r3, #0
   24072:	4604      	mov	r4, r0
   24074:	f8c8 0008 	str.w	r0, [r8, #8]
   24078:	6003      	str	r3, [r0, #0]
   2407a:	f04f 0800 	mov.w	r8, #0
   2407e:	07eb      	lsls	r3, r5, #31
   24080:	d50a      	bpl.n	24098 <__pow5mult+0x74>
   24082:	4639      	mov	r1, r7
   24084:	4622      	mov	r2, r4
   24086:	4630      	mov	r0, r6
   24088:	f7ff ff3f 	bl	23f0a <__multiply>
   2408c:	4681      	mov	r9, r0
   2408e:	4639      	mov	r1, r7
   24090:	4630      	mov	r0, r6
   24092:	f7ff fe53 	bl	23d3c <_Bfree>
   24096:	464f      	mov	r7, r9
   24098:	106d      	asrs	r5, r5, #1
   2409a:	d00b      	beq.n	240b4 <__pow5mult+0x90>
   2409c:	6820      	ldr	r0, [r4, #0]
   2409e:	b938      	cbnz	r0, 240b0 <__pow5mult+0x8c>
   240a0:	4622      	mov	r2, r4
   240a2:	4621      	mov	r1, r4
   240a4:	4630      	mov	r0, r6
   240a6:	f7ff ff30 	bl	23f0a <__multiply>
   240aa:	6020      	str	r0, [r4, #0]
   240ac:	f8c0 8000 	str.w	r8, [r0]
   240b0:	4604      	mov	r4, r0
   240b2:	e7e4      	b.n	2407e <__pow5mult+0x5a>
   240b4:	4638      	mov	r0, r7
   240b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   240ba:	bf00      	nop
   240bc:	00029158 	.word	0x00029158

000240c0 <__lshift>:
__lshift():
   240c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   240c4:	460c      	mov	r4, r1
   240c6:	4607      	mov	r7, r0
   240c8:	4616      	mov	r6, r2
   240ca:	6923      	ldr	r3, [r4, #16]
   240cc:	ea4f 1a62 	mov.w	sl, r2, asr #5
   240d0:	eb0a 0903 	add.w	r9, sl, r3
   240d4:	6849      	ldr	r1, [r1, #4]
   240d6:	68a3      	ldr	r3, [r4, #8]
   240d8:	f109 0501 	add.w	r5, r9, #1
   240dc:	42ab      	cmp	r3, r5
   240de:	db31      	blt.n	24144 <__lshift+0x84>
   240e0:	4638      	mov	r0, r7
   240e2:	f7ff fdf7 	bl	23cd4 <_Balloc>
   240e6:	2200      	movs	r2, #0
   240e8:	4680      	mov	r8, r0
   240ea:	4611      	mov	r1, r2
   240ec:	f100 0314 	add.w	r3, r0, #20
   240f0:	4552      	cmp	r2, sl
   240f2:	db2a      	blt.n	2414a <__lshift+0x8a>
   240f4:	6920      	ldr	r0, [r4, #16]
   240f6:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   240fa:	f104 0114 	add.w	r1, r4, #20
   240fe:	f016 021f 	ands.w	r2, r6, #31
   24102:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   24106:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   2410a:	d022      	beq.n	24152 <__lshift+0x92>
   2410c:	2000      	movs	r0, #0
   2410e:	f1c2 0c20 	rsb	ip, r2, #32
   24112:	680e      	ldr	r6, [r1, #0]
   24114:	4096      	lsls	r6, r2
   24116:	4330      	orrs	r0, r6
   24118:	f843 0b04 	str.w	r0, [r3], #4
   2411c:	f851 0b04 	ldr.w	r0, [r1], #4
   24120:	458e      	cmp	lr, r1
   24122:	fa20 f00c 	lsr.w	r0, r0, ip
   24126:	d8f4      	bhi.n	24112 <__lshift+0x52>
   24128:	6018      	str	r0, [r3, #0]
   2412a:	b108      	cbz	r0, 24130 <__lshift+0x70>
   2412c:	f109 0502 	add.w	r5, r9, #2
   24130:	3d01      	subs	r5, #1
   24132:	4638      	mov	r0, r7
   24134:	f8c8 5010 	str.w	r5, [r8, #16]
   24138:	4621      	mov	r1, r4
   2413a:	f7ff fdff 	bl	23d3c <_Bfree>
   2413e:	4640      	mov	r0, r8
   24140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24144:	3101      	adds	r1, #1
   24146:	005b      	lsls	r3, r3, #1
   24148:	e7c8      	b.n	240dc <__lshift+0x1c>
   2414a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   2414e:	3201      	adds	r2, #1
   24150:	e7ce      	b.n	240f0 <__lshift+0x30>
   24152:	3b04      	subs	r3, #4
   24154:	f851 2b04 	ldr.w	r2, [r1], #4
   24158:	458e      	cmp	lr, r1
   2415a:	f843 2f04 	str.w	r2, [r3, #4]!
   2415e:	d8f9      	bhi.n	24154 <__lshift+0x94>
   24160:	e7e6      	b.n	24130 <__lshift+0x70>

00024162 <__mcmp>:
__mcmp():
   24162:	6903      	ldr	r3, [r0, #16]
   24164:	690a      	ldr	r2, [r1, #16]
   24166:	b530      	push	{r4, r5, lr}
   24168:	1a9b      	subs	r3, r3, r2
   2416a:	d10c      	bne.n	24186 <__mcmp+0x24>
   2416c:	0092      	lsls	r2, r2, #2
   2416e:	3014      	adds	r0, #20
   24170:	3114      	adds	r1, #20
   24172:	1884      	adds	r4, r0, r2
   24174:	4411      	add	r1, r2
   24176:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   2417a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   2417e:	4295      	cmp	r5, r2
   24180:	d003      	beq.n	2418a <__mcmp+0x28>
   24182:	d305      	bcc.n	24190 <__mcmp+0x2e>
   24184:	2301      	movs	r3, #1
   24186:	4618      	mov	r0, r3
   24188:	bd30      	pop	{r4, r5, pc}
   2418a:	42a0      	cmp	r0, r4
   2418c:	d3f3      	bcc.n	24176 <__mcmp+0x14>
   2418e:	e7fa      	b.n	24186 <__mcmp+0x24>
   24190:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   24194:	e7f7      	b.n	24186 <__mcmp+0x24>

00024196 <__mdiff>:
__mdiff():
   24196:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2419a:	460d      	mov	r5, r1
   2419c:	4607      	mov	r7, r0
   2419e:	4611      	mov	r1, r2
   241a0:	4628      	mov	r0, r5
   241a2:	4614      	mov	r4, r2
   241a4:	f7ff ffdd 	bl	24162 <__mcmp>
   241a8:	1e06      	subs	r6, r0, #0
   241aa:	d108      	bne.n	241be <__mdiff+0x28>
   241ac:	4631      	mov	r1, r6
   241ae:	4638      	mov	r0, r7
   241b0:	f7ff fd90 	bl	23cd4 <_Balloc>
   241b4:	2301      	movs	r3, #1
   241b6:	6146      	str	r6, [r0, #20]
   241b8:	6103      	str	r3, [r0, #16]
   241ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   241be:	bfa4      	itt	ge
   241c0:	4623      	movge	r3, r4
   241c2:	462c      	movge	r4, r5
   241c4:	4638      	mov	r0, r7
   241c6:	6861      	ldr	r1, [r4, #4]
   241c8:	bfa6      	itte	ge
   241ca:	461d      	movge	r5, r3
   241cc:	2600      	movge	r6, #0
   241ce:	2601      	movlt	r6, #1
   241d0:	f7ff fd80 	bl	23cd4 <_Balloc>
   241d4:	f04f 0c00 	mov.w	ip, #0
   241d8:	60c6      	str	r6, [r0, #12]
   241da:	692b      	ldr	r3, [r5, #16]
   241dc:	6926      	ldr	r6, [r4, #16]
   241de:	f104 0214 	add.w	r2, r4, #20
   241e2:	f105 0914 	add.w	r9, r5, #20
   241e6:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   241ea:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   241ee:	f100 0114 	add.w	r1, r0, #20
   241f2:	f852 ab04 	ldr.w	sl, [r2], #4
   241f6:	f859 5b04 	ldr.w	r5, [r9], #4
   241fa:	fa1f f38a 	uxth.w	r3, sl
   241fe:	4463      	add	r3, ip
   24200:	b2ac      	uxth	r4, r5
   24202:	1b1b      	subs	r3, r3, r4
   24204:	0c2c      	lsrs	r4, r5, #16
   24206:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   2420a:	eb04 4423 	add.w	r4, r4, r3, asr #16
   2420e:	b29b      	uxth	r3, r3
   24210:	ea4f 4c24 	mov.w	ip, r4, asr #16
   24214:	45c8      	cmp	r8, r9
   24216:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   2421a:	4696      	mov	lr, r2
   2421c:	f841 4b04 	str.w	r4, [r1], #4
   24220:	d8e7      	bhi.n	241f2 <__mdiff+0x5c>
   24222:	45be      	cmp	lr, r7
   24224:	d305      	bcc.n	24232 <__mdiff+0x9c>
   24226:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   2422a:	b18b      	cbz	r3, 24250 <__mdiff+0xba>
   2422c:	6106      	str	r6, [r0, #16]
   2422e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24232:	f85e 4b04 	ldr.w	r4, [lr], #4
   24236:	b2a2      	uxth	r2, r4
   24238:	4462      	add	r2, ip
   2423a:	1413      	asrs	r3, r2, #16
   2423c:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   24240:	b292      	uxth	r2, r2
   24242:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   24246:	ea4f 4c23 	mov.w	ip, r3, asr #16
   2424a:	f841 2b04 	str.w	r2, [r1], #4
   2424e:	e7e8      	b.n	24222 <__mdiff+0x8c>
   24250:	3e01      	subs	r6, #1
   24252:	e7e8      	b.n	24226 <__mdiff+0x90>

00024254 <__ulp>:
__ulp():
   24254:	4b10      	ldr	r3, [pc, #64]	; (24298 <__ulp+0x44>)
   24256:	400b      	ands	r3, r1
   24258:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   2425c:	2b00      	cmp	r3, #0
   2425e:	dd02      	ble.n	24266 <__ulp+0x12>
   24260:	2000      	movs	r0, #0
   24262:	4619      	mov	r1, r3
   24264:	4770      	bx	lr
   24266:	425b      	negs	r3, r3
   24268:	151b      	asrs	r3, r3, #20
   2426a:	2b13      	cmp	r3, #19
   2426c:	f04f 0000 	mov.w	r0, #0
   24270:	f04f 0100 	mov.w	r1, #0
   24274:	dc04      	bgt.n	24280 <__ulp+0x2c>
   24276:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   2427a:	fa42 f103 	asr.w	r1, r2, r3
   2427e:	4770      	bx	lr
   24280:	2201      	movs	r2, #1
   24282:	3b14      	subs	r3, #20
   24284:	2b1e      	cmp	r3, #30
   24286:	bfce      	itee	gt
   24288:	4613      	movgt	r3, r2
   2428a:	f1c3 031f 	rsble	r3, r3, #31
   2428e:	fa02 f303 	lslle.w	r3, r2, r3
   24292:	4618      	mov	r0, r3
   24294:	4770      	bx	lr
   24296:	bf00      	nop
   24298:	7ff00000 	.word	0x7ff00000

0002429c <__b2d>:
__b2d():
   2429c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   242a0:	6907      	ldr	r7, [r0, #16]
   242a2:	f100 0914 	add.w	r9, r0, #20
   242a6:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   242aa:	f857 6c04 	ldr.w	r6, [r7, #-4]
   242ae:	f1a7 0804 	sub.w	r8, r7, #4
   242b2:	4630      	mov	r0, r6
   242b4:	f7ff fdd2 	bl	23e5c <__hi0bits>
   242b8:	f1c0 0320 	rsb	r3, r0, #32
   242bc:	280a      	cmp	r0, #10
   242be:	600b      	str	r3, [r1, #0]
   242c0:	491e      	ldr	r1, [pc, #120]	; (2433c <__b2d+0xa0>)
   242c2:	dc17      	bgt.n	242f4 <__b2d+0x58>
   242c4:	45c1      	cmp	r9, r8
   242c6:	bf28      	it	cs
   242c8:	2200      	movcs	r2, #0
   242ca:	f1c0 0e0b 	rsb	lr, r0, #11
   242ce:	fa26 f30e 	lsr.w	r3, r6, lr
   242d2:	bf38      	it	cc
   242d4:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   242d8:	ea43 0501 	orr.w	r5, r3, r1
   242dc:	f100 0315 	add.w	r3, r0, #21
   242e0:	fa06 f303 	lsl.w	r3, r6, r3
   242e4:	fa22 f20e 	lsr.w	r2, r2, lr
   242e8:	ea43 0402 	orr.w	r4, r3, r2
   242ec:	4620      	mov	r0, r4
   242ee:	4629      	mov	r1, r5
   242f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   242f4:	45c1      	cmp	r9, r8
   242f6:	bf3a      	itte	cc
   242f8:	f1a7 0808 	subcc.w	r8, r7, #8
   242fc:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   24300:	2200      	movcs	r2, #0
   24302:	f1b0 030b 	subs.w	r3, r0, #11
   24306:	d015      	beq.n	24334 <__b2d+0x98>
   24308:	409e      	lsls	r6, r3
   2430a:	f1c3 0720 	rsb	r7, r3, #32
   2430e:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   24312:	fa22 f107 	lsr.w	r1, r2, r7
   24316:	45c8      	cmp	r8, r9
   24318:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   2431c:	ea46 0501 	orr.w	r5, r6, r1
   24320:	bf94      	ite	ls
   24322:	2100      	movls	r1, #0
   24324:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   24328:	fa02 f003 	lsl.w	r0, r2, r3
   2432c:	40f9      	lsrs	r1, r7
   2432e:	ea40 0401 	orr.w	r4, r0, r1
   24332:	e7db      	b.n	242ec <__b2d+0x50>
   24334:	ea46 0501 	orr.w	r5, r6, r1
   24338:	4614      	mov	r4, r2
   2433a:	e7d7      	b.n	242ec <__b2d+0x50>
   2433c:	3ff00000 	.word	0x3ff00000

00024340 <__d2b>:
__d2b():
   24340:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   24344:	461c      	mov	r4, r3
   24346:	2101      	movs	r1, #1
   24348:	4690      	mov	r8, r2
   2434a:	9e08      	ldr	r6, [sp, #32]
   2434c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   2434e:	f7ff fcc1 	bl	23cd4 <_Balloc>
   24352:	f3c4 0213 	ubfx	r2, r4, #0, #20
   24356:	f3c4 540a 	ubfx	r4, r4, #20, #11
   2435a:	4607      	mov	r7, r0
   2435c:	bb34      	cbnz	r4, 243ac <__d2b+0x6c>
   2435e:	9201      	str	r2, [sp, #4]
   24360:	f1b8 0f00 	cmp.w	r8, #0
   24364:	d027      	beq.n	243b6 <__d2b+0x76>
   24366:	a802      	add	r0, sp, #8
   24368:	f840 8d08 	str.w	r8, [r0, #-8]!
   2436c:	f7ff fd95 	bl	23e9a <__lo0bits>
   24370:	9900      	ldr	r1, [sp, #0]
   24372:	b1f0      	cbz	r0, 243b2 <__d2b+0x72>
   24374:	9a01      	ldr	r2, [sp, #4]
   24376:	f1c0 0320 	rsb	r3, r0, #32
   2437a:	fa02 f303 	lsl.w	r3, r2, r3
   2437e:	430b      	orrs	r3, r1
   24380:	40c2      	lsrs	r2, r0
   24382:	617b      	str	r3, [r7, #20]
   24384:	9201      	str	r2, [sp, #4]
   24386:	9b01      	ldr	r3, [sp, #4]
   24388:	2b00      	cmp	r3, #0
   2438a:	bf14      	ite	ne
   2438c:	2102      	movne	r1, #2
   2438e:	2101      	moveq	r1, #1
   24390:	61bb      	str	r3, [r7, #24]
   24392:	6139      	str	r1, [r7, #16]
   24394:	b1c4      	cbz	r4, 243c8 <__d2b+0x88>
   24396:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   2439a:	4404      	add	r4, r0
   2439c:	6034      	str	r4, [r6, #0]
   2439e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   243a2:	6028      	str	r0, [r5, #0]
   243a4:	4638      	mov	r0, r7
   243a6:	b002      	add	sp, #8
   243a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   243ac:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   243b0:	e7d5      	b.n	2435e <__d2b+0x1e>
   243b2:	6179      	str	r1, [r7, #20]
   243b4:	e7e7      	b.n	24386 <__d2b+0x46>
   243b6:	a801      	add	r0, sp, #4
   243b8:	f7ff fd6f 	bl	23e9a <__lo0bits>
   243bc:	2101      	movs	r1, #1
   243be:	9b01      	ldr	r3, [sp, #4]
   243c0:	6139      	str	r1, [r7, #16]
   243c2:	617b      	str	r3, [r7, #20]
   243c4:	3020      	adds	r0, #32
   243c6:	e7e5      	b.n	24394 <__d2b+0x54>
   243c8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   243cc:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   243d0:	6030      	str	r0, [r6, #0]
   243d2:	6918      	ldr	r0, [r3, #16]
   243d4:	f7ff fd42 	bl	23e5c <__hi0bits>
   243d8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   243dc:	e7e1      	b.n	243a2 <__d2b+0x62>

000243de <__ratio>:
__ratio():
   243de:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   243e2:	4688      	mov	r8, r1
   243e4:	4669      	mov	r1, sp
   243e6:	4681      	mov	r9, r0
   243e8:	f7ff ff58 	bl	2429c <__b2d>
   243ec:	460d      	mov	r5, r1
   243ee:	4604      	mov	r4, r0
   243f0:	a901      	add	r1, sp, #4
   243f2:	4640      	mov	r0, r8
   243f4:	f7ff ff52 	bl	2429c <__b2d>
   243f8:	f8d9 3010 	ldr.w	r3, [r9, #16]
   243fc:	f8d8 2010 	ldr.w	r2, [r8, #16]
   24400:	9e00      	ldr	r6, [sp, #0]
   24402:	1a9a      	subs	r2, r3, r2
   24404:	9b01      	ldr	r3, [sp, #4]
   24406:	1af3      	subs	r3, r6, r3
   24408:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   2440c:	2b00      	cmp	r3, #0
   2440e:	bfd6      	itet	le
   24410:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   24414:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   24418:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   2441c:	4602      	mov	r2, r0
   2441e:	460b      	mov	r3, r1
   24420:	4620      	mov	r0, r4
   24422:	4629      	mov	r1, r5
   24424:	f001 fa3e 	bl	258a4 <__aeabi_ddiv>
   24428:	b002      	add	sp, #8
   2442a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0002442e <__copybits>:
__copybits():
   2442e:	3901      	subs	r1, #1
   24430:	b510      	push	{r4, lr}
   24432:	1149      	asrs	r1, r1, #5
   24434:	6914      	ldr	r4, [r2, #16]
   24436:	3101      	adds	r1, #1
   24438:	f102 0314 	add.w	r3, r2, #20
   2443c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   24440:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   24444:	42a3      	cmp	r3, r4
   24446:	4602      	mov	r2, r0
   24448:	d303      	bcc.n	24452 <__copybits+0x24>
   2444a:	2300      	movs	r3, #0
   2444c:	428a      	cmp	r2, r1
   2444e:	d305      	bcc.n	2445c <__copybits+0x2e>
   24450:	bd10      	pop	{r4, pc}
   24452:	f853 2b04 	ldr.w	r2, [r3], #4
   24456:	f840 2b04 	str.w	r2, [r0], #4
   2445a:	e7f3      	b.n	24444 <__copybits+0x16>
   2445c:	f842 3b04 	str.w	r3, [r2], #4
   24460:	e7f4      	b.n	2444c <__copybits+0x1e>

00024462 <__any_on>:
__any_on():
   24462:	f100 0214 	add.w	r2, r0, #20
   24466:	6900      	ldr	r0, [r0, #16]
   24468:	114b      	asrs	r3, r1, #5
   2446a:	4298      	cmp	r0, r3
   2446c:	b510      	push	{r4, lr}
   2446e:	db11      	blt.n	24494 <__any_on+0x32>
   24470:	dd0a      	ble.n	24488 <__any_on+0x26>
   24472:	f011 011f 	ands.w	r1, r1, #31
   24476:	d007      	beq.n	24488 <__any_on+0x26>
   24478:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   2447c:	fa24 f001 	lsr.w	r0, r4, r1
   24480:	fa00 f101 	lsl.w	r1, r0, r1
   24484:	428c      	cmp	r4, r1
   24486:	d10b      	bne.n	244a0 <__any_on+0x3e>
   24488:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   2448c:	4293      	cmp	r3, r2
   2448e:	d803      	bhi.n	24498 <__any_on+0x36>
   24490:	2000      	movs	r0, #0
   24492:	bd10      	pop	{r4, pc}
   24494:	4603      	mov	r3, r0
   24496:	e7f7      	b.n	24488 <__any_on+0x26>
   24498:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   2449c:	2900      	cmp	r1, #0
   2449e:	d0f5      	beq.n	2448c <__any_on+0x2a>
   244a0:	2001      	movs	r0, #1
   244a2:	bd10      	pop	{r4, pc}

000244a4 <_realloc_r>:
_realloc_r():
   244a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   244a6:	4607      	mov	r7, r0
   244a8:	4614      	mov	r4, r2
   244aa:	460e      	mov	r6, r1
   244ac:	b921      	cbnz	r1, 244b8 <_realloc_r+0x14>
   244ae:	4611      	mov	r1, r2
   244b0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   244b4:	f7fb bb08 	b.w	1fac8 <_malloc_r>
   244b8:	b922      	cbnz	r2, 244c4 <_realloc_r+0x20>
   244ba:	f7fb fa87 	bl	1f9cc <_free_r>
   244be:	4625      	mov	r5, r4
   244c0:	4628      	mov	r0, r5
   244c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   244c4:	f001 f8ba 	bl	2563c <_malloc_usable_size_r>
   244c8:	4284      	cmp	r4, r0
   244ca:	d90f      	bls.n	244ec <_realloc_r+0x48>
   244cc:	4621      	mov	r1, r4
   244ce:	4638      	mov	r0, r7
   244d0:	f7fb fafa 	bl	1fac8 <_malloc_r>
   244d4:	4605      	mov	r5, r0
   244d6:	2800      	cmp	r0, #0
   244d8:	d0f2      	beq.n	244c0 <_realloc_r+0x1c>
   244da:	4631      	mov	r1, r6
   244dc:	4622      	mov	r2, r4
   244de:	f7fa ffd4 	bl	1f48a <memcpy>
   244e2:	4631      	mov	r1, r6
   244e4:	4638      	mov	r0, r7
   244e6:	f7fb fa71 	bl	1f9cc <_free_r>
   244ea:	e7e9      	b.n	244c0 <_realloc_r+0x1c>
   244ec:	4635      	mov	r5, r6
   244ee:	e7e7      	b.n	244c0 <_realloc_r+0x1c>

000244f0 <__ssputs_r>:
__ssputs_r():
   244f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   244f4:	688e      	ldr	r6, [r1, #8]
   244f6:	4682      	mov	sl, r0
   244f8:	429e      	cmp	r6, r3
   244fa:	460c      	mov	r4, r1
   244fc:	4691      	mov	r9, r2
   244fe:	4698      	mov	r8, r3
   24500:	d835      	bhi.n	2456e <__ssputs_r+0x7e>
   24502:	898a      	ldrh	r2, [r1, #12]
   24504:	f412 6f90 	tst.w	r2, #1152	; 0x480
   24508:	d031      	beq.n	2456e <__ssputs_r+0x7e>
   2450a:	2302      	movs	r3, #2
   2450c:	6825      	ldr	r5, [r4, #0]
   2450e:	6909      	ldr	r1, [r1, #16]
   24510:	1a6f      	subs	r7, r5, r1
   24512:	6965      	ldr	r5, [r4, #20]
   24514:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   24518:	fb95 f5f3 	sdiv	r5, r5, r3
   2451c:	f108 0301 	add.w	r3, r8, #1
   24520:	443b      	add	r3, r7
   24522:	429d      	cmp	r5, r3
   24524:	bf38      	it	cc
   24526:	461d      	movcc	r5, r3
   24528:	0553      	lsls	r3, r2, #21
   2452a:	d531      	bpl.n	24590 <__ssputs_r+0xa0>
   2452c:	4629      	mov	r1, r5
   2452e:	f7fb facb 	bl	1fac8 <_malloc_r>
   24532:	4606      	mov	r6, r0
   24534:	b950      	cbnz	r0, 2454c <__ssputs_r+0x5c>
   24536:	230c      	movs	r3, #12
   24538:	f8ca 3000 	str.w	r3, [sl]
   2453c:	89a3      	ldrh	r3, [r4, #12]
   2453e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24542:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   24546:	81a3      	strh	r3, [r4, #12]
   24548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2454c:	463a      	mov	r2, r7
   2454e:	6921      	ldr	r1, [r4, #16]
   24550:	f7fa ff9b 	bl	1f48a <memcpy>
   24554:	89a3      	ldrh	r3, [r4, #12]
   24556:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   2455a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   2455e:	81a3      	strh	r3, [r4, #12]
   24560:	6126      	str	r6, [r4, #16]
   24562:	443e      	add	r6, r7
   24564:	6026      	str	r6, [r4, #0]
   24566:	4646      	mov	r6, r8
   24568:	6165      	str	r5, [r4, #20]
   2456a:	1bed      	subs	r5, r5, r7
   2456c:	60a5      	str	r5, [r4, #8]
   2456e:	4546      	cmp	r6, r8
   24570:	bf28      	it	cs
   24572:	4646      	movcs	r6, r8
   24574:	4649      	mov	r1, r9
   24576:	4632      	mov	r2, r6
   24578:	6820      	ldr	r0, [r4, #0]
   2457a:	f7fa ff91 	bl	1f4a0 <memmove>
   2457e:	68a3      	ldr	r3, [r4, #8]
   24580:	2000      	movs	r0, #0
   24582:	1b9b      	subs	r3, r3, r6
   24584:	60a3      	str	r3, [r4, #8]
   24586:	6823      	ldr	r3, [r4, #0]
   24588:	441e      	add	r6, r3
   2458a:	6026      	str	r6, [r4, #0]
   2458c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24590:	462a      	mov	r2, r5
   24592:	f7ff ff87 	bl	244a4 <_realloc_r>
   24596:	4606      	mov	r6, r0
   24598:	2800      	cmp	r0, #0
   2459a:	d1e1      	bne.n	24560 <__ssputs_r+0x70>
   2459c:	6921      	ldr	r1, [r4, #16]
   2459e:	4650      	mov	r0, sl
   245a0:	f7fb fa14 	bl	1f9cc <_free_r>
   245a4:	e7c7      	b.n	24536 <__ssputs_r+0x46>
   245a6:	Address 0x00000000000245a6 is out of bounds.


000245a8 <_svfiprintf_r>:
_svfiprintf_r():
   245a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245ac:	b09d      	sub	sp, #116	; 0x74
   245ae:	9303      	str	r3, [sp, #12]
   245b0:	898b      	ldrh	r3, [r1, #12]
   245b2:	4680      	mov	r8, r0
   245b4:	061c      	lsls	r4, r3, #24
   245b6:	460d      	mov	r5, r1
   245b8:	4616      	mov	r6, r2
   245ba:	d50f      	bpl.n	245dc <_svfiprintf_r+0x34>
   245bc:	690b      	ldr	r3, [r1, #16]
   245be:	b96b      	cbnz	r3, 245dc <_svfiprintf_r+0x34>
   245c0:	2140      	movs	r1, #64	; 0x40
   245c2:	f7fb fa81 	bl	1fac8 <_malloc_r>
   245c6:	6028      	str	r0, [r5, #0]
   245c8:	6128      	str	r0, [r5, #16]
   245ca:	b928      	cbnz	r0, 245d8 <_svfiprintf_r+0x30>
   245cc:	230c      	movs	r3, #12
   245ce:	f8c8 3000 	str.w	r3, [r8]
   245d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   245d6:	e0c4      	b.n	24762 <_svfiprintf_r+0x1ba>
   245d8:	2340      	movs	r3, #64	; 0x40
   245da:	616b      	str	r3, [r5, #20]
   245dc:	2300      	movs	r3, #0
   245de:	9309      	str	r3, [sp, #36]	; 0x24
   245e0:	2320      	movs	r3, #32
   245e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   245e6:	2330      	movs	r3, #48	; 0x30
   245e8:	f04f 0b01 	mov.w	fp, #1
   245ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   245f0:	4637      	mov	r7, r6
   245f2:	463c      	mov	r4, r7
   245f4:	f814 3b01 	ldrb.w	r3, [r4], #1
   245f8:	2b00      	cmp	r3, #0
   245fa:	d13c      	bne.n	24676 <_svfiprintf_r+0xce>
   245fc:	ebb7 0a06 	subs.w	sl, r7, r6
   24600:	d00b      	beq.n	2461a <_svfiprintf_r+0x72>
   24602:	4653      	mov	r3, sl
   24604:	4632      	mov	r2, r6
   24606:	4629      	mov	r1, r5
   24608:	4640      	mov	r0, r8
   2460a:	f7ff ff71 	bl	244f0 <__ssputs_r>
   2460e:	3001      	adds	r0, #1
   24610:	f000 80a2 	beq.w	24758 <_svfiprintf_r+0x1b0>
   24614:	9b09      	ldr	r3, [sp, #36]	; 0x24
   24616:	4453      	add	r3, sl
   24618:	9309      	str	r3, [sp, #36]	; 0x24
   2461a:	783b      	ldrb	r3, [r7, #0]
   2461c:	2b00      	cmp	r3, #0
   2461e:	f000 809b 	beq.w	24758 <_svfiprintf_r+0x1b0>
   24622:	2300      	movs	r3, #0
   24624:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   24628:	9304      	str	r3, [sp, #16]
   2462a:	9307      	str	r3, [sp, #28]
   2462c:	9205      	str	r2, [sp, #20]
   2462e:	9306      	str	r3, [sp, #24]
   24630:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   24634:	931a      	str	r3, [sp, #104]	; 0x68
   24636:	2205      	movs	r2, #5
   24638:	7821      	ldrb	r1, [r4, #0]
   2463a:	4850      	ldr	r0, [pc, #320]	; (2477c <_svfiprintf_r+0x1d4>)
   2463c:	f7fa ff08 	bl	1f450 <memchr>
   24640:	1c67      	adds	r7, r4, #1
   24642:	9b04      	ldr	r3, [sp, #16]
   24644:	b9d8      	cbnz	r0, 2467e <_svfiprintf_r+0xd6>
   24646:	06d9      	lsls	r1, r3, #27
   24648:	bf44      	itt	mi
   2464a:	2220      	movmi	r2, #32
   2464c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   24650:	071a      	lsls	r2, r3, #28
   24652:	bf44      	itt	mi
   24654:	222b      	movmi	r2, #43	; 0x2b
   24656:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2465a:	7822      	ldrb	r2, [r4, #0]
   2465c:	2a2a      	cmp	r2, #42	; 0x2a
   2465e:	d016      	beq.n	2468e <_svfiprintf_r+0xe6>
   24660:	2100      	movs	r1, #0
   24662:	200a      	movs	r0, #10
   24664:	9a07      	ldr	r2, [sp, #28]
   24666:	4627      	mov	r7, r4
   24668:	783b      	ldrb	r3, [r7, #0]
   2466a:	3401      	adds	r4, #1
   2466c:	3b30      	subs	r3, #48	; 0x30
   2466e:	2b09      	cmp	r3, #9
   24670:	d950      	bls.n	24714 <_svfiprintf_r+0x16c>
   24672:	b1c9      	cbz	r1, 246a8 <_svfiprintf_r+0x100>
   24674:	e011      	b.n	2469a <_svfiprintf_r+0xf2>
   24676:	2b25      	cmp	r3, #37	; 0x25
   24678:	d0c0      	beq.n	245fc <_svfiprintf_r+0x54>
   2467a:	4627      	mov	r7, r4
   2467c:	e7b9      	b.n	245f2 <_svfiprintf_r+0x4a>
   2467e:	4a3f      	ldr	r2, [pc, #252]	; (2477c <_svfiprintf_r+0x1d4>)
   24680:	463c      	mov	r4, r7
   24682:	1a80      	subs	r0, r0, r2
   24684:	fa0b f000 	lsl.w	r0, fp, r0
   24688:	4318      	orrs	r0, r3
   2468a:	9004      	str	r0, [sp, #16]
   2468c:	e7d3      	b.n	24636 <_svfiprintf_r+0x8e>
   2468e:	9a03      	ldr	r2, [sp, #12]
   24690:	1d11      	adds	r1, r2, #4
   24692:	6812      	ldr	r2, [r2, #0]
   24694:	9103      	str	r1, [sp, #12]
   24696:	2a00      	cmp	r2, #0
   24698:	db01      	blt.n	2469e <_svfiprintf_r+0xf6>
   2469a:	9207      	str	r2, [sp, #28]
   2469c:	e004      	b.n	246a8 <_svfiprintf_r+0x100>
   2469e:	4252      	negs	r2, r2
   246a0:	f043 0302 	orr.w	r3, r3, #2
   246a4:	9207      	str	r2, [sp, #28]
   246a6:	9304      	str	r3, [sp, #16]
   246a8:	783b      	ldrb	r3, [r7, #0]
   246aa:	2b2e      	cmp	r3, #46	; 0x2e
   246ac:	d10d      	bne.n	246ca <_svfiprintf_r+0x122>
   246ae:	787b      	ldrb	r3, [r7, #1]
   246b0:	1c79      	adds	r1, r7, #1
   246b2:	2b2a      	cmp	r3, #42	; 0x2a
   246b4:	d132      	bne.n	2471c <_svfiprintf_r+0x174>
   246b6:	9b03      	ldr	r3, [sp, #12]
   246b8:	3702      	adds	r7, #2
   246ba:	1d1a      	adds	r2, r3, #4
   246bc:	681b      	ldr	r3, [r3, #0]
   246be:	9203      	str	r2, [sp, #12]
   246c0:	2b00      	cmp	r3, #0
   246c2:	bfb8      	it	lt
   246c4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   246c8:	9305      	str	r3, [sp, #20]
   246ca:	4c2d      	ldr	r4, [pc, #180]	; (24780 <_svfiprintf_r+0x1d8>)
   246cc:	2203      	movs	r2, #3
   246ce:	7839      	ldrb	r1, [r7, #0]
   246d0:	4620      	mov	r0, r4
   246d2:	f7fa febd 	bl	1f450 <memchr>
   246d6:	b138      	cbz	r0, 246e8 <_svfiprintf_r+0x140>
   246d8:	2340      	movs	r3, #64	; 0x40
   246da:	1b00      	subs	r0, r0, r4
   246dc:	fa03 f000 	lsl.w	r0, r3, r0
   246e0:	9b04      	ldr	r3, [sp, #16]
   246e2:	3701      	adds	r7, #1
   246e4:	4303      	orrs	r3, r0
   246e6:	9304      	str	r3, [sp, #16]
   246e8:	7839      	ldrb	r1, [r7, #0]
   246ea:	2206      	movs	r2, #6
   246ec:	4825      	ldr	r0, [pc, #148]	; (24784 <_svfiprintf_r+0x1dc>)
   246ee:	1c7e      	adds	r6, r7, #1
   246f0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   246f4:	f7fa feac 	bl	1f450 <memchr>
   246f8:	2800      	cmp	r0, #0
   246fa:	d035      	beq.n	24768 <_svfiprintf_r+0x1c0>
   246fc:	4b22      	ldr	r3, [pc, #136]	; (24788 <_svfiprintf_r+0x1e0>)
   246fe:	b9fb      	cbnz	r3, 24740 <_svfiprintf_r+0x198>
   24700:	9b03      	ldr	r3, [sp, #12]
   24702:	3307      	adds	r3, #7
   24704:	f023 0307 	bic.w	r3, r3, #7
   24708:	3308      	adds	r3, #8
   2470a:	9303      	str	r3, [sp, #12]
   2470c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   2470e:	444b      	add	r3, r9
   24710:	9309      	str	r3, [sp, #36]	; 0x24
   24712:	e76d      	b.n	245f0 <_svfiprintf_r+0x48>
   24714:	fb00 3202 	mla	r2, r0, r2, r3
   24718:	2101      	movs	r1, #1
   2471a:	e7a4      	b.n	24666 <_svfiprintf_r+0xbe>
   2471c:	2300      	movs	r3, #0
   2471e:	240a      	movs	r4, #10
   24720:	4618      	mov	r0, r3
   24722:	9305      	str	r3, [sp, #20]
   24724:	460f      	mov	r7, r1
   24726:	783a      	ldrb	r2, [r7, #0]
   24728:	3101      	adds	r1, #1
   2472a:	3a30      	subs	r2, #48	; 0x30
   2472c:	2a09      	cmp	r2, #9
   2472e:	d903      	bls.n	24738 <_svfiprintf_r+0x190>
   24730:	2b00      	cmp	r3, #0
   24732:	d0ca      	beq.n	246ca <_svfiprintf_r+0x122>
   24734:	9005      	str	r0, [sp, #20]
   24736:	e7c8      	b.n	246ca <_svfiprintf_r+0x122>
   24738:	fb04 2000 	mla	r0, r4, r0, r2
   2473c:	2301      	movs	r3, #1
   2473e:	e7f1      	b.n	24724 <_svfiprintf_r+0x17c>
   24740:	ab03      	add	r3, sp, #12
   24742:	9300      	str	r3, [sp, #0]
   24744:	462a      	mov	r2, r5
   24746:	4b11      	ldr	r3, [pc, #68]	; (2478c <_svfiprintf_r+0x1e4>)
   24748:	a904      	add	r1, sp, #16
   2474a:	4640      	mov	r0, r8
   2474c:	f7fb faac 	bl	1fca8 <_printf_float>
   24750:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   24754:	4681      	mov	r9, r0
   24756:	d1d9      	bne.n	2470c <_svfiprintf_r+0x164>
   24758:	89ab      	ldrh	r3, [r5, #12]
   2475a:	065b      	lsls	r3, r3, #25
   2475c:	f53f af39 	bmi.w	245d2 <_svfiprintf_r+0x2a>
   24760:	9809      	ldr	r0, [sp, #36]	; 0x24
   24762:	b01d      	add	sp, #116	; 0x74
   24764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24768:	ab03      	add	r3, sp, #12
   2476a:	9300      	str	r3, [sp, #0]
   2476c:	462a      	mov	r2, r5
   2476e:	4b07      	ldr	r3, [pc, #28]	; (2478c <_svfiprintf_r+0x1e4>)
   24770:	a904      	add	r1, sp, #16
   24772:	4640      	mov	r0, r8
   24774:	f7fb fd48 	bl	20208 <_printf_i>
   24778:	e7ea      	b.n	24750 <_svfiprintf_r+0x1a8>
   2477a:	bf00      	nop
   2477c:	00029164 	.word	0x00029164
   24780:	0002916a 	.word	0x0002916a
   24784:	0002916e 	.word	0x0002916e
   24788:	0001fca9 	.word	0x0001fca9
   2478c:	000244f1 	.word	0x000244f1

00024790 <_sungetc_r>:
_sungetc_r():
   24790:	b538      	push	{r3, r4, r5, lr}
   24792:	1c4b      	adds	r3, r1, #1
   24794:	4614      	mov	r4, r2
   24796:	d103      	bne.n	247a0 <_sungetc_r+0x10>
   24798:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   2479c:	4628      	mov	r0, r5
   2479e:	bd38      	pop	{r3, r4, r5, pc}
   247a0:	8993      	ldrh	r3, [r2, #12]
   247a2:	b2cd      	uxtb	r5, r1
   247a4:	f023 0320 	bic.w	r3, r3, #32
   247a8:	8193      	strh	r3, [r2, #12]
   247aa:	6b53      	ldr	r3, [r2, #52]	; 0x34
   247ac:	6852      	ldr	r2, [r2, #4]
   247ae:	b18b      	cbz	r3, 247d4 <_sungetc_r+0x44>
   247b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   247b2:	429a      	cmp	r2, r3
   247b4:	da08      	bge.n	247c8 <_sungetc_r+0x38>
   247b6:	6823      	ldr	r3, [r4, #0]
   247b8:	1e5a      	subs	r2, r3, #1
   247ba:	6022      	str	r2, [r4, #0]
   247bc:	f803 5c01 	strb.w	r5, [r3, #-1]
   247c0:	6863      	ldr	r3, [r4, #4]
   247c2:	3301      	adds	r3, #1
   247c4:	6063      	str	r3, [r4, #4]
   247c6:	e7e9      	b.n	2479c <_sungetc_r+0xc>
   247c8:	4621      	mov	r1, r4
   247ca:	f000 fe89 	bl	254e0 <__submore>
   247ce:	2800      	cmp	r0, #0
   247d0:	d0f1      	beq.n	247b6 <_sungetc_r+0x26>
   247d2:	e7e1      	b.n	24798 <_sungetc_r+0x8>
   247d4:	6921      	ldr	r1, [r4, #16]
   247d6:	6823      	ldr	r3, [r4, #0]
   247d8:	b151      	cbz	r1, 247f0 <_sungetc_r+0x60>
   247da:	4299      	cmp	r1, r3
   247dc:	d208      	bcs.n	247f0 <_sungetc_r+0x60>
   247de:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   247e2:	428d      	cmp	r5, r1
   247e4:	d104      	bne.n	247f0 <_sungetc_r+0x60>
   247e6:	3b01      	subs	r3, #1
   247e8:	3201      	adds	r2, #1
   247ea:	6023      	str	r3, [r4, #0]
   247ec:	6062      	str	r2, [r4, #4]
   247ee:	e7d5      	b.n	2479c <_sungetc_r+0xc>
   247f0:	63e3      	str	r3, [r4, #60]	; 0x3c
   247f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   247f6:	6363      	str	r3, [r4, #52]	; 0x34
   247f8:	2303      	movs	r3, #3
   247fa:	63a3      	str	r3, [r4, #56]	; 0x38
   247fc:	4623      	mov	r3, r4
   247fe:	6422      	str	r2, [r4, #64]	; 0x40
   24800:	f803 5f46 	strb.w	r5, [r3, #70]!
   24804:	6023      	str	r3, [r4, #0]
   24806:	2301      	movs	r3, #1
   24808:	e7dc      	b.n	247c4 <_sungetc_r+0x34>

0002480a <__ssrefill_r>:
__ssrefill_r():
   2480a:	b510      	push	{r4, lr}
   2480c:	460c      	mov	r4, r1
   2480e:	6b49      	ldr	r1, [r1, #52]	; 0x34
   24810:	b169      	cbz	r1, 2482e <__ssrefill_r+0x24>
   24812:	f104 0344 	add.w	r3, r4, #68	; 0x44
   24816:	4299      	cmp	r1, r3
   24818:	d001      	beq.n	2481e <__ssrefill_r+0x14>
   2481a:	f7fb f8d7 	bl	1f9cc <_free_r>
   2481e:	2000      	movs	r0, #0
   24820:	6c23      	ldr	r3, [r4, #64]	; 0x40
   24822:	6360      	str	r0, [r4, #52]	; 0x34
   24824:	6063      	str	r3, [r4, #4]
   24826:	b113      	cbz	r3, 2482e <__ssrefill_r+0x24>
   24828:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   2482a:	6023      	str	r3, [r4, #0]
   2482c:	bd10      	pop	{r4, pc}
   2482e:	6923      	ldr	r3, [r4, #16]
   24830:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24834:	6023      	str	r3, [r4, #0]
   24836:	2300      	movs	r3, #0
   24838:	6063      	str	r3, [r4, #4]
   2483a:	89a3      	ldrh	r3, [r4, #12]
   2483c:	f043 0320 	orr.w	r3, r3, #32
   24840:	81a3      	strh	r3, [r4, #12]
   24842:	bd10      	pop	{r4, pc}

00024844 <__ssvfiscanf_r>:
__ssvfiscanf_r():
   24844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24848:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   2484c:	9301      	str	r3, [sp, #4]
   2484e:	2300      	movs	r3, #0
   24850:	4606      	mov	r6, r0
   24852:	460c      	mov	r4, r1
   24854:	4692      	mov	sl, r2
   24856:	270a      	movs	r7, #10
   24858:	9346      	str	r3, [sp, #280]	; 0x118
   2485a:	9347      	str	r3, [sp, #284]	; 0x11c
   2485c:	4b9f      	ldr	r3, [pc, #636]	; (24adc <__ssvfiscanf_r+0x298>)
   2485e:	f10d 080c 	add.w	r8, sp, #12
   24862:	93a2      	str	r3, [sp, #648]	; 0x288
   24864:	4b9e      	ldr	r3, [pc, #632]	; (24ae0 <__ssvfiscanf_r+0x29c>)
   24866:	f8df 927c 	ldr.w	r9, [pc, #636]	; 24ae4 <__ssvfiscanf_r+0x2a0>
   2486a:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   2486e:	93a3      	str	r3, [sp, #652]	; 0x28c
   24870:	f89a 3000 	ldrb.w	r3, [sl]
   24874:	2b00      	cmp	r3, #0
   24876:	f000 812f 	beq.w	24ad8 <__ssvfiscanf_r+0x294>
   2487a:	f7fa fd55 	bl	1f328 <__locale_ctype_ptr>
   2487e:	f89a b000 	ldrb.w	fp, [sl]
   24882:	4458      	add	r0, fp
   24884:	7843      	ldrb	r3, [r0, #1]
   24886:	f013 0308 	ands.w	r3, r3, #8
   2488a:	d143      	bne.n	24914 <__ssvfiscanf_r+0xd0>
   2488c:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   24890:	f10a 0501 	add.w	r5, sl, #1
   24894:	f040 8099 	bne.w	249ca <__ssvfiscanf_r+0x186>
   24898:	9345      	str	r3, [sp, #276]	; 0x114
   2489a:	9343      	str	r3, [sp, #268]	; 0x10c
   2489c:	f89a 3001 	ldrb.w	r3, [sl, #1]
   248a0:	2b2a      	cmp	r3, #42	; 0x2a
   248a2:	d103      	bne.n	248ac <__ssvfiscanf_r+0x68>
   248a4:	2310      	movs	r3, #16
   248a6:	f10a 0502 	add.w	r5, sl, #2
   248aa:	9343      	str	r3, [sp, #268]	; 0x10c
   248ac:	7829      	ldrb	r1, [r5, #0]
   248ae:	46aa      	mov	sl, r5
   248b0:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   248b4:	2a09      	cmp	r2, #9
   248b6:	f105 0501 	add.w	r5, r5, #1
   248ba:	d941      	bls.n	24940 <__ssvfiscanf_r+0xfc>
   248bc:	2203      	movs	r2, #3
   248be:	4889      	ldr	r0, [pc, #548]	; (24ae4 <__ssvfiscanf_r+0x2a0>)
   248c0:	f7fa fdc6 	bl	1f450 <memchr>
   248c4:	b138      	cbz	r0, 248d6 <__ssvfiscanf_r+0x92>
   248c6:	eba0 0309 	sub.w	r3, r0, r9
   248ca:	2001      	movs	r0, #1
   248cc:	46aa      	mov	sl, r5
   248ce:	4098      	lsls	r0, r3
   248d0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   248d2:	4318      	orrs	r0, r3
   248d4:	9043      	str	r0, [sp, #268]	; 0x10c
   248d6:	f89a 3000 	ldrb.w	r3, [sl]
   248da:	f10a 0501 	add.w	r5, sl, #1
   248de:	2b67      	cmp	r3, #103	; 0x67
   248e0:	d84a      	bhi.n	24978 <__ssvfiscanf_r+0x134>
   248e2:	2b65      	cmp	r3, #101	; 0x65
   248e4:	f080 80b7 	bcs.w	24a56 <__ssvfiscanf_r+0x212>
   248e8:	2b47      	cmp	r3, #71	; 0x47
   248ea:	d82f      	bhi.n	2494c <__ssvfiscanf_r+0x108>
   248ec:	2b45      	cmp	r3, #69	; 0x45
   248ee:	f080 80b2 	bcs.w	24a56 <__ssvfiscanf_r+0x212>
   248f2:	2b00      	cmp	r3, #0
   248f4:	f000 8082 	beq.w	249fc <__ssvfiscanf_r+0x1b8>
   248f8:	2b25      	cmp	r3, #37	; 0x25
   248fa:	d066      	beq.n	249ca <__ssvfiscanf_r+0x186>
   248fc:	2303      	movs	r3, #3
   248fe:	9744      	str	r7, [sp, #272]	; 0x110
   24900:	9349      	str	r3, [sp, #292]	; 0x124
   24902:	e045      	b.n	24990 <__ssvfiscanf_r+0x14c>
   24904:	9947      	ldr	r1, [sp, #284]	; 0x11c
   24906:	3301      	adds	r3, #1
   24908:	3101      	adds	r1, #1
   2490a:	9147      	str	r1, [sp, #284]	; 0x11c
   2490c:	6861      	ldr	r1, [r4, #4]
   2490e:	6023      	str	r3, [r4, #0]
   24910:	3901      	subs	r1, #1
   24912:	6061      	str	r1, [r4, #4]
   24914:	6863      	ldr	r3, [r4, #4]
   24916:	2b00      	cmp	r3, #0
   24918:	dd0b      	ble.n	24932 <__ssvfiscanf_r+0xee>
   2491a:	f7fa fd05 	bl	1f328 <__locale_ctype_ptr>
   2491e:	6823      	ldr	r3, [r4, #0]
   24920:	7819      	ldrb	r1, [r3, #0]
   24922:	4408      	add	r0, r1
   24924:	7841      	ldrb	r1, [r0, #1]
   24926:	070d      	lsls	r5, r1, #28
   24928:	d4ec      	bmi.n	24904 <__ssvfiscanf_r+0xc0>
   2492a:	f10a 0501 	add.w	r5, sl, #1
   2492e:	46aa      	mov	sl, r5
   24930:	e79e      	b.n	24870 <__ssvfiscanf_r+0x2c>
   24932:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24934:	4621      	mov	r1, r4
   24936:	4630      	mov	r0, r6
   24938:	4798      	blx	r3
   2493a:	2800      	cmp	r0, #0
   2493c:	d0ed      	beq.n	2491a <__ssvfiscanf_r+0xd6>
   2493e:	e7f4      	b.n	2492a <__ssvfiscanf_r+0xe6>
   24940:	9b45      	ldr	r3, [sp, #276]	; 0x114
   24942:	fb07 1303 	mla	r3, r7, r3, r1
   24946:	3b30      	subs	r3, #48	; 0x30
   24948:	9345      	str	r3, [sp, #276]	; 0x114
   2494a:	e7af      	b.n	248ac <__ssvfiscanf_r+0x68>
   2494c:	2b5b      	cmp	r3, #91	; 0x5b
   2494e:	d061      	beq.n	24a14 <__ssvfiscanf_r+0x1d0>
   24950:	d80c      	bhi.n	2496c <__ssvfiscanf_r+0x128>
   24952:	2b58      	cmp	r3, #88	; 0x58
   24954:	d1d2      	bne.n	248fc <__ssvfiscanf_r+0xb8>
   24956:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24958:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   2495c:	9243      	str	r2, [sp, #268]	; 0x10c
   2495e:	2210      	movs	r2, #16
   24960:	9244      	str	r2, [sp, #272]	; 0x110
   24962:	2b6f      	cmp	r3, #111	; 0x6f
   24964:	bfb4      	ite	lt
   24966:	2303      	movlt	r3, #3
   24968:	2304      	movge	r3, #4
   2496a:	e010      	b.n	2498e <__ssvfiscanf_r+0x14a>
   2496c:	2b63      	cmp	r3, #99	; 0x63
   2496e:	d05c      	beq.n	24a2a <__ssvfiscanf_r+0x1e6>
   24970:	2b64      	cmp	r3, #100	; 0x64
   24972:	d1c3      	bne.n	248fc <__ssvfiscanf_r+0xb8>
   24974:	9744      	str	r7, [sp, #272]	; 0x110
   24976:	e7f4      	b.n	24962 <__ssvfiscanf_r+0x11e>
   24978:	2b70      	cmp	r3, #112	; 0x70
   2497a:	d042      	beq.n	24a02 <__ssvfiscanf_r+0x1be>
   2497c:	d81d      	bhi.n	249ba <__ssvfiscanf_r+0x176>
   2497e:	2b6e      	cmp	r3, #110	; 0x6e
   24980:	d059      	beq.n	24a36 <__ssvfiscanf_r+0x1f2>
   24982:	d843      	bhi.n	24a0c <__ssvfiscanf_r+0x1c8>
   24984:	2b69      	cmp	r3, #105	; 0x69
   24986:	d1b9      	bne.n	248fc <__ssvfiscanf_r+0xb8>
   24988:	2300      	movs	r3, #0
   2498a:	9344      	str	r3, [sp, #272]	; 0x110
   2498c:	2303      	movs	r3, #3
   2498e:	9349      	str	r3, [sp, #292]	; 0x124
   24990:	6863      	ldr	r3, [r4, #4]
   24992:	2b00      	cmp	r3, #0
   24994:	dd61      	ble.n	24a5a <__ssvfiscanf_r+0x216>
   24996:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24998:	0659      	lsls	r1, r3, #25
   2499a:	d56f      	bpl.n	24a7c <__ssvfiscanf_r+0x238>
   2499c:	9b49      	ldr	r3, [sp, #292]	; 0x124
   2499e:	2b02      	cmp	r3, #2
   249a0:	dc7c      	bgt.n	24a9c <__ssvfiscanf_r+0x258>
   249a2:	ab01      	add	r3, sp, #4
   249a4:	4622      	mov	r2, r4
   249a6:	a943      	add	r1, sp, #268	; 0x10c
   249a8:	4630      	mov	r0, r6
   249aa:	f000 fb59 	bl	25060 <_scanf_chars>
   249ae:	2801      	cmp	r0, #1
   249b0:	f000 8092 	beq.w	24ad8 <__ssvfiscanf_r+0x294>
   249b4:	2802      	cmp	r0, #2
   249b6:	d1ba      	bne.n	2492e <__ssvfiscanf_r+0xea>
   249b8:	e01d      	b.n	249f6 <__ssvfiscanf_r+0x1b2>
   249ba:	2b75      	cmp	r3, #117	; 0x75
   249bc:	d0da      	beq.n	24974 <__ssvfiscanf_r+0x130>
   249be:	2b78      	cmp	r3, #120	; 0x78
   249c0:	d0c9      	beq.n	24956 <__ssvfiscanf_r+0x112>
   249c2:	2b73      	cmp	r3, #115	; 0x73
   249c4:	d19a      	bne.n	248fc <__ssvfiscanf_r+0xb8>
   249c6:	2302      	movs	r3, #2
   249c8:	e7e1      	b.n	2498e <__ssvfiscanf_r+0x14a>
   249ca:	6863      	ldr	r3, [r4, #4]
   249cc:	2b00      	cmp	r3, #0
   249ce:	dd0c      	ble.n	249ea <__ssvfiscanf_r+0x1a6>
   249d0:	6823      	ldr	r3, [r4, #0]
   249d2:	781a      	ldrb	r2, [r3, #0]
   249d4:	4593      	cmp	fp, r2
   249d6:	d17f      	bne.n	24ad8 <__ssvfiscanf_r+0x294>
   249d8:	3301      	adds	r3, #1
   249da:	6862      	ldr	r2, [r4, #4]
   249dc:	6023      	str	r3, [r4, #0]
   249de:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   249e0:	3a01      	subs	r2, #1
   249e2:	3301      	adds	r3, #1
   249e4:	6062      	str	r2, [r4, #4]
   249e6:	9347      	str	r3, [sp, #284]	; 0x11c
   249e8:	e7a1      	b.n	2492e <__ssvfiscanf_r+0xea>
   249ea:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   249ec:	4621      	mov	r1, r4
   249ee:	4630      	mov	r0, r6
   249f0:	4798      	blx	r3
   249f2:	2800      	cmp	r0, #0
   249f4:	d0ec      	beq.n	249d0 <__ssvfiscanf_r+0x18c>
   249f6:	9846      	ldr	r0, [sp, #280]	; 0x118
   249f8:	2800      	cmp	r0, #0
   249fa:	d163      	bne.n	24ac4 <__ssvfiscanf_r+0x280>
   249fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24a00:	e066      	b.n	24ad0 <__ssvfiscanf_r+0x28c>
   24a02:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24a04:	f042 0220 	orr.w	r2, r2, #32
   24a08:	9243      	str	r2, [sp, #268]	; 0x10c
   24a0a:	e7a4      	b.n	24956 <__ssvfiscanf_r+0x112>
   24a0c:	2308      	movs	r3, #8
   24a0e:	9344      	str	r3, [sp, #272]	; 0x110
   24a10:	2304      	movs	r3, #4
   24a12:	e7bc      	b.n	2498e <__ssvfiscanf_r+0x14a>
   24a14:	4629      	mov	r1, r5
   24a16:	4640      	mov	r0, r8
   24a18:	f000 fc8e 	bl	25338 <__sccl>
   24a1c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24a1e:	4605      	mov	r5, r0
   24a20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   24a24:	9343      	str	r3, [sp, #268]	; 0x10c
   24a26:	2301      	movs	r3, #1
   24a28:	e7b1      	b.n	2498e <__ssvfiscanf_r+0x14a>
   24a2a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24a2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   24a30:	9343      	str	r3, [sp, #268]	; 0x10c
   24a32:	2300      	movs	r3, #0
   24a34:	e7ab      	b.n	2498e <__ssvfiscanf_r+0x14a>
   24a36:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24a38:	06d0      	lsls	r0, r2, #27
   24a3a:	f53f af78 	bmi.w	2492e <__ssvfiscanf_r+0xea>
   24a3e:	f012 0f01 	tst.w	r2, #1
   24a42:	9a01      	ldr	r2, [sp, #4]
   24a44:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   24a46:	f102 0104 	add.w	r1, r2, #4
   24a4a:	9101      	str	r1, [sp, #4]
   24a4c:	6812      	ldr	r2, [r2, #0]
   24a4e:	bf14      	ite	ne
   24a50:	8013      	strhne	r3, [r2, #0]
   24a52:	6013      	streq	r3, [r2, #0]
   24a54:	e76b      	b.n	2492e <__ssvfiscanf_r+0xea>
   24a56:	2305      	movs	r3, #5
   24a58:	e799      	b.n	2498e <__ssvfiscanf_r+0x14a>
   24a5a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24a5c:	4621      	mov	r1, r4
   24a5e:	4630      	mov	r0, r6
   24a60:	4798      	blx	r3
   24a62:	2800      	cmp	r0, #0
   24a64:	d097      	beq.n	24996 <__ssvfiscanf_r+0x152>
   24a66:	e7c6      	b.n	249f6 <__ssvfiscanf_r+0x1b2>
   24a68:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   24a6a:	3201      	adds	r2, #1
   24a6c:	9247      	str	r2, [sp, #284]	; 0x11c
   24a6e:	6862      	ldr	r2, [r4, #4]
   24a70:	3a01      	subs	r2, #1
   24a72:	2a00      	cmp	r2, #0
   24a74:	6062      	str	r2, [r4, #4]
   24a76:	dd0a      	ble.n	24a8e <__ssvfiscanf_r+0x24a>
   24a78:	3301      	adds	r3, #1
   24a7a:	6023      	str	r3, [r4, #0]
   24a7c:	f7fa fc54 	bl	1f328 <__locale_ctype_ptr>
   24a80:	6823      	ldr	r3, [r4, #0]
   24a82:	781a      	ldrb	r2, [r3, #0]
   24a84:	4410      	add	r0, r2
   24a86:	7842      	ldrb	r2, [r0, #1]
   24a88:	0712      	lsls	r2, r2, #28
   24a8a:	d4ed      	bmi.n	24a68 <__ssvfiscanf_r+0x224>
   24a8c:	e786      	b.n	2499c <__ssvfiscanf_r+0x158>
   24a8e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24a90:	4621      	mov	r1, r4
   24a92:	4630      	mov	r0, r6
   24a94:	4798      	blx	r3
   24a96:	2800      	cmp	r0, #0
   24a98:	d0f0      	beq.n	24a7c <__ssvfiscanf_r+0x238>
   24a9a:	e7ac      	b.n	249f6 <__ssvfiscanf_r+0x1b2>
   24a9c:	2b04      	cmp	r3, #4
   24a9e:	dc06      	bgt.n	24aae <__ssvfiscanf_r+0x26a>
   24aa0:	ab01      	add	r3, sp, #4
   24aa2:	4622      	mov	r2, r4
   24aa4:	a943      	add	r1, sp, #268	; 0x10c
   24aa6:	4630      	mov	r0, r6
   24aa8:	f000 fb3e 	bl	25128 <_scanf_i>
   24aac:	e77f      	b.n	249ae <__ssvfiscanf_r+0x16a>
   24aae:	4b0e      	ldr	r3, [pc, #56]	; (24ae8 <__ssvfiscanf_r+0x2a4>)
   24ab0:	2b00      	cmp	r3, #0
   24ab2:	f43f af3c 	beq.w	2492e <__ssvfiscanf_r+0xea>
   24ab6:	ab01      	add	r3, sp, #4
   24ab8:	4622      	mov	r2, r4
   24aba:	a943      	add	r1, sp, #268	; 0x10c
   24abc:	4630      	mov	r0, r6
   24abe:	f7fb fcc3 	bl	20448 <_scanf_float>
   24ac2:	e774      	b.n	249ae <__ssvfiscanf_r+0x16a>
   24ac4:	89a3      	ldrh	r3, [r4, #12]
   24ac6:	f013 0f40 	tst.w	r3, #64	; 0x40
   24aca:	bf18      	it	ne
   24acc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   24ad0:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   24ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ad8:	9846      	ldr	r0, [sp, #280]	; 0x118
   24ada:	e7f9      	b.n	24ad0 <__ssvfiscanf_r+0x28c>
   24adc:	00024791 	.word	0x00024791
   24ae0:	0002480b 	.word	0x0002480b
   24ae4:	0002916a 	.word	0x0002916a
   24ae8:	00020449 	.word	0x00020449

00024aec <__sfputc_r>:
__sfputc_r():
   24aec:	6893      	ldr	r3, [r2, #8]
   24aee:	b410      	push	{r4}
   24af0:	3b01      	subs	r3, #1
   24af2:	2b00      	cmp	r3, #0
   24af4:	6093      	str	r3, [r2, #8]
   24af6:	da08      	bge.n	24b0a <__sfputc_r+0x1e>
   24af8:	6994      	ldr	r4, [r2, #24]
   24afa:	42a3      	cmp	r3, r4
   24afc:	db02      	blt.n	24b04 <__sfputc_r+0x18>
   24afe:	b2cb      	uxtb	r3, r1
   24b00:	2b0a      	cmp	r3, #10
   24b02:	d102      	bne.n	24b0a <__sfputc_r+0x1e>
   24b04:	bc10      	pop	{r4}
   24b06:	f7fd bcb7 	b.w	22478 <__swbuf_r>
   24b0a:	6813      	ldr	r3, [r2, #0]
   24b0c:	1c58      	adds	r0, r3, #1
   24b0e:	6010      	str	r0, [r2, #0]
   24b10:	7019      	strb	r1, [r3, #0]
   24b12:	b2c8      	uxtb	r0, r1
   24b14:	bc10      	pop	{r4}
   24b16:	4770      	bx	lr

00024b18 <__sfputs_r>:
__sfputs_r():
   24b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   24b1a:	4606      	mov	r6, r0
   24b1c:	460f      	mov	r7, r1
   24b1e:	4614      	mov	r4, r2
   24b20:	18d5      	adds	r5, r2, r3
   24b22:	42ac      	cmp	r4, r5
   24b24:	d101      	bne.n	24b2a <__sfputs_r+0x12>
   24b26:	2000      	movs	r0, #0
   24b28:	e007      	b.n	24b3a <__sfputs_r+0x22>
   24b2a:	463a      	mov	r2, r7
   24b2c:	f814 1b01 	ldrb.w	r1, [r4], #1
   24b30:	4630      	mov	r0, r6
   24b32:	f7ff ffdb 	bl	24aec <__sfputc_r>
   24b36:	1c43      	adds	r3, r0, #1
   24b38:	d1f3      	bne.n	24b22 <__sfputs_r+0xa>
   24b3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00024b3c <_vfiprintf_r>:
_vfprintf_r():
   24b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b40:	b09d      	sub	sp, #116	; 0x74
   24b42:	460c      	mov	r4, r1
   24b44:	4617      	mov	r7, r2
   24b46:	9303      	str	r3, [sp, #12]
   24b48:	4606      	mov	r6, r0
   24b4a:	b118      	cbz	r0, 24b54 <_vfiprintf_r+0x18>
   24b4c:	6983      	ldr	r3, [r0, #24]
   24b4e:	b90b      	cbnz	r3, 24b54 <_vfiprintf_r+0x18>
   24b50:	f7fa f8ee 	bl	1ed30 <__sinit>
   24b54:	4b7c      	ldr	r3, [pc, #496]	; (24d48 <_vfiprintf_r+0x20c>)
   24b56:	429c      	cmp	r4, r3
   24b58:	d157      	bne.n	24c0a <_vfiprintf_r+0xce>
   24b5a:	6874      	ldr	r4, [r6, #4]
   24b5c:	89a3      	ldrh	r3, [r4, #12]
   24b5e:	0718      	lsls	r0, r3, #28
   24b60:	d55d      	bpl.n	24c1e <_vfiprintf_r+0xe2>
   24b62:	6923      	ldr	r3, [r4, #16]
   24b64:	2b00      	cmp	r3, #0
   24b66:	d05a      	beq.n	24c1e <_vfiprintf_r+0xe2>
   24b68:	2300      	movs	r3, #0
   24b6a:	9309      	str	r3, [sp, #36]	; 0x24
   24b6c:	2320      	movs	r3, #32
   24b6e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   24b72:	2330      	movs	r3, #48	; 0x30
   24b74:	f04f 0b01 	mov.w	fp, #1
   24b78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   24b7c:	46b8      	mov	r8, r7
   24b7e:	4645      	mov	r5, r8
   24b80:	f815 3b01 	ldrb.w	r3, [r5], #1
   24b84:	2b00      	cmp	r3, #0
   24b86:	d155      	bne.n	24c34 <_vfiprintf_r+0xf8>
   24b88:	ebb8 0a07 	subs.w	sl, r8, r7
   24b8c:	d00b      	beq.n	24ba6 <_vfiprintf_r+0x6a>
   24b8e:	4653      	mov	r3, sl
   24b90:	463a      	mov	r2, r7
   24b92:	4621      	mov	r1, r4
   24b94:	4630      	mov	r0, r6
   24b96:	f7ff ffbf 	bl	24b18 <__sfputs_r>
   24b9a:	3001      	adds	r0, #1
   24b9c:	f000 80c4 	beq.w	24d28 <_vfiprintf_r+0x1ec>
   24ba0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   24ba2:	4453      	add	r3, sl
   24ba4:	9309      	str	r3, [sp, #36]	; 0x24
   24ba6:	f898 3000 	ldrb.w	r3, [r8]
   24baa:	2b00      	cmp	r3, #0
   24bac:	f000 80bc 	beq.w	24d28 <_vfiprintf_r+0x1ec>
   24bb0:	2300      	movs	r3, #0
   24bb2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   24bb6:	9304      	str	r3, [sp, #16]
   24bb8:	9307      	str	r3, [sp, #28]
   24bba:	9205      	str	r2, [sp, #20]
   24bbc:	9306      	str	r3, [sp, #24]
   24bbe:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   24bc2:	931a      	str	r3, [sp, #104]	; 0x68
   24bc4:	2205      	movs	r2, #5
   24bc6:	7829      	ldrb	r1, [r5, #0]
   24bc8:	4860      	ldr	r0, [pc, #384]	; (24d4c <_vfiprintf_r+0x210>)
   24bca:	f7fa fc41 	bl	1f450 <memchr>
   24bce:	f105 0801 	add.w	r8, r5, #1
   24bd2:	9b04      	ldr	r3, [sp, #16]
   24bd4:	2800      	cmp	r0, #0
   24bd6:	d131      	bne.n	24c3c <_vfiprintf_r+0x100>
   24bd8:	06d9      	lsls	r1, r3, #27
   24bda:	bf44      	itt	mi
   24bdc:	2220      	movmi	r2, #32
   24bde:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   24be2:	071a      	lsls	r2, r3, #28
   24be4:	bf44      	itt	mi
   24be6:	222b      	movmi	r2, #43	; 0x2b
   24be8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   24bec:	782a      	ldrb	r2, [r5, #0]
   24bee:	2a2a      	cmp	r2, #42	; 0x2a
   24bf0:	d02c      	beq.n	24c4c <_vfiprintf_r+0x110>
   24bf2:	2100      	movs	r1, #0
   24bf4:	200a      	movs	r0, #10
   24bf6:	9a07      	ldr	r2, [sp, #28]
   24bf8:	46a8      	mov	r8, r5
   24bfa:	f898 3000 	ldrb.w	r3, [r8]
   24bfe:	3501      	adds	r5, #1
   24c00:	3b30      	subs	r3, #48	; 0x30
   24c02:	2b09      	cmp	r3, #9
   24c04:	d96d      	bls.n	24ce2 <_vfiprintf_r+0x1a6>
   24c06:	b371      	cbz	r1, 24c66 <_vfiprintf_r+0x12a>
   24c08:	e026      	b.n	24c58 <_vfiprintf_r+0x11c>
   24c0a:	4b51      	ldr	r3, [pc, #324]	; (24d50 <_vfiprintf_r+0x214>)
   24c0c:	429c      	cmp	r4, r3
   24c0e:	d101      	bne.n	24c14 <_vfiprintf_r+0xd8>
   24c10:	68b4      	ldr	r4, [r6, #8]
   24c12:	e7a3      	b.n	24b5c <_vfiprintf_r+0x20>
   24c14:	4b4f      	ldr	r3, [pc, #316]	; (24d54 <_vfiprintf_r+0x218>)
   24c16:	429c      	cmp	r4, r3
   24c18:	bf08      	it	eq
   24c1a:	68f4      	ldreq	r4, [r6, #12]
   24c1c:	e79e      	b.n	24b5c <_vfiprintf_r+0x20>
   24c1e:	4621      	mov	r1, r4
   24c20:	4630      	mov	r0, r6
   24c22:	f7fd fc9b 	bl	2255c <__swsetup_r>
   24c26:	2800      	cmp	r0, #0
   24c28:	d09e      	beq.n	24b68 <_vfiprintf_r+0x2c>
   24c2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24c2e:	b01d      	add	sp, #116	; 0x74
   24c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c34:	2b25      	cmp	r3, #37	; 0x25
   24c36:	d0a7      	beq.n	24b88 <_vfiprintf_r+0x4c>
   24c38:	46a8      	mov	r8, r5
   24c3a:	e7a0      	b.n	24b7e <_vfiprintf_r+0x42>
   24c3c:	4a43      	ldr	r2, [pc, #268]	; (24d4c <_vfiprintf_r+0x210>)
   24c3e:	4645      	mov	r5, r8
   24c40:	1a80      	subs	r0, r0, r2
   24c42:	fa0b f000 	lsl.w	r0, fp, r0
   24c46:	4318      	orrs	r0, r3
   24c48:	9004      	str	r0, [sp, #16]
   24c4a:	e7bb      	b.n	24bc4 <_vfiprintf_r+0x88>
   24c4c:	9a03      	ldr	r2, [sp, #12]
   24c4e:	1d11      	adds	r1, r2, #4
   24c50:	6812      	ldr	r2, [r2, #0]
   24c52:	9103      	str	r1, [sp, #12]
   24c54:	2a00      	cmp	r2, #0
   24c56:	db01      	blt.n	24c5c <_vfiprintf_r+0x120>
   24c58:	9207      	str	r2, [sp, #28]
   24c5a:	e004      	b.n	24c66 <_vfiprintf_r+0x12a>
   24c5c:	4252      	negs	r2, r2
   24c5e:	f043 0302 	orr.w	r3, r3, #2
   24c62:	9207      	str	r2, [sp, #28]
   24c64:	9304      	str	r3, [sp, #16]
   24c66:	f898 3000 	ldrb.w	r3, [r8]
   24c6a:	2b2e      	cmp	r3, #46	; 0x2e
   24c6c:	d110      	bne.n	24c90 <_vfiprintf_r+0x154>
   24c6e:	f898 3001 	ldrb.w	r3, [r8, #1]
   24c72:	f108 0101 	add.w	r1, r8, #1
   24c76:	2b2a      	cmp	r3, #42	; 0x2a
   24c78:	d137      	bne.n	24cea <_vfiprintf_r+0x1ae>
   24c7a:	9b03      	ldr	r3, [sp, #12]
   24c7c:	f108 0802 	add.w	r8, r8, #2
   24c80:	1d1a      	adds	r2, r3, #4
   24c82:	681b      	ldr	r3, [r3, #0]
   24c84:	9203      	str	r2, [sp, #12]
   24c86:	2b00      	cmp	r3, #0
   24c88:	bfb8      	it	lt
   24c8a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   24c8e:	9305      	str	r3, [sp, #20]
   24c90:	4d31      	ldr	r5, [pc, #196]	; (24d58 <_vfiprintf_r+0x21c>)
   24c92:	2203      	movs	r2, #3
   24c94:	f898 1000 	ldrb.w	r1, [r8]
   24c98:	4628      	mov	r0, r5
   24c9a:	f7fa fbd9 	bl	1f450 <memchr>
   24c9e:	b140      	cbz	r0, 24cb2 <_vfiprintf_r+0x176>
   24ca0:	2340      	movs	r3, #64	; 0x40
   24ca2:	1b40      	subs	r0, r0, r5
   24ca4:	fa03 f000 	lsl.w	r0, r3, r0
   24ca8:	9b04      	ldr	r3, [sp, #16]
   24caa:	f108 0801 	add.w	r8, r8, #1
   24cae:	4303      	orrs	r3, r0
   24cb0:	9304      	str	r3, [sp, #16]
   24cb2:	f898 1000 	ldrb.w	r1, [r8]
   24cb6:	2206      	movs	r2, #6
   24cb8:	4828      	ldr	r0, [pc, #160]	; (24d5c <_vfiprintf_r+0x220>)
   24cba:	f108 0701 	add.w	r7, r8, #1
   24cbe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   24cc2:	f7fa fbc5 	bl	1f450 <memchr>
   24cc6:	2800      	cmp	r0, #0
   24cc8:	d034      	beq.n	24d34 <_vfiprintf_r+0x1f8>
   24cca:	4b25      	ldr	r3, [pc, #148]	; (24d60 <_vfiprintf_r+0x224>)
   24ccc:	bb03      	cbnz	r3, 24d10 <_vfiprintf_r+0x1d4>
   24cce:	9b03      	ldr	r3, [sp, #12]
   24cd0:	3307      	adds	r3, #7
   24cd2:	f023 0307 	bic.w	r3, r3, #7
   24cd6:	3308      	adds	r3, #8
   24cd8:	9303      	str	r3, [sp, #12]
   24cda:	9b09      	ldr	r3, [sp, #36]	; 0x24
   24cdc:	444b      	add	r3, r9
   24cde:	9309      	str	r3, [sp, #36]	; 0x24
   24ce0:	e74c      	b.n	24b7c <_vfiprintf_r+0x40>
   24ce2:	fb00 3202 	mla	r2, r0, r2, r3
   24ce6:	2101      	movs	r1, #1
   24ce8:	e786      	b.n	24bf8 <_vfiprintf_r+0xbc>
   24cea:	2300      	movs	r3, #0
   24cec:	250a      	movs	r5, #10
   24cee:	4618      	mov	r0, r3
   24cf0:	9305      	str	r3, [sp, #20]
   24cf2:	4688      	mov	r8, r1
   24cf4:	f898 2000 	ldrb.w	r2, [r8]
   24cf8:	3101      	adds	r1, #1
   24cfa:	3a30      	subs	r2, #48	; 0x30
   24cfc:	2a09      	cmp	r2, #9
   24cfe:	d903      	bls.n	24d08 <_vfiprintf_r+0x1cc>
   24d00:	2b00      	cmp	r3, #0
   24d02:	d0c5      	beq.n	24c90 <_vfiprintf_r+0x154>
   24d04:	9005      	str	r0, [sp, #20]
   24d06:	e7c3      	b.n	24c90 <_vfiprintf_r+0x154>
   24d08:	fb05 2000 	mla	r0, r5, r0, r2
   24d0c:	2301      	movs	r3, #1
   24d0e:	e7f0      	b.n	24cf2 <_vfiprintf_r+0x1b6>
   24d10:	ab03      	add	r3, sp, #12
   24d12:	9300      	str	r3, [sp, #0]
   24d14:	4622      	mov	r2, r4
   24d16:	4b13      	ldr	r3, [pc, #76]	; (24d64 <_vfiprintf_r+0x228>)
   24d18:	a904      	add	r1, sp, #16
   24d1a:	4630      	mov	r0, r6
   24d1c:	f7fa ffc4 	bl	1fca8 <_printf_float>
   24d20:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   24d24:	4681      	mov	r9, r0
   24d26:	d1d8      	bne.n	24cda <_vfiprintf_r+0x19e>
   24d28:	89a3      	ldrh	r3, [r4, #12]
   24d2a:	065b      	lsls	r3, r3, #25
   24d2c:	f53f af7d 	bmi.w	24c2a <_vfiprintf_r+0xee>
   24d30:	9809      	ldr	r0, [sp, #36]	; 0x24
   24d32:	e77c      	b.n	24c2e <_vfiprintf_r+0xf2>
   24d34:	ab03      	add	r3, sp, #12
   24d36:	9300      	str	r3, [sp, #0]
   24d38:	4622      	mov	r2, r4
   24d3a:	4b0a      	ldr	r3, [pc, #40]	; (24d64 <_vfiprintf_r+0x228>)
   24d3c:	a904      	add	r1, sp, #16
   24d3e:	4630      	mov	r0, r6
   24d40:	f7fb fa62 	bl	20208 <_printf_i>
   24d44:	e7ec      	b.n	24d20 <_vfiprintf_r+0x1e4>
   24d46:	bf00      	nop
   24d48:	00028d28 	.word	0x00028d28
   24d4c:	00029164 	.word	0x00029164
   24d50:	00028d48 	.word	0x00028d48
   24d54:	00028d08 	.word	0x00028d08
   24d58:	0002916a 	.word	0x0002916a
   24d5c:	0002916e 	.word	0x0002916e
   24d60:	0001fca9 	.word	0x0001fca9
   24d64:	00024b19 	.word	0x00024b19

00024d68 <__svfiscanf_r>:
__svfscanf_r():
   24d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d6c:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   24d70:	9301      	str	r3, [sp, #4]
   24d72:	2300      	movs	r3, #0
   24d74:	4606      	mov	r6, r0
   24d76:	460c      	mov	r4, r1
   24d78:	4692      	mov	sl, r2
   24d7a:	270a      	movs	r7, #10
   24d7c:	9346      	str	r3, [sp, #280]	; 0x118
   24d7e:	9347      	str	r3, [sp, #284]	; 0x11c
   24d80:	4b9f      	ldr	r3, [pc, #636]	; (25000 <__svfiscanf_r+0x298>)
   24d82:	f10d 080c 	add.w	r8, sp, #12
   24d86:	93a2      	str	r3, [sp, #648]	; 0x288
   24d88:	4b9e      	ldr	r3, [pc, #632]	; (25004 <__svfiscanf_r+0x29c>)
   24d8a:	f8df 927c 	ldr.w	r9, [pc, #636]	; 25008 <__svfiscanf_r+0x2a0>
   24d8e:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   24d92:	93a3      	str	r3, [sp, #652]	; 0x28c
   24d94:	f89a 3000 	ldrb.w	r3, [sl]
   24d98:	2b00      	cmp	r3, #0
   24d9a:	f000 812f 	beq.w	24ffc <__svfiscanf_r+0x294>
   24d9e:	f7fa fac3 	bl	1f328 <__locale_ctype_ptr>
   24da2:	f89a b000 	ldrb.w	fp, [sl]
   24da6:	4458      	add	r0, fp
   24da8:	7843      	ldrb	r3, [r0, #1]
   24daa:	f013 0308 	ands.w	r3, r3, #8
   24dae:	d143      	bne.n	24e38 <__svfiscanf_r+0xd0>
   24db0:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   24db4:	f10a 0501 	add.w	r5, sl, #1
   24db8:	f040 8099 	bne.w	24eee <__svfiscanf_r+0x186>
   24dbc:	9345      	str	r3, [sp, #276]	; 0x114
   24dbe:	9343      	str	r3, [sp, #268]	; 0x10c
   24dc0:	f89a 3001 	ldrb.w	r3, [sl, #1]
   24dc4:	2b2a      	cmp	r3, #42	; 0x2a
   24dc6:	d103      	bne.n	24dd0 <__svfiscanf_r+0x68>
   24dc8:	2310      	movs	r3, #16
   24dca:	f10a 0502 	add.w	r5, sl, #2
   24dce:	9343      	str	r3, [sp, #268]	; 0x10c
   24dd0:	7829      	ldrb	r1, [r5, #0]
   24dd2:	46aa      	mov	sl, r5
   24dd4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   24dd8:	2a09      	cmp	r2, #9
   24dda:	f105 0501 	add.w	r5, r5, #1
   24dde:	d941      	bls.n	24e64 <__svfiscanf_r+0xfc>
   24de0:	2203      	movs	r2, #3
   24de2:	4889      	ldr	r0, [pc, #548]	; (25008 <__svfiscanf_r+0x2a0>)
   24de4:	f7fa fb34 	bl	1f450 <memchr>
   24de8:	b138      	cbz	r0, 24dfa <__svfiscanf_r+0x92>
   24dea:	eba0 0309 	sub.w	r3, r0, r9
   24dee:	2001      	movs	r0, #1
   24df0:	46aa      	mov	sl, r5
   24df2:	4098      	lsls	r0, r3
   24df4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24df6:	4318      	orrs	r0, r3
   24df8:	9043      	str	r0, [sp, #268]	; 0x10c
   24dfa:	f89a 3000 	ldrb.w	r3, [sl]
   24dfe:	f10a 0501 	add.w	r5, sl, #1
   24e02:	2b67      	cmp	r3, #103	; 0x67
   24e04:	d84a      	bhi.n	24e9c <__svfiscanf_r+0x134>
   24e06:	2b65      	cmp	r3, #101	; 0x65
   24e08:	f080 80b7 	bcs.w	24f7a <__svfiscanf_r+0x212>
   24e0c:	2b47      	cmp	r3, #71	; 0x47
   24e0e:	d82f      	bhi.n	24e70 <__svfiscanf_r+0x108>
   24e10:	2b45      	cmp	r3, #69	; 0x45
   24e12:	f080 80b2 	bcs.w	24f7a <__svfiscanf_r+0x212>
   24e16:	2b00      	cmp	r3, #0
   24e18:	f000 8082 	beq.w	24f20 <__svfiscanf_r+0x1b8>
   24e1c:	2b25      	cmp	r3, #37	; 0x25
   24e1e:	d066      	beq.n	24eee <__svfiscanf_r+0x186>
   24e20:	2303      	movs	r3, #3
   24e22:	9744      	str	r7, [sp, #272]	; 0x110
   24e24:	9349      	str	r3, [sp, #292]	; 0x124
   24e26:	e045      	b.n	24eb4 <__svfiscanf_r+0x14c>
   24e28:	9947      	ldr	r1, [sp, #284]	; 0x11c
   24e2a:	3301      	adds	r3, #1
   24e2c:	3101      	adds	r1, #1
   24e2e:	9147      	str	r1, [sp, #284]	; 0x11c
   24e30:	6861      	ldr	r1, [r4, #4]
   24e32:	6023      	str	r3, [r4, #0]
   24e34:	3901      	subs	r1, #1
   24e36:	6061      	str	r1, [r4, #4]
   24e38:	6863      	ldr	r3, [r4, #4]
   24e3a:	2b00      	cmp	r3, #0
   24e3c:	dd0b      	ble.n	24e56 <__svfiscanf_r+0xee>
   24e3e:	f7fa fa73 	bl	1f328 <__locale_ctype_ptr>
   24e42:	6823      	ldr	r3, [r4, #0]
   24e44:	7819      	ldrb	r1, [r3, #0]
   24e46:	4408      	add	r0, r1
   24e48:	7841      	ldrb	r1, [r0, #1]
   24e4a:	070d      	lsls	r5, r1, #28
   24e4c:	d4ec      	bmi.n	24e28 <__svfiscanf_r+0xc0>
   24e4e:	f10a 0501 	add.w	r5, sl, #1
   24e52:	46aa      	mov	sl, r5
   24e54:	e79e      	b.n	24d94 <__svfiscanf_r+0x2c>
   24e56:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24e58:	4621      	mov	r1, r4
   24e5a:	4630      	mov	r0, r6
   24e5c:	4798      	blx	r3
   24e5e:	2800      	cmp	r0, #0
   24e60:	d0ed      	beq.n	24e3e <__svfiscanf_r+0xd6>
   24e62:	e7f4      	b.n	24e4e <__svfiscanf_r+0xe6>
   24e64:	9b45      	ldr	r3, [sp, #276]	; 0x114
   24e66:	fb07 1303 	mla	r3, r7, r3, r1
   24e6a:	3b30      	subs	r3, #48	; 0x30
   24e6c:	9345      	str	r3, [sp, #276]	; 0x114
   24e6e:	e7af      	b.n	24dd0 <__svfiscanf_r+0x68>
   24e70:	2b5b      	cmp	r3, #91	; 0x5b
   24e72:	d061      	beq.n	24f38 <__svfiscanf_r+0x1d0>
   24e74:	d80c      	bhi.n	24e90 <__svfiscanf_r+0x128>
   24e76:	2b58      	cmp	r3, #88	; 0x58
   24e78:	d1d2      	bne.n	24e20 <__svfiscanf_r+0xb8>
   24e7a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24e7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   24e80:	9243      	str	r2, [sp, #268]	; 0x10c
   24e82:	2210      	movs	r2, #16
   24e84:	9244      	str	r2, [sp, #272]	; 0x110
   24e86:	2b6f      	cmp	r3, #111	; 0x6f
   24e88:	bfb4      	ite	lt
   24e8a:	2303      	movlt	r3, #3
   24e8c:	2304      	movge	r3, #4
   24e8e:	e010      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24e90:	2b63      	cmp	r3, #99	; 0x63
   24e92:	d05c      	beq.n	24f4e <__svfiscanf_r+0x1e6>
   24e94:	2b64      	cmp	r3, #100	; 0x64
   24e96:	d1c3      	bne.n	24e20 <__svfiscanf_r+0xb8>
   24e98:	9744      	str	r7, [sp, #272]	; 0x110
   24e9a:	e7f4      	b.n	24e86 <__svfiscanf_r+0x11e>
   24e9c:	2b70      	cmp	r3, #112	; 0x70
   24e9e:	d042      	beq.n	24f26 <__svfiscanf_r+0x1be>
   24ea0:	d81d      	bhi.n	24ede <__svfiscanf_r+0x176>
   24ea2:	2b6e      	cmp	r3, #110	; 0x6e
   24ea4:	d059      	beq.n	24f5a <__svfiscanf_r+0x1f2>
   24ea6:	d843      	bhi.n	24f30 <__svfiscanf_r+0x1c8>
   24ea8:	2b69      	cmp	r3, #105	; 0x69
   24eaa:	d1b9      	bne.n	24e20 <__svfiscanf_r+0xb8>
   24eac:	2300      	movs	r3, #0
   24eae:	9344      	str	r3, [sp, #272]	; 0x110
   24eb0:	2303      	movs	r3, #3
   24eb2:	9349      	str	r3, [sp, #292]	; 0x124
   24eb4:	6863      	ldr	r3, [r4, #4]
   24eb6:	2b00      	cmp	r3, #0
   24eb8:	dd61      	ble.n	24f7e <__svfiscanf_r+0x216>
   24eba:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24ebc:	0659      	lsls	r1, r3, #25
   24ebe:	d56f      	bpl.n	24fa0 <__svfiscanf_r+0x238>
   24ec0:	9b49      	ldr	r3, [sp, #292]	; 0x124
   24ec2:	2b02      	cmp	r3, #2
   24ec4:	dc7c      	bgt.n	24fc0 <__svfiscanf_r+0x258>
   24ec6:	ab01      	add	r3, sp, #4
   24ec8:	4622      	mov	r2, r4
   24eca:	a943      	add	r1, sp, #268	; 0x10c
   24ecc:	4630      	mov	r0, r6
   24ece:	f000 f8c7 	bl	25060 <_scanf_chars>
   24ed2:	2801      	cmp	r0, #1
   24ed4:	f000 8092 	beq.w	24ffc <__svfiscanf_r+0x294>
   24ed8:	2802      	cmp	r0, #2
   24eda:	d1ba      	bne.n	24e52 <__svfiscanf_r+0xea>
   24edc:	e01d      	b.n	24f1a <__svfiscanf_r+0x1b2>
   24ede:	2b75      	cmp	r3, #117	; 0x75
   24ee0:	d0da      	beq.n	24e98 <__svfiscanf_r+0x130>
   24ee2:	2b78      	cmp	r3, #120	; 0x78
   24ee4:	d0c9      	beq.n	24e7a <__svfiscanf_r+0x112>
   24ee6:	2b73      	cmp	r3, #115	; 0x73
   24ee8:	d19a      	bne.n	24e20 <__svfiscanf_r+0xb8>
   24eea:	2302      	movs	r3, #2
   24eec:	e7e1      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24eee:	6863      	ldr	r3, [r4, #4]
   24ef0:	2b00      	cmp	r3, #0
   24ef2:	dd0c      	ble.n	24f0e <__svfiscanf_r+0x1a6>
   24ef4:	6823      	ldr	r3, [r4, #0]
   24ef6:	781a      	ldrb	r2, [r3, #0]
   24ef8:	4593      	cmp	fp, r2
   24efa:	d17f      	bne.n	24ffc <__svfiscanf_r+0x294>
   24efc:	3301      	adds	r3, #1
   24efe:	6862      	ldr	r2, [r4, #4]
   24f00:	6023      	str	r3, [r4, #0]
   24f02:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   24f04:	3a01      	subs	r2, #1
   24f06:	3301      	adds	r3, #1
   24f08:	6062      	str	r2, [r4, #4]
   24f0a:	9347      	str	r3, [sp, #284]	; 0x11c
   24f0c:	e7a1      	b.n	24e52 <__svfiscanf_r+0xea>
   24f0e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24f10:	4621      	mov	r1, r4
   24f12:	4630      	mov	r0, r6
   24f14:	4798      	blx	r3
   24f16:	2800      	cmp	r0, #0
   24f18:	d0ec      	beq.n	24ef4 <__svfiscanf_r+0x18c>
   24f1a:	9846      	ldr	r0, [sp, #280]	; 0x118
   24f1c:	2800      	cmp	r0, #0
   24f1e:	d163      	bne.n	24fe8 <__svfiscanf_r+0x280>
   24f20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   24f24:	e066      	b.n	24ff4 <__svfiscanf_r+0x28c>
   24f26:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24f28:	f042 0220 	orr.w	r2, r2, #32
   24f2c:	9243      	str	r2, [sp, #268]	; 0x10c
   24f2e:	e7a4      	b.n	24e7a <__svfiscanf_r+0x112>
   24f30:	2308      	movs	r3, #8
   24f32:	9344      	str	r3, [sp, #272]	; 0x110
   24f34:	2304      	movs	r3, #4
   24f36:	e7bc      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24f38:	4629      	mov	r1, r5
   24f3a:	4640      	mov	r0, r8
   24f3c:	f000 f9fc 	bl	25338 <__sccl>
   24f40:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24f42:	4605      	mov	r5, r0
   24f44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   24f48:	9343      	str	r3, [sp, #268]	; 0x10c
   24f4a:	2301      	movs	r3, #1
   24f4c:	e7b1      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24f4e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   24f50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   24f54:	9343      	str	r3, [sp, #268]	; 0x10c
   24f56:	2300      	movs	r3, #0
   24f58:	e7ab      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24f5a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   24f5c:	06d0      	lsls	r0, r2, #27
   24f5e:	f53f af78 	bmi.w	24e52 <__svfiscanf_r+0xea>
   24f62:	f012 0f01 	tst.w	r2, #1
   24f66:	9a01      	ldr	r2, [sp, #4]
   24f68:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   24f6a:	f102 0104 	add.w	r1, r2, #4
   24f6e:	9101      	str	r1, [sp, #4]
   24f70:	6812      	ldr	r2, [r2, #0]
   24f72:	bf14      	ite	ne
   24f74:	8013      	strhne	r3, [r2, #0]
   24f76:	6013      	streq	r3, [r2, #0]
   24f78:	e76b      	b.n	24e52 <__svfiscanf_r+0xea>
   24f7a:	2305      	movs	r3, #5
   24f7c:	e799      	b.n	24eb2 <__svfiscanf_r+0x14a>
   24f7e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24f80:	4621      	mov	r1, r4
   24f82:	4630      	mov	r0, r6
   24f84:	4798      	blx	r3
   24f86:	2800      	cmp	r0, #0
   24f88:	d097      	beq.n	24eba <__svfiscanf_r+0x152>
   24f8a:	e7c6      	b.n	24f1a <__svfiscanf_r+0x1b2>
   24f8c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   24f8e:	3201      	adds	r2, #1
   24f90:	9247      	str	r2, [sp, #284]	; 0x11c
   24f92:	6862      	ldr	r2, [r4, #4]
   24f94:	3a01      	subs	r2, #1
   24f96:	2a00      	cmp	r2, #0
   24f98:	6062      	str	r2, [r4, #4]
   24f9a:	dd0a      	ble.n	24fb2 <__svfiscanf_r+0x24a>
   24f9c:	3301      	adds	r3, #1
   24f9e:	6023      	str	r3, [r4, #0]
   24fa0:	f7fa f9c2 	bl	1f328 <__locale_ctype_ptr>
   24fa4:	6823      	ldr	r3, [r4, #0]
   24fa6:	781a      	ldrb	r2, [r3, #0]
   24fa8:	4410      	add	r0, r2
   24faa:	7842      	ldrb	r2, [r0, #1]
   24fac:	0712      	lsls	r2, r2, #28
   24fae:	d4ed      	bmi.n	24f8c <__svfiscanf_r+0x224>
   24fb0:	e786      	b.n	24ec0 <__svfiscanf_r+0x158>
   24fb2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   24fb4:	4621      	mov	r1, r4
   24fb6:	4630      	mov	r0, r6
   24fb8:	4798      	blx	r3
   24fba:	2800      	cmp	r0, #0
   24fbc:	d0f0      	beq.n	24fa0 <__svfiscanf_r+0x238>
   24fbe:	e7ac      	b.n	24f1a <__svfiscanf_r+0x1b2>
   24fc0:	2b04      	cmp	r3, #4
   24fc2:	dc06      	bgt.n	24fd2 <__svfiscanf_r+0x26a>
   24fc4:	ab01      	add	r3, sp, #4
   24fc6:	4622      	mov	r2, r4
   24fc8:	a943      	add	r1, sp, #268	; 0x10c
   24fca:	4630      	mov	r0, r6
   24fcc:	f000 f8ac 	bl	25128 <_scanf_i>
   24fd0:	e77f      	b.n	24ed2 <__svfiscanf_r+0x16a>
   24fd2:	4b0e      	ldr	r3, [pc, #56]	; (2500c <__svfiscanf_r+0x2a4>)
   24fd4:	2b00      	cmp	r3, #0
   24fd6:	f43f af3c 	beq.w	24e52 <__svfiscanf_r+0xea>
   24fda:	ab01      	add	r3, sp, #4
   24fdc:	4622      	mov	r2, r4
   24fde:	a943      	add	r1, sp, #268	; 0x10c
   24fe0:	4630      	mov	r0, r6
   24fe2:	f7fb fa31 	bl	20448 <_scanf_float>
   24fe6:	e774      	b.n	24ed2 <__svfiscanf_r+0x16a>
   24fe8:	89a3      	ldrh	r3, [r4, #12]
   24fea:	f013 0f40 	tst.w	r3, #64	; 0x40
   24fee:	bf18      	it	ne
   24ff0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   24ff4:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   24ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ffc:	9846      	ldr	r0, [sp, #280]	; 0x118
   24ffe:	e7f9      	b.n	24ff4 <__svfiscanf_r+0x28c>
   25000:	00025555 	.word	0x00025555
   25004:	00020a0d 	.word	0x00020a0d
   25008:	0002916a 	.word	0x0002916a
   2500c:	00020449 	.word	0x00020449

00025010 <_vfiscanf_r>:
_vfscanf_r():
   25010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   25014:	460c      	mov	r4, r1
   25016:	4616      	mov	r6, r2
   25018:	461f      	mov	r7, r3
   2501a:	4605      	mov	r5, r0
   2501c:	b118      	cbz	r0, 25026 <_vfiscanf_r+0x16>
   2501e:	6983      	ldr	r3, [r0, #24]
   25020:	b90b      	cbnz	r3, 25026 <_vfiscanf_r+0x16>
   25022:	f7f9 fe85 	bl	1ed30 <__sinit>
   25026:	4b0b      	ldr	r3, [pc, #44]	; (25054 <_vfiscanf_r+0x44>)
   25028:	429c      	cmp	r4, r3
   2502a:	d108      	bne.n	2503e <_vfiscanf_r+0x2e>
   2502c:	686c      	ldr	r4, [r5, #4]
   2502e:	463b      	mov	r3, r7
   25030:	4632      	mov	r2, r6
   25032:	4621      	mov	r1, r4
   25034:	4628      	mov	r0, r5
   25036:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   2503a:	f7ff be95 	b.w	24d68 <__svfiscanf_r>
   2503e:	4b06      	ldr	r3, [pc, #24]	; (25058 <_vfiscanf_r+0x48>)
   25040:	429c      	cmp	r4, r3
   25042:	d101      	bne.n	25048 <_vfiscanf_r+0x38>
   25044:	68ac      	ldr	r4, [r5, #8]
   25046:	e7f2      	b.n	2502e <_vfiscanf_r+0x1e>
   25048:	4b04      	ldr	r3, [pc, #16]	; (2505c <_vfiscanf_r+0x4c>)
   2504a:	429c      	cmp	r4, r3
   2504c:	bf08      	it	eq
   2504e:	68ec      	ldreq	r4, [r5, #12]
   25050:	e7ed      	b.n	2502e <_vfiscanf_r+0x1e>
   25052:	bf00      	nop
   25054:	00028d28 	.word	0x00028d28
   25058:	00028d48 	.word	0x00028d48
   2505c:	00028d08 	.word	0x00028d08

00025060 <_scanf_chars>:
_scanf_chars():
   25060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   25064:	4615      	mov	r5, r2
   25066:	688a      	ldr	r2, [r1, #8]
   25068:	4680      	mov	r8, r0
   2506a:	460c      	mov	r4, r1
   2506c:	b932      	cbnz	r2, 2507c <_scanf_chars+0x1c>
   2506e:	698a      	ldr	r2, [r1, #24]
   25070:	2a00      	cmp	r2, #0
   25072:	bf0c      	ite	eq
   25074:	2201      	moveq	r2, #1
   25076:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   2507a:	608a      	str	r2, [r1, #8]
   2507c:	2600      	movs	r6, #0
   2507e:	6822      	ldr	r2, [r4, #0]
   25080:	06d1      	lsls	r1, r2, #27
   25082:	bf5f      	itttt	pl
   25084:	681a      	ldrpl	r2, [r3, #0]
   25086:	1d11      	addpl	r1, r2, #4
   25088:	6019      	strpl	r1, [r3, #0]
   2508a:	6817      	ldrpl	r7, [r2, #0]
   2508c:	69a3      	ldr	r3, [r4, #24]
   2508e:	b1db      	cbz	r3, 250c8 <_scanf_chars+0x68>
   25090:	2b01      	cmp	r3, #1
   25092:	d107      	bne.n	250a4 <_scanf_chars+0x44>
   25094:	682b      	ldr	r3, [r5, #0]
   25096:	6962      	ldr	r2, [r4, #20]
   25098:	781b      	ldrb	r3, [r3, #0]
   2509a:	5cd3      	ldrb	r3, [r2, r3]
   2509c:	b9a3      	cbnz	r3, 250c8 <_scanf_chars+0x68>
   2509e:	2e00      	cmp	r6, #0
   250a0:	d131      	bne.n	25106 <_scanf_chars+0xa6>
   250a2:	e006      	b.n	250b2 <_scanf_chars+0x52>
   250a4:	2b02      	cmp	r3, #2
   250a6:	d007      	beq.n	250b8 <_scanf_chars+0x58>
   250a8:	2e00      	cmp	r6, #0
   250aa:	d12c      	bne.n	25106 <_scanf_chars+0xa6>
   250ac:	69a3      	ldr	r3, [r4, #24]
   250ae:	2b01      	cmp	r3, #1
   250b0:	d129      	bne.n	25106 <_scanf_chars+0xa6>
   250b2:	2001      	movs	r0, #1
   250b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   250b8:	f7fa f936 	bl	1f328 <__locale_ctype_ptr>
   250bc:	682b      	ldr	r3, [r5, #0]
   250be:	781b      	ldrb	r3, [r3, #0]
   250c0:	4418      	add	r0, r3
   250c2:	7843      	ldrb	r3, [r0, #1]
   250c4:	071b      	lsls	r3, r3, #28
   250c6:	d4ef      	bmi.n	250a8 <_scanf_chars+0x48>
   250c8:	6823      	ldr	r3, [r4, #0]
   250ca:	3601      	adds	r6, #1
   250cc:	06da      	lsls	r2, r3, #27
   250ce:	bf5e      	ittt	pl
   250d0:	682b      	ldrpl	r3, [r5, #0]
   250d2:	781b      	ldrbpl	r3, [r3, #0]
   250d4:	703b      	strbpl	r3, [r7, #0]
   250d6:	682a      	ldr	r2, [r5, #0]
   250d8:	686b      	ldr	r3, [r5, #4]
   250da:	f102 0201 	add.w	r2, r2, #1
   250de:	602a      	str	r2, [r5, #0]
   250e0:	68a2      	ldr	r2, [r4, #8]
   250e2:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   250e6:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   250ea:	606b      	str	r3, [r5, #4]
   250ec:	bf58      	it	pl
   250ee:	3701      	addpl	r7, #1
   250f0:	60a2      	str	r2, [r4, #8]
   250f2:	b142      	cbz	r2, 25106 <_scanf_chars+0xa6>
   250f4:	2b00      	cmp	r3, #0
   250f6:	dcc9      	bgt.n	2508c <_scanf_chars+0x2c>
   250f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   250fc:	4629      	mov	r1, r5
   250fe:	4640      	mov	r0, r8
   25100:	4798      	blx	r3
   25102:	2800      	cmp	r0, #0
   25104:	d0c2      	beq.n	2508c <_scanf_chars+0x2c>
   25106:	6823      	ldr	r3, [r4, #0]
   25108:	f013 0310 	ands.w	r3, r3, #16
   2510c:	d105      	bne.n	2511a <_scanf_chars+0xba>
   2510e:	68e2      	ldr	r2, [r4, #12]
   25110:	3201      	adds	r2, #1
   25112:	60e2      	str	r2, [r4, #12]
   25114:	69a2      	ldr	r2, [r4, #24]
   25116:	b102      	cbz	r2, 2511a <_scanf_chars+0xba>
   25118:	703b      	strb	r3, [r7, #0]
   2511a:	6923      	ldr	r3, [r4, #16]
   2511c:	2000      	movs	r0, #0
   2511e:	441e      	add	r6, r3
   25120:	6126      	str	r6, [r4, #16]
   25122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   25126:	Address 0x0000000000025126 is out of bounds.


00025128 <_scanf_i>:
_scanf_i():
   25128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2512c:	460c      	mov	r4, r1
   2512e:	469a      	mov	sl, r3
   25130:	4b74      	ldr	r3, [pc, #464]	; (25304 <_scanf_i+0x1dc>)
   25132:	b087      	sub	sp, #28
   25134:	4683      	mov	fp, r0
   25136:	4616      	mov	r6, r2
   25138:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   2513c:	ab03      	add	r3, sp, #12
   2513e:	68a7      	ldr	r7, [r4, #8]
   25140:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   25144:	4b70      	ldr	r3, [pc, #448]	; (25308 <_scanf_i+0x1e0>)
   25146:	69a1      	ldr	r1, [r4, #24]
   25148:	4a70      	ldr	r2, [pc, #448]	; (2530c <_scanf_i+0x1e4>)
   2514a:	f104 091c 	add.w	r9, r4, #28
   2514e:	2903      	cmp	r1, #3
   25150:	bf18      	it	ne
   25152:	461a      	movne	r2, r3
   25154:	1e7b      	subs	r3, r7, #1
   25156:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   2515a:	bf84      	itt	hi
   2515c:	f240 135d 	movwhi	r3, #349	; 0x15d
   25160:	60a3      	strhi	r3, [r4, #8]
   25162:	6823      	ldr	r3, [r4, #0]
   25164:	bf88      	it	hi
   25166:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   2516a:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   2516e:	6023      	str	r3, [r4, #0]
   25170:	bf98      	it	ls
   25172:	2700      	movls	r7, #0
   25174:	464b      	mov	r3, r9
   25176:	f04f 0800 	mov.w	r8, #0
   2517a:	9200      	str	r2, [sp, #0]
   2517c:	bf88      	it	hi
   2517e:	197f      	addhi	r7, r7, r5
   25180:	6831      	ldr	r1, [r6, #0]
   25182:	9301      	str	r3, [sp, #4]
   25184:	ab03      	add	r3, sp, #12
   25186:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   2518a:	2202      	movs	r2, #2
   2518c:	7809      	ldrb	r1, [r1, #0]
   2518e:	f7fa f95f 	bl	1f450 <memchr>
   25192:	9b01      	ldr	r3, [sp, #4]
   25194:	b328      	cbz	r0, 251e2 <_scanf_i+0xba>
   25196:	f1b8 0f01 	cmp.w	r8, #1
   2519a:	d156      	bne.n	2524a <_scanf_i+0x122>
   2519c:	6862      	ldr	r2, [r4, #4]
   2519e:	b92a      	cbnz	r2, 251ac <_scanf_i+0x84>
   251a0:	2208      	movs	r2, #8
   251a2:	6062      	str	r2, [r4, #4]
   251a4:	6822      	ldr	r2, [r4, #0]
   251a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   251aa:	6022      	str	r2, [r4, #0]
   251ac:	6822      	ldr	r2, [r4, #0]
   251ae:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   251b2:	6022      	str	r2, [r4, #0]
   251b4:	68a2      	ldr	r2, [r4, #8]
   251b6:	1e51      	subs	r1, r2, #1
   251b8:	60a1      	str	r1, [r4, #8]
   251ba:	b192      	cbz	r2, 251e2 <_scanf_i+0xba>
   251bc:	6832      	ldr	r2, [r6, #0]
   251be:	1c5d      	adds	r5, r3, #1
   251c0:	1c51      	adds	r1, r2, #1
   251c2:	6031      	str	r1, [r6, #0]
   251c4:	7812      	ldrb	r2, [r2, #0]
   251c6:	701a      	strb	r2, [r3, #0]
   251c8:	6873      	ldr	r3, [r6, #4]
   251ca:	3b01      	subs	r3, #1
   251cc:	2b00      	cmp	r3, #0
   251ce:	6073      	str	r3, [r6, #4]
   251d0:	dc06      	bgt.n	251e0 <_scanf_i+0xb8>
   251d2:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   251d6:	4631      	mov	r1, r6
   251d8:	4658      	mov	r0, fp
   251da:	4798      	blx	r3
   251dc:	2800      	cmp	r0, #0
   251de:	d177      	bne.n	252d0 <_scanf_i+0x1a8>
   251e0:	462b      	mov	r3, r5
   251e2:	f108 0801 	add.w	r8, r8, #1
   251e6:	f1b8 0f03 	cmp.w	r8, #3
   251ea:	d1c9      	bne.n	25180 <_scanf_i+0x58>
   251ec:	6862      	ldr	r2, [r4, #4]
   251ee:	b90a      	cbnz	r2, 251f4 <_scanf_i+0xcc>
   251f0:	220a      	movs	r2, #10
   251f2:	6062      	str	r2, [r4, #4]
   251f4:	6862      	ldr	r2, [r4, #4]
   251f6:	4946      	ldr	r1, [pc, #280]	; (25310 <_scanf_i+0x1e8>)
   251f8:	6960      	ldr	r0, [r4, #20]
   251fa:	1a89      	subs	r1, r1, r2
   251fc:	9301      	str	r3, [sp, #4]
   251fe:	f000 f89b 	bl	25338 <__sccl>
   25202:	9b01      	ldr	r3, [sp, #4]
   25204:	f04f 0800 	mov.w	r8, #0
   25208:	461d      	mov	r5, r3
   2520a:	68a3      	ldr	r3, [r4, #8]
   2520c:	2b00      	cmp	r3, #0
   2520e:	d039      	beq.n	25284 <_scanf_i+0x15c>
   25210:	6831      	ldr	r1, [r6, #0]
   25212:	6960      	ldr	r0, [r4, #20]
   25214:	780a      	ldrb	r2, [r1, #0]
   25216:	5c80      	ldrb	r0, [r0, r2]
   25218:	2800      	cmp	r0, #0
   2521a:	d033      	beq.n	25284 <_scanf_i+0x15c>
   2521c:	2a30      	cmp	r2, #48	; 0x30
   2521e:	6822      	ldr	r2, [r4, #0]
   25220:	d121      	bne.n	25266 <_scanf_i+0x13e>
   25222:	0510      	lsls	r0, r2, #20
   25224:	d51f      	bpl.n	25266 <_scanf_i+0x13e>
   25226:	f108 0801 	add.w	r8, r8, #1
   2522a:	b117      	cbz	r7, 25232 <_scanf_i+0x10a>
   2522c:	3301      	adds	r3, #1
   2522e:	3f01      	subs	r7, #1
   25230:	60a3      	str	r3, [r4, #8]
   25232:	6873      	ldr	r3, [r6, #4]
   25234:	3b01      	subs	r3, #1
   25236:	2b00      	cmp	r3, #0
   25238:	6073      	str	r3, [r6, #4]
   2523a:	dd1c      	ble.n	25276 <_scanf_i+0x14e>
   2523c:	6833      	ldr	r3, [r6, #0]
   2523e:	3301      	adds	r3, #1
   25240:	6033      	str	r3, [r6, #0]
   25242:	68a3      	ldr	r3, [r4, #8]
   25244:	3b01      	subs	r3, #1
   25246:	60a3      	str	r3, [r4, #8]
   25248:	e7df      	b.n	2520a <_scanf_i+0xe2>
   2524a:	f1b8 0f02 	cmp.w	r8, #2
   2524e:	d1b1      	bne.n	251b4 <_scanf_i+0x8c>
   25250:	6822      	ldr	r2, [r4, #0]
   25252:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   25256:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   2525a:	d1c2      	bne.n	251e2 <_scanf_i+0xba>
   2525c:	2110      	movs	r1, #16
   2525e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   25262:	6061      	str	r1, [r4, #4]
   25264:	e7a5      	b.n	251b2 <_scanf_i+0x8a>
   25266:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   2526a:	6022      	str	r2, [r4, #0]
   2526c:	780b      	ldrb	r3, [r1, #0]
   2526e:	3501      	adds	r5, #1
   25270:	f805 3c01 	strb.w	r3, [r5, #-1]
   25274:	e7dd      	b.n	25232 <_scanf_i+0x10a>
   25276:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2527a:	4631      	mov	r1, r6
   2527c:	4658      	mov	r0, fp
   2527e:	4798      	blx	r3
   25280:	2800      	cmp	r0, #0
   25282:	d0de      	beq.n	25242 <_scanf_i+0x11a>
   25284:	6823      	ldr	r3, [r4, #0]
   25286:	05d9      	lsls	r1, r3, #23
   25288:	d50c      	bpl.n	252a4 <_scanf_i+0x17c>
   2528a:	454d      	cmp	r5, r9
   2528c:	d908      	bls.n	252a0 <_scanf_i+0x178>
   2528e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   25292:	1e6f      	subs	r7, r5, #1
   25294:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   25298:	4632      	mov	r2, r6
   2529a:	4658      	mov	r0, fp
   2529c:	4798      	blx	r3
   2529e:	463d      	mov	r5, r7
   252a0:	454d      	cmp	r5, r9
   252a2:	d02c      	beq.n	252fe <_scanf_i+0x1d6>
   252a4:	6822      	ldr	r2, [r4, #0]
   252a6:	f012 0210 	ands.w	r2, r2, #16
   252aa:	d11e      	bne.n	252ea <_scanf_i+0x1c2>
   252ac:	702a      	strb	r2, [r5, #0]
   252ae:	6863      	ldr	r3, [r4, #4]
   252b0:	4649      	mov	r1, r9
   252b2:	4658      	mov	r0, fp
   252b4:	9e00      	ldr	r6, [sp, #0]
   252b6:	47b0      	blx	r6
   252b8:	6822      	ldr	r2, [r4, #0]
   252ba:	f8da 3000 	ldr.w	r3, [sl]
   252be:	f012 0f20 	tst.w	r2, #32
   252c2:	d008      	beq.n	252d6 <_scanf_i+0x1ae>
   252c4:	1d1a      	adds	r2, r3, #4
   252c6:	f8ca 2000 	str.w	r2, [sl]
   252ca:	681b      	ldr	r3, [r3, #0]
   252cc:	6018      	str	r0, [r3, #0]
   252ce:	e009      	b.n	252e4 <_scanf_i+0x1bc>
   252d0:	f04f 0800 	mov.w	r8, #0
   252d4:	e7d6      	b.n	25284 <_scanf_i+0x15c>
   252d6:	07d2      	lsls	r2, r2, #31
   252d8:	d5f4      	bpl.n	252c4 <_scanf_i+0x19c>
   252da:	1d1a      	adds	r2, r3, #4
   252dc:	f8ca 2000 	str.w	r2, [sl]
   252e0:	681b      	ldr	r3, [r3, #0]
   252e2:	8018      	strh	r0, [r3, #0]
   252e4:	68e3      	ldr	r3, [r4, #12]
   252e6:	3301      	adds	r3, #1
   252e8:	60e3      	str	r3, [r4, #12]
   252ea:	2000      	movs	r0, #0
   252ec:	eba5 0509 	sub.w	r5, r5, r9
   252f0:	44a8      	add	r8, r5
   252f2:	6925      	ldr	r5, [r4, #16]
   252f4:	4445      	add	r5, r8
   252f6:	6125      	str	r5, [r4, #16]
   252f8:	b007      	add	sp, #28
   252fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252fe:	2001      	movs	r0, #1
   25300:	e7fa      	b.n	252f8 <_scanf_i+0x1d0>
   25302:	bf00      	nop
   25304:	00029178 	.word	0x00029178
   25308:	00025491 	.word	0x00025491
   2530c:	00021e99 	.word	0x00021e99
   25310:	00029194 	.word	0x00029194

00025314 <_read_r>:
_read_r():
   25314:	b538      	push	{r3, r4, r5, lr}
   25316:	4605      	mov	r5, r0
   25318:	4608      	mov	r0, r1
   2531a:	4611      	mov	r1, r2
   2531c:	2200      	movs	r2, #0
   2531e:	4c05      	ldr	r4, [pc, #20]	; (25334 <_read_r+0x20>)
   25320:	6022      	str	r2, [r4, #0]
   25322:	461a      	mov	r2, r3
   25324:	f7f2 f826 	bl	17374 <_read>
   25328:	1c43      	adds	r3, r0, #1
   2532a:	d102      	bne.n	25332 <_read_r+0x1e>
   2532c:	6823      	ldr	r3, [r4, #0]
   2532e:	b103      	cbz	r3, 25332 <_read_r+0x1e>
   25330:	602b      	str	r3, [r5, #0]
   25332:	bd38      	pop	{r3, r4, r5, pc}
   25334:	2007c984 	.word	0x2007c984

00025338 <__sccl>:
__sccl():
   25338:	b570      	push	{r4, r5, r6, lr}
   2533a:	780b      	ldrb	r3, [r1, #0]
   2533c:	1e44      	subs	r4, r0, #1
   2533e:	2b5e      	cmp	r3, #94	; 0x5e
   25340:	bf13      	iteet	ne
   25342:	1c4a      	addne	r2, r1, #1
   25344:	1c8a      	addeq	r2, r1, #2
   25346:	784b      	ldrbeq	r3, [r1, #1]
   25348:	2100      	movne	r1, #0
   2534a:	bf08      	it	eq
   2534c:	2101      	moveq	r1, #1
   2534e:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   25352:	f804 1f01 	strb.w	r1, [r4, #1]!
   25356:	42a5      	cmp	r5, r4
   25358:	d1fb      	bne.n	25352 <__sccl+0x1a>
   2535a:	b913      	cbnz	r3, 25362 <__sccl+0x2a>
   2535c:	3a01      	subs	r2, #1
   2535e:	4610      	mov	r0, r2
   25360:	bd70      	pop	{r4, r5, r6, pc}
   25362:	f081 0401 	eor.w	r4, r1, #1
   25366:	4611      	mov	r1, r2
   25368:	54c4      	strb	r4, [r0, r3]
   2536a:	780d      	ldrb	r5, [r1, #0]
   2536c:	1c4a      	adds	r2, r1, #1
   2536e:	2d2d      	cmp	r5, #45	; 0x2d
   25370:	d006      	beq.n	25380 <__sccl+0x48>
   25372:	2d5d      	cmp	r5, #93	; 0x5d
   25374:	d0f3      	beq.n	2535e <__sccl+0x26>
   25376:	b90d      	cbnz	r5, 2537c <__sccl+0x44>
   25378:	460a      	mov	r2, r1
   2537a:	e7f0      	b.n	2535e <__sccl+0x26>
   2537c:	462b      	mov	r3, r5
   2537e:	e7f2      	b.n	25366 <__sccl+0x2e>
   25380:	784e      	ldrb	r6, [r1, #1]
   25382:	2e5d      	cmp	r6, #93	; 0x5d
   25384:	d0fa      	beq.n	2537c <__sccl+0x44>
   25386:	42b3      	cmp	r3, r6
   25388:	dcf8      	bgt.n	2537c <__sccl+0x44>
   2538a:	3102      	adds	r1, #2
   2538c:	3301      	adds	r3, #1
   2538e:	429e      	cmp	r6, r3
   25390:	54c4      	strb	r4, [r0, r3]
   25392:	dcfb      	bgt.n	2538c <__sccl+0x54>
   25394:	e7e9      	b.n	2536a <__sccl+0x32>

00025396 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   25396:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2539a:	4680      	mov	r8, r0
   2539c:	4689      	mov	r9, r1
   2539e:	4692      	mov	sl, r2
   253a0:	461e      	mov	r6, r3
   253a2:	460f      	mov	r7, r1
   253a4:	463d      	mov	r5, r7
   253a6:	9808      	ldr	r0, [sp, #32]
   253a8:	f815 4b01 	ldrb.w	r4, [r5], #1
   253ac:	f7f9 ffb8 	bl	1f320 <__locale_ctype_ptr_l>
   253b0:	4420      	add	r0, r4
   253b2:	7843      	ldrb	r3, [r0, #1]
   253b4:	f013 0308 	ands.w	r3, r3, #8
   253b8:	d10a      	bne.n	253d0 <_strtoul_l.isra.0+0x3a>
   253ba:	2c2d      	cmp	r4, #45	; 0x2d
   253bc:	d10a      	bne.n	253d4 <_strtoul_l.isra.0+0x3e>
   253be:	2301      	movs	r3, #1
   253c0:	782c      	ldrb	r4, [r5, #0]
   253c2:	1cbd      	adds	r5, r7, #2
   253c4:	b15e      	cbz	r6, 253de <_strtoul_l.isra.0+0x48>
   253c6:	2e10      	cmp	r6, #16
   253c8:	d113      	bne.n	253f2 <_strtoul_l.isra.0+0x5c>
   253ca:	2c30      	cmp	r4, #48	; 0x30
   253cc:	d009      	beq.n	253e2 <_strtoul_l.isra.0+0x4c>
   253ce:	e010      	b.n	253f2 <_strtoul_l.isra.0+0x5c>
   253d0:	462f      	mov	r7, r5
   253d2:	e7e7      	b.n	253a4 <_strtoul_l.isra.0+0xe>
   253d4:	2c2b      	cmp	r4, #43	; 0x2b
   253d6:	bf04      	itt	eq
   253d8:	782c      	ldrbeq	r4, [r5, #0]
   253da:	1cbd      	addeq	r5, r7, #2
   253dc:	e7f2      	b.n	253c4 <_strtoul_l.isra.0+0x2e>
   253de:	2c30      	cmp	r4, #48	; 0x30
   253e0:	d125      	bne.n	2542e <_strtoul_l.isra.0+0x98>
   253e2:	782a      	ldrb	r2, [r5, #0]
   253e4:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   253e8:	2a58      	cmp	r2, #88	; 0x58
   253ea:	d14a      	bne.n	25482 <_strtoul_l.isra.0+0xec>
   253ec:	2610      	movs	r6, #16
   253ee:	786c      	ldrb	r4, [r5, #1]
   253f0:	3502      	adds	r5, #2
   253f2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   253f6:	fbb1 f1f6 	udiv	r1, r1, r6
   253fa:	2700      	movs	r7, #0
   253fc:	fb06 fe01 	mul.w	lr, r6, r1
   25400:	4638      	mov	r0, r7
   25402:	ea6f 0e0e 	mvn.w	lr, lr
   25406:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   2540a:	2a09      	cmp	r2, #9
   2540c:	d811      	bhi.n	25432 <_strtoul_l.isra.0+0x9c>
   2540e:	4614      	mov	r4, r2
   25410:	42a6      	cmp	r6, r4
   25412:	dd1d      	ble.n	25450 <_strtoul_l.isra.0+0xba>
   25414:	2f00      	cmp	r7, #0
   25416:	db18      	blt.n	2544a <_strtoul_l.isra.0+0xb4>
   25418:	4281      	cmp	r1, r0
   2541a:	d316      	bcc.n	2544a <_strtoul_l.isra.0+0xb4>
   2541c:	d101      	bne.n	25422 <_strtoul_l.isra.0+0x8c>
   2541e:	45a6      	cmp	lr, r4
   25420:	db13      	blt.n	2544a <_strtoul_l.isra.0+0xb4>
   25422:	2701      	movs	r7, #1
   25424:	fb00 4006 	mla	r0, r0, r6, r4
   25428:	f815 4b01 	ldrb.w	r4, [r5], #1
   2542c:	e7eb      	b.n	25406 <_strtoul_l.isra.0+0x70>
   2542e:	260a      	movs	r6, #10
   25430:	e7df      	b.n	253f2 <_strtoul_l.isra.0+0x5c>
   25432:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   25436:	2a19      	cmp	r2, #25
   25438:	d801      	bhi.n	2543e <_strtoul_l.isra.0+0xa8>
   2543a:	3c37      	subs	r4, #55	; 0x37
   2543c:	e7e8      	b.n	25410 <_strtoul_l.isra.0+0x7a>
   2543e:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   25442:	2a19      	cmp	r2, #25
   25444:	d804      	bhi.n	25450 <_strtoul_l.isra.0+0xba>
   25446:	3c57      	subs	r4, #87	; 0x57
   25448:	e7e2      	b.n	25410 <_strtoul_l.isra.0+0x7a>
   2544a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   2544e:	e7eb      	b.n	25428 <_strtoul_l.isra.0+0x92>
   25450:	2f00      	cmp	r7, #0
   25452:	da09      	bge.n	25468 <_strtoul_l.isra.0+0xd2>
   25454:	2322      	movs	r3, #34	; 0x22
   25456:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   2545a:	f8c8 3000 	str.w	r3, [r8]
   2545e:	f1ba 0f00 	cmp.w	sl, #0
   25462:	d107      	bne.n	25474 <_strtoul_l.isra.0+0xde>
   25464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   25468:	b103      	cbz	r3, 2546c <_strtoul_l.isra.0+0xd6>
   2546a:	4240      	negs	r0, r0
   2546c:	f1ba 0f00 	cmp.w	sl, #0
   25470:	d00c      	beq.n	2548c <_strtoul_l.isra.0+0xf6>
   25472:	b127      	cbz	r7, 2547e <_strtoul_l.isra.0+0xe8>
   25474:	3d01      	subs	r5, #1
   25476:	f8ca 5000 	str.w	r5, [sl]
   2547a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2547e:	464d      	mov	r5, r9
   25480:	e7f9      	b.n	25476 <_strtoul_l.isra.0+0xe0>
   25482:	2430      	movs	r4, #48	; 0x30
   25484:	2e00      	cmp	r6, #0
   25486:	d1b4      	bne.n	253f2 <_strtoul_l.isra.0+0x5c>
   25488:	2608      	movs	r6, #8
   2548a:	e7b2      	b.n	253f2 <_strtoul_l.isra.0+0x5c>
   2548c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00025490 <_strtoul_r>:
_strtoul_r():
   25490:	b537      	push	{r0, r1, r2, r4, r5, lr}
   25492:	4c06      	ldr	r4, [pc, #24]	; (254ac <_strtoul_r+0x1c>)
   25494:	4d06      	ldr	r5, [pc, #24]	; (254b0 <_strtoul_r+0x20>)
   25496:	6824      	ldr	r4, [r4, #0]
   25498:	6a24      	ldr	r4, [r4, #32]
   2549a:	2c00      	cmp	r4, #0
   2549c:	bf08      	it	eq
   2549e:	462c      	moveq	r4, r5
   254a0:	9400      	str	r4, [sp, #0]
   254a2:	f7ff ff78 	bl	25396 <_strtoul_l.isra.0>
   254a6:	b003      	add	sp, #12
   254a8:	bd30      	pop	{r4, r5, pc}
   254aa:	bf00      	nop
   254ac:	2007c0e0 	.word	0x2007c0e0
   254b0:	2007c144 	.word	0x2007c144

000254b4 <strtoul>:
strtoul():
   254b4:	4b08      	ldr	r3, [pc, #32]	; (254d8 <strtoul+0x24>)
   254b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
   254b8:	681c      	ldr	r4, [r3, #0]
   254ba:	4d08      	ldr	r5, [pc, #32]	; (254dc <strtoul+0x28>)
   254bc:	6a23      	ldr	r3, [r4, #32]
   254be:	2b00      	cmp	r3, #0
   254c0:	bf08      	it	eq
   254c2:	462b      	moveq	r3, r5
   254c4:	9300      	str	r3, [sp, #0]
   254c6:	4613      	mov	r3, r2
   254c8:	460a      	mov	r2, r1
   254ca:	4601      	mov	r1, r0
   254cc:	4620      	mov	r0, r4
   254ce:	f7ff ff62 	bl	25396 <_strtoul_l.isra.0>
   254d2:	b003      	add	sp, #12
   254d4:	bd30      	pop	{r4, r5, pc}
   254d6:	bf00      	nop
   254d8:	2007c0e0 	.word	0x2007c0e0
   254dc:	2007c144 	.word	0x2007c144

000254e0 <__submore>:
__submore():
   254e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   254e4:	460c      	mov	r4, r1
   254e6:	6b49      	ldr	r1, [r1, #52]	; 0x34
   254e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
   254ec:	4299      	cmp	r1, r3
   254ee:	d11c      	bne.n	2552a <__submore+0x4a>
   254f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
   254f4:	f7fa fae8 	bl	1fac8 <_malloc_r>
   254f8:	b918      	cbnz	r0, 25502 <__submore+0x22>
   254fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   254fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   25502:	f44f 6380 	mov.w	r3, #1024	; 0x400
   25506:	63a3      	str	r3, [r4, #56]	; 0x38
   25508:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   2550c:	6360      	str	r0, [r4, #52]	; 0x34
   2550e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   25512:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   25516:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   2551a:	7043      	strb	r3, [r0, #1]
   2551c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   25520:	7003      	strb	r3, [r0, #0]
   25522:	6020      	str	r0, [r4, #0]
   25524:	2000      	movs	r0, #0
   25526:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2552a:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   2552c:	0077      	lsls	r7, r6, #1
   2552e:	463a      	mov	r2, r7
   25530:	f7fe ffb8 	bl	244a4 <_realloc_r>
   25534:	4605      	mov	r5, r0
   25536:	2800      	cmp	r0, #0
   25538:	d0df      	beq.n	254fa <__submore+0x1a>
   2553a:	eb00 0806 	add.w	r8, r0, r6
   2553e:	4601      	mov	r1, r0
   25540:	4632      	mov	r2, r6
   25542:	4640      	mov	r0, r8
   25544:	f7f9 ffa1 	bl	1f48a <memcpy>
   25548:	f8c4 8000 	str.w	r8, [r4]
   2554c:	6365      	str	r5, [r4, #52]	; 0x34
   2554e:	63a7      	str	r7, [r4, #56]	; 0x38
   25550:	e7e8      	b.n	25524 <__submore+0x44>
   25552:	Address 0x0000000000025552 is out of bounds.


00025554 <_ungetc_r>:
_ungetc_r():
   25554:	1c4b      	adds	r3, r1, #1
   25556:	b570      	push	{r4, r5, r6, lr}
   25558:	4606      	mov	r6, r0
   2555a:	460d      	mov	r5, r1
   2555c:	4614      	mov	r4, r2
   2555e:	d103      	bne.n	25568 <_ungetc_r+0x14>
   25560:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   25564:	4628      	mov	r0, r5
   25566:	bd70      	pop	{r4, r5, r6, pc}
   25568:	b118      	cbz	r0, 25572 <_ungetc_r+0x1e>
   2556a:	6983      	ldr	r3, [r0, #24]
   2556c:	b90b      	cbnz	r3, 25572 <_ungetc_r+0x1e>
   2556e:	f7f9 fbdf 	bl	1ed30 <__sinit>
   25572:	4b2e      	ldr	r3, [pc, #184]	; (2562c <_ungetc_r+0xd8>)
   25574:	429c      	cmp	r4, r3
   25576:	d12c      	bne.n	255d2 <_ungetc_r+0x7e>
   25578:	6874      	ldr	r4, [r6, #4]
   2557a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   2557e:	f023 0320 	bic.w	r3, r3, #32
   25582:	81a3      	strh	r3, [r4, #12]
   25584:	b29b      	uxth	r3, r3
   25586:	0759      	lsls	r1, r3, #29
   25588:	d413      	bmi.n	255b2 <_ungetc_r+0x5e>
   2558a:	06da      	lsls	r2, r3, #27
   2558c:	d5e8      	bpl.n	25560 <_ungetc_r+0xc>
   2558e:	071b      	lsls	r3, r3, #28
   25590:	d50b      	bpl.n	255aa <_ungetc_r+0x56>
   25592:	4621      	mov	r1, r4
   25594:	4630      	mov	r0, r6
   25596:	f7f9 faaf 	bl	1eaf8 <_fflush_r>
   2559a:	2800      	cmp	r0, #0
   2559c:	d1e0      	bne.n	25560 <_ungetc_r+0xc>
   2559e:	89a3      	ldrh	r3, [r4, #12]
   255a0:	60a0      	str	r0, [r4, #8]
   255a2:	f023 0308 	bic.w	r3, r3, #8
   255a6:	81a3      	strh	r3, [r4, #12]
   255a8:	61a0      	str	r0, [r4, #24]
   255aa:	89a3      	ldrh	r3, [r4, #12]
   255ac:	f043 0304 	orr.w	r3, r3, #4
   255b0:	81a3      	strh	r3, [r4, #12]
   255b2:	6b63      	ldr	r3, [r4, #52]	; 0x34
   255b4:	b2ed      	uxtb	r5, r5
   255b6:	6862      	ldr	r2, [r4, #4]
   255b8:	b1e3      	cbz	r3, 255f4 <_ungetc_r+0xa0>
   255ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   255bc:	429a      	cmp	r2, r3
   255be:	da12      	bge.n	255e6 <_ungetc_r+0x92>
   255c0:	6823      	ldr	r3, [r4, #0]
   255c2:	1e5a      	subs	r2, r3, #1
   255c4:	6022      	str	r2, [r4, #0]
   255c6:	f803 5c01 	strb.w	r5, [r3, #-1]
   255ca:	6863      	ldr	r3, [r4, #4]
   255cc:	3301      	adds	r3, #1
   255ce:	6063      	str	r3, [r4, #4]
   255d0:	e7c8      	b.n	25564 <_ungetc_r+0x10>
   255d2:	4b17      	ldr	r3, [pc, #92]	; (25630 <_ungetc_r+0xdc>)
   255d4:	429c      	cmp	r4, r3
   255d6:	d101      	bne.n	255dc <_ungetc_r+0x88>
   255d8:	68b4      	ldr	r4, [r6, #8]
   255da:	e7ce      	b.n	2557a <_ungetc_r+0x26>
   255dc:	4b15      	ldr	r3, [pc, #84]	; (25634 <_ungetc_r+0xe0>)
   255de:	429c      	cmp	r4, r3
   255e0:	bf08      	it	eq
   255e2:	68f4      	ldreq	r4, [r6, #12]
   255e4:	e7c9      	b.n	2557a <_ungetc_r+0x26>
   255e6:	4621      	mov	r1, r4
   255e8:	4630      	mov	r0, r6
   255ea:	f7ff ff79 	bl	254e0 <__submore>
   255ee:	2800      	cmp	r0, #0
   255f0:	d0e6      	beq.n	255c0 <_ungetc_r+0x6c>
   255f2:	e7b5      	b.n	25560 <_ungetc_r+0xc>
   255f4:	6921      	ldr	r1, [r4, #16]
   255f6:	6823      	ldr	r3, [r4, #0]
   255f8:	b151      	cbz	r1, 25610 <_ungetc_r+0xbc>
   255fa:	4299      	cmp	r1, r3
   255fc:	d208      	bcs.n	25610 <_ungetc_r+0xbc>
   255fe:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   25602:	428d      	cmp	r5, r1
   25604:	d104      	bne.n	25610 <_ungetc_r+0xbc>
   25606:	3b01      	subs	r3, #1
   25608:	3201      	adds	r2, #1
   2560a:	6023      	str	r3, [r4, #0]
   2560c:	6062      	str	r2, [r4, #4]
   2560e:	e7a9      	b.n	25564 <_ungetc_r+0x10>
   25610:	63e3      	str	r3, [r4, #60]	; 0x3c
   25612:	f104 0344 	add.w	r3, r4, #68	; 0x44
   25616:	6363      	str	r3, [r4, #52]	; 0x34
   25618:	2303      	movs	r3, #3
   2561a:	63a3      	str	r3, [r4, #56]	; 0x38
   2561c:	4623      	mov	r3, r4
   2561e:	6422      	str	r2, [r4, #64]	; 0x40
   25620:	f803 5f46 	strb.w	r5, [r3, #70]!
   25624:	6023      	str	r3, [r4, #0]
   25626:	2301      	movs	r3, #1
   25628:	e7d1      	b.n	255ce <_ungetc_r+0x7a>
   2562a:	bf00      	nop
   2562c:	00028d28 	.word	0x00028d28
   25630:	00028d48 	.word	0x00028d48
   25634:	00028d08 	.word	0x00028d08

00025638 <__env_lock>:
__env_lock():
   25638:	4770      	bx	lr

0002563a <__env_unlock>:
__env_unlock():
   2563a:	4770      	bx	lr

0002563c <_malloc_usable_size_r>:
_malloc_usable_size_r():
   2563c:	f851 0c04 	ldr.w	r0, [r1, #-4]
   25640:	2800      	cmp	r0, #0
   25642:	f1a0 0004 	sub.w	r0, r0, #4
   25646:	bfbc      	itt	lt
   25648:	580b      	ldrlt	r3, [r1, r0]
   2564a:	18c0      	addlt	r0, r0, r3
   2564c:	4770      	bx	lr
   2564e:	Address 0x000000000002564e is out of bounds.


00025650 <__aeabi_dmul>:
__muldf3():
   25650:	b570      	push	{r4, r5, r6, lr}
   25652:	f04f 0cff 	mov.w	ip, #255	; 0xff
   25656:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   2565a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   2565e:	bf1d      	ittte	ne
   25660:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   25664:	ea94 0f0c 	teqne	r4, ip
   25668:	ea95 0f0c 	teqne	r5, ip
   2566c:	f000 f8de 	bleq	2582c <__aeabi_dmul+0x1dc>
   25670:	442c      	add	r4, r5
   25672:	ea81 0603 	eor.w	r6, r1, r3
   25676:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   2567a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   2567e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   25682:	bf18      	it	ne
   25684:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   25688:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   2568c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   25690:	d038      	beq.n	25704 <__aeabi_dmul+0xb4>
   25692:	fba0 ce02 	umull	ip, lr, r0, r2
   25696:	f04f 0500 	mov.w	r5, #0
   2569a:	fbe1 e502 	umlal	lr, r5, r1, r2
   2569e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   256a2:	fbe0 e503 	umlal	lr, r5, r0, r3
   256a6:	f04f 0600 	mov.w	r6, #0
   256aa:	fbe1 5603 	umlal	r5, r6, r1, r3
   256ae:	f09c 0f00 	teq	ip, #0
   256b2:	bf18      	it	ne
   256b4:	f04e 0e01 	orrne.w	lr, lr, #1
   256b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   256bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   256c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   256c4:	d204      	bcs.n	256d0 <__aeabi_dmul+0x80>
   256c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   256ca:	416d      	adcs	r5, r5
   256cc:	eb46 0606 	adc.w	r6, r6, r6
   256d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   256d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   256d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   256dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   256e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   256e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   256e8:	bf88      	it	hi
   256ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   256ee:	d81e      	bhi.n	2572e <__aeabi_dmul+0xde>
   256f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   256f4:	bf08      	it	eq
   256f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   256fa:	f150 0000 	adcs.w	r0, r0, #0
   256fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   25702:	bd70      	pop	{r4, r5, r6, pc}
   25704:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   25708:	ea46 0101 	orr.w	r1, r6, r1
   2570c:	ea40 0002 	orr.w	r0, r0, r2
   25710:	ea81 0103 	eor.w	r1, r1, r3
   25714:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   25718:	bfc2      	ittt	gt
   2571a:	ebd4 050c 	rsbsgt	r5, r4, ip
   2571e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   25722:	bd70      	popgt	{r4, r5, r6, pc}
   25724:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   25728:	f04f 0e00 	mov.w	lr, #0
   2572c:	3c01      	subs	r4, #1
   2572e:	f300 80ab 	bgt.w	25888 <__aeabi_dmul+0x238>
   25732:	f114 0f36 	cmn.w	r4, #54	; 0x36
   25736:	bfde      	ittt	le
   25738:	2000      	movle	r0, #0
   2573a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   2573e:	bd70      	pople	{r4, r5, r6, pc}
   25740:	f1c4 0400 	rsb	r4, r4, #0
   25744:	3c20      	subs	r4, #32
   25746:	da35      	bge.n	257b4 <__aeabi_dmul+0x164>
   25748:	340c      	adds	r4, #12
   2574a:	dc1b      	bgt.n	25784 <__aeabi_dmul+0x134>
   2574c:	f104 0414 	add.w	r4, r4, #20
   25750:	f1c4 0520 	rsb	r5, r4, #32
   25754:	fa00 f305 	lsl.w	r3, r0, r5
   25758:	fa20 f004 	lsr.w	r0, r0, r4
   2575c:	fa01 f205 	lsl.w	r2, r1, r5
   25760:	ea40 0002 	orr.w	r0, r0, r2
   25764:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   25768:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   2576c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   25770:	fa21 f604 	lsr.w	r6, r1, r4
   25774:	eb42 0106 	adc.w	r1, r2, r6
   25778:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   2577c:	bf08      	it	eq
   2577e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   25782:	bd70      	pop	{r4, r5, r6, pc}
   25784:	f1c4 040c 	rsb	r4, r4, #12
   25788:	f1c4 0520 	rsb	r5, r4, #32
   2578c:	fa00 f304 	lsl.w	r3, r0, r4
   25790:	fa20 f005 	lsr.w	r0, r0, r5
   25794:	fa01 f204 	lsl.w	r2, r1, r4
   25798:	ea40 0002 	orr.w	r0, r0, r2
   2579c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   257a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   257a4:	f141 0100 	adc.w	r1, r1, #0
   257a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   257ac:	bf08      	it	eq
   257ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   257b2:	bd70      	pop	{r4, r5, r6, pc}
   257b4:	f1c4 0520 	rsb	r5, r4, #32
   257b8:	fa00 f205 	lsl.w	r2, r0, r5
   257bc:	ea4e 0e02 	orr.w	lr, lr, r2
   257c0:	fa20 f304 	lsr.w	r3, r0, r4
   257c4:	fa01 f205 	lsl.w	r2, r1, r5
   257c8:	ea43 0302 	orr.w	r3, r3, r2
   257cc:	fa21 f004 	lsr.w	r0, r1, r4
   257d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   257d4:	fa21 f204 	lsr.w	r2, r1, r4
   257d8:	ea20 0002 	bic.w	r0, r0, r2
   257dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   257e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   257e4:	bf08      	it	eq
   257e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   257ea:	bd70      	pop	{r4, r5, r6, pc}
   257ec:	f094 0f00 	teq	r4, #0
   257f0:	d10f      	bne.n	25812 <__aeabi_dmul+0x1c2>
   257f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   257f6:	0040      	lsls	r0, r0, #1
   257f8:	eb41 0101 	adc.w	r1, r1, r1
   257fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   25800:	bf08      	it	eq
   25802:	3c01      	subeq	r4, #1
   25804:	d0f7      	beq.n	257f6 <__aeabi_dmul+0x1a6>
   25806:	ea41 0106 	orr.w	r1, r1, r6
   2580a:	f095 0f00 	teq	r5, #0
   2580e:	bf18      	it	ne
   25810:	4770      	bxne	lr
   25812:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   25816:	0052      	lsls	r2, r2, #1
   25818:	eb43 0303 	adc.w	r3, r3, r3
   2581c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   25820:	bf08      	it	eq
   25822:	3d01      	subeq	r5, #1
   25824:	d0f7      	beq.n	25816 <__aeabi_dmul+0x1c6>
   25826:	ea43 0306 	orr.w	r3, r3, r6
   2582a:	4770      	bx	lr
   2582c:	ea94 0f0c 	teq	r4, ip
   25830:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   25834:	bf18      	it	ne
   25836:	ea95 0f0c 	teqne	r5, ip
   2583a:	d00c      	beq.n	25856 <__aeabi_dmul+0x206>
   2583c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   25840:	bf18      	it	ne
   25842:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   25846:	d1d1      	bne.n	257ec <__aeabi_dmul+0x19c>
   25848:	ea81 0103 	eor.w	r1, r1, r3
   2584c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   25850:	f04f 0000 	mov.w	r0, #0
   25854:	bd70      	pop	{r4, r5, r6, pc}
   25856:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   2585a:	bf06      	itte	eq
   2585c:	4610      	moveq	r0, r2
   2585e:	4619      	moveq	r1, r3
   25860:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   25864:	d019      	beq.n	2589a <__aeabi_dmul+0x24a>
   25866:	ea94 0f0c 	teq	r4, ip
   2586a:	d102      	bne.n	25872 <__aeabi_dmul+0x222>
   2586c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   25870:	d113      	bne.n	2589a <__aeabi_dmul+0x24a>
   25872:	ea95 0f0c 	teq	r5, ip
   25876:	d105      	bne.n	25884 <__aeabi_dmul+0x234>
   25878:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   2587c:	bf1c      	itt	ne
   2587e:	4610      	movne	r0, r2
   25880:	4619      	movne	r1, r3
   25882:	d10a      	bne.n	2589a <__aeabi_dmul+0x24a>
   25884:	ea81 0103 	eor.w	r1, r1, r3
   25888:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   2588c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   25890:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   25894:	f04f 0000 	mov.w	r0, #0
   25898:	bd70      	pop	{r4, r5, r6, pc}
   2589a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   2589e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   258a2:	bd70      	pop	{r4, r5, r6, pc}

000258a4 <__aeabi_ddiv>:
__divdf3():
   258a4:	b570      	push	{r4, r5, r6, lr}
   258a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   258aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   258ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   258b2:	bf1d      	ittte	ne
   258b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   258b8:	ea94 0f0c 	teqne	r4, ip
   258bc:	ea95 0f0c 	teqne	r5, ip
   258c0:	f000 f8a7 	bleq	25a12 <__aeabi_ddiv+0x16e>
   258c4:	eba4 0405 	sub.w	r4, r4, r5
   258c8:	ea81 0e03 	eor.w	lr, r1, r3
   258cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   258d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   258d4:	f000 8088 	beq.w	259e8 <__aeabi_ddiv+0x144>
   258d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   258dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   258e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   258e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   258e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
   258ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   258f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   258f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
   258f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   258fc:	429d      	cmp	r5, r3
   258fe:	bf08      	it	eq
   25900:	4296      	cmpeq	r6, r2
   25902:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   25906:	f504 7440 	add.w	r4, r4, #768	; 0x300
   2590a:	d202      	bcs.n	25912 <__aeabi_ddiv+0x6e>
   2590c:	085b      	lsrs	r3, r3, #1
   2590e:	ea4f 0232 	mov.w	r2, r2, rrx
   25912:	1ab6      	subs	r6, r6, r2
   25914:	eb65 0503 	sbc.w	r5, r5, r3
   25918:	085b      	lsrs	r3, r3, #1
   2591a:	ea4f 0232 	mov.w	r2, r2, rrx
   2591e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   25922:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   25926:	ebb6 0e02 	subs.w	lr, r6, r2
   2592a:	eb75 0e03 	sbcs.w	lr, r5, r3
   2592e:	bf22      	ittt	cs
   25930:	1ab6      	subcs	r6, r6, r2
   25932:	4675      	movcs	r5, lr
   25934:	ea40 000c 	orrcs.w	r0, r0, ip
   25938:	085b      	lsrs	r3, r3, #1
   2593a:	ea4f 0232 	mov.w	r2, r2, rrx
   2593e:	ebb6 0e02 	subs.w	lr, r6, r2
   25942:	eb75 0e03 	sbcs.w	lr, r5, r3
   25946:	bf22      	ittt	cs
   25948:	1ab6      	subcs	r6, r6, r2
   2594a:	4675      	movcs	r5, lr
   2594c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   25950:	085b      	lsrs	r3, r3, #1
   25952:	ea4f 0232 	mov.w	r2, r2, rrx
   25956:	ebb6 0e02 	subs.w	lr, r6, r2
   2595a:	eb75 0e03 	sbcs.w	lr, r5, r3
   2595e:	bf22      	ittt	cs
   25960:	1ab6      	subcs	r6, r6, r2
   25962:	4675      	movcs	r5, lr
   25964:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   25968:	085b      	lsrs	r3, r3, #1
   2596a:	ea4f 0232 	mov.w	r2, r2, rrx
   2596e:	ebb6 0e02 	subs.w	lr, r6, r2
   25972:	eb75 0e03 	sbcs.w	lr, r5, r3
   25976:	bf22      	ittt	cs
   25978:	1ab6      	subcs	r6, r6, r2
   2597a:	4675      	movcs	r5, lr
   2597c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   25980:	ea55 0e06 	orrs.w	lr, r5, r6
   25984:	d018      	beq.n	259b8 <__aeabi_ddiv+0x114>
   25986:	ea4f 1505 	mov.w	r5, r5, lsl #4
   2598a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   2598e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   25992:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   25996:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   2599a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   2599e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   259a2:	d1c0      	bne.n	25926 <__aeabi_ddiv+0x82>
   259a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   259a8:	d10b      	bne.n	259c2 <__aeabi_ddiv+0x11e>
   259aa:	ea41 0100 	orr.w	r1, r1, r0
   259ae:	f04f 0000 	mov.w	r0, #0
   259b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   259b6:	e7b6      	b.n	25926 <__aeabi_ddiv+0x82>
   259b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   259bc:	bf04      	itt	eq
   259be:	4301      	orreq	r1, r0
   259c0:	2000      	moveq	r0, #0
   259c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   259c6:	bf88      	it	hi
   259c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   259cc:	f63f aeaf 	bhi.w	2572e <__aeabi_dmul+0xde>
   259d0:	ebb5 0c03 	subs.w	ip, r5, r3
   259d4:	bf04      	itt	eq
   259d6:	ebb6 0c02 	subseq.w	ip, r6, r2
   259da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   259de:	f150 0000 	adcs.w	r0, r0, #0
   259e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   259e6:	bd70      	pop	{r4, r5, r6, pc}
   259e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   259ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   259f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   259f4:	bfc2      	ittt	gt
   259f6:	ebd4 050c 	rsbsgt	r5, r4, ip
   259fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   259fe:	bd70      	popgt	{r4, r5, r6, pc}
   25a00:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   25a04:	f04f 0e00 	mov.w	lr, #0
   25a08:	3c01      	subs	r4, #1
   25a0a:	e690      	b.n	2572e <__aeabi_dmul+0xde>
   25a0c:	ea45 0e06 	orr.w	lr, r5, r6
   25a10:	e68d      	b.n	2572e <__aeabi_dmul+0xde>
   25a12:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   25a16:	ea94 0f0c 	teq	r4, ip
   25a1a:	bf08      	it	eq
   25a1c:	ea95 0f0c 	teqeq	r5, ip
   25a20:	f43f af3b 	beq.w	2589a <__aeabi_dmul+0x24a>
   25a24:	ea94 0f0c 	teq	r4, ip
   25a28:	d10a      	bne.n	25a40 <__aeabi_ddiv+0x19c>
   25a2a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   25a2e:	f47f af34 	bne.w	2589a <__aeabi_dmul+0x24a>
   25a32:	ea95 0f0c 	teq	r5, ip
   25a36:	f47f af25 	bne.w	25884 <__aeabi_dmul+0x234>
   25a3a:	4610      	mov	r0, r2
   25a3c:	4619      	mov	r1, r3
   25a3e:	e72c      	b.n	2589a <__aeabi_dmul+0x24a>
   25a40:	ea95 0f0c 	teq	r5, ip
   25a44:	d106      	bne.n	25a54 <__aeabi_ddiv+0x1b0>
   25a46:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   25a4a:	f43f aefd 	beq.w	25848 <__aeabi_dmul+0x1f8>
   25a4e:	4610      	mov	r0, r2
   25a50:	4619      	mov	r1, r3
   25a52:	e722      	b.n	2589a <__aeabi_dmul+0x24a>
   25a54:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   25a58:	bf18      	it	ne
   25a5a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   25a5e:	f47f aec5 	bne.w	257ec <__aeabi_dmul+0x19c>
   25a62:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   25a66:	f47f af0d 	bne.w	25884 <__aeabi_dmul+0x234>
   25a6a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   25a6e:	f47f aeeb 	bne.w	25848 <__aeabi_dmul+0x1f8>
   25a72:	e712      	b.n	2589a <__aeabi_dmul+0x24a>

00025a74 <__gedf2>:
__gedf2():
   25a74:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   25a78:	e006      	b.n	25a88 <__cmpdf2+0x4>
   25a7a:	bf00      	nop

00025a7c <__ledf2>:
__ledf2():
   25a7c:	f04f 0c01 	mov.w	ip, #1
   25a80:	e002      	b.n	25a88 <__cmpdf2+0x4>
   25a82:	bf00      	nop

00025a84 <__cmpdf2>:
__nedf2():
   25a84:	f04f 0c01 	mov.w	ip, #1
   25a88:	f84d cd04 	str.w	ip, [sp, #-4]!
   25a8c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   25a90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   25a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   25a98:	bf18      	it	ne
   25a9a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   25a9e:	d01b      	beq.n	25ad8 <__cmpdf2+0x54>
   25aa0:	b001      	add	sp, #4
   25aa2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   25aa6:	bf0c      	ite	eq
   25aa8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   25aac:	ea91 0f03 	teqne	r1, r3
   25ab0:	bf02      	ittt	eq
   25ab2:	ea90 0f02 	teqeq	r0, r2
   25ab6:	2000      	moveq	r0, #0
   25ab8:	4770      	bxeq	lr
   25aba:	f110 0f00 	cmn.w	r0, #0
   25abe:	ea91 0f03 	teq	r1, r3
   25ac2:	bf58      	it	pl
   25ac4:	4299      	cmppl	r1, r3
   25ac6:	bf08      	it	eq
   25ac8:	4290      	cmpeq	r0, r2
   25aca:	bf2c      	ite	cs
   25acc:	17d8      	asrcs	r0, r3, #31
   25ace:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   25ad2:	f040 0001 	orr.w	r0, r0, #1
   25ad6:	4770      	bx	lr
   25ad8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   25adc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   25ae0:	d102      	bne.n	25ae8 <__cmpdf2+0x64>
   25ae2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   25ae6:	d107      	bne.n	25af8 <__cmpdf2+0x74>
   25ae8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   25aec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   25af0:	d1d6      	bne.n	25aa0 <__cmpdf2+0x1c>
   25af2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   25af6:	d0d3      	beq.n	25aa0 <__cmpdf2+0x1c>
   25af8:	f85d 0b04 	ldr.w	r0, [sp], #4
   25afc:	4770      	bx	lr
   25afe:	bf00      	nop

00025b00 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   25b00:	4684      	mov	ip, r0
   25b02:	4610      	mov	r0, r2
   25b04:	4662      	mov	r2, ip
   25b06:	468c      	mov	ip, r1
   25b08:	4619      	mov	r1, r3
   25b0a:	4663      	mov	r3, ip
   25b0c:	e000      	b.n	25b10 <__aeabi_cdcmpeq>
   25b0e:	bf00      	nop

00025b10 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   25b10:	b501      	push	{r0, lr}
   25b12:	f7ff ffb7 	bl	25a84 <__cmpdf2>
   25b16:	2800      	cmp	r0, #0
   25b18:	bf48      	it	mi
   25b1a:	f110 0f00 	cmnmi.w	r0, #0
   25b1e:	bd01      	pop	{r0, pc}

00025b20 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   25b20:	f84d ed08 	str.w	lr, [sp, #-8]!
   25b24:	f7ff fff4 	bl	25b10 <__aeabi_cdcmpeq>
   25b28:	bf0c      	ite	eq
   25b2a:	2001      	moveq	r0, #1
   25b2c:	2000      	movne	r0, #0
   25b2e:	f85d fb08 	ldr.w	pc, [sp], #8
   25b32:	bf00      	nop

00025b34 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   25b34:	f84d ed08 	str.w	lr, [sp, #-8]!
   25b38:	f7ff ffea 	bl	25b10 <__aeabi_cdcmpeq>
   25b3c:	bf34      	ite	cc
   25b3e:	2001      	movcc	r0, #1
   25b40:	2000      	movcs	r0, #0
   25b42:	f85d fb08 	ldr.w	pc, [sp], #8
   25b46:	bf00      	nop

00025b48 <__aeabi_dcmple>:
__aeabi_dcmple():
   25b48:	f84d ed08 	str.w	lr, [sp, #-8]!
   25b4c:	f7ff ffe0 	bl	25b10 <__aeabi_cdcmpeq>
   25b50:	bf94      	ite	ls
   25b52:	2001      	movls	r0, #1
   25b54:	2000      	movhi	r0, #0
   25b56:	f85d fb08 	ldr.w	pc, [sp], #8
   25b5a:	bf00      	nop

00025b5c <__aeabi_dcmpge>:
__aeabi_dcmpge():
   25b5c:	f84d ed08 	str.w	lr, [sp, #-8]!
   25b60:	f7ff ffce 	bl	25b00 <__aeabi_cdrcmple>
   25b64:	bf94      	ite	ls
   25b66:	2001      	movls	r0, #1
   25b68:	2000      	movhi	r0, #0
   25b6a:	f85d fb08 	ldr.w	pc, [sp], #8
   25b6e:	bf00      	nop

00025b70 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   25b70:	f84d ed08 	str.w	lr, [sp, #-8]!
   25b74:	f7ff ffc4 	bl	25b00 <__aeabi_cdrcmple>
   25b78:	bf34      	ite	cc
   25b7a:	2001      	movcc	r0, #1
   25b7c:	2000      	movcs	r0, #0
   25b7e:	f85d fb08 	ldr.w	pc, [sp], #8
   25b82:	bf00      	nop

00025b84 <__aeabi_dcmpun>:
__unorddf2():
   25b84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   25b88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   25b8c:	d102      	bne.n	25b94 <__aeabi_dcmpun+0x10>
   25b8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   25b92:	d10a      	bne.n	25baa <__aeabi_dcmpun+0x26>
   25b94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   25b98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   25b9c:	d102      	bne.n	25ba4 <__aeabi_dcmpun+0x20>
   25b9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   25ba2:	d102      	bne.n	25baa <__aeabi_dcmpun+0x26>
   25ba4:	f04f 0000 	mov.w	r0, #0
   25ba8:	4770      	bx	lr
   25baa:	f04f 0001 	mov.w	r0, #1
   25bae:	4770      	bx	lr

00025bb0 <__aeabi_d2iz>:
__aeabi_d2iz():
   25bb0:	ea4f 0241 	mov.w	r2, r1, lsl #1
   25bb4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   25bb8:	d215      	bcs.n	25be6 <__aeabi_d2iz+0x36>
   25bba:	d511      	bpl.n	25be0 <__aeabi_d2iz+0x30>
   25bbc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   25bc0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   25bc4:	d912      	bls.n	25bec <__aeabi_d2iz+0x3c>
   25bc6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   25bca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   25bce:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   25bd2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   25bd6:	fa23 f002 	lsr.w	r0, r3, r2
   25bda:	bf18      	it	ne
   25bdc:	4240      	negne	r0, r0
   25bde:	4770      	bx	lr
   25be0:	f04f 0000 	mov.w	r0, #0
   25be4:	4770      	bx	lr
   25be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   25bea:	d105      	bne.n	25bf8 <__aeabi_d2iz+0x48>
   25bec:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   25bf0:	bf08      	it	eq
   25bf2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   25bf6:	4770      	bx	lr
   25bf8:	f04f 0000 	mov.w	r0, #0
   25bfc:	4770      	bx	lr
   25bfe:	bf00      	nop
   25c00:	74737953 	.word	0x74737953
   25c04:	50206d65 	.word	0x50206d65
   25c08:	7265776f 	.word	0x7265776f
   25c0c:	3a6e6f2d 	.word	0x3a6e6f2d
   25c10:	6f6f4220 	.word	0x6f6f4220
   25c14:	676e6974 	.word	0x676e6974
   25c18:	2e2e2e20 	.word	0x2e2e2e20
   25c1c:	73795300 	.word	0x73795300
   25c20:	206d6574 	.word	0x206d6574
   25c24:	73617243 	.word	0x73617243
   25c28:	52203a68 	.word	0x52203a68
   25c2c:	6f622d65 	.word	0x6f622d65
   25c30:	6e69746f 	.word	0x6e69746f
   25c34:	2e2e2067 	.word	0x2e2e2067
   25c38:	6157002e 	.word	0x6157002e
   25c3c:	64686374 	.word	0x64686374
   25c40:	5320676f 	.word	0x5320676f
   25c44:	65747379 	.word	0x65747379
   25c48:	6552206d 	.word	0x6552206d
   25c4c:	3a746573 	.word	0x3a746573
   25c50:	6f6f4220 	.word	0x6f6f4220
   25c54:	676e6974 	.word	0x676e6974
   25c58:	2e2e2e20 	.word	0x2e2e2e20
   25c5c:	00          	.byte	0x00
   25c5d:	55          	.byte	0x55
   25c5e:	656e      	.short	0x656e
   25c60:	63657078 	.word	0x63657078
   25c64:	20646574 	.word	0x20646574
   25c68:	20525349 	.word	0x20525349
   25c6c:	6c6c6163 	.word	0x6c6c6163
   25c70:	20746120 	.word	0x20746120
   25c74:	5f63706c 	.word	0x5f63706c
   25c78:	2e737973 	.word	0x2e737973
   25c7c:	0063      	.short	0x0063
   25c7e:	654d      	.short	0x654d
   25c80:	79726f6d 	.word	0x79726f6d
   25c84:	666e4920 	.word	0x666e4920
   25c88:	616d726f 	.word	0x616d726f
   25c8c:	6e6f6974 	.word	0x6e6f6974
   25c90:	6c470a3a 	.word	0x6c470a3a
   25c94:	6c61626f 	.word	0x6c61626f
   25c98:	65735520 	.word	0x65735520
   25c9c:	20202064 	.word	0x20202064
   25ca0:	3525203a 	.word	0x3525203a
   25ca4:	616d0a64 	.word	0x616d0a64
   25ca8:	636f6c6c 	.word	0x636f6c6c
   25cac:	65735520 	.word	0x65735520
   25cb0:	20202064 	.word	0x20202064
   25cb4:	3525203a 	.word	0x3525203a
   25cb8:	616d0a64 	.word	0x616d0a64
   25cbc:	636f6c6c 	.word	0x636f6c6c
   25cc0:	61764120 	.word	0x61764120
   25cc4:	202e6c69 	.word	0x202e6c69
   25cc8:	3525203a 	.word	0x3525203a
   25ccc:	79530a64 	.word	0x79530a64
   25cd0:	6d657473 	.word	0x6d657473
   25cd4:	61764120 	.word	0x61764120
   25cd8:	202e6c69 	.word	0x202e6c69
   25cdc:	3525203a 	.word	0x3525203a
   25ce0:	654e0a64 	.word	0x654e0a64
   25ce4:	48207478 	.word	0x48207478
   25ce8:	20706165 	.word	0x20706165
   25cec:	20727470 	.word	0x20727470
   25cf0:	3a202020 	.word	0x3a202020
   25cf4:	25783020 	.word	0x25783020
   25cf8:	0a583830 	.word	0x0a583830
   25cfc:	7473614c 	.word	0x7473614c
   25d00:	72627320 	.word	0x72627320
   25d04:	2029286b 	.word	0x2029286b
   25d08:	20727470 	.word	0x20727470
   25d0c:	30203a20 	.word	0x30203a20
   25d10:	38302578 	.word	0x38302578
   25d14:	614c0a58 	.word	0x614c0a58
   25d18:	73207473 	.word	0x73207473
   25d1c:	286b7262 	.word	0x286b7262
   25d20:	69732029 	.word	0x69732029
   25d24:	3a20657a 	.word	0x3a20657a
   25d28:	0a752520 	.word	0x0a752520
   25d2c:	206d754e 	.word	0x206d754e
   25d30:	72627320 	.word	0x72627320
   25d34:	2029286b 	.word	0x2029286b
   25d38:	6c6c6163 	.word	0x6c6c6163
   25d3c:	25203a73 	.word	0x25203a73
   25d40:	0a75      	.short	0x0a75
   25d42:	00          	.byte	0x00
   25d43:	25          	.byte	0x25
   25d44:	52492075 	.word	0x52492075
   25d48:	61772051 	.word	0x61772051
   25d4c:	72742073 	.word	0x72742073
   25d50:	65676769 	.word	0x65676769
   25d54:	2c646572 	.word	0x2c646572
   25d58:	74756220 	.word	0x74756220
   25d5c:	206f6e20 	.word	0x206f6e20
   25d60:	20515249 	.word	0x20515249
   25d64:	76726573 	.word	0x76726573
   25d68:	20656369 	.word	0x20656369
   25d6c:	20736177 	.word	0x20736177
   25d70:	69666564 	.word	0x69666564
   25d74:	2164656e 	.word	0x2164656e
   25d78:	000a      	.short	0x000a
   25d7a:	4d4e      	.short	0x4d4e
   25d7c:	61462049 	.word	0x61462049
   25d80:	0a746c75 	.word	0x0a746c75
   25d84:	6d654d00 	.word	0x6d654d00
   25d88:	75614620 	.word	0x75614620
   25d8c:	000a746c 	.word	0x000a746c
   25d90:	20535542 	.word	0x20535542
   25d94:	6c756146 	.word	0x6c756146
   25d98:	55000a74 	.word	0x55000a74
   25d9c:	65676173 	.word	0x65676173
   25da0:	75614620 	.word	0x75614620
   25da4:	000a746c 	.word	0x000a746c
   25da8:	4d474244 	.word	0x4d474244
   25dac:	46204e4f 	.word	0x46204e4f
   25db0:	746c7561 	.word	0x746c7561
   25db4:	5249000a 	.word	0x5249000a
   25db8:	6f6e2051 	.word	0x6f6e2051
   25dbc:	65722074 	.word	0x65722074
   25dc0:	74736967 	.word	0x74736967
   25dc4:	64657265 	.word	0x64657265
   25dc8:	616d0021 	.word	0x616d0021
   25dcc:	29286e69 	.word	0x29286e69
   25dd0:	6f687320 	.word	0x6f687320
   25dd4:	20646c75 	.word	0x20646c75
   25dd8:	6576656e 	.word	0x6576656e
   25ddc:	78652072 	.word	0x78652072
   25de0:	6f207469 	.word	0x6f207469
   25de4:	6874206e 	.word	0x6874206e
   25de8:	73207369 	.word	0x73207369
   25dec:	65747379 	.word	0x65747379
   25df0:	0a6d      	.short	0x0a6d
   25df2:	00          	.byte	0x00
   25df3:	e7          	.byte	0xe7
   25df4:	e7e7adde 	.word	0xe7e7adde
   25df8:	65646f6e 	.word	0x65646f6e
   25dfc:	00          	.byte	0x00
   25dfd:	48          	.byte	0x48
   25dfe:	4c45      	.short	0x4c45
   25e00:	000a4f4c 	.word	0x000a4f4c

00025e04 <ExCvt>:
   25e04:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   25e14:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   25e24:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   25e34:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   25e44:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   25e54:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   25e64:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   25e74:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00025e84 <LfnOfs>:
   25e84:	07050301 12100e09 1c181614 8000ff1e              ..............

00025e92 <cst.6423>:
   25e92:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   25ea2:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   25eb2:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   25ec2:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   25ed2:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   25ee2:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

00025eec <vst.6422>:
   25eec:	02000400 00800100 00200040 00080010     ........@. .....
   25efc:	00020004 00c70000                                ......

00025f02 <Tbl>:
   25f02:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   25f12:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   25f22:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   25f32:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   25f42:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   25f52:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   25f62:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   25f72:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   25f82:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   25f92:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   25fa2:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   25fb2:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   25fc2:	00df03b1 03c00393 03c303a3 03c400b5     ................
   25fd2:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   25fe2:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   25ff2:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

00026002 <tbl_lower.5776>:
   26002:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   26012:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   26022:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   26032:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   26042:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   26052:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   26062:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   26072:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   26082:	01050103 01090107 010d010b 0111010f     ................
   26092:	01150113 01190117 011d011b 0121011f     ..............!.
   260a2:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   260b2:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   260c2:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   260d2:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   260e2:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   260f2:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   26102:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   26112:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   26122:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   26132:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   26142:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   26152:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   26162:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   26172:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   26182:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   26192:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   261a2:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   261b2:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   261c2:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   261d2:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

000261e2 <tbl_upper.5777>:
   261e2:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   261f2:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   26202:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   26212:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   26222:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   26232:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   26242:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   26252:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   26262:	01040102 01080106 010c010a 0110010e     ................
   26272:	01140112 01180116 011c011a 0120011e     .............. .
   26282:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   26292:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   262a2:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   262b2:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   262c2:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   262d2:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   262e2:	03940393 03960395 03980397 039a0399     ................
   262f2:	039c039b 039e039d 03a0039f 03a303a1     ................
   26302:	03a503a4 03a703a6 03a903a8 041003aa     ................
   26312:	04120411 04140413 04160415 04180417     ................
   26322:	041a0419 041c041b 041e041d 0420041f     .............. .
   26332:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   26342:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   26352:	04030402 04050404 04070406 04090408     ................
   26362:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   26372:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   26382:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   26392:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   263a2:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   263b2:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   263c2:	c7ffff9f ff9a8094 0000ffff                       ..........

000263cc <CSWTCH.70>:
   263cc:	00100000 00200000 00400000 00800000     ...... ...@.....
   263dc:	2009c000 2009c020 2009c040 2009c060     ...  .. @.. `.. 
   263ec:	2009c080                                ... 

000263f0 <LED_DISPLAY_CHARMAP>:
	...
   26410:	00008600 00000000 00000000 00804000     .............@..
   26420:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   26430:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   26440:	6d000073 00003f00 00000000 00000000     s..m.?..........
   26450:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   26460:	6d000073 00003f00 00000000 00000000     s..m.?..........
   26470:	3a696c25 3a692500 30252c00 53005832     %li:.%i:.,%02X.S
   26480:	54524154 4e45003a 66003a44 65736c61     TART:.END:.false
   26490:	746e6900 69253a38 69252c00 746e6900     .int8:%i.,%i.int
   264a0:	253a3631 6e690069 3a323374 00696c25     16:%i.int32:%li.
   264b0:	696c252c 746e6900 253a3436 00696c6c     ,%li.int64:%lli.
   264c0:	6c6c252c 69750069 3a38746e 2c007525     ,%lli.uint8:%u.,
   264d0:	75007525 31746e69 75253a36 6e697500     %u.uint16:%u.uin
   264e0:	3a323374 00756c25 756c252c 6e697500     t32:%lu.,%lu.uin
   264f0:	3a343674 756c6c25 6c252c00 6300756c     t64:%llu.,%llu.c
   26500:	3a726168 2c006325 62006325 72616e69     har:%c.,%c.binar
   26510:	63253a79 72747300 3a676e69 62007325     y:%c.string:%s.b
   26520:	3a6c6f6f 2c007325 66007325 74616f6c     ool:%s.,%s.float
   26530:	0066253a 0066252c 62756f64 253a656c     :%f.,%f.double:%
   26540:	72740066 48006575 20706c65 20746f6e     f.true.Help not 
   26550:	63657073 65696669 6f662064 68742072     specified for th
   26560:	63207369 616d6d6f 4300646e 616d6d6f     is command.Comma
   26570:	4920646e 6c61766e 202e6469 79725420     nd Invalid.  Try
   26580:	65682720 2027706c 6d6d6f63 00646e61      'help' command.
   26590:	68000a0d 00706c65 6d6d6f43 20646e61     ...help.Command 
   265a0:	6c696166 20216465 6d6f4320 646e616d     failed!  Command
   265b0:	68207327 20706c65 203a7369 73372500     's help is: .%7s
   265c0:	75530020 726f7070 20646574 6d6d6f43      .Supported Comm
   265d0:	73646e61 200a003a 73303125 25203a20     ands:.. %10s : %
   265e0:	7332332e 2e2e2e20 25200a00 20733031     .32s ..... %10s 
   265f0:	7325203a 27200a00 706c6568 6f633c20     : %s.. 'help <co
   26600:	6e616d6d 20273e64 67206f74 68207465     mmand>' to get h
   26610:	20706c65 6120666f 6d6f6320 646e616d     elp of a command
	...

00026621 <typeinfo name for scheduler_task>:
   26621:	63733431 75646568 5f72656c 6b736174     14scheduler_task
   26631:	0cffff00                                         ...

00026634 <typeinfo for scheduler_task>:
   26634:	00028c0c 00026621                       ....!f..

0002663c <vtable for scheduler_task>:
   2663c:	00000000 00026634 00000000 00000000     ....4f..........
   2664c:	000160c9 000160cd 000160d1 0001d649     .`...`...`..I...
   2665c:	5320202a 74726174 20676e69 65686373     *  Starting sche
   2666c:	656c7564 2e2e2072 45000a2e 524f5252     duler .....ERROR
   2667c:	6f53203a 6e6f656d 696b2065 64656c6c     : Someone killed
   2668c:	65687420 68637320 6c756465 45007265      the scheduler.E
   2669c:	524f5252 6552203a 69737566 7420676e     RROR: Refusing t
   266ac:	7473206f 20747261 7320534f 64656863     o start OS sched
   266bc:	72656c75 65756420 206f7420 6f727265     uler due to erro
   266cc:	29732872 52524500 203a524f 74204f4e     r(s).ERROR: NO t
   266dc:	736b7361 64646120 62206465 63732079     asks added by sc
   266ec:	75646568 5f72656c 5f646461 6b736174     heduler_add_task
   266fc:	2a002928 72432020 69746165 7420676e     ().*  Creating t
   2670c:	736b7361 2e2e2e20 2020000a 203e2d2d     asks .....  --> 
   2671c:	4c494146 78204445 6b736154 61657243     FAILED xTaskCrea
   2672c:	29286574 52524500 203a524f 61657243     te().ERROR: Crea
   2673c:	676e6974 756f6320 6e69746e 65732067     ting counting se
   2674c:	6870616d 0065726f 4920202a 6974696e     maphore.*  Initi
   2675c:	7a696c61 20676e69 6b736174 2e2e2073     alizing tasks ..
   2676c:	20000a2e 3e2d2d20 49414620 2044454c     ...  --> FAILED 
   2677c:	74696e69 2a002928 65522020 74736967     init().*  Regist
   2678c:	6e697265 61742067 27736b73 6c657420     ering tasks' tel
   2679c:	74656d65 2e207972 000a2e2e 65657266     emetry .....free
   267ac:	6174735f 72006b63 635f6e75 746e756f     _stack.run_count
   267bc:	2d202000 46203e2d 454c4941 65742044     .  --> FAILED te
   267cc:	656d656c 20797274 69676572 61727473     lemetry registra
   267dc:	6e6f6974 20202a00 74736552 6e69726f     tion.*  Restorin
   267ec:	69642067 74206b73 6d656c65 79727465     g disk telemetry
   267fc:	202a000a 74200020 206b7361 6c6c6163     ..*  . task call
   2680c:	20676e69 6b736174 72746e45 20292879     ing taskEntry() 
   2681c:	20726f66 206c6c61 6b736174 2e2e2073     for all tasks ..
   2682c:	2a00202e 61452020 74206863 206b7361     . .*  Each task 
   2683c:	6c6c6977 65687420 6e65206e 20726574     will then enter 
   2684c:	20656874 286e7572 6f6c2029 000a706f     the run() loop..
   2685c:	2d2d2020 4146203e 44454c49 73617420       --> FAILED tas
   2686c:	746e456b 29287972 52524500 203a524f     kEntry().ERROR: 
   2687c:	6c6c694b 20676e69 65657246 534f5452     Killing FreeRTOS
   2688c:	65756420 206f7420 6f727265 29732872      due to error(s)
   2689c:	2d2d2000 4146203e 52554c49 65642045     . --> FAILURE de
   268ac:	74636574 203b6465 70737573 69646e65     tected; suspendi
   268bc:	7420676e 20736968 6b736174 2e2e2e20     ng this task ...
   268cc:	ffffff00 00026984 00027c66 0002698a     .....i..f|...i..
   268dc:	0002698f 67676f6c 45007265 524f5252     .i..logger.ERROR
   268ec:	6f6c203a 72656767 696e6920 6c616974     : logger initial
   268fc:	74617a69 206e6f69 6c696166 00657275     ization failure.
   2690c:	252f6425 30252c64 253a6432 3a643230     %d/%d,%02d:%02d:
   2691c:	64323025 2c75252c 252c7325 73252c73     %02d,%u,%s,%s,%s
   2692c:	252c7325 30002c75 676f6c3a 7673632e     %s,%u,.0:log.csv
   2693c:	69614600 2064656c 656c6966 69727720     .Failed file wri
   2694c:	203a6574 72724500 2520726f 72772075     te: .Error %u wr
   2695c:	6e697469 6f6c2067 6c696667 25202e65     iting logfile. %
   2696c:	75252f75 69727720 6e657474 7046202e     u/%u written. Fp
   2697c:	203a7274 000a7525 75626564 61770067     tr: %u..debug.wa
   2698c:	65006e72 726f7272 656e5500 63657078     rn.error.Unexpec
   2699c:	20646574 6c6c6163 206f7420 74697865     ted call to exit
   269ac:	55002928 7078656e 65746365 61632064     ().Unexpected ca
   269bc:	74206c6c 696b206f 29286c6c 65642f00     ll to kill()./de
   269cc:	61752f76 00307472 7665642f 7261752f     v/uart0./dev/uar
   269dc:	2f003174 2f766564 00627375              t1./dev/usb.

000269e8 <typeinfo for UartDev>:
   269e8:	00028c6c 000269f4 00026a1c              l....i...j..

000269f4 <typeinfo name for UartDev>:
   269f4:	72615537 76654474 ffffff00              7UartDev....

00026a00 <vtable for UartDev>:
   26a00:	00000000 000269e8 00017b4d 00017aa9     .....i..M{...z..
   26a10:	00017b2d 00017b05 00017b19              -{...{...{..

00026a1c <typeinfo for CharDev>:
   26a1c:	00028c0c 00026a24                       ....$j..

00026a24 <typeinfo name for CharDev>:
   26a24:	61684337 76654472 ffffff00              7CharDev....

00026a30 <vtable for CharDev>:
   26a30:	00000000 00026a1c 0001d649 0001d649     .....j..I...I...
   26a40:	00017d81 00000000 00000000              .}..........

00026a4c <typeinfo name for SingletonTemplate<Uart3>>:
   26a4c:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26a5c:	49657461 72615535 00453374              ateI5Uart3E.

00026a68 <typeinfo for SingletonTemplate<Uart3>>:
   26a68:	00028c0c 00026a4c                       ....Lj..

00026a70 <typeinfo name for Uart3>:
   26a70:	72615535 ff003374                       5Uart3..

00026a78 <typeinfo for Uart3>:
   26a78:	00028ce4 00026a70 00000000 00000002     ....pj..........
   26a88:	000269e8 00000002 00026a68 00000002     .i......hj......

00026a98 <vtable for Uart3>:
   26a98:	00000000 00026a78 00017b4d 00017aa9     ....xj..M{...z..
   26aa8:	00017b2d 000182e1 000182f5              -{..........

00026ab4 <typeinfo name for SingletonTemplate<Uart2>>:
   26ab4:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26ac4:	49657461 72615535 00453274              ateI5Uart2E.

00026ad0 <typeinfo for SingletonTemplate<Uart2>>:
   26ad0:	00028c0c 00026ab4                       .....j..

00026ad8 <typeinfo name for Uart2>:
   26ad8:	72615535 ff003274                       5Uart2..

00026ae0 <typeinfo for Uart2>:
   26ae0:	00028ce4 00026ad8 00000000 00000002     .....j..........
   26af0:	000269e8 00000002 00026ad0 00000002     .i.......j......

00026b00 <vtable for Uart2>:
   26b00:	00000000 00026ae0 00017b4d 00017aa9     .....j..M{...z..
   26b10:	00017b2d 00018389 0001839d              -{..........

00026b1c <typeinfo name for SingletonTemplate<NordicStream>>:
   26b1c:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26b2c:	49657461 6f4e3231 63696472 65727453     ateI12NordicStre
   26b3c:	00456d61                                amE.

00026b40 <typeinfo for SingletonTemplate<NordicStream>>:
   26b40:	00028c0c 00026b1c                       .....k..

00026b48 <typeinfo for NordicStream>:
   26b48:	00028ce4 00026b68 00000000 00000002     ....hk..........
   26b58:	00026a1c 00000002 00026b40 00000002     .j......@k......

00026b68 <typeinfo name for NordicStream>:
   26b68:	6f4e3231 63696472 65727453 ff006d61     12NordicStream..

00026b78 <vtable for NordicStream>:
   26b78:	00000000 00026b48 00018497 00018475     ....Hk......u...
   26b88:	000183f1 0001844d 00018461              ....M...a...

00026b94 <typeinfo name for SingletonTemplate<Uart0>>:
   26b94:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26ba4:	49657461 72615535 00453074              ateI5Uart0E.

00026bb0 <typeinfo for SingletonTemplate<Uart0>>:
   26bb0:	00028c0c 00026b94                       .....k..

00026bb8 <typeinfo name for Uart0>:
   26bb8:	72615535 ff003074                       5Uart0..

00026bc0 <typeinfo for Uart0>:
   26bc0:	00028ce4 00026bb8 00000000 00000002     .....k..........
   26bd0:	000269e8 00000002 00026bb0 00000002     .i.......k......

00026be0 <vtable for Uart0>:
   26be0:	00000000 00026bc0 00017b4d 00017aa9     .....k..M{...z..
   26bf0:	00017b2d 0001851d 00018531 40004000     -{......1....@.@
   26c00:	40008000 40090000 40094000 544c4148     ...@...@.@.@HALT
   26c10:	20474e49 54535953 203a4d45 72756f59     ING SYSTEM: Your
   26c20:	73797320 206d6574 206e6172 2074756f      system ran out 
   26c30:	6d20666f 726f6d65 52282079 21294d41     of memory (RAM)!
   26c40:	4148000a 4e49544c 59532047 4d455453     ..HALTING SYSTEM
   26c50:	7453203a 206b6361 7265766f 776f6c66     : Stack overflow
   26c60:	20796220 6b736174 0a00203a 20797254      by task: ..Try 
   26c70:	72636e69 69736165 7320676e 6b636174     increasing stack
   26c80:	6d656d20 2079726f 7420666f 20736968      memory of this 
   26c90:	6b736174 49000a2e 00454c44 00027509     task...IDLE..u..
   26ca0:	0002750d 00027511 00027515 00027519     .u...u...u...u..
   26cb0:	706f6e2d 746e6972 69614600 2064656c     -noprint.Failed 
   26cc0:	6f206f74 3a6e6570 0a732520 65520a00     to open: %s...Re
   26cd0:	25206461 79622064 20736574 64252040     ad %d bytes @ %d
   26ce0:	2f624b20 00636573 4f525245 47203a52      Kb/sec.ERROR: G
   26cf0:	20657669 7320656d 6372756f 6e612065     ive me source an
   26d00:	65642064 6e697473 6f697461 6964206e     d destination di
   26d10:	74636572 2079726f 61706573 65746172     rectory separate
   26d20:	79622064 73206120 65636170 766e4900     d by a space.Inv
   26d30:	64696c61 73656420 616e6974 6e6f6974     alid destination
   26d40:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   26d50:	6e49000a 696c6176 6f732064 65637275     ..Invalid source
   26d60:	72696420 6f746365 203a7972 7c73257c      directory: |%s|
   26d70:	7325000a 0073252f 79706f43 20732520     ..%s/%s.Copy %s 
   26d80:	25203e2d 203a2073 42206425 73657479     -> %s : %d Bytes
   26d90:	25203a20 45000a73 6c62616e 44006465      : %s..Enabled.D
   26da0:	62617369 0064656c 73756c66 6f4c0068     isabled.flush.Lo
   26db0:	29732867 76616820 65622065 66206e65     g(s) have been f
   26dc0:	6873756c 73006465 75746174 6c420073     lushed.status.Bl
   26dd0:	656b636f 61632064 20736c6c 25203a20     ocked calls  : %
   26de0:	51000a75 65756575 74617720 616d7265     u..Queue waterma
   26df0:	203a6b72 000a7525 68676948 20747365     rk: %u..Highest 
   26e00:	656c6966 69727720 74206574 3a656d69     file write time:
   26e10:	6d752520 43000a73 206c6c61 6e756f63      %ums..Call coun
   26e20:	20207374 203a2020 64207525 25206267     ts    : %u dgb %
   26e30:	6e692075 25206f66 61772075 25206e72     u info %u warn %
   26e40:	72652075 72000a72 65007761 6c62616e     u err..raw.enabl
   26e50:	64002065 62617369 0020656c 6c207325     e .disable .%s l
   26e60:	6567676f 72702072 66746e69 726f6620     ogger printf for
   26e70:	0a732520 73552f00 2f737265 73616b61      %s../Users/akas
   26e80:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   26e90:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   26ea0:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   26eb0:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   26ec0:	61685f64 656c646e 682f7372 6c646e61     d_handlers/handl
   26ed0:	2e737265 00707063 67676f4c 203a6465     ers.cpp.Logged: 
   26ee0:	7c73257c 6573000a 2a250074 75252073     |%s|..set.%*s %u
   26ef0:	20752520 25207525 75252075 20752520      %u %u %u %u %u 
   26f00:	77007525 65746972 73696400 65766f63     %u.write.discove
   26f10:	2a250072 30252073 30252078 75252078     r.%*s %0x %0x %u
   26f20:	65654e00 65642064 65636976 646e6120     .Need device and
   26f30:	67657220 65747369 64612072 73657264      register addres
   26f40:	65520073 73206461 75746174 72662073     s.Read status fr
   26f50:	64206d6f 63697665 23252065 203a5832     om device %#2X: 
   26f60:	203a7325 2020000a 23252020 203a5832     %s: ..    %#2X: 
   26f70:	58322325 2a25000a 30252073 30252078     %#2X..%*s %0x %0
   26f80:	30252078 654e0078 64206465 63697665     x %0x.Need devic
   26f90:	72202c65 73696765 20726574 72646461     e, register addr
   26fa0:	20737365 20646e61 61746164 6f725700     ess and data.Wro
   26fb0:	25206574 20583223 25206f74 3a583223     te %#2X to %#2X:
   26fc0:	3223253a 45000a58 726f7272 69727720     :%#2X..Error wri
   26fd0:	676e6974 206f7420 69766564 25206563     ting to device %
   26fe0:	000a7823 20433249 69766564 72206563     #x..I2C device r
   26ff0:	6f707365 6465646e 206f7420 72646461     esponded to addr
   27000:	20737365 78342325 7243000a 65746165     ess %#4x..Create
   27010:	72696420 6f746365 27207972 20277325      directory '%s' 
   27020:	7325203a 6c46000a 3a687361 2f752520     : %s..Flash: %u/
   27030:	4c207525 3a656669 25692520 70282025     %u Life: %i%% (p
   27040:	20656761 77207525 74746972 25206e65     age %u written %
   27050:	69742075 2973656d 6c46000a 3a687361     u times)..Flash:
   27060:	2f752520 000a7525 706d6554 25203a20      %u/%u..Temp : %
   27070:	75252e75 67694c0a 203a7468 540a7525     u.%u.Light: %u.T
   27080:	20656d69 7325203a 746f6f42 6d695420     ime : %sBoot Tim
   27090:	25203a65 2f753230 75323025 7534252f     e: %02u/%02u/%4u
   270a0:	3230252c 30253a75 253a7532 0a753230     ,%02u:%02u:%02u.
   270b0:	74726155 61572030 6d726574 736b7261     Uart0 Watermarks
   270c0:	7525203a 2075252f 2f787228 0a297874     : %u/%u (rx/tx).
   270d0:	62655200 69746f6f 5320676e 65747379     .Rebooting Syste
   270e0:	654c006d 696e7261 6d20676e 2065646f     m.Learning mode 
   270f0:	62616e65 0064656c 4f525245 53203a52     enabled.ERROR: S
   27100:	70616d65 65726f68 73617720 4c554e20     emaphore was NUL
   27110:	69202c4c 68742073 72272065 746f6d65     L, is the 'remot
   27120:	74202765 206b7361 6e6e7572 3f676e69     e' task running?
   27130:	616e5500 20656c62 6f206f74 206e6570     .Unable to open 
   27140:	27732527 206f7420 74697277 68742065     '%s' to write th
   27150:	69662065 000a656c 20646e45 20656874     e file..End the 
   27160:	656c6966 20796220 6e697375 63252067     file by using %c
   27170:	61686320 74636172 202e7265 20692520      character.  %i 
   27180:	74207369 74206568 6f656d69 000a7475     is the timeout..
   27190:	72726f53 6e202c79 6162206f 70736b63     Sorry, no backsp
   271a0:	20656361 70707573 2074726f 000a283a     ace support :(..
   271b0:	6f727245 636f2072 72727563 77206465     Error occurred w
   271c0:	656c6968 69727720 676e6974 65687420     hile writing the
   271d0:	6c696620 46000a65 616d726f 4b4f2074      file..Format OK
   271e0:	726f4600 2074616d 4f525245 44530052     .Format ERROR.SD
   271f0:	72614320 6f6d2064 65746e75 72450064      Card mounted.Er
   27200:	20726f72 6e756f6d 676e6974 20445320     ror mounting SD 
   27210:	64726143 616c4600 6d206873 746e756f     Card.Flash mount
   27220:	45006465 726f7272 756f6d20 6e69746e     ed.Error mountin
   27230:	6c462067 20687361 6f6d654d 66007972     g Flash Memory.f
   27240:	616d726f 64732074 726f6600 2074616d     ormat sd.format 
   27250:	73616c66 6f6d0068 20746e75 6d006473     flash.mount sd.m
   27260:	746e756f 616c6620 4e006873 00656d61     ount flash.Name.
   27270:	73303125 61745320 20725020 63617453     %10s Sta Pr Stac
   27280:	5043206b 20252555 20202020 20202020     k CPU%%         
   27290:	6d695420 25000a65 20733031 25207325      Time..%10s %s %
   272a0:	25207532 25207535 25207534 20753031     2u %5u %4u %10u 
   272b0:	000a7375 65766f28 61656872 25002964     us..(overhead).%
   272c0:	20733031 202d2d2d 2d202d2d 2d2d2d2d     10s --- -- -----
   272d0:	75342520 30312520 53752075 2a2a000a      %4u %10u uS..**
   272e0:	52415720 474e494e 6e4f203a 7220796c      WARNING: Only r
   272f0:	726f7065 20646574 73726966 75252074     eported first %u
   27300:	73617420 000a736b 69637361 61730069      tasks..ascii.sa
   27310:	54006576 6d656c65 79727465 73617720     ve.Telemetry was
   27320:	76617320 74206465 6964206f 67006b73      saved to disk.g
   27330:	45007465 726f7272 636f6c20 6e697461     et.Error locatin
   27340:	726f2067 69727020 6e69746e 61762067     g or printing va
   27350:	62616972 7620656c 65756c61 71655200     riable value.Req
   27360:	65726975 61702064 656d6172 73726574     uired parameters
   27370:	6727203a 3c207465 706d6f63 6d616e20     : 'get <comp nam
   27380:	3c203e65 20726176 656d616e 5245003e     e> <var name>.ER
   27390:	3a524f52 65655320 65682720 7420706c     ROR: See 'help t
   273a0:	6d656c65 79727465 73250027 2073253a     elemetry'.%s:%s 
   273b0:	20746573 25206f74 46000a73 656c6961     set to %s..Faile
   273c0:	6f742064 74657320 3a732520 74207325     d to set %s:%s t
   273d0:	7325206f 7245000a 20726f72 63207525     o %s..Error %u c
   273e0:	6979706f 7c20676e 207c7325 7c203e2d     opying |%s| -> |
   273f0:	0a7c7325 6e694600 65687369 20202164     %s|..Finished!  
   27400:	64616552 7525203a 2f624b20 2c636573     Read: %u Kb/sec,
   27410:	69725720 203a6574 4b207525 65732f62      Write: %u Kb/se
   27420:	30000a63 6e49003a 696c6176 69642064     c..0:.Invalid di
   27430:	74636572 3a79726f 73257c20 4528207c     rectory: |%s| (E
   27440:	726f7272 29692520 6944000a 74636572     rror %i)..Direct
   27450:	2079726f 7473696c 20676e69 203a666f     ory listing of: 
   27460:	0a0a7325 25632500 25632563 20632563     %s...%c%c%c%c%c 
   27470:	252f7525 2f753230 75323025 32302520     %u/%02u/%02u %02
   27480:	30253a75 25207532 756c3031 33312520     u:%02u %10lu %13
   27490:	2d200073 250a0020 46207534 28656c69     s. - ..%4u File(
   274a0:	202c2973 64303125 74796220 74207365     s), %10d bytes t
   274b0:	6c61746f 6434250a 72694420 00297328     otal.%4d Dir(s).
   274c0:	3125202c 204b6430 65747962 72662073     , %10dK bytes fr
   274d0:	000a6565 65766f4d 73252720 3e2d2027     ee..Move '%s' ->
   274e0:	73252720 203a2027 000a7325 656c6544      '%s' : %s..Dele
   274f0:	27206574 20277325 7325203a 6f6c000a              te '%s' : %s..

000274fe <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   274fe:	48676f6c 6c646e61 52007265 52004e55     logHandler.RUN.R
   2750e:	42005944 53004b4c 44005355 03004c45     DY.BLK.SUS.DEL..
   2751e:	2d040403 2d2d2d2d 2d2d2d2d 2d2d2d2d     ...-------------
   2752e:	2d2d2d2d 2d2d2d2d 2d2d2d2d 6f52000a     ------------..Ro
   2753e:	6e697475 61742067 20656c62 657a6973     uting table size
   2754e:	20736920 000a6925 5344207c 207c2054      is %i..| DST | 
   2755e:	7478654e 504f4820 48207c20 2053504f     Next HOP | HOPS 
   2756e:	7c000a7c 69332520 20207c20 69332520     |..| %3i |   %3i
   2757e:	20202020 3325207c 7c202069 7327000a         | %3i  |..'s
   2758e:	61657274 613c206d 3e726464 736d3c20     tream <addr> <ms
   2759e:	20273e67 7453203a 6d616572 63206120     g>' : Stream a c
   275ae:	616d6d6f 7420646e 6e61206f 6568746f     ommand to anothe
   275be:	6f622072 00647261 65727473 27006d61     r board.stream.'
   275ce:	6e617274 72656673 72733c20 69662063     transfer <src fi
   275de:	616e656c 203e656d 7473643c 6c696620     lename> <dst fil
   275ee:	6d616e65 3c203e65 6464616e 20273e72     ename> <naddr>' 
   275fe:	7254203a 66736e61 61207265 6c696620     : Transfer a fil
   2760e:	6f742065 6f6e6120 72656874 616f6220     e to another boa
   2761e:	74006472 736e6172 00726566 20787227     rd.transfer.'rx 
   2762e:	6d69743c 736d5f65 3a20273e 6c6f5020     <time_ms>' : Pol
   2763e:	6f66206c 20612072 6b636170 72007465     l for a packet.r
   2764e:	61270078 20726464 6464613c 20203e72     x.'addr <addr>  
   2765e:	53203a20 74207465 77206568 6c657269      : Set the wirel
   2766e:	20737365 72646461 00737365 756f7227     ess address.'rou
   2767e:	27736574 53203a20 74206565 77206568     tes' : See the w
   2768e:	6c657269 20737365 74756f72 27007365     ireless routes.'
   2769e:	206b6361 6464613c 3c203e72 61746164     ack <addr> <data
   276ae:	2020273e 6553203a 6120646e 63617020     >'  : Send a pac
   276be:	2074656b 20646e61 74696177 726f6620     ket and wait for
   276ce:	6b636120 6c776f6e 6d676465 00746e65      acknowledgment.
   276de:	63616e27 613c206b 3e726464 61643c20     'nack <addr> <da
   276ee:	273e6174 53203a20 20646e65 61702061     ta>' : Send a pa
   276fe:	74656b63 63616e00 7327006b 73746174     cket.nack.'stats
   2770e:	203a2027 20656553 20656874 65726977     ' : See the wire
   2771e:	7373656c 61747320 52007374 69656365     less stats.Recei
   2772e:	20646576 61746164 6f726620 6925206d     ved data from %i
   2773e:	6f4e000a 74616420 65722061 76696563     ..No data receiv
   2774e:	44006465 61637369 64656472 73206120     ed.Discarded a s
   2775e:	656c6174 72697720 73656c65 61702073     tale wireless pa
   2776e:	74656b63 72724500 7320726f 69646e65     cket.Error sendi
   2777e:	7020676e 656b6361 63202c74 6b636568     ng packet, check
   2778e:	72617020 74656d61 21737265 6d655200      parameters!.Rem
   2779e:	2065746f 65646f6e 6d616e20 27203a65     ote node name: '
   277ae:	63655200 65766965 68742064 63612065     .Received the ac
   277be:	776f6e6b 6764656c 746e656d 61500021     knowledgment!.Pa
   277ce:	74656b63 6e657320 6f742074 20732520     cket sent to %s 
   277de:	20747562 41206f6e 72204b43 69656365     but no ACK recei
   277ee:	00646576 4c494146 53004445 61207465     ved.FAILED.Set a
   277fe:	65726464 74207373 6925206f 7325203a     ddress to %i: %s
   2780e:	3125000a 20733832 38323125 69252073     ..%128s %128s %i
   2781e:	61725400 6566736e 73252072 3e2d2d20     .Transfer %s -->
   2782e:	3a692520 000a7325 656c6966 66756220      %i:%s..file buf
   2783e:	20726566 69252030 5245000a 3a524f52     fer 0 %i..ERROR:
   2784e:	65684320 75736b63 7845206d 74636570      Checksum Expect
   2785e:	25206465 63412069 6c617574 0a692520     ed %i Actual %i.
   2786e:	6c696600 6f632065 74696d6d 20732520     .file commit %s 
   2787e:	25206925 6f000a69 5245006b 3a524f52     %i %i..ok.ERROR:
   2788e:	6d655220 2065746f 65646f6e 64696420      Remote node did
   2789e:	746f6e20 6b636120 6c776f6e 65676465      not acknowledge
   278ae:	6c696620 72772065 20657469 29732528      file write (%s)
   278be:	6553000a 2520746e 69252f69 2020000a     ..Sent %i/%i..  
   278ce:	65522020 76696563 25206465 79622069       Received %i by
   278de:	20736574 7265766f 20692520 6b636170     tes over %i pack
   278ee:	0a737465 73552f00 2f737265 73616b61     ets../Users/akas
   278fe:	442f7668 6d75636f 73746e65 7469472f     hv/Documents/Git
   2790e:	2f627568 55534a53 7665442d 7269662f     hub/SJSU-Dev/fir
   2791e:	7261776d 696c2f65 354c2f62 6769485f     mware/lib/L5_Hig
   2792e:	76654c68 732f6c65 6372756f 6d632f65     hLevel/source/cm
   2793e:	61685f64 656c646e 772f7372 6c657269     d_handlers/wirel
   2794e:	5f737365 646e6168 7372656c 7070632e     ess_handlers.cpp
   2795e:	6f685700 2173706f 70412020 786f7270     .Whoops!  Approx
   2796e:	74616d69 20796c65 62206925 73657479     imately %i bytes
   2797e:	756f6320 6e20646c 6220746f 72702065      could not be pr
   2798e:	65746e69 65622064 73756163 68742065     inted because th
   2799e:	756f2065 74757074 61686320 6c656e6e     e output channel
   279ae:	20736920 206f6f74 776f6c73 5020202e      is too slow.  P
   279be:	7361656c 6f662065 776f6c6c 65687420     lease follow the
   279ce:	67757320 74736567 736e6f69 20746120      suggestions at 
   279de:	656c6966 7325203a 6c206120 6c747469     file: %s a littl
   279ee:	69622065 62612074 2065766f 6c696877     e bit above whil
   279fe:	6f6c2065 6120706f 696c2074 6e20656e     e loop at line n
   27a0e:	65626d75 69252072 6150000a 20657372     umber %i..Parse 
   27a1e:	6f727265 74203a72 203a7972 72747327     error: try: 'str
   27a2e:	206d6165 6464613c 3c203e72 6d6d6f63     eam <addr> <comm
   27a3e:	3e646e61 254e0027 52203a75 78542f78     and>'.N%u: Rx/Tx
   27a4e:	7452202c 764f2f65 52202c74 69727465     , Rte/Ovt, Retri
   27a5e:	4d2f6465 20687365 72746552 2f646569     ed/Mesh Retried/
   27a6e:	65706552 64657461 000a203a 20202020     Repeated: ..    
   27a7e:	2f753325 75332d25 2f752520 202c7525     %3u/%-3u %u/%u, 
   27a8e:	252f7525 75252f75 4b4f000a 6946000a     %u/%u/%u..OK..Fi
   27a9e:	7720656c 65746972 72726520 000a726f     le write error..
   27aae:	6d6d6f63 25007469 2520732a 73383231     commit.%*s %128s
   27abe:	20692520 62006925 65666675 2a250072      %i %i.buffer.%*
   27ace:	69252073 00692520 4f525245 4d203a52     s %i %i.ERROR: M
   27ade:	62207861 65666675 69732072 6920657a     ax buffer size i
   27aee:	69252073 74796220 000a7365 4f525245     s %i bytes..ERRO
   27afe:	54203a52 4f454d49 000a5455 63656843     R: TIMEOUT..Chec
   27b0e:	6d75736b 0a692520 6c694600 6d616e65     ksum %i..Filenam
   27b1e:	68732065 646c756f 20656220 7373656c     e should be less
   27b2e:	61687420 6925206e 61686320 000a7372      than %i chars..
   27b3e:	28207325 62207525 73657479 69772029     %s (%u bytes) wi
   27b4e:	62206c6c 72702065 6172676f 64656d6d     ll be programmed
   27b5e:	65520a2e 746f6f62 20676e69 20776f6e     ..Rebooting now 
   27b6e:	75206f74 61726770 66206564 776d7269     to upgrade firmw
   27b7e:	21657261 55000a0a 6c62616e 6f742065     are!...Unable to
   27b8e:	65706f20 2527206e 000a2773 6b736944      open '%s'..Disk
   27b9e:	72617620 6c626169 63207365 676e6168      variables chang
   27bae:	2e2e6465 6843002e 65676e61 61732073     ed....Changes sa
   27bbe:	20646576 64206f74 2e6b7369 44002e2e     ved to disk....D
   27bce:	206b7369 69726176 656c6261 61732073     isk variables sa
   27bde:	20646576 64206f74 006b7369 4c002008     ved to disk.. .L
   27bee:	203a4350 20202000 696e6946 64656873     PC: .   Finished
   27bfe:	206e6920 75207525 6d000a73 6d6d6f43      in %u us..mComm
   27c0e:	43646e61 746e756f 69446d00 6c546b73     andCount.mDiskTl
   27c1e:	7a69536d 61540065 432f6b73 49205550     mSize.Task/CPU I
   27c2e:	2e6f666e 73552020 69272065 206f666e     nfo.  Use 'info 
   27c3e:	27303032 206f7420 20746567 20555043     200' to get CPU 
   27c4e:	69727564 3220676e 736d3030 65655300     during 200ms.See
   27c5e:	6d656d20 2079726f 6f666e69 6d656d00      memory info.mem
   27c6e:	6f666e69 74754f00 20747570 74737973     info.Output syst
   27c7e:	68206d65 746c6165 74270068 27656d69     em health.'time'
   27c8e:	206f7420 77656976 6d697420 20202e65      to view time.  
   27c9e:	6d697427 65732065 4d4d2074 20444420     'time set MM DD 
   27cae:	59595959 20484820 53204d4d 64572053     YYYY HH MM SS Wd
   27cbe:	20277961 73206f74 74207465 00656d69     ay' to set time.
   27cce:	64616552 66206120 2e656c69 78452020     Read a file.  Ex
   27cde:	6327203a 30207461 6c69663a 78742e65     : 'cat 0:file.tx
   27cee:	6f202774 63272072 30207461 6c69663a     t' or 'cat 0:fil
   27cfe:	78742e65 6e2d2074 6972706f 2027746e     e.txt -noprint' 
   27d0e:	74206f74 20747365 66206669 20656c69     to test if file 
   27d1e:	206e6163 72206562 00646165 00746163     can be read.cat.
   27d2e:	79706f43 6c696620 66207365 2f6d6f72     Copy files from/
   27d3e:	46206f74 6873616c 2044532f 64726143     to Flash/SD Card
   27d4e:	4520202e 27203a78 30207063 6c69663a     .  Ex: 'cp 0:fil
   27d5e:	78742e65 3a312074 656c6966 7478742e     e.txt 1:file.txt
   27d6e:	6f430027 61207970 66206c6c 73656c69     '.Copy all files
   27d7e:	20666f20 69642061 74636572 2079726f      of a directory 
   27d8e:	61206f74 68746f6e 64207265 63657269     to another direc
   27d9e:	79726f74 4520202e 27203a78 20706364     tory.  Ex: 'dcp 
   27dae:	72733a30 3a312063 27747364 70636400     0:src 1:dst'.dcp
   27dbe:	65735500 736c2720 273a3020 726f6620     .Use 'ls 0:' for
   27dce:	616c4620 202c6873 2720726f 3120736c      Flash, or 'ls 1
   27dde:	6620273a 5320726f 61432044 6c006472     :' for SD Card.l
   27dee:	72430073 65746165 64206120 63657269     s.Create a direc
   27dfe:	79726f74 7845202e 6d27203a 7269646b     tory. Ex: 'mkdir
   27e0e:	73657420 6d002774 7269646b 6e655200      test'.mkdir.Ren
   27e1e:	20656d61 69662061 202e656c 203a7845     ame a file. Ex: 
   27e2e:	206d7227 69663a30 742e656c 30207478     'rm 0:file.txt 0
   27e3e:	77656e3a 7478742e 766d0027 69725700     :new.txt'.mv.Wri
   27e4e:	61206574 77656e20 6c696620 45202e65     te a new file. E
   27e5e:	27203a78 3c20666e 656c6966 7478742e     x: 'nf <file.txt
   27e6e:	6552003e 65766f6d 66206120 2e656c69     >.Remove a file.
   27e7e:	3a784520 6d722720 663a3020 2e656c69      Ex: 'rm 0:file.
   27e8e:	27747874 006d7200 63326927 61657220     txt'.rm.'i2c rea
   27e9e:	78302064 30203130 20323078 756f633c     d 0x01 0x02 <cou
   27eae:	273e746e 52203a20 73646165 6f633c20     nt>' : Reads <co
   27ebe:	3e746e75 67657220 65747369 6f207372     unt> registers o
   27ece:	65642066 65636976 30783020 74732031     f device 0x01 st
   27ede:	69747261 6620676e 206d6f72 32307830     arting from 0x02
   27eee:	3269270a 72772063 20657469 31307830     .'i2c write 0x01
   27efe:	30783020 78302032 20273330 203a2020      0x02 0x03'   : 
   27f0e:	74697257 30207365 20333078 64206f74     Writes 0x03 to d
   27f1e:	63697665 78302065 202c3130 20676572     evice 0x01, reg 
   27f2e:	32307830 3269270a 69642063 766f6373     0x02.'i2c discov
   27f3e:	20277265 6944203a 766f6373 20737265     er' : Discovers 
   27f4e:	206c6c61 20433249 69766564 20736563     all I2C devices 
   27f5e:	74206e6f 42206568 69005355 50006332     on the BUS.i2c.P
   27f6e:	6d617261 72657465 27203a73 6d726f66     arameters: 'form
   27f7e:	73207461 202c2764 726f6627 2074616d     at sd', 'format 
   27f8e:	73616c66 202c2768 756f6d27 7320746e     flash', 'mount s
   27f9e:	202c2764 756f6d27 6620746e 6873616c     d', 'mount flash
   27fae:	74730027 6761726f 65520065 746f6f62     '.storage.Reboot
   27fbe:	68742073 79732065 6d657473 62657200     s the system.reb
   27fce:	00746f6f 676f6c27 65683c20 3e6f6c6c     oot.'log <hello>
   27fde:	6c203a27 6120676f 6e69206e 6d206f66     ': log an info m
   27fee:	61737365 270a6567 20676f6c 73756c66     essage.'log flus
   27ffe:	20202768 6c66203a 20687375 20656874     h'  : flush the 
   2800e:	73676f6c 6f6c270a 74732067 73757461     logs.'log status
   2801e:	203a2027 20746567 74617473 6f207375     ' : get status o
   2802e:	68742066 6f6c2065 72656767 6f6c270a     f the logger.'lo
   2803e:	6e652067 656c6261 69727020 6420746e     g enable print d
   2804e:	67756265 666e692f 61772f6f 652f6e72     ebug/info/warn/e
   2805e:	726f7272 203a2027 62616e45 2073656c     rror' : Enables 
   2806e:	67676f6c 63207265 736c6c61 206f7420     logger calls to 
   2807e:	6e697270 270a6674 20676f6c 61736964     printf.'log disa
   2808e:	20656c62 6e697270 65642074 2f677562     ble print debug/
   2809e:	6f666e69 7261772f 72652f6e 27726f72     info/warn/error'
   280ae:	6944203a 6c626173 6c207365 6567676f     : Disables logge
   280be:	61632072 20736c6c 70206f74 746e6972     r calls to print
   280ce:	6c000a66 4200676f 6e696765 206f7420     f..log.Begin to 
   280de:	7261656c 5249206e 646f6320 66207365     learn IR codes f
   280ee:	6e20726f 65626d75 30207372 6c00392d     or numbers 0-9.l
   280fe:	6e726165 65735500 69772720 656c6572     earn.Use 'wirele
   2810e:	20277373 73206f74 74206565 6e206568     ss' to see the n
   2811e:	65747365 6f632064 6e616d6d 47007364     ested commands.G
   2812e:	61207465 6c696620 73752065 20676e69     et a file using 
   2813e:	6c74656e 2e64616f 20657865 6220726f     netload.exe or b
   2814e:	73752079 20676e69 20656874 6c6c6f66     y using the foll
   2815e:	6e69776f 72702067 636f746f 0a3a6c6f     owing protocol:.
   2816e:	74697257 75622065 72656666 7562203a     Write buffer: bu
   2817e:	72656666 666f3c20 74657366 6e3c203e     ffer <offset> <n
   2818e:	62206d75 73657479 2e2e203e 72570a2e     um bytes> ....Wr
   2819e:	20657469 66667562 74207265 6966206f     ite buffer to fi
   281ae:	203a656c 6d6d6f63 3c207469 656c6966     le: commit <file
   281be:	656d616e 663c203e 20656c69 7366666f     name> <file offs
   281ce:	203e7465 6d756e3c 74796220 66207365     et> <num bytes f
   281de:	206d6f72 66667562 003e7265 616c6627     rom buffer>.'fla
   281ee:	3c206873 656c6966 656d616e 5720273e     sh <filename>' W
   281fe:	206c6c69 73616c66 50432068 69772055     ill flash CPU wi
   2820e:	74206874 20736968 2077656e 616e6962     th this new bina
   2821e:	66207972 00656c69 7074754f 20737475     ry file.Outputs 
   2822e:	69676572 72657473 74206465 6d656c65     registered telem
   2823e:	79727465 7427203a 6d656c65 79727465     etry: 'telemetry
   2824e:	76617320 3a202765 76615320 64207365      save' : Saves d
   2825e:	206b7369 0a6c6574 6c657427 74656d65     isk tel.'telemet
   2826e:	61207972 69696373 203a2027 6e697250     ry ascii' : Prin
   2827e:	61207374 74206c6c 6d656c65 79727465     ts all telemetry
   2828e:	206e6920 616d7568 6572206e 62616461      in human readab
   2829e:	6620656c 616d726f 74270a74 6d656c65     le format.'telem
   282ae:	79727465 6f633c20 202e706d 656d616e     etry <comp. name
   282be:	6e3c203e 3e656d61 61763c20 3e65756c     > <name> <value>
   282ce:	6f742027 74657320 74206120 6d656c65     ' to set a telem
   282de:	79727465 72617620 6c626169 74270a65     etry variable.'t
   282ee:	6d656c65 79727465 74656720 6f633c20     elemetry get <co
   282fe:	202e706d 656d616e 6e3c203e 3e656d61     mp. name> <name>
   2830e:	6f742027 74656720 72617620 6c626169     ' to get variabl
   2831e:	61762065 0a65756c 6c657400 74656d65     e value..telemet
   2832e:	74007972 696d7265 006c616e 8c6cffff              ry.terminal...

0002833c <typeinfo for terminalTask>:
   2833c:	00028c6c 00028348 00026634              l...H...4f..

00028348 <typeinfo name for terminalTask>:
   28348:	65743231 6e696d72 61546c61 ff006b73     12terminalTask..

00028358 <vtable for terminalTask>:
   28358:	00000000 0002833c 0001b6cd 0001b719     ....<...........
   28368:	000160c9 0001b72d 0001bbc9 0001babd     .`..-...........
   28378:	656e6f44 72724500 4400726f 21656e6f     Done.Error.Done!
   28388:	52524500 203a524f 73736f50 656c6269     .ERROR: Possible
   28398:	6f687320 6f207472 4453206e 726f2041      short on SDA or
   283a8:	4c435320 72697720 49282065 29324332      SCL wire (I2C2)
   283b8:	52450021 3a524f52 69614620 2064656c     !.ERROR: Failed 
   283c8:	69206f74 6974696e 7a696c61 69772065     to initialize wi
   283d8:	656c6572 53007373 65747379 6f42206d     reless.System Bo
   283e8:	4020746f 332e2520 684d2066 53000a7a     ot @ %.3f Mhz..S
   283f8:	65747379 6572206d 746f6f62 61206465     ystem rebooted a
   28408:	72657466 61726320 202e6873 6c655220     fter crash.  Rel
   28418:	6e617665 6e692074 0a3a6f66 203a4350     evant info:.PC: 
   28428:	30257830 202e5838 3a524c20 25783020     0x%08X.  LR: 0x%
   28438:	2e583830 53502020 30203a52 38302578     08X.  PSR: 0x%08
   28448:	6f500a58 62697373 6c20656c 20747361     X.Possible last 
   28458:	6e6e7572 20676e69 5420534f 3a6b7361     running OS Task:
   28468:	73252720 20000a27 73616c46 45002068      '%s'.. Flash .E
   28478:	69736172 6120676e 6620646e 616d726f     rasing and forma
   28488:	6e697474 50532067 6c662049 2c687361     tting SPI flash,
   28498:	69687420 61632073 6174206e 6120656b      this can take a
   284a8:	69687720 2e20656c 00202e2e 20495053      while ... .SPI 
   284b8:	53414c46 73692048 736f7020 6c626973     FLASH is possibl
   284c8:	61642079 6567616d 50002164 20656761     y damaged!.Page 
   284d8:	657a6973 7525203a 654d000a 7320206d     size: %u..Mem  s
   284e8:	3a657a69 20752520 77617228 74796220     ize: %u (raw byt
   284f8:	0a297365 52524500 203a524f 65636341     es)..ERROR: Acce
   28508:	6172656c 6e6f6974 6e655320 00726f73     leration Sensor.
   28518:	4f525245 54203a52 65706d65 75746172     ERROR: Temperatu
   28528:	53206572 6f736e65 52450072 3a524f52     re Sensor.ERROR:
   28538:	532d3720 656d6765 4420746e 6c707369      7-Segment Displ
   28548:	6e007961 72646461 74655300 72697720     ay.naddr.Set wir
   28558:	73656c65 6f6e2073 61206564 65726464     eless node addre
   28568:	74207373 6925206f 6f726620 2527206d     ss to %i from '%
   28578:	66202773 3a656c69 0a732520 616f4200     s' file: %s..Boa
   28588:	49206472 73692044 2527203a 28202773     rd ID is: '%s' (
   28598:	30257830 0a295832 746e4500 61207265     0x%02X)..Enter a
   285a8:	616f6220 49206472 36282044 68632034      board ID (64 ch
   285b8:	20737261 2978616d 2500203a 00733436     ars max): .%64s.
   285c8:	72616f42 44492064 206f7420 676f7270     Board ID to prog
   285d8:	3a6d6172 73252720 45000a27 7265746e     ram: '%s'..Enter
   285e8:	27592720 206f7420 666e6f63 2e6d7269      'Y' to confirm.
   285f8:	4f422020 20445241 43204449 4f4e4e41       BOARD ID CANNO
   28608:	45422054 41484320 4445474e 444e4120     T BE CHANGED AND
   28618:	20534920 4d524550 4e454e41 33250054      IS PERMANENT.%3
   28628:	6f420073 20647261 6e204449 7020746f     s.Board ID not p
   28638:	72676f72 656d6d61 6f590064 61632075     rogrammed.You ca
   28648:	7270206e 6172676f 2061206d 4d524550     n program a PERM
   28658:	4e454e41 44492054 20666f20 72756f79     ANENT ID of your
   28668:	616f6220 002e6472 64206f54 6874206f      board..To do th
   28678:	202c7369 646c6f68 31575320 646e6120     is, hold SW1 and
   28688:	34575320 646e6120 73657220 74207465      SW4 and reset t
   28698:	62206568 6472616f 5043002e 6c662055     he board..CPU fl
   286a8:	20687361 65746c61 2f646572 676f7270     ash altered/prog
   286b8:	6d6d6172 63206465 746e756f 25203a73     rammed counts: %
   286c8:	75252f75 5043000a 72702055 6172676f     u/%u..CPU progra
   286d8:	64656d6d 616c6620 28206873 2f6e696d     mmed flash (min/
   286e8:	2978616d 7525203a 2d20624b 4b752520     max): %uKb - %uK
   286f8:	4c000a62 20747361 676f7270 6d6d6172     b..Last programm
   28708:	20676e69 6b6f6f74 20752520 000a736d     ing took %u ms..
   28718:	6c6c6143 20676e69 72756f79 69616d20     Calling your mai
   28728:	0029286e 2d2d2d2d 2d2d2d2d 2d2d2d2d     n().------------
   28738:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   28748:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   28758:	2d2d2d2d 2d2d2d2d 2d2d2d2d 4b002d2d     --------------.K
   28768:	424d0042 73655900 006f4e00 203a7325     B.MB.Yes.No.%s: 
   28778:	2d204b4f 6143202d 69636170 25207974     OK -- Capacity %
   28788:	2564352d 41202c73 6c696176 656c6261     -5d%s, Available
   28798:	2d25203a 73257535 7325000a 7245203a     : %-5u%s..%s: Er
   287a8:	20726f72 6e20726f 7020746f 65736572     ror or not prese
   287b8:	202e746e 72724520 2320726f 202c6925     nt.  Error #%i, 
   287c8:	6e756f4d 3a646574 0a732520 6eef5300     Mounted: %s..S.n
   287d8:	00000000 69784500 00000074 33504d00     .....Exit....MP3
   287e8:	494e4920 54535f54 20545241 00203a3a      INIT_START :: .
   287f8:	504d4553 445f5248 204e574f 00203a3a     SEMPHR_DOWN :: .
   28808:	504d4553 555f5248 3a3a2050 49500020     SEMPHR_UP :: .PI
   28818:	45535f4e 3a3a2054 50530020 45535f49     N_SET :: .SPI_SE
   28828:	3a3a2054 4f420020 4500544f 3a3a2044     T :: .BOOT.ED ::
   28838:	49200020 4d4f434e 54454c50 3a3a2045      . INCOMPLETE ::
   28848:	41570020 4e494e52 4d203a47 20545355      .WARNING: MUST 
   28858:	54494e49 444e4120 4f4f4220 49462054     INIT AND BOOT FI
   28868:	21545352 4e455300 41570044 4e494e52     RST!.SEND.WARNIN
   28878:	4d203a47 4e203350 4920544f 4954494e     G: MP3 NOT INITI
   28888:	5a494c41 002e4445 69460000 4520656c     ALIZED....File E
   28898:	726f7272 4944203a 455f4b53 002e5252     rror: DISK_ERR..
   288a8:	656c6946 72724520 203a726f 5f544e49     File Error: INT_
   288b8:	2e525245 6c694600 72452065 3a726f72     ERR..File Error:
   288c8:	544f4e20 4145525f 002e5944 454c4946      NOT_READY..FILE
   288d8:	52524520 203a524f 465f4f4e 2e454c49      ERROR: NO_FILE.
   288e8:	6c694600 72452065 3a726f72 5f4f4e20     .File Error: NO_
   288f8:	48544150 6946002e 4520656c 726f7272     PATH..File Error
   28908:	4e49203a 494c4156 414e5f44 002e454d     : INVALID_NAME..
   28918:	656c6946 72724520 203a726f 6d726550     File Error: Perm
   28928:	69737369 44206e6f 45494e45 46002e44     ission DENIED..F
   28938:	20656c69 6f727245 49203a72 4c41564e     ile Error: INVAL
   28948:	4f5f4449 43454a42 46002e54 20656c69     ID_OBJECT..File 
   28958:	6f727245 54203a72 4f454d49 002e5455     Error: TIMEOUT..
   28968:	656c6946 72724520 203a726f 41564e49     File Error: INVA
   28978:	5f44494c 56495244 46002e45 20656c69     LID_DRIVE..File 
   28988:	6f727245 4e203a72 455f544f 4c42414e     Error: NOT_ENABL
   28998:	002e4445 656c6946 72724520 203a726f     ED..File Error: 
   289a8:	465f4f4e 53454c49 45545359 46002e4d     NO_FILESYSTEM..F
   289b8:	20656c69 6f727245 4e203a72 455f544f     ile Error: NOT_E
   289c8:	47554f4e 4f435f48 002e4552 656c6946     NOUGH_CORE..File
   289d8:	72724520 203a726f 5f4f4f54 594e414d      Error: TOO_MANY
   289e8:	45504f5f 49465f4e 2e53454c 6c694600     _OPEN_FILES..Fil
   289f8:	72452065 3a726f72 766e4920 64696c61     e Error: Invalid
   28a08:	45524620 544c5553 74657220 2e6e7275      FRESULT return.
   28a18:	003a3100 4542414c 203a3a4c 000a7325     .1:.LABEL:: %s..
   28a28:	474e4f53 53494c20 00203a54 33504d2e     SONG LIST: ..MP3
   28a38:	706d2e00 64250033 2500203a 000a2073     ..mp3.%d: .%s ..
   28a48:	25203a3f 58000a73 7325203a 4154000a     ?: %s..X: %s..TA
   28a58:	31002b47 0073253a 4e45504f 203a3a20     G+.1:%s.OPEN :: 
   28a68:	45455300 3a3a204b 45520020 3a204441     .SEEK :: .READ :
   28a78:	4900203a 505f544e 203a4e49 000a6425     : .INT_PIN: %d..
   28a88:	74756143 3a6e6f69 726f5020 64252074     Caution: Port %d
   28a98:	6e695020 20642520 65746e49 70757272      Pin %d Interrup
   28aa8:	61772074 6c612073 64616572 65732079     t was already se
   28ab8:	000a2e74 544f4724 69253a4f 0a69253a     t...$GOTO:%i:%i.
   28ac8:	4c432400 43535f52 50000a52 6979616c     .$CLR_SCR..Playi
   28ad8:	253a676e 6f4e0073 6e696874 73692067     ng:%s.Nothing is
   28ae8:	616c7020 676e6979 3e2d002e 20007325      playing..->%s. 
   28af8:	00732520 20202020 20202020 20202020      %s.            
   28b08:	20202020 20202020 20202020 4e002020                   .N
   28b18:	6f73206f 2073676e 65726577 6f747320     o songs were sto
   28b28:	2e646572 71655200 74736575 74206465     red..Requested t
   28b38:	6c70206f 203a7961 0a2e7325 2f3a3100     o play: %s...1:/
   28b48:	46007325 53494e49 3a444548 2e732520     %s.FINISHED: %s.
   28b58:	7245000a 3a726f72 65755120 20736575     ..Error: Queues 
   28b68:	65726577 746f6e20 65726320 64657461     were not created
   28b78:	6f4e002e 6e6f7320 77207367 20657265     ..No songs were 
   28b88:	63637573 66737365 796c6c75 706d6920     successfully imp
   28b98:	6574726f 52002e64 494e4e55 0021474e     orted..RUNNING!.
   28ba8:	79616c50 676e6f53 44434c00 54554200     PlaySong.LCD.BUT
   28bb8:	534e4f54 696e4900 6c616974 74617a69     TONS.Initializat
   28bc8:	206e6f69 656e6f44 ffff002e              ion Done....

00028bd4 <typeinfo for __cxxabiv1::__class_type_info>:
   28bd4:	00028c6c 00028be0 00028c90              l...........

00028be0 <typeinfo name for __cxxabiv1::__class_type_info>:
   28be0:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   28bf0:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   28c00:	ffff0045                                E...

00028c04 <vtable for __cxxabiv1::__class_type_info>:
   28c04:	00000000 00028bd4 0001d585 0001d599     ................
   28c14:	0001d759 0001d759 0001d5c5 0001d545     Y...Y.......E...
   28c24:	0001d5ad 0001d5ef 0001d579              ........y...

00028c30 <typeinfo for __cxxabiv1::__si_class_type_info>:
   28c30:	00028c6c 00028c3c 00028bd4              l...<.......

00028c3c <typeinfo name for __cxxabiv1::__si_class_type_info>:
   28c3c:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   28c4c:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   28c5c:	456f666e ffffff00                       nfoE....

00028c64 <vtable for __cxxabiv1::__si_class_type_info>:
   28c64:	00000000 00028c30 0001d651 0001d665     ....0...Q...e...
   28c74:	0001d759 0001d759 0001d5c5 0001d545     Y...Y.......E...
   28c84:	0001d72d 0001d6b1 0001d679              -.......y...

00028c90 <typeinfo for std::type_info>:
   28c90:	00028c0c 00028c98                       ........

00028c98 <typeinfo name for std::type_info>:
   28c98:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

00028ca8 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   28ca8:	00028c6c 00028cb4 00028bd4              l...........

00028cb4 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   28cb4:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   28cc4:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   28cd4:	6f666e69 ffff0045                       infoE...

00028cdc <vtable for __cxxabiv1::__vmi_class_type_info>:
   28cdc:	00000000 00028ca8 0001d789 0001d79d     ................
   28cec:	0001d759 0001d759 0001d5c5 0001d545     Y...Y.......E...
   28cfc:	0001dae1 0001d84f 0001d7b1              ....O.......

00028d08 <__sf_fake_stderr>:
	...

00028d28 <__sf_fake_stdin>:
	...

00028d48 <__sf_fake_stdout>:
	...

00028d68 <_global_impure_ptr>:
   28d68:	2007c0e4 4f500043 00584953              ... C.POSIX.

00028d74 <DAYS_IN_MONTH>:
   28d74:	0000001f 0000001c 0000001f 0000001e     ................
   28d84:	0000001f 0000001e 0000001f 0000001f     ................
   28d94:	0000001e 0000001f 0000001e 0000001f     ................

00028da4 <_DAYS_BEFORE_MONTH>:
   28da4:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   28db4:	00000078 00000097 000000b5 000000d4     x...............
   28dc4:	000000f3 00000111 00000130 0000014e     ........0...N...

00028dd4 <__month_lengths>:
   28dd4:	0000001f 0000001c 0000001f 0000001e     ................
   28de4:	0000001f 0000001e 0000001f 0000001f     ................
   28df4:	0000001e 0000001f 0000001e 0000001f     ................
   28e04:	0000001f 0000001d 0000001f 0000001e     ................
   28e14:	0000001f 0000001e 0000001f 0000001f     ................
   28e24:	0000001e 0000001f 0000001e 0000001f     ................
   28e34:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   28e44:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   28e54:	32313000 36353433 61393837 65646362     .0123456789abcde
   28e64:	25650066 ff00646c                       f.e%ld..

00028e6c <fpi.6129>:
   28e6c:	00000035 fffffbce 000003cb 00000001     5...............
   28e7c:	00000000                                ....

00028e80 <fpinan.6165>:
   28e80:	00000034 fffffbce 000003cb 00000001     4...............
   28e90:	00000000 ffffffff                       ........

00028e98 <tinytens>:
   28e98:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   28ea8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   28eb8:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   28ec8:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   28ed8:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   28ee8:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   28ef8:	006e2575 73332e25 332e2520 64332573     u%n.%.3s %.3s%3d
   28f08:	322e2520 2e253a64 253a6432 2064322e      %.2d:%.2d:%.2d 
   28f18:	000a6425                                %d..

00028f1c <day_name.4714>:
   28f1c:	4d6e7553 75546e6f 64655765 46756854     SunMonTueWedThuF
   28f2c:	61536972 6e614a74                                riSat

00028f31 <mon_name.4715>:
   28f31:	466e614a 614d6265 72704172 4a79614d     JanFebMarAprMayJ
   28f41:	754a6e75 6775416c 4f706553 6f4e7463     unJulAugSepOctNo
   28f51:	63654476                                vDec

00028f55 <_ctype_>:
   28f55:	20202000 20202020 28282020 20282828     .         ((((( 
   28f65:	20202020 20202020 20202020 20202020                     
   28f75:	10108820 10101010 10101010 10101010      ...............
   28f85:	04040410 04040404 10040404 10101010     ................
   28f95:	41411010 41414141 01010101 01010101     ..AAAAAA........
   28fa5:	01010101 01010101 01010101 10101010     ................
   28fb5:	42421010 42424242 02020202 02020202     ..BBBBBB........
   28fc5:	02020202 02020202 02020202 10101010     ................
   28fd5:	00000020 00000000 00000000 00000000      ...............
	...
   29055:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   29065:	00ffffff                                         ...

00029068 <__mprec_bigtens>:
   29068:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   29078:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   29088:	7f73bf3c 75154fdd                       <.s..O.u

00029090 <__mprec_tens>:
   29090:	00000000 3ff00000 00000000 40240000     .......?......$@
   290a0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   290b0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   290c0:	00000000 412e8480 00000000 416312d0     .......A......cA
   290d0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   290e0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   290f0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   29100:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   29110:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   29120:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   29130:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   29140:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   29150:	79d99db4 44ea7843                       ...yCx.D

00029158 <p05.6047>:
   29158:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   29168:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   29178:	00029196 00029199 0002919c 61462d41     ............A-Fa
   29188:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   29198:	00303000 ff005878                       .00.xX..

000291a0 <__init_array_start>:
__preinit_array_start():
   291a0:	0001cda9 	.word	0x0001cda9
   291a4:	0001d485 	.word	0x0001d485

000291a8 <APP_SYM_TABLE>:
__symbol_table_start():
   291a8:	31303030 30623138 41205420 495f4344     000181b0 T ADC_I
   291b8:	61485152 656c646e 30300a72 38383130     RQHandler.000188
   291c8:	54203866 4e414320 5152495f 646e6148     f8 T CAN_IRQHand
   291d8:	0a72656c 31303030 63643038 45205420     ler.000180dc T E
   291e8:	33544e49 5152495f 646e6148 0a72656c     INT3_IRQHandler.
   291f8:	31303030 63663738 49205420 5f324332     000187fc T I2C2_
   29208:	48515249 6c646e61 300a7265 37313030     IRQHandler.00017
   29218:	20386365 49522054 52495f54 6e614851     ec8 T RIT_IRQHan
   29228:	72656c64 3030300a 61613631 20542030     dler.00016aa0 T 
   29238:	5f435452 48515249 6c646e61 300a7265     RTC_IRQHandler.0
   29248:	30313030 20383135 49542054 3152454d     0010518 T TIMER1
   29258:	5152495f 646e6148 0a72656c 31303030     _IRQHandler.0001
   29268:	30613538 55205420 30545241 5152495f     85a0 T UART0_IRQ
   29278:	646e6148 0a72656c 31303030 63633338     Handler.000183cc
   29288:	55205420 32545241 5152495f 646e6148      T UART2_IRQHand
   29298:	0a72656c 31303030 34363338 55205420     ler.00018364 T U
   292a8:	33545241 5152495f 646e6148 0a72656c     ART3_IRQHandler.
   292b8:	31303030 63353261 63205420 61487461     0001a25c T catHa
   292c8:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   292d8:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   292e8:	36366131 20542063 48706364 6c646e61     1a66c T dcpHandl
   292f8:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   29308:	76202c26 2a64696f 30300a29 30613130     &, void*).0001a0
   29318:	54203434 676f6c20 646e6148 2872656c     44 T logHandler(
   29328:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   29338:	64696f76 300a292a 64313030 20303733     void*).0001d370 
   29348:	656e2054 75427478 6e6f7474 300a2928     T nextButton().0
   29358:	63313030 20306464 6c702054 75427961     001cdd0 T playBu
   29368:	6e6f7474 300a2928 64313030 20343933     tton().0001d394 
   29378:	72702054 75427665 6e6f7474 300a2928     T prevButton().0
   29388:	39313030 20303866 69742054 6148656d     0019f80 T timeHa
   29398:	656c646e 74732872 202c2672 72616843     ndler(str&, Char
   293a8:	26766544 6f76202c 292a6469 3030300a     Dev&, void*).000
   293b8:	62336431 20542038 74756276 546e6f74     1d3b8 T vbuttonT
   293c8:	286b7361 64696f76 300a292a 61313030     ask(void*).0001a
   293d8:	20386462 32692054 486f4963 6c646e61     bd8 T i2cIoHandl
   293e8:	73287265 2c267274 61684320 76654472     er(str&, CharDev
   293f8:	76202c26 2a64696f 30300a29 34613130     &, void*).0001a4
   29408:	54203065 646b6d20 61487269 656c646e     e0 T mkdirHandle
   29418:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   29428:	6f76202c 292a6469 3030300a 35666331     , void*).0001cf5
   29438:	20542034 656c6573 75427463 6e6f7474     4 T selectButton
   29448:	300a2928 64313030 20343333 6c762054     ().0001d334 T vl
   29458:	645f6463 6c707369 76287961 2a64696f     cd_display(void*
   29468:	30300a29 66613130 54206331 52737720     ).0001af1c T wsR
   29478:	61486574 656c646e 74732872 202c2672     teHandler(str&, 
   29488:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   29498:	3030300a 33616131 20542030 6c616568     .0001aa30 T heal
   294a8:	61486874 656c646e 74732872 202c2672     thHandler(str&, 
   294b8:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   294c8:	3030300a 36386131 20542034 6f626572     .0001a864 T rebo
   294d8:	6148746f 656c646e 74732872 202c2672     otHandler(str&, 
   294e8:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   294f8:	3030300a 39356231 20542034 46746567     .0001b594 T getF
   29508:	48656c69 6c646e61 73287265 2c267274     ileHandler(str&,
   29518:	61684320 76654472 76202c26 2a64696f      CharDev&, void*
   29528:	30300a29 39613130 54203864 61656c20     ).0001a9d8 T lea
   29538:	72496e72 646e6148 2872656c 26727473     rnIrHandler(str&
   29548:	6843202c 65447261 202c2676 64696f76     , CharDev&, void
   29558:	300a292a 30313030 20303232 6f6c2054     *).00010220 T lo
   29568:	656c5f77 5f6c6576 74696e69 300a2928     w_level_init().0
   29578:	39313030 20633566 656d2054 666e496d     0019f5c T memInf
   29588:	6e61486f 72656c64 72747328 43202c26     oHandler(str&, C
   29598:	44726168 2c267665 696f7620 0a292a64     harDev&, void*).
   295a8:	31303030 34623561 6e205420 69467765     0001a5b4 T newFi
   295b8:	6148656c 656c646e 74732872 202c2672     leHandler(str&, 
   295c8:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   295d8:	3030300a 61376131 20542038 726f7473     .0001a7a8 T stor
   295e8:	48656761 6c646e61 73287265 2c267274     ageHandler(str&,
   295f8:	61684320 76654472 76202c26 2a64696f      CharDev&, void*
   29608:	30300a29 31643130 54203833 64707520     ).0001d138 T upd
   29618:	5f657461 70736964 2879616c 30300a29     ate_display().00
   29628:	66633130 54203834 655f6320 33746e69     01cf48 T c_eint3
   29638:	6e61685f 72656c64 300a2928 62313030     _handler().0001b
   29648:	20636666 69682054 6c5f6867 6c657665     ffc T high_level
   29658:	696e695f 0a292874 31303030 63353436     _init().0001645c
   29668:	73205420 64656863 72656c75 6174735f      T scheduler_sta
   29678:	62287472 2c6c6f6f 6f6f6220 300a296c     rt(bool, bool).0
   29688:	39313030 20343765 61742054 694c6b73     0019e74 T taskLi
   29698:	61487473 656c646e 74732872 202c2672     stHandler(str&, 
   296a8:	72616843 26766544 6f76202c 292a6469     CharDev&, void*)
   296b8:	3030300a 31306231 20542034 65726977     .0001b014 T wire
   296c8:	7373656c 646e6148 2872656c 26727473     lessHandler(str&
   296d8:	6843202c 65447261 202c2676 64696f76     , CharDev&, void
   296e8:	300a292a 63313030 20303066 75612054     *).0001cf00 T au
   296f8:	446f6964 646f6365 61547265 76286b73     dioDecoderTask(v
   29708:	2a64696f 30300a29 34623130 54203065     oid*).0001b4e0 T
   29718:	616c6620 72506873 6148676f 656c646e      flashProgHandle
   29728:	74732872 202c2672 72616843 26766544     r(str&, CharDev&
   29738:	6f76202c 292a6469 3030300a 39386131     , void*).0001a89
   29748:	20542034 656c6574 7274656d 6e614879     4 T telemetryHan
   29758:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   29768:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   29778:	34303863 64205420 7165725f 746e695f     c804 T d_req_int
   29788:	6e61685f 72656c64 300a2928 63313030     _handler().0001c
   29798:	20633039 72702054 5f746e69 73657266     90c T print_fres
   297a8:	5f746c75 2867736d 53455246 29544c55     ult_msg(FRESULT)
   297b8:	3030300a 34343631 20542030 65686373     .00016440 T sche
   297c8:	656c7564 64615f72 61745f64 73286b73     duler_add_task(s
   297d8:	64656863 72656c75 7361745f 0a292a6b     cheduler_task*).
   297e8:	31303030 30393236 73205420 64656863     00016290 T sched
   297f8:	72656c75 696e695f 6c615f74 6f62286c     uler_init_all(bo
   29808:	0a296c6f 31303030 34303730 73205420     ol).00010704 T s
   29818:	635f7379 6b636f6c 6e6f635f 75676966     ys_clock_configu
   29828:	29286572 3030300a 36313631 20542063     re().0001616c T 
   29838:	65686373 656c7564 5f635f72 6b736174     scheduler_c_task
   29848:	6972705f 65746176 696f7628 0a292a64     _private(void*).
   29858:	31303030 30383130 62205420 695f7373     00010180 T bss_i
   29868:	2874696e 69736e75 64656e67 746e6920     nit(unsigned int
   29878:	6e75202c 6e676973 69206465 0a29746e     , unsigned int).
   29888:	31303030 63643161 63205420 6e614870     0001a1dc T cpHan
   29898:	72656c64 72747328 43202c26 44726168     dler(str&, CharD
   298a8:	2c267665 696f7620 0a292a64 31303030     ev&, void*).0001
   298b8:	61363130 64205420 5f617461 74696e69     016a T data_init
   298c8:	736e7528 656e6769 6e692064 75202c74     (unsigned int, u
   298d8:	6769736e 2064656e 2c746e69 736e7520     nsigned int, uns
   298e8:	656e6769 6e692064 300a2974 61313030     igned int).0001a
   298f8:	20633533 736c2054 646e6148 2872656c     35c T lsHandler(
   29908:	26727473 6843202c 65447261 202c2676     str&, CharDev&, 
   29918:	64696f76 300a292a 61313030 20383535     void*).0001a558 
   29928:	766d2054 646e6148 2872656c 26727473     T mvHandler(str&
   29938:	6843202c 65447261 202c2676 64696f76     , CharDev&, void
   29948:	300a292a 61313030 20633135 6d722054     *).0001a51c T rm
   29958:	646e6148 2872656c 26727473 6843202c     Handler(str&, Ch
   29968:	65447261 202c2676 64696f76 300a292a     arDev&, void*).0
   29978:	63313030 20346564 50762054 5379616c     001cde4 T vPlayS
   29988:	28676e6f 64696f76 300a292a 34313030     ong(void*).00014
   29998:	20386465 454c2054 69445f44 616c7073     ed8 T LED_Displa
   299a8:	733a3a79 654c7465 69447466 28746967     y::setLeftDigit(
   299b8:	72616863 30300a29 65343130 54203066     char).00014ef0 T
   299c8:	44454c20 7369445f 79616c70 65733a3a      LED_Display::se
   299d8:	67695274 69447468 28746967 72616863     tRightDigit(char
   299e8:	30300a29 66343130 54203830 44454c20     ).00014f08 T LED
   299f8:	7369445f 79616c70 6e693a3a 29287469     _Display::init()
   29a08:	3030300a 34663431 20542030 5f44454c     .00014f40 T LED_
   29a18:	70736944 3a79616c 7465733a 626d754e     Display::setNumb
   29a28:	63287265 29726168 3030300a 33366331     er(char).0001c63
   29a38:	20542030 5f33504d 4f434544 3a524544     0 T MP3_DECODER:
   29a48:	696e693a 50472874 2c2a4f49 49504720     :init(GPIO*, GPI
   29a58:	202c2a4f 4f495047 47202c2a 2a4f4950     O*, GPIO*, GPIO*
   29a68:	30300a29 35633130 54203861 33504d20     ).0001c5a8 T MP3
   29a78:	4345445f 5245444f 65733a3a 4353646e     _DECODER::sendSC
   29a88:	6e752849 6e676973 63206465 2c726168     I(unsigned char,
   29a98:	736e7520 656e6769 68632064 202c7261      unsigned char, 
   29aa8:	69736e75 64656e67 6f687320 0a297472     unsigned short).
   29ab8:	31303030 34613763 4d205420 445f3350     0001c7a4 T MP3_D
   29ac8:	444f4345 3a3a5245 646e6573 28494453     ECODER::sendSDI(
   29ad8:	69736e75 64656e67 61686320 202c2a72     unsigned char*, 
   29ae8:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   29af8:	38633130 54206331 33504d20 4345445f     01c81c T MP3_DEC
   29b08:	5245444f 65733a3a 6c6f5674 28656d75     ODER::setVolume(
   29b18:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   29b28:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   29b38:	35633130 54203037 33504d20 4345445f     01c570 T MP3_DEC
   29b48:	5245444f 504d3a3a 45445f33 45444f43     ODER::MP3_DECODE
   29b58:	0a292852 31303030 30373563 4d205420     R().0001c570 T M
   29b68:	445f3350 444f4345 3a3a5245 5f33504d     P3_DECODER::MP3_
   29b78:	4f434544 28524544 30300a29 66343130     DECODER().00014f
   29b88:	54203464 67694c20 535f7468 6f736e65     d4 T Light_Senso
   29b98:	673a3a72 61527465 6c615677 29286575     r::getRawValue()
   29ba8:	3030300a 64663431 20542030 6867694c     .00014fd0 T Ligh
   29bb8:	65535f74 726f736e 6e693a3a 29287469     t_Sensor::init()
   29bc8:	3030300a 66333831 20542030 64726f4e     .000183f0 T Nord
   29bd8:	74536369 6d616572 6c663a3a 28687375     icStream::flush(
   29be8:	30300a29 34383130 54203639 726f4e20     ).00018496 T Nor
   29bf8:	53636964 61657274 673a3a6d 68437465     dicStream::getCh
   29c08:	63287261 2a726168 6e75202c 6e676973     ar(char*, unsign
   29c18:	69206465 0a29746e 31303030 34373438     ed int).00018474
   29c28:	4e205420 6964726f 72745363 3a6d6165      T NordicStream:
   29c38:	7475703a 72616843 61686328 75202c72     :putChar(char, u
   29c48:	6769736e 2064656e 29746e69 3030300a     nsigned int).000
   29c58:	64343831 20542063 64726f4e 74536369     184dc T NordicSt
   29c68:	6d616572 6f4e3a3a 63696472 65727453     ream::NordicStre
   29c78:	29286d61 3030300a 64343831 20542063     am().000184dc T 
   29c88:	64726f4e 74536369 6d616572 6f4e3a3a     NordicStream::No
   29c98:	63696472 65727453 29286d61 3030300a     rdicStream().000
   29ca8:	39396231 20542038 6d726574 6c616e69     1b998 T terminal
   29cb8:	6b736154 65673a3a 6d6f4374 646e616d     Task::getCommand
   29cc8:	300a2928 62313030 20343638 65742054     ().0001b864 T te
   29cd8:	6e696d72 61546c61 3a3a6b73 65766173     rminalTask::save
   29ce8:	6b736944 286d6c54 30300a29 39623130     DiskTlm().0001b9
   29cf8:	54203835 72657420 616e696d 7361546c     58 T terminalTas
   29d08:	613a3a6b 6f436464 6e616d6d 61684364     k::addCommandCha
   29d18:	6c656e6e 61684328 76654472 62202c2a     nnel(CharDev*, b
   29d28:	296c6f6f 3030300a 65386231 20542038     ool).0001b8e8 T 
   29d38:	6d726574 6c616e69 6b736154 61683a3a     terminalTask::ha
   29d48:	656c646e 6f686345 42646e41 736b6361     ndleEchoAndBacks
   29d58:	65636170 72657428 616e696d 7361546c     pace(terminalTas
   29d68:	633a3a6b 6843646d 745f6e61 63202c2a     k::cmdChan_t*, c
   29d78:	29726168 3030300a 62616231 20542063     har).0001babc T 
   29d88:	6d726574 6c616e69 6b736154 75723a3a     terminalTask::ru
   29d98:	6f76286e 292a6469 3030300a 32376231     n(void*).0001b72
   29da8:	20542063 6d726574 6c616e69 6b736154     c T terminalTask
   29db8:	65723a3a 6d6c5467 300a2928 62313030     ::regTlm().0001b
   29dc8:	20386362 65742054 6e696d72 61546c61     bc8 T terminalTa
   29dd8:	3a3a6b73 6b736174 72746e45 0a292879     sk::taskEntry().
   29de8:	31303030 34623762 74205420 696d7265     0001b7b4 T termi
   29df8:	546c616e 3a6b7361 7265743a 616e696d     nalTask::termina
   29e08:	7361546c 6e75286b 6e676973 63206465     lTask(unsigned c
   29e18:	29726168 3030300a 62376231 20542034     har).0001b7b4 T 
   29e28:	6d726574 6c616e69 6b736154 65743a3a     terminalTask::te
   29e38:	6e696d72 61546c61 75286b73 6769736e     rminalTask(unsig
   29e48:	2064656e 72616863 30300a29 61633130     ned char).0001ca
   29e58:	54203835 4e4f5320 41445f47 41424154     58 T SONG_DATABA
   29e68:	3a3a4553 6f706d69 735f7472 73676e6f     SE::import_songs
   29e78:	61686328 0a292a72 31303030 38303963     (char*).0001c908
   29e88:	53205420 5f474e4f 41544144 45534142      T SONG_DATABASE
   29e98:	65673a3a 65685f74 29286461 3030300a     ::get_head().000
   29ea8:	66386331 20542065 474e4f53 5441445f     1c8fe T SONG_DAT
   29eb8:	53414241 533a3a45 5f474e4f 41544144     ABASE::SONG_DATA
   29ec8:	45534142 300a2928 63313030 20656638     BASE().0001c8fe 
   29ed8:	4f532054 445f474e 42415441 3a455341     T SONG_DATABASE:
   29ee8:	4e4f533a 41445f47 41424154 29284553     :SONG_DATABASE()
   29ef8:	3030300a 64343631 20542030 65686373     .000164d0 T sche
   29f08:	656c7564 61745f72 3a3a6b73 53746567     duler_task::getS
   29f18:	65726168 6a624f64 28746365 69736e75     haredObject(unsi
   29f28:	64656e67 61686320 300a2972 36313030     gned char).00016
   29f38:	20633934 63732054 75646568 5f72656c     49c T scheduler_
   29f48:	6b736174 63733a3a 75646568 5f72656c     task::scheduler_
   29f58:	6b736174 61686328 6f632072 2a74736e     task(char const*
   29f68:	6e75202c 6e676973 6c206465 2c676e6f     , unsigned long,
   29f78:	736e7520 656e6769 68632064 202c7261      unsigned char, 
   29f88:	64696f76 300a292a 36313030 20633934     void*).0001649c 
   29f98:	63732054 75646568 5f72656c 6b736174     T scheduler_task
   29fa8:	63733a3a 75646568 5f72656c 6b736174     ::scheduler_task
   29fb8:	61686328 6f632072 2a74736e 6e75202c     (char const*, un
   29fc8:	6e676973 6c206465 2c676e6f 736e7520     signed long, uns
   29fd8:	656e6769 68632064 202c7261 64696f76     igned char, void
   29fe8:	300a292a 35313030 20633964 6f432054     *).00015d9c T Co
   29ff8:	6e616d6d 6f725064 73736563 3a3a726f     mmandProcessor::
   2a008:	48646461 6c646e61 62287265 206c6f6f     addHandler(bool 
   2a018:	28292a28 26727473 6843202c 65447261     (*)(str&, CharDe
   2a028:	202c2676 64696f76 202c292a 72616863     v&, void*), char
   2a038:	6e6f6320 2c2a7473 61686320 6f632072      const*, char co
   2a048:	2a74736e 6f76202c 292a6469 3030300a     nst*, void*).000
   2a058:	62653531 20542038 6d6d6f43 50646e61     15eb8 T CommandP
   2a068:	65636f72 726f7373 65673a3a 6c654874     rocessor::getHel
   2a078:	78655470 74732874 202c2672 72616843     pText(str&, Char
   2a088:	26766544 30300a29 66353130 54203436     Dev&).00015f64 T
   2a098:	6d6f4320 646e616d 636f7250 6f737365      CommandProcesso
   2a0a8:	683a3a72 6c646e61 6d6f4365 646e616d     r::handleCommand
   2a0b8:	72747328 43202c26 44726168 29267665     (str&, CharDev&)
   2a0c8:	3030300a 32663531 20542038 6d6d6f43     .00015f28 T Comm
   2a0d8:	50646e61 65636f72 726f7373 72703a3a     andProcessor::pr
   2a0e8:	72617065 646d4365 61726150 7473286d     epareCmdParam(st
   2a0f8:	202c2672 72616863 6e6f6320 292a7473     r&, char const*)
   2a108:	3030300a 31653531 20542038 6d6d6f43     .00015e18 T Comm
   2a118:	50646e61 65636f72 726f7373 65673a3a     andProcessor::ge
   2a128:	67655274 65747369 43646572 616d6d6f     tRegisteredComma
   2a138:	694c646e 43287473 44726168 29267665     ndList(CharDev&)
   2a148:	3030300a 37636331 20542034 4762614c     .0001cc74 T LabG
   2a158:	494f4950 7265746e 74707572 683a3a73     PIOInterrupts::h
   2a168:	6c646e61 6e695f65 72726574 28747075     andle_interrupt(
   2a178:	30300a29 62633130 54203839 62614c20     ).0001cb98 T Lab
   2a188:	4f495047 65746e49 70757272 3a3a7374     GPIOInterrupts::
   2a198:	61747461 6e496863 72726574 48747075     attachInterruptH
   2a1a8:	6c646e61 75287265 6769736e 2064656e     andler(unsigned 
   2a1b8:	72616863 6e75202c 6e676973 6c206465     char, unsigned l
   2a1c8:	2c676e6f 696f7620 2a282064 2c292829     ong, void (*)(),
   2a1d8:	746e4920 75727265 6f437470 7469646e      InterruptCondit
   2a1e8:	5f6e6f69 300a2945 63313030 20383862     ion_E).0001cb88 
   2a1f8:	614c2054 49504762 746e494f 75727265     T LabGPIOInterru
   2a208:	3a737470 696e693a 0a292874 31303030     pts::init().0001
   2a218:	34376263 4c205420 50476261 6e494f49     cb74 T LabGPIOIn
   2a228:	72726574 73747075 614c3a3a 49504762     terrupts::LabGPI
   2a238:	746e494f 75727265 28737470 30300a29     OInterrupts().00
   2a248:	62633130 54203437 62614c20 4f495047     01cb74 T LabGPIO
   2a258:	65746e49 70757272 3a3a7374 4762614c     Interrupts::LabG
   2a268:	494f4950 7265746e 74707572 0a292873     PIOInterrupts().
   2a278:	31303030 34306534 41205420 6c656363     00014e04 T Accel
   2a288:	74617265 5f6e6f69 736e6553 3a3a726f     eration_Sensor::
   2a298:	74696e69 300a2928 34313030 20613766     init().00014f7a 
   2a2a8:	454c2054 693a3a44 2874696e 30300a29     T LED::init().00
   2a2b8:	66343130 54203038 44454c20 65733a3a     014f80 T LED::se
   2a2c8:	6c6c4174 736e7528 656e6769 68632064     tAll(unsigned ch
   2a2d8:	0a297261 31303030 32306536 73205420     ar).00016e02 T s
   2a2e8:	3a3a7274 73617265 74664165 69287265     tr::eraseAfter(i
   2a2f8:	202c746e 29746e69 3030300a 62643631     nt, int).00016db
   2a308:	20542063 3a727473 6172653a 69466573     c T str::eraseFi
   2a318:	28747372 29746e69 3030300a 30303731     rst(int).0001700
   2a328:	20542032 3a727473 736e693a 41747265     2 T str::insertA
   2a338:	646e4574 61686328 6f632072 2a74736e     tEnd(char const*
   2a348:	30300a29 66363130 54203832 72747320     ).00016f28 T str
   2a358:	65723a3a 6f6c6c41 65746163 286d654d     ::reAllocateMem(
   2a368:	29746e69 3030300a 36653631 20542032     int).00016e62 T 
   2a378:	3a727473 6172653a 69466573 57747372     str::eraseFirstW
   2a388:	7364726f 746e6928 6863202c 0a297261     ords(int, char).
   2a398:	31303030 30656636 73205420 3a3a7274     00016fe0 T str::
   2a3a8:	75736e65 654d6572 79726f6d 6e496f54     ensureMemoryToIn
   2a3b8:	74726573 6168434e 69287372 0a29746e     sertNChars(int).
   2a3c8:	31303030 30666236 73205420 3a3a7274     00016bf0 T str::
   2a3d8:	61656c63 0a292872 31303030 61336536     clear().00016e3a
   2a3e8:	73205420 3a3a7274 73617265 68632865      T str::erase(ch
   2a3f8:	63207261 74736e6f 300a292a 36313030     ar const*).00016
   2a408:	20386662 74732054 733a3a72 666e6163     bf8 T str::scanf
   2a418:	61686328 6f632072 2a74736e 2e2e202c     (char const*, ..
   2a428:	300a292e 36313030 20653966 74732054     .).00016f9e T st
   2a438:	703a3a72 746e6972 68632866 63207261     r::printf(char c
   2a448:	74736e6f 2e202c2a 0a292e2e 31303030     onst*, ...).0001
   2a458:	30396636 73205420 3a3a7274 65736572     6f90 T str::rese
   2a468:	28657672 29746e69 3030300a 63653631     rve(int).00016ec
   2a478:	20542063 3a727473 6972743a 646e456d     c T str::trimEnd
   2a488:	61686328 6f632072 2a74736e 30300a29     (char const*).00
   2a498:	30373130 54203034 72747320 6f633a3a     017040 T str::co
   2a4a8:	72467970 63286d6f 20726168 736e6f63     pyFrom(char cons
   2a4b8:	0a292a74 31303030 34316336 73205420     t*).00016c14 T s
   2a4c8:	3a3a7274 656b6f74 657a696e 61686328     tr::tokenize(cha
   2a4d8:	6f632072 2a74736e 6e69202c 2e202c74     r const*, int, .
   2a4e8:	0a292e2e 31303030 34656436 73205420     ..).00016de4 T s
   2a4f8:	3a3a7274 73617265 73614c65 6e692874     tr::eraseLast(in
   2a508:	300a2974 36313030 20633865 74732054     t).00016e8c T st
   2a518:	743a3a72 536d6972 74726174 61686328     r::trimStart(cha
   2a528:	6f632072 2a74736e 30300a29 62363130     r const*).00016b
   2a538:	54203839 72747320 74733a3a 68632872     98 T str::str(ch
   2a548:	2c2a7261 746e6920 30300a29 66363130     ar*, int).00016f
   2a558:	54203438 72747320 74733a3a 6e692872     84 T str::str(in
   2a568:	300a2974 36313030 20383962 74732054     t).00016b98 T st
   2a578:	733a3a72 63287274 2a726168 6e69202c     r::str(char*, in
   2a588:	300a2974 36313030 20343866 74732054     t).00016f84 T st
   2a598:	733a3a72 69287274 0a29746e 31303030     r::str(int).0001
   2a5a8:	30636236 73205420 3a3a7274 7274737e     6bc0 T str::~str
   2a5b8:	300a2928 36313030 20306362 74732054     ().00016bc0 T st
   2a5c8:	7e3a3a72 28727473 30300a29 30373130     r::~str().000170
   2a5d8:	54206337 72747320 706f3a3a 74617265     7c T str::operat
   2a5e8:	283d726f 72616863 6e6f6320 292a7473     or=(char const*)
   2a5f8:	3030300a 31663631 20542034 3a727473     .00016f14 T str:
   2a608:	65706f3a 6f746172 285d5b72 29746e69     :operator[](int)
   2a618:	3030300a 32303731 20542036 3a727473     .00017026 T str:
   2a628:	65706f3a 6f746172 283d2b72 72616863     :operator+=(char
   2a638:	30300a29 62343130 54203835 49504720     ).00014b58 T GPI
   2a648:	733a3a4f 73417465 75706e49 0a292874     O::setAsInput().
   2a658:	31303030 61366234 47205420 3a4f4950     00014b6a T GPIO:
   2a668:	7465733a 754f7341 74757074 300a2928     :setAsOutput().0
   2a678:	34313030 20386162 50472054 3a3a4f49     0014ba8 T GPIO::
   2a688:	62616e65 7550656c 70556c6c 300a2928     enablePullUp().0
   2a698:	34313030 20386362 50472054 3a3a4f49     0014bc8 T GPIO::
   2a6a8:	62616e65 704f656c 72446e65 4d6e6961     enableOpenDrainM
   2a6b8:	2865646f 6c6f6f62 30300a29 62343130     ode(bool).00014b
   2a6c8:	54206139 49504720 733a3a4f 6f4c7465     9a T GPIO::setLo
   2a6d8:	0a292877 31303030 65386234 47205420     w().00014b8e T G
   2a6e8:	3a4f4950 7465733a 68676948 300a2928     PIO::setHigh().0
   2a6f8:	34313030 20383062 50472054 3a3a4f49     0014b08 T GPIO::
   2a708:	4f495047 43504c28 38353731 4950475f     GPIO(LPC1758_GPI
   2a718:	79545f4f 0a296570 31303030 38306234     O_Type).00014b08
   2a728:	47205420 3a4f4950 4950473a 504c284f      T GPIO::GPIO(LP
   2a738:	35373143 50475f38 545f4f49 29657079     C1758_GPIO_Type)
   2a748:	3030300a 66623431 20542034 4f495047     .00014bf4 T GPIO
   2a758:	477e3a3a 284f4950 30300a29 62343130     ::~GPIO().00014b
   2a768:	54203466 49504720 7e3a3a4f 4f495047     f4 T GPIO::~GPIO
   2a778:	300a2928 38313030 20303837 32492054     ().00018780 T I2
   2a788:	3a3a3243 74696e69 736e7528 656e6769     C2::init(unsigne
   2a798:	6e692064 300a2974 38313030 20386537     d int).000187e8 
   2a7a8:	32492054 3a3a3243 32433249 300a2928     T I2C2::I2C2().0
   2a7b8:	38313030 20386537 32492054 3a3a3243     00187e8 T I2C2::
   2a7c8:	32433249 300a2928 38313030 20343435     I2C2().00018544 
   2a7d8:	61552054 3a307472 696e693a 6e752874     T Uart0::init(un
   2a7e8:	6e676973 69206465 202c746e 2c746e69     signed int, int,
   2a7f8:	746e6920 30300a29 35383130 54203438      int).00018584 T
   2a808:	72615520 3a3a3074 74726155 0a292830      Uart0::Uart0().
   2a818:	31303030 34383538 55205420 30747261     00018584 T Uart0
   2a828:	61553a3a 28307472 30300a29 33383130     ::Uart0().000183
   2a838:	54203062 72615520 3a3a3274 74726155     b0 T Uart2::Uart
   2a848:	0a292832 31303030 30623338 55205420     2().000183b0 T U
   2a858:	32747261 61553a3a 28327472 30300a29     art2::Uart2().00
   2a868:	33383130 54203830 72615520 3a3a3374     018308 T Uart3::
   2a878:	74696e69 736e7528 656e6769 6e692064     init(unsigned in
   2a888:	69202c74 202c746e 29746e69 3030300a     t, int, int).000
   2a898:	34333831 20542038 74726155 553a3a33     18348 T Uart3::U
   2a8a8:	33747261 300a2928 38313030 20383433     art3().00018348 
   2a8b8:	61552054 3a337472 7261553a 29283374     T Uart3::Uart3()
   2a8c8:	3030300a 38643731 20542034 72616843     .00017d84 T Char
   2a8d8:	3a766544 7475703a 61686328 6f632072     Dev::put(char co
   2a8e8:	2a74736e 6e75202c 6e676973 69206465     nst*, unsigned i
   2a8f8:	0a29746e 31303030 38636437 43205420     nt).00017dc8 T C
   2a908:	44726168 3a3a7665 73746567 61686328     harDev::gets(cha
   2a918:	202c2a72 2c746e69 736e7520 656e6769     r*, int, unsigne
   2a928:	6e692064 300a2974 37313030 20383165     d int).00017e18 
   2a938:	68432054 65447261 703a3a76 746e6972     T CharDev::print
   2a948:	68632866 63207261 74736e6f 2e202c2a     f(char const*, .
   2a958:	0a292e2e 31303030 63616437 43205420     ..).00017dac T C
   2a968:	44726168 3a3a7665 6c747570 28656e69     harDev::putline(
   2a978:	72616863 6e6f6320 2c2a7473 736e7520     char const*, uns
   2a988:	656e6769 6e692064 300a2974 37313030     igned int).00017
   2a998:	20303965 68432054 65447261 433a3a76     e90 T CharDev::C
   2a9a8:	44726168 29287665 3030300a 39653731     harDev().00017e9
   2a9b8:	20542030 72616843 3a766544 6168433a     0 T CharDev::Cha
   2a9c8:	76654472 300a2928 37313030 20306265     rDev().00017eb0 
   2a9d8:	68432054 65447261 7e3a3a76 72616843     T CharDev::~Char
   2a9e8:	28766544 30300a29 65373130 54203062     Dev().00017eb0 T
   2a9f8:	61684320 76654472 437e3a3a 44726168      CharDev::~CharD
   2aa08:	29287665 3030300a 33646331 20542038     ev().0001cd38 T 
   2aa18:	4762614c 3a4f4950 7465733a 6e497341     LabGPIO::setAsIn
   2aa28:	28747570 30300a29 63633130 54203866     put().0001ccf8 T
   2aa38:	62614c20 4f495047 614c3a3a 49504762      LabGPIO::LabGPI
   2aa48:	6e75284f 6e676973 63206465 2c726168     O(unsigned char,
   2aa58:	736e7520 656e6769 68632064 0a297261      unsigned char).
   2aa68:	31303030 38666363 4c205420 50476261     0001ccf8 T LabGP
   2aa78:	3a3a4f49 4762614c 284f4950 69736e75     IO::LabGPIO(unsi
   2aa88:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   2aa98:	2064656e 72616863 30300a29 63343130     ned char).00014c
   2aaa8:	54206530 6f745320 65676172 6f633a3a     0e T Storage::co
   2aab8:	63287970 20726168 736e6f63 202c2a74     py(char const*, 
   2aac8:	72616863 6e6f6320 2c2a7473 736e7520     char const*, uns
   2aad8:	656e6769 6e692064 202c2a74 69736e75     igned int*, unsi
   2aae8:	64656e67 746e6920 75202c2a 6769736e     gned int*, unsig
   2aaf8:	2064656e 2a746e69 30300a29 63343130     ned int*).00014c
   2ab08:	54206566 6f745320 65676172 65723a3a     fe T Storage::re
   2ab18:	63286461 20726168 736e6f63 202c2a74     ad(char const*, 
   2ab28:	64696f76 75202c2a 6769736e 2064656e     void*, unsigned 
   2ab38:	2c746e69 736e7520 656e6769 6e692064     int, unsigned in
   2ab48:	300a2974 34313030 20323464 74532054     t).00014d42 T St
   2ab58:	6761726f 773a3a65 65746972 61686328     orage::write(cha
   2ab68:	6f632072 2a74736e 6f76202c 2c2a6469     r const*, void*,
   2ab78:	736e7520 656e6769 6e692064 75202c74      unsigned int, u
   2ab88:	6769736e 2064656e 29746e69 3030300a     nsigned int).000
   2ab98:	38643431 20542036 726f7453 3a656761     14d86 T Storage:
   2aba8:	7070613a 28646e65 72616863 6e6f6320     :append(char con
   2abb8:	2c2a7473 696f7620 6f632064 2a74736e     st*, void const*
   2abc8:	6e75202c 6e676973 69206465 202c746e     , unsigned int, 
   2abd8:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   2abe8:	62373130 54203862 72615520 76654474     017bb8 T UartDev
   2abf8:	65733a3a 75614274 74615264 6e752865     ::setBaudRate(un
   2ac08:	6e676973 69206465 0a29746e 31303030     signed int).0001
   2ac18:	63656237 55205420 44747261 3a3a7665     7bec T UartDev::
   2ac28:	646e6168 6e49656c 72726574 28747075     handleInterrupt(
   2ac38:	30300a29 63373130 54203464 72615520     ).00017cd4 T Uar
   2ac48:	76654474 6e693a3a 75287469 6769736e     tDev::init(unsig
   2ac58:	2064656e 2c746e69 736e7520 656e6769     ned int, unsigne
   2ac68:	6e692064 69202c74 202c746e 29746e69     d int, int, int)
   2ac78:	3030300a 32623731 20542063 74726155     .00017b2c T Uart
   2ac88:	3a766544 756c663a 29286873 3030300a     Dev::flush().000
   2ac98:	34623731 20542063 74726155 3a766544     17b4c T UartDev:
   2aca8:	7465673a 72616843 61686328 202c2a72     :getChar(char*, 
   2acb8:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   2acc8:	61373130 54203861 72615520 76654474     017aa8 T UartDev
   2acd8:	75703a3a 61684374 68632872 202c7261     ::putChar(char, 
   2ace8:	69736e75 64656e67 746e6920 30300a29     unsigned int).00
   2acf8:	63373130 54206361 72615520 76654474     017cac T UartDev
   2ad08:	61553a3a 65447472 6e752876 6e676973     ::UartDev(unsign
   2ad18:	69206465 292a746e 3030300a 61633731     ed int*).00017ca
   2ad28:	20542063 74726155 3a766544 7261553a     c T UartDev::Uar
   2ad38:	76654474 736e7528 656e6769 6e692064     tDev(unsigned in
   2ad48:	0a292a74 31303030 30633737 49205420     t*).000177c0 T I
   2ad58:	425f4332 3a657361 6165723a 67655264     2C_Base::readReg
   2ad68:	65747369 75287372 6769736e 2064656e     isters(unsigned 
   2ad78:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   2ad88:	2c726168 736e7520 656e6769 68632064     har, unsigned ch
   2ad98:	2c2a7261 736e7520 656e6769 6f6c2064     ar*, unsigned lo
   2ada8:	0a29676e 31303030 32653737 49205420     ng).000177e2 T I
   2adb8:	425f4332 3a657361 6972773a 65526574     2C_Base::writeRe
   2adc8:	74736967 28737265 69736e75 64656e67     gisters(unsigned
   2add8:	61686320 75202c72 6769736e 2064656e      char, unsigned 
   2ade8:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   2adf8:	2a726168 6e75202c 6e676973 6c206465     har*, unsigned l
   2ae08:	29676e6f 3030300a 37613731 20542034     ong).00017a74 T 
   2ae18:	5f433249 65736142 61683a3a 656c646e     I2C_Base::handle
   2ae28:	65746e49 70757272 0a292874 31303030     Interrupt().0001
   2ae38:	63663837 49205420 425f4332 3a657361     78fc T I2C_Base:
   2ae48:	6332693a 74617453 63614d65 656e6968     :i2cStateMachine
   2ae58:	300a2928 37313030 20303038 32492054     ().00017800 T I2
   2ae68:	61425f43 3a3a6573 63656863 7665446b     C_Base::checkDev
   2ae78:	52656369 6f707365 2865736e 69736e75     iceResponse(unsi
   2ae88:	64656e67 61686320 300a2972 37313030     gned char).00017
   2ae98:	20383638 32492054 61425f43 3a3a6573     868 T I2C_Base::
   2aea8:	74696e69 736e7528 656e6769 6f6c2064     init(unsigned lo
   2aeb8:	202c676e 69736e75 64656e67 6e6f6c20     ng, unsigned lon
   2aec8:	300a2967 37313030 20386337 32492054     g).000177c8 T I2
   2aed8:	61425f43 3a3a6573 64616572 28676552     C_Base::readReg(
   2aee8:	69736e75 64656e67 61686320 75202c72     unsigned char, u
   2aef8:	6769736e 2064656e 72616863 30300a29     nsigned char).00
   2af08:	36373130 54203865 43324920 7361425f     0176e8 T I2C_Bas
   2af18:	743a3a65 736e6172 28726566 69736e75     e::transfer(unsi
   2af28:	64656e67 61686320 75202c72 6769736e     gned char, unsig
   2af38:	2064656e 72616863 6e75202c 6e676973     ned char, unsign
   2af48:	63206465 2a726168 6e75202c 6e676973     ed char*, unsign
   2af58:	6c206465 29676e6f 3030300a 65373731     ed long).000177e
   2af68:	20542061 5f433249 65736142 72773a3a     a T I2C_Base::wr
   2af78:	52657469 75286765 6769736e 2064656e     iteReg(unsigned 
   2af88:	72616863 6e75202c 6e676973 63206465     char, unsigned c
   2af98:	2c726168 736e7520 656e6769 68632064     har, unsigned ch
   2afa8:	0a297261 31303030 38313837 49205420     ar).00017818 T I
   2afb8:	425f4332 3a657361 4332493a 7361425f     2C_Base::I2C_Bas
   2afc8:	504c2865 32495f43 79545f43 65446570     e(LPC_I2C_TypeDe
   2afd8:	0a292a66 31303030 38313837 49205420     f*).00017818 T I
   2afe8:	425f4332 3a657361 4332493a 7361425f     2C_Base::I2C_Bas
   2aff8:	504c2865 32495f43 79545f43 65446570     e(LPC_I2C_TypeDe
   2b008:	0a292a66 31303030 32333035 49205420     f*).00015032 T I
   2b018:	545f4332 3a706d65 7465673a 736c6543     2C_Temp::getCels
   2b028:	28737569 30300a29 30353130 54203436     ius().00015064 T
   2b038:	43324920 6d65545f 673a3a70 61467465      I2C_Temp::getFa
   2b048:	686e6572 28746965 30300a29 30353130     renheit().000150
   2b058:	54203031 43324920 6d65545f 693a3a70     10 T I2C_Temp::i
   2b068:	2874696e 30300a29 64633130 54206337     nit().0001cd7c T
   2b078:	44434c20 4d4d4f43 773a3a53 65746972      LCDCOMMS::write
   2b088:	736e7528 656e6769 68632064 202c7261     (unsigned char, 
   2b098:	69736e75 64656e67 61686320 63202c72     unsigned char, c
   2b0a8:	2a726168 30300a29 64633130 54203837     har*).0001cd78 T
   2b0b8:	44434c20 4d4d4f43 4c3a3a53 4f434443      LCDCOMMS::LCDCO
   2b0c8:	28534d4d 30300a29 64633130 54203837     MMS().0001cd78 T
   2b0d8:	44434c20 4d4d4f43 4c3a3a53 4f434443      LCDCOMMS::LCDCO
   2b0e8:	28534d4d 30300a29 64633130 54206137     MMS().0001cd7a T
   2b0f8:	44434c20 4d4d4f43 7e3a3a53 4344434c      LCDCOMMS::~LCDC
   2b108:	534d4d4f 300a2928 63313030 20613764     OMMS().0001cd7a 
   2b118:	434c2054 4d4f4344 3a3a534d 44434c7e     T LCDCOMMS::~LCD
   2b128:	4d4d4f43 0a292853 31303030 30656634     COMMS().00014fe0
   2b138:	53205420 63746977 3a736568 7465673a      T Switches::get
   2b148:	74697753 61566863 7365756c 300a2928     SwitchValues().0
   2b158:	34313030 20616466 77532054 68637469     0014fda T Switch
   2b168:	3a3a7365 74696e69 300a2928 34313030     es::init().00014
   2b178:	20386666 77532054 68637469 3a3a7365     ff8 T Switches::
   2b188:	53746567 63746977 6e692868 300a2974     getSwitch(int).0
   2b198:	34313030 20343265 52492054 6e65535f     0014e24 T IR_Sen
   2b1a8:	3a726f73 6f74733a 72496572 65646f43     sor::storeIrCode
   2b1b8:	736e7528 656e6769 6f6c2064 0a29676e     (unsigned long).
   2b1c8:	31303030 30346534 49205420 65535f52     00014e40 T IR_Se
   2b1d8:	726f736e 65643a3a 65646f63 6f437249     nsor::decodeIrCo
   2b1e8:	29286564 3030300a 61653431 20542034     de().00014ea4 T 
   2b1f8:	535f5249 6f736e65 693a3a72 2874696e     IR_Sensor::init(
   2b208:	30300a29 38633130 54206366 4e4f5320     ).0001c8fc T SON
   2b218:	4f4e5f47 3a3a4544 5f746567 656c6966     G_NODE::get_file
   2b228:	6d616e5f 0a292865 31303030 30643863     _name().0001c8d0
   2b238:	53205420 5f474e4f 45444f4e 65673a3a      T SONG_NODE::ge
   2b248:	6f735f74 745f676e 656c7469 300a2928     t_song_title().0
   2b258:	63313030 20633361 4f532054 4e5f474e     001ca3c T SONG_N
   2b268:	3a45444f 706d693a 5f74726f 676e6f73     ODE::import_song
   2b278:	666e695f 6863286f 292a7261 3030300a     _info(char*).000
   2b288:	61396331 20542063 474e4f53 444f4e5f     1c9ac T SONG_NOD
   2b298:	693a3a45 726f706d 6f735f74 695f676e     E::import_song_i
   2b2a8:	286f666e 30300a29 38633130 54203066     nfo().0001c8f0 T
   2b2b8:	4e4f5320 4f4e5f47 3a3a4544 5f746567      SONG_NODE::get_
   2b2c8:	7478656e 300a2928 63313030 20366638     next().0001c8f6 
   2b2d8:	4f532054 4e5f474e 3a45444f 7465673a     T SONG_NODE::get
   2b2e8:	6572705f 0a292876 31303030 38323863     _prev().0001c828
   2b2f8:	53205420 5f474e4f 45444f4e 4f533a3a      T SONG_NODE::SO
   2b308:	4e5f474e 2845444f 30300a29 38633130     NG_NODE().0001c8
   2b318:	54203832 4e4f5320 4f4e5f47 3a3a4544     28 T SONG_NODE::
   2b328:	474e4f53 444f4e5f 0a292845 31303030     SONG_NODE().0001
   2b338:	38326436 73205420 3a3a7274 69676562     6d28 T str::begi
   2b348:	6957736e 63286874 20726168 736e6f63     nsWith(char cons
   2b358:	20292a74 736e6f63 30300a74 62363130     t*) const.00016b
   2b368:	54206365 72747320 65673a3a 70614374     ec T str::getCap
   2b378:	74696361 20292879 736e6f63 30300a74     acity() const.00
   2b388:	64363130 54203231 72747320 69663a3a     016d12 T str::fi
   2b398:	49747372 7865646e 6328664f 20726168     rstIndexOf(char 
   2b3a8:	736e6f63 20292a74 736e6f63 30300a74     const*) const.00
   2b3b8:	64363130 54203430 72747320 6f633a3a     016d04 T str::co
   2b3c8:	6961746e 6749736e 65726f6e 65736143     ntainsIgnoreCase
   2b3d8:	61686328 6f632072 2a74736e 6f632029     (char const*) co
   2b3e8:	0a74736e 31303030 34376336 73205420     nst.00016c74 T s
   2b3f8:	3a3a7274 706d6f63 54657261 6e67496f     tr::compareToIgn
   2b408:	4365726f 28657361 72616863 6e6f6320     oreCase(char con
   2b418:	292a7473 6e6f6320 300a7473 36313030     st*) const.00016
   2b428:	20363564 74732054 623a3a72 6e696765     d56 T str::begin
   2b438:	74695773 6e674968 4365726f 28657361     sWithIgnoreCase(
   2b448:	72616863 6e6f6320 292a7473 6e6f6320     char const*) con
   2b458:	300a7473 36313030 20343863 74732054     st.00016c84 T st
   2b468:	663a3a72 74737269 65646e49 49664f78     r::firstIndexOfI
   2b478:	726f6e67 73614365 68632865 63207261     gnoreCase(char c
   2b488:	74736e6f 6320292a 74736e6f 3030300a     onst*) const.000
   2b498:	38643631 20542034 3a727473 6765623a     16d84 T str::beg
   2b4a8:	57736e69 57687469 656c6f68 64726f57     insWithWholeWord
   2b4b8:	6f6e6749 61436572 63286573 20726168     IgnoreCase(char 
   2b4c8:	736e6f63 202c2a74 72616863 6f632029     const*, char) co
   2b4d8:	0a74736e 31303030 36656236 73205420     nst.00016be6 T s
   2b4e8:	3a3a7274 4c746567 29286e65 6e6f6320     tr::getLen() con
   2b4f8:	300a7473 36313030 20303663 74732054     st.00016c60 T st
   2b508:	633a3a72 61706d6f 6f546572 61686328     r::compareTo(cha
   2b518:	6f632072 2a74736e 6f632029 0a74736e     r const*) const.
   2b528:	31303030 61306636 73205420 3a3a7274     00016f0a T str::
   2b538:	7265706f 726f7461 29282928 6e6f6320     operator()() con
   2b548:	300a7473 36313030 20653066 74732054     st.00016f0e T st
   2b558:	6f3a3a72 61726570 20726f74 28746e69     r::operator int(
   2b568:	6f632029 0a74736e 31303030 36306636     ) const.00016f06
   2b578:	73205420 3a3a7274 7265706f 726f7461      T str::operator
   2b588:	63283d3d 20726168 736e6f63 20292a74     ==(char const*) 
   2b598:	736e6f63 30300a74 62343130 54206137     const.00014b7a T
   2b5a8:	49504720 723a3a4f 28646165 6f632029      GPIO::read() co
   2b5b8:	0a74736e 31303030 38353764 73205420     nst.0001d758 T s
   2b5c8:	3a3a6474 65707974 666e695f 5f3a3a6f     td::type_info::_
   2b5d8:	5f73695f 6e696f70 5f726574 20292870     _is_pointer_p() 
   2b5e8:	736e6f63 30300a74 37643130 54203835     const.0001d758 T
   2b5f8:	64747320 79743a3a 695f6570 3a6f666e      std::type_info:
   2b608:	695f5f3a 75665f73 6974636e 705f6e6f     :__is_function_p
   2b618:	63202928 74736e6f 3030300a 35376431     () const.0001d75
   2b628:	20542063 3a647473 7079743a 6e695f65     c T std::type_in
   2b638:	3a3a6f66 7265706f 726f7461 73283d3d     fo::operator==(s
   2b648:	3a3a6474 65707974 666e695f 6f63206f     td::type_info co
   2b658:	2674736e 6f632029 0a74736e 31303030     nst&) const.0001
   2b668:	36353764 73205420 3a3a6474 65707974     d756 T std::type
   2b678:	666e695f 7e3a3a6f 65707974 666e695f     _info::~type_inf
   2b688:	0a29286f 31303030 36353764 73205420     o().0001d756 T s
   2b698:	3a3a6474 65707974 666e695f 7e3a3a6f     td::type_info::~
   2b6a8:	65707974 666e695f 0a29286f 31303030     type_info().0001
   2b6b8:	34316364 73205420 3a3a6474 5f746567     dc14 T std::get_
   2b6c8:	6d726574 74616e69 0a292865 31303030     terminate().0001
   2b6d8:	34326364 73205420 3a3a6474 6d726574     dc24 T std::term
   2b6e8:	74616e69 0a292865 31303030 30663865     inate().0001e8f0
   2b6f8:	61205420 74726f62 3030300a 36323831      T abort.0001826
   2b708:	20542063 30636461 7465675f 6165725f     c T adc0_get_rea
   2b718:	676e6964 3030300a 66313831 20542038     ding.000181f8 T 
   2b728:	30636461 696e695f 30300a74 36323230     adc0_init.000226
   2b738:	54203833 63736120 656d6974 3030300a     38 T asctime.000
   2b748:	36363232 20542034 74637361 5f656d69     22664 T asctime_
   2b758:	30300a72 38653130 54206566 6f746120     r.0001e8fe T ato
   2b768:	30300a69 63353130 54203863 6c5f6320     i.00015cc8 T c_l
   2b778:	5f747369 61657263 300a6574 35313030     ist_create.00015
   2b788:	20363464 5f632054 7473696c 6e69665f     d46 T c_list_fin
   2b798:	6c655f64 30300a6d 64353130 54203237     d_elm.00015d72 T
   2b7a8:	6c5f6320 5f747369 5f726f66 68636165      c_list_for_each
   2b7b8:	6d6c655f 3030300a 31643531 20542061     _elm.00015d1a T 
   2b7c8:	696c5f63 675f7473 655f7465 615f6d6c     c_list_get_elm_a
   2b7d8:	30300a74 63353130 54203265 6c5f6320     t.00015ce2 T c_l
   2b7e8:	5f747369 65736e69 655f7472 655f6d6c     ist_insert_elm_e
   2b7f8:	300a646e 35313030 20636463 5f632054     nd.00015cdc T c_
   2b808:	7473696c 646f6e5f 6f635f65 0a746e75     list_node_count.
   2b818:	31303030 38303965 63205420 6f6c6c61     0001e908 T callo
   2b828:	30300a63 30323130 54206331 756c6320     c.0001201c T clu
   2b838:	73327473 0a746365 31303030 38313965     st2sect.0001e918
   2b848:	63205420 656d6974 3030300a 37623631      T ctime.00016b7
   2b858:	20542036 616c6564 736d5f79 3030300a     6 T delay_ms.000
   2b868:	34623631 20542063 616c6564 73755f79     16b4c T delay_us
   2b878:	3030300a 64343431 20542030 6b736964     .000144d0 T disk
   2b888:	696e695f 6c616974 0a657a69 31303030     _initialize.0001
   2b898:	36373534 64205420 5f6b7369 74636f69     4576 T disk_ioct
   2b8a8:	30300a6c 35343130 54203630 73696420     l.00014506 T dis
   2b8b8:	65725f6b 300a6461 34313030 20366634     k_read.000144f6 
   2b8c8:	69642054 735f6b73 75746174 30300a73     T disk_status.00
   2b8d8:	35343130 54206533 73696420 72775f6b     01453e T disk_wr
   2b8e8:	0a657469 32303030 30643632 64205420     ite.000226d0 T d
   2b8f8:	300a7669 39313030 20343734 54652054     iv.00019474 T eT
   2b908:	476b7361 74537465 0a657461 31303030     askGetState.0001
   2b918:	63353138 65205420 33746e69 616e655f     815c T eint3_ena
   2b928:	5f656c62 74726f70 30300a30 30333130     ble_port0.000130
   2b938:	54203465 635f6620 65736f6c 3030300a     e4 T f_close.000
   2b948:	64323331 20542063 6c635f66 6465736f     132dc T f_closed
   2b958:	300a7269 33313030 20363533 5f662054     ir.00013356 T f_
   2b968:	66746567 0a656572 31303030 63373733     getfree.0001377c
   2b978:	66205420 7465675f 6562616c 30300a6c      T f_getlabel.00
   2b988:	31333130 54203830 6c5f6620 6b656573     013108 T f_lseek
   2b998:	3030300a 66343331 20542034 6b6d5f66     .000134f4 T f_mk
   2b9a8:	0a726964 31303030 38303833 66205420     dir.00013808 T f
   2b9b8:	666b6d5f 30300a73 62323130 54203439     _mkfs.00012b94 T
   2b9c8:	6d5f6620 746e756f 3030300a 31633231      f_mount.00012c1
   2b9d8:	20542030 706f5f66 300a6e65 33313030     0 T f_open.00013
   2b9e8:	20363532 5f662054 6e65706f 0a726964     256 T f_opendir.
   2b9f8:	31303030 65336432 66205420 6165725f     00012d3e T f_rea
   2ba08:	30300a64 32333130 54203666 725f6620     d.000132f6 T f_r
   2ba18:	64646165 300a7269 33313030 20343536     eaddir.00013654 
   2ba28:	5f662054 616e6572 300a656d 33313030     T f_rename.00013
   2ba38:	20613530 5f662054 636e7973 3030300a     05a T f_sync.000
   2ba48:	31343331 20542065 6e755f66 6b6e696c     1341e T f_unlink
   2ba58:	3030300a 61653231 20542065 72775f66     .00012eae T f_wr
   2ba68:	0a657469 31303030 38643965 66205420     ite.0001e9d8 T f
   2ba78:	736f6c63 30300a65 64333130 54203835     close.00013d58 T
   2ba88:	5f666620 766e6f63 0a747265 31303030      ff_convert.0001
   2ba98:	63666333 66205420 72635f66 79735f65     3cfc T ff_cre_sy
   2baa8:	626f636e 30300a6a 64333130 54203031     ncobj.00013d10 T
   2bab8:	5f666620 5f6c6564 636e7973 0a6a626f      ff_del_syncobj.
   2bac8:	31303030 61336433 66205420 65725f66     00013d3a T ff_re
   2bad8:	72675f6c 0a746e61 31303030 34316433     l_grant.00013d14
   2bae8:	66205420 65725f66 72675f71 0a746e61      T ff_req_grant.
   2baf8:	31303030 34396433 66205420 74775f66     00013d94 T ff_wt
   2bb08:	7070756f 300a7265 65313030 20633462     oupper.0001eb4c 
   2bb18:	66662054 6873756c 3030300a 63626531     T fflush.0001ebc
   2bb28:	20542038 74656766 30300a63 63653130     8 T fgetc.0001ec
   2bb38:	54206339 65676620 300a7374 34313030     9c T fgets.00014
   2bb48:	20383861 6c662054 5f687361 70696863     a88 T flash_chip
   2bb58:	6172655f 300a6573 34313030 20633639     _erase.0001496c 
   2bb68:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   2bb78:	756f635f 300a746e 34313030 20633839     _count.0001498c 
   2bb88:	6c662054 5f687361 5f746567 65676170     T flash_get_page
   2bb98:	7a69735f 30300a65 61343130 54203433     _size.00014a34 T
   2bba8:	616c6620 675f6873 705f7465 5f656761      flash_get_page_
   2bbb8:	74697277 6f635f65 0a746e75 31303030     write_count.0001
   2bbc8:	34393734 66205420 6873616c 696e695f     4794 T flash_ini
   2bbd8:	6c616974 0a657a69 31303030 38633834     tialize.000148c8
   2bbe8:	66205420 6873616c 636f695f 300a6c74      T flash_ioctl.0
   2bbf8:	34313030 20343439 6c662054 5f687361     0014944 T flash_
   2bc08:	64616572 7265705f 656e616d 695f746e     read_permanent_i
   2bc18:	30300a64 38343130 54206332 616c6620     d.0001482c T fla
   2bc28:	725f6873 5f646165 74636573 0a73726f     sh_read_sectors.
   2bc38:	31303030 38393934 66205420 6873616c     00014998 T flash
   2bc48:	7075735f 74726f70 656d5f73 61646174     _supports_metada
   2bc58:	300a6174 34313030 20303039 6c662054     ta.00014900 T fl
   2bc68:	5f687361 74697277 65705f65 6e616d72     ash_write_perman
   2bc78:	5f746e65 300a6469 34313030 20633738     ent_id.0001487c 
   2bc88:	6c662054 5f687361 74697277 65735f65     T flash_write_se
   2bc98:	726f7463 30300a73 65653130 54206338     ctors.0001ee8c T
   2bca8:	706f6620 300a6e65 66313030 20633134      fopen.0001f41c 
   2bcb8:	72662054 300a6565 66313030 20306430     T free.0001f0d0 
   2bcc8:	77662054 65746972 3030300a 30303031     T fwrite.0001000
   2bcd8:	20542030 66705f67 6365566e 73726f74     0 T g_pfnVectors
   2bce8:	3030300a 33303231 20542032 5f746567     .00012032 T get_
   2bcf8:	0a746166 31303030 34626134 67205420     fat.00014ab4 T g
   2bd08:	665f7465 69747461 300a656d 33323030     et_fattime.00023
   2bd18:	20303462 6d672054 656d6974 300a725f     b40 T gmtime_r.0
   2bd28:	30323030 20633238 70692054 746e6972     002082c T iprint
   2bd38:	30300a66 62363130 54203836 5f736920     f.00016b68 T is_
   2bd48:	65657266 736f7472 6e75725f 676e696e     freertos_running
   2bd58:	3030300a 39623032 20542063 61637369     .00020b9c T isca
   2bd68:	300a666e 30313030 20383431 73692054     nf.00010148 T is
   2bd78:	65645f72 6c756166 61685f74 656c646e     r_default_handle
   2bd88:	30300a72 36303130 54203032 72736920     r.00010620 T isr
   2bd98:	7261685f 61665f64 5f746c75 646e6168     _hard_fault_hand
   2bda8:	0a72656c 31303030 30313630 69205420     ler.00010610 T i
   2bdb8:	725f7273 73696765 0a726574 31303030     sr_register.0001
   2bdc8:	34393130 69205420 725f7273 74657365     0194 T isr_reset
   2bdd8:	3030300a 33316631 20542034 61636f6c     .0001f134 T loca
   2bde8:	6d69746c 30300a65 31663130 54203835     ltime.0001f158 T
   2bdf8:	636f6c20 69746c61 725f656d 3030300a      localtime_r.000
   2be08:	34373631 20542034 67676f6c 675f7265     16744 T logger_g
   2be18:	625f7465 6b636f6c 635f6465 5f6c6c61     et_blocked_call_
   2be28:	6e756f63 30300a74 37363130 54203035     count.00016750 T
   2be38:	676f6c20 5f726567 5f746567 68676968      logger_get_high
   2be48:	5f747365 656c6966 6972775f 745f6574     est_file_write_t
   2be58:	5f656d69 300a736d 36313030 20303337     ime_ms.00016730 
   2be68:	6f6c2054 72656767 7465675f 676f6c5f     T logger_get_log
   2be78:	5f646567 6c6c6163 756f635f 300a746e     ged_call_count.0
   2be88:	36313030 20633537 6f6c2054 72656767     001675c T logger
   2be98:	7465675f 6d756e5f 6675625f 73726566     _get_num_buffers
   2bea8:	7461775f 616d7265 300a6b72 36313030     _watermark.00016
   2beb8:	20383637 6f6c2054 72656767 696e695f     768 T logger_ini
   2bec8:	30300a74 38363130 54203035 676f6c20     t.00016850 T log
   2bed8:	5f726567 0a676f6c 31303030 38383936     ger_log.00016988
   2bee8:	6c205420 6567676f 6f6c5f72 61725f67      T logger_log_ra
   2bef8:	30300a77 36363130 54206366 676f6c20     w.000166fc T log
   2bf08:	5f726567 646e6573 756c665f 725f6873     ger_send_flush_r
   2bf18:	65757165 300a7473 36313030 20343338     equest.00016834 
   2bf28:	6f6c2054 72656767 7465735f 6972705f     T logger_set_pri
   2bf38:	0a66746e 31303030 30353930 6c205420     ntf.00010950 T l
   2bf48:	705f6370 0a6b6c63 31303030 63313930     pc_pclk.0001091c
   2bf58:	6c205420 705f6370 706e6f63 3030300a      T lpc_pconp.000
   2bf68:	34343031 20542038 5f63706c 5f737973     10448 T lpc_sys_
   2bf78:	75746573 79735f70 6d657473 6d69745f     setup_system_tim
   2bf88:	300a7265 38313030 20343137 706c2054     er.00018714 T lp
   2bf98:	69745f63 5f72656d 62616e65 300a656c     c_timer_enable.0
   2bfa8:	63313030 20633766 616d2054 300a6e69     001cf7c T main.0
   2bfb8:	66313030 20633939 616d2054 6e696c6c     001f99c T mallin
   2bfc8:	300a6f66 66313030 20633034 616d2054     fo.0001f40c T ma
   2bfd8:	636f6c6c 3030300a 35346631 20542030     lloc.0001f450 T 
   2bfe8:	636d656d 300a7268 66313030 20633634     memchr.0001f46c 
   2bff8:	656d2054 706d636d 3030300a 38346631     T memcmp.0001f48
   2c008:	20542061 636d656d 300a7970 66313030     a T memcpy.0001f
   2c018:	20306134 656d2054 766f6d6d 30300a65     4a0 T memmove.00
   2c028:	34663130 54203464 6d656d20 0a746573     01f4d4 T memset.
   2c038:	31303030 63633431 6d205420 5f687365     000114cc T mesh_
   2c048:	6d726f66 746b705f 3030300a 63613131     form_pkt.00011ac
   2c058:	20542030 6873656d 7465675f 78616d5f     0 T mesh_get_max
   2c068:	6d69745f 74756f65 6665625f 5f65726f     _timeout_before_
   2c078:	6b636170 665f7465 736c6961 3030300a     packet_fails.000
   2c088:	62343131 20542030 6873656d 7465675f     114b0 T mesh_get
   2c098:	646f6e5f 64615f65 73657264 30300a73     _node_address.00
   2c0a8:	37313130 54203061 73656d20 65675f68     0117a0 T mesh_ge
   2c0b8:	756e5f74 6f725f6d 6e697475 6e655f67     t_num_routing_en
   2c0c8:	65697274 30300a73 61313130 54206338     tries.00011a8c T
   2c0d8:	73656d20 65675f68 6e705f74 6b705f64      mesh_get_pnd_pk
   2c0e8:	6f635f74 0a746e75 31303030 34373731     t_count.00011774
   2c0f8:	6d205420 5f687365 5f746567 74756f72      T mesh_get_rout
   2c108:	5f676e69 72746e65 30300a79 61313130     ing_entry.00011a
   2c118:	54203465 73656d20 65675f68 74735f74     e4 T mesh_get_st
   2c128:	0a737461 31303030 63313631 6d205420     ats.0001161c T m
   2c138:	5f687365 74696e69 3030300a 31373131     esh_init.0001171
   2c148:	20542063 6873656d 6e65735f 30300a64     c T mesh_send.00
   2c158:	35313130 54203463 73656d20 65735f68     0115c4 T mesh_se
   2c168:	665f646e 656d726f 6b705f64 30300a74     nd_formed_pkt.00
   2c178:	37313130 54206362 73656d20 65735f68     0117bc T mesh_se
   2c188:	63697672 30300a65 34313130 54203839     rvice.00011498 T
   2c198:	73656d20 65735f68 6f6e5f74 615f6564      mesh_set_node_a
   2c1a8:	65726464 300a7373 31313030 20636234     ddress.000114bc 
   2c1b8:	656d2054 735f6873 725f7465 79727465     T mesh_set_retry
   2c1c8:	756f635f 300a746e 66313030 20346136     _count.0001f6a4 
   2c1d8:	6b6d2054 656d6974 3030300a 32643032     T mktime.00020d2
   2c1e8:	20542038 666e616e 3030300a 63613031     8 T nanf.00010ac
   2c1f8:	20542063 64726f6e 635f6369 7261656c     c T nordic_clear
   2c208:	6c6c615f 746e695f 6c665f72 0a736761     _all_intr_flags.
   2c218:	31303030 63396230 6e205420 6964726f     00010b9c T nordi
   2c228:	6c635f63 5f726165 6b636170 615f7465     c_clear_packet_a
   2c238:	6c696176 656c6261 616c665f 30300a67     vailable_flag.00
   2c248:	62303130 54206332 726f6e20 5f636964     010b2c T nordic_
   2c258:	61656c63 61705f72 74656b63 6e65735f     clear_packet_sen
   2c268:	6c665f74 300a6761 30313030 20386262     t_flag.00010bb8 
   2c278:	6f6e2054 63696472 756c665f 725f6873     T nordic_flush_r
   2c288:	69665f78 300a6f66 30313030 20343362     x_fifo.00010b34 
   2c298:	6f6e2054 63696472 756c665f 745f6873     T nordic_flush_t
   2c2a8:	69665f78 300a6f66 30313030 20633464     x_fifo.00010d4c 
   2c2b8:	6f6e2054 63696472 696e695f 30300a74     T nordic_init.00
   2c2c8:	62303130 54206338 726f6e20 5f636964     010b8c T nordic_
   2c2d8:	705f7369 656b6361 76615f74 616c6961     is_packet_availa
   2c2e8:	0a656c62 31303030 65626130 6e205420     ble.00010abe T n
   2c2f8:	6964726f 73695f63 5f78745f 6f666966     ordic_is_tx_fifo
   2c308:	706d655f 300a7974 30313030 20303462     _empty.00010b40 
   2c318:	6f6e2054 63696472 646f6d5f 735f3165     T nordic_mode1_s
   2c328:	5f646e65 676e6973 705f656c 656b6361     end_single_packe
   2c338:	30300a74 63303130 54203235 726f6e20     t.00010c52 T nor
   2c348:	5f636964 65776f70 6f645f72 300a6e77     dic_power_down.0
   2c358:	30313030 20613363 6f6e2054 63696472     0010c3a T nordic
   2c368:	776f705f 755f7265 30300a70 61303130     _power_up.00010a
   2c378:	54203464 726f6e20 5f636964 75657571     d4 T nordic_queu
   2c388:	78745f65 6669665f 30300a6f 62303130     e_tx_fifo.00010b
   2c398:	54203461 726f6e20 5f636964 64616572     a4 T nordic_read
   2c3a8:	5f78725f 6f666966 3030300a 66613031     _rx_fifo.00010af
   2c3b8:	20542038 64726f6e 725f6369 6f745f78     8 T nordic_rx_to
   2c3c8:	6174535f 3179626e 3030300a 31643031     _Stanby1.00010d1
   2c3d8:	20542063 64726f6e 735f6369 615f7465     c T nordic_set_a
   2c3e8:	5f726464 74646977 30300a68 63303130     ddr_width.00010c
   2c3f8:	54206338 726f6e20 5f636964 5f746573     8c T nordic_set_
   2c408:	5f726961 61746164 7461725f 30300a65     air_data_rate.00
   2c418:	63303130 54206364 726f6e20 5f636964     010cdc T nordic_
   2c428:	5f746573 6f747561 6172745f 696d736e     set_auto_transmi
   2c438:	706f5f74 6e6f6974 30300a73 63303130     t_options.00010c
   2c448:	54203836 726f6e20 5f636964 5f746573     68 T nordic_set_
   2c458:	6e616863 0a6c656e 31303030 32306330     channel.00010c02
   2c468:	6e205420 6964726f 65735f63 72635f74      T nordic_set_cr
   2c478:	30300a63 62303130 54203463 726f6e20     c.00010bc4 T nor
   2c488:	5f636964 5f746573 72746e69 6769735f     dic_set_intr_sig
   2c498:	736c616e 3030300a 30643031 20542038     nals.00010d08 T 
   2c4a8:	64726f6e 735f6369 705f7465 6f6c7961     nordic_set_paylo
   2c4b8:	665f6461 705f726f 0a657069 31303030     ad_for_pipe.0001
   2c4c8:	38626330 6e205420 6964726f 65735f63     0cb8 T nordic_se
   2c4d8:	6f705f74 5f726577 6576656c 30300a6c     t_power_level.00
   2c4e8:	64303130 54206533 726f6e20 5f636964     010d3e T nordic_
   2c4f8:	5f746573 705f7872 30657069 6464615f     set_rx_pipe0_add
   2c508:	30300a72 64303130 54203233 726f6e20     r.00010d32 T nor
   2c518:	5f636964 5f746573 615f7874 65726464     dic_set_tx_addre
   2c528:	300a7373 30313030 20383062 6f6e2054     ss.00010b08 T no
   2c538:	63696472 6174735f 7962646e 6f745f31     rdic_standby1_to
   2c548:	0a78725f 31303030 30656130 6e205420     _rx.00010ae0 T n
   2c558:	6964726f 74735f63 62646e61 745f3179     ordic_standby1_t
   2c568:	78745f6f 646f6d5f 300a3165 33313030     o_tx_mode1.00013
   2c578:	20303465 6f702054 5f726577 0a66666f     e40 T power_off.
   2c588:	32303030 63323830 70205420 746e6972     0002082c T print
   2c598:	30300a66 31323130 54203835 74757020     f.00012158 T put
   2c5a8:	7461665f 3030300a 31393032 20542034     _fat.00020914 T 
   2c5b8:	73747570 3030300a 33623831 20542030     puts.00018b30 T 
   2c5c8:	6f507670 614d7472 636f6c6c 3030300a     pvPortMalloc.000
   2c5d8:	30643931 20542038 61547670 6e496b73     19d08 T pvTaskIn
   2c5e8:	6d657263 4d746e65 78657475 646c6548     crementMutexHeld
   2c5f8:	6e756f43 30300a74 39383130 54203435     Count.00018954 T
   2c608:	50787020 4974726f 6974696e 73696c61      pxPortInitialis
   2c618:	61745365 300a6b63 30323030 20303864     eStack.00020d80 
   2c628:	61722054 0a657369 32303030 34373930     T raise.00020974
   2c638:	72205420 0a646e61 31303030 34366533      T rand.00013e64
   2c648:	72205420 5f727663 61746164 636f6c62      T rcvr_databloc
   2c658:	30300a6b 39303230 54203865 61657220     k.000209e8 T rea
   2c668:	636f6c6c 3030300a 36303831 20542034     lloc.00018064 T 
   2c678:	5f637472 5f746567 65746164 6d69745f     rtc_get_date_tim
   2c688:	74735f65 30300a72 65373130 54203465     e_str.00017ee4 T
   2c698:	63747220 7465675f 656d6974 3030300a      rtc_gettime.000
   2c6a8:	39663731 20542034 5f637472 74696e69     17f94 T rtc_init
   2c6b8:	3030300a 32663731 20542063 5f637472     .00017f2c T rtc_
   2c6c8:	74746573 0a656d69 31303030 38616138     settime.00018aa8
   2c6d8:	72205420 6e5f7374 665f746f 5f6c6c75      T rts_not_full_
   2c6e8:	63617274 65675f65 30300a74 61383130     trace_get.00018a
   2c6f8:	54203439 73747220 746f6e5f 6c75665f     94 T rts_not_ful
   2c708:	72745f6c 5f656361 74696e69 3030300a     l_trace_init.000
   2c718:	62613831 20542063 5f737472 5f746f6e     18abc T rts_not_
   2c728:	6c6c7566 6172745f 725f6563 74657365     full_trace_reset
   2c738:	3030300a 39623032 20542063 6e616373     .00020b9c T scan
   2c748:	30300a66 66333130 54206365 5f647320     f.00013fec T sd_
   2c758:	74696e69 696c6169 300a657a 34313030     initialize.00014
   2c768:	20346232 64732054 636f695f 300a6c74     2b4 T sd_ioctl.0
   2c778:	34313030 20383631 64732054 6165725f     0014168 T sd_rea
   2c788:	30300a64 31343130 54203835 5f647320     d.00014158 T sd_
   2c798:	74617473 300a7375 33313030 20386366     status.00013fc8 
   2c7a8:	64732054 6470755f 5f657461 64726163     T sd_update_card
   2c7b8:	6174735f 0a737574 31303030 30303234     _status.00014200
   2c7c8:	73205420 72775f64 0a657469 31303030      T sd_write.0001
   2c7d8:	63336633 73205420 5f646e65 0a646d63     3f3c T send_cmd.
   2c7e8:	32303030 63636230 73205420 62767465     00020bcc T setvb
   2c7f8:	300a6675 30323030 20303265 69732054     uf.00020e20 T si
   2c808:	6e697270 300a6674 30323030 20383665     printf.00020e68 
   2c818:	69732054 6e616373 30300a66 64303230     T siscanf.00020d
   2c828:	54203862 696e7320 6e697270 300a6674     b8 T sniprintf.0
   2c838:	30323030 20386264 6e732054 6e697270     0020db8 T snprin
   2c848:	300a6674 38313030 20306136 70732054     tf.000186a0 T sp
   2c858:	6c5f3169 0a6b636f 31303030 30643638     i1_lock.000186d0
   2c868:	73205420 5f316970 6f6c6e75 300a6b63      T spi1_unlock.0
   2c878:	30323030 20303265 70732054 746e6972     0020e20 T sprint
   2c888:	30300a66 39303230 54203432 61727320     f.00020924 T sra
   2c898:	300a646e 30323030 20383665 73732054     nd.00020e68 T ss
   2c8a8:	666e6163 3030300a 63353831 20542034     canf.000185c4 T 
   2c8b8:	31707373 616d645f 696e695f 30300a74     ssp1_dma_init.00
   2c8c8:	35383130 54203065 70737320 6d645f31     0185e0 T ssp1_dm
   2c8d8:	72745f61 66736e61 625f7265 6b636f6c     a_transfer_block
   2c8e8:	3030300a 34663032 20542036 63727473     .00020f46 T strc
   2c8f8:	63657361 300a706d 30323030 20323866     asecmp.00020f82 
   2c908:	74732054 74616372 3030300a 61663032     T strcat.00020fa
   2c918:	20542030 63727473 300a7268 30323030     0 T strchr.00020
   2c928:	20636266 74732054 706d6372 3030300a     fbc T strcmp.000
   2c938:	64663032 20542030 63727473 300a7970     20fd0 T strcpy.0
   2c948:	30323030 20306566 74732054 6e656c72     0020fe0 T strlen
   2c958:	3030300a 66663032 20542030 6e727473     .00020ff0 T strn
   2c968:	65736163 0a706d63 32303030 65333031     casecmp.0002103e
   2c978:	73205420 636e7274 300a706d 31323030      T strncmp.00021
   2c988:	20323630 74732054 70636e72 30300a79     062 T strncpy.00
   2c998:	30313230 54206338 72747320 72686372     02108c T strrchr
   2c9a8:	3030300a 62303132 20542032 73727473     .000210b2 T strs
   2c9b8:	300a7274 31323030 20323964 74732054     tr.00021d92 T st
   2c9c8:	6b6f7472 300a725f 31323030 20636265     rtok_r.00021ebc 
   2c9d8:	74732054 6c6f7472 3030300a 62343532     T strtol.000254b
   2c9e8:	20542034 74727473 0a6c756f 31303030     4 T strtoul.0001
   2c9f8:	63303230 73205420 675f7379 625f7465     020c T sys_get_b
   2ca08:	5f746f6f 656d6974 3030300a 30323031     oot_time.0001020
   2ca18:	20542030 5f737973 5f746567 746f6f62     0 T sys_get_boot
   2ca28:	7079745f 30300a65 37303130 54203862     _type.000107b8 T
   2ca38:	73797320 7465675f 7570635f 6f6c635f      sys_get_cpu_clo
   2ca48:	300a6b63 37313030 20636630 79732054     ck.000170fc T sy
   2ca58:	65675f73 656d5f74 6e695f6d 300a6f66     s_get_mem_info.0
   2ca68:	30313030 20386334 79732054 65675f73     00104c8 T sys_ge
   2ca78:	656d5f74 6e695f6d 735f6f66 300a7274     t_mem_info_str.0
   2ca88:	30313030 20633934 79732054 65675f73     001049c T sys_ge
   2ca98:	70755f74 656d6974 0a73755f 31303030     t_uptime_us.0001
   2caa8:	63303337 73205420 735f7379 695f7465     730c T sys_set_i
   2cab8:	6168636e 75665f72 300a636e 37313030     nchar_func.00017
   2cac8:	20303033 79732054 65735f73 756f5f74     300 T sys_set_ou
   2cad8:	61686374 75665f72 300a636e 37313030     tchar_func.00017
   2cae8:	20303433 79732054 6c616373 695f736c     340 T syscalls_i
   2caf8:	0a74696e 32303030 38656531 74205420     nit.00021ee8 T t
   2cb08:	0a656d69 31303030 63616335 74205420     ime.00015cac T t
   2cb18:	625f6d6c 72616e69 6f635f79 7261706d     lm_binary_compar
   2cb28:	6e6f5f65 30300a65 63353130 54203239     e_one.00015c92 T
   2cb38:	6d6c7420 6e69625f 5f797261 5f746567      tlm_binary_get_
   2cb48:	0a656e6f 31303030 63376335 74205420     one.00015c7c T t
   2cb58:	625f6d6c 72616e69 65675f79 69735f74     lm_binary_get_si
   2cb68:	6f5f657a 300a656e 35313030 20633234     ze_one.0001542c 
   2cb78:	6c742054 6f635f6d 6e6f706d 5f746e65     T tlm_component_
   2cb88:	0a646461 31303030 38393435 74205420     add.00015498 T t
   2cb98:	635f6d6c 6f706d6f 746e656e 726f665f     lm_component_for
   2cba8:	6361655f 30300a68 34353130 54203830     _each.00015408 T
   2cbb8:	6d6c7420 6d6f635f 656e6f70 675f746e      tlm_component_g
   2cbc8:	625f7465 616e5f79 300a656d 35313030     et_by_name.00015
   2cbd8:	20303032 6c742054 74735f6d 6d616572     200 T tlm_stream
   2cbe8:	6c6c615f 3030300a 33323531 20542030     _all.00015230 T 
   2cbf8:	5f6d6c74 65727473 645f6d61 646f6365     tlm_stream_decod
   2cc08:	69665f65 300a656c 35313030 20343731     e_file.00015174 
   2cc18:	6c742054 74735f6d 6d616572 656e6f5f     T tlm_stream_one
   2cc28:	3030300a 31323531 20542063 5f6d6c74     .0001521c T tlm_
   2cc38:	65727473 6f5f6d61 665f656e 0a656c69     stream_one_file.
   2cc48:	31303030 34393535 74205420 765f6d6c     00015594 T tlm_v
   2cc58:	61697261 5f656c62 5f746567 635f7962     ariable_get_by_c
   2cc68:	5f706d6f 5f646e61 656d616e 3030300a     omp_and_name.000
   2cc78:	36353531 20542063 5f6d6c74 69726176     1556c T tlm_vari
   2cc88:	656c6261 7465675f 5f79625f 656d616e     able_get_by_name
   2cc98:	3030300a 63623531 20542030 5f6d6c74     .00015bc0 T tlm_
   2cca8:	69726176 656c6261 7465675f 6c61765f     variable_get_val
   2ccb8:	300a6575 35313030 20306237 6c742054     ue.000157b0 T tl
   2ccc8:	61765f6d 62616972 705f656c 746e6972     m_variable_print
   2ccd8:	6c61765f 300a6575 35313030 20306634     _value.000154f0 
   2cce8:	6c742054 61765f6d 62616972 725f656c     T tlm_variable_r
   2ccf8:	73696765 0a726574 31303030 34633535     egister.000155c4
   2cd08:	74205420 765f6d6c 61697261 5f656c62      T tlm_variable_
   2cd18:	5f746573 756c6176 30300a65 66313230     set_value.00021f
   2cd28:	54203031 6c6f7420 7265776f 3030300a     10 T tolower.000
   2cd38:	32663132 20542061 70756f74 0a726570     21f2a T toupper.
   2cd48:	31303030 36653936 75205420 62645f30     000169e6 T u0_db
   2cd58:	72705f67 66746e69 3030300a 63393631     g_printf.000169c
   2cd68:	20542038 645f3075 705f6762 300a7475     8 T u0_dbg_put.0
   2cd78:	30313030 20306338 61752054 5f307472     00108c0 T uart0_
   2cd88:	63746567 0a726168 31303030 30363830     getchar.00010860
   2cd98:	75205420 30747261 696e695f 30300a74      T uart0_init.00
   2cda8:	38303130 54203864 72617520 705f3074     0108d8 T uart0_p
   2cdb8:	68637475 300a7261 30313030 20306638     utchar.000108f0 
   2cdc8:	61752054 5f307472 73747570 3030300a     T uart0_puts.000
   2cdd8:	63623831 20542061 694c7875 65527473     18bca T uxListRe
   2cde8:	65766f6d 3030300a 39313931 20542063     move.0001919c T 
   2cdf8:	75517875 4d657565 61737365 57736567     uxQueueMessagesW
   2ce08:	69746961 300a676e 39313030 20656131     aiting.000191ae 
   2ce18:	78752054 75657551 73654d65 65676173     T uxQueueMessage
   2ce28:	69615773 676e6974 6d6f7246 0a525349     sWaitingFromISR.
   2ce38:	31303030 34373539 75205420 73615478     00019574 T uxTas
   2ce48:	7465476b 626d754e 664f7265 6b736154     kGetNumberOfTask
   2ce58:	30300a73 62393130 54203863 54787520     s.00019bc8 T uxT
   2ce68:	476b7361 74537465 486b6361 57686769     askGetStackHighW
   2ce78:	72657461 6b72614d 3030300a 33623931     aterMark.00019b3
   2ce88:	20542030 61547875 65476b73 73795374     0 T uxTaskGetSys
   2ce98:	536d6574 65746174 3030300a 64613831     temState.00018ad
   2cea8:	20542030 70704176 6163696c 6e6f6974     0 T vApplication
   2ceb8:	656c6449 6b6f6f48 3030300a 30623831     IdleHook.00018b0
   2cec8:	20542063 70704176 6163696c 6e6f6974     c T vApplication
   2ced8:	6c6c614d 6146636f 64656c69 6b6f6f48     MallocFailedHook
   2cee8:	3030300a 64613831 20542034 70704176     .00018ad4 T vApp
   2cef8:	6163696c 6e6f6974 63617453 65764f6b     licationStackOve
   2cf08:	6f6c6672 6f6f4877 30300a6b 62383130     rflowHook.00018b
   2cf18:	54203836 694c7620 6e497473 61697469     68 T vListInitia
   2cf28:	6573696c 3030300a 37623831 20542065     lise.00018b7e T 
   2cf38:	73694c76 696e4974 6c616974 49657369     vListInitialiseI
   2cf48:	0a6d6574 31303030 63396238 76205420     tem.00018b9c T v
   2cf58:	7473694c 65736e49 300a7472 38313030     ListInsert.00018
   2cf68:	20343862 4c762054 49747369 7265736e     b84 T vListInser
   2cf78:	646e4574 3030300a 61393831 20542034     tEnd.000189a4 T 
   2cf88:	726f5076 646e4574 65686353 656c7564     vPortEndSchedule
   2cf98:	30300a72 39383130 54203861 6f507620     r.000189a8 T vPo
   2cfa8:	6e457472 43726574 69746972 0a6c6163     rtEnterCritical.
   2cfb8:	31303030 38633938 76205420 74726f50     000189c8 T vPort
   2cfc8:	74697845 74697243 6c616369 3030300a     ExitCritical.000
   2cfd8:	34623831 20542065 726f5076 65724674     18b4e T vPortFre
   2cfe8:	30300a65 39383130 54203038 6f507620     e.00018980 T vPo
   2cff8:	56537472 6e614843 72656c64 3030300a     rtSVCHandler.000
   2d008:	38643931 20542038 6e755276 656d6954     19d88 T vRunTime
   2d018:	74617453 45727349 7972746e 3030300a     StatIsrEntry.000
   2d028:	62643931 20542030 6e755276 656d6954     19db0 T vRunTime
   2d038:	74617453 45727349 0a746978 31303030     StatIsrExit.0001
   2d048:	63623739 76205420 6b736154 616c6544     97bc T vTaskDela
   2d058:	30300a79 37393130 54203436 61547620     y.00019764 T vTa
   2d068:	65446b73 5579616c 6c69746e 3030300a     skDelayUntil.000
   2d078:	32353931 20542063 73615476 646e456b     1952c T vTaskEnd
   2d088:	65686353 656c7564 30300a72 61393130     Scheduler.00019a
   2d098:	54203435 61547620 65476b73 666e4974     54 T vTaskGetInf
   2d0a8:	30300a6f 61393130 54203834 61547620     o.00019a48 T vTa
   2d0b8:	694d6b73 64657373 6c656959 30300a64     skMissedYield.00
   2d0c8:	39393130 54203435 61547620 6c506b73     019954 T vTaskPl
   2d0d8:	4f656361 6576456e 694c746e 300a7473     aceOnEventList.0
   2d0e8:	39313030 20383063 54762054 506b7361     0019c08 T vTaskP
   2d0f8:	726f6972 49797469 7265686e 300a7469     riorityInherit.0
   2d108:	39313030 20303264 54762054 526b7361     0019d20 T vTaskR
   2d118:	74657365 546e7552 53656d69 73746174     esetRunTimeStats
   2d128:	3030300a 65393931 20542034 73615476     .000199e4 T vTas
   2d138:	7465536b 656d6954 5374754f 65746174     kSetTimeOutState
   2d148:	3030300a 63343931 20542038 73615476     .000194c8 T vTas
   2d158:	6174536b 63537472 75646568 0a72656c     kStartScheduler.
   2d168:	31303030 34613839 76205420 6b736154     000198a4 T vTask
   2d178:	70737553 0a646e65 31303030 63343539     Suspend.0001954c
   2d188:	76205420 6b736154 70737553 41646e65      T vTaskSuspendA
   2d198:	300a6c6c 39313030 20636537 54762054     ll.000197ec T vT
   2d1a8:	536b7361 63746977 6e6f4368 74786574     askSwitchContext
   2d1b8:	3030300a 36343232 20542034 73697376     .00022464 T vsis
   2d1c8:	666e6163 3030300a 30343232 20542030     canf.00022400 T 
   2d1d8:	696e7376 6e697270 300a6674 32323030     vsniprintf.00022
   2d1e8:	20303034 73762054 6972706e 0a66746e     400 T vsnprintf.
   2d1f8:	32303030 34363432 76205420 61637373     00022464 T vssca
   2d208:	300a666e 33313030 20303165 61772054     nf.00013e10 T wa
   2d218:	725f7469 79646165 3030300a 36303131     it_ready.0001106
   2d228:	20542063 65726977 7373656c 7465675f     c T wireless_get
   2d238:	6b63615f 746b705f 3030300a 35303131     _ack_pkt.0001105
   2d248:	20542063 65726977 7373656c 7465675f     c T wireless_get
   2d258:	5f78725f 0a746b70 31303030 30313031     _rx_pkt.00011010
   2d268:	77205420 6c657269 5f737365 74696e69      T wireless_init
   2d278:	3030300a 37303131 20542063 65726977     .0001107c T wire
   2d288:	7373656c 7265735f 65636976 3030300a     less_service.000
   2d298:	65393831 20542030 726f5078 6e655074     189e0 T xPortPen
   2d2a8:	48565364 6c646e61 300a7265 38313030     dSVHandler.00018
   2d2b8:	20343661 50782054 5374726f 74726174     a64 T xPortStart
   2d2c8:	65686353 656c7564 30300a72 61383130     Scheduler.00018a
   2d2d8:	54203432 6f507820 79537472 63695473     24 T xPortSysTic
   2d2e8:	6e61486b 72656c64 3030300a 64643831     kHandler.00018dd
   2d2f8:	20542065 65755178 72436575 65746165     e T xQueueCreate
   2d308:	6e756f43 676e6974 616d6553 726f6870     CountingSemaphor
   2d318:	30300a65 65383130 54203466 75517820     e.00018ef4 T xQu
   2d328:	43657565 74616572 74754d65 300a7865     eueCreateMutex.0
   2d338:	38313030 20636164 51782054 65756575     0018dac T xQueue
   2d348:	656e6547 43636972 74616572 30300a65     GenericCreate.00
   2d358:	30393130 54203030 75517820 47657565     019000 T xQueueG
   2d368:	72656e65 65526369 76696563 30300a65     enericReceive.00
   2d378:	64383130 54203034 75517820 47657565     018d40 T xQueueG
   2d388:	72656e65 65526369 0a746573 31303030     enericReset.0001
   2d398:	30666438 78205420 75657551 6e654765     8df0 T xQueueGen
   2d3a8:	63697265 646e6553 3030300a 31663831     ericSend.00018f1
   2d3b8:	20542038 65755178 65476575 6972656e     8 T xQueueGeneri
   2d3c8:	6e655363 6f724664 5253496d 3030300a     cSendFromISR.000
   2d3d8:	39663831 20542038 65755178 69476575     18f98 T xQueueGi
   2d3e8:	72466576 53496d6f 30300a52 31393130     veFromISR.000191
   2d3f8:	54203433 75517820 52657565 69656365     34 T xQueueRecei
   2d408:	72466576 53496d6f 30300a52 31393130     veFromISR.000191
   2d418:	54203262 75517820 53657565 63656c65     b2 T xQueueSelec
   2d428:	6f724674 7465536d 3030300a 66393931     tFromSet.000199f
   2d438:	20542063 73615478 6568436b 6f466b63     c T xTaskCheckFo
   2d448:	6d695472 74754f65 3030300a 64323931     rTimeOut.000192d
   2d458:	20542030 73615478 6572436b 0a657461     0 T xTaskCreate.
   2d468:	31303030 38656239 78205420 6b736154     00019be8 T xTask
   2d478:	53746547 64656863 72656c75 74617453     GetSchedulerStat
   2d488:	30300a65 35393130 54206335 61547820     e.0001955c T xTa
   2d498:	65476b73 63695474 756f436b 300a746e     skGetTickCount.0
   2d4a8:	39313030 20383635 54782054 476b7361     0019568 T xTaskG
   2d4b8:	69547465 6f436b63 46746e75 496d6f72     etTickCountFromI
   2d4c8:	300a5253 39313030 20303835 54782054     SR.00019580 T xT
   2d4d8:	496b7361 6572636e 746e656d 6b636954     askIncrementTick
   2d4e8:	3030300a 39633931 20542038 73615478     .00019c98 T xTas
   2d4f8:	6972506b 7469726f 73694479 65686e69     kPriorityDisinhe
   2d508:	0a746972 31303030 34373939 78205420     rit.00019974 T x
   2d518:	6b736154 6f6d6552 72466576 76456d6f     TaskRemoveFromEv
   2d528:	4c746e65 0a747369 31303030 63383639     entList.0001968c
   2d538:	78205420 6b736154 75736552 6c41656d      T xTaskResumeAl
   2d548:	30300a6c 65333130 54203066 696d7820     l.00013ef0 T xmi
   2d558:	61645f74 6c626174 0a6b636f 00000000              t_datablock..
